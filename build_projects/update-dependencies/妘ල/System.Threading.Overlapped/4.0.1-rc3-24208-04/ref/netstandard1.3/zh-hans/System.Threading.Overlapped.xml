<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.Overlapped</name>
  </assembly>
  <members>
    <member name="T:System.Threading.IOCompletionCallback">
      <summary>当 I/O 操作在线程池上完成时接收错误代码、字节数和重叠值类型。</summary>
      <param name="errorCode">错误代码。</param>
      <param name="numBytes">传输的字节数。</param>
      <param name="pOVERLAP">
        <see cref="T:System.Threading.NativeOverlapped" />，表示指向本机重叠值类型的非托管指针。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Threading.NativeOverlapped">
      <summary>提供一种显式布局，它在非托管代码中可见，并将具有与 Win32 OVERLAPPED 结构相同的布局且在结尾有附加保留的字段。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Threading.NativeOverlapped.EventHandle">
      <summary>指定在操作完成后设置为终止状态的事件句柄。调用进程必须在调用任何重叠函数之前将此成员设置为零或有效事件句柄。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Threading.NativeOverlapped.InternalHigh">
      <summary>指定传输的数据长度。保留给操作系统使用。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Threading.NativeOverlapped.InternalLow">
      <summary>指定系统相关的状态。保留给操作系统使用。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Threading.NativeOverlapped.OffsetHigh">
      <summary>指定开始传输的字节偏移量中的高字。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Threading.NativeOverlapped.OffsetLow">
      <summary>指定开始传输的文件位置。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Threading.Overlapped">
      <summary>提供一个 Win32 OVERLAPPED 结构的托管表示形式，包括将信息从 <see cref="T:System.Threading.Overlapped" /> 实例传输到 <see cref="T:System.Threading.NativeOverlapped" /> 结构的方法。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor">
      <summary>初始化 <see cref="T:System.Threading.Overlapped" /> 类的新的空实例。</summary>
    </member>
    <member name="P:System.Threading.Overlapped.AsyncResult">
      <summary>获取或设置提供 I/O 操作的状态信息的对象。</summary>
      <returns>实现 <see cref="T:System.IAsyncResult" /> 接口的对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)">
      <summary>释放与 <see cref="Overload:System.Threading.Overlapped.Pack" /> 方法分配的本机重叠结构关联的非托管内存。</summary>
      <param name="nativeOverlappedPtr">指向要释放的 <see cref="T:System.Threading.NativeOverlapped" /> 结构的指针。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nativeOverlappedPtr" /> 为 null。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Threading.Overlapped.OffsetHigh">
      <summary>获取或设置启动传输的文件位置的高序位字。文件位置是距文件起始处的字节偏移量。</summary>
      <returns>表示文件位置高位字的 <see cref="T:System.Int32" /> 值。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Threading.Overlapped.OffsetLow">
      <summary>获取或设置启动传输的文件位置的低序位字。文件位置是距文件起始处的字节偏移量。</summary>
      <returns>表示文件位置低位字的 <see cref="T:System.Int32" /> 值。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)">
      <summary>将当前实例打包为一个 <see cref="T:System.Threading.NativeOverlapped" /> 结构，并指定当异步 I/O 操作完成时调用的委托，以及作为缓冲区的托管对象。</summary>
      <returns>指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</returns>
      <param name="iocb">一个 <see cref="T:System.Threading.IOCompletionCallback" /> 委托，表示在异步 I/O 操作完成时调用的回调方法。</param>
      <param name="userData">对象或对象的数组，表示用于操作的输入或输出缓冲区。每个对象都表示一个缓冲区，例如字节数组。</param>
      <exception cref="T:System.InvalidOperationException">已对当前的 <see cref="T:System.Threading.Overlapped" /> 打包。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)">
      <summary>将指定的非托管 <see cref="T:System.Threading.NativeOverlapped" /> 结构解压缩为 <see cref="T:System.Threading.Overlapped" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Threading.Overlapped" /> 对象，包含从本机结构解压缩的信息。</returns>
      <param name="nativeOverlappedPtr">指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nativeOverlappedPtr" /> 为 null。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)">
      <summary>将当前实例打包为一个 <see cref="T:System.Threading.NativeOverlapped" /> 结构，并指定当异步 I/O 操作完成时调用的委托，以及作为缓冲区的托管对象。不传播该调用堆栈。</summary>
      <returns>指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</returns>
      <param name="iocb">一个 <see cref="T:System.Threading.IOCompletionCallback" /> 委托，表示在异步 I/O 操作完成时调用的回调方法。</param>
      <param name="userData">对象或对象的数组，表示用于操作的输入或输出缓冲区。每个对象都表示一个缓冲区，例如字节数组。</param>
      <exception cref="T:System.Security.SecurityException">调用方没有所要求的权限。</exception>
      <exception cref="T:System.InvalidOperationException">已对当前的 <see cref="T:System.Threading.Overlapped" /> 打包。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.Threading.PreAllocatedOverlapped"></member>
    <member name="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)"></member>
    <member name="M:System.Threading.PreAllocatedOverlapped.Dispose"></member>
    <member name="T:System.Threading.ThreadPoolBoundHandle"></member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)"></member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.PreAllocatedOverlapped)"></member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.BindHandle(System.Runtime.InteropServices.SafeHandle)"></member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.Dispose"></member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped(System.Threading.NativeOverlapped*)"></member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState(System.Threading.NativeOverlapped*)"></member>
    <member name="P:System.Threading.ThreadPoolBoundHandle.Handle"></member>
  </members>
</doc>