<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.Overlapped</name>
  </assembly>
  <members>
    <member name="T:System.Threading.IOCompletionCallback">
      <summary>當執行緒集區的 I/O 作業完成時，可接收錯誤碼、位元組的數目和重疊的實值型別 (Value Type)。</summary>
      <param name="errorCode">錯誤碼。</param>
      <param name="numBytes">傳輸的位元組數目。</param>
      <param name="pOVERLAP">
        <see cref="T:System.Threading.NativeOverlapped" />，代表原生 (Native) 重疊實值型別的 Unmanaged 指標。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Threading.NativeOverlapped">
      <summary>提供明確配置，這套配置從 Unmanaged 程式碼可以看出，並且配置和 Win32 OVERLAPPED 結構相同，結尾還外加有保留欄位。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Threading.NativeOverlapped.EventHandle">
      <summary>指定事件的控制碼，當作業完成時會被設定為信號狀態。呼叫程序必須先把這個成員設定為零或是有效的事件控制代碼，才能呼叫重疊的函式。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Threading.NativeOverlapped.InternalHigh">
      <summary>指定所傳輸資料的長度。保留供作業系統使用。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Threading.NativeOverlapped.InternalLow">
      <summary>指定系統相依的狀態。保留供作業系統使用。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Threading.NativeOverlapped.OffsetHigh">
      <summary>指定傳輸開始之處位元組的位移的高位字。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Threading.NativeOverlapped.OffsetLow">
      <summary>指定開始傳輸的檔案位置。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Threading.Overlapped">
      <summary>提供 Win32 OVERLAPPED 結構的 Managed 表示，包括將資訊從 <see cref="T:System.Threading.Overlapped" /> 執行個體傳輸到 <see cref="T:System.Threading.NativeOverlapped" /> 結構的方法。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor">
      <summary>初始化 <see cref="T:System.Threading.Overlapped" /> 類別的新的空執行個體。</summary>
    </member>
    <member name="P:System.Threading.Overlapped.AsyncResult">
      <summary>取得或設定提供 I/O 作業狀態資訊的物件。</summary>
      <returns>實作 <see cref="T:System.IAsyncResult" /> 介面的物件</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)">
      <summary>釋放 Unmanaged 記憶體，而此記憶體與 <see cref="Overload:System.Threading.Overlapped.Pack" /> 方法所配置的原生重疊結構相關聯。</summary>
      <param name="nativeOverlappedPtr">要釋放的 <see cref="T:System.Threading.NativeOverlapped" /> 結構的指標。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nativeOverlappedPtr" /> 為 null。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Threading.Overlapped.OffsetHigh">
      <summary>取得或設定要開始傳輸之檔案位置的高序位文字。檔案位置在離檔案開頭一個位元組位移的地方。</summary>
      <returns>
        <see cref="T:System.Int32" /> 值，表示檔案位置的高位文字。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Threading.Overlapped.OffsetLow">
      <summary>取得或設定要開始傳輸之檔案位置的低序位文字。檔案位置在離檔案開頭一個位元組位移的地方。</summary>
      <returns>
        <see cref="T:System.Int32" /> 值，表示檔案位置的低位文字。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)">
      <summary>將目前的執行個體封裝到 <see cref="T:System.Threading.NativeOverlapped" /> 結構，指定非同步的 I/O 作業完成時所叫用的委派，以及當做緩衝區的 Managed 物件。</summary>
      <returns>
        <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標。</returns>
      <param name="iocb">
        <see cref="T:System.Threading.IOCompletionCallback" /> 委派，表示非同步的 I/O 作業完成時所要叫用的回呼方法。</param>
      <param name="userData">物件或物件陣列，表示作業的輸入或輸出緩衝區。每個物件代表一個緩衝區，例如位元組陣列。</param>
      <exception cref="T:System.InvalidOperationException">目前的 <see cref="T:System.Threading.Overlapped" /> 已被封裝。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)">
      <summary>將指定 Unmanaged <see cref="T:System.Threading.NativeOverlapped" /> 結構解除封裝到 Managed <see cref="T:System.Threading.Overlapped" /> 物件。</summary>
      <returns>
        <see cref="T:System.Threading.Overlapped" /> 物件，包含從原生結構解除封裝的資訊。</returns>
      <param name="nativeOverlappedPtr">
        <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nativeOverlappedPtr" /> 為 null。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)">
      <summary>將目前的執行個體封裝到 <see cref="T:System.Threading.NativeOverlapped" /> 結構，指定非同步的 I/O 作業完成時所叫用的委派，以及當做緩衝區的 Managed 物件。不會散佈呼叫堆疊。</summary>
      <returns>
        <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標。</returns>
      <param name="iocb">
        <see cref="T:System.Threading.IOCompletionCallback" /> 委派，表示非同步的 I/O 作業完成時所要叫用的回呼方法。</param>
      <param name="userData">物件或物件陣列，表示作業的輸入或輸出緩衝區。每個物件代表一個緩衝區，例如位元組陣列。</param>
      <exception cref="T:System.Security.SecurityException">呼叫端沒有必要的使用權限。</exception>
      <exception cref="T:System.InvalidOperationException">目前的 <see cref="T:System.Threading.Overlapped" /> 已被封裝。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.Threading.PreAllocatedOverlapped"></member>
    <member name="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)"></member>
    <member name="M:System.Threading.PreAllocatedOverlapped.Dispose"></member>
    <member name="T:System.Threading.ThreadPoolBoundHandle"></member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)"></member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.PreAllocatedOverlapped)"></member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.BindHandle(System.Runtime.InteropServices.SafeHandle)"></member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.Dispose"></member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped(System.Threading.NativeOverlapped*)"></member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState(System.Threading.NativeOverlapped*)"></member>
    <member name="P:System.Threading.ThreadPoolBoundHandle.Handle"></member>
  </members>
</doc>