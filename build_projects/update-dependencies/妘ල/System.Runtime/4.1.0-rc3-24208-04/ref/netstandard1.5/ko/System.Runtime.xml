<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime</name>
  </assembly>
  <members>
    <member name="T:System.Action">
      <summary>매개 변수가 없고 값을 반환하지 않는 메서드를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Action.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action.BeginInvoke(System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action.Invoke"></member>
    <member name="T:System.Action`1">
      <summary>매개 변수가 하나이고 값을 반환하지 않는 메서드를 캡슐화합니다.이 유형의 .NET Framework 소스 코드를 찾아보려면 참조 소스를 참조하세요.</summary>
      <typeparam name="T">이 대리자로 캡슐화되는 메서드의 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Action`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`1.BeginInvoke(`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`1.Invoke(`0)"></member>
    <member name="T:System.Action`10">
      <summary>매개 변수가 10개이고 값을 반환하지 않는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T9">이 대리자로 캡슐화되는 메서드의 아홉 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T10">이 대리자로 캡슐화되는 메서드의 10번째 매개 변수 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`10.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`10.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`10.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`10.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)"></member>
    <member name="T:System.Action`11">
      <summary>매개 변수가 11개이고 값을 반환하지 않는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T9">이 대리자로 캡슐화되는 메서드의 아홉 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T10">이 대리자로 캡슐화되는 메서드의 10번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T11">이 대리자로 캡슐화되는 메서드의 11번째 매개 변수 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`11.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`11.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`11.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`11.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)"></member>
    <member name="T:System.Action`12">
      <summary>매개 변수가 12개이고 값을 반환하지 않는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T9">이 대리자로 캡슐화되는 메서드의 아홉 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T10">이 대리자로 캡슐화되는 메서드의 10번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T11">이 대리자로 캡슐화되는 메서드의 11번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T12">이 대리자로 캡슐화되는 메서드의 12번째 매개 변수 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`12.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`12.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`12.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`12.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)"></member>
    <member name="T:System.Action`13">
      <summary>매개 변수가 13개이고 값을 반환하지 않는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T9">이 대리자로 캡슐화되는 메서드의 아홉 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T10">이 대리자로 캡슐화되는 메서드의 10번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T11">이 대리자로 캡슐화되는 메서드의 11번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T12">이 대리자로 캡슐화되는 메서드의 12번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T13">이 대리자로 캡슐화되는 메서드의 13번째 매개 변수 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`13.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`13.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`13.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`13.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)"></member>
    <member name="T:System.Action`14">
      <summary>매개 변수가 14개이고 값을 반환하지 않는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T9">이 대리자로 캡슐화되는 메서드의 아홉 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T10">이 대리자로 캡슐화되는 메서드의 10번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T11">이 대리자로 캡슐화되는 메서드의 11번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T12">이 대리자로 캡슐화되는 메서드의 12번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T13">이 대리자로 캡슐화되는 메서드의 13번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T14">이 대리자로 캡슐화되는 메서드의 14번째 매개 변수 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`14.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`14.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`14.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`14.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)"></member>
    <member name="T:System.Action`15">
      <summary>매개 변수가 15개이고 값을 반환하지 않는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T9">이 대리자로 캡슐화되는 메서드의 아홉 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T10">이 대리자로 캡슐화되는 메서드의 10번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T11">이 대리자로 캡슐화되는 메서드의 11번째 매개 변수 형식입니다. </typeparam>
      <typeparam name="T12">이 대리자로 캡슐화되는 메서드의 12번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T13">이 대리자로 캡슐화되는 메서드의 13번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T14">이 대리자로 캡슐화되는 메서드의 14번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T15">이 대리자로 캡슐화되는 메서드의 15번째 매개 변수 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`15.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`15.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`15.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`15.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)"></member>
    <member name="T:System.Action`16">
      <summary>매개 변수가 16개이고 값을 반환하지 않는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T9">이 대리자로 캡슐화되는 메서드의 아홉 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T10">이 대리자로 캡슐화되는 메서드의 10번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T11">이 대리자로 캡슐화되는 메서드의 11번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T12">이 대리자로 캡슐화되는 메서드의 12번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T13">이 대리자로 캡슐화되는 메서드의 13번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T14">이 대리자로 캡슐화되는 메서드의 14번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T15">이 대리자로 캡슐화되는 메서드의 15번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T16">이 대리자로 캡슐화되는 메서드의 16번째 매개 변수 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`16.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`16.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`16.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`16.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)"></member>
    <member name="T:System.Action`2">
      <summary>매개 변수가 두 개이고 값을 반환하지 않는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`2.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`2.BeginInvoke(`0,`1,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`2.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`2.Invoke(`0,`1)"></member>
    <member name="T:System.Action`3">
      <summary>매개 변수가 3개이고 값을 반환하지 않는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`3.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`3.BeginInvoke(`0,`1,`2,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`3.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`3.Invoke(`0,`1,`2)"></member>
    <member name="T:System.Action`4">
      <summary>매개 변수가 네 개이고 값을 반환하지 않는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`4.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`4.BeginInvoke(`0,`1,`2,`3,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`4.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`4.Invoke(`0,`1,`2,`3)"></member>
    <member name="T:System.Action`5">
      <summary>매개 변수가 5개이고 값을 반환하지 않는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`5.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`5.BeginInvoke(`0,`1,`2,`3,`4,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`5.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`5.Invoke(`0,`1,`2,`3,`4)"></member>
    <member name="T:System.Action`6">
      <summary>매개 변수가 6개이고 값을 반환하지 않는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`6.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`6.BeginInvoke(`0,`1,`2,`3,`4,`5,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`6.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`6.Invoke(`0,`1,`2,`3,`4,`5)"></member>
    <member name="T:System.Action`7">
      <summary>매개 변수가 7개이고 값을 반환하지 않는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`7.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`7.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`7.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`7.Invoke(`0,`1,`2,`3,`4,`5,`6)"></member>
    <member name="T:System.Action`8">
      <summary>매개 변수가 8개이고 값을 반환하지 않는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`8.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`8.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`8.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`8.Invoke(`0,`1,`2,`3,`4,`5,`6,`7)"></member>
    <member name="T:System.Action`9">
      <summary>매개 변수가 아홉 개이고 값을 반환하지 않는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T9">이 대리자로 캡슐화되는 메서드의 아홉 번째 매개 변수 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`9.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`9.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`9.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`9.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8)"></member>
    <member name="T:System.Activator">
      <summary>개체의 형식을 로컬 또는 원격으로 만들거나 기존 원격 개체에 대한 참조를 얻는 메서드를 포함합니다.이 클래스는 상속될 수 없습니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Activator.CreateInstance``1">
      <summary>매개 변수가 없는 생성자를 사용하여 지정된 제네릭 형식 매개 변수로 지정된 형식의 인스턴스를 만듭니다.</summary>
      <returns>새로 만든 개체에 대한 참조입니다.</returns>
      <typeparam name="T">만들 형식입니다.</typeparam>
      <exception cref="T:System.MissingMethodException">에 .NET for Windows Store apps 또는 이식 가능한 클래스 라이브러리, 기본 클래스 예외를 catch <see cref="T:System.MissingMemberException" />, 대신 합니다.<paramref name="T" />에 지정된 형식에는 매개 변수가 없는 생성자가 없습니다. </exception>
    </member>
    <member name="M:System.Activator.CreateInstance(System.Type)">
      <summary>해당 형식의 기본 생성자를 사용하여 지정된 형식의 인스턴스를 만듭니다.</summary>
      <returns>새로 만든 개체에 대한 참조입니다.</returns>
      <param name="type">만들 개체의 형식입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" />가 RuntimeType가 아닌 경우 또는<paramref name="type" />이 개방형 제네릭 형식인 경우. 즉, <see cref="P:System.Type.ContainsGenericParameters" /> 속성이 true를 반환하는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="type" />이 <see cref="T:System.Reflection.Emit.TypeBuilder" />일 수 없는 경우또는 <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식이나 이러한 형식의 배열을 만들 수 없습니다.또는<paramref name="type" />이 포함된 어셈블리는 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />로 만든 동적 어셈블리입니다. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">호출되는 생성자가 예외를 throw하는 경우 </exception>
      <exception cref="T:System.MethodAccessException">에 .NET for Windows Store apps 또는 이식 가능한 클래스 라이브러리, 기본 클래스 예외를 catch <see cref="T:System.MemberAccessException" />, 대신 합니다.호출자에게 이 생성자를 호출할 수 있는 권한이 없는 경우 </exception>
      <exception cref="T:System.MemberAccessException">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버를 런타임에 바인딩 메커니즘으로 호출한 경우 </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">COM 형식을 <see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 얻지 못한 경우 </exception>
      <exception cref="T:System.MissingMethodException">에 .NET for Windows Store apps 또는 이식 가능한 클래스 라이브러리, 기본 클래스 예외를 catch <see cref="T:System.MissingMemberException" />, 대신 합니다.일치하는 public 생성자를 찾을 수 없는 경우 </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
        <paramref name="type" />이 COM 개체이지만 형식을 가져오는 데 사용된 클래스 식별자가 잘못되었거나 식별된 클래스가 등록되지 않은 경우 </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="type" />이 유효한 형식이 아닌 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.CreateInstance(System.Type,System.Object[])">
      <summary>지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 형식의 인스턴스를 만듭니다.</summary>
      <returns>새로 만든 개체에 대한 참조입니다.</returns>
      <param name="type">만들 개체의 형식입니다. </param>
      <param name="args">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.<paramref name="args" />이(가) 빈 배열이거나 null이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" />가 RuntimeType가 아닌 경우 또는<paramref name="type" />이 개방형 제네릭 형식인 경우. 즉, <see cref="P:System.Type.ContainsGenericParameters" /> 속성이 true를 반환하는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="type" />이 <see cref="T:System.Reflection.Emit.TypeBuilder" />일 수 없는 경우또는 <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식이나 이러한 형식의 배열을 만들 수 없습니다. 또는<paramref name="type" />이 포함된 어셈블리는 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />로 만든 동적 어셈블리입니다.또는<paramref name="args" />와 가장 일치하는 생성자에 varargs 인수가 있는 경우 </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">호출되는 생성자가 예외를 throw하는 경우 </exception>
      <exception cref="T:System.MethodAccessException">에 .NET for Windows Store apps 또는 이식 가능한 클래스 라이브러리, 기본 클래스 예외를 catch <see cref="T:System.MemberAccessException" />, 대신 합니다.호출자에게 이 생성자를 호출할 수 있는 권한이 없는 경우 </exception>
      <exception cref="T:System.MemberAccessException">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버를 런타임에 바인딩 메커니즘으로 호출한 경우 </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">COM 형식을 <see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 얻지 못한 경우 </exception>
      <exception cref="T:System.MissingMethodException">에 .NET for Windows Store apps 또는 이식 가능한 클래스 라이브러리, 기본 클래스 예외를 catch <see cref="T:System.MissingMemberException" />, 대신 합니다.일치하는 public 생성자를 찾을 수 없는 경우 </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
        <paramref name="type" />이 COM 개체이지만 형식을 가져오는 데 사용된 클래스 식별자가 잘못되었거나 식별된 클래스가 등록되지 않은 경우 </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="type" />이 유효한 형식이 아닌 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, RemotingConfiguration" />
      </PermissionSet>
    </member>
    <member name="T:System.ArgumentException">
      <summary>메서드에 제공된 인수 중 하나가 유효하지 않을 때 throw되는 예외입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ArgumentException.#ctor">
      <summary>
        <see cref="T:System.ArgumentException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.ArgumentException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.ArgumentException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외의 원인인 예외입니다.<paramref name="innerException" /> 매개 변수가 null 참조가 아닌 경우 내부 예외를 처리하는 catch 블록에서 현재 예외가 발생합니다.</param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String,System.String)">
      <summary>지정된 오류 메시지와 이 예외를 throw한 매개 변수의 이름을 사용하여 <see cref="T:System.ArgumentException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="paramName">현재 예외를 발생시킨 매개 변수의 이름입니다. </param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String,System.String,System.Exception)">
      <summary>지정된 오류 메시지, 매개 변수 이름 및 이 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.ArgumentException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="paramName">현재 예외를 발생시킨 매개 변수의 이름입니다. </param>
      <param name="innerException">현재 예외의 원인인 예외입니다.<paramref name="innerException" /> 매개 변수가 null 참조가 아닌 경우 내부 예외를 처리하는 catch 블록에서 현재 예외가 발생합니다.</param>
    </member>
    <member name="P:System.ArgumentException.Message">
      <summary>오류 메시지 및 매개 변수 이름을 가져오거나, 매개 변수 이름이 설정되지 않은 경우에는 오류 메시지만 가져옵니다.</summary>
      <returns>예외를 자세히 설명하는 텍스트 문자열입니다.이 속성 값은 다음의 두 가지 형식 중 하나를 사용합니다.조건 값 <paramref name="paramName" />이 null 참조(Visual Basic에서는 Nothing)이거나 길이가 0입니다. 해당 생성자에 전달된 <paramref name="message" /> 문자열입니다. <paramref name="paramName" />이 null 참조(Visual Basic에서는 Nothing)가 아니고 길이가 0보다 큽니다. 잘못된 매개 변수의 이름이 추가된 <paramref name="message" /> 문자열입니다. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ArgumentException.ParamName">
      <summary>이 예외를 발생시킨 매개 변수의 이름을 가져옵니다.</summary>
      <returns>매개 변수 이름입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.ArgumentNullException">
      <summary>null 참조를 올바른 인수로 받아들이지 않는 메서드에 null 참조(Visual Basic에서는 Nothing)가 전달되면 throw되는 예외입니다. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgumentNullException.#ctor">
      <summary>
        <see cref="T:System.ArgumentNullException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.String)">
      <summary>이 예외를 throw한 매개 변수의 이름을 사용하여 <see cref="T:System.ArgumentNullException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="paramName">예외를 발생시킨 매개 변수의 이름입니다. </param>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 이 예외를 발생시킨 예외를 사용하여 <see cref="T:System.ArgumentNullException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">이 예외의 원인을 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외를 발생시킨 예외입니다. 내부 예외를 지정하지 않은 경우 null 참조(Visual Basic의 경우 Nothing)입니다. </param>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.String,System.String)">
      <summary>지정된 오류 메시지와 이 예외를 throw한 매개 변수의 이름을 사용하여 <see cref="T:System.ArgumentNullException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="paramName">예외를 발생시킨 매개 변수의 이름입니다. </param>
      <param name="message">오류를 설명하는 메시지입니다. </param>
    </member>
    <member name="T:System.ArgumentOutOfRangeException">
      <summary>호출된 메서드에서 정의된 허용 가능한 값 범위 밖에 인수 값이 있는 경우 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor">
      <summary>
        <see cref="T:System.ArgumentOutOfRangeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
      <summary>이 예외를 throw한 매개 변수의 이름을 사용하여 <see cref="T:System.ArgumentOutOfRangeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="paramName">이 예외를 발생시킨 매개 변수의 이름입니다. </param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 이 예외를 발생시킨 예외를 사용하여 <see cref="T:System.ArgumentOutOfRangeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">이 예외의 원인을 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외를 발생시킨 예외입니다. 내부 예외를 지정하지 않은 경우 null 참조(Visual Basic의 경우 Nothing)입니다. </param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
      <summary>매개 변수 이름, 인수 값 및 지정된 오류 메시지를 사용하여 <see cref="T:System.ArgumentOutOfRangeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="paramName">예외를 발생시킨 매개 변수의 이름입니다. </param>
      <param name="actualValue">이 예외를 발생시킨 인수의 값입니다. </param>
      <param name="message">오류를 설명하는 메시지입니다. </param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
      <summary>이 예외를 발생시킨 매개 변수의 이름과 지정된 오류 메시지를 사용하여 <see cref="T:System.ArgumentOutOfRangeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="paramName">예외를 발생시킨 매개 변수의 이름입니다. </param>
      <param name="message">오류를 설명하는 메시지입니다. </param>
    </member>
    <member name="P:System.ArgumentOutOfRangeException.ActualValue">
      <summary>이 예외를 발생시킨 인수 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Exception" />을 발생시킨 매개 변수의 값을 포함하는 Object입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ArgumentOutOfRangeException.Message">
      <summary>오류 메시지 및 잘못된 인수 값의 문자열 표현을 가져오거나, 인수 값이 Null인 경우 오류 메시지만 가져옵니다.</summary>
      <returns>이 예외에 대한 텍스트 메시지입니다.이 속성 값은 다음의 두 가지 형식 중 하나를 사용합니다.조건 값 <paramref name="actualValue" />은 null입니다. 해당 생성자에 전달된 <paramref name="message" /> 문자열입니다. <paramref name="actualValue" />는 null이 아닙니다. 잘못된 인수 값의 문자열 표현이 추가된 <paramref name="message" /> 문자열입니다. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ArithmeticException">
      <summary>산술, 캐스팅 또는 변환 연산의 오류에 대해 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArithmeticException.#ctor">
      <summary>
        <see cref="T:System.ArithmeticException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ArithmeticException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.ArithmeticException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다. </param>
    </member>
    <member name="M:System.ArithmeticException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.ArithmeticException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null 참조가 아닌 경우 내부 예외를 처리하는 catch 블록에서 현재 예외가 발생합니다.</param>
    </member>
    <member name="T:System.Array">
      <summary>배열을 만들고, 조작하고, 검색 및 정렬하여 공용 언어 런타임에서 모든 배열의 기본 클래스 역할을 수행하도록 하는 메서드를 제공합니다.이 형식에 대 한.NET Framework 소스 코드를 찾아보려면 참조는 참조 원본.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object)">
      <summary>배열의 각 요소 및 지정한 값에서 구현되는 <see cref="T:System.IComparable" /> 인터페이스를 사용하여 1차원으로 정렬된 배열의 요소 범위에서 값을 검색합니다.</summary>
      <returns>지정된 <paramref name="array" />에 <paramref name="value" />가 있는 경우 해당 <paramref name="value" />의 인덱스입니다.<paramref name="value" />가 없고 <paramref name="value" />가 <paramref name="array" />에 있는 하나 이상의 요소보다 작은 경우 <paramref name="value" />보다 큰 첫째 요소 인덱스의 비트 보수인 음수입니다.<paramref name="value" />가 없고 <paramref name="value" />가 <paramref name="array" />에 있는 요소보다 큰 경우 마지막 요소에 1을 더한 인덱스의 비트 보수인 음수입니다.</returns>
      <param name="array">검색할 1차원으로 정렬된 <see cref="T:System.Array" />입니다.</param>
      <param name="index">검색할 범위의 시작 인덱스입니다.</param>
      <param name="length">검색할 범위의 길이입니다.</param>
      <param name="value">검색할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" />가 다차원 배열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="array" />의 하한보다 작은 경우또는<paramref name="length" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> 및 <paramref name="length" />에서 <paramref name="array" />에 대한 올바른 범위를 지정하지 않은 경우또는<paramref name="value" />의 형식이 <paramref name="array" />의 요소와 호환되지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" />가 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않고 검색에서 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않는 요소를 발견하는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
      <summary>지정한 <see cref="T:System.Collections.IComparer" /> 인터페이스를 사용하여 1차원으로 정렬된 배열의 요소 범위에서 값을 검색합니다.</summary>
      <returns>지정된 <paramref name="array" />에 <paramref name="value" />가 있는 경우 해당 <paramref name="value" />의 인덱스입니다.<paramref name="value" />가 없고 <paramref name="value" />가 <paramref name="array" />에 있는 하나 이상의 요소보다 작은 경우 <paramref name="value" />보다 큰 첫째 요소 인덱스의 비트 보수인 음수입니다.<paramref name="value" />가 없고 <paramref name="value" />가 <paramref name="array" />에 있는 요소보다 큰 경우 마지막 요소에 1을 더한 인덱스의 비트 보수인 음수입니다.</returns>
      <param name="array">검색할 1차원으로 정렬된 <see cref="T:System.Array" />입니다.</param>
      <param name="index">검색할 범위의 시작 인덱스입니다.</param>
      <param name="length">검색할 범위의 길이입니다.</param>
      <param name="value">검색할 개체입니다.</param>
      <param name="comparer">요소를 비교할 때 사용하는 <see cref="T:System.Collections.IComparer" /> 구현입니다.또는 각 요소의 <see cref="T:System.IComparable" /> 구현을 사용하면 null입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" />가 다차원 배열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="array" />의 하한보다 작은 경우또는<paramref name="length" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> 및 <paramref name="length" />에서 <paramref name="array" />에 대한 올바른 범위를 지정하지 않은 경우또는<paramref name="comparer" />가 null이고 <paramref name="value" />의 형식이 <paramref name="array" />의 요소와 호환되지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" />가 null이고, <paramref name="value" />가 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않으며, 검색에서 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않는 요소를 발견하는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Object)">
      <summary>배열의 각 요소 및 지정한 개체에서 구현되는 <see cref="T:System.IComparable" /> 인터페이스를 사용하여 1차원으로 정렬된 배열에서 특정 요소를 검색합니다.</summary>
      <returns>지정된 <paramref name="array" />에 <paramref name="value" />가 있는 경우 해당 <paramref name="value" />의 인덱스입니다.<paramref name="value" />가 없고 <paramref name="value" />가 <paramref name="array" />에 있는 하나 이상의 요소보다 작은 경우 <paramref name="value" />보다 큰 첫째 요소 인덱스의 비트 보수인 음수입니다.<paramref name="value" />가 없고 <paramref name="value" />가 <paramref name="array" />에 있는 요소보다 큰 경우 마지막 요소에 1을 더한 인덱스의 비트 보수인 음수입니다.</returns>
      <param name="array">검색할 1차원으로 정렬된 <see cref="T:System.Array" />입니다.</param>
      <param name="value">검색할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" />가 다차원 배열인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />의 형식이 <paramref name="array" />의 요소와 호환되지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" />가 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않고 검색에서 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않는 요소를 발견하는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Object,System.Collections.IComparer)">
      <summary>지정한 <see cref="T:System.Collections.IComparer" /> 인터페이스를 사용하여 1차원으로 정렬된 전체 배열에서 값을 검색합니다.</summary>
      <returns>지정된 <paramref name="array" />에 <paramref name="value" />가 있는 경우 해당 <paramref name="value" />의 인덱스입니다.<paramref name="value" />가 없고 <paramref name="value" />가 <paramref name="array" />에 있는 하나 이상의 요소보다 작은 경우 <paramref name="value" />보다 큰 첫째 요소 인덱스의 비트 보수인 음수입니다.<paramref name="value" />가 없고 <paramref name="value" />가 <paramref name="array" />에 있는 요소보다 큰 경우 마지막 요소에 1을 더한 인덱스의 비트 보수인 음수입니다.</returns>
      <param name="array">검색할 1차원으로 정렬된 <see cref="T:System.Array" />입니다.</param>
      <param name="value">검색할 개체입니다.</param>
      <param name="comparer">요소를 비교할 때 사용하는 <see cref="T:System.Collections.IComparer" /> 구현입니다.또는 각 요소의 <see cref="T:System.IComparable" /> 구현을 사용하면 null입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" />가 다차원 배열인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparer" />가 null이고 <paramref name="value" />의 형식이 <paramref name="array" />의 요소와 호환되지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" />가 null이고, <paramref name="value" />가 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않으며, 검색에서 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않는 요소를 발견하는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0)">
      <summary>
        <see cref="T:System.IComparable`1" />의 각 요소 및 지정한 값에서 구현되는 <see cref="T:System.Array" /> 제네릭 인터페이스를 사용하여 1차원으로 정렬된 배열의 요소 범위에서 값을 검색합니다.</summary>
      <returns>지정된 <paramref name="array" />에 <paramref name="value" />가 있는 경우 해당 <paramref name="value" />의 인덱스입니다.<paramref name="value" />가 없고 <paramref name="value" />가 <paramref name="array" />에 있는 하나 이상의 요소보다 작은 경우 <paramref name="value" />보다 큰 첫째 요소 인덱스의 비트 보수인 음수입니다.<paramref name="value" />가 없고 <paramref name="value" />가 <paramref name="array" />에 있는 요소보다 큰 경우 마지막 요소에 1을 더한 인덱스의 비트 보수인 음수입니다.</returns>
      <param name="array">검색할 1차원으로 정렬된 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다. </param>
      <param name="index">검색할 범위의 시작 인덱스입니다.</param>
      <param name="length">검색할 범위의 길이입니다.</param>
      <param name="value">검색할 개체입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="array" />의 하한보다 작은 경우또는<paramref name="length" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> 및 <paramref name="length" />에서 <paramref name="array" />에 대한 올바른 범위를 지정하지 않은 경우또는<paramref name="value" />의 형식이 <paramref name="array" />의 요소와 호환되지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="T" />가 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스를 구현하지 않는 경우</exception>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
      <summary>지정한 <see cref="T:System.Collections.Generic.IComparer`1" /> 제네릭 인터페이스를 사용하여 1차원으로 정렬된 배열의 요소 범위에서 값을 검색합니다.</summary>
      <returns>지정된 <paramref name="array" />에 <paramref name="value" />가 있는 경우 해당 <paramref name="value" />의 인덱스입니다.<paramref name="value" />가 없고 <paramref name="value" />가 <paramref name="array" />에 있는 하나 이상의 요소보다 작은 경우 <paramref name="value" />보다 큰 첫째 요소 인덱스의 비트 보수인 음수입니다.<paramref name="value" />가 없고 <paramref name="value" />가 <paramref name="array" />에 있는 요소보다 큰 경우 마지막 요소에 1을 더한 인덱스의 비트 보수인 음수입니다.</returns>
      <param name="array">검색할 1차원으로 정렬된 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다. </param>
      <param name="index">검색할 범위의 시작 인덱스입니다.</param>
      <param name="length">검색할 범위의 길이입니다.</param>
      <param name="value">검색할 개체입니다.</param>
      <param name="comparer">요소를 비교할 때 사용하는 <see cref="T:System.Collections.Generic.IComparer`1" /> 구현입니다.또는 null to use the <see cref="T:System.IComparable`1" /> implementation of each element.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="array" />의 하한보다 작은 경우또는<paramref name="length" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> 및 <paramref name="length" />에서 <paramref name="array" />에 대한 올바른 범위를 지정하지 않은 경우또는<paramref name="comparer" />가 null이고 <paramref name="value" />의 형식이 <paramref name="array" />의 요소와 호환되지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" />가 null이고 <paramref name="T" />가 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스를 구현하지 않습니다.</exception>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],``0)">
      <summary>
        <see cref="T:System.Array" />의 각 요소 및 지정한 개체에서 구현되는 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스를 사용하여 1차원으로 정렬된 전체 배열에서 특정 요소를 검색합니다.</summary>
      <returns>지정된 <paramref name="array" />에 <paramref name="value" />가 있는 경우 해당 <paramref name="value" />의 인덱스입니다.<paramref name="value" />가 없고 <paramref name="value" />가 <paramref name="array" />에 있는 하나 이상의 요소보다 작은 경우 <paramref name="value" />보다 큰 첫째 요소 인덱스의 비트 보수인 음수입니다.<paramref name="value" />가 없고 <paramref name="value" />가 <paramref name="array" />에 있는 요소보다 큰 경우 마지막 요소에 1을 더한 인덱스의 비트 보수인 음수입니다.</returns>
      <param name="array">검색할 1차원으로 정렬된 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다. </param>
      <param name="value">검색할 개체입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="T" />가 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스를 구현하지 않는 경우</exception>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],``0,System.Collections.Generic.IComparer{``0})">
      <summary>지정한 <see cref="T:System.Collections.Generic.IComparer`1" /> 제네릭 인터페이스를 사용하여 1차원으로 정렬된 전체 배열에서 값을 검색합니다.</summary>
      <returns>지정된 <paramref name="array" />에 <paramref name="value" />가 있는 경우 해당 <paramref name="value" />의 인덱스입니다.<paramref name="value" />가 없고 <paramref name="value" />가 <paramref name="array" />에 있는 하나 이상의 요소보다 작은 경우 <paramref name="value" />보다 큰 첫째 요소 인덱스의 비트 보수인 음수입니다.<paramref name="value" />가 없고 <paramref name="value" />가 <paramref name="array" />에 있는 요소보다 큰 경우 마지막 요소에 1을 더한 인덱스의 비트 보수인 음수입니다.</returns>
      <param name="array">검색할 1차원으로 정렬된 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.  </param>
      <param name="value">검색할 개체입니다.</param>
      <param name="comparer">요소를 비교할 때 사용하는 <see cref="T:System.Collections.Generic.IComparer`1" /> 구현입니다.또는 null to use the <see cref="T:System.IComparable`1" /> implementation of each element.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparer" />가 null이고 <paramref name="value" />의 형식이 <paramref name="array" />의 요소와 호환되지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" />가 null이고 <paramref name="T" />가 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스를 구현하지 않습니다.</exception>
    </member>
    <member name="M:System.Array.Clear(System.Array,System.Int32,System.Int32)">
      <summary>배열의 각 요소 형식의 기본값으로 요소의 범위를 설정합니다.</summary>
      <param name="array">포함된 요소를 지울 배열입니다.</param>
      <param name="index">지울 요소 범위의 시작 인덱스입니다.</param>
      <param name="length">지울 요소의 개수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" />가 <paramref name="array" />의 하한보다 작은 경우또는<paramref name="length" />가 0보다 작은 경우또는<paramref name="index" />와 <paramref name="length" />의 합계가 <paramref name="array" />의 크기보다 큰 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Clone">
      <summary>
        <see cref="T:System.Array" />의 단순 복사본을 만듭니다.</summary>
      <returns>
        <see cref="T:System.Array" />의 단순 복사본입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Array" />의 요소 범위를 지정한 소스 인덱스부터 복사하여 다른 <see cref="T:System.Array" />에 지정한 대상 인덱스부터 붙여넣습니다.복사가 완료되지 않으면 모든 변경 내용이 취소되도록 합니다.</summary>
      <param name="sourceArray">복사할 데이터가 들어 있는 <see cref="T:System.Array" />입니다.</param>
      <param name="sourceIndex">복사가 시작되는 <paramref name="sourceArray" />의 인덱스를 나타내는 32비트 정수입니다.</param>
      <param name="destinationArray">데이터를 받는 <see cref="T:System.Array" />입니다.</param>
      <param name="destinationIndex">저장이 시작되는 <paramref name="destinationArray" />의 인덱스를 나타내는 32비트 정수입니다.</param>
      <param name="length">복사할 요소의 개수를 나타내는 32비트 정수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" />가 null인 경우또는<paramref name="destinationArray" />가 null인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="sourceArray" />와 <paramref name="destinationArray" />의 차수가 다른 경우</exception>
      <exception cref="T:System.ArrayTypeMismatchException">
        <paramref name="sourceArray" /> 형식이 <paramref name="destinationArray" /> 형식과 같지도 않고 이 형식에서 파생되지도 않은 경우</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="sourceArray" />에 있는 하나 이상의 요소를 <paramref name="destinationArray" /> 형식으로 캐스팅할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" />가 <paramref name="sourceArray" />의 첫 번째 차원 하한보다 작은 경우또는<paramref name="destinationIndex" />가 <paramref name="destinationArray" />의 첫 번째 차원 하한보다 작은 경우또는<paramref name="length" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="length" />가 <paramref name="sourceIndex" />에서 <paramref name="sourceArray" /> 끝 사이의 요소 수보다 큰 경우또는<paramref name="length" />가 <paramref name="destinationIndex" />에서 <paramref name="destinationArray" /> 끝 사이의 요소 수보다 큰 경우</exception>
    </member>
    <member name="M:System.Array.Copy(System.Array,System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Array" />의 요소 범위를 첫 번째 요소부터 복사하여 다른 <see cref="T:System.Array" />에 첫 번째 요소부터 붙여넣습니다.길이가 32비트 정수로 지정되어 있습니다.</summary>
      <param name="sourceArray">복사할 데이터가 들어 있는 <see cref="T:System.Array" />입니다.</param>
      <param name="destinationArray">데이터를 받는 <see cref="T:System.Array" />입니다.</param>
      <param name="length">복사할 요소의 개수를 나타내는 32비트 정수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" />가 null인 경우또는<paramref name="destinationArray" />가 null인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="sourceArray" />와 <paramref name="destinationArray" />의 차수가 다른 경우</exception>
      <exception cref="T:System.ArrayTypeMismatchException">
        <paramref name="sourceArray" />와 <paramref name="destinationArray" />의 형식이 서로 호환되지 않는 경우</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="sourceArray" />에 있는 하나 이상의 요소를 <paramref name="destinationArray" /> 형식으로 캐스팅할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="length" />가 <paramref name="sourceArray" />에 있는 요소의 수보다 큰 경우또는<paramref name="length" />가 <paramref name="destinationArray" />에 있는 요소의 수보다 큰 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Array" />의 요소 범위를 지정한 소스 인덱스부터 복사하여 다른 <see cref="T:System.Array" />에 지정한 대상 인덱스부터 붙여넣습니다.길이와 인덱스가 32비트 정수로 지정되어 있습니다.</summary>
      <param name="sourceArray">복사할 데이터가 들어 있는 <see cref="T:System.Array" />입니다.</param>
      <param name="sourceIndex">복사가 시작되는 <paramref name="sourceArray" />의 인덱스를 나타내는 32비트 정수입니다.</param>
      <param name="destinationArray">데이터를 받는 <see cref="T:System.Array" />입니다.</param>
      <param name="destinationIndex">저장이 시작되는 <paramref name="destinationArray" />의 인덱스를 나타내는 32비트 정수입니다.</param>
      <param name="length">복사할 요소의 개수를 나타내는 32비트 정수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" />가 null인 경우또는<paramref name="destinationArray" />가 null인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="sourceArray" />와 <paramref name="destinationArray" />의 차수가 다른 경우</exception>
      <exception cref="T:System.ArrayTypeMismatchException">
        <paramref name="sourceArray" />와 <paramref name="destinationArray" />의 형식이 서로 호환되지 않는 경우</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="sourceArray" />에 있는 하나 이상의 요소를 <paramref name="destinationArray" /> 형식으로 캐스팅할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" />가 <paramref name="sourceArray" />의 첫 번째 차원 하한보다 작은 경우또는<paramref name="destinationIndex" />가 <paramref name="destinationArray" />의 첫 번째 차원 하한보다 작은 경우또는<paramref name="length" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="length" />가 <paramref name="sourceIndex" />에서 <paramref name="sourceArray" /> 끝 사이의 요소 수보다 큰 경우또는<paramref name="length" />가 <paramref name="destinationIndex" />에서 <paramref name="destinationArray" /> 끝 사이의 요소 수보다 큰 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CopyTo(System.Array,System.Int32)">
      <summary>현재 1차원 배열의 모든 요소를 지정된 대상 배열 인덱스부터 시작하여 지정된 1차원 배열에 복사합니다.인덱스가 32비트 정수로 지정되어 있습니다.</summary>
      <param name="array">현재 배열에서 복사한 요소의 대상인 1차원 배열입니다.</param>
      <param name="index">복사가 시작되는 <paramref name="array" />의 인덱스를 나타내는 32비트 정수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="array" />의 하한보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 다차원 배열인 경우또는소스 배열의 요소 수가 <paramref name="index" />부터 대상 <paramref name="array" /> 끝까지의 사용 가능한 요소 수보다 큰 경우</exception>
      <exception cref="T:System.ArrayTypeMismatchException">소스 <see cref="T:System.Array" /> 형식을 대상 <paramref name="array" /> 형식으로 자동 캐스팅할 수 없는 경우</exception>
      <exception cref="T:System.RankException">소스 배열이 다차원입니다.</exception>
      <exception cref="T:System.InvalidCastException">소스 <see cref="T:System.Array" />에 있는 하나 이상의 요소를 대상 <paramref name="array" /> 형식으로 캐스팅할 수 없는 경우</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32)">
      <summary>지정한 <see cref="T:System.Type" /> 및 길이를 가진 인덱스가 0부터 시작하는 1차원 <see cref="T:System.Array" />를 만듭니다.</summary>
      <returns>지정한 <see cref="T:System.Type" /> 및 길이를 가진 인덱스가 0부터 시작하는 새 1차원 <see cref="T:System.Array" />입니다.</returns>
      <param name="elementType">만들 <see cref="T:System.Array" />의 <see cref="T:System.Type" />입니다.</param>
      <param name="length">만들 <see cref="T:System.Array" />의 크기입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementType" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementType" />이 잘못된 <see cref="T:System.Type" />인 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" />은 지원되지 않습니다.(예: <see cref="T:System.Void" />가 지원되지 않는 경우)또는<paramref name="elementType" />이 개방형 제네릭 형식인 경우.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" />가 0보다 작은 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32[])">
      <summary>지정한 <see cref="T:System.Type" /> 및 차원 길이를 가진 인덱스가 0부터 시작하는 다차원 <see cref="T:System.Array" />를 만듭니다.차원 길이가 32비트 정수 배열로 지정되어 있습니다.</summary>
      <returns>지정한 <see cref="T:System.Type" /> 및 각 차원에 대해 지정한 길이를 가진 인덱스가 0부터 시작하는 새 다차원 <see cref="T:System.Array" />입니다.</returns>
      <param name="elementType">만들 <see cref="T:System.Array" />의 <see cref="T:System.Type" />입니다.</param>
      <param name="lengths">만들 <see cref="T:System.Array" />의 각 차원 크기를 나타내는 32비트 정수 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementType" />가 null인 경우또는<paramref name="lengths" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementType" />이 잘못된 <see cref="T:System.Type" />인 경우또는<paramref name="lengths" /> 배열에 하나 이상의 요소가 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" />은 지원되지 않습니다.(예: <see cref="T:System.Void" />가 지원되지 않는 경우)또는<paramref name="elementType" />이 개방형 제네릭 형식인 경우.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lengths" />에 0보다 작은 값이 있는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32[],System.Int32[])">
      <summary>지정한 하한을 가진 지정한 <see cref="T:System.Type" /> 및 차원 길이의 다차원 <see cref="T:System.Array" />를 만듭니다.</summary>
      <returns>각 차원에 대해 지정한 길이 및 하한을 가진 지정한 <see cref="T:System.Type" />의 새 다차원 <see cref="T:System.Array" />입니다.</returns>
      <param name="elementType">만들 <see cref="T:System.Array" />의 <see cref="T:System.Type" />입니다.</param>
      <param name="lengths">만들 <see cref="T:System.Array" />의 각 차원 크기를 포함하는 1차원 배열입니다.</param>
      <param name="lowerBounds">만들 <see cref="T:System.Array" />의 각 차원 하한(시작 인덱스)을 포함하는 1차원 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementType" />가 null인 경우또는<paramref name="lengths" />가 null인 경우또는<paramref name="lowerBounds" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementType" />이 잘못된 <see cref="T:System.Type" />인 경우또는<paramref name="lengths" /> 배열에 하나 이상의 요소가 없는 경우또는<paramref name="lengths" />와 <paramref name="lowerBounds" /> 배열에 들어 있는 요소 수가 다른 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" />은 지원되지 않습니다.(예: <see cref="T:System.Void" />가 지원되지 않는 경우)또는<paramref name="elementType" />이 개방형 제네릭 형식인 경우.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lengths" />에 0보다 작은 값이 있는 경우또는<paramref name="lowerBounds" />에 있는 모든 값이 아주 커서 차원의 하한과 길이의 합이 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Empty``1">
      <summary>빈 배열을 반환합니다.</summary>
      <returns>빈 반환 <see cref="T:System.Array" />.</returns>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Array.Exists``1(``0[],System.Predicate{``0})">
      <summary>지정한 배열에 지정한 조건자에 정의된 조건과 일치하는 요소가 포함되어 있는지를 확인합니다.</summary>
      <returns>
        <paramref name="array" />에 지정한 조건자에 정의된 조건과 일치하는 하나 이상의 요소가 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="array">검색할 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.</param>
      <param name="match">검색할 요소의 조건을 정의하는 <see cref="T:System.Predicate`1" />입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우또는<paramref name="match" />가 null인 경우</exception>
    </member>
    <member name="M:System.Array.Find``1(``0[],System.Predicate{``0})">
      <summary>지정된 조건자에 정의된 조건과 일치하는 요소를 검색하고 전체 <see cref="T:System.Array" />에서 처음으로 검색한 요소를 반환합니다.</summary>
      <returns>지정한 조건자에 정의된 조건과 일치하는 요소가 있으면 일치하는 요소 중 첫 번째 요소이고, 그렇지 않으면 <paramref name="T" /> 형식의 기본값입니다.</returns>
      <param name="array">검색할 1차원(인덱스는 0부터 시작) 배열입니다.</param>
      <param name="match">검색할 요소의 조건을 정의하는 조건자입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우또는<paramref name="match" />가 null인 경우</exception>
    </member>
    <member name="M:System.Array.FindAll``1(``0[],System.Predicate{``0})">
      <summary>지정한 조건자에 정의된 조건과 일치하는 모든 요소를 검색합니다.</summary>
      <returns>지정한 조건자에 정의된 조건과 일치하는 요소가 있으면 일치하는 모든 요소를 포함하는 <see cref="T:System.Array" />이고, 그렇지 않으면 빈 <see cref="T:System.Array" />입니다.</returns>
      <param name="array">검색할 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.</param>
      <param name="match">검색할 요소의 조건을 정의하는 <see cref="T:System.Predicate`1" />입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우또는<paramref name="match" />가 null인 경우</exception>
    </member>
    <member name="M:System.Array.FindIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})">
      <summary>지정한 조건자에 정의된 조건과 일치하는 요소를 검색하여 지정한 인덱스부터 시작하여 지정한 수의 요소를 포함하는 <see cref="T:System.Array" />의 요소 범위에서 일치하는 요소 중 첫 번째 요소의 인덱스(0부터 시작)를 반환합니다.</summary>
      <returns>
        <paramref name="match" />에 정의된 조건과 일치하는 요소가 있으면 일치하는 요소 중 첫 번째 요소의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <param name="array">검색할 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.</param>
      <param name="startIndex">검색의 0부터 시작하는 인덱스입니다.</param>
      <param name="count">검색할 섹션에 있는 요소 수입니다.</param>
      <param name="match">검색할 요소의 조건을 정의하는 <see cref="T:System.Predicate`1" />입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우또는<paramref name="match" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />가 <paramref name="array" />에 대한 올바른 인덱스 범위 밖에 있는 경우또는<paramref name="count" />가 0보다 작은 경우또는<paramref name="startIndex" /> 및 <paramref name="count" />에서 <paramref name="array" />에 대한 올바른 섹션을 지정하지 않은 경우</exception>
    </member>
    <member name="M:System.Array.FindIndex``1(``0[],System.Int32,System.Predicate{``0})">
      <summary>지정한 조건자에 정의된 조건과 일치하는 요소를 검색하여 지정한 인덱스에서 마지막 요소로 확장하는 <see cref="T:System.Array" />의 요소 범위에서 일치하는 요소 중 첫 번째 요소의 인덱스(0부터 시작)를 반환합니다.</summary>
      <returns>
        <paramref name="match" />에 정의된 조건과 일치하는 요소가 있으면 일치하는 요소 중 첫 번째 요소의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <param name="array">검색할 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.</param>
      <param name="startIndex">검색의 0부터 시작하는 인덱스입니다.</param>
      <param name="match">검색할 요소의 조건을 정의하는 <see cref="T:System.Predicate`1" />입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우또는<paramref name="match" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />가 <paramref name="array" />에 대한 올바른 인덱스 범위 밖에 있는 경우</exception>
    </member>
    <member name="M:System.Array.FindIndex``1(``0[],System.Predicate{``0})">
      <summary>지정한 조건자에 정의된 조건과 일치하는 요소를 검색하여 전체 <see cref="T:System.Array" />에서 일치하는 요소 중 첫 번째 요소의 인덱스(0부터 시작)를 반환합니다.</summary>
      <returns>
        <paramref name="match" />에 정의된 조건과 일치하는 요소가 있으면 일치하는 요소 중 첫 번째 요소의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <param name="array">검색할 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.</param>
      <param name="match">검색할 요소의 조건을 정의하는 <see cref="T:System.Predicate`1" />입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우또는<paramref name="match" />가 null인 경우</exception>
    </member>
    <member name="M:System.Array.FindLast``1(``0[],System.Predicate{``0})">
      <summary>지정된 조건자에 정의된 조건과 일치하는 요소를 검색하고 전체 <see cref="T:System.Array" />에서 마지막으로 검색한 요소를 반환합니다.</summary>
      <returns>지정한 조건자에 정의된 조건과 일치하는 요소가 있으면 일치하는 요소 중 마지막 요소이고, 그렇지 않으면 <paramref name="T" /> 형식의 기본값입니다.</returns>
      <param name="array">검색할 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.</param>
      <param name="match">검색할 요소의 조건을 정의하는 <see cref="T:System.Predicate`1" />입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우또는<paramref name="match" />가 null인 경우</exception>
    </member>
    <member name="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})">
      <summary>지정한 조건자에 정의된 조건과 일치하는 요소를 검색하여 지정한 수의 요소가 들어 있고 지정한 인덱스에서 끝나는 <see cref="T:System.Array" />의 요소 범위에서 일치하는 요소 중 마지막 요소의 인덱스(0부터 시작)를 반환합니다.</summary>
      <returns>
        <paramref name="match" />에 정의된 조건과 일치하는 요소가 있으면 일치하는 요소 중 마지막 요소의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <param name="array">검색할 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.</param>
      <param name="startIndex">역방향 검색의 0부터 시작하는 인덱스입니다.</param>
      <param name="count">검색할 섹션에 있는 요소 수입니다.</param>
      <param name="match">검색할 요소의 조건을 정의하는 <see cref="T:System.Predicate`1" />입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우또는<paramref name="match" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />가 <paramref name="array" />에 대한 올바른 인덱스 범위 밖에 있는 경우또는<paramref name="count" />가 0보다 작은 경우또는<paramref name="startIndex" /> 및 <paramref name="count" />에서 <paramref name="array" />에 대한 올바른 섹션을 지정하지 않은 경우</exception>
    </member>
    <member name="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Predicate{``0})">
      <summary>지정한 조건자에 정의된 조건과 일치하는 요소를 검색하여 첫 번째 요소에서 지정한 인덱스로 확장하는 <see cref="T:System.Array" />의 요소 범위에서 일치하는 요소 중 마지막 요소의 인덱스(0부터 시작)를 반환합니다.</summary>
      <returns>
        <paramref name="match" />에 정의된 조건과 일치하는 요소가 있으면 일치하는 요소 중 마지막 요소의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <param name="array">검색할 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.</param>
      <param name="startIndex">역방향 검색의 0부터 시작하는 인덱스입니다.</param>
      <param name="match">검색할 요소의 조건을 정의하는 <see cref="T:System.Predicate`1" />입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우또는<paramref name="match" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />가 <paramref name="array" />에 대한 올바른 인덱스 범위 밖에 있는 경우</exception>
    </member>
    <member name="M:System.Array.FindLastIndex``1(``0[],System.Predicate{``0})">
      <summary>지정한 조건자에 정의된 조건과 일치하는 요소를 검색하여 전체 <see cref="T:System.Array" />에서 일치하는 요소 중 마지막 요소의 인덱스(0부터 시작)를 반환합니다.</summary>
      <returns>
        <paramref name="match" />에 정의된 조건과 일치하는 요소가 있으면 일치하는 요소 중 마지막 요소의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <param name="array">검색할 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.</param>
      <param name="match">검색할 요소의 조건을 정의하는 <see cref="T:System.Predicate`1" />입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우또는<paramref name="match" />가 null인 경우</exception>
    </member>
    <member name="M:System.Array.GetEnumerator">
      <summary>
        <see cref="T:System.Array" />의 <see cref="T:System.Collections.IEnumerator" />를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Array" />에 대한 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.GetLength(System.Int32)">
      <summary>지정된 차원의 <see cref="T:System.Array" />에 있는 요소의 수를 나타내는 32비트 정수를 가져옵니다.</summary>
      <returns>지정된 차원의 요소 수를 나타내는 32비트 정수입니다.</returns>
      <param name="dimension">길이를 지정해야 하는 <see cref="T:System.Array" />의 0부터 시작하는 차원입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="dimension" />가 0보다 작은 경우또는<paramref name="dimension" />가 <see cref="P:System.Array.Rank" />보다 크거나 같은 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.GetLowerBound(System.Int32)">
      <summary>배열에서 지정된 차원의 첫 번째 요소의 인덱스를 가져옵니다.</summary>
      <returns>배열에서 지정된 차원의 첫 번째 요소의 인덱스입니다.</returns>
      <param name="dimension">시작 인덱스를 지정해야 하는 배열의 0부터 시작하는 차원입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="dimension" />가 0보다 작은 경우또는<paramref name="dimension" />가 <see cref="P:System.Array.Rank" />보다 크거나 같은 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.GetUpperBound(System.Int32)">
      <summary>배열에서 지정된 차원의 마지막 요소의 인덱스를 가져옵니다.</summary>
      <returns>배열에 있는 지정된 차원의 마지막 요소의 인덱스이거나 지정된 차원이 비어 있는 경우 -1입니다. </returns>
      <param name="dimension">상한을 지정해야 하는 배열의 0부터 시작하는 차원입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="dimension" />가 0보다 작은 경우또는<paramref name="dimension" />가 <see cref="P:System.Array.Rank" />보다 크거나 같은 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.GetValue(System.Int32)">
      <summary>1차원 <see cref="T:System.Array" />의 지정한 위치에서 값을 가져옵니다.인덱스가 32비트 정수로 지정되어 있습니다.</summary>
      <returns>1차원 <see cref="T:System.Array" />의 지정한 위치에 있는 값입니다.</returns>
      <param name="index">가져올 <see cref="T:System.Array" /> 요소의 위치를 나타내는 32비트 정수입니다.</param>
      <exception cref="T:System.ArgumentException">현재 <see cref="T:System.Array" />에 1차원이 없는 경우</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" />가 현재 <see cref="T:System.Array" />의 올바른 인덱스 범위 밖에 있는 경우</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.GetValue(System.Int32[])">
      <summary>다차원 <see cref="T:System.Array" />의 지정한 위치에서 값을 가져옵니다.인덱스가 32비트 정수 배열로 지정되어 있습니다.</summary>
      <returns>다차원 <see cref="T:System.Array" />의 지정한 위치에서 있는 값입니다.</returns>
      <param name="indices">가져올 <see cref="T:System.Array" /> 요소의 위치를 지정하는 인덱스를 나타내는 32비트 정수의 1차원 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="indices" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentException">현재 <see cref="T:System.Array" />의 차수가 <paramref name="indices" />에 있는 요소 수와 다른 경우</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="indices" />의 요소가 현재 <see cref="T:System.Array" />의 해당 차원에 대한 올바른 인덱스 범위 밖에 있는 경우</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf(System.Array,System.Object)">
      <summary>지정한 개체를 검색하여 1차원 배열에서 처음 검색된 개체의 인덱스를 반환합니다. </summary>
      <returns>처음 나타나는 인덱스 <paramref name="value" /> 에서 <paramref name="array" />하는 경우, 반환 합니다. 그렇지 않은 경우 1 뺀 배열의 하한값입니다.</returns>
      <param name="array">검색할 1차원 배열입니다.</param>
      <param name="value">
        <paramref name="array" />에서 찾을 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" />가 다차원 배열인 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf(System.Array,System.Object,System.Int32)">
      <summary>1차원 배열의 요소 범위에서 지정한 개체를 검색하여 처음으로 일치하는 인덱스를 반환합니다.범위는 지정한 인덱스에서 배열의 끝까지 확장됩니다.</summary>
      <returns>처음 나타나는 인덱스 <paramref name="value" />에 있는 요소의 범위 내에서 발견 되는 경우, <paramref name="array" /> 에서 확장 하는 <paramref name="startIndex" /> 부터 마지막 요소입니다. 그렇지 않은 경우 1 뺀 배열의 하한값입니다.</returns>
      <param name="array">검색할 1차원 배열입니다.</param>
      <param name="value">
        <paramref name="array" />에서 찾을 개체입니다.</param>
      <param name="startIndex">검색할 시작 인덱스입니다.0은 빈 배열에서 유효합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />가 <paramref name="array" />에 대한 올바른 인덱스 범위 밖에 있는 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" />가 다차원 배열인 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf(System.Array,System.Object,System.Int32,System.Int32)">
      <summary>1차원 배열의 요소 범위에서 지정한 개체를 검색하여 처음으로 일치하는 인덱스를 반환합니다.범위는 지정한 요소 수에 대해 지정한 인덱스에서 확장됩니다.</summary>
      <returns>처음 나타나는 인덱스 <paramref name="value" />에서 발견 되는 경우는 <paramref name="array" /> 인덱스에서 <paramref name="startIndex" /> 를 <paramref name="startIndex" /> + <paramref name="count" /> -1입니다. 그렇지 않은 경우 1 뺀 배열의 하한값입니다.</returns>
      <param name="array">검색할 1차원 배열입니다.</param>
      <param name="value">
        <paramref name="array" />에서 찾을 개체입니다.</param>
      <param name="startIndex">검색할 시작 인덱스입니다.0은 빈 배열에서 유효합니다.</param>
      <param name="count">검색할 요소의 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />가 <paramref name="array" />에 대한 올바른 인덱스 범위 밖에 있는 경우또는<paramref name="count" />가 0보다 작은 경우또는<paramref name="startIndex" /> 및 <paramref name="count" />에서 <paramref name="array" />에 대한 올바른 섹션을 지정하지 않은 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" />가 다차원 배열인 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf``1(``0[],``0)">
      <summary>지정한 개체를 검색하여 1차원 배열에서 처음 검색된 개체의 인덱스를 반환합니다.</summary>
      <returns>처음 나타나는 0부터 시작 인덱스 <paramref name="value" /> 하면 전체에서 <paramref name="array" />하는 경우, 반환 합니다. 그렇지않으면-1입니다.</returns>
      <param name="array">검색할 1차원(인덱스는 0부터 시작) 배열입니다.</param>
      <param name="value">
        <paramref name="array" />에서 찾을 개체입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
    </member>
    <member name="M:System.Array.IndexOf``1(``0[],``0,System.Int32)">
      <summary>1차원 배열의 요소 범위에서 지정한 개체를 검색하여 처음으로 일치하는 인덱스를 반환합니다.범위는 지정한 인덱스에서 배열의 끝까지 확장됩니다.</summary>
      <returns>
        <paramref name="value" />가 있을 경우 <paramref name="startIndex" />에서 마지막 요소로 확장하는 <paramref name="array" />의 요소 범위에서 처음 검색된 값의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <param name="array">검색할 1차원(인덱스는 0부터 시작) 배열입니다.</param>
      <param name="value">
        <paramref name="array" />에서 찾을 개체입니다.</param>
      <param name="startIndex">검색의 0부터 시작하는 인덱스입니다.0은 빈 배열에서 유효합니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />가 <paramref name="array" />에 대한 올바른 인덱스 범위 밖에 있는 경우</exception>
    </member>
    <member name="M:System.Array.IndexOf``1(``0[],``0,System.Int32,System.Int32)">
      <summary>1차원 배열의 요소 범위에서 지정한 개체를 검색하여 처음으로 일치하는 인덱스를 반환합니다.범위는 지정한 요소 수에 대해 지정한 인덱스에서 확장됩니다.</summary>
      <returns>
        <paramref name="value" />가 있을 경우 <paramref name="startIndex" />부터 시작하여 <paramref name="count" />에 지정된 수의 요소를 포함하는 <paramref name="array" />의 요소 범위에서 처음 검색된 값의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <param name="array">검색할 1차원(인덱스는 0부터 시작) 배열입니다.</param>
      <param name="value">
        <paramref name="array" />에서 찾을 개체입니다.</param>
      <param name="startIndex">검색의 0부터 시작하는 인덱스입니다.0은 빈 배열에서 유효합니다.</param>
      <param name="count">검색할 섹션에 있는 요소 수입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />가 <paramref name="array" />에 대한 올바른 인덱스 범위 밖에 있는 경우또는<paramref name="count" />가 0보다 작은 경우또는<paramref name="startIndex" /> 및 <paramref name="count" />에서 <paramref name="array" />에 대한 올바른 섹션을 지정하지 않은 경우</exception>
    </member>
    <member name="M:System.Array.Initialize">
      <summary>해당 값 형식의 기본 생성자를 호출하여 값 형식 <see cref="T:System.Array" />의 모든 요소를 초기화합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf(System.Array,System.Object)">
      <summary>지정한 개체를 검색하여 1차원 <see cref="T:System.Array" /> 전체에서 마지막으로 일치하는 요소의 인덱스를 반환합니다.</summary>
      <returns>검색된 <paramref name="value" />가 있으면 <paramref name="array" /> 전체에서 마지막으로 검색된 값의 인덱스이고, 그렇지 않으면 배열의 하한에서 1을 뺀 값입니다.</returns>
      <param name="array">검색할 1차원 <see cref="T:System.Array" />입니다.</param>
      <param name="value">
        <paramref name="array" />에서 찾을 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" />가 다차원 배열인 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32)">
      <summary>지정한 개체를 검색하여 첫 번째 요소에서 지정한 인덱스로 확장하는 1차원 <see cref="T:System.Array" />의 요소 범위에서 마지막으로 검색된 요소의 인덱스를 반환합니다.</summary>
      <returns>
        <paramref name="value" />가 있을 경우 첫 번째 요소에서 <paramref name="startIndex" />로 확장하는 <paramref name="array" />의 요소 범위에서 마지막으로 검색된 값의 인덱스이고, 그렇지 않으면 배열의 하한에서 1을 뺀 값입니다.</returns>
      <param name="array">검색할 1차원 <see cref="T:System.Array" />입니다.</param>
      <param name="value">
        <paramref name="array" />에서 찾을 개체입니다.</param>
      <param name="startIndex">뒤로 검색할 시작 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />가 <paramref name="array" />에 대한 올바른 인덱스 범위 밖에 있는 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" />가 다차원 배열인 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32,System.Int32)">
      <summary>지정한 개체를 검색하여 지정한 수의 요소를 포함하고 지정한 인덱스에서 끝나는 1차원 <see cref="T:System.Array" />의 요소 범위에서 마지막으로 검색된 요소의 인덱스를 반환합니다.</summary>
      <returns>
        <paramref name="value" />가 있을 경우 <paramref name="count" />에서 지정한 수의 요소를 포함하고 <paramref name="startIndex" />에서 끝나는 <paramref name="array" />의 요소 범위에서 마지막으로 검색된 값의 인덱스이고, 그렇지 않으면 배열의 하한에서 1을 뺀 값입니다.</returns>
      <param name="array">검색할 1차원 <see cref="T:System.Array" />입니다.</param>
      <param name="value">
        <paramref name="array" />에서 찾을 개체입니다.</param>
      <param name="startIndex">뒤로 검색할 시작 인덱스입니다.</param>
      <param name="count">검색할 섹션에 있는 요소 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />가 <paramref name="array" />에 대한 올바른 인덱스 범위 밖에 있는 경우또는<paramref name="count" />가 0보다 작은 경우또는<paramref name="startIndex" /> 및 <paramref name="count" />에서 <paramref name="array" />에 대한 올바른 섹션을 지정하지 않은 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" />가 다차원 배열인 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf``1(``0[],``0)">
      <summary>지정한 개체를 검색하여 전체 <see cref="T:System.Array" />에서 마지막으로 검색된 요소의 인덱스를 반환합니다.</summary>
      <returns>
        <paramref name="value" />가 있을 경우 <paramref name="array" /> 전체에서 마지막으로 검색된 값의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <param name="array">검색할 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.</param>
      <param name="value">
        <paramref name="array" />에서 찾을 개체입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
    </member>
    <member name="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32)">
      <summary>지정한 개체를 검색하여 첫 번째 요소에서 지정한 인덱스로 확장하는 <see cref="T:System.Array" />의 요소 범위에서 마지막으로 검색된 요소의 인덱스를 반환합니다.</summary>
      <returns>
        <paramref name="value" />가 있을 경우 첫 번째 요소에서 <paramref name="startIndex" />로 확장하는 <paramref name="array" />의 요소 범위에서 마지막으로 검색된 값의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <param name="array">검색할 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.</param>
      <param name="value">
        <paramref name="array" />에서 찾을 개체입니다.</param>
      <param name="startIndex">역방향 검색의 0부터 시작하는 인덱스입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />가 <paramref name="array" />에 대한 올바른 인덱스 범위 밖에 있는 경우</exception>
    </member>
    <member name="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32,System.Int32)">
      <summary>지정한 개체를 검색하여 지정한 수의 요소를 포함하고 지정한 인덱스에서 끝나는 <see cref="T:System.Array" />의 요소 범위에서 마지막으로 검색된 요소의 인덱스를 반환합니다.</summary>
      <returns>
        <paramref name="value" />가 있을 경우 <paramref name="count" />에서 지정한 수의 요소를 포함하고 <paramref name="startIndex" />에서 끝나는 <paramref name="array" />의 요소 범위에서 마지막으로 검색된 값의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <param name="array">검색할 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.</param>
      <param name="value">
        <paramref name="array" />에서 찾을 개체입니다.</param>
      <param name="startIndex">역방향 검색의 0부터 시작하는 인덱스입니다.</param>
      <param name="count">검색할 섹션에 있는 요소 수입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />가 <paramref name="array" />에 대한 올바른 인덱스 범위 밖에 있는 경우또는<paramref name="count" />가 0보다 작은 경우또는<paramref name="startIndex" /> 및 <paramref name="count" />에서 <paramref name="array" />에 대한 올바른 섹션을 지정하지 않은 경우</exception>
    </member>
    <member name="P:System.Array.Length">
      <summary>모든 차원의 <see cref="T:System.Array" />에 있는 요소의 총 수를 나타내는 32비트 정수를 가져옵니다.</summary>
      <returns>모든 차원의 <see cref="T:System.Array" />에 있는 요소의 총 수를 나타내는 32비트 정수입니다. 배열에 요소가 없으면 0입니다.</returns>
      <exception cref="T:System.OverflowException">배열이 다차원이고 <see cref="F:System.Int32.MaxValue" /> 요소보다 많이 포함된 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Array.Rank">
      <summary>
        <see cref="T:System.Array" />의 순위(차원 수)를 가져옵니다.예를 들어, 1차원 배열은 1을 반환하고, 2차원 배열은 2를 반환하는 방식입니다.</summary>
      <returns>
        <see cref="T:System.Array" />의 순위(차원의 수)입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Resize``1(``0[]@,System.Int32)">
      <summary>1차원 배열의 요소 수를 지정된 새로운 크기로 변경합니다.</summary>
      <param name="array">크기를 조정할 1차원 배열(인덱스는 0부터 시작)이거나 지정한 크기로 새 배열을 만들 경우 null입니다.</param>
      <param name="newSize">새 배열의 크기입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="newSize" />가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Array.Reverse(System.Array)">
      <summary>1차원 <see cref="T:System.Array" /> 전체에 있는 요소의 시퀀스를 역순으로 설정합니다.</summary>
      <param name="array">순서를 바꿀 1차원 <see cref="T:System.Array" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우 </exception>
      <exception cref="T:System.RankException">
        <paramref name="array" />가 다차원 배열인 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Reverse(System.Array,System.Int32,System.Int32)">
      <summary>1차원 <see cref="T:System.Array" />의 요소 범위에 있는 요소의 시퀀스를 역순으로 설정합니다.</summary>
      <param name="array">순서를 바꿀 1차원 <see cref="T:System.Array" />입니다.</param>
      <param name="index">순서를 바꿀 섹션의 시작 인덱스입니다.</param>
      <param name="length">순서를 바꿀 섹션에 있는 요소 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" />가 다차원 배열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="array" />의 하한보다 작은 경우또는<paramref name="length" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> 및 <paramref name="length" />에서 <paramref name="array" />에 대한 올바른 범위를 지정하지 않은 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.SetValue(System.Object,System.Int32)">
      <summary>값을 1차원 <see cref="T:System.Array" />에 있는 지정한 위치의 요소로 설정합니다.인덱스가 32비트 정수로 지정되어 있습니다.</summary>
      <param name="value">지정한 요소의 새 값입니다.</param>
      <param name="index">설정할 <see cref="T:System.Array" /> 요소의 위치를 나타내는 32비트 정수입니다.</param>
      <exception cref="T:System.ArgumentException">현재 <see cref="T:System.Array" />에 1차원이 없는 경우</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" />를 <see cref="T:System.Array" />의 요소 형식으로 캐스팅할 수 없는 경우</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" />가 현재 <see cref="T:System.Array" />의 올바른 인덱스 범위 밖에 있는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.SetValue(System.Object,System.Int32[])">
      <summary>값을 다차원 <see cref="T:System.Array" />에 있는 지정한 위치의 요소로 설정합니다.인덱스가 32비트 정수 배열로 지정되어 있습니다.</summary>
      <param name="value">지정한 요소의 새 값입니다.</param>
      <param name="indices">설정할 요소의 위치를 지정하는 인덱스를 나타내는 32비트 정수의 1차원 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="indices" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentException">현재 <see cref="T:System.Array" />의 차수가 <paramref name="indices" />에 있는 요소 수와 다른 경우</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" />를 <see cref="T:System.Array" />의 요소 형식으로 캐스팅할 수 없는 경우</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="indices" />의 요소가 현재 <see cref="T:System.Array" />의 해당 차원에 대한 올바른 인덱스 범위 밖에 있는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array)">
      <summary>
        <see cref="T:System.Array" />에 있는 각 요소의 <see cref="T:System.IComparable" /> 구현을 사용하여 1차원 <see cref="T:System.Array" /> 전체의 요소를 정렬합니다.</summary>
      <param name="array">정렬할 1차원 <see cref="T:System.Array" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" />가 다차원 배열인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="array" />의 요소 중 하나 이상이 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array)">
      <summary>각 키의 <see cref="T:System.IComparable" /> 구현을 사용하여 첫 번째 <see cref="T:System.Array" />에 있는 키를 기반으로 하는 한 쌍의 1차원 <see cref="T:System.Array" /> 개체(키를 포함하는 개체와 해당 항목을 포함하는 개체)를 정렬합니다.</summary>
      <param name="keys">정렬할 키를 포함하는 1차원 <see cref="T:System.Array" />입니다.</param>
      <param name="items">
        <paramref name="keys" />
        <see cref="T:System.Array" />의 각 키에 해당하는 항목을 포함하는 1차원 <see cref="T:System.Array" />입니다.또는<paramref name="keys" /><see cref="T:System.Array" />만을 정렬하는 null입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" />가 null인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="keys" />
        <see cref="T:System.Array" />가 다차원 배열인 경우또는<paramref name="items" /><see cref="T:System.Array" />가 다차원 배열인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" />가 null이 아니고 <paramref name="keys" />의 길이가 <paramref name="items" />의 길이보다 긴 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="keys" />
        <see cref="T:System.Array" />의 요소 중 하나 이상이 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array,System.Collections.IComparer)">
      <summary>지정한 <see cref="T:System.Collections.IComparer" />를 사용하여 첫 번째 <see cref="T:System.Array" />에 있는 키를 기반으로 하는 한 쌍의 1차원 <see cref="T:System.Array" /> 개체(키를 포함하는 개체와 해당 항목을 포함하는 개체)를 정렬합니다.</summary>
      <param name="keys">정렬할 키를 포함하는 1차원 <see cref="T:System.Array" />입니다.</param>
      <param name="items">
        <paramref name="keys" />
        <see cref="T:System.Array" />의 각 키에 해당하는 항목을 포함하는 1차원 <see cref="T:System.Array" />입니다.또는<paramref name="keys" /><see cref="T:System.Array" />만을 정렬하는 null입니다.</param>
      <param name="comparer">요소를 비교할 때 사용하는 <see cref="T:System.Collections.IComparer" /> 구현입니다.또는각 요소의 <see cref="T:System.IComparable" /> 구현을 사용하면 null입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" />가 null인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="keys" />
        <see cref="T:System.Array" />가 다차원 배열인 경우또는<paramref name="items" /><see cref="T:System.Array" />가 다차원 배열인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" />가 null이 아니고 <paramref name="keys" />의 길이가 <paramref name="items" />의 길이보다 긴 경우 또는정렬하는 동안<paramref name="comparer" /> 구현에서 오류가 발생한 경우예를 들어, <paramref name="comparer" />는 항목을 항목 자체와 비교할 때 0을 반환하지 않을 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" />가 null이고 <paramref name="keys" /><see cref="T:System.Array" />의 요소 중 하나 이상이 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32)">
      <summary>각 키의 <see cref="T:System.IComparable" /> 구현을 사용하여 첫 번째 <see cref="T:System.Array" />에 있는 키를 기반으로 하는 한 쌍의 1차원 <see cref="T:System.Array" /> 개체(키를 포함하는 개체와 해당 항목을 포함하는 개체)의 요소 범위를 정렬합니다.</summary>
      <param name="keys">정렬할 키를 포함하는 1차원 <see cref="T:System.Array" />입니다.</param>
      <param name="items">
        <paramref name="keys" />
        <see cref="T:System.Array" />의 각 키에 해당하는 항목을 포함하는 1차원 <see cref="T:System.Array" />입니다.또는<paramref name="keys" /><see cref="T:System.Array" />만을 정렬하는 null입니다.</param>
      <param name="index">정렬할 범위의 시작 인덱스입니다.</param>
      <param name="length">정렬할 범위에 있는 요소 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" />가 null인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="keys" />
        <see cref="T:System.Array" />가 다차원 배열인 경우또는<paramref name="items" /><see cref="T:System.Array" />가 다차원 배열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="keys" />의 하한보다 작은 경우또는<paramref name="length" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" />가 null이 아니고 <paramref name="keys" />의 길이가 <paramref name="items" />의 길이보다 긴 경우또는<paramref name="index" /> 및 <paramref name="length" />가 <paramref name="keys" /><see cref="T:System.Array" />에서 올바른 범위를 지정하지 않는 경우또는<paramref name="items" />가 null이 아니고 <paramref name="index" /> 및 <paramref name="length" />가 <paramref name="items" /><see cref="T:System.Array" />에서 올바른 범위를 지정하지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="keys" />
        <see cref="T:System.Array" />의 요소 중 하나 이상이 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32,System.Collections.IComparer)">
      <summary>지정한 <see cref="T:System.Collections.IComparer" />를 사용하여 첫 번째 <see cref="T:System.Array" />에 있는 키를 기반으로 하는 한 쌍의 1차원 <see cref="T:System.Array" /> 개체(키를 포함하는 개체와 해당 항목을 포함하는 개체)의 요소 범위를 정렬합니다.</summary>
      <param name="keys">정렬할 키를 포함하는 1차원 <see cref="T:System.Array" />입니다.</param>
      <param name="items">
        <paramref name="keys" />
        <see cref="T:System.Array" />의 각 키에 해당하는 항목을 포함하는 1차원 <see cref="T:System.Array" />입니다.또는<paramref name="keys" /><see cref="T:System.Array" />만을 정렬하는 null입니다.</param>
      <param name="index">정렬할 범위의 시작 인덱스입니다.</param>
      <param name="length">정렬할 범위에 있는 요소 수입니다.</param>
      <param name="comparer">요소를 비교할 때 사용하는 <see cref="T:System.Collections.IComparer" /> 구현입니다.또는각 요소의 <see cref="T:System.IComparable" /> 구현을 사용하면 null입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" />가 null인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="keys" />
        <see cref="T:System.Array" />가 다차원 배열인 경우또는<paramref name="items" /><see cref="T:System.Array" />가 다차원 배열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="keys" />의 하한보다 작은 경우또는<paramref name="length" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" />가 null이 아니고 <paramref name="keys" />의 하한이 <paramref name="items" />의 하한과 일치하지 않는 경우또는<paramref name="items" />가 null이 아니고 <paramref name="keys" />의 길이가 <paramref name="items" />의 길이보다 긴 경우또는<paramref name="index" /> 및 <paramref name="length" />가 <paramref name="keys" /><see cref="T:System.Array" />에서 올바른 범위를 지정하지 않는 경우또는<paramref name="items" />가 null이 아니고 <paramref name="index" /> 및 <paramref name="length" />가 <paramref name="items" /><see cref="T:System.Array" />에서 올바른 범위를 지정하지 않는 경우 또는정렬하는 동안<paramref name="comparer" /> 구현에서 오류가 발생한 경우예를 들어, <paramref name="comparer" />는 항목을 항목 자체와 비교할 때 0을 반환하지 않을 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" />가 null이고 <paramref name="keys" /><see cref="T:System.Array" />의 요소 중 하나 이상이 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Collections.IComparer)">
      <summary>지정한 <see cref="T:System.Collections.IComparer" />를 사용하여 1차원 <see cref="T:System.Array" />의 요소를 정렬합니다.</summary>
      <param name="array">정렬할 1차원 배열입니다.</param>
      <param name="comparer">요소를 비교할 때 사용하는 구현입니다.또는각 요소의 <see cref="T:System.IComparable" /> 구현을 사용하면 null입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" />가 다차원 배열인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" />가 null이고 <paramref name="array" />의 요소 중 하나 이상이 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않는 경우</exception>
      <exception cref="T:System.ArgumentException">정렬하는 동안<paramref name="comparer" /> 구현에서 오류가 발생한 경우예를 들어, <paramref name="comparer" />는 항목을 항목 자체와 비교할 때 0을 반환하지 않을 수 있습니다.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Array" />에 있는 각 요소의 <see cref="T:System.IComparable" /> 구현을 사용하여 1차원 <see cref="T:System.Array" />이 요소 범위에 있는 요소를 정렬합니다.</summary>
      <param name="array">정렬할 1차원 <see cref="T:System.Array" />입니다.</param>
      <param name="index">정렬할 범위의 시작 인덱스입니다.</param>
      <param name="length">정렬할 범위에 있는 요소 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" />가 다차원 배열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="array" />의 하한보다 작은 경우또는<paramref name="length" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> 및 <paramref name="length" />에서 <paramref name="array" />에 대한 올바른 범위를 지정하지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="array" />의 요소 중 하나 이상이 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Int32,System.Int32,System.Collections.IComparer)">
      <summary>지정한 <see cref="T:System.Collections.IComparer" />를 사용하여 1차원 <see cref="T:System.Array" />의 요소 범위에 있는 요소를 정렬합니다.</summary>
      <param name="array">정렬할 1차원 <see cref="T:System.Array" />입니다.</param>
      <param name="index">정렬할 범위의 시작 인덱스입니다.</param>
      <param name="length">정렬할 범위에 있는 요소 수입니다.</param>
      <param name="comparer">요소를 비교할 때 사용하는 <see cref="T:System.Collections.IComparer" /> 구현입니다.또는각 요소의 <see cref="T:System.IComparable" /> 구현을 사용하면 null입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" />가 다차원 배열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="array" />의 하한보다 작은 경우또는<paramref name="length" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> 및 <paramref name="length" />에서 <paramref name="array" />에 대한 올바른 범위를 지정하지 않은 경우 또는정렬하는 동안<paramref name="comparer" /> 구현에서 오류가 발생한 경우예를 들어, <paramref name="comparer" />는 항목을 항목 자체와 비교할 때 0을 반환하지 않을 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" />가 null이고 <paramref name="array" />의 요소 중 하나 이상이 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort``1(``0[])">
      <summary>
        <see cref="T:System.Array" />에 있는 각 요소의 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스 구현을 사용하여 전체 <see cref="T:System.Array" />의 요소를 정렬합니다.</summary>
      <param name="array">정렬할 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="array" />의 요소 중 하나 이상이 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스를 구현하지 않는 경우</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Collections.Generic.IComparer{``0})">
      <summary>지정한 <see cref="T:System.Collections.Generic.IComparer`1" /> 제네릭 인터페이스를 사용하여 <see cref="T:System.Array" />의 요소를 정렬합니다.</summary>
      <param name="array">정렬할 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.</param>
      <param name="comparer">요소를 비교할 때 사용할 <see cref="T:System.Collections.Generic.IComparer`1" /> 제네릭 인터페이스 구현이거나 각 요소의 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스 구현을 사용할 경우 null입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" />가 null이고 <paramref name="array" />의 요소 중 하나 이상이 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스를 구현하지 않는 경우</exception>
      <exception cref="T:System.ArgumentException">정렬하는 동안<paramref name="comparer" /> 구현에서 오류가 발생한 경우예를 들어, <paramref name="comparer" />는 항목을 항목 자체와 비교할 때 0을 반환하지 않을 수 있습니다.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Comparison{``0})">
      <summary>지정한 <see cref="T:System.Comparison`1" />을 사용하여 <see cref="T:System.Array" />의 요소를 정렬합니다.</summary>
      <param name="array">정렬할 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.</param>
      <param name="comparison">요소를 비교할 때 사용할 <see cref="T:System.Comparison`1" />입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우또는<paramref name="comparison" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentException">정렬하는 동안<paramref name="comparison" /> 구현에서 오류가 발생한 경우예를 들어, <paramref name="comparison" />는 항목을 항목 자체와 비교할 때 0을 반환하지 않을 수 있습니다.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Array" />에 있는 각 요소의 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스 구현을 사용하여 <see cref="T:System.Array" />의 요소 범위에 있는 요소를 정렬합니다.</summary>
      <param name="array">정렬할 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.</param>
      <param name="index">정렬할 범위의 시작 인덱스입니다.</param>
      <param name="length">정렬할 범위에 있는 요소 수입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="array" />의 하한보다 작은 경우또는<paramref name="length" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> 및 <paramref name="length" />에서 <paramref name="array" />에 대한 올바른 범위를 지정하지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="array" />의 요소 중 하나 이상이 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스를 구현하지 않는 경우</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})">
      <summary>지정한 <see cref="T:System.Collections.Generic.IComparer`1" /> 제네릭 인터페이스를 사용하여 <see cref="T:System.Array" />의 요소 범위에 있는 요소를 정렬합니다.</summary>
      <param name="array">정렬할 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.</param>
      <param name="index">정렬할 범위의 시작 인덱스입니다.</param>
      <param name="length">정렬할 범위에 있는 요소 수입니다.</param>
      <param name="comparer">요소를 비교할 때 사용할 <see cref="T:System.Collections.Generic.IComparer`1" /> 제네릭 인터페이스 구현이거나 각 요소의 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스 구현을 사용할 경우 null입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="array" />의 하한보다 작은 경우또는<paramref name="length" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> 및 <paramref name="length" />에서 <paramref name="array" />에 대한 올바른 범위를 지정하지 않은 경우 또는정렬하는 동안<paramref name="comparer" /> 구현에서 오류가 발생한 경우예를 들어, <paramref name="comparer" />는 항목을 항목 자체와 비교할 때 0을 반환하지 않을 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" />가 null이고 <paramref name="array" />의 요소 중 하나 이상이 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스를 구현하지 않는 경우</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[])">
      <summary>각 키의 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스 구현을 사용하여 첫 번째 <see cref="T:System.Array" />에 있는 키를 기반으로 하는 한 쌍의 <see cref="T:System.Array" /> 개체(키를 포함하는 개체와 해당 항목을 포함하는 개체)를 정렬합니다.</summary>
      <param name="keys">정렬할 키를 포함하는 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다. </param>
      <param name="items">
        <paramref name="keys" />의 키에 해당하는 항목을 포함하는 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)이거나 <paramref name="keys" />만 정렬할 경우 null입니다.</param>
      <typeparam name="TKey">키 배열 요소의 형식입니다.</typeparam>
      <typeparam name="TValue">항목 배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" />가 null이 아니고 <paramref name="keys" />의 하한이 <paramref name="items" />의 하한과 일치하지 않는 경우또는<paramref name="items" />가 null이 아니고 <paramref name="keys" />의 길이가 <paramref name="items" />의 길이보다 긴 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="keys" />
        <see cref="T:System.Array" />의 요소 중 하나 이상이 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스를 구현하지 않는 경우</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[],System.Collections.Generic.IComparer{``0})">
      <summary>지정한 <see cref="T:System.Collections.Generic.IComparer`1" /> 제네릭 인터페이스를 사용하여 첫 번째 <see cref="T:System.Array" />에 있는 키를 기반으로 하는 한 쌍의 <see cref="T:System.Array" /> 개체(키를 포함하는 개체와 해당 항목을 포함하는 개체)를 정렬합니다.</summary>
      <param name="keys">정렬할 키를 포함하는 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다. </param>
      <param name="items">
        <paramref name="keys" />의 키에 해당하는 항목을 포함하는 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)이거나 <paramref name="keys" />만 정렬할 경우 null입니다.</param>
      <param name="comparer">요소를 비교할 때 사용할 <see cref="T:System.Collections.Generic.IComparer`1" /> 제네릭 인터페이스 구현이거나 각 요소의 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스 구현을 사용할 경우 null입니다.</param>
      <typeparam name="TKey">키 배열 요소의 형식입니다.</typeparam>
      <typeparam name="TValue">항목 배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" />가 null이 아니고 <paramref name="keys" />의 하한이 <paramref name="items" />의 하한과 일치하지 않는 경우또는<paramref name="items" />가 null이 아니고 <paramref name="keys" />의 길이가 <paramref name="items" />의 길이보다 긴 경우또는정렬하는 동안<paramref name="comparer" /> 구현에서 오류가 발생한 경우예를 들어, <paramref name="comparer" />는 항목을 항목 자체와 비교할 때 0을 반환하지 않을 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" />가 null이고 <paramref name="keys" /><see cref="T:System.Array" />의 요소 중 하나 이상이 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스를 구현하지 않는 경우</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32)">
      <summary>각 키에서 구현하는 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스를 사용하여 첫 번째 <see cref="T:System.Array" />에 있는 키를 기반으로 하는 한 쌍의 <see cref="T:System.Array" /> 개체(키를 포함하는 개체와 해당 항목을 포함하는 개체)의 요소 범위를 정렬합니다.</summary>
      <param name="keys">정렬할 키를 포함하는 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다. </param>
      <param name="items">
        <paramref name="keys" />의 키에 해당하는 항목을 포함하는 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)이거나 <paramref name="keys" />만 정렬할 경우 null입니다.</param>
      <param name="index">정렬할 범위의 시작 인덱스입니다.</param>
      <param name="length">정렬할 범위에 있는 요소 수입니다.</param>
      <typeparam name="TKey">키 배열 요소의 형식입니다.</typeparam>
      <typeparam name="TValue">항목 배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="keys" />의 하한보다 작은 경우또는<paramref name="length" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" />가 null이 아니고 <paramref name="keys" />의 하한이 <paramref name="items" />의 하한과 일치하지 않는 경우또는<paramref name="items" />가 null이 아니고 <paramref name="keys" />의 길이가 <paramref name="items" />의 길이보다 긴 경우또는<paramref name="index" /> 및 <paramref name="length" />가 <paramref name="keys" /><see cref="T:System.Array" />에서 올바른 범위를 지정하지 않는 경우또는<paramref name="items" />가 null이 아니고 <paramref name="index" /> 및 <paramref name="length" />가 <paramref name="items" /><see cref="T:System.Array" />에서 올바른 범위를 지정하지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="keys" />
        <see cref="T:System.Array" />의 요소 중 하나 이상이 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스를 구현하지 않는 경우</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})">
      <summary>지정한 <see cref="T:System.Collections.Generic.IComparer`1" /> 제네릭 인터페이스를 사용하여 첫 번째 <see cref="T:System.Array" />에 있는 키를 기반으로 하는 한 쌍의 <see cref="T:System.Array" /> 개체(키를 포함하는 개체와 해당 항목을 포함하는 개체)의 요소 범위를 정렬합니다.</summary>
      <param name="keys">정렬할 키를 포함하는 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다. </param>
      <param name="items">
        <paramref name="keys" />의 키에 해당하는 항목을 포함하는 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)이거나 <paramref name="keys" />만 정렬할 경우 null입니다.</param>
      <param name="index">정렬할 범위의 시작 인덱스입니다.</param>
      <param name="length">정렬할 범위에 있는 요소 수입니다.</param>
      <param name="comparer">요소를 비교할 때 사용할 <see cref="T:System.Collections.Generic.IComparer`1" /> 제네릭 인터페이스 구현이거나 각 요소의 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스 구현을 사용할 경우 null입니다.</param>
      <typeparam name="TKey">키 배열 요소의 형식입니다.</typeparam>
      <typeparam name="TValue">항목 배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="keys" />의 하한보다 작은 경우또는<paramref name="length" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" />가 null이 아니고 <paramref name="keys" />의 하한이 <paramref name="items" />의 하한과 일치하지 않는 경우또는<paramref name="items" />가 null이 아니고 <paramref name="keys" />의 길이가 <paramref name="items" />의 길이보다 긴 경우또는<paramref name="index" /> 및 <paramref name="length" />가 <paramref name="keys" /><see cref="T:System.Array" />에서 올바른 범위를 지정하지 않는 경우또는<paramref name="items" />가 null이 아니고 <paramref name="index" /> 및 <paramref name="length" />가 <paramref name="items" /><see cref="T:System.Array" />에서 올바른 범위를 지정하지 않는 경우 또는정렬하는 동안<paramref name="comparer" /> 구현에서 오류가 발생한 경우예를 들어, <paramref name="comparer" />는 항목을 항목 자체와 비교할 때 0을 반환하지 않을 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" />가 null이고 <paramref name="keys" /><see cref="T:System.Array" />의 요소 중 하나 이상이 <see cref="T:System.IComparable`1" /> 제네릭 인터페이스를 구현하지 않는 경우</exception>
    </member>
    <member name="P:System.Array.System#Collections#ICollection#Count">
      <summary>
        <see cref="T:System.Array" />에 포함된 요소 수를 가져옵니다.</summary>
      <returns>컬렉션에 포함된 요소 수입니다.</returns>
    </member>
    <member name="P:System.Array.System#Collections#ICollection#IsSynchronized">
      <summary>
        <see cref="T:System.Array" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>true if access to the <see cref="T:System.Array" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Array.System#Collections#ICollection#SyncRoot">
      <summary>
        <see cref="T:System.Array" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Array" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Array.System#Collections#IList#Add(System.Object)">
      <summary>이 메서드를 호출 throw 한 <see cref="T:System.NotSupportedException" /> 예외입니다. </summary>
      <returns>배열에 값을 추가하는 것은 지원되지 않습니다.값이 반환되지 않습니다.</returns>
      <param name="value">개체가 <see cref="T:System.Collections.IList" />에 추가됩니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" />의 크기가 고정되어 있는 경우</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#Clear">
      <summary>
        <see cref="T:System.Collections.IList" />에서 항목을 모두 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" />이 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#Contains(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" />에 요소가 있는지 여부를 확인합니다.</summary>
      <returns>true if <paramref name="value" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.</returns>
      <param name="value">현재 목록에서 찾을 개체입니다.찾을 요소는 참조 형식에 대해 null이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Array.System#Collections#IList#IndexOf(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" />에서 특정 항목의 인덱스를 결정합니다.</summary>
      <returns>목록에 값이 있으면 해당 값의 인덱스이고, 그러지 않으면 -1입니다.</returns>
      <param name="value">현재 목록에서 찾을 개체입니다.</param>
    </member>
    <member name="M:System.Array.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>항목을 <see cref="T:System.Collections.IList" />의 지정된 인덱스에 삽입합니다.</summary>
      <param name="index">
        <paramref name="value" />를 삽입할 인덱스입니다.</param>
      <param name="value">삽입할 개체입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <see cref="T:System.Collections.IList" />의 유효한 인덱스가 아닌 경우 </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" />이 읽기 전용인 경우또는 <see cref="T:System.Collections.IList" />의 크기가 고정되어 있는 경우 </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="value" />가 <see cref="T:System.Collections.IList" />에서 null 참조인 경우</exception>
    </member>
    <member name="P:System.Array.System#Collections#IList#IsFixedSize">
      <summary>
        <see cref="T:System.Array" />의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>true if the <see cref="T:System.Array" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Array.System#Collections#IList#IsReadOnly">
      <summary>
        <see cref="T:System.Array" />이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>true if the <see cref="T:System.Array" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Array.System#Collections#IList#Item(System.Int32)">
      <summary>지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>지정한 인덱스의 요소입니다.</returns>
      <param name="index">가져오거나 설정할 요소의 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우또는<paramref name="index" />가 <see cref="P:System.Collections.ICollection.Count" />보다 크거나 같은 경우</exception>
      <exception cref="T:System.ArgumentException">현재 <see cref="T:System.Array" />에 1차원이 없는 경우</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#Remove(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" />에서 맨 처음 발견되는 특정 개체를 제거합니다.</summary>
      <param name="value">
        <see cref="T:System.Collections.IList" />에서 제거할 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" />이 읽기 전용인 경우또는 <see cref="T:System.Collections.IList" />의 크기가 고정되어 있는 경우 </exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>지정한 인덱스에서 <see cref="T:System.Collections.IList" /> 항목을 제거합니다.</summary>
      <param name="index">제거할 요소의 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">인덱스는 <see cref="T:System.Collections.IList" />의 유효한 인덱스가 아닙니다. </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" />이 읽기 전용인 경우또는 <see cref="T:System.Collections.IList" />의 크기가 고정되어 있는 경우</exception>
    </member>
    <member name="M:System.Array.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>정렬 순서에서 현재 컬렉션 개체의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 확인합니다.</summary>
      <returns>다음 표와 같이 현재 컬렉션 개체와 다른 개체 사이의 관계를 나타내는 정수입니다.반환 값설명-1현재 인스턴스가 <paramref name="other" /> 앞에 옵니다.0현재 인스턴스와 <paramref name="other" />가 같습니다.1현재 인스턴스가 <paramref name="other" /> 뒤에 옵니다.</returns>
      <param name="other">현재 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">현재 개체와 <paramref name="other" />를 비교하는 개체입니다.</param>
    </member>
    <member name="M:System.Array.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>개체가 현재 인스턴스와 같은지를 확인합니다.</summary>
      <returns>두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="other">현재 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">현재 인스턴스와 <paramref name="other" />가 같은지 여부를 확인하는 개체입니다. </param>
    </member>
    <member name="M:System.Array.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>현재 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>현재 인스턴스에 대한 해시 코드입니다.</returns>
      <param name="comparer">현재 개체의 해시 코드를 계산하는 개체입니다.</param>
    </member>
    <member name="M:System.Array.TrueForAll``1(``0[],System.Predicate{``0})">
      <summary>배열의 모든 요소가 지정한 조건자에 정의된 조건과 일치하는지를 확인합니다.</summary>
      <returns>
        <paramref name="array" />의 모든 요소가 지정한 조건자에 정의된 조건과 일치하면 true이고, 그렇지 않으면 false입니다.배열에 요소가 없으면 반환 값은 true입니다.</returns>
      <param name="array">조건에 대해 확인할 1차원 <see cref="T:System.Array" />(인덱스는 0부터 시작)입니다.</param>
      <param name="match">요소에 대해 확인할 조건을 정의하는 조건자입니다.</param>
      <typeparam name="T">배열 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우또는<paramref name="match" />가 null인 경우</exception>
    </member>
    <member name="T:System.ArraySegment`1">
      <summary>1차원 배열의 섹션을 구분합니다.</summary>
      <typeparam name="T">배열 세그먼트의 요소 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArraySegment`1.#ctor(`0[])">
      <summary>지정된 배열의 모든 요소를 구분하는 <see cref="T:System.ArraySegment`1" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="array">래핑할 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
    </member>
    <member name="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
      <summary>지정된 배열에서 지정된 범위의 요소를 구분하는 <see cref="T:System.ArraySegment`1" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="array">구분할 범위의 요소가 포함된 배열입니다.</param>
      <param name="offset">범위에 있는 첫 번째 요소의 인덱스(0부터 시작)입니다.</param>
      <param name="count">범위의 요소 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 또는 <paramref name="count" />가 0 미만인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> 및 <paramref name="count" />에서 <paramref name="array" />에 대한 올바른 범위를 지정하지 않은 경우</exception>
    </member>
    <member name="P:System.ArraySegment`1.Array">
      <summary>배열 세그먼트가 구분하는 범위의 요소가 포함된 원본 배열을 가져옵니다.</summary>
      <returns>생성자에 전달된 원본 배열로, <see cref="T:System.ArraySegment`1" />로 구분된 범위를 포함합니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ArraySegment`1.Count">
      <summary>배열 세그먼트로 구분된 범위의 요소 수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.ArraySegment`1" />로 구분된 범위의 요소 수입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
      <summary>지정된 <see cref="T:System.ArraySegment`1" /> 구조체가 현재 인스턴스와 같은지 여부를 확인합니다.</summary>
      <returns>지정된 <see cref="T:System.ArraySegment`1" /> 구조체가 현재 인스턴스와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">현재 구조체와 비교할 구조체입니다.</param>
    </member>
    <member name="M:System.ArraySegment`1.Equals(System.Object)">
      <summary>지정된 개체와 현재 개체가 같은지를 확인합니다.</summary>
      <returns>지정된 개체가 <see cref="T:System.ArraySegment`1" /> 구조체이고 현재 인스턴스와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">현재 인스턴스와 비교할 개체입니다.</param>
    </member>
    <member name="M:System.ArraySegment`1.GetHashCode">
      <summary>현재 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="P:System.ArraySegment`1.Offset">
      <summary>배열 세그먼트로 구분된 범위의 첫 번째 요소 위치를 가져옵니다. 이 위치는 원본 배열의 시작에 상대적입니다.</summary>
      <returns>
        <see cref="T:System.ArraySegment`1" />로 구분된 범위의 첫 번째 요소 위치입니다. 이 위치는 원본 배열의 시작에 상대적입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
      <summary>두 개의 <see cref="T:System.ArraySegment`1" /> 구조체가 같은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="a" />가 <paramref name="b" />와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="a">같음 연산자 왼쪽에 있는  구조체입니다.</param>
      <param name="b">같음 연산자 오른쪽에 있는 구조체입니다.</param>
    </member>
    <member name="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
      <summary>두 가지 <see cref="T:System.ArraySegment`1" /> 구조체가 같지 않은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="a" />가 <paramref name="b" />와 다르면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="a">같지 않음 연산자 왼쪽에 있는 구조체입니다.</param>
      <param name="b">같지 않음 연산자 오른쪽에 있는 구조체입니다.</param>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>배열 세그먼트에 항목을 추가합니다.</summary>
      <param name="item">배열 세그먼트에 추가할 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">배열 세그먼트가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>배열 세그먼트에서 모든 항목을 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException">배열 세그먼트가 읽기 전용인 경우 </exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Contains(`0)">
      <summary>배열 세그먼트에 특정 값이 들어 있는지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="item" />이 배열 세그먼트에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="item">배열 세그먼트에서 찾을 개체입니다.</param>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)">
      <summary>지정한 배열 인덱스부터 배열 세그먼트의 요소를 배열에 복사합니다.</summary>
      <param name="array">배열 세그먼트에서 복사한 요소의 대상인 1차원 배열입니다.배열에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="arrayIndex">
        <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 다차원 배열인 경우또는소스 배열 세그먼트의 요소 수가 <paramref name="arrayIndex" />부터 대상 <paramref name="array" /> 끝까지의 사용 가능한 공간보다 큰 경우또는<paramref name="T" /> 형식을 대상 <paramref name="array" />의 형식으로 자동 캐스팅할 수 없는 경우</exception>
    </member>
    <member name="P:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>배열 세그먼트가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>배열 세그먼트가 읽기 전용이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>배열 세그먼트에서 특정 개체가 처음 나타나는 부분을 제거합니다.</summary>
      <returns>
        <paramref name="item" />이 배열 세그먼트에서 성공적으로 제거되었으면 true이고, 그렇지 않으면 false입니다.이 메서드는 배열 세그먼트에 <paramref name="item" />이 없는 경우에도 false를 반환합니다.</returns>
      <param name="item">배열 세그먼트에서 제거할 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">배열 세그먼트가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>배열 세그먼트를 반복하는 열거자를 반환합니다.</summary>
      <returns>배열 세그먼트를 반복하는 데 사용할 수 있는 열거자입니다.</returns>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IList{T}#IndexOf(`0)">
      <summary>배열 세그먼트에서 특정 항목의 인덱스를 확인합니다.</summary>
      <returns>목록에 있으면 <paramref name="item" />의 인덱스이고, 그렇지 않으면 -1입니다.</returns>
      <param name="item">배열 세그먼트에서 찾을 개체입니다.</param>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>항목을 배열 세그먼트의 지정된 인덱스에 삽입합니다.</summary>
      <param name="index">
        <paramref name="item" />를 삽입해야 하는 인덱스(0부터 시작)입니다.</param>
      <param name="item">배열 세그먼트에 삽입할 개체입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 배열 세그먼트의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.NotSupportedException">배열 세그먼트가 읽기 전용인 경우</exception>
    </member>
    <member name="P:System.ArraySegment`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>지정한 인덱스의 요소입니다.</returns>
      <param name="index">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <see cref="T:System.ArraySegment`1" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.NotSupportedException">속성이 설정되어 있으며 배열 세그먼트가 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>지정된 인덱스에 있는 배열 세그먼트 항목을 제거합니다.</summary>
      <param name="index">제거할 항목의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 배열 세그먼트의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.NotSupportedException">배열 세그먼트가 읽기 전용인 경우</exception>
    </member>
    <member name="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList{T}#Item(System.Int32)">
      <summary>배열 세그먼트의 지정된 인덱스에 있는 요소를 가져옵니다.</summary>
      <returns>지정한 인덱스의 요소입니다.</returns>
      <param name="index">가져올 요소의 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <see cref="T:System.ArraySegment`1" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.NotSupportedException">속성이 설정된 경우</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>배열 세그먼트를 반복하는 열거자를 반환합니다.</summary>
      <returns>배열 세그먼트를 반복하는 데 사용할 수 있는 열거자입니다.</returns>
    </member>
    <member name="T:System.ArrayTypeMismatchException">
      <summary>배열 내에 잘못된 형식의 요소를 저장하려고 할 때 throw되는 예외입니다. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor">
      <summary>
        <see cref="T:System.ArrayTypeMismatchException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.ArrayTypeMismatchException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다. </param>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.ArrayTypeMismatchException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null 참조가 아닌 경우 내부 예외를 처리하는 catch 블록에서 현재 예외가 발생합니다.</param>
    </member>
    <member name="T:System.AsyncCallback">
      <summary>해당 비동기 작업을 완료할 때 호출되는 메서드를 참조합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AsyncCallback.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.AsyncCallback.BeginInvoke(System.IAsyncResult,System.AsyncCallback,System.Object)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AsyncCallback.EndInvoke(System.IAsyncResult)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AsyncCallback.Invoke(System.IAsyncResult)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Attribute">
      <summary>사용자 지정 특성에 대한 기본 클래스를 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.#ctor">
      <summary>
        <see cref="T:System.Attribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Attribute.Equals(System.Object)">
      <summary>이 인스턴스가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="obj" />가 이 인스턴스의 형식 및 값과 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 <see cref="T:System.Object" /> 또는 null입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Attribute.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.AttributeTargets">
      <summary>특성을 적용할 수 있는 응용 프로그램 요소를 지정합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.AttributeTargets.All">
      <summary>특성은 모든 응용 프로그램 요소에 적용할 수 있습니다.</summary>
    </member>
    <member name="F:System.AttributeTargets.Assembly">
      <summary>특성은 어셈블리에 적용할 수 있습니다.</summary>
    </member>
    <member name="F:System.AttributeTargets.Class">
      <summary>특성은 클래스에 적용할 수 있습니다.</summary>
    </member>
    <member name="F:System.AttributeTargets.Constructor">
      <summary>특성은 생성자에 적용할 수 있습니다.</summary>
    </member>
    <member name="F:System.AttributeTargets.Delegate">
      <summary>특성은 대리자에 적용할 수 있습니다.</summary>
    </member>
    <member name="F:System.AttributeTargets.Enum">
      <summary>특성은 열거형에 적용할 수 있습니다.</summary>
    </member>
    <member name="F:System.AttributeTargets.Event">
      <summary>특성은 이벤트에 적용할 수 있습니다.</summary>
    </member>
    <member name="F:System.AttributeTargets.Field">
      <summary>특성은 필드에 적용할 수 있습니다.</summary>
    </member>
    <member name="F:System.AttributeTargets.GenericParameter">
      <summary>특성은 제네릭 매개 변수에 적용할 수 있습니다.</summary>
    </member>
    <member name="F:System.AttributeTargets.Interface">
      <summary>특성은 인터페이스에 적용할 수 있습니다.</summary>
    </member>
    <member name="F:System.AttributeTargets.Method">
      <summary>특성은 메서드에 적용할 수 있습니다.</summary>
    </member>
    <member name="F:System.AttributeTargets.Module">
      <summary>특성은 모듈에 적용할 수 있습니다.</summary>
    </member>
    <member name="F:System.AttributeTargets.Parameter">
      <summary>특성은 매개 변수에 적용할 수 있습니다.</summary>
    </member>
    <member name="F:System.AttributeTargets.Property">
      <summary>특성은 속성에 적용할 수 있습니다.</summary>
    </member>
    <member name="F:System.AttributeTargets.ReturnValue">
      <summary>특성은 반환 값에 적용할 수 있습니다.</summary>
    </member>
    <member name="F:System.AttributeTargets.Struct">
      <summary>특성은 구조체 즉, 값 형식에 적용할 수 있습니다.</summary>
    </member>
    <member name="T:System.AttributeUsageAttribute">
      <summary>다른 특성 클래스의 용도를 지정합니다.이 클래스는 상속될 수 없습니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)">
      <summary>지정된 <see cref="T:System.AttributeTargets" /> 목록, <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> 값 및 <see cref="P:System.AttributeUsageAttribute.Inherited" /> 값을 사용하여 <see cref="T:System.AttributeUsageAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="validOn">올바른 프로그램 요소임을 나타내도록 비트 OR 연산을 사용하여 결합된 값 집합입니다. </param>
    </member>
    <member name="P:System.AttributeUsageAttribute.AllowMultiple">
      <summary>표시된 특성의 인스턴스가 하나의 프로그램 요소에 여러 개 지정될 수 있는지 여부를 나타내는 부울 값을 가져오거나 설정합니다.</summary>
      <returns>여러 개의 인스턴스가 지정될 수 있으면 true이고, 그렇지 않으면 false입니다.기본값은 false입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AttributeUsageAttribute.Inherited">
      <summary>파생된 클래스 또는 재정의하는 멤버에 표시된 특성이 상속되는지 여부를 나타내는 부울 값을 가져오거나 설정합니다.</summary>
      <returns>파생된 클래스 또는 재정의하는 멤버에 해당 특성이 상속되면 true이고, 그렇지 않으면 false입니다.기본값은 true입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AttributeUsageAttribute.ValidOn">
      <summary>표시된 특성이 적용될 수 있는 프로그램 요소를 식별하는 값을 가져오거나 설정합니다.</summary>
      <returns>하나 또는 여러 개의 <see cref="T:System.AttributeTargets" /> 값입니다.기본값은 All입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.BadImageFormatException">
      <summary>DLL(동적 연결 라이브러리)의 파일 이미지 또는 실행 가능한 프로그램이 유효하지 않을 때 throw되는 예외입니다. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.BadImageFormatException.#ctor">
      <summary>
        <see cref="T:System.BadImageFormatException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.BadImageFormatException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다. </param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.BadImageFormatException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="inner">현재 예외의 원인인 예외입니다.<paramref name="inner" /> 매개 변수가 null 참조가 아닌 경우 내부 예외를 처리하는 catch 블록에서 현재 예외가 발생합니다.</param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String,System.String)">
      <summary>지정된 오류 메시지와 파일 이름을 사용하여 <see cref="T:System.BadImageFormatException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다. </param>
      <param name="fileName">잘못된 이미지를 포함하는 파일의 전체 이름입니다. </param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.BadImageFormatException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="fileName">잘못된 이미지를 포함하는 파일의 전체 이름입니다. </param>
      <param name="inner">현재 예외의 원인인 예외입니다.<paramref name="inner" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="P:System.BadImageFormatException.FileName">
      <summary>이 예외를 발생시킨 파일의 이름을 가져옵니다.</summary>
      <returns>잘못된 이미지를 포함하는 파일의 이름이거나, 현재 인스턴스의 생성자에 전달된 파일 이름이 없으면 null 참조입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.BadImageFormatException.Message">
      <summary>오류 메시지와 이 예외를 발생시킨 파일의 이름을 가져옵니다.</summary>
      <returns>오류 메시지와 이 예외를 발생시킨 파일의 이름이 들어 있는 문자열입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.BadImageFormatException.ToString">
      <summary>이 예외의 정규화된 이름과 오류 메시지, 내부 예외 이름 및 스택 추적을 반환합니다.</summary>
      <returns>이 예외의 정규화된 이름과 오류 메시지, 내부 예외 이름 및 스택 추적을 포함하는 문자열입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.Boolean">
      <summary>부울(true 또는 false) 값을 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.CompareTo(System.Boolean)">
      <summary>이 인스턴스와 지정된 <see cref="T:System.Boolean" /> 개체를 비교하고 서로의 관계를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 정수입니다.반환 값 조건 0보다 작음 이 인스턴스는 false이고 <paramref name="value" />는 true입니다. 0 이 인스턴스와 <paramref name="value" />는 같습니다. 즉, 둘 다 true이거나 둘 다 false입니다. 0보다 큼 이 인스턴스는 true이고 <paramref name="value" />는 false입니다. </returns>
      <param name="value">이 인스턴스와 비교할 <see cref="T:System.Boolean" /> 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.Equals(System.Boolean)">
      <summary>이 인스턴스가 지정된 <see cref="T:System.Boolean" /> 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="obj" />가 이 인터페이스와 같은 값을 가지면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 <see cref="T:System.Boolean" /> 값입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.Equals(System.Object)">
      <summary>이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true if <paramref name="obj" /> is a <see cref="T:System.Boolean" /> and has the same value as this instance; otherwise, false.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Boolean.FalseString">
      <summary>부울 값 false를 문자열로 나타냅니다.이 필드는 읽기 전용입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>현재 <see cref="T:System.Boolean" />에 대한 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.Parse(System.String)">
      <summary>논리 값의 지정된 문자열 표현을 해당하는 <see cref="T:System.Boolean" />으로 변환하거나, 문자열이 <see cref="F:System.Boolean.TrueString" /> 또는 <see cref="F:System.Boolean.FalseString" />의 값과 같지 않으면 예외를 throw합니다.</summary>
      <returns>
        <paramref name="value" />가 <see cref="F:System.Boolean.TrueString" /> 필드의 값과 같으면 true이고, <paramref name="value" />가 <see cref="F:System.Boolean.FalseString" /> 필드의 값과 같으면 false입니다.</returns>
      <param name="value">변환할 값이 들어 있는 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />가 null인 경우 </exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" />가 <see cref="F:System.Boolean.TrueString" /> 또는 <see cref="F:System.Boolean.FalseString" /> 필드의 값과 같지 않은 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.System#IComparable#CompareTo(System.Object)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="obj" />의 상대 순서를 나타내는 부호 있는 정수입니다.반환 값 조건 0보다 작음 이 인스턴스는 false이고 <paramref name="obj" />는 true입니다. 0 이 인스턴스와 <paramref name="obj" />는 같습니다. 즉, 둘 다 true이거나 둘 다 false입니다. 0보다 큼 이 인스턴스는 true이고 <paramref name="obj" />는 false입니다.또는 <paramref name="obj" />가 null인 경우 </returns>
      <param name="obj">이 인스턴스와 비교할 개체 또는 null입니다.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>true 또는 false</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>이 인스턴스의 값이 true이면 1이고, 그렇지 않으면 0입니다. </returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 변환은 지원되지 않습니다.값이 반환되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">
        <see cref="T:System.Boolean" /> 값을 <see cref="T:System.Char" /> 값으로 변환하려고 한 경우.이 변환은 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 변환은 지원되지 않습니다.값이 반환되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">
        <see cref="T:System.Boolean" /> 값을 <see cref="T:System.DateTime" /> 값으로 변환하려고 한 경우.이 변환은 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />을 참조하십시오.</summary>
      <returns>이 인스턴스가 true이면 1이고, 그렇지 않으면 0입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />을 참조하십시오.</summary>
      <returns>이 인스턴스가 true이면 1이고, 그렇지 않으면 0입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>이 인스턴스가 true이면 1이고, 그렇지 않으면 0입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>이 인스턴스가 true이면 1이고, 그렇지 않으면 0입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>이 인스턴스가 true이면 1이고, 그렇지 않으면 0입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>이 인스턴스가 true이면 1이고, 그렇지 않으면 0입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />을 참조하십시오.</summary>
      <returns>이 인스턴스가 true이면 1이고, 그렇지 않으면 0입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToString(System.IFormatProvider)"></member>
    <member name="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>이 Boolean 개체의 값과 같은 값이 들어 있는 지정된 형식의 개체입니다.</returns>
      <param name="type">필요한 형식입니다. </param>
      <param name="provider">반환된 값의 형식에 대한 문화권별 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 구현입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" />가 null인 경우 </exception>
      <exception cref="T:System.InvalidCastException">요청된 형식 변환이 지원되지 않는 경우 </exception>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>이 인스턴스가 true이면 1이고, 그렇지 않으면 0입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>이 인스턴스가 true이면 1이고, 그렇지 않으면 0입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>이 인스턴스가 true이면 1이고, 그렇지 않으면 0입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Boolean.ToString">
      <summary>이 인스턴스의 값을 해당하는 문자열 표현("True" 또는 "False")으로 변환합니다.</summary>
      <returns>이 인스턴스의 값이 true이면 <see cref="F:System.Boolean.TrueString" />이고, 이 인스턴스의 값이 false이면 <see cref="F:System.Boolean.FalseString" />입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Boolean.TrueString">
      <summary>부울 값 true를 문자열로 나타냅니다.이 필드는 읽기 전용입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.TryParse(System.String,System.Boolean@)">
      <summary>논리 값의 지정된 문자열 표현을 해당하는 <see cref="T:System.Boolean" />으로 변환하려고 시도합니다.반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>
        <paramref name="value" />가 성공적으로 변환되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">변환할 값이 들어 있는 문자열입니다. </param>
      <param name="result">변환이 성공하는 경우 이 메서드에서 반환될 때 <paramref name="value" />가 <see cref="F:System.Boolean.TrueString" />과 같으면 true가 포함되고, <paramref name="value" />가 <see cref="F:System.Boolean.FalseString" />과 같으면 false가 포함됩니다.변환이 실패한 경우에는 false가 포함됩니다.<paramref name="value" />가 null이거나 <see cref="F:System.Boolean.TrueString" /> 또는 <see cref="F:System.Boolean.FalseString" /> 필드 값과 동일하지 않으면 변환이 실패합니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Buffer">
      <summary>기본 형식의 배열을 조작합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Buffer.BlockCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>특정 오프셋에서 시작하는 소스 배열에서 특정 오프셋에서 시작하는 대상 배열로 지정된 바이트 수를 복사합니다.</summary>
      <param name="src">소스 버퍼입니다. </param>
      <param name="srcOffset">
        <paramref name="src" />에 대한 바이트 오프셋입니다(0부터 시작). </param>
      <param name="dst">대상 버퍼입니다. </param>
      <param name="dstOffset">
        <paramref name="dst" />에 대한 바이트 오프셋입니다(0부터 시작). </param>
      <param name="count">복사할 바이트 수입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="src" /> 또는 <paramref name="dst" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="src" /> 또는 <paramref name="dst" />가 기본 형식의 배열이 아닌 경우또는 <paramref name="src" />의 바이트 수가 <paramref name="srcOffset" />와 <paramref name="count" />를 더한 값보다 작습니다.또는 <paramref name="dst" />의 바이트 수가 <paramref name="dstOffset" />와 <paramref name="count" />를 더한 값보다 작습니다. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="srcOffset" />, <paramref name="dstOffset" /> 또는 <paramref name="count" />가 0 미만인 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Buffer.ByteLength(System.Array)">
      <summary>지정된 배열의 바이트 수를 반환합니다.</summary>
      <returns>배열의 바이트 수입니다.</returns>
      <param name="array">배열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 기본 형식이 아닌 경우 </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="array" />가 2GB보다 큰 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Buffer.GetByte(System.Array,System.Int32)">
      <summary>지정된 배열의 지정된 위치에 있는 바이트를 검색합니다.</summary>
      <returns>배열의 <paramref name="index" /> 바이트를 반환합니다.</returns>
      <param name="array">배열입니다. </param>
      <param name="index">배열 내의 위치입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 기본 형식이 아닌 경우 </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 음수이거나 <paramref name="array" />의 길이보다 큰 경우 </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="array" />가 2GB보다 큰 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Buffer.MemoryCopy(System.Void*,System.Void*,System.Int64,System.Int64)">
      <summary>다른 하나의 메모리 주소에서 정수 (long) 값으로 지정 하는 바이트 수를 복사 합니다. </summary>
      <param name="source">복사할 바이트의 주소입니다. </param>
      <param name="destination">대상 주소입니다. </param>
      <param name="destinationSizeInBytes">대상 메모리 블록에서 사용할 수 있는 바이트 수입니다. </param>
      <param name="sourceBytesToCopy">복사할 바이트 수입니다.  </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceBytesToCopy" />가 <paramref name="destinationSizeInBytes" />보다 큰 경우 </exception>
    </member>
    <member name="M:System.Buffer.MemoryCopy(System.Void*,System.Void*,System.UInt64,System.UInt64)">
      <summary>다른 하나의 메모리 주소에서 부호 없는 정수 (long) 값으로 지정 된 바이트 수를 복사 합니다. </summary>
      <param name="source">복사할 바이트의 주소입니다. </param>
      <param name="destination">대상 주소입니다. </param>
      <param name="destinationSizeInBytes">대상 메모리 블록에서 사용할 수 있는 바이트 수입니다. </param>
      <param name="sourceBytesToCopy">복사할 바이트 수입니다.   </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceBytesToCopy" />가 <paramref name="destinationSizeInBytes" />보다 큰 경우 </exception>
    </member>
    <member name="M:System.Buffer.SetByte(System.Array,System.Int32,System.Byte)">
      <summary>지정된 배열의 특정 위치에 있는 바이트에 지정된 값을 할당합니다.</summary>
      <param name="array">배열입니다. </param>
      <param name="index">배열 내의 위치입니다. </param>
      <param name="value">할당할 값입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 기본 형식이 아닌 경우 </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 음수이거나 <paramref name="array" />의 길이보다 큰 경우 </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="array" />가 2GB보다 큰 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Byte">
      <summary>부호 없는 8비트 정수를 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.CompareTo(System.Byte)">
      <summary>이 인스턴스를 지정된 8비트 부호 없는 정수와 비교하여 상대 값의 표시를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 순서를 나타내는 부호 있는 정수입니다.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">비교할 8비트 부호 없는 정수입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.Equals(System.Byte)">
      <summary>이 인스턴스의 값과 지정된 <see cref="T:System.Byte" /> 개체의 값이 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 이 인스턴스와 같으면 <paramref name="obj" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.Equals(System.Object)">
      <summary>이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 <paramref name="obj" />의 인스턴스이고 이 인스턴스의 값과 같으면 <see cref="T:System.Byte" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>현재 <see cref="T:System.Byte" />의 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Byte.MaxValue">
      <summary>
        <see cref="T:System.Byte" />의 최대값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Byte.MinValue">
      <summary>
        <see cref="T:System.Byte" />의 최소값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String)">
      <summary>숫자의 문자열 표현을 해당하는 <see cref="T:System.Byte" />로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 포함된 수와 같은 바이트 값입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다.이 문자열은 <see cref="F:System.Globalization.NumberStyles.Integer" /> 스타일을 사용하여 해석됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>숫자를 지정된 스타일로 나타낸 문자열 표현을 해당 <see cref="T:System.Byte" />로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 포함된 수와 같은 바이트 값입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다.이 문자열은 <paramref name="style" />이 지정하는 스타일을 사용하여 해석됩니다.</param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 <see cref="T:System.Byte" />로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 포함된 수와 같은 바이트 값입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다.이 문자열은 <paramref name="style" />이 지정하는 스타일을 사용하여 해석됩니다.</param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <param name="provider">
        <paramref name="s" />의 형식에 대한 문화권별 정보를 제공하는 개체입니다.<paramref name="provider" />가 null이면 현재 스레드 문화권이 사용됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String,System.IFormatProvider)">
      <summary>숫자를 지정된 문화권별 형식으로 나타낸 문자열 표현을 해당 <see cref="T:System.Byte" />로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 포함된 수와 같은 바이트 값입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다.이 문자열은 <see cref="F:System.Globalization.NumberStyles.Integer" /> 스타일을 사용하여 해석됩니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 구문 분석 정보를 제공하는 개체입니다.<paramref name="provider" />가 null이면 현재 스레드 문화권이 사용됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.System#IComparable#CompareTo(System.Object)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 순서를 나타내는 부호 있는 정수입니다.Return value Description Less than zero This instance precedes <paramref name="value" /> in the sort order. Zero This instance occurs in the same position as <paramref name="value" /> in the sort order. Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">이 인스턴스와 비교할 개체 또는 null입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Byte" />. </exception>
    </member>
    <member name="M:System.Byte.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>현재 인스턴스의 값이 0이 아니면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>변경되지 않은 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Char" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 변환은 지원되지 않습니다.값이 반환되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Decimal" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Double" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int16" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.SByte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Single" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <paramref name="type" />으로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="type">이 <see cref="T:System.Byte" /> 값을 변환할 대상 형식입니다. </param>
      <param name="provider">반환된 값의 형식에 대한 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 구현입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null. </exception>
      <exception cref="T:System.InvalidCastException">The requested type conversion is not supported. </exception>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>
        <see cref="T:System.UInt16" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>
        <see cref="T:System.UInt32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>
        <see cref="T:System.UInt64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Byte.ToString">
      <summary>현재 <see cref="T:System.Byte" /> 개체의 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>이 개체의 값에 대한 문자열 표현이며, 맨 앞에 0이 오지 않고 0에서 9 사이의 숫자 시퀀스로 구성됩니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.ToString(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 지정 정보를 사용하여 현재 <see cref="T:System.Byte" /> 개체의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="provider" /> 매개 변수에 지정된 형식으로 이 개체의 값을 나타낸 문자열 표현입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.ToString(System.String)">
      <summary>지정된 형식을 사용하여 현재 <see cref="T:System.Byte" /> 개체의 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Byte" /> 매개 변수로 지정된 형식에 따른 현재 <paramref name="format" /> 개체의 문자열 표현입니다.</returns>
      <param name="format">숫자 서식 문자열입니다.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> includes an unsupported specifier.Supported format specifiers are listed in the Remarks section.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.ToString(System.String,System.IFormatProvider)">
      <summary>지정된 형식 및 문화권별 형식 지정 정보를 사용하여 현재 <see cref="T:System.Byte" /> 개체의 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Byte" /> 및 <paramref name="format" /> 매개 변수에 지정된 형식으로 현재 <paramref name="provider" /> 개체를 나타낸 문자열 표현입니다.</returns>
      <param name="format">표준 또는 사용자 지정 숫자 서식 문자열입니다.</param>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> includes an unsupported specifier.Supported format specifiers are listed in the Remarks section.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.TryParse(System.String,System.Byte@)">
      <summary>숫자의 문자열 표현을 해당 <see cref="T:System.Byte" />로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다. </returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다.이 문자열은 <see cref="F:System.Globalization.NumberStyles.Integer" /> 스타일을 사용하여 해석됩니다.</param>
      <param name="result">이 메서드는 변환이 성공한 경우 <see cref="T:System.Byte" />에 포함된 숫자에 해당하는 <paramref name="s" /> 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
      <summary>지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 <see cref="T:System.Byte" />로 변환합니다.반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다.이 문자열은 <paramref name="style" />이 지정하는 스타일을 사용하여 해석됩니다.</param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다.<paramref name="provider" />가 null이면 현재 스레드 문화권이 사용됩니다.</param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자에 해당하는 8비트 부호 없는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, 형식이 올바르지 않거나, <see cref="F:System.Byte.MinValue" />보다 작거나 <see cref="F:System.Byte.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Char">
      <summary>UTF-16 코드 단위인 문자를 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.CompareTo(System.Char)">
      <summary>이 인스턴스를 지정된 <see cref="T:System.Char" /> 개체와 비교하고 정렬 순서에서 이 인스턴스의 위치가 지정된 <see cref="T:System.Char" /> 개체보다 앞인지, 뒤인지 또는 동일한지를 나타냅니다.</summary>
      <returns>정렬 순서에서 <paramref name="value" /> 매개 변수와 비교한 이 인스턴스의 위치를 나타내는 부호 있는 숫자입니다.반환 값 설명 0보다 작음 이 인스턴스가 <paramref name="value" /> 앞에 오는 경우 0 이 인스턴스의 위치가 정렬 순서에서 <paramref name="value" />와 같은 경우 0보다 큼 이 인스턴스가 <paramref name="value" /> 다음에 오는 경우 </returns>
      <param name="value">비교할 <see cref="T:System.Char" /> 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.ConvertFromUtf32(System.Int32)">
      <summary>지정된 유니코드 코드 포인트를 UTF-16으로 인코딩된 문자열로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Char" /> 매개 변수로 지정된 코드 포인트에 해당하는 <see cref="T:System.Char" /> 개체 하나 또는 <paramref name="utf32" /> 개체의 서로게이트 쌍으로 구성된 문자열입니다.</returns>
      <param name="utf32">21비트 유니코드 코드 포인트입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="utf32" />가 U+D800부터 U+DFFF까지의 범위에 있는 서로게이트 쌍을 제외하고 U+0부터 U+10FFFF까지의 범위에 있는 올바른 21비트 유니코드 코드 포인트가 아닌 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
      <summary>UTF-16으로 인코딩된 서로게이트 쌍의 값을 유니코드 코드 포인트로 변환합니다.</summary>
      <returns>
        <paramref name="highSurrogate" /> 및 <paramref name="lowSurrogate" /> 매개 변수가 나타내는 21비트 유니코드 코드 포인트입니다.</returns>
      <param name="highSurrogate">high surrogate 코드 단위, 즉 U+D800부터 U+DBFF까지의 범위에 있는 코드 단위입니다. </param>
      <param name="lowSurrogate">low surrogate 코드 단위, 즉 U+DC00부터 U+DFFF까지의 범위에 있는 코드 단위입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="highSurrogate" />가 U+D800부터 U+DBFF까지의 범위에 있지 않거나 <paramref name="lowSurrogate" />가 U+DC00부터 U+DFFF까지의 범위에 있지 않은 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ConvertToUtf32(System.String,System.Int32)">
      <summary>문자열의 지정한 위치에 있는 UTF-16으로 인코딩된 문자 또는 서로게이트 쌍의 값을 유니코드 코드 포인트로 변환합니다.</summary>
      <returns>
        <paramref name="s" /> 매개 변수로 지정된 <paramref name="index" /> 매개 변수 위치에서 문자나 서로게이트 쌍이 나타내는 21비트 유니코드 코드 포인트입니다.</returns>
      <param name="s">문자나 서로게이트 쌍이 포함된 문자열입니다. </param>
      <param name="index">
        <paramref name="s" />에 있는 문자나 서로게이트 쌍의 인덱스 위치입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="s" /> 내에 위치하지 않는 경우 </exception>
      <exception cref="T:System.ArgumentException">지정한 인덱스 위치에 서로게이트 쌍이 포함되고 이 쌍의 첫 번째 문자가 유효한 high surrogate가 아니거나 두 번째 문자가 유효한 low surrogate가 아닌 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.Equals(System.Char)">
      <summary>이 인스턴스가 지정된 <see cref="T:System.Char" /> 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>true 매개 변수가 이 인스턴스의 값과 같으면 <paramref name="obj" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.Equals(System.Object)">
      <summary>@FSHO2@이 인스턴스가 지정한 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 <paramref name="obj" />의 인스턴스이고 이 인스턴스의 값과 같으면 <see cref="T:System.Char" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.GetNumericValue(System.Char)">
      <summary>숫자 형식의 유니코드 문자를 배정밀도 부동 소수점 숫자로 변환합니다.</summary>
      <returns>문자가 숫자를 나타내는 경우에는 <paramref name="c" />의 숫자 값을 반환하고 그렇지 않은 경우에는 -1.0을 반환합니다.</returns>
      <param name="c">변환할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.GetNumericValue(System.String,System.Int32)">
      <summary>지정된 문자열의 지정된 위치에 있는 숫자 형식의 유니코드 문자를 배정밀도 부동 소수점 숫자로 변환합니다.</summary>
      <returns>문자가 숫자를 나타내는 경우에는 <paramref name="index" />의 <paramref name="s" /> 위치에 있는 문자의 숫자 값을 반환하고 그렇지 않은 경우에는 -1을 반환합니다.</returns>
      <param name="s">
        <see cref="T:System.String" />
      </param>
      <param name="index">
        <paramref name="s" />의 문자 위치입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 <paramref name="s" />의 마지막 위치보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsControl(System.Char)">
      <summary>지정된 유니코드 문자가 제어 문자인지 여부를 나타냅니다.</summary>
      <returns>true가 제어 문자이면 <paramref name="c" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="c">평가할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsControl(System.String,System.Int32)">
      <summary>지정된 문자열의 지정된 위치에 있는 문자가 제어 문자인지 여부를 나타냅니다.</summary>
      <returns>true의 <paramref name="index" /> 위치에 있는 문자가 제어 문자이면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">문자열 </param>
      <param name="index">
        <paramref name="s" />에서 평가할 문자의 위치입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 <paramref name="s" />의 마지막 위치보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsDigit(System.Char)">
      <summary>유니코드 문자가 10진수인지 여부를 나타냅니다.</summary>
      <returns>true가 10진수이면 <paramref name="c" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="c">평가할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsDigit(System.String,System.Int32)">
      <summary>지정된 문자열의 지정된 위치에 있는 문자가 10진수인지 여부를 나타냅니다.</summary>
      <returns>true의 <paramref name="index" /> 위치에 있는 문자가 10진수이면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">문자열 </param>
      <param name="index">
        <paramref name="s" />에서 평가할 문자의 위치입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 <paramref name="s" />의 마지막 위치보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsHighSurrogate(System.Char)">
      <summary>지정한 <see cref="T:System.Char" /> 개체가 high surrogate인지 여부를 나타냅니다.</summary>
      <returns>true 매개 변수의 숫자 값이 U+D800부터 U+DBFF까지의 범위에 있으면 <paramref name="c" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="c">평가할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
      <summary>문자열의 지정한 위치에 있는 <see cref="T:System.Char" /> 개체가 high surrogate인지 여부를 나타냅니다.</summary>
      <returns>true 매개 변수에 지정된 문자의 숫자 값이 U+D800부터 U+DBFF까지의 범위에 있으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">문자열 </param>
      <param name="index">
        <paramref name="s" />에서 평가할 문자의 위치입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="s" /> 내에 위치하지 않는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetter(System.Char)">
      <summary>지정된 유니코드 문자가 유니코드 글자인지 여부를 나타냅니다. </summary>
      <returns>true가 글자이면 <paramref name="c" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="c">평가할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetter(System.String,System.Int32)">
      <summary>지정된 문자열의 지정된 위치에 있는 문자가 유니코드 글자인지 여부를 나타냅니다.</summary>
      <returns>true의 <paramref name="index" /> 위치에 있는 문자가 글자이면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">문자열 </param>
      <param name="index">
        <paramref name="s" />에서 평가할 문자의 위치입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 <paramref name="s" />의 마지막 위치보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetterOrDigit(System.Char)">
      <summary>지정된 유니코드 문자가 글자나 10진수인지 여부를 나타냅니다.</summary>
      <returns>true가 글자나 10진수이면 <paramref name="c" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="c">평가할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetterOrDigit(System.String,System.Int32)">
      <summary>지정된 문자열의 지정된 위치에 있는 문자가 글자나 10진수인지 여부를 나타냅니다.</summary>
      <returns>true의 <paramref name="index" /> 위치에 있는 문자가 글자나 10진수이면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">문자열 </param>
      <param name="index">
        <paramref name="s" />에서 평가할 문자의 위치입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 <paramref name="s" />의 마지막 위치보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLower(System.Char)">
      <summary>유니코드 문자가 소문자 자모인지 여부를 나타냅니다.</summary>
      <returns>true가 소문자이면 <paramref name="c" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="c">평가할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLower(System.String,System.Int32)">
      <summary>지정된 문자열의 지정된 위치에 있는 자모가 소문자인지 여부를 나타냅니다.</summary>
      <returns>true의 <paramref name="index" /> 위치에 있는 문자가 소문자이면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">문자열 </param>
      <param name="index">
        <paramref name="s" />에서 평가할 문자의 위치입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 <paramref name="s" />의 마지막 위치보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLowSurrogate(System.Char)">
      <summary>지정한 <see cref="T:System.Char" /> 개체가 high surrogate인지 여부를 나타냅니다.</summary>
      <returns>true 매개 변수의 숫자 값이 U+DC00부터 U+DFFF까지의 범위에 있으면 <paramref name="c" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="c">확인할 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
      <summary>문자열의 지정한 위치에 있는 <see cref="T:System.Char" /> 개체가 high surrogate인지 여부를 나타냅니다.</summary>
      <returns>true 매개 변수에 지정된 문자의 숫자 값이 U+DC00부터 U+DFFF까지의 범위에 있으면 <paramref name="s" />이고, 그렇지 않으면 false.</returns>
      <param name="s">문자열 </param>
      <param name="index">
        <paramref name="s" />에서 평가할 문자의 위치입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="s" /> 내에 위치하지 않는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsNumber(System.Char)">
      <summary>지정된 유니코드 문자가 숫자인지 여부를 나타냅니다.</summary>
      <returns>true가 숫자이면 <paramref name="c" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="c">평가할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsNumber(System.String,System.Int32)">
      <summary>지정된 문자열의 지정된 위치에 있는 문자가 숫자인지 여부를 나타냅니다.</summary>
      <returns>true의 <paramref name="index" /> 위치에 있는 문자가 숫자이면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">문자열 </param>
      <param name="index">
        <paramref name="s" />에서 평가할 문자의 위치입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 <paramref name="s" />의 마지막 위치보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsPunctuation(System.Char)">
      <summary>유니코드 문자가 문장 부호인지 여부를 나타냅니다.</summary>
      <returns>true가 문장 부호이면 <paramref name="c" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="c">평가할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsPunctuation(System.String,System.Int32)">
      <summary>지정된 문자열의 지정된 위치에 있는 문자가 문장 부호인지 여부를 나타냅니다.</summary>
      <returns>true의 <paramref name="index" /> 위치에 있는 문자가 문장 부호이면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">문자열 </param>
      <param name="index">
        <paramref name="s" />에서 평가할 문자의 위치입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 <paramref name="s" />의 마지막 위치보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSeparator(System.Char)">
      <summary>유니코드 문자가 구분 문자인지 여부를 나타냅니다.</summary>
      <returns>true가 구분 문자이면 <paramref name="c" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="c">평가할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSeparator(System.String,System.Int32)">
      <summary>지정된 문자열의 지정된 위치에 있는 문자가 구분 문자인지 여부를 나타냅니다.</summary>
      <returns>true의 <paramref name="index" /> 위치에 있는 문자가 구분 문자이면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">문자열 </param>
      <param name="index">
        <paramref name="s" />에서 평가할 문자의 위치입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 <paramref name="s" />의 마지막 위치보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogate(System.Char)">
      <summary>지정된 문자에 서로게이트 코드 단위가 있는지 여부를 나타냅니다.</summary>
      <returns>true가 상위 서로게이트 또는 하위 서로게이트이면 <paramref name="c" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="c">평가할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogate(System.String,System.Int32)">
      <summary>지정된 문자열의 지정된 위치에 있는 문자에 서로게이트 코드 단위가 있는지 여부를 나타냅니다.</summary>
      <returns>true에서 <paramref name="index" /> 위치에 있는 문자가 상위 서로게이트 또는 하위 서로게이트이면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">문자열 </param>
      <param name="index">
        <paramref name="s" />에서 평가할 문자의 위치입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 <paramref name="s" />의 마지막 위치보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogatePair(System.Char,System.Char)">
      <summary>지정한 두 개의 <see cref="T:System.Char" /> 개체가 서로게이트 쌍을 형성하는지 여부를 나타냅니다.</summary>
      <returns>true 매개 변수의 숫자 값이 U+D800부터 U+DBFF까지의 범위에 있고 <paramref name="highSurrogate" /> 매개 변수의 숫자 값이 U+DC00부터 U+DFFF까지의 범위에 있으면 <paramref name="lowSurrogate" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="highSurrogate">서로게이트 쌍의 high surrogate로 확인할 문자입니다. </param>
      <param name="lowSurrogate">서로게이트 쌍의 low surrogate로 확인할 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
      <summary>문자열의 지정한 위치에 있는 두 개의 인접한 <see cref="T:System.Char" /> 개체가 서로게이트 쌍을 형성하는지 여부를 나타냅니다.</summary>
      <returns>true 매개 변수에 <paramref name="s" /> 위치와 <paramref name="index" />+1 위치에 인접한 문자가 포함되고, <paramref name="index" /> 위치에 있는 문자의 숫자 값이 U+D800부터 U+DBFF까지의 범위에 있으며, <paramref name="index" />+1 위치에 있는 문자의 숫자 값이 U+DC00부터 U+DFFF까지의 범위에 있으면 <paramref name="index" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">문자열 </param>
      <param name="index">
        <paramref name="s" /> 내에서 확인할 문자 쌍의 시작 위치입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="s" /> 내에 위치하지 않는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSymbol(System.Char)">
      <summary>유니코드 문자가 기호 문자인지 여부를 나타냅니다.</summary>
      <returns>true가 기호 문자이면 <paramref name="c" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="c">평가할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSymbol(System.String,System.Int32)">
      <summary>지정된 문자열의 지정된 위치에 있는 문자가 기호 문자인지 여부를 나타냅니다.</summary>
      <returns>true의 <paramref name="index" /> 위치에 있는 문자가 기호 문자이면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">문자열 </param>
      <param name="index">
        <paramref name="s" />에서 평가할 문자의 위치입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 <paramref name="s" />의 마지막 위치보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsUpper(System.Char)">
      <summary>유니코드 자모가 대문자인지 여부를 나타냅니다.</summary>
      <returns>true가 대문자이면 <paramref name="c" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="c">평가할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsUpper(System.String,System.Int32)">
      <summary>지정된 문자열의 지정된 위치에 있는 문자가 대문자 자모인지 여부를 나타냅니다.</summary>
      <returns>true의 <paramref name="index" /> 위치에 있는 문자가 대문자이면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">문자열 </param>
      <param name="index">
        <paramref name="s" />에서 평가할 문자의 위치입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 <paramref name="s" />의 마지막 위치보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsWhiteSpace(System.Char)">
      <summary>유니코드 문자가 공백인지 여부를 나타냅니다.</summary>
      <returns>true가 공백이면 <paramref name="c" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="c">평가할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
      <summary>지정된 문자열의 지정된 위치에 있는 문자가 공백인지 여부를 나타냅니다.</summary>
      <returns>true의 <paramref name="index" /> 위치에 있는 문자가 공백이면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">문자열 </param>
      <param name="index">
        <paramref name="s" />에서 평가할 문자의 위치입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 <paramref name="s" />의 마지막 위치보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Char.MaxValue">
      <summary>
        <see cref="T:System.Char" />의 가능한 최대값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Char.MinValue">
      <summary>
        <see cref="T:System.Char" />의 최소값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.Parse(System.String)">
      <summary>지정된 문자열의 값을 해당하는 유니코드 문자로 변환합니다.</summary>
      <returns>
        <paramref name="s" />의 유일한 문자에 해당하는 유니코드 문자입니다.</returns>
      <param name="s">단일 문자가 들어 있는 문자열이거나 null입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" />의 길이가 1이 아닌 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.System#IComparable#CompareTo(System.Object)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>정렬 순서에서 <paramref name="value" /> 매개 변수와 비교한 이 인스턴스의 위치를 나타내는 부호 있는 정수입니다.반환 값 설명 0보다 작음 이 인스턴스가 정렬 순서에서 <paramref name="value" /> 앞에 옵니다. 0 이 인스턴스의 위치가 정렬 순서에서 <paramref name="value" />와 같은 경우 0보다 큼 이 인스턴스가 정렬 순서에서 <paramref name="value" /> 뒤에 옵니다.또는 <paramref name="value" />가 null인 경우 </returns>
      <param name="value">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />가 <see cref="T:System.Char" /> 개체가 아닙니다. </exception>
    </member>
    <member name="M:System.Char.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>참고   이 변환은 지원되지 않습니다.그렇게 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 변환은 지원되지 않습니다.값이 반환되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">이 변환은 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.Char" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.Char" /> 개체의 값이 그대로 반환됩니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>참고   이 변환은 지원되지 않습니다.그렇게 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>값이 반환되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">이 변환은 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>참고   이 변환은 지원되지 않습니다.그렇게 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>값이 반환되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">이 변환은 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>참고   이 변환은 지원되지 않습니다.그렇게 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>값이 반환되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">이 변환은 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary> 이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.Char" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.Char" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary> 이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.Char" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary> 이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.Char" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>참고   이 변환은 지원되지 않습니다.그렇게 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>값이 반환되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">이 변환은 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToString(System.IFormatProvider)"></member>
    <member name="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>지정된 형식의 개체입니다.</returns>
      <param name="type">
        <see cref="T:System.Type" /> 개체입니다. </param>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" />가 null인 경우</exception>
      <exception cref="T:System.InvalidCastException">현재 <see cref="T:System.Char" /> 개체의 값을 <paramref name="type" /> 매개 변수로 지정된 형식으로 변환할 수 없는 경우 </exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.Char" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 개체입니다.null 매개 변수가 무시되므로 <paramref name="provider" />을 지정합니다.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.Char" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 개체입니다.null 매개 변수가 무시되므로 <paramref name="provider" />을 지정합니다.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.Char" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 개체입니다.null 매개 변수가 무시되므로 <paramref name="provider" />을 지정합니다.</param>
    </member>
    <member name="M:System.Char.ToLower(System.Char)">
      <summary>유니코드 문자를 해당하는 소문자로 변환합니다.</summary>
      <returns>
        <paramref name="c" />에 해당하는 소문자이거나, <paramref name="c" />가 이미 소문자이거나 영문자가 아닌 경우 변경되지 않은 <paramref name="c" /> 값입니다.</returns>
      <param name="c">변환할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToLowerInvariant(System.Char)">
      <summary>고정 문화권의 대/소문자 규칙을 사용하여 유니코드 문자의 값을 해당하는 소문자로 변환합니다.</summary>
      <returns>
        <paramref name="c" /> 매개 변수에 해당하는 소문자이거나, <paramref name="c" />가 이미 소문자이거나 영문자가 아닌 경우 변경되지 않은 <paramref name="c" /> 값입니다.</returns>
      <param name="c">변환할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToString">
      <summary>이 인스턴스의 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스 값의 문자열 표현입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToString(System.Char)">
      <summary>지정된 유니코드 문자를 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="c" /> 값의 문자열 표현입니다.</returns>
      <param name="c">변환할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToUpper(System.Char)">
      <summary>유니코드 문자를 해당하는 대문자로 변환합니다.</summary>
      <returns>
        <paramref name="c" />에 해당하는 대문자이거나, <paramref name="c" />가 이미 대문자이거나 해당하는 대문자가 없거나 영문자가 아닌 경우 변경되지 않은 <paramref name="c" /> 값입니다.</returns>
      <param name="c">변환할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToUpperInvariant(System.Char)">
      <summary>고정 문화권의 대/소문자 규칙을 사용하여 유니코드 문자의 값을 해당하는 대문자로 변환합니다.</summary>
      <returns>
        <paramref name="c" /> 매개 변수에 해당하는 대문자이거나, <paramref name="c" />가 이미 대문자이거나 영문자가 아닌 경우 변경되지 않은 <paramref name="c" /> 값입니다.</returns>
      <param name="c">변환할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.TryParse(System.String,System.Char@)">
      <summary>지정된 문자열의 값을 해당하는 유니코드 문자로 변환합니다.반환 코드는 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>true 매개 변수가 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">단일 문자가 들어 있는 문자열이거나 null입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />의 유일한 문자에 해당하는 유니코드 문자를 반환하고, 변환이 실패한 경우 정의되지 않은 값을 반환합니다.<paramref name="s" /> 매개 변수가 null이거나 <paramref name="s" />의 길이가 1이 아니면 변환에 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.CLSCompliantAttribute">
      <summary>프로그램 요소가 CLS(공용 언어 사양) 규격인지 여부를 나타냅니다.이 클래스는 상속될 수 없습니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.CLSCompliantAttribute.#ctor(System.Boolean)">
      <summary>표시된 프로그램 요소가 CLS 규격인지 여부를 나타내는 부울 값을 사용하여 <see cref="T:System.CLSCompliantAttribute" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="isCompliant">CLS 규격이면 true이고, 그렇지 않으면 false입니다. </param>
    </member>
    <member name="P:System.CLSCompliantAttribute.IsCompliant">
      <summary>표시된 프로그램 요소가 CLS 규격인지 여부를 나타내는 부울 값을 가져옵니다.</summary>
      <returns>프로그램 요소가 CLS 규격이면 true이고, 그렇지 않으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Comparison`1">
      <summary>형식이 같은 두 개체를 비교하는 메서드를 나타냅니다.</summary>
      <typeparam name="T">비교할 개체의 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Comparison`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Comparison`1.BeginInvoke(`0,`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Comparison`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Comparison`1.Invoke(`0,`0)"></member>
    <member name="T:System.DateTime">
      <summary>일반적으로 날짜와 시간으로 표시된 시간을 나타냅니다. 이 형식에 대 한.NET Framework 소스 코드를 찾아보려면 참조는 Reference Source.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.DateTime" /> 구조체의 새 인스턴스를 특정 연도, 월 및 날짜로 초기화합니다.</summary>
      <param name="year">연도(1부터 9999까지) </param>
      <param name="month">월(1부터 12까지) </param>
      <param name="day">일(1부터 <paramref name="month" />에 있는 일수까지) </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 가 1 보다 작거나 9999를 초과 합니다.또는 <paramref name="month" /> 가 1 보다 작은 12 보다 큰 경우또는 <paramref name="day" />가 1보다 작거나 <paramref name="month" />의 날짜 수보다 큰 경우 </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.DateTime" /> 구조체의 새 인스턴스를 지정된 연도, 월, 날짜, 시, 분 및 초로 초기화합니다.</summary>
      <param name="year">연도(1부터 9999까지) </param>
      <param name="month">월(1부터 12까지) </param>
      <param name="day">일(1부터 <paramref name="month" />에 있는 일수까지) </param>
      <param name="hour">시(0부터 23까지) </param>
      <param name="minute">분(0부터 59까지) </param>
      <param name="second">초(0부터 59까지) </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 가 1 보다 작거나 9999를 초과 합니다. 또는 <paramref name="month" /> 가 1 보다 작은 12 보다 큰 경우 또는 <paramref name="day" />가 1보다 작거나 <paramref name="month" />의 날짜 수보다 큰 경우또는 <paramref name="hour" /> 가 0 보다 작거나 23 보다 작습니다. 또는 <paramref name="minute" /> 가 0 보다 작거나 59 보다 큰 경우 또는 <paramref name="second" /> 가 0 보다 작거나 59 보다 큰 경우 </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
      <summary>
        <see cref="T:System.DateTime" /> 구조체의 새 인스턴스를 지정된 연도, 월, 일, 시, 분, 초 및 UTC(협정 세계시) 또는 현지 시간으로 초기화합니다.</summary>
      <param name="year">연도(1부터 9999까지) </param>
      <param name="month">월(1부터 12까지) </param>
      <param name="day">일(1부터 <paramref name="month" />에 있는 일수까지) </param>
      <param name="hour">시(0부터 23까지) </param>
      <param name="minute">분(0부터 59까지) </param>
      <param name="second">초(0부터 59까지) </param>
      <param name="kind">
        <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" /> 및 <paramref name="second" />가 현지 시간 또는 UTC(협정 세계시)를 지정하는지, 아니면 둘 다 지정하지 않는지를 나타내는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 가 1 보다 작거나 9999를 초과 합니다. 또는 <paramref name="month" /> 가 1 보다 작은 12 보다 큰 경우 또는 <paramref name="day" />가 1보다 작거나 <paramref name="month" />의 날짜 수보다 큰 경우또는 <paramref name="hour" /> 가 0 보다 작거나 23 보다 작습니다. 또는 <paramref name="minute" /> 가 0 보다 작거나 59 보다 큰 경우 또는 <paramref name="second" /> 가 0 보다 작거나 59 보다 큰 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="kind" />가 <see cref="T:System.DateTimeKind" /> 값 중 하나가 아닌 경우</exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.DateTime" /> 구조체의 새 인스턴스를 지정된 연도, 월, 일, 시, 분, 초 및 밀리초로 초기화합니다.</summary>
      <param name="year">연도(1부터 9999까지) </param>
      <param name="month">월(1부터 12까지) </param>
      <param name="day">일(1부터 <paramref name="month" />에 있는 일수까지) </param>
      <param name="hour">시(0부터 23까지) </param>
      <param name="minute">분(0부터 59까지) </param>
      <param name="second">초(0부터 59까지) </param>
      <param name="millisecond">밀리초(0부터 999까지) </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 가 1 보다 작거나 9999를 초과 합니다.또는 <paramref name="month" /> 가 1 보다 작은 12 보다 큰 경우또는 <paramref name="day" />가 1보다 작거나 <paramref name="month" />의 날짜 수보다 큰 경우또는 <paramref name="hour" /> 가 0 보다 작거나 23 보다 작습니다.또는 <paramref name="minute" /> 가 0 보다 작거나 59 보다 큰 경우또는 <paramref name="second" /> 가 0 보다 작거나 59 보다 큰 경우또는 <paramref name="millisecond" /> 가 0 보다 작거나 999 보다 큰 경우 </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
      <summary>
        <see cref="T:System.DateTime" /> 구조체의 새 인스턴스를 지정된 연도, 월, 일, 시, 분, 초, 밀리초 및 UTC(협정 세계시) 또는 현지 시간으로 초기화합니다.</summary>
      <param name="year">연도(1부터 9999까지) </param>
      <param name="month">월(1부터 12까지) </param>
      <param name="day">일(1부터 <paramref name="month" />에 있는 일수까지) </param>
      <param name="hour">시(0부터 23까지) </param>
      <param name="minute">분(0부터 59까지) </param>
      <param name="second">초(0부터 59까지) </param>
      <param name="millisecond">밀리초(0부터 999까지) </param>
      <param name="kind">
        <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" /> 및 <paramref name="millisecond" />가 현지 시간 또는 UTC(협정 세계시)를 지정하는지, 아니면 둘 다 지정하지 않는지를 나타내는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 가 1 보다 작거나 9999를 초과 합니다.또는 <paramref name="month" /> 가 1 보다 작은 12 보다 큰 경우또는 <paramref name="day" />가 1보다 작거나 <paramref name="month" />의 날짜 수보다 큰 경우또는 <paramref name="hour" /> 가 0 보다 작거나 23 보다 작습니다.또는 <paramref name="minute" /> 가 0 보다 작거나 59 보다 큰 경우또는 <paramref name="second" /> 가 0 보다 작거나 59 보다 큰 경우또는 <paramref name="millisecond" /> 가 0 보다 작거나 999 보다 큰 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="kind" />가 <see cref="T:System.DateTimeKind" /> 값 중 하나가 아닌 경우</exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int64)">
      <summary>
        <see cref="T:System.DateTime" /> 구조체의 새 인스턴스를 지정된 틱 수로 초기화합니다.</summary>
      <param name="ticks">그레고리오력에서 0001년 1월 1일 00:00:00.000부터 경과한 100나노초 간격의 수로 표현한 날짜와 시간입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ticks" />가 <see cref="F:System.DateTime.MinValue" />보다 작거나 <see cref="F:System.DateTime.MaxValue" />보다 큰 경우 </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int64,System.DateTimeKind)">
      <summary>
        <see cref="T:System.DateTime" /> 구조체의 새 인스턴스를 지정된 틱 수 및 UTC(협정 세계시) 또는 현지 시간으로 초기화합니다.</summary>
      <param name="ticks">그레고리오력에서 0001년 1월 1일 00:00:00.000부터 경과한 100나노초 간격의 수로 표현한 날짜와 시간입니다. </param>
      <param name="kind">
        <paramref name="ticks" />가 현지 시간 또는 UTC(협정 세계시)를 지정하는지, 아니면 둘 다 지정하지 않는지를 나타내는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ticks" />가 <see cref="F:System.DateTime.MinValue" />보다 작거나 <see cref="F:System.DateTime.MaxValue" />보다 큰 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="kind" />가 <see cref="T:System.DateTimeKind" /> 값 중 하나가 아닌 경우</exception>
    </member>
    <member name="M:System.DateTime.Add(System.TimeSpan)">
      <summary>지정된 <see cref="T:System.DateTime" />의 값을 이 인스턴스의 값에 더하는 새 <see cref="T:System.TimeSpan" />을 반환합니다.</summary>
      <returns>이 인스턴스가 나타내는 날짜 및 시간과 <paramref name="value" />가 나타내는 시간 간격의 합이 값인 개체입니다.</returns>
      <param name="value">양수 또는 음수의 시간 간격입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="T:System.DateTime" />이 <see cref="F:System.DateTime.MinValue" />보다 작거나 <see cref="F:System.DateTime.MaxValue" />보다 큰 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddDays(System.Double)">
      <summary>지정된 날짜 수를 이 인스턴스의 값에 더하는 새 <see cref="T:System.DateTime" />을 반환합니다.</summary>
      <returns>이 인스턴스가 나타내는 날짜 및 시간과 <paramref name="value" />가 나타내는 날 수의 합이 값인 개체입니다.</returns>
      <param name="value">정수 및 소수로 계산된 날 수입니다.<paramref name="value" /> 매개 변수는 음수일 수도 있고 양수일 수도 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="T:System.DateTime" />이 <see cref="F:System.DateTime.MinValue" />보다 작거나 <see cref="F:System.DateTime.MaxValue" />보다 큰 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddHours(System.Double)">
      <summary>지정된 시간 수를 이 인스턴스의 값에 더하는 새 <see cref="T:System.DateTime" />을 반환합니다.</summary>
      <returns>이 인스턴스가 나타내는 날짜 및 시간과 <paramref name="value" />가 나타내는 시간 수의 합이 값인 개체입니다.</returns>
      <param name="value">정수 및 소수로 계산된 시간 수입니다.<paramref name="value" /> 매개 변수는 음수일 수도 있고 양수일 수도 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="T:System.DateTime" />이 <see cref="F:System.DateTime.MinValue" />보다 작거나 <see cref="F:System.DateTime.MaxValue" />보다 큰 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddMilliseconds(System.Double)">
      <summary>지정된 밀리초 수를 이 인스턴스의 값에 더하는 새 <see cref="T:System.DateTime" />을 반환합니다.</summary>
      <returns>이 인스턴스가 나타내는 날짜 및 시간과 <paramref name="value" />가 나타내는 밀리초 수의 합이 값인 개체입니다.</returns>
      <param name="value">정수 및 소수로 계산된 밀리초 수입니다.<paramref name="value" /> 매개 변수는 음수일 수도 있고 양수일 수도 있습니다.이 값은 가장 가까운 정수로 반올림됩니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="T:System.DateTime" />이 <see cref="F:System.DateTime.MinValue" />보다 작거나 <see cref="F:System.DateTime.MaxValue" />보다 큰 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddMinutes(System.Double)">
      <summary>지정된 분 수를 이 인스턴스의 값에 더하는 새 <see cref="T:System.DateTime" />을 반환합니다.</summary>
      <returns>이 인스턴스가 나타내는 날짜 및 시간과 <paramref name="value" />가 나타내는 분 수의 합이 값인 개체입니다.</returns>
      <param name="value">정수 및 소수로 계산된 분 수입니다.<paramref name="value" /> 매개 변수는 음수일 수도 있고 양수일 수도 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="T:System.DateTime" />이 <see cref="F:System.DateTime.MinValue" />보다 작거나 <see cref="F:System.DateTime.MaxValue" />보다 큰 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddMonths(System.Int32)">
      <summary>지정된 월 수를 이 인스턴스의 값에 더하는 새 <see cref="T:System.DateTime" />을 반환합니다.</summary>
      <returns>이 인스턴스가 나타내는 날짜 및 시간과 <paramref name="months" />가 나타내는 월 수의 합이 값인 개체입니다.</returns>
      <param name="months">월 수입니다.<paramref name="months" /> 매개 변수는 음수일 수도 있고 양수일 수도 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="T:System.DateTime" />이 <see cref="F:System.DateTime.MinValue" />보다 작거나 <see cref="F:System.DateTime.MaxValue" />보다 큰 경우또는 <paramref name="months" /> 이-120,000 보다 작거나 120,000 보다 큰 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddSeconds(System.Double)">
      <summary>지정된 초 수를 이 인스턴스의 값에 더하는 새 <see cref="T:System.DateTime" />을 반환합니다.</summary>
      <returns>이 인스턴스가 나타내는 날짜 및 시간과 <paramref name="value" />가 나타내는 초 수의 합이 값인 개체입니다.</returns>
      <param name="value">정수 및 소수로 계산된 초 수입니다.<paramref name="value" /> 매개 변수는 음수일 수도 있고 양수일 수도 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="T:System.DateTime" />이 <see cref="F:System.DateTime.MinValue" />보다 작거나 <see cref="F:System.DateTime.MaxValue" />보다 큰 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddTicks(System.Int64)">
      <summary>지정된 틱 수를 이 인스턴스의 값에 더하는 새 <see cref="T:System.DateTime" />을 반환합니다.</summary>
      <returns>이 인스턴스가 나타내는 날짜 및 시간과 <paramref name="value" />가 나타내는 시간의 합이 값인 개체입니다.</returns>
      <param name="value">천만 분의 1초 틱의 수입니다.<paramref name="value" /> 매개 변수는 양수일 수도 있고 음수일 수도 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="T:System.DateTime" />이 <see cref="F:System.DateTime.MinValue" />보다 작거나 <see cref="F:System.DateTime.MaxValue" />보다 큰 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddYears(System.Int32)">
      <summary>지정된 연도 수를 이 인스턴스의 값에 더하는 새 <see cref="T:System.DateTime" />을 반환합니다.</summary>
      <returns>이 인스턴스가 나타내는 날짜 및 시간과 <paramref name="value" />가 나타내는 연도 수의 합이 값인 개체입니다.</returns>
      <param name="value">연도 수입니다.<paramref name="value" /> 매개 변수는 음수일 수도 있고 양수일 수도 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> 또는 결과로 계산되는 <see cref="T:System.DateTime" />이 <see cref="F:System.DateTime.MinValue" />보다 작거나 <see cref="F:System.DateTime.MaxValue" />보다 큰 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Compare(System.DateTime,System.DateTime)">
      <summary>
        <see cref="T:System.DateTime" />의 두 인스턴스를 비교하고 첫 번째 인스턴스가 두 번째 인스턴스보다 빠른지, 같은지, 늦은지를 나타내는 정수를 반환합니다.</summary>
      <returns>
        <paramref name="t1" />과 <paramref name="t2" />의 상대 값을 나타내는 부호 있는 숫자입니다.값 형식 조건 0보다 작음 <paramref name="t1" />가 <paramref name="t2" />보다 이전인 경우 0 <paramref name="t1" />이 <paramref name="t2" />와 같은 경우 0보다 큼 <paramref name="t1" />이 <paramref name="t2" />보다 나중인 경우 </returns>
      <param name="t1">비교할 첫 번째 개체입니다. </param>
      <param name="t2">비교할 두 번째 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.CompareTo(System.DateTime)">
      <summary>이 인스턴스의 값을 지정된 <see cref="T:System.DateTime" /> 값과 비교하고 이 인스턴스가 지정된 <see cref="T:System.DateTime" /> 값보다 이전인지, 같은지 또는 이후인지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" /> 매개 변수의 상대 값을 나타내는 부호 있는 숫자입니다.값 설명 0보다 작음 이 인스턴스는 <paramref name="value" /> 보다 이전입니다. 0 이 인스턴스는 <paramref name="value" />와 같습니다. 0보다 큼 이 인스턴스는 <paramref name="value" />보다 이후입니다. </returns>
      <param name="value">현재 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Date">
      <summary>이 인스턴스의 날짜 구성 요소를 가져옵니다.</summary>
      <returns>이 인스턴스와 동일한 날짜를 갖고 시간 값이 12:00:00 자정(00:00:00)으로 설정된 새 개체입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Day">
      <summary>이 인스턴스가 나타내는 월의 일 수를 가져옵니다.</summary>
      <returns>1부터 31 사이의 값으로 표시되는 일 구성 요소입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.DayOfWeek">
      <summary>이 인스턴스가 나타내는 주의 일 수를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.DateTime" /> 값의 요일을 나타내는 열거형 상수입니다. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.DayOfYear">
      <summary>이 인스턴스가 나타내는 일 수를 정수로 가져옵니다.</summary>
      <returns>1부터 366 사이의 값으로 표시되는 한 해의 날짜 순서입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.DaysInMonth(System.Int32,System.Int32)">
      <summary>지정된 월과 연도의 날짜 수를 반환합니다.</summary>
      <returns>지정된 <paramref name="month" />에 속한 <paramref name="year" />의 날 수입니다.예를 들어, 2월의 <paramref name="month" />가 2이면, 반환 값은 <paramref name="year" />가 윤년인지 여부에 따라 28이나 29가 됩니다.</returns>
      <param name="year">연도 </param>
      <param name="month">월(1부터 12까지) </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="month" /> 가 1 보다 작은 12 보다 큰 경우또는<paramref name="year" /> 가 1 보다 작거나 9999를 초과 합니다.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Equals(System.DateTime)">
      <summary>이 인스턴스의 값이 지정된 <see cref="T:System.DateTime" /> 인스턴스의 값과 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true 매개 변수가 이 인스턴스의 값과 같으면 <paramref name="value" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">이 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Equals(System.DateTime,System.DateTime)">
      <summary>두 <see cref="T:System.DateTime" /> 인스턴스의 날짜 및 시간 값이 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>두 값이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="t1">비교할 첫 번째 개체입니다. </param>
      <param name="t2">비교할 두 번째 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Equals(System.Object)">
      <summary>이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 <paramref name="value" />의 인스턴스이고 이 인스턴스의 값과 같으면 <see cref="T:System.DateTime" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">이 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.FromBinary(System.Int64)">
      <summary>64비트 이진 값을 deserialize하고 serialize된 원본 <see cref="T:System.DateTime" /> 개체를 다시 만듭니다.</summary>
      <returns>
        <see cref="T:System.DateTime" /> 메서드로 serialize된 <see cref="M:System.DateTime.ToBinary" /> 개체에 해당하는 개체입니다.</returns>
      <param name="dateData">
        <see cref="P:System.DateTime.Kind" /> 속성을 2비트 필드에서 인코딩하고 <see cref="P:System.DateTime.Ticks" /> 속성을 62비트 필드에서 인코딩하는 64비트 부호 있는 정수입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateData" />가 <see cref="F:System.DateTime.MinValue" />보다 작거나 <see cref="F:System.DateTime.MaxValue" />보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.FromFileTime(System.Int64)">
      <summary>지정한 Windows 파일 시간을 해당 현지 시간으로 변환합니다.</summary>
      <returns>
        <paramref name="fileTime" /> 매개 변수가 나타내는 날짜와 시간에 해당하는 현지 시간을 나타내는 개체입니다.</returns>
      <param name="fileTime">틱으로 표현된 Windows 파일 시간입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="fileTime" />이 0보다 작거나 <see cref="F:System.DateTime.MaxValue" />보다 큰 시간을 나타내는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.FromFileTimeUtc(System.Int64)">
      <summary>지정한 Windows 파일 시간을 해당 UTC 시간으로 변환합니다.</summary>
      <returns>
        <paramref name="fileTime" /> 매개 변수가 나타내는 날짜와 시간에 해당하는 UTC 시간을 나타내는 개체입니다.</returns>
      <param name="fileTime">틱으로 표현된 Windows 파일 시간입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="fileTime" />이 0보다 작거나 <see cref="F:System.DateTime.MaxValue" />보다 큰 시간을 나타내는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats">
      <summary>이 인스턴스의 값을 표준 날짜 및 시간 서식 지정자에서 지원하는 모든 문자열 표현으로 변환합니다.</summary>
      <returns>표준 날짜 및 시간 서식 지정자 중 하나를 사용하여 이 인스턴스의 값을 서식 지정한 표현이 각 요소인 문자열 배열입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.Char)">
      <summary>이 인스턴스의 값을 지정된 표준 날짜 및 시간 서식 지정자에서 지원하는 모든 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="format" /> 표준 날짜 및 시간 서식 지정자를 사용하여 이 인스턴스 값의 서식으로 각 요소가 표현된 문자열 배열입니다.</returns>
      <param name="format">표준 날짜 및 시간 서식 문자열입니다(설명 참조). </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" />이 유효한 표준 날짜 및 시간 형식 지정자 문자가 아닌 경우</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)">
      <summary>이 인스턴스의 값을 지정된 표준 날짜 및 시간 서식 지정자와 문화권별 서식 지정 정보에서 지원하는 모든 문자열 표현으로 변환합니다.</summary>
      <returns>표준 날짜 및 시간 서식 지정자 중 하나를 사용하여 이 인스턴스의 값을 서식 지정한 표현이 각 요소인 문자열 배열입니다.</returns>
      <param name="format">날짜 및 시간 서식 문자열입니다(설명 참조). </param>
      <param name="provider">이 인스턴스에 대한 문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" />이 유효한 표준 날짜 및 시간 형식 지정자 문자가 아닌 경우</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.IFormatProvider)">
      <summary>이 인스턴스의 값을 표준 날짜 및 시간 서식 지정자와 지정된 문화권별 서식 지정 정보에서 지원하는 모든 문자열 표현으로 변환합니다.</summary>
      <returns>표준 날짜 및 시간 서식 지정자 중 하나를 사용하여 이 인스턴스의 값을 서식 지정한 표현이 각 요소인 문자열 배열입니다.</returns>
      <param name="provider">이 인스턴스에 대한 문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Hour">
      <summary>이 인스턴스가 나타내는 날짜의 시간 구성 요소를 가져옵니다.</summary>
      <returns>0부터 23 사이의 값으로 표시되는 시간 구성 요소입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.IsDaylightSavingTime">
      <summary>
        <see cref="T:System.DateTime" />의 이 인스턴스가 현재 시간대의 일광 절약 시간 범위 내에 있는지를 나타냅니다.</summary>
      <returns>true 속성의 값이 <see cref="P:System.DateTime.Kind" /> 또는 <see cref="F:System.DateTimeKind.Local" />이며 <see cref="F:System.DateTimeKind.Unspecified" />의 이 인스턴스 값이 현지 표준 시간대의 일광 절약 시간 범위 내에 있으면 <see cref="T:System.DateTime" />이고, false가 <see cref="P:System.DateTime.Kind" />이면 <see cref="F:System.DateTimeKind.Utc" />입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.IsLeapYear(System.Int32)">
      <summary>지정된 연도가 윤년인지를 나타내는 표시를 반환합니다.</summary>
      <returns>true가 윤년이면 <paramref name="year" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="year">4자리 연도입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 가 1 보다 작거나 9999를 초과 합니다.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Kind">
      <summary>이 인스턴스에 표시된 시간이 현지 시간 또는 UTC(협정 세계시)를 기준으로 하는지 아니면 둘 중 어느 것도 기준으로 하지 않는지를 나타내는 값을 가져옵니다.</summary>
      <returns>현재 시간이 나타내는 시간이 어떤 시간인지 나타내는 열거형 값 중 하나입니다.기본값은 <see cref="F:System.DateTimeKind.Unspecified" />입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.DateTime.MaxValue">
      <summary>
        <see cref="T:System.DateTime" />의 최대값을 나타냅니다.이 필드는 읽기 전용입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Millisecond">
      <summary>이 인스턴스가 나타내는 날짜의 밀리초 구성 요소를 가져옵니다.</summary>
      <returns>0부터 999 사이의 값으로 표시되는 밀리초 구성 요소입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Minute">
      <summary>이 인스턴스가 나타내는 날짜의 분 구성 요소를 가져옵니다.</summary>
      <returns>0부터 59 사이의 값으로 표시되는 분 구성 요소입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.DateTime.MinValue">
      <summary>
        <see cref="T:System.DateTime" />의 최소값을 나타냅니다.이 필드는 읽기 전용입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Month">
      <summary>이 인스턴스가 나타내는 날짜의 월 구성 요소를 가져옵니다.</summary>
      <returns>1부터 12 사이의 값으로 표시되는 월 구성 요소입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Now">
      <summary>이 컴퓨터의 현재 날짜와 시간으로 설정되고 현지 시간으로 표시되는 <see cref="T:System.DateTime" /> 개체를 가져옵니다.</summary>
      <returns>현재 현지 날짜와 시간이 값인 개체입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Addition(System.DateTime,System.TimeSpan)">
      <summary>지정된 시간 간격을 지정된 날짜 및 시간에 더하여 새로운 날짜와 시간을 얻습니다.</summary>
      <returns>
        <paramref name="d" /> 값과 <paramref name="t" /> 값의 합인 개체입니다.</returns>
      <param name="d">더할 날짜 및 시간 값입니다. </param>
      <param name="t">더할 시간 간격입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="T:System.DateTime" />이 <see cref="F:System.DateTime.MinValue" />보다 작거나 <see cref="F:System.DateTime.MaxValue" />보다 큰 경우 </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Equality(System.DateTime,System.DateTime)">
      <summary>
        <see cref="T:System.DateTime" />의 지정된 두 인스턴스가 같은지를 확인합니다.</summary>
      <returns>true 및 <paramref name="d1" />가 동일한 날짜를 나타내면 <paramref name="d2" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="d1">비교할 첫 번째 개체입니다. </param>
      <param name="d2">비교할 두 번째 개체입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)">
      <summary>지정된 <see cref="T:System.DateTime" />이 지정된 다른 <see cref="T:System.DateTime" />보다 나중인지를 판단합니다.</summary>
      <returns>true이 <paramref name="t1" />보다 이후이면 <paramref name="t2" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="t1">비교할 첫 번째 개체입니다. </param>
      <param name="t2">비교할 두 번째 개체입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)">
      <summary>지정된 <see cref="T:System.DateTime" />이 다른 지정된 <see cref="T:System.DateTime" />과 같거나 나중인 날짜와 시간을 나타내는지를 결정합니다.</summary>
      <returns>true이 <paramref name="t1" />보다 이후이거나 동일하면 <paramref name="t2" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="t1">비교할 첫 번째 개체입니다. </param>
      <param name="t2">비교할 두 번째 개체입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Inequality(System.DateTime,System.DateTime)">
      <summary>
        <see cref="T:System.DateTime" />의 지정된 두 인스턴스가 다른지를 확인합니다.</summary>
      <returns>true 및 <paramref name="d1" />가 동일한 날짜와 시간을 나타내지 않으면 <paramref name="d2" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="d1">비교할 첫 번째 개체입니다. </param>
      <param name="d2">비교할 두 번째 개체입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_LessThan(System.DateTime,System.DateTime)">
      <summary>지정된 <see cref="T:System.DateTime" />이 지정된 다른 <see cref="T:System.DateTime" />보다 이전인지를 판단합니다.</summary>
      <returns>true이 <paramref name="t1" />보다 이전이면 <paramref name="t2" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="t1">비교할 첫 번째 개체입니다. </param>
      <param name="t2">비교할 두 번째 개체입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)">
      <summary>지정된 <see cref="T:System.DateTime" />이 다른 지정된 <see cref="T:System.DateTime" />과 같거나 이전인 날짜와 시간을 나타내는지를 결정합니다.</summary>
      <returns>true이 <paramref name="t1" />보다 이후이거나 동일하면 <paramref name="t2" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="t1">비교할 첫 번째 개체입니다. </param>
      <param name="t2">비교할 두 번째 개체입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Subtraction(System.DateTime,System.DateTime)">
      <summary>지정된 날짜와 시간을 지정된 다른 날짜와 시간에서 빼고 시간 간격을 반환합니다.</summary>
      <returns>
        <paramref name="d1" />과 <paramref name="d2" /> 사이의 시간 간격, 즉 <paramref name="d1" />에서 <paramref name="d2" />를 뺀 값입니다.</returns>
      <param name="d1">빼기에서 날짜 및 시간 피감수 값입니다. </param>
      <param name="d2">빼기에서 날짜 및 시간 감수 값입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)">
      <summary>지정된 날짜와 시간에서 지정된 시간 간격을 빼고 새 날짜와 시간을 반환합니다.</summary>
      <returns>
        <paramref name="d" /> 값에서 <paramref name="t" /> 값을 뺀 값인 개체입니다.</returns>
      <param name="d">뺄 대상 날짜 및 시간 값입니다. </param>
      <param name="t">뺄 시간 간격입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="T:System.DateTime" />이 <see cref="F:System.DateTime.MinValue" />보다 작거나 <see cref="F:System.DateTime.MaxValue" />보다 큰 경우 </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.Parse(System.String)">
      <summary>날짜 및 시간에 대한 문자열 표현을 해당 <see cref="T:System.DateTime" />으로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 포함된 날짜 및 시간에 해당하는 개체입니다.</returns>
      <param name="s">변환할 날짜 및 시간이 포함된 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" />에 날짜 및 시간의 올바른 문자열 표현이 들어 있지 않은 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Parse(System.String,System.IFormatProvider)">
      <summary>문화권별 형식 정보를 사용하여 날짜 및 시간의 문자열 표현을 해당 <see cref="T:System.DateTime" />으로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 내용에 따라 <paramref name="provider" />에 포함된 날짜 및 시간에 해당하는 개체입니다.</returns>
      <param name="s">변환할 날짜 및 시간이 포함된 문자열입니다. </param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" />에 날짜 및 시간의 올바른 문자열 표현이 들어 있지 않은 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>문화권별 형식 정보 및 서식 지정 스타일을 사용하여 날짜 및 시간의 문자열 표현을 해당 <see cref="T:System.DateTime" />으로 변환합니다.</summary>
      <returns>
        <paramref name="s" /> 및 <paramref name="provider" />에 지정된 내용에 따라 <paramref name="styles" />에 포함된 날짜 및 시간에 해당하는 개체입니다.</returns>
      <param name="s">변환할 날짜 및 시간이 포함된 문자열입니다. </param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <param name="styles">구문 분석 작업이 성공하기 위해 <paramref name="s" />에 있을 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합으로, 현재 시간대 또는 현재 날짜와 비교하여 구문 분석된 날짜를 해석할 방법을 정의합니다.지정할 일반적인 값은 <see cref="F:System.Globalization.DateTimeStyles.None" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" />가 null인 경우 </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" />에 날짜 및 시간의 올바른 문자열 표현이 들어 있지 않은 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" />에 <see cref="T:System.Globalization.DateTimeStyles" /> 값의 잘못된 조합이 들어 있는 경우(예: <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" />과 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />)</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)">
      <summary>지정된 형식 및 문화권별 형식 정보를 사용하여 날짜 및 시간의 지정된 문자열 표현을 해당 <see cref="T:System.DateTime" />으로 변환합니다.문자열 표현의 형식이 지정된 형식과 정확하게 일치해야 합니다.</summary>
      <returns>
        <paramref name="s" /> 및 <paramref name="format" />에 지정된 내용에 따라 <paramref name="provider" />에 포함된 날짜 및 시간에 해당하는 개체입니다.</returns>
      <param name="s">변환할 날짜 및 시간이 포함된 문자열입니다. </param>
      <param name="format">
        <paramref name="s" />의 필수 형식을 정의하는 서식 지정자입니다.자세한 내용은 설명 섹션을 참조하세요.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> 또는 <paramref name="format" />가 null인 경우 </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> 또는 <paramref name="format" />이 빈 문자열인 경우 또는 <paramref name="s" />에 <paramref name="format" />에서 지정한 패턴에 해당하는 날짜와 시간이 포함되지 않은 경우 또는<paramref name="s" />에서의 AM/PM 지정자와 시간 구성 요소가 일치하지 않습니다.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>지정된 형식, 문화권별 형식 정보 및 스타일을 사용하여 날짜 및 시간의 지정된 문자열 표현을 해당 <see cref="T:System.DateTime" />으로 변환합니다.문자열 표현의 서식은 지정된 서식과 정확하게 일치해야 합니다. 그렇지 않으면 예외가 throw됩니다.</summary>
      <returns>
        <paramref name="s" />, <paramref name="format" /> 및 <paramref name="provider" />에 지정된 내용에 따라 <paramref name="style" />에 포함된 날짜 및 시간에 해당하는 개체입니다.</returns>
      <param name="s">날짜와 시간이 포함된 변환할 문자열입니다. </param>
      <param name="format">
        <paramref name="s" />의 필수 형식을 정의하는 서식 지정자입니다.자세한 내용은 설명 섹션을 참조하세요.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <param name="style">
        <paramref name="s" />, <paramref name="s" />에 나타날 수 있는 스타일 요소 또는 <paramref name="s" />에서 <see cref="T:System.DateTime" /> 값으로 변환하는 방법에 대한 추가 정보를 제공하는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.DateTimeStyles.None" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> 또는 <paramref name="format" />가 null인 경우 </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> 또는 <paramref name="format" />이 빈 문자열인 경우 또는 <paramref name="s" />에 <paramref name="format" />에서 지정한 패턴에 해당하는 날짜와 시간이 포함되지 않은 경우 또는<paramref name="s" />에서의 AM/PM 지정자와 시간 구성 요소가 일치하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" />에 <see cref="T:System.Globalization.DateTimeStyles" /> 값의 잘못된 조합이 들어 있는 경우(예: <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" />과 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />)</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>지정된 형식 배열, 문화권별 형식 정보 및 스타일을 사용하여 지정된 날짜와 시간의 문자열 표현을 해당 <see cref="T:System.DateTime" /> 표현으로 변환합니다.문자열 표현의 서식은 지정된 형식 중 최소한 하나와 정확하게 일치해야 합니다. 그렇지 않으면 예외가 throw됩니다.</summary>
      <returns>
        <paramref name="s" />, <paramref name="formats" /> 및 <paramref name="provider" />에 지정된 내용에 따라 <paramref name="style" />에 포함된 날짜 및 시간에 해당하는 개체입니다.</returns>
      <param name="s">변환할 날짜 및 시간이 포함된 문자열입니다. </param>
      <param name="formats">
        <paramref name="s" />에 허용되는 형식의 배열입니다.자세한 내용은 설명 섹션을 참조하세요.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <param name="style">
        <paramref name="s" />에 사용할 수 있는 형식을 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.DateTimeStyles.None" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> 또는 <paramref name="formats" />가 null인 경우 </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" />이 빈 문자열인 경우 또는 <paramref name="formats" />의 요소가 빈 문자열인 경우 또는 <paramref name="s" />에 <paramref name="formats" />의 요소에 해당하는 날짜와 시간이 포함되지 않은 경우 또는<paramref name="s" />에서의 AM/PM 지정자와 시간 구성 요소가 일치하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" />에 <see cref="T:System.Globalization.DateTimeStyles" /> 값의 잘못된 조합이 들어 있는 경우(예: <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" />과 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />)</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Second">
      <summary>이 인스턴스가 나타내는 날짜의 초 구성 요소를 가져옵니다.</summary>
      <returns>0부터 59 사이의 값으로 표시되는 초 구성 요소입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)">
      <summary>지정된 <see cref="T:System.DateTime" />과 틱 수가 같지만 지정된 <see cref="T:System.DateTime" /> 값이 나타내듯이 현지 시간 또는 UTC(협정 세계시)로 지정되거나 둘 중 어느 것으로도 지정되지 않은 새 <see cref="T:System.DateTimeKind" /> 개체를 만듭니다.</summary>
      <returns>
        <paramref name="value" /> 매개 변수로 표시되는 개체와 틱 수가 같고 <see cref="T:System.DateTimeKind" /> 매개 변수로 지정된 <paramref name="kind" /> 값이 있는 새 개체입니다. </returns>
      <param name="value">날짜와 시간입니다. </param>
      <param name="kind">새 개체가 현지 시간 또는 UTC(협정 세계시)를 나타내는지 아니면 둘 다 나타내지 않는지를 나타내는 열거형 값 중 하나입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Subtract(System.DateTime)">
      <summary>이 인스턴스에서 지정된 날짜와 시간을 뺍니다.</summary>
      <returns>이 인스턴스가 나타내는 날짜와 시간에서 <paramref name="value" />가 나타내는 날짜와 시간을 뺀 값에 해당하는 시간 간격입니다.</returns>
      <param name="value">뺄 날짜 및 시간 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">결과가 <see cref="F:System.DateTime.MinValue" />보다 작거나 <see cref="F:System.DateTime.MaxValue" />보다 큰 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Subtract(System.TimeSpan)">
      <summary>지정된 기간을 이 인스턴스에서 뺍니다.</summary>
      <returns>이 인스턴스가 나타내는 날짜와 시간에서 <paramref name="value" />가 나타내는 시간 간격을 뺀 값에 해당하는 개체입니다.</returns>
      <param name="value">뺄 시간 간격입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">결과가 <see cref="F:System.DateTime.MinValue" />보다 작거나 <see cref="F:System.DateTime.MaxValue" />보다 큰 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.System#IComparable#CompareTo(System.Object)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 이 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 순서를 나타내는 부호 있는 숫자입니다.값 설명 0보다 작음 이 인스턴스가 정렬 순서에서 <paramref name="value" /> 앞에 옵니다. 0 이 인스턴스가 정렬 순서에서 <paramref name="value" />와 동일한 위치에서 발생합니다. 0보다 큼 이 인스턴스는 정렬 순서로 <paramref name="value" />를 따르거나 <paramref name="value" />가 null입니다. </returns>
      <param name="value">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />가 <see cref="T:System.DateTime" />가 아닌 경우 </exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 멤버의 반환 값은 사용되지 않습니다.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 인터페이스를 구현하는 개체이 매개 변수는 사용되지 않으므로 null을 지정하세요.</param>
      <exception cref="T:System.InvalidCastException">모든 경우</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 멤버의 반환 값은 사용되지 않습니다.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 인터페이스를 구현하는 개체이 매개 변수는 사용되지 않으므로 null을 지정하세요.</param>
      <exception cref="T:System.InvalidCastException">모든 경우</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 멤버의 반환 값은 사용되지 않습니다.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 인터페이스를 구현하는 개체이 매개 변수는 사용되지 않으므로 null을 지정하세요.</param>
      <exception cref="T:System.InvalidCastException">모든 경우</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>현재 <see cref="T:System.DateTime" /> 개체를 반환합니다.</summary>
      <returns>현재 개체입니다.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 인터페이스를 구현하는 개체이 매개 변수는 사용되지 않으므로 null을 지정하세요.</param>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 멤버의 반환 값은 사용되지 않습니다.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 인터페이스를 구현하는 개체이 매개 변수는 사용되지 않으므로 null을 지정하세요.</param>
      <exception cref="T:System.InvalidCastException">모든 경우</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 멤버의 반환 값은 사용되지 않습니다.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 인터페이스를 구현하는 개체이 매개 변수는 사용되지 않으므로 null을 지정하세요.</param>
      <exception cref="T:System.InvalidCastException">모든 경우</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 멤버의 반환 값은 사용되지 않습니다.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 인터페이스를 구현하는 개체이 매개 변수는 사용되지 않으므로 null을 지정하세요.</param>
      <exception cref="T:System.InvalidCastException">모든 경우</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 멤버의 반환 값은 사용되지 않습니다.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 인터페이스를 구현하는 개체이 매개 변수는 사용되지 않으므로 null을 지정하세요.</param>
      <exception cref="T:System.InvalidCastException">모든 경우</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 멤버의 반환 값은 사용되지 않습니다.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 인터페이스를 구현하는 개체이 매개 변수는 사용되지 않으므로 null을 지정하세요.</param>
      <exception cref="T:System.InvalidCastException">모든 경우</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 멤버의 반환 값은 사용되지 않습니다.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 인터페이스를 구현하는 개체이 매개 변수는 사용되지 않으므로 null을 지정하세요.</param>
      <exception cref="T:System.InvalidCastException">모든 경우</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 멤버의 반환 값은 사용되지 않습니다.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 인터페이스를 구현하는 개체이 매개 변수는 사용되지 않으므로 null을 지정하세요.</param>
      <exception cref="T:System.InvalidCastException">모든 경우 </exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>현재 <see cref="T:System.DateTime" /> 개체를 지정된 형식의 개체로 변환합니다.</summary>
      <returns>현재 <paramref name="type" /> 개체 값과 같은 값인 <see cref="T:System.DateTime" /> 매개 변수로 지정된 형식의 개체입니다.</returns>
      <param name="type">필요한 형식입니다. </param>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 인터페이스를 구현하는 개체이 매개 변수는 사용되지 않으므로 null을 지정하세요.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" />가 null인 경우 </exception>
      <exception cref="T:System.InvalidCastException">
        <see cref="T:System.DateTime" /> 형식에서 지원되지 않는 변환인 경우</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 멤버의 반환 값은 사용되지 않습니다.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 인터페이스를 구현하는 개체이 매개 변수는 사용되지 않으므로 null을 지정하세요.</param>
      <exception cref="T:System.InvalidCastException">모든 경우</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 멤버의 반환 값은 사용되지 않습니다.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 인터페이스를 구현하는 개체이 매개 변수는 사용되지 않으므로 null을 지정하세요.</param>
      <exception cref="T:System.InvalidCastException">모든 경우</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 멤버의 반환 값은 사용되지 않습니다.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> 인터페이스를 구현하는 개체이 매개 변수는 사용되지 않으므로 null을 지정하세요.</param>
      <exception cref="T:System.InvalidCastException">모든 경우</exception>
    </member>
    <member name="P:System.DateTime.Ticks">
      <summary>이 인스턴스의 날짜와 시간을 나타내는 틱 수를 가져옵니다.</summary>
      <returns>이 인스턴스의 날짜와 시간을 나타내는 틱 수입니다.값은 DateTime.MinValue.Ticks와 DateTime.MaxValue.Ticks 사이입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.TimeOfDay">
      <summary>이 인스턴스에 대한 하루 중 시간을 가져옵니다.</summary>
      <returns>하루 중 자정부터 경과한 시간을 나타내는 시간 간격입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToBinary">
      <summary>현재 <see cref="T:System.DateTime" /> 개체를 나중에 <see cref="T:System.DateTime" /> 개체를 다시 만드는 데 사용할 수 있는 64비트 이진 값으로 serialize합니다.</summary>
      <returns>
        <see cref="P:System.DateTime.Kind" /> 및 <see cref="P:System.DateTime.Ticks" /> 속성을 인코딩하는 64비트 부호 있는 정수입니다. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Today">
      <summary>현재 날짜를 가져옵니다.</summary>
      <returns>시간 구성 요소가 00:00:00으로 설정되고 오늘 날짜로 설정되는 개체입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToFileTime">
      <summary>현재 <see cref="T:System.DateTime" /> 개체의 값을 Windows 파일 시간으로 변환합니다.</summary>
      <returns>Windows 파일 시간으로 표시되는 현재 <see cref="T:System.DateTime" /> 개체의 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">결과 파일 시간이 서기 1601년 1월 1일 12:00 자정(UTC) 이전의날짜 및 시간을 나타내는 경우</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToFileTimeUtc">
      <summary>현재 <see cref="T:System.DateTime" /> 개체의 값을 Windows 파일 시간으로 변환합니다.</summary>
      <returns>Windows 파일 시간으로 표시되는 현재 <see cref="T:System.DateTime" /> 개체의 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">결과 파일 시간이 서기 1601년 1월 1일 12:00 자정(UTC) 이전의날짜 및 시간을 나타내는 경우</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToLocalTime">
      <summary>현재 <see cref="T:System.DateTime" /> 개체의 값을 현지 시간으로 변환합니다.</summary>
      <returns>
        <see cref="P:System.DateTime.Kind" /> 속성이 <see cref="F:System.DateTimeKind.Local" />이고, 현재 <see cref="T:System.DateTime" /> 개체의 값에 해당하는 현지 시간이 값인 개체입니다. 변환된 값이 너무 커서 <see cref="F:System.DateTime.MaxValue" /> 개체로 표현할 수 없는 경우 <see cref="T:System.DateTime" />이고, 변환된 값이 너무 작아서 <see cref="F:System.DateTime.MinValue" /> 개체로 표현할 수 없는 경우 <see cref="T:System.DateTime" />입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString">
      <summary>현재 <see cref="T:System.DateTime" /> 개체의 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>현재 <see cref="T:System.DateTime" /> 개체 값의 문자열 표현입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">날짜 및 시간이 현재 문화권에 사용된 달력에서 지원하는 날짜 범위를 벗어났습니다. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 정보를 사용하여 현재 <see cref="T:System.DateTime" /> 개체의 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>현재 <see cref="T:System.DateTime" /> 개체의 값을 <paramref name="provider" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">날짜 및 시간이 <paramref name="provider" />에 사용된 달력에서 지원하는 날짜 범위를 벗어나는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString(System.String)">
      <summary>지정된 형식을 사용하여 현재 <see cref="T:System.DateTime" /> 개체의 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>현재 <see cref="T:System.DateTime" /> 개체의 값을 <paramref name="format" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="format">표준 또는 사용자 지정 날짜 및 시간 서식 문자열입니다(설명 부분 참조). </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" />의 길이가 1이고, <see cref="T:System.Globalization.DateTimeFormatInfo" />에 대하여 정의되는 형식 지정자 문자가 아닌 경우또는 <paramref name="format" />에 유효한 사용자 지정 형식 패턴이 들어 있지 않은 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">날짜 및 시간이 현재 문화권에 사용된 달력에서 지원하는 날짜 범위를 벗어났습니다.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString(System.String,System.IFormatProvider)">
      <summary>지정된 형식 및 문화권별 형식 정보를 사용하여 현재 <see cref="T:System.DateTime" /> 개체의 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>현재 <see cref="T:System.DateTime" /> 개체의 값을 <paramref name="format" /> 및 <paramref name="provider" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="format">표준 또는 사용자 지정 날짜 및 시간 서식 문자열입니다. </param>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" />의 길이가 1이고, <see cref="T:System.Globalization.DateTimeFormatInfo" />에 대하여 정의되는 형식 지정자 문자가 아닌 경우또는 <paramref name="format" />에 유효한 사용자 지정 형식 패턴이 들어 있지 않은 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">날짜 및 시간이 <paramref name="provider" />에 사용된 달력에서 지원하는 날짜 범위를 벗어나는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToUniversalTime">
      <summary>현재 <see cref="T:System.DateTime" /> 개체의 값을 UTC(협정 세계시)로 변환합니다.</summary>
      <returns>
        <see cref="P:System.DateTime.Kind" /> 속성이 <see cref="F:System.DateTimeKind.Utc" />이고, 현재 <see cref="T:System.DateTime" /> 개체의 값에 해당하는 UTC가 값인 개체입니다. 변환된 값이 너무 커서 <see cref="F:System.DateTime.MaxValue" /> 개체로 표현할 수 없는 경우 <see cref="T:System.DateTime" />이고, 변환된 값이 너무 작아서 <see cref="F:System.DateTime.MinValue" /> 개체로 표현할 수 없는 경우 <see cref="T:System.DateTime" />입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParse(System.String,System.DateTime@)">
      <summary>날짜와 시간에 대한 지정된 문자열 표현을 해당 <see cref="T:System.DateTime" /> 요소로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다.</summary>
      <returns>true 매개 변수가 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">날짜와 시간이 포함된 변환할 문자열입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <see cref="T:System.DateTime" />에 포함된 날짜와 시간에 해당하는 <paramref name="s" /> 값을 반환하고, 변환이 실패한 경우 <see cref="F:System.DateTime.MinValue" />를 반환합니다.<paramref name="s" /> 매개 변수가 null이거나, 빈 문자열("")이거나, 날짜 및 시간에 유효한 문자열 표현을 포함하고 있지 않으면 변환에 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <summary>지정된 문화권별 형식 정보 및 서식 지정 스타일을 사용하여 날짜 및 시간의 지정된 문자열 표현을 해당 <see cref="T:System.DateTime" />으로 변환하고 변환에 성공했는지를 나타내는 값을 반환합니다.</summary>
      <returns>true 매개 변수가 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">날짜와 시간이 포함된 변환할 문자열입니다. </param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <param name="styles">현재 표준 시간대 또는 현재 날짜와 비교하여 구문 분석된 날짜를 해석하는 방법을 정의하는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.DateTimeStyles.None" />입니다.</param>
      <param name="result">이 메서드는 변환이 성공한 경우 <see cref="T:System.DateTime" />에 포함된 날짜와 시간에 해당하는 <paramref name="s" /> 값을 반환하고, 변환이 실패한 경우 <see cref="F:System.DateTime.MinValue" />를 반환합니다.<paramref name="s" /> 매개 변수가 null이거나, 빈 문자열("")이거나, 날짜 및 시간에 유효한 문자열 표현을 포함하고 있지 않으면 변환에 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" />은(는) 올바른 <see cref="T:System.Globalization.DateTimeStyles" /> 값이 아닙니다.또는<paramref name="styles" />에 잘못된 <see cref="T:System.Globalization.DateTimeStyles" /> 값 조합이 포함된 경우(예: <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" />과 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />)</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="provider" />가 중립 문화권이며 구문 분석 작업에 사용될 수 없는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <summary>지정된 형식, 문화권별 형식 정보 및 스타일을 사용하여 날짜 및 시간의 지정된 문자열 표현을 해당 <see cref="T:System.DateTime" />으로 변환합니다.문자열 표현의 형식이 지정된 형식과 정확하게 일치해야 합니다.이 메서드는 변환이 성공했는지 아니면 실패했는지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">날짜와 시간이 포함된 변환할 문자열입니다. </param>
      <param name="format">
        <paramref name="s" />의 필수 형식입니다.자세한 내용은 설명 부분을 참조하세요.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <param name="style">
        <paramref name="s" />에 사용할 수 있는 형식을 나타내는 열거형 값 하나 이상의 비트 조합입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <see cref="T:System.DateTime" />에 포함된 날짜와 시간에 해당하는 <paramref name="s" /> 값을 반환하고, 변환이 실패한 경우 <see cref="F:System.DateTime.MinValue" />를 반환합니다.<paramref name="s" /> 또는 <paramref name="format" /> 매개 변수가 null이거나, 빈 문자열이거나, <paramref name="format" />에 지정된 패턴에 해당하는 날짜와 시간을 포함하지 않는 경우 변환에 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" />은(는) 올바른 <see cref="T:System.Globalization.DateTimeStyles" /> 값이 아닙니다.또는<paramref name="styles" />에 잘못된 <see cref="T:System.Globalization.DateTimeStyles" /> 값 조합이 포함된 경우(예: <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" />과 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />)</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <summary>지정된 형식 배열, 문화권별 형식 정보 및 스타일을 사용하여 지정된 날짜와 시간의 문자열 표현을 해당 <see cref="T:System.DateTime" /> 표현으로 변환합니다.문자열 표현 형식은 지정된 형식과 정확히 일치해야 합니다.이 메서드는 변환이 성공했는지 아니면 실패했는지를 나타내는 값을 반환합니다.</summary>
      <returns>true 매개 변수가 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 날짜 및 시간이 포함된 문자열입니다. </param>
      <param name="formats">
        <paramref name="s" />에 허용되는 형식의 배열입니다.자세한 내용은 설명 부분을 참조하세요.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <param name="style">
        <paramref name="s" />에 사용할 수 있는 형식을 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.DateTimeStyles.None" />입니다.</param>
      <param name="result">이 메서드는 변환이 성공한 경우 <see cref="T:System.DateTime" />에 포함된 날짜와 시간에 해당하는 <paramref name="s" /> 값을 반환하고, 변환이 실패한 경우 <see cref="F:System.DateTime.MinValue" />를 반환합니다.<paramref name="s" /> 또는 <paramref name="formats" />이 null이거나, <paramref name="s" /> 또는 <paramref name="formats" />의 요소가 빈 문자열이거나, <paramref name="s" />의 형식 패턴 중 하나 이상에서 <paramref name="formats" />의 형식이 정확하게 지정되지 않은 경우 변환에 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" />은(는) 올바른 <see cref="T:System.Globalization.DateTimeStyles" /> 값이 아닙니다.또는<paramref name="styles" />에 잘못된 <see cref="T:System.Globalization.DateTimeStyles" /> 값 조합이 포함된 경우(예: <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" />과 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />)</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.UtcNow">
      <summary>이 컴퓨터의 현재 날짜와 시간으로 설정되고 UTC(협정 세계시)로 표시되는 <see cref="T:System.DateTime" /> 개체를 가져옵니다.</summary>
      <returns>현재 UTC 날짜와 시간이 값인 개체입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Year">
      <summary>이 인스턴스가 나타내는 날짜의 연도 구성 요소를 가져옵니다.</summary>
      <returns>1에서 9999 사이의 연도입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.DateTimeKind">
      <summary>
        <see cref="T:System.DateTime" /> 개체가 현지 시간 또는 UTC(지역 표준시)를 나타내는지 아니면 현지 시간 또는 UTC로 지정되지 않는지 여부를 지정합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.DateTimeKind.Local">
      <summary>표시된 시간이 현지 시간입니다.</summary>
    </member>
    <member name="F:System.DateTimeKind.Unspecified">
      <summary>표시된 시간이 현지 시간 또는 UTC(지역 표준시)로 지정되지 않습니다.</summary>
    </member>
    <member name="F:System.DateTimeKind.Utc">
      <summary>표시된 시간이 UTC입니다.</summary>
    </member>
    <member name="T:System.DateTimeOffset">
      <summary>UTC(협정 세계시)를 기준으로 일반적으로 날짜와 시간으로 표현한 시각을 나타냅니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.DateTime)">
      <summary>지정된 <see cref="T:System.DateTime" /> 값을 사용하여 <see cref="T:System.DateTimeOffset" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="dateTime">날짜와 시간입니다.   </param>
      <exception cref="T:System.ArgumentOutOfRangeException">오프셋을 적용한 결과인 UTC(협정 세계시) 날짜와 시간이 <see cref="F:System.DateTimeOffset.MinValue" />보다 빠른 경우또는오프셋을 적용한 결과인 UTC 날짜와 시간이 <see cref="F:System.DateTimeOffset.MaxValue" />보다 늦은 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)">
      <summary>지정된 <see cref="T:System.DateTime" /> 값과 오프셋을 사용하여 <see cref="T:System.DateTimeOffset" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="dateTime">날짜와 시간입니다.   </param>
      <param name="offset">UTC(협정 세계시)를 기준으로 해당 시간의 오프셋입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateTime.Kind" />가 <see cref="F:System.DateTimeKind.Utc" />이고 <paramref name="offset" />이 0이 아닌 경우또는<paramref name="dateTime.Kind" />가 <see cref="F:System.DateTimeKind.Local" />이고 <paramref name="offset" />이 시스템의 현지 시간대의 오프셋이 아닌 경우또는<paramref name="offset" />이 분 단위로 지정되지 않은 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 -14시간보다 작거나 14시간보다 큰 경우또는<see cref="P:System.DateTimeOffset.UtcDateTime" />가 <see cref="F:System.DateTimeOffset.MinValue" />보다 작거나 <see cref="F:System.DateTimeOffset.MaxValue" />보다 큰 경우 </exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)">
      <summary>지정된 연도, 월, 일, 시, 분, 초, 밀리초 및 오프셋을 사용하여 <see cref="T:System.DateTimeOffset" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="year">연도(1부터 9999까지)</param>
      <param name="month">월(1부터 12까지)</param>
      <param name="day">일(1부터 <paramref name="month" />에 있는 날짜 수까지)</param>
      <param name="hour">시(0부터 23까지)   </param>
      <param name="minute">분(0부터 59까지)</param>
      <param name="second">초(0부터 59까지)</param>
      <param name="millisecond">밀리초(0부터 999까지)</param>
      <param name="offset">UTC(협정 세계시)를 기준으로 해당 시간의 오프셋입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />을 분 단위로 표현하지 않은 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" />가 1보다 작거나 9999보다 큰 경우또는<paramref name="month" />가 1보다 작거나 12보다 큰 경우또는<paramref name="day" />가 1보다 작거나 <paramref name="month" />의 일 수보다 큰 경우또는<paramref name="hour" />가 0보다 작거나 23보다 큰 경우또는<paramref name="minute" />가 0보다 작거나 59보다 큽니다.또는<paramref name="second" />가 0보다 작거나 59보다 큽니다.또는<paramref name="millisecond" />가 0보다 작거나 999보다 큽니다.또는<paramref name="offset" />가 -14보다 작거나 14보다 큽니다.또는<see cref="P:System.DateTimeOffset.UtcDateTime" /> 속성이 <see cref="F:System.DateTimeOffset.MinValue" />보다 빠르거나 <see cref="F:System.DateTimeOffset.MaxValue" />보다 늦은 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)">
      <summary>지정된 연도, 월, 일, 시, 분, 초 및 오프셋을 사용하여 <see cref="T:System.DateTimeOffset" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="year">연도(1부터 9999까지)</param>
      <param name="month">월(1부터 12까지)</param>
      <param name="day">일(1부터 <paramref name="month" />에 있는 날짜 수까지)</param>
      <param name="hour">시(0부터 23까지)   </param>
      <param name="minute">분(0부터 59까지)</param>
      <param name="second">초(0부터 59까지)</param>
      <param name="offset">UTC(협정 세계시)를 기준으로 해당 시간의 오프셋입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />을 분 단위로 표현하지 않은 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" />가 1보다 작거나 9999보다 큰 경우또는<paramref name="month" />가 1보다 작거나 12보다 큰 경우또는<paramref name="day" />가 1보다 작거나 <paramref name="month" />의 일 수보다 큰 경우또는<paramref name="hour" />가 0보다 작거나 23보다 큰 경우또는<paramref name="minute" />가 0보다 작거나 59보다 큽니다.또는<paramref name="second" />가 0보다 작거나 59보다 큽니다.또는<paramref name="offset" />이 -14시간보다 작거나 14시간보다 큰 경우또는<see cref="P:System.DateTimeOffset.UtcDateTime" /> 속성이 <see cref="F:System.DateTimeOffset.MinValue" />보다 빠르거나 <see cref="F:System.DateTimeOffset.MaxValue" />보다 늦은 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)">
      <summary>지정된 수의 틱과 오프셋을 사용하여 <see cref="T:System.DateTimeOffset" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="ticks">0001년 1월 1일 자정 12시 00분 00초부터 경과한 100나노초 간격의 수로 표현한 날짜와 시간입니다.</param>
      <param name="offset">UTC(협정 세계시)를 기준으로 해당 시간의 오프셋입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />이 분 단위로 지정되지 않은 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.DateTimeOffset.UtcDateTime" /> 속성이 <see cref="F:System.DateTimeOffset.MinValue" />보다 빠르거나 <see cref="F:System.DateTimeOffset.MaxValue" />보다 늦은 경우또는<paramref name="ticks" />가 DateTimeOffset.MinValue.Ticks보다 작거나 DateTimeOffset.MaxValue.Ticks보다 큰 경우또는<paramref name="Offset" />이 -14시간보다 작거나 14시간보다 큰 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.Add(System.TimeSpan)">
      <summary>새 반환 <see cref="T:System.DateTimeOffset" /> 이 인스턴스의 값에 지정된 된 시간 간격을 추가 하는 개체입니다.</summary>
      <returns>값이 현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 날짜 및 시간과 <paramref name="timeSpan" />이 나타내는 시간 간격의 합계인 개체입니다.</returns>
      <param name="timeSpan">양수 또는 음수 시간 간격을 나타내는 <see cref="T:System.TimeSpan" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MinValue" />보다 작은 경우또는 결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MaxValue" />보다 큰 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddDays(System.Double)">
      <summary>새 반환 <see cref="T:System.DateTimeOffset" /> 이 인스턴스의 값에 지정된 된 수의 정수 부분과 소수 부분 일을 추가 하는 개체입니다.</summary>
      <returns>값이 현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 날짜 및 시간과 <paramref name="days" />가 나타내는 일 수의 합계인 개체입니다.</returns>
      <param name="days">정수 및 소수로 계산된 날 수입니다.숫자는 음수가 될 수도 있고 양수가 될 수도 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MinValue" />보다 작은 경우또는 결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MaxValue" />보다 큰 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddHours(System.Double)">
      <summary>새 반환 <see cref="T:System.DateTimeOffset" /> 이 인스턴스의 값에 지정된 된 수의 정수 부분과 소수 부분 시간을 추가 하는 개체입니다.</summary>
      <returns>값이 현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 날짜 및 시간과 <paramref name="hours" />가 나타내는 시간의 합계인 개체입니다.</returns>
      <param name="hours">정수 및 소수로 계산된 시간 수입니다.숫자는 음수가 될 수도 있고 양수가 될 수도 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MinValue" />보다 작은 경우또는 결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MaxValue" />보다 큰 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddMilliseconds(System.Double)">
      <summary>새 반환 <see cref="T:System.DateTimeOffset" /> 이 인스턴스의 값에 지정된 된 수의 시간 (밀리초) 추가 하는 개체입니다.</summary>
      <returns>값이 현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 날짜 및 시간과 <paramref name="milliseconds" />가 나타내는 정수 밀리초의 합계인 개체입니다.</returns>
      <param name="milliseconds">정수 및 소수로 계산된 밀리초 수입니다.숫자는 음수가 될 수도 있고 양수가 될 수도 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MinValue" />보다 작은 경우또는 결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MaxValue" />보다 큰 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddMinutes(System.Double)">
      <summary>새 반환 <see cref="T:System.DateTimeOffset" /> 이 인스턴스의 값에 지정된 된 수의 정수 부분과 소수 부분 시간 (분) 추가 하는 개체입니다.</summary>
      <returns>값이 현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 날짜 및 시간과 <paramref name="minutes" />가 나타내는 분 수의 합계인 개체입니다.</returns>
      <param name="minutes">정수 및 소수로 계산된 분 수입니다.숫자는 음수가 될 수도 있고 양수가 될 수도 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MinValue" />보다 작은 경우또는 결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MaxValue" />보다 큰 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddMonths(System.Int32)">
      <summary>새 반환 <see cref="T:System.DateTimeOffset" /> 이 인스턴스의 값에는 지정 된 개월 수를 추가 하는 개체입니다.</summary>
      <returns>값이 현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 날짜 및 시간과 <paramref name="months" />가 나타내는 개월 수의 합계인 개체입니다.</returns>
      <param name="months">개월을 나타내는 정수입니다.숫자는 음수가 될 수도 있고 양수가 될 수도 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MinValue" />보다 작은 경우또는 결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MaxValue" />보다 큰 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddSeconds(System.Double)">
      <summary>새 반환 <see cref="T:System.DateTimeOffset" /> 이 인스턴스의 값에 지정된 된 수의 정수 부분과 소수 부분 초를 추가 하는 개체입니다.</summary>
      <returns>값이 현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 날짜 및 시간과 <paramref name="seconds" />가 나타내는 초 수의 합계인 개체입니다.</returns>
      <param name="seconds">정수 및 소수로 계산된 초 수입니다.숫자는 음수가 될 수도 있고 양수가 될 수도 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MinValue" />보다 작은 경우또는 결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MaxValue" />보다 큰 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddTicks(System.Int64)">
      <summary>새 반환 <see cref="T:System.DateTimeOffset" /> 이 인스턴스의 값에는 지정 된 틱 수를 추가 하는 개체입니다.</summary>
      <returns>값이 현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 날짜 및 시간과 <paramref name="ticks" />가 나타내는 틱 수의 합계인 개체입니다.</returns>
      <param name="ticks">천만 분의 1초 틱의 수입니다.숫자는 음수가 될 수도 있고 양수가 될 수도 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MinValue" />보다 작은 경우또는 결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MaxValue" />보다 큰 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddYears(System.Int32)">
      <summary>새 반환 <see cref="T:System.DateTimeOffset" /> 이 인스턴스의 값에는 지정 된 년 수를 추가 하는 개체입니다.</summary>
      <returns>값이 현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 날짜 및 시간과 <paramref name="years" />가 나타내는 연도 수의 합계인 개체입니다.</returns>
      <param name="years">연도 수입니다.숫자는 음수가 될 수도 있고 양수가 될 수도 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MinValue" />보다 작은 경우또는 결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MaxValue" />보다 큰 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>두 <see cref="T:System.DateTimeOffset" /> 개체를 비교하고 첫 번째 개체가 두 번째 개체보다 빠른지, 같은지, 늦은지 알려 줍니다.</summary>
      <returns>다음 표와 같이 <paramref name="first" /> 매개 변수의 값이 <paramref name="second" /> 매개 변수의 값보다 빠른지, 늦은지, 같은 시간인지 나타내는 부호 있는 정수입니다.반환 값의미0보다 작음<paramref name="first" />가 <paramref name="second" />보다 이전인 경우0<paramref name="first" />가 <paramref name="second" />와 같은 경우0보다 큼<paramref name="first" />이 <paramref name="second" />보다 나중인 경우</returns>
      <param name="first">비교할 첫 번째 개체입니다.</param>
      <param name="second">비교할 두 번째 개체입니다.</param>
    </member>
    <member name="M:System.DateTimeOffset.CompareTo(System.DateTimeOffset)">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체를 지정된 <see cref="T:System.DateTimeOffset" /> 개체로 변환하고 현재 개체가 두 번째 <see cref="T:System.DateTimeOffset" /> 개체보다 빠른지, 같은지, 늦은지 알려 줍니다.</summary>
      <returns>다음 표와 같이 현재 <see cref="T:System.DateTimeOffset" /> 개체와 <paramref name="other" /> 사이의 관계를 나타내는 부호 있는 정수입니다.반환 값설명0보다 작음현재 <see cref="T:System.DateTimeOffset" /> 개체가 <paramref name="other" />보다 이전인 경우0현재 <see cref="T:System.DateTimeOffset" /> 개체가 <paramref name="other" />와 같은 경우0보다 큼현재 <see cref="T:System.DateTimeOffset" /> 개체가 <paramref name="other" />보다 나중인 경우</returns>
      <param name="other">현재 <see cref="T:System.DateTimeOffset" /> 개체와 비교할 개체입니다.</param>
    </member>
    <member name="P:System.DateTimeOffset.Date">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체의 날짜 구성 요소를 나타내는 <see cref="T:System.DateTime" /> 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.DateTimeOffset" /> 개체의 날짜 구성 요소를 나타내는 <see cref="T:System.DateTime" /> 값입니다.</returns>
    </member>
    <member name="P:System.DateTimeOffset.DateTime">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체의 날짜와 시간을 나타내는 <see cref="T:System.DateTime" /> 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.DateTimeOffset" /> 개체의 날짜와 시간입니다.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Day">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 일을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.DateTimeOffset" /> 개체의 일 구성 요소입니다. 이는 1에서 31 사이의 값으로 표현됩니다.</returns>
    </member>
    <member name="P:System.DateTimeOffset.DayOfWeek">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 요일을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.DateTimeOffset" /> 개체의 요일을 나타내는 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.DateTimeOffset.DayOfYear">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 연도의 몇째 날인지 표시하는 일을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 연도의 몇째 날인지 표시하는 일입니다. 1에서 366 사이의 값으로 표현됩니다.</returns>
    </member>
    <member name="M:System.DateTimeOffset.Equals(System.DateTimeOffset)">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 시각이 지정된 <see cref="T:System.DateTimeOffset" /> 개체와 같은지 확인합니다.</summary>
      <returns>두 <see cref="T:System.DateTimeOffset" /> 개체의 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 값이 모두 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="other">현재 <see cref="T:System.DateTimeOffset" /> 개체와 비교할 개체입니다.   </param>
    </member>
    <member name="M:System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>지정된 두 <see cref="T:System.DateTimeOffset" /> 개체가 동일한 시각을 나타내는지 확인합니다.</summary>
      <returns>두 <see cref="T:System.DateTimeOffset" /> 개체의 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 값이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="first">비교할 첫 번째 개체입니다.</param>
      <param name="second">비교할 두 번째 개체입니다.</param>
    </member>
    <member name="M:System.DateTimeOffset.Equals(System.Object)">
      <summary>
        <see cref="T:System.DateTimeOffset" /> 개체가 지정된 개체와 동일한 시각을 나타내는지 확인합니다.</summary>
      <returns>
        <paramref name="obj" /> 매개 변수가 <see cref="T:System.DateTimeOffset" /> 개체이고 현재 <see cref="T:System.DateTimeOffset" /> 개체의 시간과 같은 시각을 나타내면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">현재 <see cref="T:System.DateTimeOffset" /> 개체와 비교할 개체입니다.</param>
    </member>
    <member name="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체가 지정된 <see cref="T:System.DateTimeOffset" /> 개체와 같은 시간을 나타내고 오프셋이 같은지 확인합니다.</summary>
      <returns>현재 <see cref="T:System.DateTimeOffset" /> 개체와 <paramref name="other" />의 날짜 및 시간 값이 같고 <see cref="P:System.DateTimeOffset.Offset" /> 값이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="other">현재 <see cref="T:System.DateTimeOffset" /> 개체와 비교할 개체입니다. </param>
    </member>
    <member name="M:System.DateTimeOffset.FromFileTime(System.Int64)">
      <summary>지정한 Windows 파일 시간을 해당 현지 시간으로 변환합니다.</summary>
      <returns>현지 시간 오프셋으로 설정된 오프셋을 사용하여 <paramref name="fileTime" />의 날짜와 시간을 표현하는 개체입니다.</returns>
      <param name="fileTime">틱으로 표현된 Windows 파일 시간입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="filetime" />가 0보다 작은 경우또는<paramref name="filetime" />가 DateTimeOffset.MaxValue.Ticks보다 큰 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)">
      <summary>1970 년 이후 경과 된 시간 (밀리초)으로 표현 된 Unix 시간 변환 합니다.-01-01T00:00:00Z에는 <see cref="T:System.DateTimeOffset" /> 값입니다.</summary>
      <returns>동일한 순간에 Unix 시간으로 나타내는 날짜 및 시간 값입니다. </returns>
      <param name="milliseconds">1970-01-01T00:00:00Z(1970년 1월 1일 오전 12:00 UTC) 이후 경과된 Unix 시간(밀리초)입니다.이 날짜 이전의 Unix 시간의 값은 음수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="milliseconds" />가 -62,135,596,800,000보다 작습니다. 또는<paramref name="milliseconds" />가 253,402,300,799,999보다 큽니다. </exception>
    </member>
    <member name="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)">
      <summary>1970 년 이후 경과 된 시간 (초)으로 표현 된 Unix 시간 변환 합니다.-01-01T00:00:00Z에는 <see cref="T:System.DateTimeOffset" /> 값입니다. </summary>
      <returns>동일한 순간에 Unix 시간으로 나타내는 날짜 및 시간 값입니다. </returns>
      <param name="seconds">1970-01-01T00:00:00Z(1970년 1월 1일 오전 12:00 UTC) 이후 경과된 Unix 시간(초)입니다.이 날짜 이전의 Unix 시간의 값은 음수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="seconds" />가 -62,135,596,800보다 작습니다. 또는<paramref name="seconds" />가 253,402,300,799보다 큽니다. </exception>
    </member>
    <member name="M:System.DateTimeOffset.GetHashCode">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체에 대한 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Hour">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 시간의 시 구성 요소를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.DateTimeOffset" /> 개체의 시 구성 요소입니다.이 속성에는 24시간제가 사용되며 값의 범위는 0에서 23 사이입니다.</returns>
    </member>
    <member name="P:System.DateTimeOffset.LocalDateTime">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체의 현지 날짜 및 시간을 나타내는 <see cref="T:System.DateTime" /> 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.DateTimeOffset" /> 개체의 현지 날짜와 시간입니다.</returns>
    </member>
    <member name="F:System.DateTimeOffset.MaxValue">
      <summary>
        <see cref="T:System.DateTimeOffset" />에 허용되는 가장 큰 값을 나타냅니다.이 필드는 읽기 전용입니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="F:System.DateTime.MaxValue" />가 현재 문화권의 기본 달력 또는 지정된 문화권의 기본 달력의 범위에서 벗어납니다.</exception>
    </member>
    <member name="P:System.DateTimeOffset.Millisecond">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 시간의 밀리초 구성 요소를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.DateTimeOffset" /> 개체의 밀리초 구성 요소이며 0에서 999 사이의 정수로 표현됩니다.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Minute">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 시간의 분 구성 요소를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.DateTimeOffset" /> 개체의 분 구성 요소이며, 0에서 59 사이의 정수로 표현됩니다.</returns>
    </member>
    <member name="F:System.DateTimeOffset.MinValue">
      <summary>
        <see cref="T:System.DateTimeOffset" />에 허용되는 가장 빠른 값을 나타냅니다.이 필드는 읽기 전용입니다.</summary>
    </member>
    <member name="P:System.DateTimeOffset.Month">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 날짜의 월 구성 요소를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.DateTimeOffset" /> 개체의 월 구성 요소이며, 1에서 12 사이의 정수로 표현됩니다.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Now">
      <summary>UTC(협정 세계시)를 기준으로 한 현지 시간의 오프셋으로 설정된 오프셋을 적용하여 현재 컴퓨터의 현재 날짜 및 시간으로 설정된 <see cref="T:System.DateTimeOffset" /> 개체를 가져옵니다.</summary>
      <returns>해당 오프셋이 UTC(협정 세계시)를 기준으로 한 현지 시간대의 오프셋이고 해당 날짜 및 시간이 현재 현지 시간인 <see cref="T:System.DateTimeOffset" /> 개체입니다.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Offset">
      <summary>UTC(협정 세계시)를 기준으로 한 해당 시간의 오프셋을 가져옵니다. </summary>
      <returns>현재 <see cref="T:System.DateTimeOffset" /> 개체의 시간 값과 UTC(협정 세계시) 사이의 차이입니다.</returns>
    </member>
    <member name="M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)">
      <summary>날짜와 시간이 지정된 <see cref="T:System.DateTimeOffset" /> 개체에 지정된 시간 간격을 더하고 새 날짜와 시간이 포함된 <see cref="T:System.DateTimeOffset" /> 개체를 생성합니다.</summary>
      <returns>값이 <paramref name="dateTimeTz" /> 값과 <paramref name="timeSpan" /> 값의 합계인 개체입니다.</returns>
      <param name="dateTimeOffset">시간 간격을 추가할 개체입니다.</param>
      <param name="timeSpan">더할 시간 간격입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MinValue" />보다 작은 경우또는 결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MaxValue" />보다 큰 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>지정된 두 <see cref="T:System.DateTimeOffset" /> 개체가 동일한 시각을 나타내는지 확인합니다.</summary>
      <returns>두 <see cref="T:System.DateTimeOffset" /> 개체의 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 값이 모두 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">비교할 첫 번째 개체입니다.</param>
      <param name="right">비교할 두 번째 개체입니다.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>지정된 첫 번째 <see cref="T:System.DateTimeOffset" /> 개체가 지정된 두 번째 <see cref="T:System.DateTimeOffset" /> 개체보다 큰지(나중인지) 확인합니다.</summary>
      <returns>
        <paramref name="left" />의 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 값이 <paramref name="right" />의 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 값보다 크면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">비교할 첫 번째 개체입니다.</param>
      <param name="right">비교할 두 번째 개체입니다.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>지정된 첫 번째 <see cref="T:System.DateTimeOffset" /> 개체가 지정된 두 번째 <see cref="T:System.DateTimeOffset" /> 개체보다 크거나 같은지 확인합니다.</summary>
      <returns>
        <paramref name="left" />의 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 값이 <paramref name="right" />의 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 값보다 크거나 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">비교할 첫 번째 개체입니다.</param>
      <param name="right">비교할 두 번째 개체입니다.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset">
      <summary>
        <see cref="T:System.DateTime" /> 개체를 <see cref="T:System.DateTimeOffset" /> 개체로 변환하는 암시적 변환을 정의합니다.</summary>
      <returns>변환된 개체입니다.</returns>
      <param name="dateTime">변환할 개체입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">오프셋을 적용한 결과인 UTC(협정 세계시) 날짜와 시간이 <see cref="F:System.DateTimeOffset.MinValue" />보다 빠른 경우또는오프셋을 적용한 결과인 UTC 날짜와 시간이 <see cref="F:System.DateTimeOffset.MaxValue" />보다 늦은 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>지정된 두 <see cref="T:System.DateTimeOffset" /> 개체가 서로 다른 시각을 가리키는지 확인합니다.</summary>
      <returns>
        <paramref name="left" /> 및 <paramref name="right" />의 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 값이 서로 다르면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">비교할 첫 번째 개체입니다.</param>
      <param name="right">비교할 두 번째 개체입니다.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>지정된 첫 번째 <see cref="T:System.DateTimeOffset" /> 개체가 지정된 두 번째 <see cref="T:System.DateTimeOffset" /> 개체보다 작은지 확인합니다.</summary>
      <returns>
        <paramref name="left" />의 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 값이 <paramref name="right" />의 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 값보다 이전이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">비교할 첫 번째 개체입니다.</param>
      <param name="right">비교할 두 번째 개체입니다.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>지정된 첫 번째 <see cref="T:System.DateTimeOffset" /> 개체가 지정된 두 번째 <see cref="T:System.DateTimeOffset" /> 개체보다 작은지 확인합니다.</summary>
      <returns>
        <paramref name="left" />의 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 값이 <paramref name="right" />의 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 값보다 이전이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">비교할 첫 번째 개체입니다.</param>
      <param name="right">비교할 두 번째 개체입니다.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>한 <see cref="T:System.DateTimeOffset" /> 개체를 다른 개체에서 빼서 시간 간격을 생성합니다.</summary>
      <returns>
        <paramref name="left" />와 <paramref name="right" /> 사이의 차이를 나타내는 개체입니다.</returns>
      <param name="left">피감수입니다.   </param>
      <param name="right">감수입니다.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)">
      <summary>지정된 날짜와 시간에서 지정된 시간 간격을 빼서 새 날짜와 시간을 생성합니다.</summary>
      <returns>
        <paramref name="dateTimeOffset" />에서 <paramref name="timeSpan" />을 뺀 값과 같은 개체입니다.</returns>
      <param name="dateTimeOffset">뺄 대상 날짜 및 시간 개체입니다.</param>
      <param name="timeSpan">뺄 시간 간격입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MinValue" />보다 작거나 <see cref="F:System.DateTimeOffset.MaxValue" />보다 큰 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.Parse(System.String)">
      <summary>날짜, 시간 및 오프셋의 지정된 문자열 표현을 해당 <see cref="T:System.DateTimeOffset" />으로 변환합니다.</summary>
      <returns>
        <paramref name="input" />에 들어 있는 날짜 및 시간에 해당하는 개체입니다.</returns>
      <param name="input">변환할 날짜 및 시간이 포함된 문자열입니다.</param>
      <exception cref="T:System.ArgumentException">오프셋이 14시간보다 크거나 -14시간보다 작은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />가 null인 경우</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" />에 날짜 및 시간의 올바른 문자열 표현이 들어 있지 않은 경우또는<paramref name="input" />에 날짜 또는 시간이 없는 오프셋 값의 문자열 표현이 들어 있는 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider)">
      <summary>지정된 문화권별 형식 정보를 사용하여 날짜 및 시간의 지정된 문자열 표현을 해당 <see cref="T:System.DateTimeOffset" />으로 변환합니다.</summary>
      <returns>
        <paramref name="formatProvider" />에 의해 지정한 대로 <paramref name="input" />에 들어 있는 날짜 및 시간과 같은 개체입니다.</returns>
      <param name="input">변환할 날짜 및 시간이 포함된 문자열입니다.   </param>
      <param name="formatProvider">
        <paramref name="input" />에 대한 문화권별 서식 정보를 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">오프셋이 14시간보다 크거나 -14시간보다 작은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />가 null인 경우</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" />에 날짜 및 시간의 올바른 문자열 표현이 들어 있지 않은 경우또는<paramref name="input" />에 날짜 또는 시간이 없는 오프셋 값의 문자열 표현이 들어 있는 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>지정된 문화권별 형식 정보 및 형식 지정 스타일을 사용하여 날짜 및 시간의 지정된 문자열 표현을 해당 <see cref="T:System.DateTimeOffset" />으로 변환합니다.</summary>
      <returns>
        <paramref name="formatProvider" /> 및 <paramref name="styles" />에 의해 지정된 대로 <paramref name="input" />에 들어 있는 날짜 및 시간과 같은 개체입니다.</returns>
      <param name="input">변환할 날짜 및 시간이 포함된 문자열입니다.   </param>
      <param name="formatProvider">
        <paramref name="input" />에 대한 문화권별 서식 정보를 제공하는 개체입니다.</param>
      <param name="styles">
        <paramref name="input" />에 사용할 수 있는 형식을 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.DateTimeStyles.None" />입니다.</param>
      <exception cref="T:System.ArgumentException">오프셋이 14시간보다 크거나 -14시간보다 작은 경우또는<paramref name="styles" />은(는) 올바른 <see cref="T:System.Globalization.DateTimeStyles" /> 값이 아닙니다.또는<paramref name="styles" />에 지원되지 않는 <see cref="T:System.Globalization.DateTimeStyles" /> 값이 포함된 경우또는<paramref name="styles" />에 함께 사용할 수 없는 <see cref="T:System.Globalization.DateTimeStyles" /> 값이 포함된 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />가 null인 경우</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" />에 날짜 및 시간의 올바른 문자열 표현이 들어 있지 않은 경우또는<paramref name="input" />에 날짜 또는 시간이 없는 오프셋 값의 문자열 표현이 들어 있는 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)">
      <summary>지정된 형식 및 문화권별 형식 정보를 사용하여 날짜 및 시간의 지정된 문자열 표현을 해당 <see cref="T:System.DateTimeOffset" />으로 변환합니다.문자열 표현의 형식이 지정된 형식과 정확하게 일치해야 합니다.</summary>
      <returns>An object that is equivalent to the date and time that is contained in <paramref name="input" /> as specified by <paramref name="format" /> and <paramref name="formatProvider" />.</returns>
      <param name="input">변환할 날짜 및 시간이 포함된 문자열입니다.</param>
      <param name="format">
        <paramref name="input" />의 예상 형식을 정의하는 형식 지정자입니다.</param>
      <param name="formatProvider">
        <paramref name="input" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">오프셋이 14시간보다 크거나 -14시간보다 작은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />가 null인 경우또는<paramref name="format" />가 null인 경우</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" />이 빈 문자열("")인 경우또는<paramref name="input" />에 날짜 및 시간의 올바른 문자열 표현이 들어 있지 않은 경우또는<paramref name="format" />이 빈 문자열인 경우또는<paramref name="input" />에서의 AM/PM 지정자와 시간 구성 요소가 일치하지 않습니다.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>지정된 형식, 문화권별 형식 정보 및 스타일을 사용하여 날짜 및 시간의 지정된 문자열 표현을 해당 <see cref="T:System.DateTimeOffset" />으로 변환합니다.문자열 표현의 형식이 지정된 형식과 정확하게 일치해야 합니다.</summary>
      <returns>
        <paramref name="format" />, <paramref name="formatProvider" /> 및 <paramref name="styles" /> 매개 변수에 의해 지정된 대로 <paramref name="input" /> 매개 변수에 들어 있는 날짜 및 시간과 같은 개체입니다.</returns>
      <param name="input">변환할 날짜 및 시간이 포함된 문자열입니다.</param>
      <param name="format">
        <paramref name="input" />의 예상 형식을 정의하는 형식 지정자입니다.</param>
      <param name="formatProvider">
        <paramref name="input" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다.</param>
      <param name="styles">
        <paramref name="input" />에 사용할 수 있는 형식을 나타내는 열거형 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentException">오프셋이 14시간보다 크거나 -14시간보다 작은 경우또는<paramref name="styles" /> 매개 변수에 지원되지 않는 값이 포함된 경우또는<paramref name="styles" /> 매개 변수에 함께 사용할 수 없는 <see cref="T:System.Globalization.DateTimeStyles" /> 값이 포함된 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />가 null인 경우또는<paramref name="format" />가 null인 경우</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" />이 빈 문자열("")인 경우또는<paramref name="input" />에 날짜 및 시간의 올바른 문자열 표현이 들어 있지 않은 경우또는<paramref name="format" />이 빈 문자열인 경우또는<paramref name="input" />에서의 AM/PM 지정자와 시간 구성 요소가 일치하지 않습니다. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>지정된 형식, 문화권별 형식 정보 및 스타일을 사용하여 지정된 날짜와 시간의 문자열 표현을 해당 <see cref="T:System.DateTimeOffset" /> 표현으로 변환합니다.문자열 표시의 형식은 지정된 형식 중 하나와 정확히 일치해야 합니다.</summary>
      <returns>An object that is equivalent to the date and time that is contained in the <paramref name="input" /> parameter, as specified by the <paramref name="formats" />, <paramref name="formatProvider" />, and <paramref name="styles" /> parameters.</returns>
      <param name="input">변환할 날짜 및 시간이 포함된 문자열입니다.</param>
      <param name="formats">
        <paramref name="input" />의 예상 형식을 정의하는 형식 지정자의 배열입니다.</param>
      <param name="formatProvider">
        <paramref name="input" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다.</param>
      <param name="styles">
        <paramref name="input" />에 사용할 수 있는 형식을 나타내는 열거형 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentException">오프셋이 14시간보다 크거나 -14시간보다 작은 경우또는<paramref name="styles" />에 지원되지 않는 값이 포함된 경우또는<paramref name="styles" /> 매개 변수에 함께 사용할 수 없는 <see cref="T:System.Globalization.DateTimeStyles" /> 값이 포함된 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />가 null인 경우</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" />이 빈 문자열("")인 경우또는<paramref name="input" />에 날짜 및 시간의 올바른 문자열 표현이 들어 있지 않은 경우또는<paramref name="formats" />의 어떠한 요소에도 유효한 형식 지정자가 포함되지 않은 경우또는<paramref name="input" />에서의 AM/PM 지정자와 시간 구성 요소가 일치하지 않습니다. </exception>
    </member>
    <member name="P:System.DateTimeOffset.Second">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 클럭 시간의 초 구성 요소를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.DateTimeOffset" /> 개체의 초 구성 요소이며, 0에서 59 사이의 정수 값으로 표현됩니다.</returns>
    </member>
    <member name="M:System.DateTimeOffset.Subtract(System.DateTimeOffset)">
      <summary>특정 날짜와 시간을 나타내는 <see cref="T:System.DateTimeOffset" /> 값을 현재 <see cref="T:System.DateTimeOffset" /> 개체에서 뺍니다.</summary>
      <returns>두 <see cref="T:System.DateTimeOffset" /> 개체 사이의 간격을 지정하는 개체입니다.</returns>
      <param name="value">뺄 값을 나타내는 개체입니다. </param>
    </member>
    <member name="M:System.DateTimeOffset.Subtract(System.TimeSpan)">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체에서 지정된 시간 간격을 뺍니다.</summary>
      <returns>현재 <see cref="T:System.DateTimeOffset" /> 개체에서 <paramref name="value" />로 표현된 시간 간격을 빼서 나타낸 날짜 및 시간과 같은 개체입니다.</returns>
      <param name="value">뺄 시간 간격입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MinValue" />보다 작은 경우또는 결과 <see cref="T:System.DateTimeOffset" /> 값이 <see cref="F:System.DateTimeOffset.MaxValue" />보다 큰 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.System#IComparable#CompareTo(System.Object)">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체의 값을 형식이 같은 다른 개체와 비교합니다.</summary>
      <returns>현재 <see cref="T:System.DateTimeOffset" /> 개체가 <paramref name="obj" />보다 작은지, 같은지, 큰지 나타내는 부호 있는 32비트 정수입니다.이 메서드의 반환 값은 다음과 같이 해석됩니다.반환 값설명0보다 작음현재 <see cref="T:System.DateTimeOffset" /> 개체가 <paramref name="obj" />보다 작은(빠른) 경우입니다.0현재 <see cref="T:System.DateTimeOffset" /> 개체가 <paramref name="obj" />와 같은(동일한 시각을 나타내는) 경우입니다.0보다 큼현재 <see cref="T:System.DateTimeOffset" /> 개체가 <paramref name="obj" />보다 큰(늦은) 경우입니다.</returns>
      <param name="obj">현재 <see cref="T:System.DateTimeOffset" /> 개체와 비교할 개체입니다.</param>
    </member>
    <member name="P:System.DateTimeOffset.Ticks">
      <summary>클럭 시간으로 현재 <see cref="T:System.DateTimeOffset" /> 개체의 날짜와 시간을 나타내는 틱 수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.DateTimeOffset" /> 개체에 대한 클록 시간의 틱 수입니다.</returns>
    </member>
    <member name="P:System.DateTimeOffset.TimeOfDay">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체에 대한 하루 중 시간을 가져옵니다.</summary>
      <returns>자정을 기준으로 경과한 현재 날짜의 시간 간격입니다.</returns>
    </member>
    <member name="M:System.DateTimeOffset.ToFileTime">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체의 값을 Windows 파일 시간으로 변환합니다.</summary>
      <returns>Windows 파일 시간으로 표현되는 현재 <see cref="T:System.DateTimeOffset" /> 개체의 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">결과 파일 시간이 서기 1601년 1월 1일 자정 UTC(협정 세계시) 이전의UTC(협정 세계시).</exception>
    </member>
    <member name="M:System.DateTimeOffset.ToLocalTime">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체를 현지 시간을 나타내는 <see cref="T:System.DateTimeOffset" /> 개체로 변환합니다.</summary>
      <returns>현지 시간으로 변환된 현재 <see cref="T:System.DateTimeOffset" /> 개체의 날짜와 시간을 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.DateTimeOffset.ToOffset(System.TimeSpan)">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체의 값을 오프셋 값으로 지정된 날짜와 시간으로 변환합니다.</summary>
      <returns>원래 <see cref="T:System.DateTimeOffset" /> 개체와 같지만, 즉 해당 <see cref="M:System.DateTimeOffset.ToUniversalTime" /> 메서드가 동일한 시각을 반환하지만, <see cref="P:System.DateTimeOffset.Offset" /> 속성이 <paramref name="offset" />으로 설정되어 있는 개체입니다.</returns>
      <param name="offset">
        <see cref="T:System.DateTimeOffset" /> 값을 변환할 대상 오프셋입니다.   </param>
      <exception cref="T:System.ArgumentException">결과 <see cref="T:System.DateTimeOffset" /> 개체의 <see cref="P:System.DateTimeOffset.DateTime" /> 값이 <see cref="F:System.DateTimeOffset.MinValue" />보다 이전인 경우또는결과 <see cref="T:System.DateTimeOffset" /> 개체의 <see cref="P:System.DateTimeOffset.DateTime" /> 값이 <see cref="F:System.DateTimeOffset.MaxValue" />보다 나중인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 -14시간보다 작은 경우또는<paramref name="offset" />이 14시간보다 큰 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체의 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>문자열 끝에 추가되는 오프셋을 포함하는 <see cref="T:System.DateTimeOffset" /> 개체의 문자열 표현입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">날짜 및 시간이 현재 문화권에 사용된 달력에서 지원하는 날짜 범위를 벗어났습니다. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 정보를 사용하여 현재 <see cref="T:System.DateTimeOffset" /> 개체의 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>현재 <see cref="T:System.DateTimeOffset" /> 개체의 값을 <paramref name="formatProvider" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">날짜 및 시간이 <paramref name="formatProvider" />에 사용된 달력에서 지원하는 날짜 범위를 벗어나는 경우 </exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString(System.String)">
      <summary>지정된 형식을 사용하여 현재 <see cref="T:System.DateTimeOffset" /> 개체의 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>현재 <see cref="T:System.DateTimeOffset" /> 개체의 값을 <paramref name="format" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="format">서식 문자열입니다.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" />의 길이가 1이고 <see cref="T:System.Globalization.DateTimeFormatInfo" />에 대해 정의된 표준 형식 지정자 문자 중 하나가 아닌 경우 또는<paramref name="format" />에 유효한 사용자 지정 형식 패턴이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">날짜 및 시간이 현재 문화권에 사용된 달력에서 지원하는 날짜 범위를 벗어났습니다. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)">
      <summary>지정된 형식 및 문화권별 형식 정보를 사용하여 현재 <see cref="T:System.DateTimeOffset" /> 개체의 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="format" /> 및 <paramref name="provider" />에서 지정한 대로 현재 <see cref="T:System.DateTimeOffset" /> 개체의 값을 나타내는 문자열 표현입니다.</returns>
      <param name="format">서식 문자열입니다.</param>
      <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" />의 길이가 1이고 <see cref="T:System.Globalization.DateTimeFormatInfo" />에 대해 정의된 표준 형식 지정자 문자 중 하나가 아닌 경우또는<paramref name="format" />에 유효한 사용자 지정 형식 패턴이 들어 있지 않은 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">날짜 및 시간이 <paramref name="formatProvider" />에 사용된 달력에서 지원하는 날짜 범위를 벗어나는 경우 </exception>
    </member>
    <member name="M:System.DateTimeOffset.ToUniversalTime">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체를 UTC(협정 세계시)를 나타내는 <see cref="T:System.DateTimeOffset" /> 값으로 변환합니다.</summary>
      <returns>UTC(협정 세계시)로 변환된 현재 <see cref="T:System.DateTimeOffset" /> 개체의 날짜와 시간을 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.DateTimeOffset.ToUnixTimeMilliseconds">
      <summary>1970 년 이후 경과 된 시간 (밀리초)의 수를 반환 합니다.-01-01T00:00:00.000Z 합니다. </summary>
      <returns>1970 년 이후 경과 된 시간을 밀리초 단위로-01-01T00:00:00.000Z 합니다. </returns>
    </member>
    <member name="M:System.DateTimeOffset.ToUnixTimeSeconds">
      <summary>1970 년 이후 경과 된 초 수를 반환 합니다.-01-01T00:00:00Z 합니다. </summary>
      <returns>1970 년 이후 경과 된 시간을 초 단위로-01-01T00:00:00Z 합니다. </returns>
    </member>
    <member name="M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)">
      <summary>날짜와 시간에 대한 지정된 문자열 표현을 해당 <see cref="T:System.DateTimeOffset" />으로 변환하고, 변환에 성공했는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="input" /> 매개 변수가 성공적으로 변환되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="input">변환할 날짜 및 시간이 포함된 문자열입니다.</param>
      <param name="result">메서드가 반환될 때 변환이 성공한 경우 <paramref name="input" />의 날짜와 시간에 해당하는 <see cref="T:System.DateTimeOffset" />이 들어 있거나, 변환이 실패한 경우 <see cref="F:System.DateTimeOffset.MinValue" />가 들어 있습니다.<paramref name="input" /> 매개 변수가 null이거나 날짜 및 시간에 대한 유효한 문자열 표현을 포함하고 있지 않으면 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
    </member>
    <member name="M:System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
      <summary>날짜와 시간에 대한 지정된 문자열 표현을 해당 <see cref="T:System.DateTimeOffset" />으로 변환하고, 변환에 성공했는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="input" /> 매개 변수가 성공적으로 변환되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="input">변환할 날짜 및 시간이 포함된 문자열입니다.</param>
      <param name="formatProvider">
        <paramref name="input" />에 대한 문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <param name="styles">
        <paramref name="input" />에 사용할 수 있는 형식을 나타내는 열거형 값의 비트 조합입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="input" />의 날짜와 시간에 해당하는 <see cref="T:System.DateTimeOffset" /> 값을 반환하고, 변환이 실패한 경우 <see cref="F:System.DateTimeOffset.MinValue" />를 반환합니다.<paramref name="input" /> 매개 변수가 null이거나 날짜 및 시간에 대한 유효한 문자열 표현을 포함하고 있지 않으면 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" />에 정의되지 않은 <see cref="T:System.Globalization.DateTimeStyles" /> 값이 포함된 경우또는<see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" />이 지원되지 않는 경우또는<paramref name="styles" />에 함께 사용할 수 없는 <see cref="T:System.Globalization.DateTimeStyles" /> 값이 포함된 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
      <summary>지정된 형식, 문화권별 형식 정보 및 스타일을 사용하여 날짜 및 시간의 지정된 문자열 표현을 해당 <see cref="T:System.DateTimeOffset" />으로 변환합니다.문자열 표현의 형식이 지정된 형식과 정확하게 일치해야 합니다.</summary>
      <returns>
        <paramref name="input" /> 매개 변수가 성공적으로 변환되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="input">변환할 날짜 및 시간이 포함된 문자열입니다.</param>
      <param name="format">
        <paramref name="input" />의 필수 형식을 정의하는 형식 지정자입니다.</param>
      <param name="formatProvider">
        <paramref name="input" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다.</param>
      <param name="styles">input에 사용할 수 있는 형식을 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 None입니다.</param>
      <param name="result">메서드가 반환될 때 변환이 성공한 경우 <paramref name="input" />의 날짜와 시간에 해당하는 <see cref="T:System.DateTimeOffset" />이 들어 있거나, 변환이 실패한 경우 <see cref="F:System.DateTimeOffset.MinValue" />가 들어 있습니다.<paramref name="input" /> 매개 변수가 null이거나 <paramref name="format" /> 및 <paramref name="provider" />에 정의된 예상 형식에 따라 날짜와 시간을 나타내는 유효한 문자열 표현을 포함하고 있지 않으면 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" />에 정의되지 않은 <see cref="T:System.Globalization.DateTimeStyles" /> 값이 포함된 경우또는<see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" />이 지원되지 않는 경우또는<paramref name="styles" />에 함께 사용할 수 없는 <see cref="T:System.Globalization.DateTimeStyles" /> 값이 포함된 경우</exception>
    </member>
    <member name="M:System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
      <summary>지정된 형식 배열, 문화권별 형식 정보 및 스타일을 사용하여 지정된 날짜와 시간의 문자열 표현을 해당 <see cref="T:System.DateTimeOffset" /> 표현으로 변환합니다.문자열 표시의 형식은 지정된 형식 중 하나와 정확히 일치해야 합니다.</summary>
      <returns>
        <paramref name="input" /> 매개 변수가 성공적으로 변환되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="input">변환할 날짜 및 시간이 포함된 문자열입니다.</param>
      <param name="formats">
        <paramref name="input" />의 예상 형식을 정의하는 배열입니다.</param>
      <param name="formatProvider">
        <paramref name="input" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다.</param>
      <param name="styles">input에 사용할 수 있는 형식을 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 None입니다.</param>
      <param name="result">메서드가 반환될 때 변환이 성공한 경우 <paramref name="input" />의 날짜와 시간에 해당하는 <see cref="T:System.DateTimeOffset" />이 들어 있거나, 변환이 실패한 경우 <see cref="F:System.DateTimeOffset.MinValue" />가 들어 있습니다.<paramref name="input" />에 날짜 및 시간의 유효한 문자열 표현이 포함되어 있지 않거나 <paramref name="format" />에 정의된 예상 형식에 따른 날짜 및 시간이 포함되어 있지 않거나 <paramref name="formats" />가 null이면 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" />에 정의되지 않은 <see cref="T:System.Globalization.DateTimeStyles" /> 값이 포함된 경우또는<see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" />이 지원되지 않는 경우또는<paramref name="styles" />에 함께 사용할 수 없는 <see cref="T:System.Globalization.DateTimeStyles" /> 값이 포함된 경우</exception>
    </member>
    <member name="P:System.DateTimeOffset.UtcDateTime">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체의 UTC(협정 세계시) 날짜와 시간을 나타내는 <see cref="T:System.DateTime" />값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.DateTimeOffset" /> 개체의 UTC(협정 세계시) 날짜와 시간입니다.</returns>
    </member>
    <member name="P:System.DateTimeOffset.UtcNow">
      <summary>해당 날짜와 시간이 현재 UTC(협정 세계시) 날짜와 시간으로 설정되어 있고 해당 오프셋이 <see cref="F:System.TimeSpan.Zero" />인 <see cref="T:System.DateTimeOffset" /> 개체를 가져옵니다.</summary>
      <returns>해당 날짜와 시간이 현재 UTC(협정 세계시)이고 해당 오프셋이 <see cref="F:System.TimeSpan.Zero" />인 개체입니다.</returns>
    </member>
    <member name="P:System.DateTimeOffset.UtcTicks">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체의 날짜와 시간을 UTC(협정 세계시)로 표현하는 틱 수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.DateTimeOffset" /> 개체에 대한 UTC(협정 세계시)의 틱 수입니다.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Year">
      <summary>현재 <see cref="T:System.DateTimeOffset" /> 개체가 나타내는 날짜의 연도 구성 요소를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.DateTimeOffset" /> 개체의 연도 구성 요소이며, 0에서 9999 사이의 정수 값으로 표현됩니다.</returns>
    </member>
    <member name="T:System.DayOfWeek">
      <summary>요일을 지정합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.DayOfWeek.Friday">
      <summary>금요일을 나타냅니다.</summary>
    </member>
    <member name="F:System.DayOfWeek.Monday">
      <summary>월요일을 나타냅니다.</summary>
    </member>
    <member name="F:System.DayOfWeek.Saturday">
      <summary>토요일을 나타냅니다.</summary>
    </member>
    <member name="F:System.DayOfWeek.Sunday">
      <summary>일요일을 나타냅니다.</summary>
    </member>
    <member name="F:System.DayOfWeek.Thursday">
      <summary>목요일을 나타냅니다.</summary>
    </member>
    <member name="F:System.DayOfWeek.Tuesday">
      <summary>화요일을 나타냅니다.</summary>
    </member>
    <member name="F:System.DayOfWeek.Wednesday">
      <summary>수요일을 나타냅니다.</summary>
    </member>
    <member name="T:System.Decimal">
      <summary>10진수를 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.#ctor(System.Double)">
      <summary>
        <see cref="T:System.Decimal" />의 새 인스턴스를 지정된 배정밀도 부동 소수점 숫자의 값으로 초기화합니다.</summary>
      <param name="value">
        <see cref="T:System.Decimal" />로 나타낼 값입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.-or- <paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32)">
      <summary>
        <see cref="T:System.Decimal" />의 새 인스턴스를 지정된 32비트 부호 있는 정수 값으로 초기화합니다.</summary>
      <param name="value">
        <see cref="T:System.Decimal" />로 나타낼 값입니다. </param>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
      <summary>인스턴스의 구성 부분을 지정하는 매개 변수에서 <see cref="T:System.Decimal" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="lo">96비트 정수의 하위 32비트입니다. </param>
      <param name="mid">96비트 정수의 중간 32비트입니다. </param>
      <param name="hi">96비트 정수의 상위 32비트입니다. </param>
      <param name="isNegative">음수를 나타내려면 true이고, 양수를 나타내려면 false입니다. </param>
      <param name="scale">10의 거듭제곱(범위: 0~28)입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scale" /> is greater than 28. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32[])">
      <summary>
        <see cref="T:System.Decimal" />의 새 인스턴스를 이진으로 표현되며 지정한 배열에 포함된 10진 값으로 초기화합니다.</summary>
      <param name="bits">10진 값 표현을 포함하는 32비트 부호 있는 정수 배열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bits" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The length of the <paramref name="bits" /> is not 4.-or- The representation of the decimal value in <paramref name="bits" /> is not valid. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int64)">
      <summary>
        <see cref="T:System.Decimal" />의 새 인스턴스를 지정된 64비트 부호 있는 정수 값으로 초기화합니다.</summary>
      <param name="value">
        <see cref="T:System.Decimal" />로 나타낼 값입니다. </param>
    </member>
    <member name="M:System.Decimal.#ctor(System.Single)">
      <summary>
        <see cref="T:System.Decimal" />의 새 인스턴스를 지정된 단정밀도 부동 소수점 숫자의 값으로 초기화합니다.</summary>
      <param name="value">
        <see cref="T:System.Decimal" />로 나타낼 값입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.-or- <paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.UInt32)">
      <summary>
        <see cref="T:System.Decimal" />의 새 인스턴스를 지정된 32비트 부호 없는 정수 값으로 초기화합니다.</summary>
      <param name="value">
        <see cref="T:System.Decimal" />로 나타낼 값입니다. </param>
    </member>
    <member name="M:System.Decimal.#ctor(System.UInt64)">
      <summary>
        <see cref="T:System.Decimal" />의 새 인스턴스를 지정된 64비트 부호 없는 정수 값으로 초기화합니다.</summary>
      <param name="value">
        <see cref="T:System.Decimal" />로 나타낼 값입니다. </param>
    </member>
    <member name="M:System.Decimal.Add(System.Decimal,System.Decimal)">
      <summary>지정된 두 <see cref="T:System.Decimal" /> 값을 더합니다.</summary>
      <returns>
        <paramref name="d1" />와 <paramref name="d2" />의 합입니다.</returns>
      <param name="d1">더할 첫 번째 값입니다. </param>
      <param name="d2">더할 두 번째 값입니다. </param>
      <exception cref="T:System.OverflowException">The sum of <paramref name="d1" /> and <paramref name="d2" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Ceiling(System.Decimal)">
      <summary>지정된 10진수보다 크거나 같은 최소 정수 값을 반환합니다.</summary>
      <returns>
        <paramref name="d" /> 매개 변수보다 크거나 같은 최소 정수 값입니다.이 메서드는 정수 계열 형식이 아니라 <see cref="T:System.Decimal" />을 반환합니다.</returns>
      <param name="d">10진수입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
      <summary>지정된 두 <see cref="T:System.Decimal" /> 값을 비교합니다.</summary>
      <returns>
        <paramref name="d1" />과 <paramref name="d2" />의 상대 값을 나타내는 부호 있는 숫자입니다.Return value Meaning Less than zero <paramref name="d1" /> is less than <paramref name="d2" />. Zero <paramref name="d1" /> and <paramref name="d2" /> are equal. Greater than zero <paramref name="d1" /> is greater than <paramref name="d2" />. </returns>
      <param name="d1">비교할 첫 번째 값입니다. </param>
      <param name="d2">비교할 두 번째 값입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.CompareTo(System.Decimal)">
      <summary>이 인스턴스를 지정된 <see cref="T:System.Decimal" /> 개체와 비교하여 상대 값의 비교를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.Return value Meaning Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">이 인스턴스와 비교할 개체입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
      <summary>지정된 두 <see cref="T:System.Decimal" /> 값을 나눕니다.</summary>
      <returns>
        <paramref name="d1" />를 <paramref name="d2" />로 나눈 결과입니다.</returns>
      <param name="d1">피제수입니다. </param>
      <param name="d2">제수입니다. </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value (that is, the quotient) is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Equals(System.Decimal)">
      <summary>이 인스턴스의 값과 지정된 <see cref="T:System.Decimal" /> 개체의 값이 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 이 인스턴스와 같으면 <paramref name="value" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">이 인스턴스와 비교할 개체입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.Equals(System.Decimal,System.Decimal)">
      <summary>지정된 두 개의 <see cref="T:System.Decimal" /> 인스턴스가 같은 값을 표시하는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>true과 <paramref name="d1" />가 같으면 <paramref name="d2" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="d1">비교할 첫 번째 값입니다. </param>
      <param name="d2">비교할 두 번째 값입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Equals(System.Object)">
      <summary>이 인스턴스와 지정된 <see cref="T:System.Object" />가 같은 형식과 값을 표시하는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="value" />가 <see cref="T:System.Decimal" />이고 이 인스턴스와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">이 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.Floor(System.Decimal)">
      <summary>지정된 <see cref="T:System.Decimal" /> 수를 음의 무한대에 가장 가까운 정수로 반올림합니다.</summary>
      <returns>
        <paramref name="d" />에 소수 부분이 있으면 다음 정수 <see cref="T:System.Decimal" />은 <paramref name="d" />보다 작은 음의 무한대로 반올림됩니다.또는 <paramref name="d" />에 소수 부분이 없으면 <paramref name="d" />는 변경되지 않은 상태로 반환됩니다.메서드는 형식 <see cref="T:System.Decimal" />의 정수 값을 반환합니다.</returns>
      <param name="d">반올림할 값입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.GetBits(System.Decimal)">
      <summary>
        <see cref="T:System.Decimal" />의 지정된 인스턴스 값을 해당하는 이진 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="d" />의 이진 표현을 포함하는 네 개의 요소로 이루어진 32비트 부호 있는 정수 배열입니다.</returns>
      <param name="d">변환할 값입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Decimal.MaxValue">
      <summary>
        <see cref="T:System.Decimal" />의 최대값을 나타냅니다.이 필드는 상수이며 읽기 전용입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.MinusOne">
      <summary>음수 1(-1)을 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.MinValue">
      <summary>
        <see cref="T:System.Decimal" />의 최소값을 나타냅니다.이 필드는 상수이며 읽기 전용입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
      <summary>지정된 두 <see cref="T:System.Decimal" /> 값을 곱합니다.</summary>
      <returns>
        <paramref name="d1" />와 <paramref name="d2" />를 곱한 결과입니다.</returns>
      <param name="d1">피승수입니다. </param>
      <param name="d2">승수입니다. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Negate(System.Decimal)">
      <summary>지정된 <see cref="T:System.Decimal" /> 값과 음수 1을 곱한 결과를 반환합니다.</summary>
      <returns>
        <paramref name="d" />와 값은 같지만 부호가 반대인 10진수입니다.또는 <paramref name="d" />가 0이면 0입니다.</returns>
      <param name="d">부정할 값입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.One">
      <summary>숫자 1을 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
      <summary>지정된 두 <see cref="T:System.Decimal" /> 값을 더합니다.</summary>
      <returns>
        <paramref name="d1" />과 <paramref name="d2" />를 더한 결과입니다.</returns>
      <param name="d1">더할 첫 번째 값입니다. </param>
      <param name="d2">더할 두 번째 값입니다. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Decrement(System.Decimal)">
      <summary>
        <see cref="T:System.Decimal" /> 피연산자를 1씩 감소시킵니다.</summary>
      <returns>1씩 감소된 <paramref name="d" />의 값입니다.</returns>
      <param name="d">감소시킬 값입니다. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
      <summary>지정된 두 <see cref="T:System.Decimal" /> 값을 나눕니다.</summary>
      <returns>
        <paramref name="d1" />를 <paramref name="d2" />로 나눈 결과입니다.</returns>
      <param name="d1">피제수입니다. </param>
      <param name="d2">제수입니다. </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
      <summary>두 <see cref="T:System.Decimal" /> 값이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>true과 <paramref name="d1" />가 같으면 <paramref name="d2" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="d1">비교할 첫 번째 값입니다. </param>
      <param name="d2">비교할 두 번째 값입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
      <summary>
        <see cref="T:System.Decimal" />을 8비트 부호 있는 정수로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 <see cref="T:System.Decimal" />을 나타내는 8비트 부호 있는 정수입니다.</returns>
      <param name="value">변환할 값입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
      <summary>
        <see cref="T:System.Decimal" />을 64비트 부호 있는 정수로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 <see cref="T:System.Decimal" />을 나타내는 64비트 부호 있는 정수입니다.</returns>
      <param name="value">변환할 값입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
      <summary>
        <see cref="T:System.Decimal" />을 16비트 부호 없는 정수로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 <see cref="T:System.Decimal" />을 나타내는 16비트 부호 없는 정수입니다.</returns>
      <param name="value">변환할 값입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
      <summary>
        <see cref="T:System.Decimal" />을 64비트 부호 없는 정수로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 <see cref="T:System.Decimal" />을 나타내는 64비트 부호 없는 정수입니다.</returns>
      <param name="value">변환할 값입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
      <summary>
        <see cref="T:System.Decimal" />을 32비트 부호 없는 정수로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 <see cref="T:System.Decimal" />을 나타내는 32비트 부호 없는 정수입니다.</returns>
      <param name="value">변환할 값입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is negative or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
      <summary>
        <see cref="T:System.Decimal" />을 32비트 부호 있는 정수로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 <see cref="T:System.Decimal" />을 나타내는 32비트 부호 있는 정수입니다.</returns>
      <param name="value">변환할 값입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
      <summary>
        <see cref="T:System.Decimal" />을 유니코드 문자로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 <see cref="T:System.Decimal" />을 나타내는 유니코드 문자입니다.</returns>
      <param name="value">변환할 값입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
      <summary>
        <see cref="T:System.Decimal" />을 8비트 부호 없는 정수로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 <see cref="T:System.Decimal" />을 나타내는 8비트 부호 없는 정수입니다.</returns>
      <param name="value">변환할 값입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
      <summary>
        <see cref="T:System.Decimal" />을 단정밀도 부동 소수점 숫자로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 <see cref="T:System.Decimal" />을 나타내는 단정밀도 부동 소수점 숫자입니다.</returns>
      <param name="value">변환할 값입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
      <summary>
        <see cref="T:System.Decimal" />을 16비트 부호 있는 정수로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 <see cref="T:System.Decimal" />을 나타내는 16비트 부호 있는 정수입니다.</returns>
      <param name="value">변환할 값입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
      <summary>
        <see cref="T:System.Decimal" />을 배정밀도 부동 소수점 숫자로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 <see cref="T:System.Decimal" />을 나타내는 배정밀도 부동 소수점 숫자입니다.</returns>
      <param name="value">변환할 값입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
      <summary>배정밀도 부동 소수점 숫자를 <see cref="T:System.Decimal" />로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 배정밀도 부동 소수점 숫자입니다.</returns>
      <param name="value">변환할 배정밀도 부동 소수점 숫자입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.-or- <paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
      <summary>단정밀도 부동 소수점 숫자를 <see cref="T:System.Decimal" />로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 단정밀도 부동 소수점 숫자입니다.</returns>
      <param name="value">변환할 단정밀도 부동 소수점 숫자입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.-or- <paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
      <summary>지정된 <see cref="T:System.Decimal" />이 지정된 다른 <see cref="T:System.Decimal" />보다 큰지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>true이 <paramref name="d1" />보다 크면 <paramref name="d2" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="d1">비교할 첫 번째 값입니다. </param>
      <param name="d2">비교할 두 번째 값입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
      <summary>지정된 <see cref="T:System.Decimal" />이 지정된 다른 <see cref="T:System.Decimal" />보다 크거나 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="d1" />가 <paramref name="d2" />보다 크거나 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="d1">비교할 첫 번째 값입니다. </param>
      <param name="d2">비교할 두 번째 값입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
      <summary>8비트 부호 없는 정수를 <see cref="T:System.Decimal" />로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 8비트 부호 없는 정수입니다.</returns>
      <param name="value">변환할 8비트 부호 없는 정수입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
      <summary>유니코드 문자를 <see cref="T:System.Decimal" />로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 유니코드 문자입니다.</returns>
      <param name="value">변환할 유니코드 문자입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
      <summary>16비트 부호 있는 정수를 <see cref="T:System.Decimal" />로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 16비트 부호 있는 정수입니다.</returns>
      <param name="value">변환할 16비트 부호 있는 정수입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
      <summary>32비트 부호 있는 정수를 <see cref="T:System.Decimal" />로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 32비트 부호 있는 정수입니다.</returns>
      <param name="value">변환할 32비트 부호 있는 정수입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
      <summary>64비트 부호 있는 정수를 <see cref="T:System.Decimal" />로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 64비트 부호 있는 정수입니다.</returns>
      <param name="value">변환할 64비트 부호 있는 정수입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
      <summary>8비트 부호 있는 정수를 <see cref="T:System.Decimal" />로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 8비트 부호 있는 정수입니다.</returns>
      <param name="value">변환할 8비트 부호 있는 정수입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
      <summary>16비트 부호 없는 정수를 <see cref="T:System.Decimal" />로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 16비트 부호 없는 정수입니다.</returns>
      <param name="value">변환할 16비트 부호 없는 정수입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
      <summary>32비트 부호 없는 정수를 <see cref="T:System.Decimal" />로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 32비트 부호 없는 정수입니다.</returns>
      <param name="value">변환할 32비트 부호 없는 정수입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
      <summary>64비트 부호 없는 정수를 <see cref="T:System.Decimal" />로 변환하는 명시적 변환을 정의합니다.</summary>
      <returns>변환된 64비트 부호 없는 정수입니다.</returns>
      <param name="value">변환할 64비트 부호 없는 정수입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Increment(System.Decimal)">
      <summary>
        <see cref="T:System.Decimal" /> 피연산자를 1씩 증가시킵니다.</summary>
      <returns>1씩 증가된 <paramref name="d" />의 값입니다.</returns>
      <param name="d">증가시킬 값입니다. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
      <summary>두 <see cref="T:System.Decimal" /> 개체의 값이 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>true과 <paramref name="d1" />가 같지 않으면 <paramref name="d2" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="d1">비교할 첫 번째 값입니다. </param>
      <param name="d2">비교할 두 번째 값입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
      <summary>지정된 <see cref="T:System.Decimal" />이 지정된 다른 <see cref="T:System.Decimal" />보다 작은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="d1" />가 <paramref name="d2" />보다 작으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="d1">비교할 첫 번째 값입니다. </param>
      <param name="d2">비교할 두 번째 값입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
      <summary>지정된 <see cref="T:System.Decimal" />이 지정된 다른 <see cref="T:System.Decimal" />보다 작거나 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="d1" />가 <paramref name="d2" />보다 작거나 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="d1">비교할 첫 번째 값입니다. </param>
      <param name="d2">비교할 두 번째 값입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
      <summary>지정된 두 <see cref="T:System.Decimal" /> 값을 나눈 나머지를 반환합니다.</summary>
      <returns>
        <paramref name="d1" />을 <paramref name="d2" />로 나눈 나머지입니다.</returns>
      <param name="d1">피제수입니다. </param>
      <param name="d2">제수입니다. </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
      <summary>지정된 두 <see cref="T:System.Decimal" /> 값을 곱합니다.</summary>
      <returns>
        <paramref name="d1" />에 <paramref name="d2" />를 곱한 결과입니다.</returns>
      <param name="d1">곱할 첫 번째 값입니다. </param>
      <param name="d2">곱할 두 번째 값입니다. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
      <summary>지정된 두 <see cref="T:System.Decimal" /> 값을 뺍니다.</summary>
      <returns>
        <paramref name="d1" />에서 <paramref name="d2" />를 뺀 결과입니다.</returns>
      <param name="d1">피감수입니다. </param>
      <param name="d2">감수입니다. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_UnaryNegation(System.Decimal)">
      <summary>지정된 <see cref="T:System.Decimal" /> 피연산자 값의 부정입니다.</summary>
      <returns>
        <paramref name="d" />에 -1을 곱한 결과입니다.</returns>
      <param name="d">부정할 값입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_UnaryPlus(System.Decimal)">
      <summary>
        <see cref="T:System.Decimal" /> 피연산자의 값을 반환합니다(피연산자의 부호는 변경되지 않음).</summary>
      <returns>피연산자 <paramref name="d" />의 값입니다.</returns>
      <param name="d">반환할 피연산자입니다.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String)">
      <summary>숫자의 문자열 표현을 해당하는 <see cref="T:System.Decimal" />로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 포함된 숫자에 해당합니다.</returns>
      <param name="s">변환할 숫자의 문자열 표현입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>숫자를 지정된 스타일로 나타낸 문자열 표현을 해당 <see cref="T:System.Decimal" />로 변환합니다.</summary>
      <returns>
        <paramref name="style" />로 지정된 <paramref name="s" />에 포함된 숫자에 해당하는 <see cref="T:System.Decimal" /> 숫자입니다.</returns>
      <param name="s">변환할 숫자의 문자열 표현입니다. </param>
      <param name="style">
        <paramref name="s" />에 있을 수 있는 스타일 요소를 나타내는 <see cref="T:System.Globalization.NumberStyles" /> 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Number" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>지정된 스타일 및 문화권별 형식을 사용하여 숫자의 문자열 표현을 해당하는 <see cref="T:System.Decimal" />로 변환합니다.</summary>
      <returns>
        <paramref name="style" /> 및 <paramref name="provider" />로 지정된 <paramref name="s" />에 포함된 숫자에 해당하는 <see cref="T:System.Decimal" /> 숫자입니다.</returns>
      <param name="s">변환할 숫자의 문자열 표현입니다. </param>
      <param name="style">
        <paramref name="s" />에 있을 수 있는 스타일 요소를 나타내는 <see cref="T:System.Globalization.NumberStyles" /> 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Number" />입니다.</param>
      <param name="provider">
        <paramref name="s" />의 형식에 대한 문화권별 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 개체입니다. </param>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
      <summary>지정된 문화권별 형식 정보를 사용하여 숫자의 문자열 표현을 해당 <see cref="T:System.Decimal" />로 변환합니다.</summary>
      <returns>
        <paramref name="provider" />로 지정된 <paramref name="s" />에 포함된 숫자에 해당하는 <see cref="T:System.Decimal" /> 숫자입니다.</returns>
      <param name="s">변환할 숫자의 문자열 표현입니다. </param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 구문 분석 정보를 제공하는 <see cref="T:System.IFormatProvider" />입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
      <summary>두 <see cref="T:System.Decimal" /> 값을 나눈 나머지를 계산합니다.</summary>
      <returns>
        <paramref name="d1" />를 <paramref name="d2" />로 나눈 나머지입니다.</returns>
      <param name="d1">피제수입니다. </param>
      <param name="d2">제수입니다. </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
      <summary>다른 값에서 지정된 <see cref="T:System.Decimal" /> 값을 뺍니다.</summary>
      <returns>
        <paramref name="d1" />에서 <paramref name="d2" />를 뺀 결과입니다.</returns>
      <param name="d1">피감수입니다. </param>
      <param name="d2">감수입니다. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.System#IComparable#CompareTo(System.Object)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 순서를 나타내는 부호 있는 정수입니다.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Decimal" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 인스턴스의 값이 0이 아니면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다. </param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>
        <see cref="T:System.Byte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>없음이 변환은 지원되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>없음이 변환은 지원되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>변경되지 않은 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>
        <see cref="T:System.Double" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>
        <see cref="T:System.Int16" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>
        <see cref="T:System.Int32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>
        <see cref="T:System.Int64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>
        <see cref="T:System.SByte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>
        <see cref="T:System.Single" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>
        <paramref name="type" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="type">이 <see cref="T:System.Decimal" /> 인스턴스의 값을 변환할 대상 형식입니다. </param>
      <param name="provider">반환된 값의 형식에 대한 문화권별 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 구현입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null. </exception>
      <exception cref="T:System.InvalidCastException">The requested type conversion is not supported. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>
        <see cref="T:System.UInt16" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>
        <see cref="T:System.UInt32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>
        <see cref="T:System.UInt64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.ToByte(System.Decimal)">
      <summary>지정된 <see cref="T:System.Decimal" />의 값을 해당하는 8비트 부호 없는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="value" />에 해당하는 8비트 부호 없는 정수입니다.</returns>
      <param name="value">변환할 10진수입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToDouble(System.Decimal)">
      <summary>지정된 <see cref="T:System.Decimal" />의 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.</summary>
      <returns>
        <paramref name="d" />와 값이 같은 배정밀도 부동 소수점 숫자입니다.</returns>
      <param name="d">변환할 10진수입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToInt16(System.Decimal)">
      <summary>지정된 <see cref="T:System.Decimal" />의 값을 해당하는 16비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="value" />에 해당하는 16비트 부호 있는 정수입니다.</returns>
      <param name="value">변환할 10진수입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToInt32(System.Decimal)">
      <summary>지정된 <see cref="T:System.Decimal" />의 값을 해당하는 32비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="d" />의 값에 해당하는 32비트 부호 있는 정수입니다.</returns>
      <param name="d">변환할 10진수입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToInt64(System.Decimal)">
      <summary>지정된 <see cref="T:System.Decimal" />의 값을 해당하는 64비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="d" />의 값에 해당하는 64비트의 부호 있는 정수입니다.</returns>
      <param name="d">변환할 10진수입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToSByte(System.Decimal)">
      <summary>지정된 <see cref="T:System.Decimal" />의 값을 해당하는 8비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="value" />에 해당하는 8비트 부호 있는 정수입니다.</returns>
      <param name="value">변환할 10진수입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToSingle(System.Decimal)">
      <summary>지정된 <see cref="T:System.Decimal" />의 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</summary>
      <returns>
        <paramref name="d" />의 값에 해당하는 단정밀도 부동 소수점 숫자입니다.</returns>
      <param name="d">변환할 10진수입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString">
      <summary>이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값을 나타내는 문자열입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값을 <paramref name="provider" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString(System.String)">
      <summary>지정된 형식을 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값을 <paramref name="format" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="format">표준 또는 사용자 지정 숫자 형식 문자열입니다(설명 부분 참조).</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
      <summary>지정된 형식 및 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="format" /> 및 <paramref name="provider" />로 지정된 이 인스턴스 값의 문자열 표현입니다.</returns>
      <param name="format">숫자 서식 문자열입니다(설명 참조).</param>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToUInt16(System.Decimal)">
      <summary>지정된 <see cref="T:System.Decimal" />의 값을 해당하는 16비트 부호 없는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="value" />의 값에 해당하는 16비트 부호 없는 정수입니다.</returns>
      <param name="value">변환할 10진수입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToUInt32(System.Decimal)">
      <summary>지정된 <see cref="T:System.Decimal" />의 값을 해당하는 32비트 부호 없는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="d" />의 값에 해당하는 32비트 부호 없는 정수입니다.</returns>
      <param name="d">변환할 10진수입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is negative or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToUInt64(System.Decimal)">
      <summary>지정된 <see cref="T:System.Decimal" />의 값을 해당하는 64비트 부호 없는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="d" />의 값에 해당하는 64비트 부호 없는 정수입니다.</returns>
      <param name="d">변환할 10진수입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Truncate(System.Decimal)">
      <summary>소수 자리를 삭제하고 지정된 <see cref="T:System.Decimal" />의 정수 자리만 반환합니다.</summary>
      <returns>0에 가까운 가장 근사한 정수로 반올림된 <paramref name="d" />의 결과입니다.</returns>
      <param name="d">잘라낼 10진수입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.TryParse(System.String,System.Decimal@)">
      <summary>숫자의 문자열 표현을 해당하는 <see cref="T:System.Decimal" />로 변환합니다.반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자의 문자열 표현입니다.</param>
      <param name="result">이 메서드가 반환될 때 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자 값에 해당하는 <see cref="T:System.Decimal" /> 숫자가 들어 있거나, 변환이 실패한 경우 0입니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나 올바른 형식의 숫자가 아니거나, <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
      <summary>지정된 스타일 및 문화권별 형식을 사용하여 숫자의 문자열 표현을 해당하는 <see cref="T:System.Decimal" />로 변환합니다.반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자의 문자열 표현입니다.</param>
      <param name="style">
        <paramref name="s" />에 사용할 수 있는 형식을 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Number" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 구문 분석 정보를 제공하는 개체입니다. </param>
      <param name="result">이 메서드가 반환될 때 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자 값에 해당하는 <see cref="T:System.Decimal" /> 숫자가 들어 있거나, 변환이 실패한 경우 0입니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, 형식이 <paramref name="style" />과 호환되지 않거나, <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.Zero">
      <summary>숫자 0을 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Delegate">
      <summary>대리자는 정적 메서드 또는 클래스 인스턴스 및 해당 클래스의 인스턴스 메서드를 참조하는 데이터 구조입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.Combine(System.Delegate,System.Delegate)">
      <summary>두 대리자의 호출 목록을 연결합니다.</summary>
      <returns>호출 목록 <paramref name="a" />와 <paramref name="b" />를 순서대로 연결하는 호출 목록을 가진 새 대리자입니다.<paramref name="b" />가 null이면 <paramref name="a" />를 반환하고, <paramref name="a" />가 null 참조이면 <paramref name="b" />를 반환하며, <paramref name="a" />와 <paramref name="b" />가 모두 null 참조이면 null 참조를 반환합니다.</returns>
      <param name="a">해당 호출 목록이 처음에 나오는 대리자입니다. </param>
      <param name="b">해당 호출 목록이 마지막에 나오는 대리자입니다. </param>
      <exception cref="T:System.ArgumentException">Both <paramref name="a" /> and <paramref name="b" /> are not null, and <paramref name="a" /> and <paramref name="b" /> are not instances of the same delegate type. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.Combine(System.Delegate[])">
      <summary>대리자 배열의 호출 목록을 연결합니다.</summary>
      <returns>
        <paramref name="delegates" /> 배열 대리자의 호출 목록을 연결하는 호출 목록을 가진 새 대리자입니다.<paramref name="delegates" />가 null이거나 <paramref name="delegates" />에 요소가 없거나 <paramref name="delegates" />의 모든 항목이 null인 경우 null을 반환합니다.</returns>
      <param name="delegates">결합할 대리자의 배열입니다. </param>
      <exception cref="T:System.ArgumentException">Not all the non-null entries in <paramref name="delegates" /> are instances of the same delegate type. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.DynamicInvoke(System.Object[])">
      <summary>현재 대리자가 나타내는 메서드를 동적으로 호출(런타임에 바인딩)합니다.</summary>
      <returns>대리자가 나타내는 메서드에서 반환되는 개체입니다.</returns>
      <param name="args">현재 대리자가 나타내는 메서드로 전달할 인수인 개체의 배열입니다.또는 
              현재 대리자가 나타내는 메서드에 인수가 필요하지 않으면 null입니다. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private).-or- The number, order, or type of parameters listed in <paramref name="args" /> is invalid. </exception>
      <exception cref="T:System.ArgumentException">The method represented by the delegate is invoked on an object or a class that does not support it. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The method represented by the delegate is an instance method and the target object is null.-or- One of the encapsulated methods throws an exception. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.Equals(System.Object)">
      <summary>지정한 개체와 현재 대리자가 같은 형식이고 같은 대상, 메서드 및 호출 목록을 공유하는지를 확인합니다.</summary>
      <returns>
        <paramref name="obj" />와 현재 대리자가 같은 대상, 메서드 및 호출 목록을 가지면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">현재 대리자와 비교할 개체입니다. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private). </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.GetHashCode">
      <summary>대리자의 해시 코드를 반환합니다.</summary>
      <returns>대리자의 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.GetInvocationList">
      <summary>대리자의 호출 목록을 반환합니다.</summary>
      <returns>현재 대리자의 호출 목록을 나타내는 대리자의 배열입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.op_Equality(System.Delegate,System.Delegate)">
      <summary>지정된 대리자가 같은지를 확인합니다.</summary>
      <returns>
        <paramref name="d1" />이 <paramref name="d2" />와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="d1">비교할 첫째 대리자입니다. </param>
      <param name="d2">비교할 둘째 대리자입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Delegate.op_Inequality(System.Delegate,System.Delegate)">
      <summary>지정된 대리자가 다른지를 확인합니다.</summary>
      <returns>
        <paramref name="d1" />이 <paramref name="d2" />와 다르면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="d1">비교할 첫째 대리자입니다. </param>
      <param name="d2">비교할 둘째 대리자입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Delegate.Remove(System.Delegate,System.Delegate)">
      <summary>한 대리자의 호출 목록에 있는 마지막 항목을 다른 대리자의 호출 목록에서 제거합니다.</summary>
      <returns>
        <paramref name="value" />의 호출 목록이 <paramref name="source" />의 호출 목록에 있는 경우, <paramref name="source" />의 호출 목록을 가져오고 <paramref name="value" />의 호출 목록에 있는 마지막 항목을 제거해서 만들어진 호출 목록을 가진 새로운 대리자입니다.<paramref name="value" />가 null이거나 <paramref name="value" />의 호출 목록이 <paramref name="source" />의 호출 목록에 없는 경우 <paramref name="source" />를 반환합니다.<paramref name="value" />의 호출 목록이 <paramref name="source" />의 호출 목록과 같거나 <paramref name="source" />가 null 참조인 경우 null 참조를 반환합니다.</returns>
      <param name="source">
        <paramref name="value" />의 호출 목록을 제거하는 대리자입니다. </param>
      <param name="value">
        <paramref name="source" />의 호출 목록에서 제거할 호출 목록을 제공하는 대리자입니다. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private). </exception>
      <exception cref="T:System.ArgumentException">The delegate types do not match.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.RemoveAll(System.Delegate,System.Delegate)">
      <summary>한 대리자의 호출 목록에 있는 모든 항목을 다른 대리자의 호출 목록에서 제거합니다.</summary>
      <returns>
        <paramref name="value" />의 호출 목록이 <paramref name="source" />의 호출 목록에 있는 경우, <paramref name="source" />의 호출 목록을 가져오고 <paramref name="value" />의 호출 목록에 있는 모든 항목을 제거해서 만들어진 호출 목록을 가진 새로운 대리자입니다.<paramref name="value" />가 null이거나 <paramref name="value" />의 호출 목록이 <paramref name="source" />의 호출 목록에 없는 경우 <paramref name="source" />를 반환합니다.<paramref name="value" />의 호출 목록이 <paramref name="source" />의 호출 목록과 같거나 <paramref name="source" />에 <paramref name="value" />의 호출 목록과 같은 일련의 호출 목록만 있거나 <paramref name="source" />가 null 참조인 경우 null 참조를 반환합니다.</returns>
      <param name="source">
        <paramref name="value" />의 호출 목록을 제거하는 대리자입니다. </param>
      <param name="value">
        <paramref name="source" />의 호출 목록에서 제거할 호출 목록을 제공하는 대리자입니다. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private). </exception>
      <exception cref="T:System.ArgumentException">The delegate types do not match.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Delegate.Target">
      <summary>현재 대리자가 인스턴스 메서드를 호출하는 클래스 인스턴스를 가져옵니다.</summary>
      <returns>대리자가 인스턴스 메서드를 나타내는 경우 현재 대리자가 인스턴스 메서드를 호출하는 개체이고, 대리자가 정적 메서드를 나타내는 경우 null입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.DivideByZeroException">
      <summary>정수 값 또는 소수 값을 0으로 나누려고 할 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DivideByZeroException.#ctor">
      <summary>
        <see cref="T:System.DivideByZeroException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.DivideByZeroException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.DivideByZeroException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다. </param>
    </member>
    <member name="M:System.DivideByZeroException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.DivideByZeroException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.Double">
      <summary>배정밀도 부동 소수점 숫자를 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.CompareTo(System.Double)">
      <summary>이 인스턴스를 지정된 배정밀도 부동 소수점 숫자와 비교하고 이 인스턴스의 값이 지정된 배정밀도 부동 소수점 숫자 값보다 작은지, 같은지 또는 큰지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.Return Value Description Less than zero This instance is less than <paramref name="value" />.-or- This instance is not a number (<see cref="F:System.Double.NaN" />) and <paramref name="value" /> is a number. Zero This instance is equal to <paramref name="value" />.-or- Both this instance and <paramref name="value" /> are not a number (<see cref="F:System.Double.NaN" />), <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />. Greater than zero This instance is greater than <paramref name="value" />.-or- This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Double.NaN" />). </returns>
      <param name="value">비교할 배정밀도 부동 소수점 숫자입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Double.Epsilon">
      <summary>0보다 큰 양의 최소 <see cref="T:System.Double" /> 값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Equals(System.Double)">
      <summary>이 인스턴스의 값과 지정된 <see cref="T:System.Double" /> 개체의 값이 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 이 인스턴스와 같으면 <paramref name="obj" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 <see cref="T:System.Double" /> 개체입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.Equals(System.Object)">
      <summary>이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 <paramref name="obj" />의 인스턴스이고 이 인스턴스의 값과 같으면 <see cref="T:System.Double" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.IsInfinity(System.Double)">
      <summary>지정된 숫자가 음의 무한대로 계산되는지 양의 무한대로 계산되는지를 나타내는 값을 반환합니다. </summary>
      <returns>
        <paramref name="d" />가 <see cref="F:System.Double.PositiveInfinity" /> 또는 <see cref="F:System.Double.NegativeInfinity" />로 계산되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="d">배정밀도 부동 소수점 숫자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.IsNaN(System.Double)">
      <summary>지정된 값이 숫자가 아닌지(<see cref="F:System.Double.NaN" />) 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="d" />가 <see cref="F:System.Double.NaN" />으로 계산되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="d">배정밀도 부동 소수점 숫자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.IsNegativeInfinity(System.Double)">
      <summary>지정된 숫자가 음의 무한대로 계산되는지를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="d" />가 <see cref="F:System.Double.NegativeInfinity" />으로 계산되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="d">배정밀도 부동 소수점 숫자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.IsPositiveInfinity(System.Double)">
      <summary>지정된 숫자가 양의 무한대로 계산되는지를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="d" />가 <see cref="F:System.Double.PositiveInfinity" />으로 계산되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="d">배정밀도 부동 소수점 숫자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.MaxValue">
      <summary>
        <see cref="T:System.Double" />의 가능한 최대값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.MinValue">
      <summary>
        <see cref="T:System.Double" />의 최소값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.NaN">
      <summary>숫자가 아닌 값을 나타냅니다(NaN).이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.NegativeInfinity">
      <summary>음의 무한대를 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.op_Equality(System.Double,System.Double)">
      <summary>지정된 두 <see cref="T:System.Double" /> 값이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>true과 <paramref name="left" />가 같으면 <paramref name="right" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">비교할 첫 번째 값입니다. </param>
      <param name="right">비교할 두 번째 값입니다.</param>
    </member>
    <member name="M:System.Double.op_GreaterThan(System.Double,System.Double)">
      <summary>지정된 <see cref="T:System.Double" /> 값이 지정된 다른 <see cref="T:System.Double" /> 값보다 큰지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>true이 <paramref name="left" />보다 크면 <paramref name="right" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">비교할 첫 번째 값입니다.</param>
      <param name="right">비교할 두 번째 값입니다.</param>
    </member>
    <member name="M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double)">
      <summary>지정된 <see cref="T:System.Double" /> 값이 지정된 다른 <see cref="T:System.Double" /> 값보다 크거나 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="left" />가 <paramref name="right" />보다 크거나 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">비교할 첫 번째 값입니다.</param>
      <param name="right">비교할 두 번째 값입니다.</param>
    </member>
    <member name="M:System.Double.op_Inequality(System.Double,System.Double)">
      <summary>지정된 두 <see cref="T:System.Double" /> 값이 같지 않은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>true과 <paramref name="left" />가 같지 않으면 <paramref name="right" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">비교할 첫 번째 값입니다.</param>
      <param name="right">비교할 두 번째 값입니다.</param>
    </member>
    <member name="M:System.Double.op_LessThan(System.Double,System.Double)">
      <summary>지정된 <see cref="T:System.Double" /> 값이 지정된 다른 <see cref="T:System.Double" /> 값보다 작은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="left" />가 <paramref name="right" />보다 작으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">비교할 첫 번째 값입니다.</param>
      <param name="right">비교할 두 번째 값입니다.</param>
    </member>
    <member name="M:System.Double.op_LessThanOrEqual(System.Double,System.Double)">
      <summary>지정된 <see cref="T:System.Double" /> 값이 지정된 다른 <see cref="T:System.Double" /> 값보다 작거나 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="left" />가 <paramref name="right" />보다 작거나 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">비교할 첫 번째 값입니다.</param>
      <param name="right">비교할 두 번째 값입니다.</param>
    </member>
    <member name="M:System.Double.Parse(System.String)">
      <summary>숫자의 문자열 표현을 같은 값의 배정밀도 부동 소수점 숫자로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 숫자 값 또는 기호에 해당하는 배정밀도 부동 소수점 숫자입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>지정된 스타일의 숫자에 대한 문자열 표현을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 숫자 값 또는 기호에 해당하는 배정밀도 부동 소수점 숫자입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.AllowThousands" />와 결합되는 <see cref="F:System.Globalization.NumberStyles.Float" />의 조합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>지정된 스타일 및 문화권별 형식의 숫자에 대한 문자열 표현을 같은 값의 배정밀도 부동 소수점 숫자로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 숫자 값 또는 기호에 해당하는 배정밀도 부동 소수점 숫자입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.AllowThousands" />와 결합되는 <see cref="F:System.Globalization.NumberStyles.Float" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a numeric value. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Parse(System.String,System.IFormatProvider)">
      <summary>지정된 문화권별 형식의 숫자에 대한 문자열 표현을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 숫자 값 또는 기호에 해당하는 배정밀도 부동 소수점 숫자입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.PositiveInfinity">
      <summary>양의 무한대를 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.System#IComparable#CompareTo(System.Object)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 순서를 나타내는 부호 있는 정수입니다.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Double" />. </exception>
    </member>
    <member name="M:System.Double.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>현재 인스턴스의 값이 0이 아니면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Byte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 변환은 지원되지 않습니다.값이 반환되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 변환은 지원되지 않습니다.값이 반환되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Decimal" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>변경되지 않은 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int16" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.SByte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Single" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <paramref name="type" />으로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="type">이 <see cref="T:System.Double" /> 값을 변환할 대상 형식입니다.</param>
      <param name="provider">반환된 값의 형식에 대한 문화권별 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 구현입니다.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt16" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다. </param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.   </param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Double.ToString">
      <summary>이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스 값의 문자열 표현입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.ToString(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값을 <paramref name="provider" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.ToString(System.String)">
      <summary>지정된 형식을 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값을 <paramref name="format" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="format">숫자 서식 문자열입니다.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.ToString(System.String,System.IFormatProvider)">
      <summary>지정된 형식 및 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="format" /> 및 <paramref name="provider" />로 지정된 이 인스턴스 값의 문자열 표현입니다.</returns>
      <param name="format">숫자 서식 문자열입니다.</param>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.TryParse(System.String,System.Double@)">
      <summary>숫자의 문자열 표현을 같은 값의 배정밀도 부동 소수점 숫자로 변환합니다.반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" /> 매개 변수의 배정밀도 부동 소수점 숫자를 반환하고 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나 올바른 형식의 숫자가 아니거나, <see cref="F:System.Double.MinValue" />보다 작거나 <see cref="F:System.Double.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
      <summary>지정된 스타일 및 문화권별 형식의 숫자에 대한 문자열 표현을 같은 값의 배정밀도 부동 소수점 숫자로 변환합니다.반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="style">
        <see cref="T:System.Globalization.NumberStyles" />에 사용할 수 있는 형식을 나타내는 <paramref name="s" /> 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.AllowThousands" />와 결합되는 <see cref="F:System.Globalization.NumberStyles.Float" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 서식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" />입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자 값이나 기호의 배정밀도 부동 소수점 숫자를 반환하며 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, <paramref name="style" />과 규격 형식이 아니거나, <see cref="F:System.SByte.MinValue" />보다 작거나 <see cref="F:System.SByte.MaxValue" />보다 큰 숫자를 나타내거나, <paramref name="style" />이 <see cref="T:System.Globalization.NumberStyles" /> 열거형 상수의 유효한 조합이 아닌 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Enum">
      <summary>열거형에 대한 기본 클래스를 제공합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.#ctor">
      <summary>
        <see cref="T:System.Enum" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.Enum.CompareTo(System.Object)">
      <summary>이 인스턴스를 지정된 개체와 비교하여 상대 값의 표시를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="target" />의 상대 값을 나타내는 부호 있는 숫자입니다.값 의미 0보다 작음 이 인스턴스의 값이 <paramref name="target" />의 값보다 작습니다. 0 이 인스턴스의 값이 <paramref name="target" />의 값과 같습니다. 0보다 큼 이 인스턴스의 값이 <paramref name="target" />의 값보다 큽니다.또는 <paramref name="target" />가 null인 경우 </returns>
      <param name="target">비교할 개체 또는 null입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> and this instance are not the same type. </exception>
      <exception cref="T:System.InvalidOperationException">This instance is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.Equals(System.Object)">
      <summary>이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="obj" />가 이 인스턴스와 기본값이 동일하고 형식이 동일한 열거형 값이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.Format(System.Type,System.Object,System.String)">
      <summary>열거 형식이 지정된 특정 값을 특정 서식에 따라 해당 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="value" />의 문자열 표현입니다.</returns>
      <param name="enumType">변환할 값의 열거형 형식입니다. </param>
      <param name="value">변환할 값입니다. </param>
      <param name="format">사용할 출력 서식입니다. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="enumType" />, <paramref name="value" />, or <paramref name="format" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" /> type.-or- The <paramref name="value" /> is from an enumeration that differs in type from <paramref name="enumType" />.-or- The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />. </exception>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter contains an invalid value. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="format" /> equals "X", but the enumeration type is unknown.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetHashCode">
      <summary>이 인스턴스의 값에 대한 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.GetName(System.Type,System.Object)">
      <summary>지정된 값의 특정 열거형에서 상수의 이름을 검색합니다.</summary>
      <returns>
        <paramref name="value" />를 값으로 갖는 <paramref name="enumType" />의 열거된 상수 이름이 포함된 문자열이거나, 해당 상수가 없으면 null입니다.</returns>
      <param name="enumType">열거형 형식입니다. </param>
      <param name="value">내부 형식에 대한 특정 열거 상수의 값입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is neither of type <paramref name="enumType" /> nor does it have the same underlying type as <paramref name="enumType" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetNames(System.Type)">
      <summary>지정된 열거형에서 상수 이름의 배열을 검색합니다.</summary>
      <returns>
        <paramref name="enumType" />에 있는 상수 이름의 문자열 배열입니다. </returns>
      <param name="enumType">열거형 형식입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetUnderlyingType(System.Type)">
      <summary>지정된 열거형의 내부 형식을 반환합니다.</summary>
      <returns>
        <paramref name="enumType" />의 내부 형식입니다.</returns>
      <param name="enumType">내부 형식이 검색되는 열거형입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetValues(System.Type)">
      <summary>지정된 열거형에서 상수 값의 배열을 검색합니다.</summary>
      <returns>
        <paramref name="enumType" />의 상수 값을 포함하는 배열입니다. </returns>
      <param name="enumType">열거형 형식입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />. </exception>
      <exception cref="T:System.InvalidOperationException">The method is invoked by reflection in a reflection-only context, -or-<paramref name="enumType" /> is a type from an assembly loaded in a reflection-only context.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.HasFlag(System.Enum)">
      <summary>현재 인스턴스에 하나 이상의 비트 필드가 설정되어 있는지를 확인합니다.</summary>
      <returns>
        <paramref name="flag" />에 설정되어 있는 비트 필드가 현재 인스턴스에도 설정되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="flag">열거형 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> is a different type than the current instance.</exception>
    </member>
    <member name="M:System.Enum.IsDefined(System.Type,System.Object)">
      <summary>지정된 값의 상수가 해당 열거형에 있는지를 나타내는 표시를 반환합니다.</summary>
      <returns>
        <paramref name="enumType" />의 상수가 <paramref name="value" />와 같은 값을 가지면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="enumType">열거형 형식입니다. </param>
      <param name="value">
        <paramref name="enumType" />의 상수 값이나 이름입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an Enum.-or- The type of <paramref name="value" /> is an enumeration, but it is not an enumeration of type <paramref name="enumType" />.-or- The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />, or <see cref="T:System.String" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.Parse(System.Type,System.String)">
      <summary>하나 이상의 열거된 상수의 이름이나 숫자 값의 문자열 표현을 해당하는 열거형 개체로 변환합니다.</summary>
      <returns>값이 <paramref name="value" />로 표현된 <paramref name="enumType" /> 형식의 개체입니다.</returns>
      <param name="enumType">열거형 형식입니다. </param>
      <param name="value">변환할 이름이나 값이 포함된 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is either an empty string or only contains white space.-or- <paramref name="value" /> is a name, but not one of the named constants defined for the enumeration. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
      <summary>하나 이상의 열거된 상수의 이름이나 숫자 값의 문자열 표현을 해당하는 열거형 개체로 변환합니다.매개 변수는 연산이 대/소문자를 구분하지 않는지를 지정합니다.</summary>
      <returns>값이 <paramref name="value" />로 표현된 <paramref name="enumType" /> 형식의 개체입니다.</returns>
      <param name="enumType">열거형 형식입니다. </param>
      <param name="value">변환할 이름이나 값이 포함된 문자열입니다. </param>
      <param name="ignoreCase">
              대/소문자를 무시하려면 true이고, 구분하려면 false입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is either an empty string ("") or only contains white space.-or- <paramref name="value" /> is a name, but not one of the named constants defined for the enumeration. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>현재 값을 내부 형식에 따라 부울 값으로 변환합니다.</summary>
      <returns>이 멤버는 항상 예외를 throw합니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>현재 값을 내부 형식에 따라 8비트 부호 없는 정수로 변환합니다.</summary>
      <returns>변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>현재 값을 내부 형식에 따라 유니코드 문자로 변환합니다.</summary>
      <returns>이 멤버는 항상 예외를 throw합니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>현재 값을 내부 형식에 따라 <see cref="T:System.DateTime" />으로 변환합니다.</summary>
      <returns>이 멤버는 항상 예외를 throw합니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>현재 값을 내부 형식에 따라 <see cref="T:System.Decimal" />으로 변환합니다.</summary>
      <returns>이 멤버는 항상 예외를 throw합니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>현재 값을 내부 형식에 따라 배정밀도 부동 소수점 숫자로 변환합니다.</summary>
      <returns>이 멤버는 항상 예외를 throw합니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>현재 값을 내부 형식에 따라 16비트 부호 있는 정수로 변환합니다.</summary>
      <returns>변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>현재 값을 내부 형식에 따라 32비트 부호 있는 정수로 변환합니다.</summary>
      <returns>변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>현재 값을 내부 형식에 따라 64비트 부호 있는 정수로 변환합니다.</summary>
      <returns>변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>현재 값을 내부 형식에 따라 8비트 부호 있는 정수로 변환합니다.</summary>
      <returns>변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>현재 값을 내부 형식에 따라 단정밀도 부동 소수점 숫자로 변환합니다.</summary>
      <returns>이 멤버는 항상 예외를 throw합니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToString(System.IFormatProvider)">
      <summary>현재 값을 내부 형식에 따라 문자열로 변환합니다.</summary>
      <returns>변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>현재 값을 내부 형식에 따라 지정된 형식으로 변환합니다.</summary>
      <returns>변환된 값입니다.</returns>
      <param name="type">변환할 대상 형식입니다. </param>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>현재 값을 내부 형식에 따라 16비트 부호 없는 정수로 변환합니다.</summary>
      <returns>변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>현재 값을 내부 형식에 따라 32비트 부호 없는 정수로 변환합니다.</summary>
      <returns>변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>현재 값을 내부 형식에 따라 64비트 부호 없는 정수로 변환합니다.</summary>
      <returns>변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>이 메서드 오버로드는 사용되지 않으므로 <see cref="M:System.Enum.ToString(System.String)" />을 사용합니다.</summary>
      <returns>
        <paramref name="format" />에 의해 지정된 이 인스턴스 값의 문자열 표현입니다.</returns>
      <param name="format">형식 사양입니다.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> does not contain a valid format specification. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="format" /> equals "X", but the enumeration type is unknown.</exception>
    </member>
    <member name="M:System.Enum.ToObject(System.Type,System.Object)">
      <summary>정수 값이 있는 지정된 개체를 열거형 멤버로 변환합니다.</summary>
      <returns>값이 <paramref name="value" />인 열거형 개체입니다.</returns>
      <param name="enumType">반환할 열거형 형식입니다. </param>
      <param name="value">열거형 멤버로 변환할 값입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.ToString">
      <summary>이 인스턴스의 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값에 대한 문자열 표현입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.ToString(System.String)">
      <summary>지정된 형식을 사용하여 이 인스턴스의 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="format" />에 의해 지정된 이 인스턴스 값의 문자열 표현입니다.</returns>
      <param name="format">형식 문자열입니다. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> contains an invalid specification. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="format" /> equals "X", but the enumeration type is unknown.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
      <summary>하나 이상의 열거된 상수의 이름이나 숫자 값의 문자열 표현을 해당하는 열거형 개체로 변환합니다.매개 변수는 연산이 대/소문자를 구분하는지를 지정합니다.반환 값은 변환의 성공 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="value" /> 매개 변수가 변환되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">변환할 열거형 이름 또는 내부 값에 대한 문자열 표현입니다.</param>
      <param name="ignoreCase">대/소문자를 무시하려면 true이고, 대/소문자를 구분하려면 false입니다.</param>
      <param name="result">이 메서드가 반환될 경우 구문 분석 작업이 성공하면 <paramref name="result" />에는 값이 <paramref name="value" />로 표현되는 <paramref name="TEnum" /> 형식의 개체가 포함됩니다.구문 분석 작업이 실패하면 <paramref name="result" />에 <paramref name="TEnum" /> 기본 형식의 기본값이 포함됩니다.이 값은 <paramref name="TEnum" /> 열거형의 멤버가 아니어도 됩니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <typeparam name="TEnum">
        <paramref name="value" />를 변환할 열거형 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="TEnum" /> is not an enumeration type.</exception>
    </member>
    <member name="M:System.Enum.TryParse``1(System.String,``0@)">
      <summary>하나 이상의 열거된 상수의 이름이나 숫자 값의 문자열 표현을 해당하는 열거형 개체로 변환합니다.반환 값은 변환의 성공 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="value" /> 매개 변수가 변환되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">변환할 열거형 이름 또는 내부 값에 대한 문자열 표현입니다.</param>
      <param name="result">이 메서드가 반환될 경우 구문 분석 작업이 성공하면 <paramref name="result" />에는 값이 <paramref name="value" />로 표현되는 <paramref name="TEnum" /> 형식의 개체가 포함됩니다.구문 분석 작업이 실패하면 <paramref name="result" />에 <paramref name="TEnum" /> 기본 형식의 기본값이 포함됩니다.이 값은 <paramref name="TEnum" /> 열거형의 멤버가 아니어도 됩니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <typeparam name="TEnum">
        <paramref name="value" />를 변환할 열거형 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="TEnum" /> is not an enumeration type.</exception>
    </member>
    <member name="T:System.EventArgs">
      <summary>이벤트 데이터가 포함된 클래스의 기본 클래스를 나타내며, 이벤트 값이 포함되지 않은 이벤트에 사용할 값을 제공합니다. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.EventArgs.#ctor">
      <summary>
        <see cref="T:System.EventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="F:System.EventArgs.Empty">
      <summary>이벤트 데이터가 없는 이벤트에 사용할 값을 제공합니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.EventHandler">
      <summary>이벤트 데이터가 없는 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.EventHandler.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.EventHandler.BeginInvoke(System.Object,System.EventArgs,System.AsyncCallback,System.Object)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.EventHandler.EndInvoke(System.IAsyncResult)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.EventHandler.Invoke(System.Object,System.EventArgs)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.EventHandler`1">
      <summary>이벤트가 데이터를 제공할 때 이벤트를 처리할 메서드를 나타냅니다. </summary>
      <typeparam name="TEventArgs">이벤트에서 생성한 이벤트 데이터의 형식입니다.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.EventHandler`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.EventHandler`1.BeginInvoke(System.Object,`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.EventHandler`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.EventHandler`1.Invoke(System.Object,`0)"></member>
    <member name="T:System.Exception">
      <summary>응용 프로그램을 실행할 때 나타나는 오류를 나타냅니다.이 형식에 대한 .NET Framework 소스 코드를 찾아보려면 참조 원본을 참조하세요.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Exception.#ctor">
      <summary>
        <see cref="T:System.Exception" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Exception.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.Exception" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">@FSHO2@오류를 설명하는 메시지입니다. </param>
    </member>
    <member name="M:System.Exception.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Exception" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">@FSHO2@예외 이유를 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외를 발생시킨 예외이거나 내부 예외를 지정하지 않은 경우 null 참조(Visual Basic에서는 Nothing)입니다. </param>
    </member>
    <member name="P:System.Exception.Data">
      <summary>예외에 대한 사용자 정의 추가 정보를 제공하는 키/값 쌍의 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> 인터페이스를 구현하며 사용자 정의 키/값 쌍의 컬렉션을 포함하는 개체입니다.기본값은 빈 컬렉션입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Exception.GetBaseException">
      <summary>파생 클래스에서 재정의된 경우 하나 이상의 후속 예외의 근본 원인이 되는 <see cref="T:System.Exception" />을 반환합니다.</summary>
      <returns>예외의 체인에서 throw된 첫째 예외입니다.현재 예외의 <see cref="P:System.Exception.InnerException" /> 속성이 null 참조(Visual Basic에서는 Nothing)인 경우, 이 속성은 현재 예외를 반환합니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Exception.HelpLink">
      <summary>이 예외와 연결된 도움말 파일에 대한 링크를 가져오거나 설정합니다.</summary>
      <returns>URN(Uniform Resource Name)이거나, URL(Uniform Resource Locator)입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Exception.HResult">
      <summary>특정 예외에 할당된 코드화된 숫자 값인 HRESULT를 가져오거나 설정합니다.</summary>
      <returns>HRESULT 값입니다.</returns>
    </member>
    <member name="P:System.Exception.InnerException">
      <summary>현재 예외를 발생시킨 <see cref="T:System.Exception" /> 인스턴스를 가져옵니다.</summary>
      <returns>현재 예외를 발생시키는 오류를 설명하는 개체입니다.<see cref="P:System.Exception.InnerException" /> 속성은 <see cref="M:System.Exception.#ctor(System.String,System.Exception)" /> 생성자로 전달된 것과 동일한 값을 반환하거나 생성자에 내부 예외 값을 제공하지 않은 경우 null을 반환합니다.이 속성은 읽기 전용입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Exception.Message">
      <summary>현재 예외를 설명하는 메시지를 가져옵니다.</summary>
      <returns>예외의 원인을 설명하는 오류 메시지 또는 빈 문자열("").입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Exception.Source">
      <summary>오류를 발생시키는 응용 프로그램 또는 개체의 이름을 가져오거나 설정합니다.</summary>
      <returns>오류를 발생시키는 응용 프로그램 또는 개체의 이름입니다.</returns>
      <exception cref="T:System.ArgumentException">The object must be a runtime <see cref="N:System.Reflection" /> object</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Exception.StackTrace">
      <summary>호출 스택의 직접 실행 프레임 문자열 표현을 가져옵니다.</summary>
      <returns>호출 스택의 직접 실행 프레임을 설명하는 문자열입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Exception.ToString">
      <summary>현재 예외에 대한 문자열 표현을 만들고 반환합니다.</summary>
      <returns>현재 예외에 대한 문자열 표현입니다.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.FieldAccessException">
      <summary>클래스 내의 전용 필드 또는 보호된 필드에 액세스하려고 잘못 시도했을 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.FieldAccessException.#ctor">
      <summary>
        <see cref="T:System.FieldAccessException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.FieldAccessException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.FieldAccessException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.FieldAccessException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.FieldAccessException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="inner">현재 예외의 원인이 되는 예외입니다.<paramref name="inner" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.FlagsAttribute">
      <summary>열거형을 비트 필드 즉, 플래그 집합으로 처리할 수 있음을 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.FlagsAttribute.#ctor">
      <summary>
        <see cref="T:System.FlagsAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.FormatException">
      <summary>인수의 형식이 올바르지 않거나 합성 서식 문자열이 잘못 만들어진 경우 예외가 throw됩니다. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.FormatException.#ctor">
      <summary>
        <see cref="T:System.FormatException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.FormatException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.FormatException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다. </param>
    </member>
    <member name="M:System.FormatException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.FormatException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외의 원인인 예외입니다.<paramref name="innerException" /> 매개 변수가 null 참조(Visual Basic에서는 Nothing)가 아니면, 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.FormattableString">
      <summary>서식을 지정할 인수를 사용 함께 합성 서식 문자열을 나타냅니다. </summary>
    </member>
    <member name="M:System.FormattableString.#ctor">
      <summary>
        <see cref="T:System.FormattableString" /> 클래스의 새 인스턴스를 인스턴스화합니다. </summary>
    </member>
    <member name="P:System.FormattableString.ArgumentCount">
      <summary>서식을 지정할 인수 개수를 가져옵니다. </summary>
      <returns>서식을 지정할 인수 개수입니다. </returns>
    </member>
    <member name="P:System.FormattableString.Format">
      <summary>합성 서식 문자열을 반환합니다. </summary>
      <returns>합성 서식 문자열입니다. </returns>
    </member>
    <member name="M:System.FormattableString.GetArgument(System.Int32)">
      <summary>지정된 된 인덱스 위치에 있는 인수를 반환합니다. </summary>
      <returns>인수입니다. </returns>
      <param name="index">인수의 인덱스입니다.해당 값의 범위는 0 1의 값 보다 작은 값에서 <see cref="P:System.FormattableString.ArgumentCount" />.</param>
    </member>
    <member name="M:System.FormattableString.GetArguments">
      <summary>서식을 지정 하려면 하나 이상의 개체를 포함 하는 개체 배열을 반환 합니다. </summary>
      <returns>서식을 지정 하려면 하나 이상의 개체를 포함 하는 개체 배열입니다. </returns>
    </member>
    <member name="M:System.FormattableString.Invariant(System.FormattableString)">
      <summary>인수는 고정 문화권의 규칙을 사용 하 여 서식을 결과 문자열을 반환 합니다. </summary>
      <returns>고정 문화권의 규칙을 사용 하 여 현재 인스턴스에 서식을 결과로 생성 되는 문자열입니다. </returns>
      <param name="formattable">결과 문자열을 변환할 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="formattable" />가 null인 경우 </exception>
    </member>
    <member name="M:System.FormattableString.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>지정된 된 문화권의 서식 지정 규칙을 사용 하 여 인수를 형식 문자열을 따라 서식에서 생성 된 문자열을 반환 합니다. </summary>
      <returns>서식이 지정 된 문자열의 규칙을 사용 하는 <paramref name="formatProvider" /> 매개 변수입니다. </returns>
      <param name="ignored">문자열이 인수는 무시됩니다.</param>
      <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
    </member>
    <member name="M:System.FormattableString.ToString">
      <summary>현재 문화권의 서식 지정 규칙을 사용 하 여 인수를 함께 합성 서식 문자열 서식 지정에서 생성 된 문자열을 반환 합니다. </summary>
      <returns>현재 문화권의 규칙을 사용 하 여 포맷 되는 결과 문자열입니다. </returns>
    </member>
    <member name="M:System.FormattableString.ToString(System.IFormatProvider)">
      <summary>지정된 된 문화권의 서식 지정 규칙을 사용 하 여 인수를 함께 합성 서식 문자열 서식 지정에서 생성 된 문자열을 반환 합니다. </summary>
      <returns>결과 문자열의 규칙을 사용 하 여 포맷 <paramref name="formatProvider" />. </returns>
      <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
    </member>
    <member name="T:System.Func`1">
      <summary>매개 변수가 없고 <paramref name="TResult" /> 매개 변수에 지정된 형식의 값을 반환하는 메서드를 캡슐화합니다.</summary>
      <typeparam name="TResult">이 대리자로 캡슐화되는 메서드의 반환 값 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Func`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`1.BeginInvoke(System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`1.Invoke"></member>
    <member name="T:System.Func`10">
      <summary>매개 변수가 9개이고 <paramref name="TResult" /> 매개 변수에 지정된 형식의 값을 반환하는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T9">이 대리자로 캡슐화되는 메서드의 아홉 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="TResult">이 대리자로 캡슐화되는 메서드의 반환 값 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`10.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`10.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`10.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`10.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8)"></member>
    <member name="T:System.Func`11">
      <summary>매개 변수가 10개이고 <paramref name="TResult" /> 매개 변수로 지정된 형식의 값을 반환하는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T9">이 대리자로 캡슐화되는 메서드의 아홉 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T10">이 대리자로 캡슐화되는 메서드의 10번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="TResult">이 대리자로 캡슐화되는 메서드의 반환 값 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`11.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`11.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`11.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`11.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)"></member>
    <member name="T:System.Func`12">
      <summary>매개 변수가 11개이고 <paramref name="TResult" /> 매개 변수로 지정된 형식의 값을 반환하는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T9">이 대리자로 캡슐화되는 메서드의 아홉 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T10">이 대리자로 캡슐화되는 메서드의 10번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T11">이 대리자로 캡슐화되는 메서드의 11번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="TResult">이 대리자로 캡슐화되는 메서드의 반환 값 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`12.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`12.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`12.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`12.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)"></member>
    <member name="T:System.Func`13">
      <summary>매개 변수가 12개이고 <paramref name="TResult" /> 매개 변수에 지정된 형식의 값을 반환하는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T9">이 대리자로 캡슐화되는 메서드의 아홉 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T10">이 대리자로 캡슐화되는 메서드의 10번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T11">이 대리자로 캡슐화되는 메서드의 11번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T12">이 대리자로 캡슐화되는 메서드의 12번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="TResult">이 대리자로 캡슐화되는 메서드의 반환 값 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`13.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`13.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`13.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`13.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)"></member>
    <member name="T:System.Func`14">
      <summary>매개 변수가 13개이고 <paramref name="TResult" /> 매개 변수로 지정된 형식의 값을 반환하는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T9">이 대리자로 캡슐화되는 메서드의 아홉 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T10">이 대리자로 캡슐화되는 메서드의 10번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T11">이 대리자로 캡슐화되는 메서드의 11번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T12">이 대리자로 캡슐화되는 메서드의 12번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T13">이 대리자로 캡슐화되는 메서드의 13번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="TResult">이 대리자로 캡슐화되는 메서드의 반환 값 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`14.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`14.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`14.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`14.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)"></member>
    <member name="T:System.Func`15">
      <summary>매개 변수가 14개이고 <paramref name="TResult" /> 매개 변수로 지정된 형식의 값을 반환하는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T9">이 대리자로 캡슐화되는 메서드의 아홉 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T10">이 대리자로 캡슐화되는 메서드의 10번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T11">이 대리자로 캡슐화되는 메서드의 11번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T12">이 대리자로 캡슐화되는 메서드의 12번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T13">이 대리자로 캡슐화되는 메서드의 13번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T14">이 대리자로 캡슐화되는 메서드의 14번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="TResult">이 대리자로 캡슐화되는 메서드의 반환 값 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`15.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`15.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`15.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`15.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)"></member>
    <member name="T:System.Func`16">
      <summary>매개 변수가 15개이고 <paramref name="TResult" /> 매개 변수로 지정된 형식의 값을 반환하는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T9">이 대리자로 캡슐화되는 메서드의 아홉 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T10">이 대리자로 캡슐화되는 메서드의 10번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T11">이 대리자로 캡슐화되는 메서드의 11번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T12">이 대리자로 캡슐화되는 메서드의 12번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T13">이 대리자로 캡슐화되는 메서드의 13번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T14">이 대리자로 캡슐화되는 메서드의 14번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T15">이 대리자로 캡슐화되는 메서드의 15번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="TResult">이 대리자로 캡슐화되는 메서드의 반환 값 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`16.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`16.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`16.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`16.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)"></member>
    <member name="T:System.Func`17">
      <summary>매개 변수가 16개이고 <paramref name="TResult" /> 매개 변수로 지정된 형식의 값을 반환하는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T9">이 대리자로 캡슐화되는 메서드의 아홉 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T10">이 대리자로 캡슐화되는 메서드의 10번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T11">이 대리자로 캡슐화되는 메서드의 11번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T12">이 대리자로 캡슐화되는 메서드의 12번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T13">이 대리자로 캡슐화되는 메서드의 13번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T14">이 대리자로 캡슐화되는 메서드의 14번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T15">이 대리자로 캡슐화되는 메서드의 15번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T16">이 대리자로 캡슐화되는 메서드의 16번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="TResult">이 대리자로 캡슐화되는 메서드의 반환 값 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`17.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`17.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`17.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`17.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)"></member>
    <member name="T:System.Func`2">
      <summary>매개 변수가 하나이고 <paramref name="TResult" /> 매개 변수에 지정된 형식의 값을 반환하는 메서드를 캡슐화합니다.이 유형의 .NET Framework 소스 코드를 찾아보려면 참조 소스를 참조하세요.</summary>
      <typeparam name="T">이 대리자로 캡슐화되는 메서드의 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="TResult">이 대리자로 캡슐화되는 메서드의 반환 값 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`2.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`2.BeginInvoke(`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`2.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`2.Invoke(`0)"></member>
    <member name="T:System.Func`3">
      <summary>매개 변수가 두 개이고 <paramref name="TResult" /> 매개 변수에 지정된 형식의 값을 반환하는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="TResult">이 대리자로 캡슐화되는 메서드의 반환 값 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`3.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`3.BeginInvoke(`0,`1,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`3.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`3.Invoke(`0,`1)"></member>
    <member name="T:System.Func`4">
      <summary>매개 변수가 세 개이고 <paramref name="TResult" /> 매개 변수에 지정된 형식의 값을 반환하는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="TResult">이 대리자로 캡슐화되는 메서드의 반환 값 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`4.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`4.BeginInvoke(`0,`1,`2,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`4.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`4.Invoke(`0,`1,`2)"></member>
    <member name="T:System.Func`5">
      <summary>매개 변수가 네 개이고 <paramref name="TResult" /> 매개 변수에 지정된 형식의 값을 반환하는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="TResult">이 대리자로 캡슐화되는 메서드의 반환 값 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`5.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`5.BeginInvoke(`0,`1,`2,`3,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`5.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`5.Invoke(`0,`1,`2,`3)"></member>
    <member name="T:System.Func`6">
      <summary>매개 변수가 5개이고 <paramref name="TResult" /> 매개 변수로 지정된 형식의 값을 반환하는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="TResult">이 대리자로 캡슐화되는 메서드의 반환 값 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`6.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`6.BeginInvoke(`0,`1,`2,`3,`4,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`6.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`6.Invoke(`0,`1,`2,`3,`4)"></member>
    <member name="T:System.Func`7">
      <summary>매개 변수가 6개이고 <paramref name="TResult" /> 매개 변수에 지정된 형식의 값을 반환하는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="TResult">이 대리자로 캡슐화되는 메서드의 반환 값 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`7.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`7.BeginInvoke(`0,`1,`2,`3,`4,`5,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`7.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`7.Invoke(`0,`1,`2,`3,`4,`5)"></member>
    <member name="T:System.Func`8">
      <summary>매개 변수가 7개이고 <paramref name="TResult" /> 매개 변수로 지정된 형식의 값을 반환하는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="TResult">이 대리자로 캡슐화되는 메서드의 반환 값 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`8.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`8.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`8.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`8.Invoke(`0,`1,`2,`3,`4,`5,`6)"></member>
    <member name="T:System.Func`9">
      <summary>매개 변수가 8개이고 <paramref name="TResult" /> 매개 변수에 지정된 형식의 값을 반환하는 메서드를 캡슐화합니다.</summary>
      <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
      <typeparam name="TResult">이 대리자로 캡슐화되는 메서드의 반환 값 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`9.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`9.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`9.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`9.Invoke(`0,`1,`2,`3,`4,`5,`6,`7)"></member>
    <member name="T:System.GC">
      <summary>사용하지 않는 메모리를 자동적으로 회수하는 서비스인 시스템 가비지 수집기를 제어합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.GC.AddMemoryPressure(System.Int64)">
      <summary>가비지 수집을 예약할 때 고려해야 할 많은 양의 관리되지 않는 메모리 할당을 런타임에 알립니다.</summary>
      <param name="bytesAllocated">할당된 관리되지 않는 메모리의 증가량입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bytesAllocated" />가 0보다 작거나 같은 경우또는32비트 컴퓨터에서 <paramref name="bytesAllocated" />가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.GC.Collect">
      <summary>모든 세대의 가비지 수집을 즉시 수행합니다. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.Collect(System.Int32)">
      <summary>0세대에서 지정된 세대까지 가비지 수집을 즉시 수행합니다.</summary>
      <param name="generation">가비지를 수집할 가장 오래된 세대의 수입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" />가 잘못된 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.Collect(System.Int32,System.GCCollectionMode)">
      <summary>
        <see cref="T:System.GCCollectionMode" /> 값에 지정된 시간에 0세대에서 지정된 세대까지 가비지 수집을 수행합니다.</summary>
      <param name="generation">가비지를 수집할 가장 오래된 세대의 수입니다. </param>
      <param name="mode">이 가비지의 수집 강제 (<see cref="F:System.GCCollectionMode.Default" /> 또는 <see cref="F:System.GCCollectionMode.Forced" />) 또는 최적화 (<see cref="F:System.GCCollectionMode.Optimized" />) 여부를 지정하는 열거형 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" />가 잘못된 경우또는<paramref name="mode" />가 <see cref="T:System.GCCollectionMode" /> 값 중 하나가 아닌 경우</exception>
    </member>
    <member name="M:System.GC.Collect(System.Int32,System.GCCollectionMode,System.Boolean)">
      <summary>수집이 차단되어야 할지 여부를 지정하는 값을 사용하여 <see cref="T:System.GCCollectionMode" /> 값으로 지정된 시간에 0세대에서 지정된 세대까지 가비지 수집을 강제로 실행합니다.</summary>
      <param name="generation">가비지를 수집할 가장 오래된 세대의 수입니다. </param>
      <param name="mode">이 가비지의 수집 강제 (<see cref="F:System.GCCollectionMode.Default" /> 또는 <see cref="F:System.GCCollectionMode.Forced" />) 또는 최적화 (<see cref="F:System.GCCollectionMode.Optimized" />) 여부를 지정하는 열거형 값입니다. </param>
      <param name="blocking">차단 가비지 수집을 수행하려면 true이고, 가능한 경우 백그라운드 가비지 수집을 수행하려면 false입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" />가 잘못된 경우또는<paramref name="mode" />가 <see cref="T:System.GCCollectionMode" /> 값 중 하나가 아닌 경우</exception>
    </member>
    <member name="M:System.GC.CollectionCount(System.Int32)">
      <summary>지정된 세대의 개체에 대해 가비지 수집이 수행된 횟수를 반환합니다.</summary>
      <returns>프로세스가 시작된 이후 지정된 세대에 대해 가비지 수집이 수행된 횟수입니다.</returns>
      <param name="generation">가비지 수집 횟수를 확인할 개체의 세대입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" />가 0보다 작은 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.GetGeneration(System.Object)">
      <summary>지정된 개체의 현재 세대 번호를 반환합니다.</summary>
      <returns>
        <paramref name="obj" />의 현재 세대 번호입니다.</returns>
      <param name="obj">세대 정보를 검색할 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.GetTotalMemory(System.Boolean)">
      <summary>현재 할당되었다고 여겨지는 바이트 수를 검색합니다.매개 변수는 시스템에서 가비지를 수집하고 개체를 종료할 수 있도록 이 메서드가 반환되기 전에 잠시 동안 대기할 수 있는지 여부를 나타냅니다.</summary>
      <returns>관리되는 메모리에 현재 할당된 가장 가까운 근사값의 바이트 수입니다.</returns>
      <param name="forceFullCollection">이 메서드가 반환되기 전에 가비지 수집을 기다릴 수 있다는 것을 나타내려면 true이고, 그렇지 않으면 false입니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.KeepAlive(System.Object)">
      <summary>지정된 개체를 참조하여 현재 루틴이 시작된 지점에서 이 메서드가 호출된 지점까지 가비지 수집이 불가능하도록 합니다.</summary>
      <param name="obj">참조할 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.GC.MaxGeneration">
      <summary>시스템에서 현재 지원하는 가장 큰 세대 번호를 가져옵니다.</summary>
      <returns>0에서 지원되는 가장 큰 세대 번호 사이의 값입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.RemoveMemoryPressure(System.Int64)">
      <summary>관리되는 메모리가 해제되었고 가비지 수집을 예약할 때 더 이상 고려할 필요가 없다고 런타임에 알립니다.</summary>
      <param name="bytesAllocated">해제된 관리되지 않는 메모리의 양입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bytesAllocated" />가 0보다 작거나 같은 경우 또는 32비트 컴퓨터에서 <paramref name="bytesAllocated" />가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.GC.ReRegisterForFinalize(System.Object)">
      <summary>
        <see cref="M:System.GC.SuppressFinalize(System.Object)" />가 이전에 호출된 지정된 개체에 대해 시스템에서 종료자를 호출하도록 요청합니다.</summary>
      <param name="obj">종료자가 호출되어야 하는 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" />가 null인 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.SuppressFinalize(System.Object)">
      <summary>공용 언어 런타임에서 지정된 개체에 대해 종료자를 호출하지 않도록 요청합니다. </summary>
      <param name="obj">종료자가 실행되지 않아야 하는 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" />가 null인 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.WaitForPendingFinalizers">
      <summary>종료자의 큐를 처리하는 스레드에서 해당 큐를 비울 때까지 현재 스레드를 일시 중단합니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.GCCollectionMode">
      <summary>강제 가비지 수집의 동작을 지정합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.GCCollectionMode.Default">
      <summary>이 열거형의 기본 설정이며, 현재 <see cref="F:System.GCCollectionMode.Forced" />입니다. </summary>
    </member>
    <member name="F:System.GCCollectionMode.Forced">
      <summary>가비지 수집이 즉시 실행되도록 지정합니다.</summary>
    </member>
    <member name="F:System.GCCollectionMode.Optimized">
      <summary>가비지 수집기에서 현재가 개체를 회수하는 데 가장 적합한 시점인지 결정할 수 있도록 허용합니다. </summary>
    </member>
    <member name="T:System.Guid">
      <summary>GUID(Globally Unique IDentifier)를 나타냅니다.이 형식에 대 한.NET Framework 소스 코드를 찾아보려면 참조는 참조 원본.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.#ctor(System.Byte[])">
      <summary>지정된 바이트 배열을 사용하여 <see cref="T:System.Guid" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="b">GUID를 초기화하는 데 사용할 값이 들어 있는 16 요소 바이트 배열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="b" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="b" />의 길이가 16바이트가 아닌 경우 </exception>
    </member>
    <member name="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>지정된 정수 및 바이트를 사용하여 <see cref="T:System.Guid" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="a">GUID의 처음 4바이트입니다. </param>
      <param name="b">GUID의 다음 2바이트입니다. </param>
      <param name="c">GUID의 다음 2바이트입니다. </param>
      <param name="d">GUID의 다음 바이트입니다. </param>
      <param name="e">GUID의 다음 바이트입니다. </param>
      <param name="f">GUID의 다음 바이트입니다. </param>
      <param name="g">GUID의 다음 바이트입니다. </param>
      <param name="h">GUID의 다음 바이트입니다. </param>
      <param name="i">GUID의 다음 바이트입니다. </param>
      <param name="j">GUID의 다음 바이트입니다. </param>
      <param name="k">GUID의 다음 바이트입니다. </param>
    </member>
    <member name="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])">
      <summary>지정된 정수 및 바이트 배열을 사용하여 <see cref="T:System.Guid" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="a">GUID의 처음 4바이트입니다. </param>
      <param name="b">GUID의 다음 2바이트입니다. </param>
      <param name="c">GUID의 다음 2바이트입니다. </param>
      <param name="d">GUID의 나머지 8바이트입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="d" />의 길이가 8바이트가 아닌 경우 </exception>
    </member>
    <member name="M:System.Guid.#ctor(System.String)">
      <summary>지정된 문자열이 나타내는 값을 사용하여 <see cref="T:System.Guid" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="g">다음 형식 중 하나인 GUID를 포함하는 문자열입니다. 여기에서 "d"는 대/소문자가 무시된 16진수를 나타냅니다. 32자리 숫자: dddddddddddddddddddddddddddddddd 또는 그룹 사이가 하이픈으로 구분된 8자리, 4자리, 4자리, 4자리 및 12자리 숫자 그룹전체 GUID는 선택적으로 중괄호나 괄호 한 쌍으로 묶을 수 있습니다.dddddddd-dddd-dddd-dddd-dddddddddddd 또는 {dddddddd-dddd-dddd-dddd-dddddddddddd} 또는 (dddddddd-dddd-dddd-dddd-dddddddddddd) 또는 각 그룹 앞에 "0x"나 "0X"가 붙고 쉼표로 분리된 8자리, 4자리, 4자리 그룹과 각 그룹의 2자리 하위 집합하위 집합뿐 아니라 전체 GUID가 중괄호로 묶입니다.{0xdddddddd, 0xdddd, 0xdddd,{0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd}} 모든 중괄호, 쉼표 및 "0x" 접두사는 필수입니다.포함된 모든 공백은 무시됩니다.그룹에서 처음에 나오는 0은 모두 무시됩니다.그룹에서 표시되는 자릿수는 그룹에서 나타날 수 있는 의미 있는 최대 자릿수입니다.1부터 그룹에서 표시되는 자릿수까지 지정할 수 있습니다.지정된 자릿수는 그룹의 하위 자릿수로 간주됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" />가 null인 경우 </exception>
      <exception cref="T:System.FormatException">
        <paramref name="g" />의 형식이 유효하지 않은 경우 </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="g" />의 형식이 유효하지 않은 경우 </exception>
    </member>
    <member name="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>지정된 부호 없는 정수 및 바이트를 사용하여 <see cref="T:System.Guid" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="a">GUID의 처음 4바이트입니다. </param>
      <param name="b">GUID의 다음 2바이트입니다. </param>
      <param name="c">GUID의 다음 2바이트입니다. </param>
      <param name="d">GUID의 다음 바이트입니다. </param>
      <param name="e">GUID의 다음 바이트입니다. </param>
      <param name="f">GUID의 다음 바이트입니다. </param>
      <param name="g">GUID의 다음 바이트입니다. </param>
      <param name="h">GUID의 다음 바이트입니다. </param>
      <param name="i">GUID의 다음 바이트입니다. </param>
      <param name="j">GUID의 다음 바이트입니다. </param>
      <param name="k">GUID의 다음 바이트입니다. </param>
    </member>
    <member name="M:System.Guid.CompareTo(System.Guid)">
      <summary>이 인스턴스를 지정된 <see cref="T:System.Guid" /> 개체와 비교하여 상대 값의 표시를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 설명 음의 정수 이 인스턴스는 <paramref name="value" />보다 작습니다. 0 이 인스턴스는 <paramref name="value" />와 같습니다. 양의 정수 이 인스턴스는 <paramref name="value" />보다 큽니다. </returns>
      <param name="value">이 인스턴스와 비교할 개체입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Guid.Empty">
      <summary>모든 값이 0인 <see cref="T:System.Guid" /> 구조체의 읽기 전용 인스턴스입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.Equals(System.Guid)">
      <summary>이 인스턴스의 값과 지정된 <see cref="T:System.Guid" /> 개체의 값이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>true if <paramref name="g" /> is equal to this instance; otherwise, false.</returns>
      <param name="g">이 인스턴스와 비교할 개체입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.Equals(System.Object)">
      <summary>@FSHO2@이 인스턴스가 지정한 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="o" />가 이 인스턴스와 같은 값을 가지는 <see cref="T:System.Guid" />이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="o">이 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>이 인스턴스의 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.NewGuid">
      <summary>
        <see cref="T:System.Guid" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <returns>새 GUID 개체입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.op_Equality(System.Guid,System.Guid)">
      <summary>지정된 두 <see cref="T:System.Guid" /> 개체의 값이 같은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="a" />와 <paramref name="b" />가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="a">비교할 첫 번째 개체입니다. </param>
      <param name="b">비교할 두 번째 개체입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Guid.op_Inequality(System.Guid,System.Guid)">
      <summary>지정된 두 <see cref="T:System.Guid" /> 개체의 값이 같지 않은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="a" />과 <paramref name="b" />가 같지 않으면 true이고, 그러지 않으면 false입니다.</returns>
      <param name="a">비교할 첫 번째 개체입니다. </param>
      <param name="b">비교할 두 번째 개체입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Guid.Parse(System.String)">
      <summary>GUID의 문자열 표현을 해당 <see cref="T:System.Guid" /> 구조체로 변환합니다.</summary>
      <returns>구문 분석된 값을 포함하는 구조체입니다.</returns>
      <param name="input">변환할 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />가 null인 경우</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" />의 형식을 인식할 수 없는 경우</exception>
    </member>
    <member name="M:System.Guid.ParseExact(System.String,System.String)">
      <summary>문자열이 지정된 서식인 경우 GUID의 문자열 표현을 해당 <see cref="T:System.Guid" /> 구조체로 변환합니다.</summary>
      <returns>구문 분석된 값을 포함하는 구조체입니다.</returns>
      <param name="input">변환할 GUID.</param>
      <param name="format">
        <paramref name="input" />을 해석할 때 사용할 정확한 서식을 나타내는 지정자 "N", "D", "B", "P", "X" 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 또는 <paramref name="format" />가 null인 경우</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" />지정 된 형식에 없는 <paramref name="format" />.</exception>
    </member>
    <member name="M:System.Guid.System#IComparable#CompareTo(System.Object)">
      <summary>이 인스턴스를 지정된 개체와 비교하여 상대 값의 표시를 반환합니다. </summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 설명 음의 정수 이 인스턴스는 <paramref name="value" />보다 작습니다. 0 이 인스턴스는 <paramref name="value" />와 같습니다. 양의 정수 이 인스턴스는 <paramref name="value" />보다 크거나 <paramref name="value" />가 null입니다. </returns>
      <param name="value">비교할 개체 또는 null입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />가 <see cref="T:System.Guid" />가 아닌 경우 </exception>
    </member>
    <member name="M:System.Guid.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>제공된 서식 지정자에 따라 이 인스턴스의 값에 대한 문자열 표현을 반환합니다.</summary>
      <returns>이 <see cref="T:System.Guid" />의 값이며 지정된 형식의 일련의 소문자 16진수로 표현됩니다.</returns>
      <param name="format">
        <see cref="T:System.Guid" /> 값의 형식을 지정하는 방법을 나타내는 단일 형식 지정자입니다.<paramref name="format" /> 매개 변수는 "N", "D", "B", "P" 또는 "X"가 될 수 있습니다.<paramref name="format" />이 null이거나 빈 문자열("")인 경우 "D"가 사용됩니다.</param>
      <param name="provider">(예약됨) 문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> 값은 null, 빈 문자열("") 또는 "N", "D", "B", "P" 또는 "X"와 같은 단일 형식 지정자 중 하나가 아닙니다.</exception>
    </member>
    <member name="M:System.Guid.ToByteArray">
      <summary>이 인스턴스의 값이 들어 있는, 16개 요소로 구성된 바이트 배열을 반환합니다.</summary>
      <returns>16 요소 바이트 배열입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.ToString">
      <summary>레지스트리 형식의 이 인스턴스 값에 대한 문자열 표현을 반환합니다.</summary>
      <returns>이 <see cref="T:System.Guid" />의 값은 다음과 같은 "D" 서식 지정자를 사용하여 서식이 지정됩니다. xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx 여기에서 GUID의 값은 각각 8개, 4개, 4개, 4개, 12개씩의 소문자 16진수 그룹이 하이픈으로 구분되어 표현됩니다.예를 들면, "382c74c3-721d-4f34-80e5-57657b6cbc27"과 같은 값이 반환됩니다.a부터 f까지의 16진수를 대문자로 변환하려면 반환된 문자열에서 <see cref="M:System.String.ToUpper" /> 메서드를 호출합니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.ToString(System.String)">
      <summary>제공된 서식 지정자에 따라 이 <see cref="T:System.Guid" /> 인스턴스의 값에 대한 문자열 표현을 반환합니다.</summary>
      <returns>이 <see cref="T:System.Guid" />의 값이며 지정된 형식의 일련의 소문자 16진수로 표현됩니다. </returns>
      <param name="format">이 <see cref="T:System.Guid" /> 값의 형식을 지정하는 방법을 나타내는 단일 형식 지정자입니다.<paramref name="format" /> 매개 변수는 "N", "D", "B", "P" 또는 "X"가 될 수 있습니다.<paramref name="format" />이 null이거나 빈 문자열("")인 경우 "D"가 사용됩니다.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" />의 값이 null, 빈 문자열(""), "N", "D", "B" "P" 또는 "X"가 아닌 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.TryParse(System.String,System.Guid@)">
      <summary>GUID의 문자열 표현을 해당 <see cref="T:System.Guid" /> 구조체로 변환합니다. </summary>
      <returns>구문 분석 작업에 성공하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="input">변환할 GUID.</param>
      <param name="result">구문 분석된 값을 포함하는 구조체입니다.메서드가 true를 반환하면 <paramref name="result" />에 유효한 <see cref="T:System.Guid" />가 포함됩니다.메서드가 false를 반환하는 경우 <paramref name="result" />는 <see cref="F:System.Guid.Empty" />와 같습니다.</param>
    </member>
    <member name="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
      <summary>문자열이 지정된 서식인 경우 GUID의 문자열 표현을 해당 <see cref="T:System.Guid" /> 구조체로 변환합니다.</summary>
      <returns>구문 분석 작업에 성공하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="input">변환할 GUID.</param>
      <param name="format">
        <paramref name="input" />을 해석할 때 사용할 정확한 서식을 나타내는 지정자 "N", "D", "B", "P", "X" 중 하나입니다.</param>
      <param name="result">구문 분석된 값을 포함하는 구조체입니다.메서드가 true를 반환하면 <paramref name="result" />에 유효한 <see cref="T:System.Guid" />가 포함됩니다.메서드가 false를 반환하는 경우 <paramref name="result" />는 <see cref="F:System.Guid.Empty" />와 같습니다.</param>
    </member>
    <member name="T:System.IAsyncResult">
      <summary>비동기 작업의 상태를 나타냅니다. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.AsyncState">
      <summary>비동기 작업에 대한 정보를 한정하거나 포함하는 사용자 정의 개체를 가져옵니다.</summary>
      <returns>비동기 작업에 대한 정보를 한정하거나 포함하는 사용자 정의 개체입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.AsyncWaitHandle">
      <summary>비동기 작업이 끝나기를 기다리는 데 사용되는 <see cref="T:System.Threading.WaitHandle" />을 가져옵니다.</summary>
      <returns>비동기 작업이 끝나기를 기다리는 데 사용되는 <see cref="T:System.Threading.WaitHandle" />입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.CompletedSynchronously">
      <summary>비동기 작업이 동기적으로 끝났는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>비동기 작업이 동기적으로 끝나면 true이고, 그렇지 않으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.IsCompleted">
      <summary>비동기 작업이 완료되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>작업이 끝나면 true이고 그렇지 않으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IComparable">
      <summary>값 형식이나 클래스에서 해당 인스턴스의 순서를 지정하거나 인스턴스를 정렬하기 위해 구현하는 일반화된 형식별 비교 메서드를 정의합니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IComparable.CompareTo(System.Object)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>비교되는 개체의 상대 순서를 나타내는 값입니다.반환 값에는 다음과 같은 의미가 있습니다.값 의미 0보다 작음 이 인스턴스가 정렬 순서에서 <paramref name="obj" /> 앞에 옵니다. Zero 이 인스턴스가 정렬 순서에서 <paramref name="obj" />와 동일한 위치에 있습니다. 0보다 큼 이 인스턴스가 정렬 순서에서 <paramref name="obj" /> 뒤에 옵니다. </returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" />가 이 인스턴스와 같은 형식이 아닌 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IComparable`1">
      <summary>인스턴스를 정렬하는 형식 고유의 비교 메서드를 만들기 위해 값 형식 또는 클래스에서 구현하는 일반화된 비교 메서드를 정의합니다.</summary>
      <typeparam name="T">비교할 개체의 형식입니다. 이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IComparable`1.CompareTo(`0)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다. </summary>
      <returns>비교되는 개체의 상대 순서를 나타내는 값입니다.반환 값에는 다음과 같은 의미가 있습니다.값 의미 0보다 작음 이 인스턴스가 정렬 순서에서 <paramref name="other" /> 앞에 옵니다.  0 이 인스턴스가 정렬 순서에서 <paramref name="other" />와 동일한 위치에 있습니다. 0보다 큼 이 인스턴스가 정렬 순서에서 <paramref name="other" /> 뒤에 옵니다. </returns>
      <param name="other">이 인스턴스와 비교할 개체입니다. </param>
    </member>
    <member name="T:System.IConvertible">
      <summary>구현하는 참조의 값 또는 값 형식을 같은 값의 공용 언어 런타임 형식으로 변환하는 메서드를 정의합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.GetTypeCode">
      <summary>이 인스턴스에 대한 <see cref="T:System.TypeCode" />를 반환합니다.</summary>
      <returns>클래스의 <see cref="T:System.TypeCode" /> 또는 이 인터페이스를 구현하는 값 형식에 해당하는 열거된 상수입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToBoolean(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 지정 정보를 사용하여 이 인스턴스의 값을 해당하는 부울 값으로 변환합니다.</summary>
      <returns>이 인스턴스의 값에 해당하는 부울 값입니다.</returns>
      <param name="provider">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 인터페이스의 구현입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToByte(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 지정 정보를 사용하여 이 인스턴스의 값을 해당하는 부호 없는 8비트 정수로 변환합니다.</summary>
      <returns>이 인스턴스의 값에 해당하는 부호 없는 8비트 정수입니다.</returns>
      <param name="provider">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 인터페이스의 구현입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToChar(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 지정 정보를 사용하여 이 인스턴스의 값을 해당하는 유니코드 문자로 변환합니다.</summary>
      <returns>이 인스턴스의 값에 해당하는 유니코드 문자입니다.</returns>
      <param name="provider">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 인터페이스의 구현입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToDateTime(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 지정 정보를 사용하여 이 인스턴스의 값을 해당하는 <see cref="T:System.DateTime" />으로 변환합니다.</summary>
      <returns>이 인스턴스의 값에 해당하는 <see cref="T:System.DateTime" /> 인스턴스입니다.</returns>
      <param name="provider">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 인터페이스의 구현입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToDecimal(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 지정 정보를 사용하여 이 인스턴스의 값을 해당하는 <see cref="T:System.Decimal" /> 수로 변환합니다.</summary>
      <returns>이 인스턴스의 값에 해당하는 <see cref="T:System.Decimal" /> 수입니다.</returns>
      <param name="provider">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 인터페이스의 구현입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToDouble(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 지정 정보를 사용하여 이 인스턴스의 값을 해당하는 배정밀도 부동 소수점 수로 변환합니다.</summary>
      <returns>이 인스턴스의 값에 해당하는 배정밀도 부동 소수점 수입니다.</returns>
      <param name="provider">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 인터페이스의 구현입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToInt16(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 지정 정보를 사용하여 이 인스턴스의 값을 해당하는 부호 있는 16비트 정수로 변환합니다.</summary>
      <returns>이 인스턴스의 값에 해당하는 부호 있는 16비트 정수입니다.</returns>
      <param name="provider">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 인터페이스의 구현입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToInt32(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 지정 정보를 사용하여 이 인스턴스의 값을 해당하는 부호 있는 32비트 정수로 변환합니다.</summary>
      <returns>이 인스턴스의 값에 해당하는 부호 있는 32비트 정수입니다.</returns>
      <param name="provider">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 인터페이스의 구현입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToInt64(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 지정 정보를 사용하여 이 인스턴스의 값을 해당하는 부호 있는 64비트 정수로 변환합니다.</summary>
      <returns>이 인스턴스의 값에 해당하는 부호 있는 64비트 정수입니다.</returns>
      <param name="provider">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 인터페이스의 구현입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToSByte(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 지정 정보를 사용하여 이 인스턴스의 값을 해당하는 부호 있는 8비트 정수로 변환합니다.</summary>
      <returns>이 인스턴스의 값에 해당하는 부호 있는 8비트 정수입니다.</returns>
      <param name="provider">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 인터페이스의 구현입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToSingle(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 지정 정보를 사용하여 이 인스턴스의 값을 해당하는 단정밀도 부동 소수점 수로 변환합니다.</summary>
      <returns>이 인스턴스의 값에 해당하는 단정밀도 부동 소수점 수입니다.</returns>
      <param name="provider">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 인터페이스의 구현입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToString(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 지정 정보를 사용하여 이 인스턴스의 값을 해당하는 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns>이 인스턴스의 값에 해당하는 <see cref="T:System.String" /> 인스턴스입니다.</returns>
      <param name="provider">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 인터페이스의 구현입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)">
      <summary>지정된 문화권별 형식 지정 정보를 사용하여 이 인스턴스의 값을 값이 같은 지정된 <see cref="T:System.Type" />의 <see cref="T:System.Object" />로 변환합니다.</summary>
      <returns>이 인스턴스의 값과 값이 동일한 <paramref name="conversionType" /> 형식의 <see cref="T:System.Object" /> 인스턴스입니다.</returns>
      <param name="conversionType">이 인스턴스의 값이 변환되는 <see cref="T:System.Type" />입니다. </param>
      <param name="provider">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 인터페이스의 구현입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToUInt16(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 지정 정보를 사용하여 이 인스턴스의 값을 해당하는 부호 없는 16비트 정수로 변환합니다.</summary>
      <returns>이 인스턴스의 값에 해당하는 부호 없는 16비트 정수입니다.</returns>
      <param name="provider">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 인터페이스의 구현입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToUInt32(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 지정 정보를 사용하여 이 인스턴스의 값을 해당하는 부호 없는 32비트 정수로 변환합니다.</summary>
      <returns>이 인스턴스의 값에 해당하는 부호 없는 32비트 정수입니다.</returns>
      <param name="provider">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 인터페이스의 구현입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToUInt64(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 지정 정보를 사용하여 이 인스턴스의 값을 해당하는 부호 없는 64비트 정수로 변환합니다.</summary>
      <returns>이 인스턴스의 값에 해당하는 부호 없는 64비트 정수입니다.</returns>
      <param name="provider">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 인터페이스의 구현입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ICustomFormatter">
      <summary>개체 값의 사용자 지정 서식 지정을 지원하는 메서드를 정의합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
      <summary>지정된 형식 및 문화권별 형식 지정 정보를 사용하여 지정된 개체의 값을 해당하는 문자열로 변환합니다.</summary>
      <returns>
        <paramref name="format" /> 및 <paramref name="formatProvider" />에서 지정한 대로 형식이 지정된 <paramref name="arg" /> 값을 문자열로 나타낸 것입니다.</returns>
      <param name="format">형식 지정 사양을 포함하는 형식 문자열입니다. </param>
      <param name="arg">형식을 지정할 개체입니다. </param>
      <param name="formatProvider">현재 인스턴스에 대한 서식 정보를 제공하는 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IDisposable">
      <summary>관리되지 않은 리소스 해제를 위한 메커니즘을 제공합니다.이 유형의 .NET Framework 소스 코드를 찾아보려면 참조 소스를 참조하세요.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IDisposable.Dispose">
      <summary>관리되지 않는 리소스의 확보, 해제 또는 다시 설정과 관련된 응용 프로그램 정의 작업을 수행합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IEquatable`1">
      <summary>인스턴스의 같음 여부를 확인하는 형식 고유의 비교 메서드를 만들기 위해 값 형식 또는 클래스에서 구현하는 일반화된 메서드를 정의합니다.</summary>
      <typeparam name="T">비교할 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.IEquatable`1.Equals(`0)">
      <summary>현재 개체가 동일한 형식의 다른 개체와 같은지 여부를 나타냅니다.</summary>
      <returns>현재 개체가 <paramref name="other" /> 매개 변수와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="other">이 개체와 비교할 개체입니다.</param>
    </member>
    <member name="T:System.IFormatProvider">
      <summary>서식 지정을 제어하는 개체를 검색하기 위한 메커니즘을 제공합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IFormatProvider.GetFormat(System.Type)">
      <summary>지정된 형식에 대한 형식 지정 서비스를 제공하는 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.IFormatProvider" /> 구현에서 해당 형식의 개체를 제공할 수 있으면 <paramref name="formatType" />에 지정된 개체의 인스턴스이고, 그렇지 않으면 null입니다.</returns>
      <param name="formatType">반환할 형식 개체의 형식을 지정하는 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.IFormattable">
      <summary>개체 값을 문자열 표현으로 형식 지정하는 기능을 제공합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
      <summary>지정된 형식을 사용하여 현재 인스턴스 값의 형식을 지정합니다.</summary>
      <returns>지정된 형식의 현재 인스턴스 값입니다.</returns>
      <param name="format">사용할 형식입니다.또는 <see cref="T:System.IFormattable" /> 구현의 형식에 정의된 기본 형식을 사용하기 위한 null 참조(Visual Basic의 경우 Nothing)입니다. </param>
      <param name="formatProvider">값에 형식을 지정하기 위해 사용할 공급자입니다.또는 운영 체제의 현재 로캘 설정에서 숫자 형식 정보를 가져오기 위한 null 참조(Visual Basic의 경우 Nothing)입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IndexOutOfRangeException">
      <summary>해당 범위 외부에 있는 인덱스를 사용하여 배열 또는 컬렉션의 요소에 액세스하려고 할 때 throw되는 예외입니다. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IndexOutOfRangeException.#ctor">
      <summary>
        <see cref="T:System.IndexOutOfRangeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.IndexOutOfRangeException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.IndexOutOfRangeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다. </param>
    </member>
    <member name="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.IndexOutOfRangeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외의 원인인 예외입니다.<paramref name="innerException" /> 매개 변수가 null 참조(Visual Basic에서는 Nothing)가 아니면, 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.InsufficientExecutionStackException">
      <summary>대부분의 메서드를 실행하기 위한 실행 스택이 부족할 때 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.InsufficientExecutionStackException.#ctor">
      <summary>
        <see cref="T:System.InsufficientExecutionStackException" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.InsufficientExecutionStackException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.InsufficientExecutionStackException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
    </member>
    <member name="M:System.InsufficientExecutionStackException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.InsufficientExecutionStackException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.<paramref name="inner" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.Int16">
      <summary>부호 있는 16비트 정수를 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.CompareTo(System.Int16)">
      <summary>이 인스턴스를 지정된 16비트 부호 있는 정수와 비교하고 이 인스턴스의 값이 지정된 16비트 부호 있는 정수보다 작은지, 같은지 또는 큰지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">비교할 정수입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.Equals(System.Int16)">
      <summary>이 인스턴스가 지정된 <see cref="T:System.Int16" /> 값과 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 이 인터페이스와 같은 값을 가지면 <paramref name="obj" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 <see cref="T:System.Int16" /> 값입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.Equals(System.Object)">
      <summary>이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 <paramref name="obj" />의 인스턴스이고 이 인스턴스의 값과 같으면 <see cref="T:System.Int16" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Int16.MaxValue">
      <summary>
        <see cref="T:System.Int16" />의 최대값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Int16.MinValue">
      <summary>
        <see cref="T:System.Int16" />의 최소값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String)">
      <summary>숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 있는 수에 해당하는 16비트 부호 있는 정수입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>지정된 스타일로 된 숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 수에 해당하는 16비트 부호 있는 정수입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. -or-<paramref name="s" /> includes non-zero fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 수에 해당하는 16비트 부호 있는 정수입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 서식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" />입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. -or-<paramref name="s" /> includes non-zero fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String,System.IFormatProvider)">
      <summary>지정된 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 수에 해당하는 16비트 부호 있는 정수입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 서식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" />입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.System#IComparable#CompareTo(System.Object)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 순서를 나타내는 부호 있는 정수입니다.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Int16" />. </exception>
    </member>
    <member name="M:System.Int16.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Int16.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>현재 인스턴스의 값이 0이 아니면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Byte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Char" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 변환은 지원되지 않습니다.값이 반환되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Decimal" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Double" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>변경되지 않은 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.SByte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Single" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <paramref name="type" />으로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="type">이 <see cref="T:System.Int16" /> 값을 변환할 대상 형식입니다.</param>
      <param name="provider">반환된 값의 형식에 대한 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 구현입니다.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>변경되지 않은 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int16.ToString">
      <summary>이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>음수 부호(값이 음수일 경우)와 0부터 9 사이의 숫자(앞에 오는 0은 사용하지 않음)들로 구성된 이 인스턴스의 값에 대한 문자열 표현입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.ToString(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값을 <paramref name="provider" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="provider">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" />입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.ToString(System.String)">
      <summary>지정된 형식을 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값을 <paramref name="format" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="format">숫자 서식 문자열입니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.ToString(System.String,System.IFormatProvider)">
      <summary>지정된 형식 및 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="format" /> 및 <paramref name="provider" />로 지정된 이 인스턴스 값의 문자열 표현입니다.</returns>
      <param name="format">숫자 서식 문자열입니다.</param>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)">
      <summary>지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다.이 문자열은 <paramref name="style" />이 지정하는 스타일을 사용하여 해석됩니다.</param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자에 해당하는 16비트 부호 있는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, 형식이 <paramref name="style" />과 호환되지 않거나, <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.TryParse(System.String,System.Int16@)">
      <summary>숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자에 해당하는 16비트 부호 있는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, 형식이 올바르지 않거나, <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Int32">
      <summary>부호 있는 32비트 정수를 나타냅니다.이 형식에 대한 .NET Framework 소스 코드를 찾아보려면 참조 원본을 참조하세요.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.CompareTo(System.Int32)">
      <summary>이 인스턴스를 지정된 32비트 부호 있는 정수와 비교하여 상대 값의 표시를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">비교할 정수입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.Equals(System.Int32)">
      <summary>이 인스턴스가 지정된 <see cref="T:System.Int32" /> 값과 같은지를 나타내는 값을 반환합니다. </summary>
      <returns>true가 이 인터페이스와 같은 값을 가지면 <paramref name="obj" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 <see cref="T:System.Int32" /> 값입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.Equals(System.Object)">
      <summary>이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 <paramref name="obj" />의 인스턴스이고 이 인스턴스의 값과 같으면 <see cref="T:System.Int32" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Int32.MaxValue">
      <summary>
        <see cref="T:System.Int32" />의 최대값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Int32.MinValue">
      <summary>
        <see cref="T:System.Int32" />의 최소값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String)">
      <summary>숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 있는 수에 해당하는 32비트 부호 있는 정수입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>지정된 스타일로 된 숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 숫자에 해당하는 32비트 부호 있는 정수입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 수에 해당하는 32비트 부호 있는 정수입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <param name="provider">
        <paramref name="s" />의 형식에 대한 문화권별 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String,System.IFormatProvider)">
      <summary>지정된 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 수에 해당하는 32비트 부호 있는 정수입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.System#IComparable#CompareTo(System.Object)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 순서를 나타내는 부호 있는 정수입니다.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an <see cref="T:System.Int32" />. </exception>
    </member>
    <member name="M:System.Int32.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>현재 인스턴스의 값이 0이 아니면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Byte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Char" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 변환은 지원되지 않습니다.값이 반환되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>
        <see cref="T:System.Decimal" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Double" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int16" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>변경되지 않은 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.SByte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Single" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <paramref name="type" />으로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="type">이 <see cref="T:System.Int32" /> 값을 변환할 대상 형식입니다.</param>
      <param name="provider">반환된 값의 형식에 대한 정보를 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt16" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int32.ToString">
      <summary>이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>음수 부호(값이 음수일 경우)와 0부터 9 사이의 숫자(앞에 오는 0은 사용하지 않음)들로 구성된 이 인스턴스의 값에 대한 문자열 표현입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.ToString(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값을 <paramref name="provider" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.ToString(System.String)">
      <summary>지정된 형식을 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값을 <paramref name="format" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="format">표준 또는 사용자 지정 숫자 서식 문자열입니다.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.ToString(System.String,System.IFormatProvider)">
      <summary>지정된 형식 및 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="format" /> 및 <paramref name="provider" />로 지정된 이 인스턴스 값의 문자열 표현입니다.</returns>
      <param name="format">표준 또는 사용자 지정 숫자 서식 문자열입니다.</param>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
      <summary>지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.반환 값은 변환의 성공 여부를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다.이 문자열은 <paramref name="style" />이 지정하는 스타일을 사용하여 해석됩니다.</param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자의 32비트 부호 있는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, 형식이 <paramref name="style" />과 호환되지 않거나, <see cref="F:System.Int32.MinValue" />보다 작거나 <see cref="F:System.Int32.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.TryParse(System.String,System.Int32@)">
      <summary>숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.반환 값은 변환의 성공 여부를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자의 32비트 부호 있는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, 형식이 올바르지 않거나, <see cref="F:System.Int32.MinValue" />보다 작거나 <see cref="F:System.Int32.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Int64">
      <summary>부호 있는 64비트 정수를 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.CompareTo(System.Int64)">
      <summary>이 인스턴스를 지정된 64비트 부호 있는 정수와 비교하여 상대 값의 표시를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">비교할 정수입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.Equals(System.Int64)">
      <summary>이 인스턴스가 지정된 <see cref="T:System.Int64" /> 값과 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 이 인터페이스와 같은 값을 가지면 <paramref name="obj" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 <see cref="T:System.Int64" /> 값입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.Equals(System.Object)">
      <summary>이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 <paramref name="obj" />의 인스턴스이고 이 인스턴스의 값과 같으면 <see cref="T:System.Int64" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Int64.MaxValue">
      <summary>Int64의 최대값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Int64.MinValue">
      <summary>Int64의 최소값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String)">
      <summary>숫자의 문자열 표현을 해당하는 64비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 있는 수에 해당하는 64비트 부호 있는 정수입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>지정된 스타일로 된 숫자의 문자열 표현을 해당하는 64비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 숫자에 해당하는 64비트 부호 있는 정수입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="style">
        <see cref="T:System.Globalization.NumberStyles" />에 사용할 수 있는 형식을 나타내는 <paramref name="s" /> 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.-or-<paramref name="style" /> supports fractional digits but <paramref name="s" /> includes non-zero fractional digits. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 64비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 수에 해당하는 64비트 부호 있는 정수입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 서식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" />입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. -or-<paramref name="style" /> supports fractional digits, but <paramref name="s" /> includes non-zero fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String,System.IFormatProvider)">
      <summary>지정된 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 64비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 숫자에 해당하는 64비트 부호 있는 정수입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.System#IComparable#CompareTo(System.Object)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 순서를 나타내는 부호 있는 정수입니다.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an <see cref="T:System.Int64" />. </exception>
    </member>
    <member name="M:System.Int64.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Int64.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>현재 인스턴스의 값이 0이 아니면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Byte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Char" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 변환은 지원되지 않습니다.값이 반환되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Decimal" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Double" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int16" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>변경되지 않은 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.SByte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Single" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <paramref name="type" />으로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="type">이 <see cref="T:System.Int64" /> 값을 변환할 대상 형식입니다.</param>
      <param name="provider">반환된 값의 형식에 대한 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 구현입니다.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt16" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Int64.ToString">
      <summary>이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>음수 부호(값이 음수일 경우)와 0부터 9 사이의 숫자(앞에 오는 0은 사용하지 않음)들로 구성된 이 인스턴스의 값에 대한 문자열 표현입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.ToString(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값을 <paramref name="provider" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="provider">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" />입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.ToString(System.String)">
      <summary>지정된 형식을 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값을 <paramref name="format" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="format">숫자 서식 문자열입니다.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.ToString(System.String,System.IFormatProvider)">
      <summary>지정된 형식 및 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="format" /> 및 <paramref name="provider" />로 지정된 이 인스턴스 값의 문자열 표현입니다.</returns>
      <param name="format">숫자 서식 문자열입니다.</param>
      <param name="provider">이 인스턴스에 대한 문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)">
      <summary>지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 64비트 부호 있는 정수로 변환합니다.반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다.이 문자열은 <paramref name="style" />이 지정하는 스타일을 사용하여 해석됩니다.</param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자의 64비트 부호 있는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, 형식이 <paramref name="style" />과 호환되지 않거나, <see cref="F:System.Int64.MinValue" />보다 작거나 <see cref="F:System.Int64.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.TryParse(System.String,System.Int64@)">
      <summary>숫자의 문자열 표현을 해당하는 64비트 부호 있는 정수로 변환합니다.반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자의 64비트 부호 있는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, 형식이 올바르지 않거나, <see cref="F:System.Int64.MinValue" />보다 작거나 <see cref="F:System.Int64.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.IntPtr">
      <summary>포인터나 핸들을 나타내는 데 사용되는 플랫폼별 형식입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.#ctor(System.Int32)">
      <summary>지정된 32비트 포인터나 핸들을 사용하여 <see cref="T:System.IntPtr" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">32비트의 부호 있는 정수에 들어 있는 포인터나 핸들입니다. </param>
    </member>
    <member name="M:System.IntPtr.#ctor(System.Int64)">
      <summary>지정된 64비트 포인터를 사용하여 <see cref="T:System.IntPtr" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">64비트의 부호 있는 정수에 들어 있는 포인터나 핸들입니다. </param>
      <exception cref="T:System.OverflowException">32비트 플랫폼에서 <paramref name="value" />가 너무 크거나 너무 작아서 <see cref="T:System.IntPtr" />로 나타낼 수 없는 경우 </exception>
    </member>
    <member name="M:System.IntPtr.#ctor(System.Void*)">
      <summary>알 수 없는 형식의 지정된 포인터를 사용하여 <see cref="T:System.IntPtr" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">알 수 없는 형식의 포인터입니다. </param>
    </member>
    <member name="M:System.IntPtr.Add(System.IntPtr,System.Int32)">
      <summary>포인터의 값에 오프셋을 더합니다.</summary>
      <returns>
        <paramref name="pointer" />에 <paramref name="offset" /> 더하기를 반영하는 새 포인터입니다.</returns>
      <param name="pointer">오프셋을 더할 포인터입니다.</param>
      <param name="offset">더할 오프셋입니다.</param>
    </member>
    <member name="M:System.IntPtr.Equals(System.Object)">
      <summary>이 인스턴스가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="obj" />가 <see cref="T:System.IntPtr" />의 인스턴스이고 이 인스턴스의 값과 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IntPtr.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)">
      <summary>포인터의 값에 오프셋을 더합니다.</summary>
      <returns>
        <paramref name="pointer" />에 <paramref name="offset" /> 더하기를 반영하는 새 포인터입니다.</returns>
      <param name="pointer">오프셋을 더할 포인터입니다.</param>
      <param name="offset">더할 오프셋입니다.</param>
    </member>
    <member name="M:System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)">
      <summary>
        <see cref="T:System.IntPtr" />의 지정된 두 인스턴스가 같은지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="value1" />이 <paramref name="value2" />와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value1">비교할 첫 번째 포인터 또는 핸들입니다.</param>
      <param name="value2">비교할 두 번째 포인터 또는 핸들입니다.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.Int32)~System.IntPtr">
      <summary>32비트의 부호 있는 정수의 값을 <see cref="T:System.IntPtr" />로 변환합니다.</summary>
      <returns>
        <paramref name="value" />로 초기화된 <see cref="T:System.IntPtr" />의 새 인스턴스입니다.</returns>
      <param name="value">32비트 부호 있는 정수입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.Int64)~System.IntPtr">
      <summary>64비트의 부호 있는 정수의 값을 <see cref="T:System.IntPtr" />로 변환합니다.</summary>
      <returns>
        <paramref name="value" />로 초기화된 <see cref="T:System.IntPtr" />의 새 인스턴스입니다.</returns>
      <param name="value">64비트 부호 있는 정수입니다. </param>
      <exception cref="T:System.OverflowException">32비트 플랫폼에서 <paramref name="value" />가 너무 커서 <see cref="T:System.IntPtr" />로 나타낼 수 없는 경우 </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int64">
      <summary>지정된 <see cref="T:System.IntPtr" />의 값을 64비트의 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="value" />의 내용입니다.</returns>
      <param name="value">변환할 포인터 또는 핸들입니다.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Void*">
      <summary>지정된 <see cref="T:System.IntPtr" />의 값을 알 수 없는 형식의 포인터로 변환합니다.</summary>
      <returns>
        <paramref name="value" />의 내용입니다.</returns>
      <param name="value">변환할 포인터 또는 핸들입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int32">
      <summary>지정된 <see cref="T:System.IntPtr" />의 값을 32비트의 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="value" />의 내용입니다.</returns>
      <param name="value">변환할 포인터 또는 핸들입니다.</param>
      <exception cref="T:System.OverflowException">64비트 플랫폼에서 <paramref name="value" />의 값이 너무 커서 32비트의 부호 있는 정수로 나타낼 수 없는 경우 </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.Void*)~System.IntPtr">
      <summary>알 수 없는 형식의 지정된 포인터를 <see cref="T:System.IntPtr" />로 변환합니다.</summary>
      <returns>
        <paramref name="value" />로 초기화된 <see cref="T:System.IntPtr" />의 새 인스턴스입니다.</returns>
      <param name="value">알 수 없는 형식의 포인터입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)">
      <summary>
        <see cref="T:System.IntPtr" />의 지정된 두 인스턴스가 같지 않은지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="value1" />이 <paramref name="value2" />와 같지 않으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value1">비교할 첫 번째 포인터 또는 핸들입니다. </param>
      <param name="value2">비교할 두 번째 포인터 또는 핸들입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)">
      <summary>포인터의 값에서 오프셋을 뺍니다.</summary>
      <returns>
        <paramref name="pointer" />에서 <paramref name="offset" /> 빼기를 반영하는 새 포인터입니다.</returns>
      <param name="pointer">오프셋을 뺄 포인터입니다.</param>
      <param name="offset">뺄 오프셋입니다.</param>
    </member>
    <member name="P:System.IntPtr.Size">
      <summary>이 인스턴스의 크기를 가져옵니다.</summary>
      <returns>이 프로세스에서 바이트로 측정된 포인터나 핸들의 크기입니다.이 속성의 값은 32비트 프로세스에서 4이고, 64비트 프로세스에서 8입니다.코드를 C# 및 Visual Basic 컴파일러로 컴파일할 때 /platform 스위치를 설정하여 프로세스 유형을 정의할 수 있습니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.Subtract(System.IntPtr,System.Int32)">
      <summary>포인터의 값에서 오프셋을 뺍니다.</summary>
      <returns>
        <paramref name="pointer" />에서 <paramref name="offset" /> 빼기를 반영하는 새 포인터입니다.</returns>
      <param name="pointer">오프셋을 뺄 포인터입니다.</param>
      <param name="offset">뺄 오프셋입니다.</param>
    </member>
    <member name="M:System.IntPtr.ToInt32">
      <summary>이 인스턴스의 값을 32비트의 부호 있는 정수로 변환합니다.</summary>
      <returns>이 인스턴스의 값과 같은 32비트의 부호 있는 정수입니다.</returns>
      <exception cref="T:System.OverflowException">64비트 플랫폼에서 이 인스턴스의 값이 너무 크거나 너무 작아서 32비트의 부호 있는 정수로 나타낼 수 없는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToInt64">
      <summary>이 인스턴스의 값을 64비트의 부호 있는 정수로 변환합니다.</summary>
      <returns>이 인스턴스의 값과 같은 64비트의 부호 있는 정수입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToPointer">
      <summary>이 인스턴스의 값을 알 수 없는 형식의 포인터로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Void" />의 포인터 즉, 알 수 없는 형식의 데이터가 들어 있는 메모리에 대한 포인터입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToString">
      <summary>현재 <see cref="T:System.IntPtr" /> 개체의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값에 대한 문자열 표현입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToString(System.String)">
      <summary>현재 <see cref="T:System.IntPtr" /> 개체의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>현재 <see cref="T:System.IntPtr" /> 개체 값의 문자열 표현입니다.</returns>
      <param name="format">현재 <see cref="T:System.IntPtr" /> 개체를 변환하는 방법을 결정하는 형식 지정 사양입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.IntPtr.Zero">
      <summary>0으로 초기화된 포인터나 핸들을 나타내는 읽기 전용 필드입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.InvalidCastException">
      <summary>잘못된 캐스팅 또는 명시적 변환에 대해 throw되는 예외입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.InvalidCastException.#ctor">
      <summary>
        <see cref="T:System.InvalidCastException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.InvalidCastException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다. </param>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.InvalidCastException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
      <summary>지정된 메시지와 오류 코드를 사용하여 <see cref="T:System.InvalidCastException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외가 발생한 이유를 나타내는 메시지입니다.</param>
      <param name="errorCode">예외와 관련된 오류 코드(HRESULT) 값입니다.</param>
    </member>
    <member name="T:System.InvalidOperationException">
      <summary>메서드 호출이 개체의 현재 상태에 대해 유효하지 않을 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.InvalidOperationException.#ctor">
      <summary>
        <see cref="T:System.InvalidOperationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.InvalidOperationException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.InvalidOperationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다. </param>
    </member>
    <member name="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.InvalidOperationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외의 원인인 예외입니다.<paramref name="innerException" /> 매개 변수가 null 참조(Visual Basic에서는 Nothing)가 아니면, 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.InvalidProgramException">
      <summary>프로그램에 잘못된 MSIL(Microsoft Intermediate Language) 또는 메타데이터가 있을 경우 throw되는 예외입니다.일반적으로 이것은 프로그램이 생성된 컴파일러의 버그를 나타냅니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.InvalidProgramException.#ctor">
      <summary>기본 속성을 사용하여 <see cref="T:System.InvalidProgramException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.InvalidProgramException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.InvalidProgramException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
    </member>
    <member name="M:System.InvalidProgramException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.InvalidProgramException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="inner">현재 예외의 원인이 되는 예외입니다.<paramref name="inner" /> 매개 변수가 null 참조(Visual Basic에서는 Nothing)가 아니면, 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.InvalidTimeZoneException">
      <summary>표준 시간대 정보가 잘못된 경우 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor">
      <summary>시스템 제공 메시지를 사용하여 <see cref="T:System.InvalidTimeZoneException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor(System.String)">
      <summary>지정된 메시지 문자열을 사용하여 <see cref="T:System.InvalidTimeZoneException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외를 설명하는 문자열입니다.</param>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.InvalidTimeZoneException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외를 설명하는 문자열입니다.    </param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.  </param>
    </member>
    <member name="T:System.IObservable`1">
      <summary>푸시 기반 알림을 위한 공급자를 정의합니다.</summary>
      <typeparam name="T">알림 정보를 제공하는 개체입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
    </member>
    <member name="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
      <summary>옵서버가 알림을 받을 것임을 공급자에 알립니다.</summary>
      <returns>공급자가 알림 전송을 완료하기 전에 관찰자가 알림 수신을 중지할 수 있는 인터페이스에 대한 참조입니다.</returns>
      <param name="observer">알림을 받을 개체입니다.</param>
    </member>
    <member name="T:System.IObserver`1">
      <summary>푸시 기반 알림을 받기 위한 메커니즘을 제공합니다.</summary>
      <typeparam name="T">알림 정보를 제공하는 개체입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
    </member>
    <member name="M:System.IObserver`1.OnCompleted">
      <summary>공급자가 푸시 기반 알림 보내기를 완료했음을 옵서버에 알립니다.</summary>
    </member>
    <member name="M:System.IObserver`1.OnError(System.Exception)">
      <summary>공급자에 오류 조건이 있음을 옵서버에 알립니다.</summary>
      <param name="error">오류에 대한 추가 정보를 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.IObserver`1.OnNext(`0)">
      <summary>옵서버에 새 데이터를 제공합니다.</summary>
      <param name="value">현재 알림 정보입니다.</param>
    </member>
    <member name="T:System.IProgress`1">
      <summary>진행률 업데이트에 대한 공급자를 정의합니다.</summary>
      <typeparam name="T">진행률 업데이트 값의 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
    </member>
    <member name="M:System.IProgress`1.Report(`0)">
      <summary>진행률 업데이트를 보고합니다.</summary>
      <param name="value">업데이트된 진행률 값입니다.</param>
    </member>
    <member name="T:System.Lazy`1">
      <summary>초기화 지연에 대한 지원을 제공합니다.</summary>
      <typeparam name="T">초기화 지연할 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Lazy`1.#ctor">
      <summary>
        <see cref="T:System.Lazy`1" /> 클래스의 새 인스턴스를 초기화합니다.초기화 지연이 발생하면 대상 형식의 기본 생성자가 사용됩니다.</summary>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Boolean)">
      <summary>
        <see cref="T:System.Lazy`1" /> 클래스의 새 인스턴스를 초기화합니다.초기화 지연이 발생하면 대상 형식의 기본 생성자 및 지정된 초기화 모드가 사용됩니다.</summary>
      <param name="isThreadSafe">이 인스턴스가 여러 스레드에서 동시에 사용될 수 있게 하려면 true이고, 한 번에 한 스레드에서만 사용될 수 있게 하려면 false입니다. </param>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0})">
      <summary>
        <see cref="T:System.Lazy`1" /> 클래스의 새 인스턴스를 초기화합니다.초기화 지연이 발생하면 지정된 초기화 함수가 사용됩니다.</summary>
      <param name="valueFactory">필요할 때 초기화 지연된 값을 생성하도록 호출된 대리자입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="valueFactory" />가 null입니다. </exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0},System.Boolean)">
      <summary>
        <see cref="T:System.Lazy`1" /> 클래스의 새 인스턴스를 초기화합니다.초기화 지연이 발생하면 지정된 초기화 함수 및 초기화 모드가 사용됩니다.</summary>
      <param name="valueFactory">필요할 때 초기화 지연된 값을 생성하도록 호출된 대리자입니다.</param>
      <param name="isThreadSafe">이 인스턴스가 여러 스레드에서 동시에 사용될 수 있게 하려면 true이고, 한 번에 한 스레드에서만 사용될 수 있게 하려면 false입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="valueFactory" />가 null입니다. </exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0},System.Threading.LazyThreadSafetyMode)">
      <summary>지정된 초기화 함수 및 스레드로부터 안전한 모드를 사용하는 <see cref="T:System.Lazy`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="valueFactory">필요할 때 초기화 지연된 값을 생성하도록 호출된 대리자입니다.</param>
      <param name="mode">스레드로부터 안전한 모드를 지정하는 열거형 값 중 하나입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" />에 잘못된 값이 포함된 경우 </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="valueFactory" />가 null입니다. </exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Threading.LazyThreadSafetyMode)">
      <summary>
        <paramref name="T" />의 기본 생성자 및 스레드로부터 안전한 지정된 모드를 사용하는 <see cref="T:System.Lazy`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="mode">스레드로부터 안전한 모드를 지정하는 열거형 값 중 하나입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" />에 잘못된 값이 포함된 경우 </exception>
    </member>
    <member name="P:System.Lazy`1.IsValueCreated">
      <summary>값이 이 <see cref="T:System.Lazy`1" /> 인스턴스에 대해 만들어졌는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>값이 이 <see cref="T:System.Lazy`1" /> 인스턴스에 대해 만들어졌으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Lazy`1.ToString">
      <summary>이 인스턴스의 <see cref="P:System.Lazy`1.Value" /> 속성에 대한 문자열 표현을 만들고 반환합니다.</summary>
      <returns>값이 만들어졌으면(즉, <see cref="P:System.Lazy`1.IsValueCreated" /> 속성이 true를 반환하면) 이 인스턴스의 <see cref="P:System.Lazy`1.Value" /> 속성에 대해 <see cref="M:System.Object.ToString" /> 메서드를 호출한 결과이고,그렇지 않으면 값이 만들어지지 않았음을 나타내는 문자열입니다.</returns>
      <exception cref="T:System.NullReferenceException">
        <see cref="P:System.Lazy`1.Value" /> 속성이 null일 경우(이 속성은</exception>
    </member>
    <member name="P:System.Lazy`1.Value">
      <summary>현재 <see cref="T:System.Lazy`1" /> 인스턴스의 초기화 지연된 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Lazy`1" /> 인스턴스의 초기화 지연된 값입니다.</returns>
      <exception cref="T:System.MemberAccessException">
        <see cref="T:System.Lazy`1" /> 인스턴스가 초기화 지연되는 형식의 기본 생성자를 사용하도록 초기화되고 생성자에 액세스할 수 있는 권한이 없는 경우 </exception>
      <exception cref="T:System.MissingMemberException">
        <see cref="T:System.Lazy`1" /> 인스턴스가 초기화 지연되는 형식의 기본 생성자를 사용하도록 초기화되고 해당 형식에 매개 변수가 없는 공용 생성자가 없는 경우 </exception>
      <exception cref="T:System.InvalidOperationException">초기화 함수에서 이 인스턴스의 <see cref="P:System.Lazy`1.Value" />에 액세스하려는 경우 </exception>
    </member>
    <member name="T:System.Lazy`2">
      <summary>Managed Extensibility Framework에서 사용할 개체 및 연결된 메타데이터에 대한 지연 간접 참조를 제공합니다.</summary>
      <typeparam name="T">참조되는 개체의 형식입니다.</typeparam>
      <typeparam name="TMetadata">메타데이터의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Lazy`2.#ctor(System.Func{`0},`1)">
      <summary>참조되는 개체를 가져오기 위해 지정된 함수를 사용하는 지정된 메타데이터를 사용하여 <see cref="T:System.Lazy`2" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="valueFactory">참조되는 개체를 반환하는 함수입니다.</param>
      <param name="metadata">참조되는 개체와 연결된 메타데이터입니다.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)">
      <summary>참조되는 개체를 가져오기 위해 지정된 함수를 사용하는 지정된 메타데이터 및 스레드로부터 안전한 값을 사용하여 <see cref="T:System.Lazy`2" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="valueFactory">참조되는 개체를 반환하는 함수입니다.</param>
      <param name="metadata">참조되는 개체와 연결된 메타데이터입니다.</param>
      <param name="isThreadSafe">만든 <see cref="T:System.Lazy`2" /> 개체가 스레드로부터 안전할지 여부를 나타냅니다.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)">
      <summary>지정된 함수를 통해 참조되는 개체를 가져오는 지정된 메타데이터 및 스레드 동기화 모드를 사용하여 <see cref="T:System.Lazy`2" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="valueFactory">참조되는 개체를 반환하는 함수입니다.</param>
      <param name="metadata">참조되는 개체와 연결된 메타데이터입니다.</param>
      <param name="mode">스레드 동기화 모드입니다.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(`1)">
      <summary>지정된 메타데이터를 사용하여 <see cref="T:System.Lazy`2" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="metadata">참조되는 개체와 연결된 메타데이터입니다.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(`1,System.Boolean)">
      <summary>지정된 메타데이터 및 스레드로부터 안전한 값을 사용하여 <see cref="T:System.Lazy`2" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="metadata">참조되는 개체와 연결된 메타데이터입니다.</param>
      <param name="isThreadSafe">만든 <see cref="T:System.Lazy`2" /> 개체가 스레드로부터 안전할지 여부를 나타냅니다.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)">
      <summary>지정된 메타데이터 및 스레드 동기화 모드를 사용하여 <see cref="T:System.Lazy`2" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="metadata">참조되는 개체와 연결된 메타데이터입니다.</param>
      <param name="mode">스레드 동기화 모드입니다.</param>
    </member>
    <member name="P:System.Lazy`2.Metadata">
      <summary>참조되는 개체와 연결된 메타데이터를 가져옵니다.</summary>
      <returns>참조되는 개체와 연결된 메타데이터입니다.</returns>
    </member>
    <member name="T:System.MemberAccessException">
      <summary>클래스 멤버에 액세스하지 못했을 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MemberAccessException.#ctor">
      <summary>
        <see cref="T:System.MemberAccessException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.MemberAccessException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.MemberAccessException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다. </param>
    </member>
    <member name="M:System.MemberAccessException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.MemberAccessException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="inner">현재 예외의 원인이 되는 예외입니다.<paramref name="inner" /> 매개 변수가 null 참조(Visual Basic에서는 Nothing)가 아니면, 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.MethodAccessException">
      <summary>부분적으로 신뢰할 수 있는 코드에서 전용 메서드에 액세스하는 것과 같이 메서드에 대해 잘못된 액세스를 시도했을 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MethodAccessException.#ctor">
      <summary>
        <see cref="T:System.MethodAccessException" /> 클래스의 새 인스턴스를 초기화하고, 새 인스턴스의 <see cref="P:System.Exception.Message" /> 속성을 오류를 설명하는 시스템 제공 메시지(예: "메서드에 액세스하지 못했습니다.")로 설정합니다. 이 메시지는 현재 시스템의 문화권을 따릅니다.</summary>
    </member>
    <member name="M:System.MethodAccessException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.MethodAccessException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다. </param>
    </member>
    <member name="M:System.MethodAccessException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.MethodAccessException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="inner">현재 예외의 원인이 되는 예외입니다.<paramref name="inner" /> 매개 변수가 null 참조(Visual Basic에서는 Nothing)가 아니면, 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.MissingFieldException">
      <summary>존재하지 않는 필드를 동적으로 액세스하려고 할 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MissingFieldException.#ctor">
      <summary>
        <see cref="T:System.MissingFieldException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.MissingFieldException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.MissingFieldException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다. </param>
    </member>
    <member name="M:System.MissingFieldException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.MissingFieldException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="inner">현재 예외의 원인이 되는 예외입니다.<paramref name="inner" /> 매개 변수가 null 참조(Visual Basic에서는 Nothing)가 아니면, 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="P:System.MissingFieldException.Message">
      <summary>손실된 필드의 시그니처, 클래스 이름 및 필드 이름을 나타내는 텍스트 문자열을 가져옵니다.이 속성은 읽기 전용입니다.</summary>
      <returns>오류 메시지 문자열입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.MissingMemberException">
      <summary>존재하지 않는 클래스 멤버에 동적으로 액세스하려고 할 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MissingMemberException.#ctor">
      <summary>
        <see cref="T:System.MissingMemberException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.MissingMemberException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.MissingMemberException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다. </param>
    </member>
    <member name="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.MissingMemberException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="inner">현재 Exception의 원인인 <see cref="T:System.Exception" />의 인스턴스입니다.<paramref name="inner" />가 null 참조(Visual Basic에서는 Nothing)가 아니면 현재 Exception이 <paramref name="inner" />를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="P:System.MissingMemberException.Message">
      <summary>손실된 멤버의 클래스 이름, 멤버 이름 및 시그니처를 나타내는 텍스트 문자열을 가져옵니다.</summary>
      <returns>오류 메시지 문자열입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.MissingMethodException">
      <summary>존재하지 않는 메서드를 동적으로 액세스하려고 할 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MissingMethodException.#ctor">
      <summary>
        <see cref="T:System.MissingMethodException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.MissingMethodException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.MissingMethodException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다. </param>
    </member>
    <member name="M:System.MissingMethodException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.MissingMethodException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="inner">현재 예외의 원인이 되는 예외입니다.<paramref name="inner" /> 매개 변수가 null 참조(Visual Basic에서는 Nothing)가 아니면, 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="P:System.MissingMethodException.Message">
      <summary>손실된 메서드의 클래스 이름, 메서드 이름 및 시그니처를 나타내는 텍스트 문자열을 가져옵니다.이 속성은 읽기 전용입니다.</summary>
      <returns>오류 메시지 문자열입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.MTAThreadAttribute">
      <summary>응용 프로그램의 COM 스레딩 모델이 MTA(다중 스레드 아파트)인지를 나타냅니다. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.MTAThreadAttribute.#ctor">
      <summary>
        <see cref="T:System.MTAThreadAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.MulticastDelegate">
      <summary>멀티캐스트 대리자 즉, 해당 호출 목록에 둘 이상의 요소를 가질 수 있는 대리자를 나타냅니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.Equals(System.Object)">
      <summary>이 멀티캐스트 대리자와 지정된 개체가 같은지를 확인합니다.</summary>
      <returns>
        <paramref name="obj" /> 및 이 인스턴스가 같은 호출 목록을 가지면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다. </param>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.GetInvocationList">
      <summary>호출 순서대로 이 멀티캐스트 대리자의 호출 목록을 반환합니다.</summary>
      <returns>호출 목록 전체가 이 인스턴스의 호출 목록과 일치하는 대리자의 배열입니다.</returns>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.op_Equality(System.MulticastDelegate,System.MulticastDelegate)">
      <summary>두 <see cref="T:System.MulticastDelegate" /> 개체가 서로 같은지 확인합니다.</summary>
      <returns>
        <paramref name="d1" /> 및 <paramref name="d2" />가 같은 호출 목록을 가지면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="d1">왼쪽 피연산자입니다. </param>
      <param name="d2">오른쪽 피연산자입니다. </param>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.op_Inequality(System.MulticastDelegate,System.MulticastDelegate)">
      <summary>두 개의 <see cref="T:System.MulticastDelegate" /> 개체가 다른지를 확인합니다.</summary>
      <returns>
        <paramref name="d1" /> 및 <paramref name="d2" />가 같은 호출 목록을 가지지 않으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="d1">왼쪽 피연산자입니다. </param>
      <param name="d2">오른쪽 피연산자입니다. </param>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.NotImplementedException">
      <summary>요청한 메서드 또는 연산이 구현되지 않을 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.NotImplementedException.#ctor">
      <summary>기본 속성을 사용하여 <see cref="T:System.NotImplementedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.NotImplementedException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.NotImplementedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
    </member>
    <member name="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.NotImplementedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="inner">현재 예외의 원인이 되는 예외입니다.<paramref name="inner" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.NotSupportedException">
      <summary>호출된 메서드가 지원되지 않거나, 호출된 기능을 지원하지 않는 스트림에 읽기, 검색 또는 쓰기를 수행하려고 할 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.NotSupportedException.#ctor">
      <summary>
        <see cref="T:System.NotSupportedException" /> 클래스의 새 인스턴스를 초기화하고, 새 인스턴스의 <see cref="P:System.Exception.Message" /> 속성을 오류를 설명하는 시스템 제공 메시지로 설정합니다.이 메시지는 현재 시스템의 문화권을 따릅니다.</summary>
    </member>
    <member name="M:System.NotSupportedException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.NotSupportedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다.<paramref name="message" /> 내용은 사용자의 이해를 돕기 위한 것입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
    </member>
    <member name="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.NotSupportedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null 참조가 아닌 경우 내부 예외를 처리하는 catch 블록에서 현재 예외가 발생합니다.</param>
    </member>
    <member name="T:System.Nullable">
      <summary>null에 할당할 수 있는 값 형식을 지원합니다.이 클래스는 상속될 수 없습니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable.Compare``1(System.Nullable{``0},System.Nullable{``0})">
      <summary>두 <see cref="T:System.Nullable`1" /> 개체의 상대 값을 비교합니다.</summary>
      <returns>
        <paramref name="n1" /> 및 <paramref name="n2" /> 매개 변수의 상대 값을 나타내는 정수입니다.반환 값설명0보다 작음<paramref name="n1" />의 <see cref="P:System.Nullable`1.HasValue" /> 속성이 false이고 <paramref name="n2" />의 <see cref="P:System.Nullable`1.HasValue" /> 속성이 true입니다.또는<paramref name="n1" />과 <paramref name="n2" />의 <see cref="P:System.Nullable`1.HasValue" /> 속성이 true이고 <paramref name="n1" />의 <see cref="P:System.Nullable`1.Value" /> 속성 값이 <paramref name="n2" />의 <see cref="P:System.Nullable`1.Value" /> 속성 값보다 작습니다.Zero<paramref name="n1" />과 <paramref name="n2" />의 <see cref="P:System.Nullable`1.HasValue" /> 속성이 false입니다.또는<paramref name="n1" />과 <paramref name="n2" />의 <see cref="P:System.Nullable`1.HasValue" /> 속성이 true이고 <paramref name="n1" />의 <see cref="P:System.Nullable`1.Value" /> 속성 값이 <paramref name="n2" />의 <see cref="P:System.Nullable`1.Value" /> 속성 값과 같습니다.0보다 큼<paramref name="n1" />의 <see cref="P:System.Nullable`1.HasValue" /> 속성이 true이고 <paramref name="n2" />의 <see cref="P:System.Nullable`1.HasValue" /> 속성이 false입니다.또는<paramref name="n1" />과 <paramref name="n2" />의 <see cref="P:System.Nullable`1.HasValue" /> 속성이 true이고 <paramref name="n1" />의 <see cref="P:System.Nullable`1.Value" /> 속성 값이 <paramref name="n2" />의 <see cref="P:System.Nullable`1.Value" /> 속성 값보다 큽니다.</returns>
      <param name="n1">
        <see cref="T:System.Nullable`1" /> 개체</param>
      <param name="n2">
        <see cref="T:System.Nullable`1" /> 개체</param>
      <typeparam name="T">
        <paramref name="n1" /> 및 <paramref name="n2" /> 매개 변수의 내부 값 형식입니다.</typeparam>
    </member>
    <member name="M:System.Nullable.Equals``1(System.Nullable{``0},System.Nullable{``0})">
      <summary>지정된 두 <see cref="T:System.Nullable`1" /> 개체가 같은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="n1" /> 매개 변수가 <paramref name="n2" /> 매개 변수와 같으면 true이고, 그렇지 않으면 false입니다. 반환 값은 비교되는 두 매개 변수의 <see cref="P:System.Nullable`1.HasValue" /> 및 <see cref="P:System.Nullable`1.Value" /> 속성에 따라 달라집니다.반환 값설명true<paramref name="n1" />과 <paramref name="n2" />의 <see cref="P:System.Nullable`1.HasValue" /> 속성이 false입니다. 또는<paramref name="n1" />과 <paramref name="n2" />의 <see cref="P:System.Nullable`1.HasValue" /> 속성이 true이고 두 매개 변수의 <see cref="P:System.Nullable`1.Value" /> 속성이 같습니다.false<see cref="P:System.Nullable`1.HasValue" /> 속성이 한 매개 변수의 경우 true이고 다른 매개 변수의 경우 false입니다.또는<paramref name="n1" />과 <paramref name="n2" />의 <see cref="P:System.Nullable`1.HasValue" /> 속성이 true이고 두 매개 변수의 <see cref="P:System.Nullable`1.Value" /> 속성이 같지 않습니다.</returns>
      <param name="n1">
        <see cref="T:System.Nullable`1" /> 개체</param>
      <param name="n2">
        <see cref="T:System.Nullable`1" /> 개체</param>
      <typeparam name="T">
        <paramref name="n1" /> 및 <paramref name="n2" /> 매개 변수의 내부 값 형식입니다.</typeparam>
    </member>
    <member name="M:System.Nullable.GetUnderlyingType(System.Type)">
      <summary>지정된 nullable 형식의 내부 형식 인수를 반환합니다.</summary>
      <returns>
        <paramref name="nullableType" /> 매개 변수가 폐쇄형 제네릭 nullable 형식이면 <paramref name="nullableType" /> 매개 변수의 형식 인수이고, 그렇지 않으면 null입니다. </returns>
      <param name="nullableType">폐쇄형 제네릭 nullable 형식을 설명하는 <see cref="T:System.Type" /> 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nullableType" />가 null입니다.</exception>
    </member>
    <member name="T:System.Nullable`1">
      <summary>null에 할당할 수 있는 값 형식을 나타냅니다.</summary>
      <typeparam name="T">
        <see cref="T:System.Nullable`1" /> 제네릭 형식의 내부 값 형식입니다.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable`1.#ctor(`0)">
      <summary>
        <see cref="T:System.Nullable`1" /> 구조체의 새 인스턴스를 지정된 값으로 초기화합니다. </summary>
      <param name="value">값 형식입니다.</param>
    </member>
    <member name="M:System.Nullable`1.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Nullable`1" /> 개체가 지정된 개체와 같은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="other" /> 매개 변수가 현재 <see cref="T:System.Nullable`1" /> 개체와 같으면 true이고, 다르면 false입니다. 이 표에서는 비교되는 값들의 동일성이 정의되는 방식을 설명합니다. 반환 값설명true<see cref="P:System.Nullable`1.HasValue" /> 속성이 false이고 <paramref name="other" /> 매개 변수가 null입니다.즉, 정의에 따라 두 개의 null 값은 서로 같습니다.또는<see cref="P:System.Nullable`1.HasValue" /> 속성이 true이고 <see cref="P:System.Nullable`1.Value" /> 속성에서 반환되는 값이 <paramref name="other" /> 매개 변수와 같습니다.false현재 <see cref="P:System.Nullable`1.HasValue" /> 구조체의 <see cref="T:System.Nullable`1" /> 속성이 true이고 <paramref name="other" /> 매개 변수가 null입니다.또는현재 <see cref="P:System.Nullable`1.HasValue" /> 구조체의 <see cref="T:System.Nullable`1" /> 속성이 false이고 <paramref name="other" /> 매개 변수가 null이 아닙니다.또는현재 <see cref="P:System.Nullable`1.HasValue" /> 구조체의 <see cref="T:System.Nullable`1" /> 속성이 true이고 <see cref="P:System.Nullable`1.Value" /> 속성에서 반환되는 값이 <paramref name="other" /> 매개 변수와 같지 않습니다.</returns>
      <param name="other">개체입니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable`1.GetHashCode">
      <summary>
        <see cref="P:System.Nullable`1.Value" /> 속성에서 반환하는 개체의 해시 코드를 검색합니다.</summary>
      <returns>
        <see cref="P:System.Nullable`1.HasValue" /> 속성이 true이면 <see cref="P:System.Nullable`1.Value" /> 속성에서 반환하는 개체의 해시 코드이고, <see cref="P:System.Nullable`1.HasValue" /> 속성이 false이면 0입니다. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable`1.GetValueOrDefault">
      <summary>현재 <see cref="T:System.Nullable`1" /> 개체의 값이나 개체의 기본값을 검색합니다.</summary>
      <returns>
        <see cref="P:System.Nullable`1.HasValue" /> 속성이 true이면 <see cref="P:System.Nullable`1.Value" /> 속성의 값이고, 그렇지 않으면 현재 <see cref="T:System.Nullable`1" /> 개체의 기본값입니다.기본값의 형식은 현재 <see cref="T:System.Nullable`1" /> 개체의 형식 인수이고 기본값의 값은 이진 0으로만 이루어져 있습니다.</returns>
    </member>
    <member name="M:System.Nullable`1.GetValueOrDefault(`0)">
      <summary>현재 <see cref="T:System.Nullable`1" /> 개체의 값이나 지정된 기본값을 검색합니다.</summary>
      <returns>
        <see cref="P:System.Nullable`1.HasValue" /> 속성이 true이면 <see cref="P:System.Nullable`1.Value" /> 속성의 값이고, 그렇지 않으면 <paramref name="defaultValue" /> 매개 변수입니다.</returns>
      <param name="defaultValue">
        <see cref="P:System.Nullable`1.HasValue" /> 속성이 false인 경우 반환할 값입니다.</param>
    </member>
    <member name="P:System.Nullable`1.HasValue">
      <summary>현재 <see cref="T:System.Nullable`1" /> 개체에 해당 내부 형식의 올바른 값이 있는지 여부를 나타내는 값을 가져옵니다. </summary>
      <returns>현재 <see cref="T:System.Nullable`1" /> 개체에 값이 있으면 true이고, 현재 <see cref="T:System.Nullable`1" /> 개체에 값이 없으면 false입니다.</returns>
    </member>
    <member name="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
      <summary>
        <see cref="T:System.Nullable`1" /> 인스턴스의 명시적 변환을 해당 내부 값으로 정의합니다. </summary>
      <returns>
        <paramref name="value" /> 매개 변수의 <see cref="P:System.Nullable`1.Value" /> 속성 값입니다.</returns>
      <param name="value">nullable 값입니다.</param>
    </member>
    <member name="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
      <summary>지정된 값으로 초기화된 새 <see cref="T:System.Nullable`1" /> 개체를 만듭니다. </summary>
      <returns>
        <see cref="P:System.Nullable`1.Value" /> 속성이 <paramref name="value" /> 매개 변수로 초기화되는 <see cref="T:System.Nullable`1" /> 개체입니다.</returns>
      <param name="value">값 형식입니다.</param>
    </member>
    <member name="M:System.Nullable`1.ToString">
      <summary>현재 <see cref="T:System.Nullable`1" /> 개체 값의 텍스트 표현을 반환합니다.</summary>
      <returns>
        <see cref="P:System.Nullable`1.HasValue" /> 속성이 true이면 현재 <see cref="T:System.Nullable`1" /> 개체 값의 텍스트 표현이고, <see cref="P:System.Nullable`1.HasValue" /> 속성이 false이면 빈 문자열("")입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Nullable`1.Value">
      <summary>올바른 내부 값이 할당된 경우 현재 <see cref="T:System.Nullable`1" /> 개체의 값을 가져옵니다.</summary>
      <returns>
        <see cref="P:System.Nullable`1.HasValue" /> 속성이 true이면 현재 <see cref="T:System.Nullable`1" /> 개체의 값입니다.<see cref="P:System.Nullable`1.HasValue" /> 속성이 false이면 예외가 throw됩니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Nullable`1.HasValue" /> 속성은 false입니다.</exception>
    </member>
    <member name="T:System.NullReferenceException">
      <summary>null 개체 참조를 역참조하려고 할 때 throw되는 예외입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.NullReferenceException.#ctor">
      <summary>
        <see cref="T:System.NullReferenceException" /> 클래스의 새 인스턴스를 초기화하고, 새 인스턴스의 <see cref="P:System.Exception.Message" /> 속성을 오류를 설명하는 시스템 제공 메시지(예: "개체 인스턴스가 있어야 하는 곳에 'null' 값이 있습니다.")로 설정합니다. 이 메시지는 현재 시스템의 문화권을 따릅니다.</summary>
    </member>
    <member name="M:System.NullReferenceException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.NullReferenceException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다.<paramref name="message" /> 콘텐츠는 사용자의 이해를 돕기 위한 것입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
    </member>
    <member name="M:System.NullReferenceException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.NullReferenceException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외의 원인인 예외입니다.<paramref name="innerException" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.Object">
      <summary>.Net Framework 클래스 계층 구조의 모든 클래스를 지원하며 파생 클래스에 하위 수준 서비스를 제공합니다.또한 .NET Framework의 모든 클래스 중에서 기본 클래스이며 형식 계층 구조의 루트입니다.이 유형의 .NET Framework 소스 코드를 찾아보려면 참조 소스를 참조하세요.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Object.#ctor">
      <summary>
        <see cref="T:System.Object" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Object.Equals(System.Object)">
      <summary>지정한 개체와 현재 개체가 같은지를 확인합니다.</summary>
      <returns>지정한 개체가 현재 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">현재 개체와 비교할 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.Equals(System.Object,System.Object)">
      <summary>지정한 개체 인스턴스가 동일한지를 확인합니다.</summary>
      <returns>개체가 동일한 것으로 간주되면 true이고, 그렇지 않으면 false입니다.<paramref name="objA" /> 및 <paramref name="objB" />가 null인 경우 메서드는 true를 반환합니다.</returns>
      <param name="objA">비교할 첫 번째 개체입니다. </param>
      <param name="objB">비교할 두 번째 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.Finalize">
      <summary>가비지 수집기가 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Object.GetHashCode">
      <summary>기본 해시 함수로 작동합니다. </summary>
      <returns>현재 개체의 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.GetType">
      <summary>현재 인스턴스의 <see cref="T:System.Type" />을 가져옵니다.</summary>
      <returns>현재 인스턴스의 정확한 런타임 형식입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.MemberwiseClone">
      <summary>현재 <see cref="T:System.Object" />의 부분 복사본을 만듭니다.</summary>
      <returns>현재 <see cref="T:System.Object" />의 부분 복사본입니다.</returns>
    </member>
    <member name="M:System.Object.ReferenceEquals(System.Object,System.Object)">
      <summary>지정한 <see cref="T:System.Object" /> 인스턴스가 동일한지를 확인합니다.</summary>
      <returns>
        <paramref name="objA" />와 <paramref name="objB" />의 인스턴스가 같거나 둘 모두 null 참조인 경우에는 true이고 그렇지 않으면 false입니다.</returns>
      <param name="objA">비교할 첫 번째 개체입니다. </param>
      <param name="objB">비교할 두 번째 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.ToString">
      <summary>현재 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns>현재 개체를 나타내는 문자열입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ObjectDisposedException">
      <summary>삭제된 개체에서 연산이 수행될 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ObjectDisposedException.#ctor(System.String)">
      <summary>삭제된 개체의 이름이 포함된 문자열을 사용하여 <see cref="T:System.ObjectDisposedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="objectName">삭제된 개체의 이름이 포함된 문자열입니다. </param>
    </member>
    <member name="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.ObjectDisposedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">@FSHO2@예외 이유를 설명하는 오류 메시지입니다.</param>
      <param name="innerException">현재 예외의 원인인 예외입니다.<paramref name="innerException" />이 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
      <summary>지정된 개체 이름과 메시지를 사용하여 <see cref="T:System.ObjectDisposedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="objectName">해제된 개체의 이름입니다. </param>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
    </member>
    <member name="P:System.ObjectDisposedException.Message">
      <summary>오류를 설명하는 메시지를 가져옵니다.</summary>
      <returns>오류를 설명하는 문자열입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ObjectDisposedException.ObjectName">
      <summary>삭제된 개체의 이름을 가져옵니다.</summary>
      <returns>삭제된 개체의 이름이 포함된 문자열입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.ObsoleteAttribute">
      <summary>더 이상 사용하지 않는 프로그램 요소를 표시합니다.이 클래스는 상속될 수 없습니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ObsoleteAttribute.#ctor">
      <summary>기본 속성을 사용하여 <see cref="T:System.ObsoleteAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ObsoleteAttribute.#ctor(System.String)">
      <summary>지정된 해결 메시지를 사용하여 <see cref="T:System.ObsoleteAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">대체 해결 방법을 설명하는 텍스트 문자열입니다. </param>
    </member>
    <member name="M:System.ObsoleteAttribute.#ctor(System.String,System.Boolean)">
      <summary>해결 메시지와, 오래된 요소를 사용하는 것이 오류로 간주되는지 여부를 나타내는 부울 값을 사용하여 <see cref="T:System.ObsoleteAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">대체 해결 방법을 설명하는 텍스트 문자열입니다. </param>
      <param name="error">오래된 요소를 사용하는 것이 오류로 간주되는지 여부를 나타내는 부울 값입니다. </param>
    </member>
    <member name="P:System.ObsoleteAttribute.IsError">
      <summary>컴파일러에서 오래된 프로그램 요소를 사용하는 것을 오류로 처리하는지 여부를 나타내는 부울 값을 가져옵니다.</summary>
      <returns>오래된 요소를 사용하는 것이 오류로 간주되면 true이고, 그렇지 않으면 false입니다.기본값은 false입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ObsoleteAttribute.Message">
      <summary>대체 프로그램 요소에 대한 설명이 있는 해결 메시지를 가져옵니다.</summary>
      <returns>해결 방법 텍스트 문자열입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.OutOfMemoryException">
      <summary>프로그램을 계속 실행하기 위한 메모리가 부족할 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.OutOfMemoryException.#ctor">
      <summary>
        <see cref="T:System.OutOfMemoryException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.OutOfMemoryException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.OutOfMemoryException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다. </param>
    </member>
    <member name="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.OutOfMemoryException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외의 원인인 예외입니다.<paramref name="innerException" /> 매개 변수가 null 참조(Visual Basic에서는 Nothing)가 아니면, 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.OverflowException">
      <summary>checked 컨텍스트의 산술, 캐스팅 또는 변환 연산으로 인해 오버플로가 발생하는 경우 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.OverflowException.#ctor">
      <summary>
        <see cref="T:System.OverflowException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.OverflowException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.OverflowException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다. </param>
    </member>
    <member name="M:System.OverflowException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.OverflowException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null 참조(Visual Basic에서는 Nothing)가 아니면, 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.ParamArrayAttribute">
      <summary>해당 메서드의 호출 시 여러 가지 인수를 사용할 수 있음을 나타냅니다.이 클래스는 상속될 수 없습니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ParamArrayAttribute.#ctor">
      <summary>기본 속성을 사용하여 <see cref="T:System.ParamArrayAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.PlatformNotSupportedException">
      <summary>특정 플랫폼에서 기능이 실행되지 않을 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.PlatformNotSupportedException.#ctor">
      <summary>기본 속성을 사용하여 <see cref="T:System.PlatformNotSupportedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.PlatformNotSupportedException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.PlatformNotSupportedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 텍스트 메시지입니다. </param>
    </member>
    <member name="M:System.PlatformNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.PlatformNotSupportedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="inner">현재 예외의 원인이 되는 예외입니다.<paramref name="inner" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.Predicate`1">
      <summary>조건 집합을 정의하고 지정된 개체가 이러한 조건을 충족하는지 여부를 확인하는 메서드를 나타냅니다.</summary>
      <typeparam name="T">비교할 개체의 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Predicate`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Predicate`1.BeginInvoke(`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Predicate`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Predicate`1.Invoke(`0)"></member>
    <member name="T:System.RankException">
      <summary>잘못된 차원 수가 들어 있는 배열이 메서드에 전달될 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RankException.#ctor">
      <summary>
        <see cref="T:System.RankException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.RankException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.RankException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다. </param>
    </member>
    <member name="M:System.RankException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.RankException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null 참조(Visual Basic에서는 Nothing)가 아니면, 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.RuntimeFieldHandle">
      <summary>내부 메타데이터 토큰을 사용하여 필드를 나타냅니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.Equals(System.Object)">
      <summary>현재 인스턴스가 지정된 개체와 같은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="obj" />가 <see cref="T:System.RuntimeFieldHandle" />이고 현재 인스턴스의 값과 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">현재 인스턴스와 비교할 개체입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.Equals(System.RuntimeFieldHandle)">
      <summary>현재 인스턴스와 지정된 <see cref="T:System.RuntimeFieldHandle" />이 같은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="handle" />의 값이 현재 인스턴스의 값과 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="handle">현재 인스턴스와 비교할 <see cref="T:System.RuntimeFieldHandle" />입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.GetHashCode">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.op_Equality(System.RuntimeFieldHandle,System.RuntimeFieldHandle)">
      <summary>두 개의 <see cref="T:System.RuntimeFieldHandle" /> 구조체가 같은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="left" />가 <paramref name="right" />와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">
        <paramref name="right" />와 비교할 <see cref="T:System.RuntimeFieldHandle" />입니다.</param>
      <param name="right">
        <paramref name="left" />와 비교할 <see cref="T:System.RuntimeFieldHandle" />입니다.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.op_Inequality(System.RuntimeFieldHandle,System.RuntimeFieldHandle)">
      <summary>두 개의 <see cref="T:System.RuntimeFieldHandle" /> 구조체가 다른지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="left" />가 <paramref name="right" />와 다르면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">
        <paramref name="right" />와 비교할 <see cref="T:System.RuntimeFieldHandle" />입니다.</param>
      <param name="right">
        <paramref name="left" />와 비교할 <see cref="T:System.RuntimeFieldHandle" />입니다.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.RuntimeMethodHandle">
      <summary>
        <see cref="T:System.RuntimeMethodHandle" />은 메서드의 내부 메타데이터 표현에 대한 핸들입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.Equals(System.Object)">
      <summary>이 인스턴스와 지정된 개체가 같은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="obj" />가 <see cref="T:System.RuntimeMethodHandle" />이고 이 인스턴스의 값과 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 <see cref="T:System.Object" />입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.Equals(System.RuntimeMethodHandle)">
      <summary>이 인스턴스와 지정된 <see cref="T:System.RuntimeMethodHandle" />이 같은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="handle" />이 이 인스턴스의 값과 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="handle">이 인스턴스와 비교할 <see cref="T:System.RuntimeMethodHandle" />입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.op_Equality(System.RuntimeMethodHandle,System.RuntimeMethodHandle)">
      <summary>두 <see cref="T:System.RuntimeMethodHandle" /> 인스턴스가 서로 동일한지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="left" />의 값이 <paramref name="right" />와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">
        <paramref name="right" />와 비교할 <see cref="T:System.RuntimeMethodHandle" />입니다.</param>
      <param name="right">
        <paramref name="left" />와 비교할 <see cref="T:System.RuntimeMethodHandle" />입니다.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.op_Inequality(System.RuntimeMethodHandle,System.RuntimeMethodHandle)">
      <summary>두 <see cref="T:System.RuntimeMethodHandle" /> 인스턴스가 서로 다른지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="left" />의 값이 <paramref name="right" />의 값과 다르면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">
        <paramref name="right" />와 비교할 <see cref="T:System.RuntimeMethodHandle" />입니다.</param>
      <param name="right">
        <paramref name="left" />와 비교할 <see cref="T:System.RuntimeMethodHandle" />입니다.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.RuntimeTypeHandle">
      <summary>내부 메타데이터 토큰을 사용하여 형식을 나타냅니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.Equals(System.Object)">
      <summary>지정된 개체가 현재 <see cref="T:System.RuntimeTypeHandle" /> 구조체와 같은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="obj" />가 <see cref="T:System.RuntimeTypeHandle" /> 구조체이고 이 인스턴스의 값과 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">현재 인스턴스와 비교할 개체입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.Equals(System.RuntimeTypeHandle)">
      <summary>지정된 <see cref="T:System.RuntimeTypeHandle" /> 구조체가 현재 <see cref="T:System.RuntimeTypeHandle" /> 구조체와 같은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="handle" />의 값이 이 인스턴스의 값과 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="handle">현재 인스턴스와 비교할 <see cref="T:System.RuntimeTypeHandle" /> 구조체입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.GetHashCode">
      <summary>현재 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Equality(System.Object,System.RuntimeTypeHandle)">
      <summary>개체와 <see cref="T:System.RuntimeTypeHandle" /> 구조체가 같은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="left" />가 <see cref="T:System.RuntimeTypeHandle" /> 구조체이고 <paramref name="right" />와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">
        <paramref name="right" />와 비교할 개체입니다.</param>
      <param name="right">
        <paramref name="left" />와 비교할 <see cref="T:System.RuntimeTypeHandle" /> 구조체입니다.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Equality(System.RuntimeTypeHandle,System.Object)">
      <summary>
        <see cref="T:System.RuntimeTypeHandle" /> 구조체가 개체와 같은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="right" />가 <see cref="T:System.RuntimeTypeHandle" />이고 <paramref name="left" />와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">
        <paramref name="right" />와 비교할 <see cref="T:System.RuntimeTypeHandle" /> 구조체입니다.</param>
      <param name="right">
        <paramref name="left" />와 비교할 개체입니다.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Inequality(System.Object,System.RuntimeTypeHandle)">
      <summary>개체와 <see cref="T:System.RuntimeTypeHandle" /> 구조체가 같지 않은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="left" />가 <see cref="T:System.RuntimeTypeHandle" />이고 <paramref name="right" />와 같지 않으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">
        <paramref name="right" />와 비교할 개체입니다.</param>
      <param name="right">
        <paramref name="left" />와 비교할 <see cref="T:System.RuntimeTypeHandle" /> 구조체입니다.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Inequality(System.RuntimeTypeHandle,System.Object)">
      <summary>
        <see cref="T:System.RuntimeTypeHandle" /> 구조체가 개체와 같지 않은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="right" />가 <see cref="T:System.RuntimeTypeHandle" /> 구조체이고 <paramref name="left" />와 같지 않으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">
        <paramref name="right" />와 비교할 <see cref="T:System.RuntimeTypeHandle" /> 구조체입니다.</param>
      <param name="right">
        <paramref name="left" />와 비교할 개체입니다.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.SByte">
      <summary>8비트 부호 있는 정수를 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.CompareTo(System.SByte)">
      <summary>이 인스턴스를 지정된 8비트 부호 있는 정수와 비교하여 상대 값의 표시를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 순서를 나타내는 부호 있는 정수입니다.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">비교할 8비트 부호 있는 정수입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.SByte.Equals(System.Object)">
      <summary>이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 <paramref name="obj" />의 인스턴스이고 이 인스턴스의 값과 같으면 <see cref="T:System.SByte" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.SByte.Equals(System.SByte)">
      <summary>이 인스턴스가 지정된 <see cref="T:System.SByte" /> 값과 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 이 인터페이스와 같은 값을 가지면 <paramref name="obj" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 <see cref="T:System.SByte" /> 값입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.SByte.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.SByte.MaxValue">
      <summary>
        <see cref="T:System.SByte" />의 최대값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.SByte.MinValue">
      <summary>
        <see cref="T:System.SByte" />의 최소값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String)">
      <summary>숫자의 문자열 표현을 해당하는 8비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" /> 매개 변수에 있는 숫자에 해당하는 8비트 부호 있는 정수입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다.이 문자열은 <see cref="F:System.Globalization.NumberStyles.Integer" /> 스타일을 사용하여 해석됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not consist of an optional sign followed by a sequence of digits (zero through nine). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>지정된 스타일로 된 숫자의 문자열 표현을 해당하는 8비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 숫자에 해당하는 8비트 부호 있는 정수입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다.이 문자열은 <paramref name="style" />이 지정하는 스타일을 사용하여 해석됩니다.</param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format that is compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 8비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" /> 매개 변수에 지정된 숫자에 해당하는 8비트 부호 있는 바이트 값입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다.이 문자열은 <paramref name="style" />에서 지정된 스타일을 사용하여 해석됩니다.</param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다.<paramref name="provider" />가 null이면 현재 스레드 문화권이 사용됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.-or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format that is compliant with <paramref name="style" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.-or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String,System.IFormatProvider)">
      <summary>지정된 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 8비트 부호 있는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 숫자에 해당하는 8비트 부호 있는 정수입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다.이 문자열은 <see cref="F:System.Globalization.NumberStyles.Integer" /> 스타일을 사용하여 해석됩니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다.<paramref name="provider" />가 null이면 현재 스레드 문화권이 사용됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.System#IComparable#CompareTo(System.Object)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 순서를 나타내는 부호 있는 정수입니다.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="obj">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an <see cref="T:System.SByte" />. </exception>
    </member>
    <member name="M:System.SByte.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.SByte.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>현재 인스턴스의 값이 0이 아니면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="provider">이 매개 변수는 사용되지 않습니다.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Byte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 사용되지 않습니다.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Char" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.그렇게 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>없음이 변환은 지원되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Decimal" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 사용되지 않습니다.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Double" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int16" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>변경되지 않은 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Single" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <paramref name="type" /> 형식의 개체로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="type">이 <see cref="T:System.Type" /> 값을 변환할 대상 <see cref="T:System.SByte" />입니다.</param>
      <param name="provider">반환된 값의 형식에 대한 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 구현입니다.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt16" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.SByte.ToString">
      <summary>이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>음수 부호(값이 음수일 경우)와 0부터 9 사이의 숫자(앞에 오는 0은 사용하지 않음)들로 구성된 이 인스턴스의 값에 대한 문자열 표현입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.ToString(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="provider" />에 의해 지정된 이 인스턴스 값의 문자열 표현입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.ToString(System.String)">
      <summary>지정된 형식을 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값을 <paramref name="format" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="format">표준 또는 사용자 지정 숫자 서식 문자열입니다.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.ToString(System.String,System.IFormatProvider)">
      <summary>지정된 형식 및 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="format" /> 및 <paramref name="provider" />로 지정된 이 인스턴스 값의 문자열 표현입니다.</returns>
      <param name="format">표준 또는 사용자 지정 숫자 서식 문자열입니다.</param>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte@)">
      <summary>지정된 문화권별 형식과 지정된 스타일을 사용한 숫자의 문자열 표현을 해당 <see cref="T:System.SByte" />로 변환해 보고, 변환에 성공했는지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다. </param>
      <param name="style">
        <paramref name="s" />에 사용할 수 있는 형식을 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자에 해당하는 8비트 부호 있는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, 형식이 <paramref name="style" />과 호환되지 않거나, <see cref="F:System.SByte.MinValue" />보다 작거나 <see cref="F:System.SByte.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.TryParse(System.String,System.SByte@)">
      <summary>숫자의 문자열 표현을 해당 <see cref="T:System.SByte" />로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다.</param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자에 해당하는 8비트 부호 있는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, 형식이 올바르지 않거나, <see cref="F:System.SByte.MinValue" />보다 작거나 <see cref="F:System.SByte.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Single">
      <summary>단정밀도 부동 소수점 숫자를 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.CompareTo(System.Single)">
      <summary>이 인스턴스를 지정된 단정밀도 부동 소수점 숫자와 비교하고 이 인스턴스의 값이 지정된 단정밀도 부동 소수점 숫자 값보다 작은지, 같은지 또는 큰지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.Return Value Description Less than zero This instance is less than <paramref name="value" />.-or- This instance is not a number (<see cref="F:System.Single.NaN" />) and <paramref name="value" /> is a number. Zero This instance is equal to <paramref name="value" />.-or- Both this instance and <paramref name="value" /> are not a number (<see cref="F:System.Single.NaN" />), <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />. Greater than zero This instance is greater than <paramref name="value" />.-or- This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Single.NaN" />). </returns>
      <param name="value">비교할 단정밀도 부동 소수점 숫자입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Single.Epsilon">
      <summary>0보다 큰 양의 최소 <see cref="T:System.Single" /> 값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Equals(System.Object)">
      <summary>이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 <paramref name="obj" />의 인스턴스이고 이 인스턴스의 값과 같으면 <see cref="T:System.Single" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Single.Equals(System.Single)">
      <summary>이 인스턴스의 값과 지정된 <see cref="T:System.Single" /> 개체의 값이 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 이 인스턴스와 같으면 <paramref name="obj" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Single.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Single.IsInfinity(System.Single)">
      <summary>지정된 숫자가 음의 무한대로 계산되는지 양의 무한대로 계산되는지를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="f" />가 <see cref="F:System.Single.PositiveInfinity" /> 또는 <see cref="F:System.Single.NegativeInfinity" />로 계산되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="f">단정밀도 부동 소수점 숫자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.IsNaN(System.Single)">
      <summary>지정된 값이 숫자가 아닌지(<see cref="F:System.Single.NaN" />) 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="f" />이(가) Not-a-Number(<see cref="F:System.Single.NaN" />)로 계산되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="f">단정밀도 부동 소수점 숫자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.IsNegativeInfinity(System.Single)">
      <summary>지정된 숫자가 음의 무한대로 계산되는지를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="f" />가 <see cref="F:System.Single.NegativeInfinity" />으로 계산되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="f">단정밀도 부동 소수점 숫자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.IsPositiveInfinity(System.Single)">
      <summary>지정된 숫자가 양의 무한대로 계산되는지를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="f" />가 <see cref="F:System.Single.PositiveInfinity" />으로 계산되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="f">단정밀도 부동 소수점 숫자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.MaxValue">
      <summary>
        <see cref="T:System.Single" />의 최대값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.MinValue">
      <summary>
        <see cref="T:System.Single" />의 최소값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.NaN">
      <summary>Not-a-Number(NaN)를 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.NegativeInfinity">
      <summary>음의 무한대를 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.op_Equality(System.Single,System.Single)">
      <summary>지정된 두 <see cref="T:System.Single" /> 값이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>true과 <paramref name="left" />가 같으면 <paramref name="right" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">비교할 첫 번째 값입니다.</param>
      <param name="right">비교할 두 번째 값입니다.</param>
    </member>
    <member name="M:System.Single.op_GreaterThan(System.Single,System.Single)">
      <summary>지정된 <see cref="T:System.Single" /> 값이 지정된 다른 <see cref="T:System.Single" /> 값보다 큰지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>true이 <paramref name="left" />보다 크면 <paramref name="right" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">비교할 첫 번째 값입니다.</param>
      <param name="right">비교할 두 번째 값입니다.</param>
    </member>
    <member name="M:System.Single.op_GreaterThanOrEqual(System.Single,System.Single)">
      <summary>지정된 <see cref="T:System.Single" /> 값이 지정된 다른 <see cref="T:System.Single" /> 값보다 크거나 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="left" />가 <paramref name="right" />보다 크거나 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">비교할 첫 번째 값입니다.</param>
      <param name="right">비교할 두 번째 값입니다.</param>
    </member>
    <member name="M:System.Single.op_Inequality(System.Single,System.Single)">
      <summary>지정된 두 <see cref="T:System.Single" /> 값이 같지 않은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>true과 <paramref name="left" />가 같지 않으면 <paramref name="right" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">비교할 첫 번째 값입니다.</param>
      <param name="right">비교할 두 번째 값입니다.</param>
    </member>
    <member name="M:System.Single.op_LessThan(System.Single,System.Single)">
      <summary>지정된 <see cref="T:System.Single" /> 값이 지정된 다른 <see cref="T:System.Single" /> 값보다 작은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="left" />가 <paramref name="right" />보다 작으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">비교할 첫 번째 값입니다.</param>
      <param name="right">비교할 두 번째 값입니다.</param>
    </member>
    <member name="M:System.Single.op_LessThanOrEqual(System.Single,System.Single)">
      <summary>지정된 <see cref="T:System.Single" /> 값이 지정된 다른 <see cref="T:System.Single" /> 값보다 작거나 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="left" />가 <paramref name="right" />보다 작거나 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">비교할 첫 번째 값입니다.</param>
      <param name="right">비교할 두 번째 값입니다.</param>
    </member>
    <member name="M:System.Single.Parse(System.String)">
      <summary>숫자의 문자열 표현을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 숫자 값 또는 기호에 해당하는 단정밀도 부동 소수점 숫자입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>지정된 스타일로 된 숫자의 문자열 표현을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 숫자 값 또는 기호에 해당하는 단정밀도 부동 소수점 숫자입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.AllowThousands" />와 결합되는 <see cref="F:System.Globalization.NumberStyles.Float" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 숫자 값 또는 기호에 해당하는 단정밀도 부동 소수점 숫자입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.AllowThousands" />와 결합되는 <see cref="F:System.Globalization.NumberStyles.Float" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a numeric value. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Parse(System.String,System.IFormatProvider)">
      <summary>지정된 문화권별 형식의 숫자에 대한 문자열 표현을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 숫자 값 또는 기호에 해당하는 단정밀도 부동 소수점 숫자입니다.</returns>
      <param name="s">변환할 숫자가 포함된 문자열입니다. </param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.PositiveInfinity">
      <summary>양의 무한대를 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.System#IComparable#CompareTo(System.Object)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 순서를 나타내는 부호 있는 정수입니다.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Single" />. </exception>
    </member>
    <member name="M:System.Single.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Single.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>현재 인스턴스의 값이 0이 아니면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Byte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 변환은 지원되지 않습니다.값이 반환되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Single.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 변환은 지원되지 않습니다.값이 반환되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Single.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Decimal" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Double" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int16" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.SByte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>변경되지 않은 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <paramref name="type" />으로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="type">이 <see cref="T:System.Single" /> 값을 변환할 대상 형식입니다.</param>
      <param name="provider">반환된 값의 형식에 대한 정보를 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>
        <see cref="T:System.UInt16" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Single.ToString">
      <summary>이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스 값의 문자열 표현입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.ToString(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값을 <paramref name="provider" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.ToString(System.String)">
      <summary>지정된 형식을 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값을 <paramref name="format" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="format">숫자 서식 문자열입니다.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.ToString(System.String,System.IFormatProvider)">
      <summary>지정된 형식 및 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="format" /> 및 <paramref name="provider" />로 지정된 이 인스턴스 값의 문자열 표현입니다.</returns>
      <param name="format">숫자 서식 문자열입니다.</param>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
      <summary>지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다. </param>
      <param name="style">
        <paramref name="s" />에 사용할 수 있는 형식을 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.AllowThousands" />와 결합되는 <see cref="F:System.Globalization.NumberStyles.Float" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자 값이나 기호에 해당하는 단정밀도 부동 소수점 숫자를 반환하며 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, <paramref name="style" />과 규격 형식이 아니거나, <see cref="F:System.Single.MinValue" />보다 작거나 <see cref="F:System.Single.MaxValue" />보다 큰 숫자를 나타내거나, <paramref name="style" />이 <see cref="T:System.Globalization.NumberStyles" /> 열거형 상수의 유효한 조합이 아닌 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.TryParse(System.String,System.Single@)">
      <summary>숫자의 문자열 표현을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자 값이나 기호에 해당하는 단정밀도 부동 소수점 숫자를 반환하며 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나 올바른 형식의 숫자가 아니거나, <see cref="F:System.Single.MinValue" />보다 작거나 <see cref="F:System.Single.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.STAThreadAttribute">
      <summary>응용 프로그램에 대한 COM 스레딩 모델이 STA(단일 스레드 아파트)인지를 나타냅니다. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.STAThreadAttribute.#ctor">
      <summary>
        <see cref="T:System.STAThreadAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.String">
      <summary>텍스트를 일련의 유니코드 문자로 나타냅니다.이 형식에 대한 .NET Framework 소스 코드를 찾아보려면 참조 원본을 참조하세요.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.#ctor(System.Char*)">
      <summary>유니코드 문자 배열에 대한 지정된 포인터가 가리키는 값으로 <see cref="T:System.String" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">null로 끝나는 유니코드 문자 배열에 대한 포인터입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The current process does not have read access to all the addressed characters.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> specifies an array that contains an invalid Unicode character, or <paramref name="value" /> specifies an address less than 64000.</exception>
    </member>
    <member name="M:System.String.#ctor(System.Char*,System.Int32,System.Int32)">
      <summary>유니코드 문자 배열에 대한 지정된 포인터가 나타내는 값, 해당 배열 내의 시작 문자 위치 및 길이로 <see cref="T:System.String" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">유니코드 문자 배열에 대한 포인터입니다. </param>
      <param name="startIndex">
        <paramref name="value" /> 내의 시작 위치입니다. </param>
      <param name="length">
        <paramref name="value" /> 내에서 사용할 문자의 수입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than zero, <paramref name="value" /> + <paramref name="startIndex" /> cause a pointer overflow, or the current process does not have read access to all the addressed characters.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> specifies an array that contains an invalid Unicode character, or <paramref name="value" /> + <paramref name="startIndex" /> specifies an address less than 64000.</exception>
    </member>
    <member name="M:System.String.#ctor(System.Char,System.Int32)">
      <summary>지정한 횟수만큼 반복되는 지정된 유니코드 문자가 나타내는 값으로 <see cref="T:System.String" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="c">유니코드 문자입니다. </param>
      <param name="count">
        <paramref name="c" />가 발생하는 횟수입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is less than zero. </exception>
    </member>
    <member name="M:System.String.#ctor(System.Char[])">
      <summary>유니코드 문자 배열에서 나타내는 값으로 <see cref="T:System.String" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">유니코드 문자 배열입니다. </param>
    </member>
    <member name="M:System.String.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary>유니코드 문자 배열에서 나타내는 값, 해당 배열 내의 시작 문자 위치 및 길이로 <see cref="T:System.String" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">유니코드 문자 배열입니다. </param>
      <param name="startIndex">
        <paramref name="value" /> 내의 시작 위치입니다. </param>
      <param name="length">
        <paramref name="value" /> 내에서 사용할 문자의 수입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than zero.-or- The sum of <paramref name="startIndex" /> and <paramref name="length" /> is greater than the number of elements in <paramref name="value" />. </exception>
    </member>
    <member name="P:System.String.Chars(System.Int32)">
      <summary>현재 <see cref="T:System.Char" /> 개체에서 지정된 문자 위치에 있는 <see cref="T:System.String" /> 개체를 가져옵니다.</summary>
      <returns>
        <paramref name="index" /> 위치에 있는 개체입니다.</returns>
      <param name="index">현재 문자열의 위치입니다. </param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> is greater than or equal to the length of this object or less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>지정된 두 <see cref="T:System.String" /> 개체의 부분 문자열을 비교하고 정렬 순서에서 두 개체의 상대 위치를 나타내는 정수를 반환합니다.</summary>
      <returns>두 비교 대상 간의 어휘 관계를 나타내는 부호 있는 32비트 정수를 반환합니다.Value Condition Less than zero The substring in <paramref name="strA" /> precedes the substring in <paramref name="strB" /> in the sort order. Zero The substrings occur in the same position in the sort order, or <paramref name="length" /> is zero. Greater than zero The substring in <paramref name="strA" /> follows the substring in <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">비교에 사용할 첫 번째 문자열입니다. </param>
      <param name="indexA">
        <paramref name="strA" />에 있는 부분 문자열의 위치입니다. </param>
      <param name="strB">비교에 사용할 두 번째 문자열입니다. </param>
      <param name="indexB">
        <paramref name="strB" />에 있는 부분 문자열의 위치입니다. </param>
      <param name="length">비교할 부분 문자열의 최대 문자 수입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative. -or-Either <paramref name="indexA" /> or <paramref name="indexB" /> is null, and <paramref name="length" /> is greater than zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)">
      <summary>지정된 규칙을 사용하여 지정된 두 <see cref="T:System.String" /> 개체의 부분 문자열을 비교하고 정렬 순서에서 두 개체의 상대 위치를 나타내는 정수를 반환합니다. </summary>
      <returns>두 비교 대상 간의 어휘 관계를 나타내는 32비트 부호 있는 정수입니다.Value Condition Less than zero The substring in <paramref name="strA" /> precedes the substring in <paramref name="strB" /> in the sort order.Zero The substrings occur in the same position in the sort order, or the <paramref name="length" /> parameter is zero. Greater than zero The substring in <paramref name="strA" /> follllows the substring in <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">비교에 사용할 첫 번째 문자열입니다. </param>
      <param name="indexA">
        <paramref name="strA" />에 있는 부분 문자열의 위치입니다. </param>
      <param name="strB">비교에 사용할 두 번째 문자열입니다.</param>
      <param name="indexB">
        <paramref name="strB" />에 있는 부분 문자열의 위치입니다. </param>
      <param name="length">비교할 부분 문자열의 최대 문자 수입니다. </param>
      <param name="comparisonType">비교에 사용할 규칙을 지정하는 열거형 값 중 하나입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative. -or-Either <paramref name="indexA" /> or <paramref name="indexB" /> is null, and <paramref name="length" /> is greater than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.String)">
      <summary>지정된 두 <see cref="T:System.String" /> 개체를 비교하고 정렬 순서에서 두 개체의 상대 위치를 나타내는 정수를 반환합니다.</summary>
      <returns>두 비교 대상 간의 어휘 관계를 나타내는 32비트 부호 있는 정수입니다.Value Condition Less than zero <paramref name="strA" /> precedes <paramref name="strB" /> in the sort order. Zero <paramref name="strA" /> occurs in the same position as <paramref name="strB" /> in the sort order. Greater than zero <paramref name="strA" /> follows <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">비교할 첫째 문자열입니다. </param>
      <param name="strB">비교할 둘째 문자열입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.String,System.Boolean)">
      <summary>대/소문자를 구분하거나 구분하지 않고 지정된 두 <see cref="T:System.String" /> 개체를 비교하여 정렬 순서에서 두 개체의 상대 위치를 나타내는 정수를 반환합니다.</summary>
      <returns>두 비교 대상 간의 어휘 관계를 나타내는 32비트 부호 있는 정수입니다.Value Condition Less than zero <paramref name="strA" /> precedes <paramref name="strB" /> in the sort order. Zero <paramref name="strA" /> occurs in the same position as <paramref name="strB" /> in the sort order. Greater than zero <paramref name="strA" /> follows <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">비교할 첫째 문자열입니다. </param>
      <param name="strB">비교할 둘째 문자열입니다. </param>
      <param name="ignoreCase">비교 시 대/소문자를 무시하려면 true이고, 그렇지 않으면 false입니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.String,System.StringComparison)">
      <summary>지정된 규칙을 사용하여 지정된 두 <see cref="T:System.String" /> 개체를 비교하고 정렬 순서에서 두 개체의 상대 위치를 나타내는 정수를 반환합니다.</summary>
      <returns>두 비교 대상 간의 어휘 관계를 나타내는 32비트 부호 있는 정수입니다.Value Condition Less than zero <paramref name="strA" /> precedes <paramref name="strB" /> in the sort order. Zero <paramref name="strA" /> is in the same position as <paramref name="strB" /> in the sort order. Greater than zero <paramref name="strA" /> follows <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">비교할 첫째 문자열입니다.</param>
      <param name="strB">비교할 둘째 문자열입니다. </param>
      <param name="comparisonType">비교에 사용할 규칙을 지정하는 열거형 값 중 하나입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value. </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.StringComparison" /> is not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>각 부분 문자열에서 해당하는 <see cref="T:System.String" /> 개체의 숫자 값을 계산하여 지정된 두 <see cref="T:System.Char" /> 개체의 부분 문자열을 비교합니다. </summary>
      <returns>두 비교 대상 간의 어휘 관계를 나타내는 32비트 부호 있는 정수입니다.ValueCondition Less than zero The substring in <paramref name="strA" /> is less than the substring in <paramref name="strB" />. Zero The substrings are equal, or <paramref name="length" /> is zero. Greater than zero The substring in <paramref name="strA" /> is greater than the substring in <paramref name="strB" />. </returns>
      <param name="strA">비교에 사용할 첫 번째 문자열입니다. </param>
      <param name="indexA">
        <paramref name="strA" />에 있는 부분 문자열의 시작 인덱스입니다. </param>
      <param name="strB">비교에 사용할 두 번째 문자열입니다. </param>
      <param name="indexB">
        <paramref name="strB" />에 있는 부분 문자열의 시작 인덱스입니다. </param>
      <param name="length">비교할 부분 문자열의 최대 문자 수입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="strA" /> is not null and <paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.-or- <paramref name="strB" /> is not null and<paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.CompareOrdinal(System.String,System.String)">
      <summary>각 문자열에서 해당하는 <see cref="T:System.String" /> 개체의 숫자 값을 계산해서 두 지정된 <see cref="T:System.Char" /> 개체를 비교합니다.</summary>
      <returns>두 비교 대상 간의 어휘 관계를 나타내는 정수입니다.ValueCondition Less than zero <paramref name="strA" /> is less than <paramref name="strB" />. Zero <paramref name="strA" /> and <paramref name="strB" /> are equal. Greater than zero <paramref name="strA" /> is greater than <paramref name="strB" />. </returns>
      <param name="strA">비교할 첫째 문자열입니다. </param>
      <param name="strB">비교할 둘째 문자열입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.CompareTo(System.String)">
      <summary>이 인스턴스를 지정된 <see cref="T:System.String" /> 개체와 비교하고 정렬 순서에서 이 인스턴스의 위치가 지정된 문자열보다 앞인지, 뒤인지 또는 동일한지를 나타냅니다. </summary>
      <returns>정렬 순서에서 이 인스턴스의 위치가 <paramref name="strB" /> 매개 변수보다 앞인지, 뒤인지 또는 동일한지를 나타내는 32비트 부호 있는 정수입니다.Value Condition Less than zero This instance precedes <paramref name="strB" />. Zero This instance has the same position in the sort order as <paramref name="strB" />. Greater than zero This instance follows <paramref name="strB" />.-or- <paramref name="strB" /> is null. </returns>
      <param name="strB">이 인스턴스와 비교할 문자열입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 형식의 생성된 <see cref="T:System.String" /> 컬렉션의 멤버를 연결합니다.</summary>
      <returns>
        <paramref name="values" />의 연결된 문자열입니다.</returns>
      <param name="values">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />을 구현하고 제네릭 형식 인수가 <see cref="T:System.String" />인 컬렉션 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Concat``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 구현의 멤버를 연결합니다.</summary>
      <returns>
        <paramref name="values" />의 연결된 멤버입니다.</returns>
      <param name="values">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 인터페이스를 구현하는 컬렉션 개체입니다.</param>
      <typeparam name="T">
        <paramref name="values" /> 멤버의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Concat(System.Object)">
      <summary>지정된 개체의 문자열 표현을 만듭니다.</summary>
      <returns>
        <paramref name="arg0" />이 <see cref="F:System.String.Empty" />인 경우 <paramref name="arg0" /> 또는 null 값의 문자열 표현입니다.</returns>
      <param name="arg0">나타낼 개체나 null입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Object,System.Object)">
      <summary>지정된 두 개체의 문자열 표현을 연결합니다.</summary>
      <returns>
        <paramref name="arg0" /> 및 <paramref name="arg1" /> 값의 연결된 문자열 표현입니다.</returns>
      <param name="arg0">연결할 첫 번째 개체입니다. </param>
      <param name="arg1">연결할 두 번째 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Object,System.Object,System.Object)">
      <summary>지정된 세 개체의 문자열 표현을 연결합니다.</summary>
      <returns>
        <paramref name="arg0" />, <paramref name="arg1" /> 및 <paramref name="arg2" /> 값의 연결된 문자열 표현입니다.</returns>
      <param name="arg0">연결할 첫 번째 개체입니다. </param>
      <param name="arg1">연결할 두 번째 개체입니다. </param>
      <param name="arg2">연결할 세 번째 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Object[])">
      <summary>지정된 <see cref="T:System.Object" /> 배열에 있는 요소의 문자열 표현을 연결합니다.</summary>
      <returns>
        <paramref name="args" />에 있는 요소 값의 연결된 문자열 표현입니다.</returns>
      <param name="args">연결할 요소가 포함된 개체 배열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="args" /> is null. </exception>
      <exception cref="T:System.OutOfMemoryException">Out of memory.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String,System.String)">
      <summary>
        <see cref="T:System.String" />의 지정된 두 인스턴스를 연결합니다.</summary>
      <returns>연결된 <paramref name="str0" /> 및 <paramref name="str1" />을 반환합니다.</returns>
      <param name="str0">연결할 첫 번째 문자열입니다. </param>
      <param name="str1">연결할 두 번째 문자열입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String,System.String,System.String)">
      <summary>
        <see cref="T:System.String" />의 지정된 세 인스턴스를 연결합니다.</summary>
      <returns>연결된 <paramref name="str0" />, <paramref name="str1" /> 및 <paramref name="str2" />를 반환합니다.</returns>
      <param name="str0">연결할 첫 번째 문자열입니다. </param>
      <param name="str1">연결할 두 번째 문자열입니다. </param>
      <param name="str2">연결할 세 번째 문자열입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String,System.String,System.String,System.String)">
      <summary>
        <see cref="T:System.String" />의 지정된 네 인스턴스를 연결합니다.</summary>
      <returns>연결된 <paramref name="str0" />, <paramref name="str1" />, <paramref name="str2" /> 및 <paramref name="str3" />를 반환합니다.</returns>
      <param name="str0">연결할 첫 번째 문자열입니다. </param>
      <param name="str1">연결할 두 번째 문자열입니다. </param>
      <param name="str2">연결할 세 번째 문자열입니다. </param>
      <param name="str3">연결할 네 번째 문자열입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String[])">
      <summary>지정된 <see cref="T:System.String" /> 배열의 요소를 연결합니다.</summary>
      <returns>
        <paramref name="values" />의 연결된 요소를 반환합니다.</returns>
      <param name="values">문자열 인스턴스의 배열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
      <exception cref="T:System.OutOfMemoryException">Out of memory.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Contains(System.String)">
      <summary>이 문자열 내에서 지정한 하위 문자열이 발생하는지를 나타내는 값을 반환합니다.</summary>
      <returns>이 문자열 내에서 true 매개 변수가 발생하거나 <paramref name="value" />가 빈 문자열("")이면 <paramref name="value" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">검색할 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>이 인스턴스의 지정한 위치에 있는 지정한 수의 문자를 유니코드 문자 배열의 특정 위치에 복사합니다.</summary>
      <param name="sourceIndex">이 인스턴스에서 복사할 첫 번째 문자의 인덱스입니다. </param>
      <param name="destination">이 인스턴스의 문자가 복사되는 유니코드 문자의 배열입니다. </param>
      <param name="destinationIndex">
        <paramref name="destination" />에서 복사 작업이 시작되는 인덱스입니다. </param>
      <param name="count">이 인스턴스에서 <paramref name="destination" />에 복사할 문자의 수입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" />, <paramref name="destinationIndex" />, or <paramref name="count" /> is negative -or- <paramref name="sourceIndex" /> does not identify a position in the current instance. -or-<paramref name="destinationIndex" /> does not identify a valid index in the <paramref name="destination" /> array. -or-<paramref name="count" /> is greater than the length of the substring from <paramref name="startIndex" /> to the end of this instance -or- <paramref name="count" /> is greater than the length of the subarray from <paramref name="destinationIndex" /> to the end of the <paramref name="destination" /> array. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.String.Empty">
      <summary>빈 문자열을 나타냅니다.이 필드는 읽기 전용입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.EndsWith(System.String)">
      <summary>이 문자열 인스턴스의 끝 부분과 지정한 문자열이 일치하는지를 확인합니다.</summary>
      <returns>이 인스턴스의 끝이 true와 일치하면 <paramref name="value" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">이 인스턴스의 끝 부분에 있는 부분 문자열과 비교할 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.EndsWith(System.String,System.StringComparison)">
      <summary>지정한 비교 옵션을 사용하여 비교할 때 지정한 문자열과 이 문자열 인스턴스의 끝 부분이 일치하는지를 확인합니다.</summary>
      <returns>이 문자열의 끝이 true 매개 변수와 일치하면 <paramref name="value" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">이 인스턴스의 끝 부분에 있는 부분 문자열과 비교할 문자열입니다. </param>
      <param name="comparisonType">이 문자열과 <paramref name="value" />를 비교하는 방법을 결정하는 열거형 값 중 하나입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.Equals(System.Object)">
      <summary>이 인스턴스와 지정한 개체의 값이 같은지를 확인합니다. 이 개체도 <see cref="T:System.String" /> 개체여야 합니다.</summary>
      <returns>true가 <paramref name="obj" />이고 이 인스턴스와 같은 값을 가지면 <see cref="T:System.String" />이고, 그렇지 않으면 false입니다.<paramref name="obj" />가 null이면 메서드에서 false를 반환합니다.</returns>
      <param name="obj">이 인스턴스와 비교할 문자열입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String)">
      <summary>이 인스턴스와 지정한 다른 <see cref="T:System.String" /> 개체의 값이 같은지를 확인합니다.</summary>
      <returns>true 매개 변수와 이 인스턴스의 값이 같으면 <paramref name="value" />이고, 그렇지 않으면 false입니다.<paramref name="value" />가 null이면 메서드에서 false를 반환합니다.</returns>
      <param name="value">이 인스턴스와 비교할 문자열입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String,System.String)">
      <summary>지정된 두 <see cref="T:System.String" /> 개체의 값이 같은지를 확인합니다.</summary>
      <returns>true의 값이 <paramref name="a" />의 값과 같으면 <paramref name="b" />를 반환하고, 그렇지 않으면 false를 반환합니다.<paramref name="a" /> 및 <paramref name="b" />가 null인 경우 이 메서드는 true를 반환합니다.</returns>
      <param name="a">비교할 첫 번째 문자열 또는 null입니다. </param>
      <param name="b">비교할 두 번째 문자열 또는 null입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String,System.String,System.StringComparison)">
      <summary>지정된 두 <see cref="T:System.String" /> 개체의 값이 같은지를 확인합니다.매개 변수는 비교에 사용되는 문화권, 대/소문자 및 정렬 규칙을 지정합니다.</summary>
      <returns>true 매개 변수와 <paramref name="a" /> 매개 변수의 값이 같으면 <paramref name="b" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="a">비교할 첫 번째 문자열 또는 null입니다. </param>
      <param name="b">비교할 두 번째 문자열 또는 null입니다. </param>
      <param name="comparisonType">비교 규칙을 지정하는 열거형 값 중 하나입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String,System.StringComparison)">
      <summary>이 문자열과 지정한 <see cref="T:System.String" /> 개체의 값이 같은지를 확인합니다.매개 변수는 비교에 사용되는 문화권, 대/소문자 및 정렬 규칙을 지정합니다.</summary>
      <returns>true 매개 변수와 이 문자열의 값이 같으면 <paramref name="value" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">이 인스턴스와 비교할 문자열입니다.</param>
      <param name="comparisonType">문자열 비교 방법을 지정하는 열거형 값 중 하나입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object)">
      <summary>지정된 문자열에 있는 하나의 형식 항목 또는 여러 개의 형식 항목을 해당하는 개체의 문자열 표현으로 바꿉니다.매개 변수에서 문화권별 서식 지정 정보를 제공합니다.</summary>
      <returns>하나의 형식 항목 또는 여러 개의 형식 항목이 <paramref name="format" />의 문자열 표현으로 바뀌는 <paramref name="arg0" />의 복사본입니다. </returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <param name="format">합성 서식 문자열입니다. </param>
      <param name="arg0">형식을 지정할 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> or <paramref name="arg0" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to one. </exception>
    </member>
    <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object)">
      <summary>지정된 문자열에 있는 서식 지정 항목을 지정된 두 개체의 문자열 표현으로 바꿉니다.매개 변수에서 문화권별 서식 지정 정보를 제공합니다.</summary>
      <returns>서식 지정 항목이 <paramref name="format" /> 및 <paramref name="arg0" />의 문자열 표현으로 바뀌는 <paramref name="arg1" />의 복사본입니다. </returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <param name="format">합성 서식 문자열입니다. </param>
      <param name="arg0">서식을 지정할 첫 번째 개체입니다. </param>
      <param name="arg1">서식을 지정할 두 번째 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />, <paramref name="arg0" />, or <paramref name="arg1" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to two. </exception>
    </member>
    <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
      <summary>지정된 문자열의 형식 항목을 지정된 세 개체의 문자열 표현으로 바꿉니다.매개 변수에서 문화권별 형식 지정 정보를 제공합니다.</summary>
      <returns>형식 항목이 <paramref name="format" />, <paramref name="arg0" /> 및 <paramref name="arg1" />의 문자열 표현으로 바뀌는 <paramref name="arg2" />의 복사본입니다. </returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <param name="format">합성 서식 문자열입니다. </param>
      <param name="arg0">서식을 지정할 첫 번째 개체입니다. </param>
      <param name="arg1">서식을 지정할 두 번째 개체입니다. </param>
      <param name="arg2">서식을 지정할 세 번째 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />, <paramref name="arg0" />, <paramref name="arg1" />, or <paramref name="arg2" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to three. </exception>
    </member>
    <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])">
      <summary>지정된 문자열의 형식 항목을 지정된 배열에 있는 해당 개체의 문자열 표현으로 바꿉니다.매개 변수에서 문화권별 서식 지정 정보를 제공합니다.</summary>
      <returns>형식 항목을 <paramref name="format" />에 있는 해당 개체의 문자열 표현으로 바꾼 <paramref name="args" />의 복사본입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <param name="format">합성 서식 문자열입니다. </param>
      <param name="args">형식을 지정할 개체를 0개 이상 포함하는 개체 배열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> or <paramref name="args" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to the length of the <paramref name="args" /> array. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object)">
      <summary>지정된 문자열에 있는 하나 이상의 형식 항목을 지정된 개체의 문자열 표현으로 바꿉니다.</summary>
      <returns>서식 지정 항목이 <paramref name="format" />의 문자열 표현으로 바뀌는 <paramref name="arg0" />의 복사본입니다.</returns>
      <param name="format">합성 서식 문자열입니다. </param>
      <param name="arg0">형식을 지정할 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">The format item in <paramref name="format" /> is invalid.-or- The index of a format item is not zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object,System.Object)">
      <summary>지정된 문자열에 있는 서식 지정 항목을 지정된 두 개체의 문자열 표현으로 바꿉니다.</summary>
      <returns>서식 지정 항목이 <paramref name="format" /> 및 <paramref name="arg0" />의 문자열 표현으로 바뀌는 <paramref name="arg1" />의 복사본입니다.</returns>
      <param name="format">합성 서식 문자열입니다. </param>
      <param name="arg0">서식을 지정할 첫 번째 개체입니다. </param>
      <param name="arg1">서식을 지정할 두 번째 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is not zero or one. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object,System.Object,System.Object)">
      <summary>지정된 문자열의 형식 항목을 지정된 세 개체의 문자열 표현으로 바꿉니다.</summary>
      <returns>형식 항목이 <paramref name="format" />, <paramref name="arg0" /> 및 <paramref name="arg1" />의 문자열 표현으로 바뀌는 <paramref name="arg2" />의 복사본입니다.</returns>
      <param name="format">합성 서식 문자열입니다.</param>
      <param name="arg0">서식을 지정할 첫 번째 개체입니다. </param>
      <param name="arg1">서식을 지정할 두 번째 개체입니다. </param>
      <param name="arg2">서식을 지정할 세 번째 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than two. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object[])">
      <summary>지정된 문자열의 형식 항목을 지정된 배열에 있는 해당 개체의 문자열 표현으로 바꿉니다.</summary>
      <returns>형식 항목을 <paramref name="format" />에 있는 해당 개체의 문자열 표현으로 바꾼 <paramref name="args" />의 복사본입니다.</returns>
      <param name="format">합성 서식 문자열입니다.</param>
      <param name="args">형식을 지정할 개체를 0개 이상 포함하는 개체 배열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> or <paramref name="args" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to the length of the <paramref name="args" /> array. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.GetHashCode">
      <summary>해당 문자열에 대한 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.Char)">
      <summary>이 문자열에서 맨 처음 발견되는 지정된 유니코드 문자의 0부터 시작하는 인덱스를 보고합니다.</summary>
      <returns>해당 문자가 있으면 <paramref name="value" />의 인덱스 위치(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <param name="value">검색할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.Char,System.Int32)">
      <summary>이 문자열에서 맨 처음 발견되는 지정된 유니코드 문자의 0부터 시작하는 인덱스를 보고합니다.검색은 지정된 문자 위치에서 시작됩니다.</summary>
      <returns>해당 문자가 있으면 <paramref name="value" />의 인덱스 위치(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <param name="value">검색할 유니코드 문자입니다. </param>
      <param name="startIndex">검색을 시작할 위치입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than 0 (zero) or greater than the length of the string. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.Char,System.Int32,System.Int32)">
      <summary>이 인스턴스에서 맨 처음 발견되는 지정된 문자의 0부터 시작하는 인덱스를 보고합니다.검색은 지정된 문자 위치에서 시작하여 지정된 수의 문자 위치를 검사합니다.</summary>
      <returns>해당 문자가 있으면 <paramref name="value" />의 인덱스 위치(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <param name="value">검색할 유니코드 문자입니다. </param>
      <param name="startIndex">검색을 시작할 위치입니다. </param>
      <param name="count">검사할 문자 위치의 수입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- <paramref name="startIndex" /> is greater than the length of this string.-or-<paramref name="count" /> is greater than the length of this string minus <paramref name="startIndex" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String)">
      <summary>이 인스턴스에서 맨 처음 발견되는 지정된 문자열의 0부터 시작하는 인덱스를 보고합니다.</summary>
      <returns>해당 문자열이 있으면 <paramref name="value" />의 인덱스 위치(0부터 시작)이고, 그렇지 않으면 -1입니다.<paramref name="value" />가 <see cref="F:System.String.Empty" />인 경우 반환 값은 0입니다.</returns>
      <param name="value">검색할 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32)">
      <summary>이 인스턴스에서 맨 처음 발견되는 지정된 문자열의 0부터 시작하는 인덱스를 보고합니다.검색은 지정된 문자 위치에서 시작됩니다.</summary>
      <returns>해당 문자열이 있으면 <paramref name="value" />의 인덱스 위치(0부터 시작)이고, 그렇지 않으면 -1입니다.<paramref name="value" />가 <see cref="F:System.String.Empty" />인 경우 반환 값은 <paramref name="startIndex" />입니다.</returns>
      <param name="value">검색할 문자열입니다. </param>
      <param name="startIndex">검색을 시작할 위치입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than 0 (zero) or greater than the length of this string.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32,System.Int32)">
      <summary>이 인스턴스에서 맨 처음 발견되는 지정된 문자열의 0부터 시작하는 인덱스를 보고합니다.검색은 지정된 문자 위치에서 시작하여 지정된 수의 문자 위치를 검사합니다.</summary>
      <returns>해당 문자열이 있으면 <paramref name="value" />의 인덱스 위치(0부터 시작)이고, 그렇지 않으면 -1입니다.<paramref name="value" />가 <see cref="F:System.String.Empty" />인 경우 반환 값은 <paramref name="startIndex" />입니다.</returns>
      <param name="value">검색할 문자열입니다. </param>
      <param name="startIndex">검색을 시작할 위치입니다. </param>
      <param name="count">검사할 문자 위치의 수입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- <paramref name="startIndex" /> is greater than the length of this string.-or-<paramref name="count" /> is greater than the length of this string minus <paramref name="startIndex" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)">
      <summary>현재 <see cref="T:System.String" /> 개체에서 맨 처음 발견되는 지정된 문자열의 0부터 시작하는 인덱스를 보고합니다.매개 변수는 현재 문자열의 검색 시작 위치, 검색할 현재 문자열의 문자 수 및 지정된 문자열에 사용할 검색 유형을 지정합니다.</summary>
      <returns>해당 문자열이 있으면 <paramref name="value" /> 매개 변수의 인덱스 위치(0부터 시작)이고, 그렇지 않으면 -1입니다.<paramref name="value" />가 <see cref="F:System.String.Empty" />인 경우 반환 값은 <paramref name="startIndex" />입니다.</returns>
      <param name="value">검색할 문자열입니다. </param>
      <param name="startIndex">검색을 시작할 위치입니다. </param>
      <param name="count">검사할 문자 위치의 수입니다. </param>
      <param name="comparisonType">검색 규칙을 지정하는 열거형 값 중 하나입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- <paramref name="startIndex" /> is greater than the length of this instance.-or-<paramref name="count" /> is greater than the length of this string minus <paramref name="startIndex" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)">
      <summary>현재 <see cref="T:System.String" /> 개체에서 맨 처음 발견되는 지정된 문자열의 0부터 시작하는 인덱스를 보고합니다.매개 변수는 현재 문자열의 검색 시작 위치와 지정된 문자열에 사용할 검색 유형을 지정합니다.</summary>
      <returns>해당 문자열이 있으면 <paramref name="value" /> 매개 변수의 인덱스 위치(0부터 시작)이고, 그렇지 않으면 -1입니다.<paramref name="value" />가 <see cref="F:System.String.Empty" />인 경우 반환 값은 <paramref name="startIndex" />입니다.</returns>
      <param name="value">검색할 문자열입니다. </param>
      <param name="startIndex">검색을 시작할 위치입니다. </param>
      <param name="comparisonType">검색 규칙을 지정하는 열거형 값 중 하나입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than 0 (zero) or greater than the length of this string. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.StringComparison)">
      <summary>현재 <see cref="T:System.String" /> 개체에서 맨 처음 발견되는 지정된 문자열의 0부터 시작하는 인덱스를 보고합니다.매개 변수는 지정된 문자열에 사용할 검색 유형을 지정합니다.</summary>
      <returns>문자열이 있으면 <paramref name="value" /> 매개 변수의 인덱스 위치이고, 그렇지 않으면 -1입니다.<paramref name="value" />가 <see cref="F:System.String.Empty" />인 경우 반환 값은 0입니다.</returns>
      <param name="value">검색할 문자열입니다. </param>
      <param name="comparisonType">검색 규칙을 지정하는 열거형 값 중 하나입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.IndexOfAny(System.Char[])">
      <summary>지정된 유니코드 문자 배열에 있는 문자 중에 이 인스턴스에서 맨 처음 발견되는 문자의 0부터 시작하는 인덱스를 보고합니다.</summary>
      <returns>이 인스턴스에서 <paramref name="anyOf" />의 문자가 처음 발견된 인덱스 위치(0부터 시작)입니다. <paramref name="anyOf" />의 문자가 발견되지 않으면 -1입니다.</returns>
      <param name="anyOf">검색할 문자를 하나 이상 포함하는 유니코드 문자 배열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.IndexOfAny(System.Char[],System.Int32)">
      <summary>지정된 유니코드 문자 배열에 있는 문자 중에 이 인스턴스에서 맨 처음 발견되는 문자의 0부터 시작하는 인덱스를 보고합니다.검색은 지정된 문자 위치에서 시작됩니다.</summary>
      <returns>이 인스턴스에서 <paramref name="anyOf" />의 문자가 처음 발견된 인덱스 위치(0부터 시작)입니다. <paramref name="anyOf" />의 문자가 발견되지 않으면 -1입니다.</returns>
      <param name="anyOf">검색할 문자를 하나 이상 포함하는 유니코드 문자 배열입니다. </param>
      <param name="startIndex">검색을 시작할 위치입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is negative.-or- <paramref name="startIndex" /> is greater than the number of characters in this instance. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.IndexOfAny(System.Char[],System.Int32,System.Int32)">
      <summary>지정된 유니코드 문자 배열에 있는 문자 중에 이 인스턴스에서 맨 처음 발견되는 문자의 0부터 시작하는 인덱스를 보고합니다.검색은 지정된 문자 위치에서 시작하여 지정된 수의 문자 위치를 검사합니다.</summary>
      <returns>이 인스턴스에서 <paramref name="anyOf" />의 문자가 처음 발견된 인덱스 위치(0부터 시작)입니다. <paramref name="anyOf" />의 문자가 발견되지 않으면 -1입니다.</returns>
      <param name="anyOf">검색할 문자를 하나 이상 포함하는 유니코드 문자 배열입니다. </param>
      <param name="startIndex">검색을 시작할 위치입니다. </param>
      <param name="count">검사할 문자 위치의 수입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- <paramref name="count" /> + <paramref name="startIndex" /> is greater than the number of characters in this instance. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Insert(System.Int32,System.String)">
      <summary>이 인스턴스의 지정된 인덱스 위치에 지정한 문자열이 삽입되는 새 문자열을 반환합니다. </summary>
      <returns>이 인스턴스와 동일하지만 <paramref name="value" /> 위치에 <paramref name="startIndex" />가 삽입된 새 문자열입니다.</returns>
      <param name="startIndex">삽입의 0부터 시작하는 인덱스 위치입니다. </param>
      <param name="value">삽입할 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is negative or greater than the length of this instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IsNullOrEmpty(System.String)">
      <summary>지정된 문자열이 null이거나 <see cref="F:System.String.Empty" /> 문자열인지를 나타냅니다.</summary>
      <returns>true 매개 변수가 <paramref name="value" />이거나 빈 문자열("")이면 null이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">테스트할 문자열입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IsNullOrWhiteSpace(System.String)">
      <summary>지정된 문자열이 null이거나 비어 있거나 공백 문자로만 구성되어 있는지를 나타냅니다.</summary>
      <returns>true 매개 변수가 <paramref name="value" /> 또는 null이거나, <see cref="F:System.String.Empty" />가 모두 공백 문자로 구성되어 있으면 <paramref name="value" />입니다. </returns>
      <param name="value">테스트할 문자열입니다.</param>
    </member>
    <member name="M:System.String.Join(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>각 멤버 사이에 지정된 구분 기호를 사용하여 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 형식의 생성된 <see cref="T:System.String" /> 컬렉션의 멤버를 연결합니다.</summary>
      <returns>
        <paramref name="values" /> 문자열로 구분된 <paramref name="separator" />의 멤버로 구성된 문자열입니다.<paramref name="values" />에 멤버가 없는 경우 이 메서드는 <see cref="F:System.String.Empty" />를 반환합니다.</returns>
      <param name="separator">구분 기호로 사용할 문자열입니다.<paramref name="values" />에 둘 이상의 요소가 있는 경우에만 <paramref name="separator" />가 반환된 문자열에 포함됩니다.</param>
      <param name="values">연결할 문자열을 포함하는 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Join``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>각 멤버 사이에 지정된 구분 기호를 사용하여 컬렉션의 멤버를 연결합니다.</summary>
      <returns>
        <paramref name="values" /> 문자열로 구분된 <paramref name="separator" />의 멤버로 구성된 문자열입니다.<paramref name="values" />에 멤버가 없는 경우 이 메서드는 <see cref="F:System.String.Empty" />를 반환합니다.</returns>
      <param name="separator">구분 기호로 사용할 문자열입니다.<paramref name="values" />에 둘 이상의 요소가 있는 경우에만 <paramref name="separator" />가 반환된 문자열에 포함됩니다.</param>
      <param name="values">연결할 개체를 포함하는 컬렉션입니다.</param>
      <typeparam name="T">
        <paramref name="values" /> 멤버의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Join(System.String,System.Object[])">
      <summary>각 요소 사이에 지정된 구분 기호를 사용하여 개체 배열의 요소를 연결합니다.</summary>
      <returns>
        <paramref name="values" /> 문자열로 구분된 <paramref name="separator" />의 요소로 구성된 문자열입니다.<paramref name="values" />가 빈 배열인 경우 이 메서드는 <see cref="F:System.String.Empty" />를 반환합니다.</returns>
      <param name="separator">구분 기호로 사용할 문자열입니다.<paramref name="values" />에 둘 이상의 요소가 있는 경우에만 <paramref name="separator" />가 반환된 문자열에 포함됩니다.</param>
      <param name="values">연결할 요소가 포함된 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Join(System.String,System.String[])">
      <summary>각 요소 사이에 지정된 구분 기호를 사용하여 문자열 배열의 모든 요소를 연결합니다. </summary>
      <returns>
        <paramref name="value" /> 문자열로 구분된 <paramref name="separator" />의 요소로 구성된 문자열입니다.<paramref name="value" />가 빈 배열인 경우 이 메서드는 <see cref="F:System.String.Empty" />를 반환합니다.</returns>
      <param name="separator">구분 기호로 사용할 문자열입니다.<paramref name="value" />에 둘 이상의 요소가 있는 경우에만 <paramref name="separator" />가 반환된 문자열에 포함됩니다.</param>
      <param name="value">연결할 요소가 포함된 배열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Join(System.String,System.String[],System.Int32,System.Int32)">
      <summary>각 요소 사이에 지정된 구분 기호를 사용하여 문자열 배열의 지정된 요소를 연결합니다. </summary>
      <returns>
        <paramref name="value" /> 문자열로 구분된 <paramref name="separator" />의 문자열로 구성된 문자열입니다. 또는<see cref="F:System.String.Empty" />가 0이거나, <paramref name="count" />에 요소가 없거나, <paramref name="value" />와 <paramref name="separator" />의 모든 요소가 <paramref name="value" />면 <see cref="F:System.String.Empty" />입니다.</returns>
      <param name="separator">구분 기호로 사용할 문자열입니다.<paramref name="value" />에 둘 이상의 요소가 있는 경우에만 <paramref name="separator" />가 반환된 문자열에 포함됩니다.</param>
      <param name="value">연결할 요소가 포함된 배열입니다. </param>
      <param name="startIndex">사용할 <paramref name="value" />의 첫 번째 요소입니다. </param>
      <param name="count">
        <paramref name="value" /> 중에서 사용할 요소의 수입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="count" /> is less than 0.-or- <paramref name="startIndex" /> plus <paramref name="count" /> is greater than the number of elements in <paramref name="value" />. </exception>
      <exception cref="T:System.OutOfMemoryException">Out of memory.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.Char)">
      <summary>이 인스턴스에서 마지막으로 발견되는 지정된 유니코드 문자의 0부터 시작하는 인덱스 위치를 보고합니다.</summary>
      <returns>해당 문자가 있으면 <paramref name="value" />의 인덱스 위치(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <param name="value">검색할 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.Char,System.Int32)">
      <summary>이 인스턴스에서 마지막으로 발견되는 지정된 유니코드 문자의 0부터 시작하는 인덱스 위치를 보고합니다.지정된 문자 위치에서 시작하고 문자열의 시작 부분을 향해 뒤로 검색이 진행됩니다.</summary>
      <returns>해당 문자가 있으면 <paramref name="value" />의 인덱스 위치(0부터 시작)이고, 해당 문자가 없거나 현재 인스턴스가 <see cref="F:System.String.Empty" />와 같으면 -1입니다.</returns>
      <param name="value">검색할 유니코드 문자입니다. </param>
      <param name="startIndex">검색을 시작할 위치입니다.<paramref name="startIndex" />에서 이 인스턴스의 시작 부분을 향해 검색이 진행됩니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than or equal to the length of this instance.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.Char,System.Int32,System.Int32)">
      <summary>이 인스턴스의 부분 문자열에서 마지막으로 발견되는 지정된 유니코드 문자의 0부터 시작하는 인덱스 위치를 보고합니다.지정된 문자 위치에서 검색을 시작하여 지정된 수의 문자 위치에 대한 문자열의 시작 부분 쪽으로 뒤로 검색합니다.</summary>
      <returns>해당 문자가 있으면 <paramref name="value" />의 인덱스 위치(0부터 시작)이고, 해당 문자가 없거나 현재 인스턴스가 <see cref="F:System.String.Empty" />와 같으면 -1입니다.</returns>
      <param name="value">검색할 유니코드 문자입니다. </param>
      <param name="startIndex">검색을 시작할 위치입니다.<paramref name="startIndex" />에서 이 인스턴스의 시작 부분을 향해 검색이 진행됩니다.</param>
      <param name="count">검사할 문자 위치의 수입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than or equal to the length of this instance.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" />
                 - <paramref name="count" /> + 1 is less than zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String)">
      <summary>이 인스턴스에서 마지막으로 발견되는 지정된 문자열의 0부터 시작하는 인덱스 위치를 보고합니다.</summary>
      <returns>해당 문자열이 있으면 <paramref name="value" />의 0부터 시작하는 인덱스 위치이고, 그렇지 않으면 -1입니다.<paramref name="value" />가 <see cref="F:System.String.Empty" />이면 이 인스턴스의 마지막 인덱스 위치를 반환합니다.</returns>
      <param name="value">검색할 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32)">
      <summary>이 인스턴스에서 마지막으로 발견되는 지정된 문자열의 0부터 시작하는 인덱스 위치를 보고합니다.지정된 문자 위치에서 시작하고 문자열의 시작 부분을 향해 뒤로 검색이 진행됩니다.</summary>
      <returns>해당 문자열이 있으면 <paramref name="value" />의 인덱스 위치(0부터 시작)이고, 해당 문자열이 없거나 현재 인스턴스가 <see cref="F:System.String.Empty" />와 같으면 -1입니다.<paramref name="value" />가 <see cref="F:System.String.Empty" />이면 반환 값은 <paramref name="startIndex" />와 이 인스턴스의 마지막 인덱스 위치 중 작은 값입니다.</returns>
      <param name="value">검색할 문자열입니다. </param>
      <param name="startIndex">검색을 시작할 위치입니다.<paramref name="startIndex" />에서 이 인스턴스의 시작 부분을 향해 검색이 진행됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than the length of the current instance. -or-The current instance equals <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than -1 or greater than zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32)">
      <summary>이 인스턴스에서 마지막으로 발견되는 지정된 문자열의 0부터 시작하는 인덱스 위치를 보고합니다.지정된 문자 위치에서 검색을 시작하여 지정된 수의 문자 위치에 대한 문자열의 시작 부분 쪽으로 뒤로 검색합니다.</summary>
      <returns>해당 문자열이 있으면 <paramref name="value" />의 인덱스 위치(0부터 시작)이고, 해당 문자열이 없거나 현재 인스턴스가 <see cref="F:System.String.Empty" />와 같으면 -1입니다.<paramref name="value" />가 <see cref="F:System.String.Empty" />이면 반환 값은 <paramref name="startIndex" />와 이 인스턴스의 마지막 인덱스 위치 중 작은 값입니다.</returns>
      <param name="value">검색할 문자열입니다. </param>
      <param name="startIndex">검색을 시작할 위치입니다.<paramref name="startIndex" />에서 이 인스턴스의 시작 부분을 향해 검색이 진행됩니다.</param>
      <param name="count">검사할 문자 위치의 수입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and  <paramref name="startIndex" /> is negative.-or- The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is greater than the length of this instance.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" />
                 - <paramref name="count" /> + 1 specifies a position that is not within this instance. -or-The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="start" /> is less than -1 or greater than zero. -or-The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="count" /> is greater than 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)">
      <summary>이 인스턴스에서 마지막으로 발견되는 지정된 문자열의 0부터 시작하는 인덱스 위치를 보고합니다.지정된 문자 위치에서 검색을 시작하여 지정된 수의 문자 위치에 대한 문자열의 시작 부분 쪽으로 뒤로 검색합니다.매개 변수는 지정된 문자열을 검색할 때 수행할 비교 유형을 지정합니다.</summary>
      <returns>해당 문자열이 있으면 <paramref name="value" /> 매개 변수의 인덱스 위치(0부터 시작)이고, 해당 문자열이 없거나 현재 인스턴스가 <see cref="F:System.String.Empty" />와 같으면 -1입니다.<paramref name="value" />가 <see cref="F:System.String.Empty" />이면 반환 값은 <paramref name="startIndex" />와 이 인스턴스의 마지막 인덱스 위치 중 작은 값입니다.</returns>
      <param name="value">검색할 문자열입니다. </param>
      <param name="startIndex">검색을 시작할 위치입니다.<paramref name="startIndex" />에서 이 인스턴스의 시작 부분을 향해 검색이 진행됩니다.</param>
      <param name="count">검사할 문자 위치의 수입니다. </param>
      <param name="comparisonType">검색 규칙을 지정하는 열거형 값 중 하나입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is negative.-or- The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is greater than the length of this instance.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> + 1 - <paramref name="count" /> specifies a position that is not within this instance. -or-The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="start" /> is less than -1 or greater than zero. -or-The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="count" /> is greater than 1. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)">
      <summary>현재 <see cref="T:System.String" /> 개체에서 마지막으로 발견되는 지정된 문자열의 0부터 시작하는 인덱스를 보고합니다.지정된 문자 위치에서 시작하고 문자열의 시작 부분을 향해 뒤로 검색이 진행됩니다.매개 변수는 지정된 문자열을 검색할 때 수행할 비교 유형을 지정합니다.</summary>
      <returns>해당 문자열이 있으면 <paramref name="value" /> 매개 변수의 인덱스 위치(0부터 시작)이고, 해당 문자열이 없거나 현재 인스턴스가 <see cref="F:System.String.Empty" />와 같으면 -1입니다.<paramref name="value" />가 <see cref="F:System.String.Empty" />이면 반환 값은 <paramref name="startIndex" />와 이 인스턴스의 마지막 인덱스 위치 중 작은 값입니다.</returns>
      <param name="value">검색할 문자열입니다. </param>
      <param name="startIndex">검색을 시작할 위치입니다.<paramref name="startIndex" />에서 이 인스턴스의 시작 부분을 향해 검색이 진행됩니다.</param>
      <param name="comparisonType">검색 규칙을 지정하는 열거형 값 중 하나입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than the length of the current instance. -or-The current instance equals <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than -1 or greater than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.StringComparison)">
      <summary>현재 <see cref="T:System.String" /> 개체에서 마지막으로 발견되는 지정된 문자열의 0부터 시작하는 인덱스를 보고합니다.매개 변수는 지정된 문자열에 사용할 검색 유형을 지정합니다.</summary>
      <returns>해당 문자열이 있으면 <paramref name="value" /> 매개 변수의 0부터 시작하는 인덱스 위치이고, 그렇지 않으면 -1입니다.<paramref name="value" />가 <see cref="F:System.String.Empty" />이면 이 인스턴스의 마지막 인덱스 위치를 반환합니다.</returns>
      <param name="value">검색할 문자열입니다. </param>
      <param name="comparisonType">검색 규칙을 지정하는 열거형 값 중 하나입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.LastIndexOfAny(System.Char[])">
      <summary>유니코드 배열에서 지정된 하나 이상의 문자 중에 이 인스턴스에서 마지막으로 발견되는 문자의 0부터 시작하는 인덱스 위치를 보고합니다.</summary>
      <returns>이 인스턴스에서 <paramref name="anyOf" />의 문자가 마지막으로 발견된 인덱스 위치입니다. <paramref name="anyOf" />의 문자가 발견되지 않으면 -1입니다.</returns>
      <param name="anyOf">검색할 문자를 하나 이상 포함하는 유니코드 문자 배열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOfAny(System.Char[],System.Int32)">
      <summary>유니코드 배열에서 지정된 하나 이상의 문자 중에 이 인스턴스에서 마지막으로 발견되는 문자의 0부터 시작하는 인덱스 위치를 보고합니다.지정된 문자 위치에서 시작하고 문자열의 시작 부분을 향해 뒤로 검색이 진행됩니다.</summary>
      <returns>이 인스턴스에서 <paramref name="anyOf" />의 문자가 마지막으로 발견된 인덱스 위치입니다. <paramref name="anyOf" />의 문자가 발견되지 않거나 현재 인스턴스가 <see cref="F:System.String.Empty" />와 동일하면 -1입니다.</returns>
      <param name="anyOf">검색할 문자를 하나 이상 포함하는 유니코드 문자 배열입니다. </param>
      <param name="startIndex">검색을 시작할 위치입니다.<paramref name="startIndex" />에서 이 인스턴스의 시작 부분을 향해 검색이 진행됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> specifies a position that is not within this instance. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOfAny(System.Char[],System.Int32,System.Int32)">
      <summary>유니코드 배열에서 지정된 하나 이상의 문자 중에 이 인스턴스에서 마지막으로 발견되는 문자의 0부터 시작하는 인덱스 위치를 보고합니다.지정된 문자 위치에서 검색을 시작하여 지정된 수의 문자 위치에 대한 문자열의 시작 부분 쪽으로 뒤로 검색합니다.</summary>
      <returns>이 인스턴스에서 <paramref name="anyOf" />의 문자가 마지막으로 발견된 인덱스 위치입니다. <paramref name="anyOf" />의 문자가 발견되지 않거나 현재 인스턴스가 <see cref="F:System.String.Empty" />와 동일하면 -1입니다.</returns>
      <param name="anyOf">검색할 문자를 하나 이상 포함하는 유니코드 문자 배열입니다. </param>
      <param name="startIndex">검색을 시작할 위치입니다.<paramref name="startIndex" />에서 이 인스턴스의 시작 부분을 향해 검색이 진행됩니다.</param>
      <param name="count">검사할 문자 위치의 수입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> minus <paramref name="count" /> + 1 is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.String.Length">
      <summary>현재 <see cref="T:System.String" /> 개체의 문자 수를 가져옵니다.</summary>
      <returns>현재 문자열의 문자 수를 가져옵니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.op_Equality(System.String,System.String)">
      <summary>지정된 두 문자열의 값이 같은지를 확인합니다.</summary>
      <returns>true의 값이 <paramref name="a" />의 값과 같으면 <paramref name="b" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="a">비교할 첫 번째 문자열 또는 null입니다. </param>
      <param name="b">비교할 두 번째 문자열 또는 null입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.String.op_Inequality(System.String,System.String)">
      <summary>지정된 두 문자열의 값이 다른지를 확인합니다.</summary>
      <returns>true의 값이 <paramref name="a" />의 값과 다르면 <paramref name="b" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="a">비교할 첫 번째 문자열 또는 null입니다. </param>
      <param name="b">비교할 두 번째 문자열 또는 null입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.String.PadLeft(System.Int32)">
      <summary>지정한 길이만큼 왼쪽의 안쪽 여백을 공백으로 채워서 이 인스턴스의 문자를 오른쪽에 맞추는 새 문자열을 반환합니다.</summary>
      <returns>이 인스턴스와 동일하지만 오른쪽으로 맞춰지고 왼쪽의 안쪽 여백이 <paramref name="totalWidth" />의 길이만큼 공백 문자로 채워진 새 문자열입니다.그러나 <paramref name="totalWidth" />가 이 인스턴스의 길이보다 작을 경우 메서드는 기존 인스턴스에 대한 참조를 반환합니다.<paramref name="totalWidth" />가 이 인스턴스의 길이와 같을 경우 메서드는 이 인스턴스와 동일한 새 문자열을 반환합니다.</returns>
      <param name="totalWidth">결과 문자열에 있는 문자 수는 원래 문자 수와 추가 안쪽 여백 문자 수를 합한 값과 같습니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="totalWidth" /> is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.PadLeft(System.Int32,System.Char)">
      <summary>지정한 길이만큼 왼쪽의 안쪽 여백을 지정된 유니코드 문자로 채워서 이 인스턴스의 문자를 오른쪽에 맞추는 새 문자열을 반환합니다.</summary>
      <returns>이 인스턴스와 동일하지만 오른쪽으로 맞춰지고 왼쪽의 안쪽 여백이 <paramref name="paddingChar" />의 길이만큼 <paramref name="totalWidth" /> 문자로 채워진 새 문자열입니다.그러나 <paramref name="totalWidth" />가 이 인스턴스의 길이보다 작을 경우 메서드는 기존 인스턴스에 대한 참조를 반환합니다.<paramref name="totalWidth" />가 이 인스턴스의 길이와 같을 경우 메서드는 이 인스턴스와 동일한 새 문자열을 반환합니다.</returns>
      <param name="totalWidth">결과 문자열에 있는 문자 수는 원래 문자 수와 추가 안쪽 여백 문자 수를 합한 값과 같습니다. </param>
      <param name="paddingChar">유니코드 안쪽 여백 문자입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="totalWidth" /> is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.PadRight(System.Int32)">
      <summary>지정한 길이만큼 오른쪽의 안쪽 여백을 공백으로 채워서 이 문자열의 문자를 왼쪽에 맞추는 새 문자열을 반환합니다.</summary>
      <returns>이 인스턴스와 동일하지만 왼쪽으로 맞춰지고 오른쪽의 안쪽 여백이 <paramref name="totalWidth" />의 길이만큼 공백 문자로 채워진 새 문자열입니다.그러나 <paramref name="totalWidth" />가 이 인스턴스의 길이보다 작을 경우 메서드는 기존 인스턴스에 대한 참조를 반환합니다.<paramref name="totalWidth" />가 이 인스턴스의 길이와 같을 경우 메서드는 이 인스턴스와 동일한 새 문자열을 반환합니다.</returns>
      <param name="totalWidth">결과 문자열에 있는 문자 수는 원래 문자 수와 추가 안쪽 여백 문자 수를 합한 값과 같습니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="totalWidth" /> is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.PadRight(System.Int32,System.Char)">
      <summary>지정한 길이만큼 오른쪽의 안쪽 여백을 지정된 유니코드 문자로 채워서 이 문자열의 문자를 왼쪽에 맞추는 새 문자열을 반환합니다.</summary>
      <returns>이 인스턴스와 동일하지만 왼쪽으로 맞춰지고 오른쪽의 안쪽 여백이 <paramref name="paddingChar" />의 길이만큼 <paramref name="totalWidth" /> 문자로 채워진 새 문자열입니다.그러나 <paramref name="totalWidth" />가 이 인스턴스의 길이보다 작을 경우 메서드는 기존 인스턴스에 대한 참조를 반환합니다.<paramref name="totalWidth" />가 이 인스턴스의 길이와 같을 경우 메서드는 이 인스턴스와 동일한 새 문자열을 반환합니다.</returns>
      <param name="totalWidth">결과 문자열에 있는 문자 수는 원래 문자 수와 추가 안쪽 여백 문자 수를 합한 값과 같습니다. </param>
      <param name="paddingChar">유니코드 안쪽 여백 문자입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="totalWidth" /> is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Remove(System.Int32)">
      <summary>지정된 위치부터 마지막 위치 사이에 현재 인스턴스의 모든 문자가 삭제되었던 새 문자열을 반환합니다.</summary>
      <returns>제거된 문자를 제외하고 이 문자열과 동일한 새 문자열입니다.</returns>
      <param name="startIndex">문자 삭제를 0부터 시작할 위치입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero.-or- <paramref name="startIndex" /> specifies a position that is not within this string. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Remove(System.Int32,System.Int32)">
      <summary>현재 인스턴스의 지정된 위치에서 시작하여 지정된 수의 문자가 삭제되었던 새 문자열을 반환합니다.</summary>
      <returns>제거된 문자를 제외하고 이 인스턴스와 동일한 새 문자열입니다.</returns>
      <param name="startIndex">문자 삭제를 0부터 시작할 위치입니다. </param>
      <param name="count">삭제할 문자의 수입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Either <paramref name="startIndex" /> or <paramref name="count" /> is less than zero.-or- <paramref name="startIndex" /> plus <paramref name="count" /> specify a position outside this instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Replace(System.Char,System.Char)">
      <summary>현재 인스턴스의 지정된 유니코드 문자가 지정된 다른 유니코드 문자로 모두 바뀌는 새 문자열을 반환합니다.</summary>
      <returns>
        <paramref name="oldChar" />의 모든 인스턴스를 <paramref name="newChar" />로 바꾼다는 점을 제외하고 이 인스턴스와 동일한 문자열입니다.<paramref name="oldChar" />를 현재 인스턴스에서 찾을 수 없으면 메서드가 변경되지 않은 현재 인스턴스를 반환합니다.</returns>
      <param name="oldChar">바꿀 유니코드 문자입니다. </param>
      <param name="newChar">모든 <paramref name="oldChar" />을 바꿀 유니코드 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Replace(System.String,System.String)">
      <summary>현재 인스턴스의 지정된 문자열이 지정된 다른 문자열로 모두 바뀌는 새 문자열을 반환합니다.</summary>
      <returns>
        <paramref name="oldValue" />의 모든 인스턴스를 <paramref name="newValue" />로 바꾼다는 점을 제외하고 현재 문자열과 동일한 문자열입니다.<paramref name="oldValue" />를 현재 인스턴스에서 찾을 수 없으면 메서드가 변경되지 않은 현재 인스턴스를 반환합니다.</returns>
      <param name="oldValue">바꿀 문자열입니다. </param>
      <param name="newValue">모든 <paramref name="oldValue" />를 바꿀 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oldValue" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="oldValue" /> is the empty string (""). </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[])">
      <summary>지정된 유니코드 문자 배열의 요소로 구분된 이 인스턴스의 부분 문자열이 포함된 문자열 배열을 반환합니다.</summary>
      <returns>해당 요소에 <paramref name="separator" />에 있는 하나 이상의 문자로 구분되는 이 인스턴스의 부분 문자열이 포함된 배열입니다.자세한 내용은 설명 섹션을 참조하세요.</returns>
      <param name="separator">이 인스턴스의 부분 문자열을 구분하는 유니코드 문자, 구분 기호를 포함하지 않는 빈 배열, 또는 null입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[],System.Int32)">
      <summary>지정된 유니코드 문자 배열의 요소로 구분된 이 인스턴스의 부분 문자열이 포함된 문자열 배열을 반환합니다.매개 변수는 반환할 부분 문자열의 최대 수를 지정합니다.</summary>
      <returns>해당 요소에 <paramref name="separator" />에 있는 하나 이상의 문자로 구분되는 이 인스턴스의 부분 문자열이 포함된 배열입니다.자세한 내용은 설명 섹션을 참조하세요.</returns>
      <param name="separator">이 인스턴스의 부분 문자열을 구분하는 유니코드 문자, 구분 기호를 포함하지 않는 빈 배열, 또는 null입니다. </param>
      <param name="count">반환할 부분 문자열의 최대 수입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[],System.Int32,System.StringSplitOptions)">
      <summary>지정된 유니코드 문자 배열의 요소로 구분된 이 문자열의 부분 문자열이 포함된 문자열 배열을 반환합니다.매개 변수는 반환할 부분 문자열의 최대 수 및 빈 배열 요소를 반환할지를 지정합니다.</summary>
      <returns>해당 요소에 <paramref name="separator" />에 있는 하나 이상의 문자로 구분되는 이 문자열의 부분 문자열이 포함된 배열입니다.자세한 내용은 설명 섹션을 참조하세요.</returns>
      <param name="separator">이 문자열의 부분 문자열을 구분하는 유니코드 문자, 구분 기호를 포함하지 않는 빈 배열, 또는 null입니다. </param>
      <param name="count">반환할 부분 문자열의 최대 수입니다. </param>
      <param name="options">반환된 배열에서 빈 배열 요소를 생략하려면 <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />이고, 반환된 배열에 빈 배열 요소를 포함하려면 <see cref="F:System.StringSplitOptions.None" />입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[],System.StringSplitOptions)">
      <summary>지정된 유니코드 문자 배열의 요소로 구분된 이 문자열의 부분 문자열이 포함된 문자열 배열을 반환합니다.매개 변수는 빈 배열 요소를 반환할지를 지정합니다.</summary>
      <returns>해당 요소에 <paramref name="separator" />에 있는 하나 이상의 문자로 구분되는 이 문자열의 부분 문자열이 포함된 배열입니다.자세한 내용은 설명 섹션을 참조하세요.</returns>
      <param name="separator">이 문자열의 부분 문자열을 구분하는 유니코드 문자, 구분 기호를 포함하지 않는 빈 배열, 또는 null입니다. </param>
      <param name="options">반환된 배열에서 빈 배열 요소를 생략하려면 <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />이고, 반환된 배열에 빈 배열 요소를 포함하려면 <see cref="F:System.StringSplitOptions.None" />입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.String[],System.Int32,System.StringSplitOptions)">
      <summary>지정된 문자열 배열의 요소로 구분된 이 문자열의 부분 문자열이 포함된 문자열 배열을 반환합니다.매개 변수는 반환할 부분 문자열의 최대 수 및 빈 배열 요소를 반환할지를 지정합니다.</summary>
      <returns>해당 요소에 <paramref name="separator" />에 있는 하나 이상의 문자열로 구분되는 이 문자열의 부분 문자열이 포함된 배열입니다.자세한 내용은 설명 섹션을 참조하세요.</returns>
      <param name="separator">이 문자열의 부분 문자열을 구분하는 문자열 배열, 구분 기호를 포함하지 않는 빈 배열 또는 null입니다. </param>
      <param name="count">반환할 부분 문자열의 최대 수입니다. </param>
      <param name="options">반환된 배열에서 빈 배열 요소를 생략하려면 <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />이고, 반환된 배열에 빈 배열 요소를 포함하려면 <see cref="F:System.StringSplitOptions.None" />입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.String[],System.StringSplitOptions)">
      <summary>지정된 문자열 배열의 요소로 구분된 이 문자열의 부분 문자열이 포함된 문자열 배열을 반환합니다.매개 변수는 빈 배열 요소를 반환할지를 지정합니다.</summary>
      <returns>해당 요소에 <paramref name="separator" />에 있는 하나 이상의 문자열로 구분되는 이 문자열의 부분 문자열이 포함된 배열입니다.자세한 내용은 설명 섹션을 참조하세요.</returns>
      <param name="separator">이 문자열의 부분 문자열을 구분하는 문자열 배열, 구분 기호를 포함하지 않는 빈 배열 또는 null입니다. </param>
      <param name="options">반환된 배열에서 빈 배열 요소를 생략하려면 <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />이고, 반환된 배열에 빈 배열 요소를 포함하려면 <see cref="F:System.StringSplitOptions.None" />입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.StartsWith(System.String)">
      <summary>이 문자열 인스턴스의 시작 부분과 지정한 문자열이 일치하는지를 확인합니다.</summary>
      <returns>이 문자열의 시작 부분이 true와 일치하면 <paramref name="value" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">비교할 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.StartsWith(System.String,System.StringComparison)">
      <summary>지정한 비교 옵션을 사용하여 비교할 때 지정한 문자열과 이 문자열 인스턴스의 시작 부분이 일치하는지를 확인합니다.</summary>
      <returns>이 인스턴스가 true로 시작하는 경우 <paramref name="value" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">비교할 문자열입니다. </param>
      <param name="comparisonType">이 문자열과 <paramref name="value" />를 비교하는 방법을 결정하는 열거형 값 중 하나입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.Substring(System.Int32)">
      <summary>이 인스턴스에서 부분 문자열을 검색합니다.부분 문자열은 지정된 문자 위치에서 시작하고 문자열 끝까지 계속됩니다.</summary>
      <returns>이 인스턴스의 <paramref name="startIndex" />에서 시작하는 부분 문자열에 해당하는 문자열이거나, <see cref="F:System.String.Empty" />가 이 인스턴스의 길이와 같으면 <paramref name="startIndex" />입니다.</returns>
      <param name="startIndex">이 인스턴스의 부분 문자열에 있는 0부터 시작할 문자 위치입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of this instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Substring(System.Int32,System.Int32)">
      <summary>이 인스턴스에서 부분 문자열을 검색합니다.부분 문자열은 지정된 문자 위치에서 시작하고 길이도 지정되어 있습니다.</summary>
      <returns>이 인스턴스의 <paramref name="length" />에서 시작하는 <paramref name="startIndex" /> 길이의 부분 문자열에 해당하는 문자열이거나, <see cref="F:System.String.Empty" />가 이 인스턴스의 길이와 같고 <paramref name="startIndex" />가 0이면 <paramref name="length" />입니다.</returns>
      <param name="startIndex">이 인스턴스의 부분 문자열에 있는 0부터 시작할 문자 위치입니다. </param>
      <param name="length">부분 문자열에 있는 문자의 수입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> plus <paramref name="length" /> indicates a position not within this instance.-or- <paramref name="startIndex" /> or <paramref name="length" /> is less than zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>현재 <see cref="T:System.String" /> 개체를 반복하는 열거자를 반환합니다. </summary>
      <returns>현재 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 개체를 반복하는 데 사용할 수 있는 <see cref="T:System.Char" /> 형식의 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="M:System.String.System#Collections#IEnumerable#GetEnumerator">
      <summary>현재 <see cref="T:System.String" /> 개체를 반복하는 열거자를 반환합니다. </summary>
      <returns>현재 문자열을 반복하는 데 사용할 수 있는 열거자입니다.</returns>
    </member>
    <member name="M:System.String.System#IComparable#CompareTo(System.Object)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 순서를 나타내는 부호 있는 정수입니다.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.String" />. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.String.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>현재 문자열의 값이 true이면 <see cref="F:System.Boolean.TrueString" />이고, 현재 문자열의 값이 false이면 <see cref="F:System.Boolean.FalseString" />입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.FormatException">The value of the current string is not <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.String" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.String" /> 개체의 인덱스 0에 있는 문자입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDateTime(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.String" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.String" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number less than <see cref="F:System.Decimal.MinValue" /> or than <see cref="F:System.Decimal.MaxValue" /> greater. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.String" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.String" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.String" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.String" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.String" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.String" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToString(System.IFormatProvider)"></member>
    <member name="M:System.String.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.String" /> 개체의 변환된 값입니다.</returns>
      <param name="type">반환되는 개체의 형식입니다. </param>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">The value of the current <see cref="T:System.String" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.String" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />.</exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.String" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater <see cref="F:System.UInt32.MaxValue" /> or less than <see cref="F:System.UInt32.MinValue" /></exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.String" /> 개체의 변환된 값입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
    </member>
    <member name="M:System.String.ToCharArray">
      <summary>이 인스턴스의 문자를 유니코드 문자 배열에 복사합니다. </summary>
      <returns>해당 요소가 이 인스턴스의 각 문자로 이루어진 유니코드 문자 배열을 반환합니다.이 인스턴스가 빈 문자열이면 반환된 배열은 길이가 0인 빈 배열입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.ToCharArray(System.Int32,System.Int32)">
      <summary>이 인스턴스의 지정된 부분 문자열에 있는 문자를 유니코드 문자 배열에 복사합니다.</summary>
      <returns>해당 요소가 이 인스턴스의 <paramref name="length" /> 문자 위치부터 <paramref name="startIndex" /> 개의 문자로 이루어진 유니코드 문자 배열을 반환합니다.</returns>
      <param name="startIndex">이 인스턴스에 있는 부분 문자열의 시작 위치입니다. </param>
      <param name="length">이 인스턴스에 있는 부분 문자열의 길이입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than zero.-or- <paramref name="startIndex" /> plus <paramref name="length" /> is greater than the length of this instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.ToLower">
      <summary>이 문자열의 복사본을 소문자로 변환하여 반환합니다.</summary>
      <returns>소문자 문자열입니다.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.ToLowerInvariant">
      <summary>고정 문화권의 대/소문자 규칙을 사용하여 소문자로 변환된 이 <see cref="T:System.String" /> 개체의 복사본을 반환합니다.</summary>
      <returns>소문자로 표시된 현재 문자열입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.ToString">
      <summary>
        <see cref="T:System.String" />의 이 인스턴스를 반환하며, 이때 실제 변환은 수행되지 않습니다.</summary>
      <returns>현재 문자열입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.ToUpper">
      <summary>이 문자열의 복사본을 대문자로 변환하여 반환합니다.</summary>
      <returns>대문자로 표시된 현재 문자열입니다.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.ToUpperInvariant">
      <summary>고정 문화권의 대/소문자 규칙을 사용하여 대문자로 변환된 이 <see cref="T:System.String" /> 개체의 복사본을 반환합니다.</summary>
      <returns>대문자로 표시된 현재 문자열입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.Trim">
      <summary>현재 <see cref="T:System.String" /> 개체에서 선행 공백과 후행 공백을 모두 제거합니다.</summary>
      <returns>모든 공백 뒤에 있는 문자열이 현재 문자열의 시작 부분과 끝 부분에서 제거됩니다.현재 인스턴스에서 어떠한 문자도 삭제할 수 없는 경우 이 메서드는 현재 인스턴스를 반환합니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Trim(System.Char[])">
      <summary>현재 <see cref="T:System.String" /> 개체에서 배열에 지정된 문자 집합의 선행 항목과 후행 항목을 모두 제거합니다.</summary>
      <returns>
        <paramref name="trimChars" /> 매개 변수의 문자가 현재 문자열의 시작 부분과 끝 부분에서 모두 제거된 후 남아 있는 문자열입니다.<paramref name="trimChars" />가 null이거나 빈 배열이면 공백 문자가 대신 제거됩니다.현재 인스턴스에서 어떠한 문자도 삭제할 수 없는 경우 이 메서드는 현재 인스턴스를 반환합니다.</returns>
      <param name="trimChars">제거할 유니코드 문자 배열이거나 null입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.TrimEnd(System.Char[])">
      <summary>현재 <see cref="T:System.String" /> 개체에서 배열에 지정된 문자 집합의 후행 항목을 모두 제거합니다.</summary>
      <returns>
        <paramref name="trimChars" /> 매개 변수의 문자가 현재 문자열의 끝 부분에서 모두 제거된 후 남아 있는 문자열입니다.<paramref name="trimChars" />가 null이거나 빈 배열이면 유니코드 공백 문자가 대신 제거됩니다.현재 인스턴스에서 어떠한 문자도 삭제할 수 없는 경우 이 메서드는 현재 인스턴스를 반환합니다.</returns>
      <param name="trimChars">제거할 유니코드 문자 배열이거나 null입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.TrimStart(System.Char[])">
      <summary>현재 <see cref="T:System.String" /> 개체에서 배열에 지정된 문자 집합의 선행 항목을 모두 제거합니다.</summary>
      <returns>
        <paramref name="trimChars" /> 매개 변수의 문자가 현재 문자열의 시작 부분에서 모두 제거된 후 남아 있는 문자열입니다.<paramref name="trimChars" />가 null이거나 빈 배열이면 공백 문자가 대신 제거됩니다.</returns>
      <param name="trimChars">제거할 유니코드 문자 배열이거나 null입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.StringComparison">
      <summary>
        <see cref="M:System.String.Compare(System.String,System.String)" /> 및 <see cref="M:System.String.Equals(System.Object)" /> 메서드의 특정 오버로드에서 사용할 문화권, 대/소문자 및 정렬 규칙을 지정합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.StringComparison.CurrentCulture">
      <summary>문화권 구분 정렬 규칙과 현재 문화권을 사용하여 문자열을 비교합니다.</summary>
    </member>
    <member name="F:System.StringComparison.CurrentCultureIgnoreCase">
      <summary>문화권 구분 정렬 규칙과 현재 문화권을 사용하고 비교하고 있는 문자열의 대/소문자를 무시하여 문자열을 비교합니다.</summary>
    </member>
    <member name="F:System.StringComparison.Ordinal">
      <summary>서수 정렬 규칙을 사용하여 문자열을 비교합니다.</summary>
    </member>
    <member name="F:System.StringComparison.OrdinalIgnoreCase">
      <summary>서수 정렬 규칙을 사용하고 비교하고 있는 문자열의 대/소문자를 무시하여 문자열을 비교합니다.</summary>
    </member>
    <member name="T:System.StringSplitOptions">
      <summary>적용 가능한 <see cref="Overload:System.String.Split" /> 메서드 오버로드가 반환 값의 빈 부분 문자열을 포함하는지 여부를 지정합니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.StringSplitOptions.None">
      <summary>반환 값에 빈 문자열이 포함된 배열 요소가 포함됩니다.</summary>
    </member>
    <member name="F:System.StringSplitOptions.RemoveEmptyEntries">
      <summary>반환 값에 빈 문자열이 포함된 배열 요소가 포함되지 않습니다.</summary>
    </member>
    <member name="T:System.ThreadStaticAttribute">
      <summary>정적 필드의 값이 각 스레드에 고유함을 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ThreadStaticAttribute.#ctor">
      <summary>
        <see cref="T:System.ThreadStaticAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.TimeoutException">
      <summary>프로세스나 작업에 할당된 시간이 만료될 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeoutException.#ctor">
      <summary>
        <see cref="T:System.TimeoutException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.TimeoutException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.TimeoutException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다. </param>
    </member>
    <member name="M:System.TimeoutException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 내부 예외를 사용하여 <see cref="T:System.TimeoutException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다. </param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.TimeSpan">
      <summary>시간 간격을 나타냅니다.이 유형의 .NET Framework 소스 코드를 찾아보려면 참조 소스를 참조하세요.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.TimeSpan" /> 구조체의 새 인스턴스를 지정된 시, 분 및 초로 초기화합니다.</summary>
      <param name="hours">시간(시)입니다. </param>
      <param name="minutes">시간(분)입니다. </param>
      <param name="seconds">시간(초)입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.TimeSpan" /> 구조체의 새 인스턴스를 지정된 일, 시, 분 및 초로 초기화합니다.</summary>
      <param name="days">일 수입니다. </param>
      <param name="hours">시간(시)입니다. </param>
      <param name="minutes">시간(분)입니다. </param>
      <param name="seconds">시간(초)입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.TimeSpan" /> 구조체의 새 인스턴스를 지정된 일, 시, 분, 초 및 밀리초로 초기화합니다.</summary>
      <param name="days">일 수입니다. </param>
      <param name="hours">시간(시)입니다. </param>
      <param name="minutes">시간(분)입니다. </param>
      <param name="seconds">시간(초)입니다. </param>
      <param name="milliseconds">시간(밀리초)입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int64)">
      <summary>
        <see cref="T:System.TimeSpan" /> 구조체의 새 인스턴스를 지정된 틱 수로 초기화합니다.</summary>
      <param name="ticks">100나노초 단위로 나타낸 기간입니다. </param>
    </member>
    <member name="M:System.TimeSpan.Add(System.TimeSpan)">
      <summary>지정된 <see cref="T:System.TimeSpan" /> 개체와 이 인스턴스의 합을 값으로 가지는 새 <see cref="T:System.TimeSpan" /> 개체를 반환합니다.</summary>
      <returns>이 인스턴스 값과 <paramref name="ts" /> 값의 합을 나타내는 새 개체입니다.</returns>
      <param name="ts">더할 시간 간격입니다.</param>
      <exception cref="T:System.OverflowException">The resulting <see cref="T:System.TimeSpan" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)">
      <summary>두 <see cref="T:System.TimeSpan" /> 값을 비교하고 첫째 값이 둘째 값보다 짧은지, 같은지 또는 긴지를 나타내는 정수를 반환합니다.</summary>
      <returns>다음 값 중 하나입니다.값 설명 -1 <paramref name="t1" />이 <paramref name="t2" />보다 짧습니다. 0 <paramref name="t1" />가 <paramref name="t2" />와 같은 경우 1 <paramref name="t1" />이 <paramref name="t2" />보다 깁니다. </returns>
      <param name="t1">비교할 첫 번째 시간 간격입니다. </param>
      <param name="t2">비교할 두 번째 시간 간격입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.CompareTo(System.TimeSpan)">
      <summary>이 인스턴스를 지정된 <see cref="T:System.TimeSpan" /> 개체와 비교하고 이 인스턴스가 <see cref="T:System.TimeSpan" /> 개체보다 짧은지, 같은지 또는 긴지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.값 설명 음의 정수 이 인스턴스가 <paramref name="value" />보다 짧습니다. 0 이 인스턴스가 <paramref name="value" />와 같습니다. 양의 정수 이 인스턴스가 <paramref name="value" />보다 깁니다. </returns>
      <param name="value">이 인스턴스와 비교할 개체입니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Days">
      <summary>현재 <see cref="T:System.TimeSpan" /> 구조체가 나타내는 시간 간격의 일 구성 요소를 가져옵니다.</summary>
      <returns>이 인스턴스의 일 구성 요소입니다.반환 값은 양수 또는 음수가 될 수 있습니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Duration">
      <summary>해당 값이 현재 <see cref="T:System.TimeSpan" /> 개체의 절대 값인 새 <see cref="T:System.TimeSpan" /> 개체를 반환합니다.</summary>
      <returns>값이 현재 <see cref="T:System.TimeSpan" /> 개체의 절대 값인 새 개체입니다.</returns>
      <exception cref="T:System.OverflowException">The value of this instance is <see cref="F:System.TimeSpan.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Equals(System.Object)">
      <summary>이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="value" />가 현재 <see cref="T:System.TimeSpan" /> 구조체와 같은 시간 간격을 나타내는 <see cref="T:System.TimeSpan" /> 개체이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">이 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Equals(System.TimeSpan)">
      <summary>이 인스턴스가 지정된 <see cref="T:System.TimeSpan" /> 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="obj" />가 이 인터페이스와 같은 시간 간격을 나타내면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)">
      <summary>지정된 <see cref="T:System.TimeSpan" />의 두 인스턴스가 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="t1" />의 값과 <paramref name="t2" />의 값이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="t1">비교할 첫 번째 시간 간격입니다. </param>
      <param name="t2">비교할 두 번째 시간 간격입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromDays(System.Double)">
      <summary>지정된 일 수를 나타내는 <see cref="T:System.TimeSpan" />을 반환합니다. 여기에서 지정된 값은 밀리초 단위로 반올림됩니다.</summary>
      <returns>
        <paramref name="value" />를 나타내는 개체입니다.</returns>
      <param name="value">밀리초 단위로 반올림되는 일 수입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. -or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromHours(System.Double)">
      <summary>지정된 시간을 나타내는 <see cref="T:System.TimeSpan" />을 반환합니다. 여기에서 지정된 값은 밀리초 단위로 반올림됩니다.</summary>
      <returns>
        <paramref name="value" />를 나타내는 개체입니다.</returns>
      <param name="value">밀리초 단위로 반올림되는 시간(시)입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. -or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromMilliseconds(System.Double)">
      <summary>지정된 시간(밀리초)을 나타내는 <see cref="T:System.TimeSpan" />을 반환합니다.</summary>
      <returns>
        <paramref name="value" />를 나타내는 개체입니다.</returns>
      <param name="value">시간(밀리초)입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromMinutes(System.Double)">
      <summary>지정된 시간(분)을 나타내는 <see cref="T:System.TimeSpan" />을 반환합니다. 여기에서 지정된 값은 밀리초 단위로 반올림됩니다.</summary>
      <returns>
        <paramref name="value" />를 나타내는 개체입니다.</returns>
      <param name="value">밀리초 단위로 반올림되는 시간(분)입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromSeconds(System.Double)">
      <summary>지정된 시간(초)을 나타내는 <see cref="T:System.TimeSpan" />을 반환합니다. 여기에서 지정된 값은 밀리초 단위로 반올림됩니다.</summary>
      <returns>
        <paramref name="value" />를 나타내는 개체입니다.</returns>
      <param name="value">밀리초 단위로 반올림되는 시간(초)입니다. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromTicks(System.Int64)">
      <summary>지정된 시간을 나타내는 <see cref="T:System.TimeSpan" />을 반환합니다. 여기에서 시간은 틱 단위로 지정됩니다.</summary>
      <returns>
        <paramref name="value" />를 나타내는 개체입니다.</returns>
      <param name="value">시간을 나타내는 틱 수입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Hours">
      <summary>현재 <see cref="T:System.TimeSpan" /> 구조체가 나타내는 시간 간격의 시 구성 요소를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.TimeSpan" /> 구조체의 시 구성 요소입니다.반환 값의 범위는 -23에서 23까지입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.MaxValue">
      <summary>최대 <see cref="T:System.TimeSpan" /> 값을 나타냅니다.이 필드는 읽기 전용입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Milliseconds">
      <summary>현재 <see cref="T:System.TimeSpan" /> 구조체가 나타내는 시간 간격의 밀리초 구성 요소를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.TimeSpan" /> 구조체의 밀리초 구성 요소입니다.반환 값의 범위는 -999에서 999까지입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Minutes">
      <summary>현재 <see cref="T:System.TimeSpan" /> 구조체가 나타내는 시간 간격의 분 구성 요소를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.TimeSpan" /> 구조체의 분 구성 요소입니다.반환 값의 범위는 -59에서 59까지입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.MinValue">
      <summary>최소 <see cref="T:System.TimeSpan" /> 값을 나타냅니다.이 필드는 읽기 전용입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Negate">
      <summary>이 인스턴스의 부정 값을 값으로 가지는 새 <see cref="T:System.TimeSpan" /> 개체를 반환합니다.</summary>
      <returns>이 인스턴스와 숫자 값은 같지만 부호가 다른 새 개체입니다.</returns>
      <exception cref="T:System.OverflowException">The negated value of this instance cannot be represented by a <see cref="T:System.TimeSpan" />; that is, the value of this instance is <see cref="F:System.TimeSpan.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)">
      <summary>지정된 두 개의 <see cref="T:System.TimeSpan" /> 인스턴스를 추가합니다.</summary>
      <returns>값이 <paramref name="t1" /> 값과 <paramref name="t2" /> 값의 합계인 개체입니다.</returns>
      <param name="t1">추가할 첫 번째 시간 간격입니다. </param>
      <param name="t2">추가할 두 번째 시간 간격입니다.</param>
      <exception cref="T:System.OverflowException">The resulting <see cref="T:System.TimeSpan" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)">
      <summary>두 개의 <see cref="T:System.TimeSpan" /> 인스턴스가 같은지를 나타냅니다.</summary>
      <returns>
        <paramref name="t1" />의 값과 <paramref name="t2" />의 값이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="t1">비교할 첫 번째 시간 간격입니다. </param>
      <param name="t2">비교할 두 번째 시간 간격입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)">
      <summary>지정된 <see cref="T:System.TimeSpan" />이 지정된 다른 <see cref="T:System.TimeSpan" />보다 큰지를 나타냅니다.</summary>
      <returns>
        <paramref name="t1" />의 값이 <paramref name="t2" />의 값보다 크면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="t1">비교할 첫 번째 시간 간격입니다. </param>
      <param name="t2">비교할 두 번째 시간 간격입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)">
      <summary>지정된 <see cref="T:System.TimeSpan" />이 지정된 다른 <see cref="T:System.TimeSpan" />보다 크거나 같은지를 나타냅니다.</summary>
      <returns>
        <paramref name="t1" />의 값이 <paramref name="t2" />의 값보다 크거나 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="t1">비교할 첫 번째 시간 간격입니다.</param>
      <param name="t2">비교할 두 번째 시간 간격입니다.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)">
      <summary>두 <see cref="T:System.TimeSpan" /> 인스턴스가 다른지를 나타냅니다.</summary>
      <returns>
        <paramref name="t1" />의 값과 <paramref name="t2" />의 값이 다르면 true이고 같으면 false입니다.</returns>
      <param name="t1">비교할 첫 번째 시간 간격입니다.</param>
      <param name="t2">비교할 두 번째 시간 간격입니다.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)">
      <summary>지정된 <see cref="T:System.TimeSpan" />이 지정된 다른 <see cref="T:System.TimeSpan" />보다 작은지를 나타냅니다.</summary>
      <returns>
        <paramref name="t1" />의 값이 <paramref name="t2" />의 값보다 작으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="t1">비교할 첫 번째 시간 간격입니다.</param>
      <param name="t2">비교할 두 번째 시간 간격입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)">
      <summary>지정된 <see cref="T:System.TimeSpan" />이 지정된 다른 <see cref="T:System.TimeSpan" />보다 작거나 같은지를 나타냅니다.</summary>
      <returns>
        <paramref name="t1" />의 값이 <paramref name="t2" />의 값보다 작거나 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="t1">비교할 첫 번째 시간 간격입니다. </param>
      <param name="t2">비교할 두 번째 시간 간격입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)">
      <summary>지정된 <see cref="T:System.TimeSpan" />을 지정된 다른 <see cref="T:System.TimeSpan" />에서 뺍니다.</summary>
      <returns>
        <paramref name="t1" /> 값에서 <paramref name="t2" /> 값을 뺀 결과를 값으로 가지는 개체입니다.</returns>
      <param name="t1">피감수입니다. </param>
      <param name="t2">감수입니다. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_UnaryNegation(System.TimeSpan)">
      <summary>지정된 인스턴스의 부정 값을 값으로 가지는 <see cref="T:System.TimeSpan" />을 반환합니다.</summary>
      <returns>이 인스턴스와 숫자 값은 같지만 부호가 다른 개체입니다.</returns>
      <param name="t">부정할 시간 간격입니다. </param>
      <exception cref="T:System.OverflowException">The negated value of this instance cannot be represented by a <see cref="T:System.TimeSpan" />; that is, the value of this instance is <see cref="F:System.TimeSpan.MinValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_UnaryPlus(System.TimeSpan)">
      <summary>
        <see cref="T:System.TimeSpan" />의 지정된 인스턴스를 반환합니다.</summary>
      <returns>
        <paramref name="t" />에 지정된 시간 간격입니다.</returns>
      <param name="t">반환할 시간 간격입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Parse(System.String)">
      <summary>시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환합니다. </summary>
      <returns>
        <paramref name="s" />에 해당하는 시간 간격입니다.</returns>
      <param name="s">변환할 시간 간격을 지정하는 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components is outside its valid range. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Parse(System.String,System.IFormatProvider)">
      <summary>지정된 문화권별 형식 정보를 사용하여 시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환합니다.</summary>
      <returns>
        <paramref name="formatProvider" />에서 지정한 <paramref name="input" />에 해당하는 시간 간격입니다.</returns>
      <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
      <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)">
      <summary>지정된 형식 및 문화권별 형식 정보를 사용하여 시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환합니다.문자열 표현의 형식이 지정된 형식과 정확하게 일치해야 합니다.</summary>
      <returns>
        <paramref name="format" /> 및 <paramref name="formatProvider" />에서 지정한 <paramref name="input" />에 해당하는 시간 간격입니다.</returns>
      <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
      <param name="format">
        <paramref name="input" />에 필요한 형식을 정의하는 표준 또는 사용자 지정 서식 문자열입니다.</param>
      <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)">
      <summary>지정된 형식, 문화권별 형식 정보 및 스타일을 사용하여 시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환합니다.문자열 표현의 형식이 지정된 형식과 정확하게 일치해야 합니다.</summary>
      <returns>
        <paramref name="format" />, <paramref name="formatProvider" /> 및 <paramref name="styles" />에서 지정한 <paramref name="input" />에 해당하는 시간 간격입니다.</returns>
      <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
      <param name="format">
        <paramref name="input" />에 필요한 형식을 정의하는 표준 또는 사용자 지정 서식 문자열입니다.</param>
      <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <param name="styles">
        <paramref name="input" />에 나타날 수 있는 스타일 요소를 정의하는 열거형 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> is an invalid <see cref="T:System.Globalization.TimeSpanStyles" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)">
      <summary>지정된 서식 문자열 배열 및 문화권별 형식 정보를 사용하여 시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환합니다.문자열 표시의 형식은 지정된 형식 중 하나와 정확히 일치해야 합니다.</summary>
      <returns>
        <paramref name="formats" /> 및 <paramref name="formatProvider" />에서 지정한 <paramref name="input" />에 해당하는 시간 간격입니다.</returns>
      <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
      <param name="formats">
        <paramref name="input" />에 필요한 형식을 정의하는 표준 또는 사용자 지정 서식 문자열 배열입니다.</param>
      <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)">
      <summary>지정된 형식, 문화권별 형식 정보 및 스타일을 사용하여 시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환합니다.문자열 표시의 형식은 지정된 형식 중 하나와 정확히 일치해야 합니다.</summary>
      <returns>
        <paramref name="formats" />, <paramref name="formatProvider" /> 및 <paramref name="styles" />에서 지정한 <paramref name="input" />에 해당하는 시간 간격입니다.</returns>
      <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
      <param name="formats">
        <paramref name="input" />에 필요한 형식을 정의하는 표준 또는 사용자 지정 서식 문자열 배열입니다.</param>
      <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <param name="styles">입력에 나타날 수 있는 스타일 요소를 정의하는 열거형 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> is an invalid <see cref="T:System.Globalization.TimeSpanStyles" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="P:System.TimeSpan.Seconds">
      <summary>현재 <see cref="T:System.TimeSpan" /> 구조체가 나타내는 시간 간격의 초 구성 요소를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.TimeSpan" /> 구조체의 초 구성 요소입니다.반환 값의 범위는 -59에서 59까지입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Subtract(System.TimeSpan)">
      <summary>지정된 <see cref="T:System.TimeSpan" /> 개체와 이 인스턴스 간의 차를 값으로 가지는 새 <see cref="T:System.TimeSpan" /> 개체를 반환합니다.</summary>
      <returns>이 인스턴스 값에서 <paramref name="ts" /> 값을 뺀 결과를 값으로 가지는 새 시간 간격입니다.</returns>
      <param name="ts">뺄 시간 간격입니다. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.System#IComparable#CompareTo(System.Object)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 순서를 나타내는 부호 있는 정수입니다.반환 값 의미 0보다 작음 이 인스턴스가 정렬 순서에서 <paramref name="value" /> 앞에 옵니다.0 이 인스턴스가 정렬 순서에서 <paramref name="value" />와 동일한 위치에서 발생합니다.0보다 큼 이 인스턴스가 정렬 순서에서 <paramref name="value" /> 뒤에 옵니다.또는 <paramref name="value" />가 null인 경우 </returns>
      <param name="value">이 인스턴스와 비교할 개체 또는 null입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.TimeSpan" /> object. </exception>
    </member>
    <member name="P:System.TimeSpan.Ticks">
      <summary>현재 <see cref="T:System.TimeSpan" /> 구조체의 값을 나타내는 틱 수를 가져옵니다.</summary>
      <returns>이 인스턴스에 포함된 틱 수입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerDay">
      <summary>하루 동안의 틱 수를 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerHour">
      <summary>한 시간 동안의 틱 수를 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerMillisecond">
      <summary>1밀리초 동안의 틱 수를 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerMinute">
      <summary>1분 동안의 틱 수를 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerSecond">
      <summary>1초 동안의 틱 수를 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.ToString">
      <summary>현재 <see cref="T:System.TimeSpan" /> 개체의 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>현재 <see cref="T:System.TimeSpan" /> 값의 문자열 표현입니다. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.ToString(System.String)">
      <summary>지정된 형식을 사용하여 현재 <see cref="T:System.TimeSpan" /> 개체의 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="format" /> 매개 변수로 지정된 서식에 따른 현재 <see cref="T:System.TimeSpan" /> 값의 문자열 표현입니다.</returns>
      <param name="format">표준 또는 사용자 지정 <see cref="T:System.TimeSpan" /> 서식 문자열입니다.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is not recognized or is not supported.</exception>
    </member>
    <member name="M:System.TimeSpan.ToString(System.String,System.IFormatProvider)">
      <summary>지정된 형식과 문화권별 형식 정보를 사용하여 현재 <see cref="T:System.TimeSpan" /> 개체의 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="format" /> 및 <paramref name="formatProvider" />에서 지정한 현재 <see cref="T:System.TimeSpan" /> 값에 대한 문자열 표현입니다.</returns>
      <param name="format">표준 또는 사용자 지정 <see cref="T:System.TimeSpan" /> 서식 문자열입니다.</param>
      <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is not recognized or is not supported.</exception>
    </member>
    <member name="P:System.TimeSpan.TotalDays">
      <summary>일의 정수 부분과 소수 부분으로 표시된 현재 <see cref="T:System.TimeSpan" /> 구조체의 값을 가져옵니다.</summary>
      <returns>이 인스턴스가 나타내는 총 기간(일)입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalHours">
      <summary>시간(시)의 정수 부분과 소수 부분으로 표시된 현재 <see cref="T:System.TimeSpan" /> 구조체의 값을 가져옵니다.</summary>
      <returns>이 인스턴스가 나타내는 총 시간(시)입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalMilliseconds">
      <summary>시간(밀리초)의 정수 부분과 소수 부분으로 표시된 현재 <see cref="T:System.TimeSpan" /> 구조체의 값을 가져옵니다.</summary>
      <returns>이 인스턴스가 나타내는 총 시간(밀리초)입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalMinutes">
      <summary>시간(분)의 정수 부분과 소수 부분으로 표시된 현재 <see cref="T:System.TimeSpan" /> 구조체의 값을 가져옵니다.</summary>
      <returns>이 인스턴스가 나타내는 총 시간(분)입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalSeconds">
      <summary>시간(초)의 정수 부분과 소수 부분으로 표시된 현재 <see cref="T:System.TimeSpan" /> 구조체의 값을 가져옵니다.</summary>
      <returns>이 인스턴스가 나타내는 총 시간(초)입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)">
      <summary>지정된 문화권별 형식 정보를 사용하여 시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="input" />이 변환되었으면 true이고, 그렇지 않으면 false입니다.<paramref name="input" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, 매개 변수 형식이 올바르지 않거나, 매개 변수 값이 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큰 시간 간격을 나타내는 경우 또는 매개 변수에 유효한 범위를 벗어나는 일, 시, 분, 초 구성 요소가 적어도 하나 이상 있는 경우 이 작업은 false를 반환합니다.</returns>
      <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
      <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <param name="result">이 메서드가 반환될 때 <paramref name="input" />에 지정된 시간 간격을 나타내는 개체를 포함하고, 변환이 실패할 경우에는 <see cref="F:System.TimeSpan.Zero" />를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
    </member>
    <member name="M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)">
      <summary>시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="s" />가 변환되었으면 true이고, 그렇지 않으면 false입니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, 매개 변수 형식이 올바르지 않거나, 매개 변수 값이 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큰 시간 간격을 나타내는 경우 또는 매개 변수에 유효한 범위를 벗어나는 일, 시, 분, 초 구성 요소가 적어도 하나 이상 있는 경우 이 작업은 false를 반환합니다.</returns>
      <param name="s">변환할 시간 간격을 지정하는 문자열입니다.</param>
      <param name="result">이 메서드가 반환될 때 <paramref name="s" />에 지정된 시간 간격을 나타내는 개체를 포함하고, 변환이 실패할 경우에는 <see cref="F:System.TimeSpan.Zero" />를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)">
      <summary>지정된 형식, 문화권별 형식 정보 및 스타일을 사용하여 시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다.문자열 표현의 형식이 지정된 형식과 정확하게 일치해야 합니다.</summary>
      <returns>
        <paramref name="input" />이 변환되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
      <param name="format">
        <paramref name="input" />에 필요한 형식을 정의하는 표준 또는 사용자 지정 서식 문자열입니다.</param>
      <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <param name="styles">
        <paramref name="input" />의 스타일을 나타내는 하나 이상의 열거형 값입니다.</param>
      <param name="result">이 메서드가 반환될 때 <paramref name="input" />에 지정된 시간 간격을 나타내는 개체를 포함하고, 변환이 실패할 경우에는 <see cref="F:System.TimeSpan.Zero" />를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)">
      <summary>지정된 형식 및 문화권별 형식 정보를 사용하여 시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다.문자열 표현의 형식이 지정된 형식과 정확하게 일치해야 합니다.</summary>
      <returns>
        <paramref name="input" />이 변환되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
      <param name="format">
        <paramref name="input" />에 필요한 형식을 정의하는 표준 또는 사용자 지정 서식 문자열입니다.</param>
      <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <param name="result">이 메서드가 반환될 때 <paramref name="input" />에 지정된 시간 간격을 나타내는 개체를 포함하고, 변환이 실패할 경우에는 <see cref="F:System.TimeSpan.Zero" />를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)">
      <summary>지정된 형식, 문화권별 형식 정보 및 스타일을 사용하여 시간 간격에 대한 지정된 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다.문자열 표시의 형식은 지정된 형식 중 하나와 정확히 일치해야 합니다.</summary>
      <returns>
        <paramref name="input" />이 변환되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
      <param name="formats">
        <paramref name="input" />에 허용되는 형식을 정의하는 표준 또는 사용자 지정 서식 문자열 배열입니다.</param>
      <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <param name="styles">
        <paramref name="input" />의 스타일을 나타내는 하나 이상의 열거형 값입니다.</param>
      <param name="result">이 메서드가 반환될 때 <paramref name="input" />에 지정된 시간 간격을 나타내는 개체를 포함하고, 변환이 실패할 경우에는 <see cref="F:System.TimeSpan.Zero" />를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)">
      <summary>지정된 형식, 문화권별 형식 정보를 사용하여 시간 간격에 대한 지정된 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다.문자열 표시의 형식은 지정된 형식 중 하나와 정확히 일치해야 합니다.</summary>
      <returns>
        <paramref name="input" />이 변환되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
      <param name="formats">
        <paramref name="input" />에 허용되는 형식을 정의하는 표준 또는 사용자 지정 서식 문자열 배열입니다.</param>
      <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <param name="result">이 메서드가 반환될 때 <paramref name="input" />에 지정된 시간 간격을 나타내는 개체를 포함하고, 변환이 실패할 경우에는 <see cref="F:System.TimeSpan.Zero" />를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
    </member>
    <member name="F:System.TimeSpan.Zero">
      <summary>0 <see cref="T:System.TimeSpan" /> 값을 나타냅니다.이 필드는 읽기 전용입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.TimeZoneInfo">
      <summary>세계의 특정 표준 시간대를 나타냅니다.</summary>
    </member>
    <member name="P:System.TimeZoneInfo.BaseUtcOffset">
      <summary>현재 표준 시간대의 표준 시간과 UTC 사이의 시간 차이를 가져옵니다.</summary>
      <returns>현재 표준 시간대의 표준 시간과 UTC(협정 세계시) 사이의 시간 차이를 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)">
      <summary>시간을 특정 표준 시간대의 시간으로 변환합니다.</summary>
      <returns>대상 표준 시간대로 표시된 날짜와 시간입니다.</returns>
      <param name="dateTime">변환할 날짜 및 시간입니다.   </param>
      <param name="destinationTimeZone">
        <paramref name="dateTime" />을 변환할 대상 표준 시간대입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateTime" /> 매개 변수의 값이 올바르지 않은 시간을 나타내는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationTimeZone" /> 매개 변수의 값이 null인 경우</exception>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)">
      <summary>시간을 한 표준 시간대에서 다른 표준 시간대로 변환합니다.</summary>
      <returns>소스 표준 시간대의 <paramref name="dateTime" /> 매개 변수에 해당하는 대상 표준 시간대의 날짜 및 시간입니다.</returns>
      <param name="dateTime">변환할 날짜 및 시간입니다.</param>
      <param name="sourceTimeZone">
        <paramref name="dateTime" />의 표준 시간대입니다.</param>
      <param name="destinationTimeZone">
        <paramref name="dateTime" />을 변환할 대상 표준 시간대입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateTime" /> 매개 변수의 <see cref="P:System.DateTime.Kind" /> 속성이 <see cref="F:System.DateTimeKind.Local" />이지만 <paramref name="sourceTimeZone" /> 매개 변수가 <see cref="F:System.DateTimeKind.Local" />과 같지 않은 경우자세한 내용은 설명 단원을 참조하십시오.또는<paramref name="dateTime" /> 매개 변수의 <see cref="P:System.DateTime.Kind" /> 속성이 <see cref="F:System.DateTimeKind.Utc" />이지만 <paramref name="sourceTimeZone" /> 매개 변수가 <see cref="P:System.TimeZoneInfo.Utc" />와 같지 않은 경우또는<paramref name="dateTime" /> 매개 변수가 올바르지 않은 시간인 경우. 즉, 표준 시간대의 조정 규칙 때문에 존재하지 않는 시간을 나타내는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceTimeZone" /> 매개 변수가 null입니다.또는<paramref name="destinationTimeZone" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)">
      <summary>시간을 특정 표준 시간대의 시간으로 변환합니다.</summary>
      <returns>대상 표준 시간대로 표시된 날짜와 시간입니다.</returns>
      <param name="dateTimeOffset">변환할 날짜 및 시간입니다.   </param>
      <param name="destinationTimeZone">
        <paramref name="dateTime" />을 변환할 대상 표준 시간대입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationTimeZone" /> 매개 변수의 값이 null인 경우</exception>
    </member>
    <member name="P:System.TimeZoneInfo.DaylightName">
      <summary>현재 표준 시간대 일광 절약 시간의 표시 이름을 가져옵니다.</summary>
      <returns>표준 시간대의 일광 절약 시간의 표시 이름입니다.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.DisplayName">
      <summary>해당 표준 시간대를 나타내는 일반 표시 이름을 가져옵니다.</summary>
      <returns>표준 시간대의 일반 표시 이름입니다.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.Equals(System.TimeZoneInfo)">
      <summary>현재 <see cref="T:System.TimeZoneInfo" /> 개체가 다른 <see cref="T:System.TimeZoneInfo" /> 개체와 같은지 확인합니다.</summary>
      <returns>두 <see cref="T:System.TimeZoneInfo" /> 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="other">현재 개체와 비교할 두 번째 개체입니다.  </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)">
      <summary>식별자를 사용하여 레지스트리에서 <see cref="T:System.TimeZoneInfo" /> 개체를 가져옵니다.</summary>
      <returns>식별자가 <paramref name="id" /> 매개 변수의 값인 개체입니다.</returns>
      <param name="id">
        <see cref="P:System.TimeZoneInfo.Id" /> 속성에 해당하는 표준 시간대 식별자입니다.      </param>
      <exception cref="T:System.OutOfMemoryException">시스템에 표준 시간대에 대한 정보를 저장할 메모리가 부족한 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.TimeZoneNotFoundException">
        <paramref name="id" />로 지정된 표준 시간대 식별자를 찾지 못한 경우.이름이 <paramref name="id" />와 일치하는 레지스트리 키가 없거나, 키는 있지만 표준 시간대 데이터가 포함되지 않았음을 의미합니다.</exception>
      <exception cref="T:System.Security.SecurityException">표준 시간대 정보가 포함된 레지스트리 키를 읽을 권한이 프로세스에 없는 경우</exception>
      <exception cref="T:System.InvalidTimeZoneException">표준 시간대 식별자를 찾았지만 레지스트리 데이터가 손상된 경우</exception>
    </member>
    <member name="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)">
      <summary>모호한 날짜 및 시간을 매핑할 수 있는 가능한 날짜 및 시간에 대한 정보를 반환합니다.</summary>
      <returns>특정 날짜 및 시간이 매핑될 수 있는 가능한 UTC(협정 세계시) 오프셋을 나타내는 개체의 배열입니다.</returns>
      <param name="dateTime">날짜와 시간입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateTime" />이 모호한 시간이 아닌 경우</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)">
      <summary>모호한 날짜 및 시간을 매핑할 수 있는 가능한 날짜 및 시간에 대한 정보를 반환합니다.</summary>
      <returns>특정 날짜 및 시간이 매핑될 수 있는 가능한 UTC(협정 세계시) 오프셋을 나타내는 개체의 배열입니다.</returns>
      <param name="dateTimeOffset">날짜와 시간입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateTime" />이 모호한 시간이 아닌 경우</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetHashCode">
      <summary>해시 테이블과 같은 데이터 구조 및 해싱 알고리즘을 위한 해시 함수 역할을 합니다.</summary>
      <returns>이 <see cref="T:System.TimeZoneInfo" /> 개체에 대한 해시 코드의 역할을 하는 32비트 부호 있는 정수입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetSystemTimeZones">
      <summary>로컬 시스템에서 사용할 수 있는 정보에 대한 모든 정렬된 표준 시간대 컬렉션을 반환합니다.</summary>
      <returns>
        <see cref="T:System.TimeZoneInfo" /> 개체의 읽기 전용 컬렉션입니다.</returns>
      <exception cref="T:System.OutOfMemoryException">모든 표준 시간대 정보를 저장할 메모리가 부족한 경우</exception>
      <exception cref="T:System.Security.SecurityException">표준 시간대 정보가 포함된 레지스트리 키를 읽을 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)">
      <summary>이 표준 시간대의 시간과 특정 날짜 및 시간에 대한 UTC 사이의 오프셋 또는 차이를 계산합니다.</summary>
      <returns>두 표준 시간대 사이의 시간 차이를 나타내는 개체입니다.</returns>
      <param name="dateTime">오프셋을 확인할 대상 날짜 및 시간입니다.   </param>
    </member>
    <member name="M:System.TimeZoneInfo.GetUtcOffset(System.DateTimeOffset)">
      <summary>이 표준 시간대의 시간과 특정 날짜 및 시간에 대한 UTC 사이의 오프셋 또는 차이를 계산합니다.</summary>
      <returns>UTC(협정 세계시)와 현재 표준 시간대 사이의 시간 차이를 나타내는 개체입니다.</returns>
      <param name="dateTimeOffset">오프셋을 확인할 대상 날짜 및 시간입니다.</param>
    </member>
    <member name="P:System.TimeZoneInfo.Id">
      <summary>표준 시간대 식별자를 가져옵니다.</summary>
      <returns>표준 시간대 식별자입니다.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)">
      <summary>특정 표준 시간대의 특정 날짜 및 시간이 모호한지 여부와 이를 둘 이상의 UTC 시간에 매핑할 수 있는지 여부를 결정합니다.</summary>
      <returns>
        <paramref name="dateTime" /> 매개 변수가 모호한 경우 true이고, 그렇지 않은 경우 false입니다.</returns>
      <param name="dateTime">날짜 및 시간 값입니다.   </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateTime" /> 값의 <see cref="P:System.DateTime.Kind" /> 속성이 <see cref="F:System.DateTimeKind.Local" />이고 <paramref name="dateTime" />이 올바르지 않은 시간인 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTimeOffset)">
      <summary>특정 표준 시간대의 특정 날짜 및 시간이 모호한지 여부와 이를 둘 이상의 UTC 시간에 매핑할 수 있는지 여부를 결정합니다.</summary>
      <returns>
        <paramref name="dateTimeOffset" /> 매개 변수가 현재 표준 시간대에서 모호한 경우 true이고 그렇지 않은 경우 false입니다.</returns>
      <param name="dateTimeOffset">날짜와 시간입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)">
      <summary>지정된 날짜 및 시간이 현재 <see cref="T:System.TimeZoneInfo" /> 개체의 표준 시간대에 대한 일광 절약 시간 범위에 속하는지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="dateTime" /> 매개 변수가 일광 절약 시간이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="dateTime">날짜 및 시간 값입니다.   </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateTime" /> 값의 <see cref="P:System.DateTime.Kind" /> 속성이 <see cref="F:System.DateTimeKind.Local" />이고 <paramref name="dateTime" />이 올바르지 않은 시간인 경우 </exception>
    </member>
    <member name="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTimeOffset)">
      <summary>지정된 날짜 및 시간이 현재 <see cref="T:System.TimeZoneInfo" /> 개체의 표준 시간대에 대한 일광 절약 시간 범위에 속하는지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="dateTimeOffset" /> 매개 변수가 일광 절약 시간이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="dateTimeOffset">날짜 및 시간 값입니다.</param>
    </member>
    <member name="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)">
      <summary>특정 날짜 및 시간이 올바르지 않은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="dateTime" />이 올바르지 않으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="dateTime">날짜 및 시간 값입니다.   </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.TimeZoneInfo.Local">
      <summary>현지 표준 시간대를 나타내는 <see cref="T:System.TimeZoneInfo" /> 개체를 가져옵니다.</summary>
      <returns>현지 표준 시간대를 나타내는 개체입니다.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.StandardName">
      <summary>해당 표준 시간대의 표준 시간을 나타내는 표시 이름을 가져옵니다.</summary>
      <returns>표준 시간대 표준 시간의 표시 이름입니다.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.SupportsDaylightSavingTime">
      <summary>해당 표준 시간대에 일광 절약 시간 규칙이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>해당 표준 시간대가 일광 절약 시간을 지원하는 경우 true이고, 그렇지 않은 경우 false입니다.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.ToString">
      <summary>현재 <see cref="T:System.TimeZoneInfo" /> 개체의 표시 이름을 반환합니다.</summary>
      <returns>현재 <see cref="T:System.TimeZoneInfo" /> 개체의 <see cref="P:System.TimeZoneInfo.DisplayName" /> 속성 값입니다.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.Utc">
      <summary>UTC를 나타내는 <see cref="T:System.TimeZoneInfo" /> 개체를 가져옵니다.</summary>
      <returns>UTC(협정 세계시) 시간대를 나타내는 개체입니다.</returns>
    </member>
    <member name="T:System.Tuple">
      <summary>튜플 개체를 작성하는 정적 메서드를 제공합니다. 이 유형의 .NET Framework 소스 코드를 찾아보려면 참조 소스를 참조하세요.</summary>
    </member>
    <member name="M:System.Tuple.Create``1(``0)">
      <summary>1개의 요소로 구성된 새 튜플 또는 singleton을 만듭니다.</summary>
      <returns>값이 (<paramref name="item1" />)인 튜플입니다.</returns>
      <param name="item1">튜플의 유일한 구성 요소 값입니다.</param>
      <typeparam name="T1">튜플의 유일한 구성 요소 형식입니다.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``2(``0,``1)">
      <summary>2개의 요소로 구성된 새 튜플 또는 쌍을 만듭니다.</summary>
      <returns>값이 (<paramref name="item1" />, <paramref name="item2" />)인 2중 튜플입니다.</returns>
      <param name="item1">튜플의 첫 번째 구성 요소 값입니다.</param>
      <param name="item2">튜플의 두 번째 구성 요소 값입니다.</param>
      <typeparam name="T1">튜플의 첫 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T2">튜플의 두 번째 구성 요소 형식입니다.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``3(``0,``1,``2)">
      <summary>3개의 요소로 구성된 새 튜플 또는 3중을 만듭니다.</summary>
      <returns>값이 (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />)인 3중 튜플입니다.</returns>
      <param name="item1">튜플의 첫 번째 구성 요소 값입니다.</param>
      <param name="item2">튜플의 두 번째 구성 요소 값입니다.</param>
      <param name="item3">튜플의 세 번째 구성 요소 값입니다.</param>
      <typeparam name="T1">튜플의 첫 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T2">튜플의 두 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T3">튜플의 세 번째 구성 요소 형식입니다.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``4(``0,``1,``2,``3)">
      <summary>4개의 요소로 구성된 새 튜플 또는 4중을 만듭니다.</summary>
      <returns>값이 (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />)인 4중 튜플입니다.</returns>
      <param name="item1">튜플의 첫 번째 구성 요소 값입니다.</param>
      <param name="item2">튜플의 두 번째 구성 요소 값입니다.</param>
      <param name="item3">튜플의 세 번째 구성 요소 값입니다.</param>
      <param name="item4">튜플의 네 번째 구성 요소 값입니다.</param>
      <typeparam name="T1">튜플의 첫 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T2">튜플의 두 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T3">튜플의 세 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T4">튜플의 네 번째 구성 요소 형식입니다.  </typeparam>
    </member>
    <member name="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
      <summary>5개의 요소로 구성된 새 튜플 또는 5중을 만듭니다.</summary>
      <returns>값이 (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />)인 5중 튜플입니다.</returns>
      <param name="item1">튜플의 첫 번째 구성 요소 값입니다.</param>
      <param name="item2">튜플의 두 번째 구성 요소 값입니다.</param>
      <param name="item3">튜플의 세 번째 구성 요소 값입니다.</param>
      <param name="item4">튜플의 네 번째 구성 요소 값입니다.</param>
      <param name="item5">튜플의 다섯 번째 구성 요소 값입니다.</param>
      <typeparam name="T1">튜플의 첫 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T2">튜플의 두 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T3">튜플의 세 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T4">튜플의 네 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T5">튜플의 다섯 번째 구성 요소 형식입니다.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
      <summary>6개의 요소로 구성된 새 튜플 또는 6중을 만듭니다.</summary>
      <returns>값이 (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />)인 6중 튜플입니다.</returns>
      <param name="item1">튜플의 첫 번째 구성 요소 값입니다.</param>
      <param name="item2">튜플의 두 번째 구성 요소 값입니다.</param>
      <param name="item3">튜플의 세 번째 구성 요소 값입니다.</param>
      <param name="item4">튜플의 네 번째 구성 요소 값입니다.</param>
      <param name="item5">튜플의 다섯 번째 구성 요소 값입니다.</param>
      <param name="item6">튜플의 여섯 번째 구성 요소 값입니다.</param>
      <typeparam name="T1">튜플의 첫 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T2">튜플의 두 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T3">튜플의 세 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T4">튜플의 네 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T5">튜플의 다섯 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T6">튜플의 여섯 번째 구성 요소 형식입니다.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
      <summary>7개의 요소로 구성된 새 튜플 또는 7중을 만듭니다.</summary>
      <returns>값이 (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />, <paramref name="item7" />)인 7중 튜플입니다.</returns>
      <param name="item1">튜플의 첫 번째 구성 요소 값입니다.</param>
      <param name="item2">튜플의 두 번째 구성 요소 값입니다.</param>
      <param name="item3">튜플의 세 번째 구성 요소 값입니다.</param>
      <param name="item4">튜플의 네 번째 구성 요소 값입니다.</param>
      <param name="item5">튜플의 다섯 번째 구성 요소 값입니다.</param>
      <param name="item6">튜플의 여섯 번째 구성 요소 값입니다.</param>
      <param name="item7">튜플의 일곱 번째 구성 요소 값입니다.</param>
      <typeparam name="T1">튜플의 첫 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T2">튜플의 두 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T3">튜플의 세 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T4">튜플의 네 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T5">튜플의 다섯 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T6">튜플의 여섯 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T7">튜플의 일곱 번째 구성 요소 형식입니다.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
      <summary>8개의 요소로 구성된 새 튜플을 만듭니다.</summary>
      <returns>값이 (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />, <paramref name="item7" />, <paramref name="item8" />)인 8중 튜플입니다. </returns>
      <param name="item1">튜플의 첫 번째 구성 요소 값입니다.</param>
      <param name="item2">튜플의 두 번째 구성 요소 값입니다.</param>
      <param name="item3">튜플의 세 번째 구성 요소 값입니다.</param>
      <param name="item4">튜플의 네 번째 구성 요소 값입니다.</param>
      <param name="item5">튜플의 다섯 번째 구성 요소 값입니다.</param>
      <param name="item6">튜플의 여섯 번째 구성 요소 값입니다.</param>
      <param name="item7">튜플의 일곱 번째 구성 요소 값입니다.</param>
      <param name="item8">튜플의 여덟 번째 구성 요소 값입니다.</param>
      <typeparam name="T1">튜플의 첫 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T2">튜플의 두 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T3">튜플의 세 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T4">튜플의 네 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T5">튜플의 다섯 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T6">튜플의 여섯 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T7">튜플의 일곱 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T8">튜플의 여덟 번째 구성 요소 형식입니다.</typeparam>
    </member>
    <member name="T:System.Tuple`1">
      <summary>1개의 요소로 구성된 튜플 또는 singleton을 나타냅니다. </summary>
      <typeparam name="T1">튜플의 유일한 구성 요소 형식입니다.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Tuple`1.#ctor(`0)">
      <summary>
        <see cref="T:System.Tuple`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="item1">튜플의 유일한 구성 요소 값입니다.</param>
    </member>
    <member name="M:System.Tuple`1.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Tuple`1" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 인스턴스가 지정된 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`1.GetHashCode">
      <summary>현재 <see cref="T:System.Tuple`1" /> 개체에 대한 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Tuple`1.Item1">
      <summary>
        <see cref="T:System.Tuple`1" /> 개체의 단일 구성 요소 값을 가져옵니다. </summary>
      <returns>현재 <see cref="T:System.Tuple`1" /> 개체의 단일 구성 요소 값입니다.</returns>
    </member>
    <member name="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>지정된 비교자를 사용하여 현재 <see cref="T:System.Tuple`1" /> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="other" />의 상대 위치를 나타내는 부호 있는 정수입니다.값설명음의 정수이 인스턴스가 <paramref name="other" />보다 앞에 나옵니다.Zero정렬 순서에서 이 인스턴스와 <paramref name="other" />의 위치가 동일합니다.양의 정수이 인스턴스가 <paramref name="other" />보다 뒤에 나옵니다.</returns>
      <param name="other">현재 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">비교에 사용할 사용자 지정 규칙을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" />가 <see cref="T:System.Tuple`1" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>지정된 비교 메서드를 기반으로 현재 <see cref="T:System.Tuple`1" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 인스턴스가 지정된 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="other">이 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">두 개체가 같은지 여부를 확인하는 데 사용할 메서드를 정의하는 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>지정된 계산 메서드를 사용하여 현재 <see cref="T:System.Tuple`1" /> 개체에 대한 해시 코드를 계산합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
      <param name="comparer">
        <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> 메서드를 사용하여 현재 <see cref="T:System.Tuple`1" /> 개체의 해시 코드를 계산하는 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
      <summary>현재 <see cref="T:System.Tuple`1" /> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="obj" />의 상대 위치를 나타내는 부호 있는 정수입니다.값설명음의 정수이 인스턴스가 <paramref name="obj" />보다 앞에 나옵니다.Zero정렬 순서에서 이 인스턴스와 <paramref name="obj" />의 위치가 동일합니다.양의 정수이 인스턴스가 <paramref name="obj" />보다 뒤에 나옵니다.</returns>
      <param name="obj">현재 인스턴스와 비교할 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" />가 <see cref="T:System.Tuple`1" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Tuple`1.ToString">
      <summary>이 <see cref="T:System.Tuple`1" /> 인스턴스의 값을 나타내는 문자열을 반환합니다.</summary>
      <returns>이 <see cref="T:System.Tuple`1" /> 개체를 나타내는 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Tuple`2">
      <summary>2개의 요소로 구성된 튜플 또는 쌍을 나타냅니다. </summary>
      <typeparam name="T1">튜플의 첫 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T2">튜플의 두 번째 구성 요소 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`2.#ctor(`0,`1)">
      <summary>
        <see cref="T:System.Tuple`2" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="item1">튜플의 첫 번째 구성 요소 값입니다.</param>
      <param name="item2">튜플의 두 번째 구성 요소 값입니다.</param>
    </member>
    <member name="M:System.Tuple`2.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Tuple`2" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 인스턴스가 지정된 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`2.GetHashCode">
      <summary>현재 <see cref="T:System.Tuple`2" /> 개체에 대한 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Tuple`2.Item1">
      <summary>현재 <see cref="T:System.Tuple`2" /> 개체의 첫 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`2" /> 개체의 첫 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`2.Item2">
      <summary>현재 <see cref="T:System.Tuple`2" /> 개체의 두 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`2" /> 개체의 두 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>지정된 비교자를 사용하여 현재 <see cref="T:System.Tuple`2" /> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="other" />의 상대 위치를 나타내는 부호 있는 정수입니다.값설명음의 정수이 인스턴스가 <paramref name="other" />보다 앞에 나옵니다.Zero정렬 순서에서 이 인스턴스와 <paramref name="other" />의 위치가 동일합니다.양의 정수이 인스턴스가 <paramref name="other" />보다 뒤에 나옵니다.</returns>
      <param name="other">현재 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">비교에 사용할 사용자 지정 규칙을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" />가 <see cref="T:System.Tuple`2" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>지정된 비교 메서드를 기반으로 현재 <see cref="T:System.Tuple`2" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 인스턴스가 지정된 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="other">이 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">두 개체가 같은지 여부를 확인하는 데 사용할 메서드를 정의하는 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>지정된 계산 메서드를 사용하여 현재 <see cref="T:System.Tuple`2" /> 개체에 대한 해시 코드를 계산합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
      <param name="comparer">
        <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> 메서드를 사용하여 현재 <see cref="T:System.Tuple`2" /> 개체의 해시 코드를 계산하는 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
      <summary>현재 <see cref="T:System.Tuple`2" /> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="obj" />의 상대 위치를 나타내는 부호 있는 정수입니다.값설명음의 정수이 인스턴스가 <paramref name="obj" />보다 앞에 나옵니다.Zero정렬 순서에서 이 인스턴스와 <paramref name="obj" />의 위치가 동일합니다.양의 정수이 인스턴스가 <paramref name="obj" />보다 뒤에 나옵니다.</returns>
      <param name="obj">현재 인스턴스와 비교할 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" />가 <see cref="T:System.Tuple`2" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Tuple`2.ToString">
      <summary>이 <see cref="T:System.Tuple`2" /> 인스턴스의 값을 나타내는 문자열을 반환합니다.</summary>
      <returns>이 <see cref="T:System.Tuple`2" /> 개체를 나타내는 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Tuple`3">
      <summary>3개의 요소로 구성된 튜플 또는 삼중을 나타냅니다. </summary>
      <typeparam name="T1">튜플의 첫 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T2">튜플의 두 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T3">튜플의 세 번째 구성 요소 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`3.#ctor(`0,`1,`2)">
      <summary>
        <see cref="T:System.Tuple`3" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="item1">튜플의 첫 번째 구성 요소 값입니다.</param>
      <param name="item2">튜플의 두 번째 구성 요소 값입니다.</param>
      <param name="item3">튜플의 세 번째 구성 요소 값입니다.</param>
    </member>
    <member name="M:System.Tuple`3.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Tuple`3" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 인스턴스가 지정된 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`3.GetHashCode">
      <summary>현재 <see cref="T:System.Tuple`3" /> 개체에 대한 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Tuple`3.Item1">
      <summary>현재 <see cref="T:System.Tuple`3" /> 개체의 첫 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`3" /> 개체의 첫 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`3.Item2">
      <summary>현재 <see cref="T:System.Tuple`3" /> 개체의 두 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`3" /> 개체의 두 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`3.Item3">
      <summary>현재 <see cref="T:System.Tuple`3" /> 개체의 세 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`3" /> 개체의 세 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>지정된 비교자를 사용하여 현재 <see cref="T:System.Tuple`3" /> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="other" />의 상대 위치를 나타내는 부호 있는 정수입니다.값설명음의 정수이 인스턴스가 <paramref name="other" />보다 앞에 나옵니다.Zero정렬 순서에서 이 인스턴스와 <paramref name="other" />의 위치가 동일합니다.양의 정수이 인스턴스가 <paramref name="other" />보다 뒤에 나옵니다.</returns>
      <param name="other">현재 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">비교에 사용할 사용자 지정 규칙을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" />가 <see cref="T:System.Tuple`3" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>지정된 비교 메서드를 기반으로 현재 <see cref="T:System.Tuple`3" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 인스턴스가 지정된 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="other">이 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">두 개체가 같은지 여부를 확인하는 데 사용할 메서드를 정의하는 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>지정된 계산 메서드를 사용하여 현재 <see cref="T:System.Tuple`3" /> 개체에 대한 해시 코드를 계산합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
      <param name="comparer">
        <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> 메서드를 사용하여 현재 <see cref="T:System.Tuple`3" /> 개체의 해시 코드를 계산하는 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
      <summary>현재 <see cref="T:System.Tuple`3" /> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="obj" />의 상대 위치를 나타내는 부호 있는 정수입니다.값설명음의 정수이 인스턴스가 <paramref name="obj" />보다 앞에 나옵니다.Zero정렬 순서에서 이 인스턴스와 <paramref name="obj" />의 위치가 동일합니다.양의 정수이 인스턴스가 <paramref name="obj" />보다 뒤에 나옵니다.</returns>
      <param name="obj">현재 인스턴스와 비교할 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" />가 <see cref="T:System.Tuple`3" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Tuple`3.ToString">
      <summary>이 <see cref="T:System.Tuple`3" /> 인스턴스의 값을 나타내는 문자열을 반환합니다.</summary>
      <returns>이 <see cref="T:System.Tuple`3" /> 개체를 나타내는 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Tuple`4">
      <summary>4개의 요소로 구성된 튜플 또는 4중을 나타냅니다. </summary>
      <typeparam name="T1">튜플의 첫 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T2">튜플의 두 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T3">튜플의 세 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T4">튜플의 네 번째 구성 요소 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
      <summary>
        <see cref="T:System.Tuple`4" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="item1">튜플의 첫 번째 구성 요소 값입니다.</param>
      <param name="item2">튜플의 두 번째 구성 요소 값입니다.</param>
      <param name="item3">튜플의 세 번째 구성 요소 값입니다.</param>
      <param name="item4">튜플의 네 번째 구성 요소 값입니다.</param>
    </member>
    <member name="M:System.Tuple`4.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Tuple`4" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 인스턴스가 지정된 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`4.GetHashCode">
      <summary>현재 <see cref="T:System.Tuple`4" /> 개체에 대한 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Tuple`4.Item1">
      <summary>현재 <see cref="T:System.Tuple`4" /> 개체의 첫 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`4" /> 개체의 첫 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`4.Item2">
      <summary>현재 <see cref="T:System.Tuple`4" /> 개체의 두 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`4" /> 개체의 두 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`4.Item3">
      <summary>현재 <see cref="T:System.Tuple`4" /> 개체의 세 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`4" /> 개체의 세 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`4.Item4">
      <summary>현재 <see cref="T:System.Tuple`4" /> 개체의 네 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`4" /> 개체의 네 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>지정된 비교자를 사용하여 현재 <see cref="T:System.Tuple`4" /> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="other" />의 상대 위치를 나타내는 부호 있는 정수입니다.값설명음의 정수이 인스턴스가 <paramref name="other" />보다 앞에 나옵니다.Zero정렬 순서에서 이 인스턴스와 <paramref name="other" />의 위치가 동일합니다.양의 정수이 인스턴스가 <paramref name="other" />보다 뒤에 나옵니다.</returns>
      <param name="other">현재 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">비교에 사용할 사용자 지정 규칙을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" />가 <see cref="T:System.Tuple`4" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>지정된 비교 메서드를 기반으로 현재 <see cref="T:System.Tuple`4" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 인스턴스가 지정된 개체와 같으면 true이고, 그렇지 않으면 false입니다. </returns>
      <param name="other">이 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">두 개체가 같은지 여부를 확인하는 데 사용할 메서드를 정의하는 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>지정된 계산 메서드를 사용하여 현재 <see cref="T:System.Tuple`4" /> 개체에 대한 해시 코드를 계산합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
      <param name="comparer">
        <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> 메서드를 사용하여 현재 <see cref="T:System.Tuple`4" /> 개체의 해시 코드를 계산하는 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
      <summary>현재 <see cref="T:System.Tuple`4" /> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="obj" />의 상대 위치를 나타내는 부호 있는 정수입니다.값설명음의 정수이 인스턴스가 <paramref name="obj" />보다 앞에 나옵니다.Zero정렬 순서에서 이 인스턴스와 <paramref name="obj" />의 위치가 동일합니다.양의 정수이 인스턴스가 <paramref name="obj" />보다 뒤에 나옵니다.</returns>
      <param name="obj">현재 인스턴스와 비교할 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" />가 <see cref="T:System.Tuple`4" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Tuple`4.ToString">
      <summary>이 <see cref="T:System.Tuple`4" /> 인스턴스의 값을 나타내는 문자열을 반환합니다.</summary>
      <returns>이 <see cref="T:System.Tuple`4" /> 개체를 나타내는 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Tuple`5">
      <summary>5개의 요소로 구성된 튜플을 나타냅니다. </summary>
      <typeparam name="T1">튜플의 첫 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T2">튜플의 두 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T3">튜플의 세 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T4">튜플의 네 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T5">튜플의 다섯 번째 구성 요소 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
      <summary>
        <see cref="T:System.Tuple`5" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="item1">튜플의 첫 번째 구성 요소 값입니다.</param>
      <param name="item2">튜플의 두 번째 구성 요소 값입니다.</param>
      <param name="item3">튜플의 세 번째 구성 요소 값입니다.</param>
      <param name="item4">튜플의 네 번째 구성 요소 값입니다.</param>
      <param name="item5">튜플의 다섯 번째 구성 요소 값입니다.</param>
    </member>
    <member name="M:System.Tuple`5.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Tuple`5" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 인스턴스가 지정된 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`5.GetHashCode">
      <summary>현재 <see cref="T:System.Tuple`5" /> 개체에 대한 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Tuple`5.Item1">
      <summary>현재 <see cref="T:System.Tuple`5" /> 개체의 첫 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`5" /> 개체의 첫 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`5.Item2">
      <summary>현재 <see cref="T:System.Tuple`5" /> 개체의 두 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`5" /> 개체의 두 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`5.Item3">
      <summary>현재 <see cref="T:System.Tuple`5" /> 개체의 세 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`5" /> 개체의 세 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`5.Item4">
      <summary>현재 <see cref="T:System.Tuple`5" /> 개체의 네 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`5" /> 개체의 네 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`5.Item5">
      <summary>현재 <see cref="T:System.Tuple`5" /> 개체의 다섯 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`5" /> 개체의 다섯 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>지정된 비교자를 사용하여 현재 <see cref="T:System.Tuple`5" /> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="other" />의 상대 위치를 나타내는 부호 있는 정수입니다.값설명음의 정수이 인스턴스가 <paramref name="other" />보다 앞에 나옵니다.Zero정렬 순서에서 이 인스턴스와 <paramref name="other" />의 위치가 동일합니다.양의 정수이 인스턴스가 <paramref name="other" />보다 뒤에 나옵니다.</returns>
      <param name="other">현재 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">비교에 사용할 사용자 지정 규칙을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" />가 <see cref="T:System.Tuple`5" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>지정된 비교 메서드를 기반으로 현재 <see cref="T:System.Tuple`5" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 인스턴스가 지정된 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="other">이 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">두 개체가 같은지 여부를 확인하는 데 사용할 메서드를 정의하는 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>지정된 계산 메서드를 사용하여 현재 <see cref="T:System.Tuple`5" /> 개체에 대한 해시 코드를 계산합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
      <param name="comparer">
        <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> 메서드를 사용하여 현재 <see cref="T:System.Tuple`5" /> 개체의 해시 코드를 계산하는 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
      <summary>현재 <see cref="T:System.Tuple`5" /> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="obj" />의 상대 위치를 나타내는 부호 있는 정수입니다.값설명음의 정수이 인스턴스가 <paramref name="obj" />보다 앞에 나옵니다.Zero정렬 순서에서 이 인스턴스와 <paramref name="obj" />의 위치가 동일합니다.양의 정수이 인스턴스가 <paramref name="obj" />보다 뒤에 나옵니다.</returns>
      <param name="obj">현재 인스턴스와 비교할 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" />가 <see cref="T:System.Tuple`5" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Tuple`5.ToString">
      <summary>이 <see cref="T:System.Tuple`5" /> 인스턴스의 값을 나타내는 문자열을 반환합니다.</summary>
      <returns>이 <see cref="T:System.Tuple`5" /> 개체를 나타내는 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Tuple`6">
      <summary>6개의 요소로 구성된 튜플을 나타냅니다. </summary>
      <typeparam name="T1">튜플의 첫 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T2">튜플의 두 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T3">튜플의 세 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T4">튜플의 네 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T5">튜플의 다섯 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T6">튜플의 여섯 번째 구성 요소 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`6.#ctor(`0,`1,`2,`3,`4,`5)">
      <summary>
        <see cref="T:System.Tuple`6" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="item1">튜플의 첫 번째 구성 요소 값입니다.</param>
      <param name="item2">튜플의 두 번째 구성 요소 값입니다.</param>
      <param name="item3">튜플의 세 번째 구성 요소 값입니다.</param>
      <param name="item4">튜플의 네 번째 구성 요소 값입니다.</param>
      <param name="item5">튜플의 다섯 번째 구성 요소 값입니다.</param>
      <param name="item6">튜플의 여섯 번째 구성 요소 값입니다.</param>
    </member>
    <member name="M:System.Tuple`6.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Tuple`6" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 인스턴스가 지정된 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`6.GetHashCode">
      <summary>현재 <see cref="T:System.Tuple`6" /> 개체에 대한 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Tuple`6.Item1">
      <summary>현재 <see cref="T:System.Tuple`6" /> 개체의 첫 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`6" /> 개체의 첫 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`6.Item2">
      <summary>현재 <see cref="T:System.Tuple`6" /> 개체의 두 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`6" /> 개체의 두 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`6.Item3">
      <summary>현재 <see cref="T:System.Tuple`6" /> 개체의 세 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`6" /> 개체의 세 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`6.Item4">
      <summary>현재 <see cref="T:System.Tuple`6" /> 개체의 네 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`6" /> 개체의 네 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`6.Item5">
      <summary>현재 <see cref="T:System.Tuple`6" /> 개체의 다섯 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`6" /> 개체의 다섯 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`6.Item6">
      <summary>현재 <see cref="T:System.Tuple`6" /> 개체의 여섯 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`6" /> 개체의 여섯 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="M:System.Tuple`6.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>지정된 비교자를 사용하여 현재 <see cref="T:System.Tuple`6" /> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="other" />의 상대 위치를 나타내는 부호 있는 정수입니다.값설명음의 정수이 인스턴스가 <paramref name="other" />보다 앞에 나옵니다.Zero정렬 순서에서 이 인스턴스와 <paramref name="other" />의 위치가 동일합니다.양의 정수이 인스턴스가 <paramref name="other" />보다 뒤에 나옵니다.</returns>
      <param name="other">현재 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">비교에 사용할 사용자 지정 규칙을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" />가 <see cref="T:System.Tuple`6" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Tuple`6.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>지정된 비교 메서드를 기반으로 현재 <see cref="T:System.Tuple`6" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 인스턴스가 지정된 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="other">이 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">두 개체가 같은지 여부를 확인하는 데 사용할 메서드를 정의하는 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`6.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>지정된 계산 메서드를 사용하여 현재 <see cref="T:System.Tuple`6" /> 개체에 대한 해시 코드를 계산합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
      <param name="comparer">
        <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> 메서드를 사용하여 현재 <see cref="T:System.Tuple`6" /> 개체의 해시 코드를 계산하는 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`6.System#IComparable#CompareTo(System.Object)">
      <summary>현재 <see cref="T:System.Tuple`6" /> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="obj" />의 상대 위치를 나타내는 부호 있는 정수입니다.값설명음의 정수이 인스턴스가 <paramref name="obj" />보다 앞에 나옵니다.Zero정렬 순서에서 이 인스턴스와 <paramref name="obj" />의 위치가 동일합니다.양의 정수이 인스턴스가 <paramref name="obj" />보다 뒤에 나옵니다.</returns>
      <param name="obj">현재 인스턴스와 비교할 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" />가 <see cref="T:System.Tuple`6" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Tuple`6.ToString">
      <summary>이 <see cref="T:System.Tuple`6" /> 인스턴스의 값을 나타내는 문자열을 반환합니다.</summary>
      <returns>이 <see cref="T:System.Tuple`6" /> 개체를 나타내는 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Tuple`7">
      <summary>7개의 요소로 구성된 튜플 또는 7중을 나타냅니다. </summary>
      <typeparam name="T1">튜플의 첫 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T2">튜플의 두 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T3">튜플의 세 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T4">튜플의 네 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T5">튜플의 다섯 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T6">튜플의 여섯 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T7">튜플의 일곱 번째 구성 요소 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)">
      <summary>
        <see cref="T:System.Tuple`7" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="item1">튜플의 첫 번째 구성 요소 값입니다.</param>
      <param name="item2">튜플의 두 번째 구성 요소 값입니다.</param>
      <param name="item3">튜플의 세 번째 구성 요소 값입니다.</param>
      <param name="item4">튜플의 네 번째 구성 요소 값입니다.</param>
      <param name="item5">튜플의 다섯 번째 구성 요소 값입니다.</param>
      <param name="item6">튜플의 여섯 번째 구성 요소 값입니다.</param>
      <param name="item7">튜플의 일곱 번째 구성 요소 값입니다.</param>
    </member>
    <member name="M:System.Tuple`7.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Tuple`7" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 인스턴스가 지정된 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`7.GetHashCode">
      <summary>현재 <see cref="T:System.Tuple`7" /> 개체에 대한 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Tuple`7.Item1">
      <summary>현재 <see cref="T:System.Tuple`7" /> 개체의 첫 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`7" /> 개체의 첫 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`7.Item2">
      <summary>현재 <see cref="T:System.Tuple`7" /> 개체의 두 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`7" /> 개체의 두 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`7.Item3">
      <summary>현재 <see cref="T:System.Tuple`7" /> 개체의 세 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`7" /> 개체의 세 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`7.Item4">
      <summary>현재 <see cref="T:System.Tuple`7" /> 개체의 네 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`7" /> 개체의 네 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`7.Item5">
      <summary>현재 <see cref="T:System.Tuple`7" /> 개체의 다섯 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`7" /> 개체의 다섯 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`7.Item6">
      <summary>현재 <see cref="T:System.Tuple`7" /> 개체의 여섯 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`7" /> 개체의 여섯 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`7.Item7">
      <summary>현재 <see cref="T:System.Tuple`7" /> 개체의 일곱 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`7" /> 개체의 일곱 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="M:System.Tuple`7.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>지정된 비교자를 사용하여 현재 <see cref="T:System.Tuple`7" /> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="other" />의 상대 위치를 나타내는 부호 있는 정수입니다.값설명음의 정수이 인스턴스가 <paramref name="other" />보다 앞에 나옵니다.Zero정렬 순서에서 이 인스턴스와 <paramref name="other" />의 위치가 동일합니다.양의 정수이 인스턴스가 <paramref name="other" />보다 뒤에 나옵니다.</returns>
      <param name="other">현재 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">비교에 사용할 사용자 지정 규칙을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" />가 <see cref="T:System.Tuple`7" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>지정된 비교 메서드를 기반으로 현재 <see cref="T:System.Tuple`7" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 인스턴스가 지정된 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="other">이 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">두 개체가 같은지 여부를 확인하는 데 사용할 메서드를 정의하는 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>지정된 계산 메서드를 사용하여 현재 <see cref="T:System.Tuple`7" /> 개체에 대한 해시 코드를 계산합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
      <param name="comparer">
        <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> 메서드를 사용하여 현재 <see cref="T:System.Tuple`7" /> 개체의 해시 코드를 계산하는 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`7.System#IComparable#CompareTo(System.Object)">
      <summary>현재 <see cref="T:System.Tuple`7" /> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="obj" />의 상대 위치를 나타내는 부호 있는 정수입니다.값설명음의 정수이 인스턴스가 <paramref name="obj" />보다 앞에 나옵니다.Zero정렬 순서에서 이 인스턴스와 <paramref name="obj" />의 위치가 동일합니다.양의 정수이 인스턴스가 <paramref name="obj" />보다 뒤에 나옵니다.</returns>
      <param name="obj">현재 인스턴스와 비교할 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" />가 <see cref="T:System.Tuple`7" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Tuple`7.ToString">
      <summary>이 <see cref="T:System.Tuple`7" /> 인스턴스의 값을 나타내는 문자열을 반환합니다.</summary>
      <returns>이 <see cref="T:System.Tuple`7" /> 개체의 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Tuple`8">
      <summary>n개의 요소로 구성된 튜플을 나타냅니다. 여기서 n은 8 이상입니다.</summary>
      <typeparam name="T1">튜플의 첫 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T2">튜플의 두 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T3">튜플의 세 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T4">튜플의 네 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T5">튜플의 다섯 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T6">튜플의 여섯 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="T7">튜플의 일곱 번째 구성 요소 형식입니다.</typeparam>
      <typeparam name="TRest">튜플의 나머지 구성 요소 형식을 정의하는 제네릭 Tuple 개체입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
      <summary>
        <see cref="T:System.Tuple`8" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="item1">튜플의 첫 번째 구성 요소 값입니다.</param>
      <param name="item2">튜플의 두 번째 구성 요소 값입니다.</param>
      <param name="item3">튜플의 세 번째 구성 요소 값입니다.</param>
      <param name="item4">튜플의 네 번째 구성 요소 값입니다.</param>
      <param name="item5">튜플의 다섯 번째 구성 요소 값입니다.</param>
      <param name="item6">튜플의 여섯 번째 구성 요소 값입니다.</param>
      <param name="item7">튜플의 일곱 번째 구성 요소 값입니다.</param>
      <param name="rest">튜플의 나머지 구성 요소 값을 포함하는 제네릭 Tuple 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rest" />가 제네릭 Tuple 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Tuple`8.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Tuple`8" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 인스턴스가 지정된 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`8.GetHashCode">
      <summary>현재 <see cref="T:System.Tuple`8" /> 개체에 대한 해시 코드를 계산합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Tuple`8.Item1">
      <summary>현재 <see cref="T:System.Tuple`8" /> 개체의 첫 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`8" /> 개체의 첫 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`8.Item2">
      <summary>현재 <see cref="T:System.Tuple`8" /> 개체의 두 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`8" /> 개체의 두 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`8.Item3">
      <summary>현재 <see cref="T:System.Tuple`8" /> 개체의 세 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`8" /> 개체의 세 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`8.Item4">
      <summary>현재 <see cref="T:System.Tuple`8" /> 개체의 네 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`8" /> 개체의 네 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`8.Item5">
      <summary>현재 <see cref="T:System.Tuple`8" /> 개체의 다섯 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`8" /> 개체의 다섯 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`8.Item6">
      <summary>현재 <see cref="T:System.Tuple`8" /> 개체의 여섯 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`8" /> 개체의 여섯 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`8.Item7">
      <summary>현재 <see cref="T:System.Tuple`8" /> 개체의 일곱 번째 구성 요소 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`8" /> 개체의 일곱 번째 구성 요소 값입니다.</returns>
    </member>
    <member name="P:System.Tuple`8.Rest">
      <summary>현재 <see cref="T:System.Tuple`8" /> 개체의 나머지 구성 요소를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Tuple`8" /> 개체의 나머지 구성 요소입니다.</returns>
    </member>
    <member name="M:System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>지정된 비교자를 사용하여 현재 <see cref="T:System.Tuple`8" /> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="other" />의 상대 위치를 나타내는 부호 있는 정수입니다.값설명음의 정수이 인스턴스가 <paramref name="other" />보다 앞에 나옵니다.Zero정렬 순서에서 이 인스턴스와 <paramref name="other" />의 위치가 동일합니다.양의 정수이 인스턴스가 <paramref name="other" />보다 뒤에 나옵니다.</returns>
      <param name="other">현재 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">비교에 사용할 사용자 지정 규칙을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" />가 <see cref="T:System.Tuple`8" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>지정된 비교 메서드를 기반으로 현재 <see cref="T:System.Tuple`8" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 인스턴스가 지정된 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="other">이 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">두 개체가 같은지 여부를 확인하는 데 사용할 메서드를 정의하는 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>지정된 계산 메서드를 사용하여 현재 <see cref="T:System.Tuple`8" /> 개체에 대한 해시 코드를 계산합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
      <param name="comparer">
        <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> 메서드를 사용하여 현재 <see cref="T:System.Tuple`8" /> 개체의 해시 코드를 계산하는 개체입니다.</param>
    </member>
    <member name="M:System.Tuple`8.System#IComparable#CompareTo(System.Object)">
      <summary>현재 <see cref="T:System.Tuple`8" /> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="obj" />의 상대 위치를 나타내는 부호 있는 정수입니다.값설명음의 정수이 인스턴스가 <paramref name="obj" />보다 앞에 나옵니다.Zero정렬 순서에서 이 인스턴스와 <paramref name="obj" />의 위치가 동일합니다.양의 정수이 인스턴스가 <paramref name="obj" />보다 뒤에 나옵니다.</returns>
      <param name="obj">현재 인스턴스와 비교할 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" />가 <see cref="T:System.Tuple`8" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Tuple`8.ToString">
      <summary>이 <see cref="T:System.Tuple`8" /> 인스턴스의 값을 나타내는 문자열을 반환합니다.</summary>
      <returns>이 <see cref="T:System.Tuple`8" /> 개체의 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Type">
      <summary>클래스 형식, 인터페이스 형식, 배열 형식, 값 형식, 열거형 형식, 형식 매개 변수, 제네릭 형식 정의 및 개방형 생성 제네릭 형식이나 폐쇄형 생성 제네릭 형식에 대한 형식 선언을 나타냅니다.이 형식에 대한 .NET Framework 소스 코드를 찾아보려면 참조 원본을 참조하세요.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.AssemblyQualifiedName">
      <summary>이 <see cref="T:System.Type" /> 개체가 로드된 어셈블리의 이름을 비롯하여 형식의 어셈블리 한정 이름을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Type" />이 로드된 어셈블리의 이름을 비롯한 <see cref="T:System.Type" />의 어셈블리 한정 이름입니다. 현재 인스턴스가 제네릭 형식 매개 변수를 나타낼 경우에는 null입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.DeclaringType">
      <summary>현재 중첩 형식 또는 제네릭 형식 매개 변수를 선언하는 형식을 가져옵니다.</summary>
      <returns>현재 형식이 중첩 형식이면 바깥쪽 형식을 나타내고 현재 형식이 제네릭 형식의 형식 매개 변수이면 제네릭 형식 정의를 나타내며 현재 형식이 제네릭 메서드의 형식 매개 변수이면 제네릭 메서드를 선언하는 형식을 나타내는 <see cref="T:System.Type" /> 개체이고, 그렇지 않으면 null입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Type.EmptyTypes">
      <summary>
        <see cref="T:System.Type" /> 형식의 빈 배열을 나타냅니다.이 필드는 읽기 전용입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Type" />의 내부 시스템 형식이 지정된 <see cref="T:System.Object" />의 내부 시스템 형식과 동일한지 확인합니다.</summary>
      <returns>true의 내부 시스템 형식이 현재 <paramref name="o" />의 내부 시스템 형식과 같으면 <see cref="T:System.Type" />이고, 그렇지 않으면 false입니다.이 메서드는 또한 false 매개 변수가 지정하는 개체가 <paramref name="o" />이 아닌 경우에도 Type를 반환합니다.</returns>
      <param name="o">현재 <see cref="T:System.Type" />의 내부 시스템 형식과 비교할 내부 시스템 형식이 있는 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.Equals(System.Type)">
      <summary>현재 <see cref="T:System.Type" />의 내부 시스템 형식이 지정된 <see cref="T:System.Type" />의 내부 시스템 형식과 동일한지 확인합니다.</summary>
      <returns>true의 내부 시스템 형식이 현재 <paramref name="o" />의 내부 시스템 형식과 같으면 <see cref="T:System.Type" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="o">현재 <see cref="T:System.Type" />의 내부 시스템 형식과 비교할 내부 시스템 형식이 있는 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.FullName">
      <summary>해당 네임스페이스는 포함하지만 어셈블리는 포함하지 않는 형식의 정규화된 이름을 가져옵니다. </summary>
      <returns>해당 네임스페이스는 포함하지만 어셈블리는 포함하지 않는 형식의 정규화된 이름이거나 현재 인스턴스가 제네릭 형식 매개 변수, 배열 형식, 포인터 형식, 형식 매개 변수에 기초한 null 형식 또는 제네릭 형식 정의가 아니지만 확인되지 않은 형식 매개 변수가 들어 있는 제네릭 형식인 경우에는 byref입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.GenericParameterPosition">
      <summary>
        <see cref="T:System.Type" /> 개체가 제네릭 형식이나 제네릭 메서드의 형식 매개 변수를 나타내는 경우, 해당 매개 변수가 선언된 제네릭 형식 또는 메서드의 형식 매개 변수 목록에서 해당 형식 매개 변수가 있는 위치를 가져옵니다.</summary>
      <returns>형식 매개 변수가 정의된 제네릭 형식 또는 메서드의 형식 매개 변수 목록에서 해당 형식 매개 변수가 있는 위치입니다.위치 번호는 0부터 시작합니다.</returns>
      <exception cref="T:System.InvalidOperationException">The current type does not represent a type parameter.That is, <see cref="P:System.Type.IsGenericParameter" /> returns false.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.GenericTypeArguments">
      <summary>이 형식에 대한 제네릭 형식 인수의 배열을 가져옵니다.</summary>
      <returns>이 형식에 대한 제네릭 형식 인수 배열입니다.</returns>
    </member>
    <member name="M:System.Type.GetArrayRank">
      <summary>배열의 차원 수를 가져옵니다. </summary>
      <returns>현재 형식의 차수를 포함하는 정수입니다. </returns>
      <exception cref="T:System.NotSupportedException">The functionality of this method is unsupported in the base class and must be implemented in a derived class instead. </exception>
      <exception cref="T:System.ArgumentException">The current type is not an array. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetElementType">
      <summary>파생 클래스에서 재정의되면, 현재 배열, 포인터 또는 참조 형식에 의해 포함되거나 참조되는 개체의 <see cref="T:System.Type" />을 반환합니다.</summary>
      <returns>현재 배열, 포인터 또는 참조 형식에서 포함하거나 참조하는 개체의 <see cref="T:System.Type" />입니다. 현재 null이 배열 또는 포인터가 아니거나, 참조로 전달되지 않거나, 제네릭 형식 또는 제네릭 메서드 정의의 형식 매개 변수나 제네릭 형식을 나타내는 경우에는 <see cref="T:System.Type" />입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetGenericTypeDefinition">
      <summary>현재 제네릭 형식을 생성할 수 있는 제네릭 형식 정의를 나타내는 <see cref="T:System.Type" /> 개체를 반환합니다.</summary>
      <returns>현재 형식을 생성할 수 있는 제네릭 형식을 나타내는 <see cref="T:System.Type" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException">The current type is not a generic type.That is, <see cref="P:System.Type.IsGenericType" /> returns false.</exception>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.Derived classes must provide an implementation.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>이 인스턴스의 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetType(System.String)">
      <summary>대/소문자 구분 검색하여 지정된 이름의 <see cref="T:System.Type" />을 가져옵니다.</summary>
      <returns>지정된 이름의 형식이 있으면 이를 반환하고 그렇지 않으면 null을 반환합니다.</returns>
      <param name="typeName">가져올 형식에 대한 어셈블리로 한정된 이름입니다.<see cref="P:System.Type.AssemblyQualifiedName" />을 참조하십시오.형식이 현재 실행 중인 어셈블리나 Mscorlib.dll에 있는 경우 네임스페이스로 한정된 형식 이름만 제공하면 됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">A class initializer is invoked and throws an exception. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="typeName" /> represents a generic type that has a pointer type, a ByRef type, or <see cref="T:System.Void" /> as one of its type arguments.-or-<paramref name="typeName" /> represents a generic type that has an incorrect number of type arguments.-or-<paramref name="typeName" /> represents a generic type, and one of its type arguments does not satisfy the constraints for the corresponding type parameter.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> represents an array of <see cref="T:System.TypedReference" />. </exception>
      <exception cref="T:System.IO.FileLoadException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.IO.IOException" />, instead.The assembly or one of its dependencies was found, but could not be loaded. </exception>
      <exception cref="T:System.BadImageFormatException">The assembly or one of its dependencies is not valid. -or-Version 2.0 or later of the common language runtime is currently loaded, and the assembly was compiled with a later version.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.GetType(System.String,System.Boolean)">
      <summary>대/소문자를 구분하여 검색하고 형식이 없으면 예외를 throw할지를 지정하여, 지정된 이름의 <see cref="T:System.Type" />을 가져옵니다.</summary>
      <returns>지정된 이름의 형식입니다.형식을 찾을 수 없는 경우에는 <paramref name="throwOnError" /> 매개 변수가 null을 반환할지 아니면 예외를 throw할지 지정합니다.경우에 따라서는 <paramref name="throwOnError" /> 값과 상관없이 예외가 throw됩니다.예외 섹션을 참조하세요.</returns>
      <param name="typeName">가져올 형식에 대한 어셈블리로 한정된 이름입니다.<see cref="P:System.Type.AssemblyQualifiedName" />을 참조하십시오.형식이 현재 실행 중인 어셈블리나 Mscorlib.dll에 있는 경우 네임스페이스로 한정된 형식 이름만 제공하면 됩니다.</param>
      <param name="throwOnError">형식을 찾을 수 없는 경우 예외를 throw하려면 true이고, false을 반환하려면 null입니다.또한 false를 지정하면 다른 예외 조건 중 일부(모두 아님)가 표시되지 않습니다.예외 섹션을 참조하세요.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">A class initializer is invoked and throws an exception. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="throwOnError" /> is true and the type is not found. -or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> contains invalid characters, such as an embedded tab.-or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> is an empty string.-or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> represents an array type with an invalid size. -or-<paramref name="typeName" /> represents an array of <see cref="T:System.TypedReference" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="throwOnError" /> is true and <paramref name="typeName" /> contains invalid syntax.For example, "MyType[,*,]".-or- <paramref name="typeName" /> represents a generic type that has a pointer type, a ByRef type, or <see cref="T:System.Void" /> as one of its type arguments.-or-<paramref name="typeName" /> represents a generic type that has an incorrect number of type arguments.-or-<paramref name="typeName" /> represents a generic type, and one of its type arguments does not satisfy the constraints for the corresponding type parameter.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="throwOnError" /> is true and the assembly or one of its dependencies was not found. </exception>
      <exception cref="T:System.IO.FileLoadException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.IO.IOException" />, instead.The assembly or one of its dependencies was found, but could not be loaded. </exception>
      <exception cref="T:System.BadImageFormatException">The assembly or one of its dependencies is not valid. -or-Version 2.0 or later of the common language runtime is currently loaded, and the assembly was compiled with a later version.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.GetType(System.String,System.Boolean,System.Boolean)">
      <summary>대/소문자를 구분하여 검색할지 여부와 형식이 없으면 예외를 throw할지 여부를 지정하여, 지정된 이름의 <see cref="T:System.Type" />을 가져옵니다. </summary>
      <returns>지정된 이름의 형식입니다.형식을 찾을 수 없는 경우에는 <paramref name="throwOnError" /> 매개 변수가 null을 반환할지 아니면 예외를 throw할지 지정합니다.경우에 따라서는 <paramref name="throwOnError" /> 값과 상관없이 예외가 throw됩니다.예외 섹션을 참조하세요.</returns>
      <param name="typeName">가져올 형식에 대한 어셈블리로 한정된 이름입니다.<see cref="P:System.Type.AssemblyQualifiedName" />을 참조하십시오.형식이 현재 실행 중인 어셈블리나 Mscorlib.dll에 있는 경우 네임스페이스로 한정된 형식 이름만 제공하면 됩니다.</param>
      <param name="throwOnError">형식을 찾을 수 없어 예외를 throw하는 경우 true이고 false를 반환하는 경우 null입니다. false를 지정하면 일부 다른 예외 조건을 표시하지 않지만 모두 그렇지는 않습니다.예외 섹션을 참조하세요.</param>
      <param name="ignoreCase">true에 대해 대/소문자를 구분하지 않는 검색을 수행하려는 경우 <paramref name="typeName" />이고, false에 대해 대/소문자를 구분하는 검색을 수행하려는 경우 <paramref name="typeName" />입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">A class initializer is invoked and throws an exception. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="throwOnError" /> is true and the type is not found. -or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> contains invalid characters, such as an embedded tab.-or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> is an empty string.-or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> represents an array type with an invalid size. -or-<paramref name="typeName" /> represents an array of <see cref="T:System.TypedReference" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="throwOnError" /> is true and <paramref name="typeName" /> contains invalid syntax.For example, "MyType[,*,]".-or- <paramref name="typeName" /> represents a generic type that has a pointer type, a ByRef type, or <see cref="T:System.Void" /> as one of its type arguments.-or-<paramref name="typeName" /> represents a generic type that has an incorrect number of type arguments.-or-<paramref name="typeName" /> represents a generic type, and one of its type arguments does not satisfy the constraints for the corresponding type parameter.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="throwOnError" /> is true and the assembly or one of its dependencies was not found. </exception>
      <exception cref="T:System.IO.FileLoadException">The assembly or one of its dependencies was found, but could not be loaded. </exception>
      <exception cref="T:System.BadImageFormatException">The assembly or one of its dependencies is not valid. -or-Version 2.0 or later of the common language runtime is currently loaded, and the assembly was compiled with a later version.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)">
      <summary>지정된 형식 핸들이 참조하는 형식을 가져옵니다.</summary>
      <returns>지정된 <see cref="T:System.RuntimeTypeHandle" />에서 참조하는 형식이거나 null의 <see cref="P:System.RuntimeTypeHandle.Value" /> 속성이 <paramref name="handle" />인 경우 null입니다.</returns>
      <param name="handle">형식을 참조하는 개체입니다. </param>
      <exception cref="T:System.Reflection.TargetInvocationException">A class initializer is invoked and throws an exception. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.HasElementType">
      <summary>현재 <see cref="T:System.Type" />이 다른 형식을 포함하거나 참조하는지 여부, 즉 현재 <see cref="T:System.Type" />이 배열 또는 포인터이거나 참조로 전달되는지를 나타내는 값을 가져옵니다.</summary>
      <returns>true이 배열 또는 포인터이거나 참조로 전달되면 <see cref="T:System.Type" />이고, 그렇지 않으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsArray">
      <summary>유형이 배열인지 여부를 나타내는 값을 가져옵니다. </summary>
      <returns>현재 유형이 배열이면 true이고, 그렇지 않으면 false입니다. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsByRef">
      <summary>
        <see cref="T:System.Type" />이 참조로 전달되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>true이 참조로 전달되면 <see cref="T:System.Type" />이고, 그렇지 않으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsConstructedGenericType">
      <summary>이 개체가 생성된 제네릭 형식을 나타내는지를 지정하는 값을 가져옵니다.생성된 제네릭 형식의 인스턴스를 만들 수 있습니다.</summary>
      <returns>이 개체가 생성된 제네릭 형식을 나타내면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Type.IsGenericParameter">
      <summary>현재 <see cref="T:System.Type" />이 제네릭 형식 또는 메서드 정의의 형식 매개 변수를 나타내는지를 나타내는 값을 가져옵니다.</summary>
      <returns>true 개체가 제네릭 형식 정의나 메서드 정의의 형식 매개 변수를 나타내면 <see cref="T:System.Type" />이고, 그렇지 않으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsNested">
      <summary>현재 <see cref="T:System.Type" /> 개체가 다른 형식의 정의 안에 중첩된 정의를 가진 형식을 나타내는지를 나타내는 값을 가져옵니다.</summary>
      <returns>true이 다른 형식 안에 중첩되어 있으면 <see cref="T:System.Type" />이고, 그렇지 않으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsPointer">
      <summary>
        <see cref="T:System.Type" />이 포인터인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>true이 포인터이면 <see cref="T:System.Type" />이고, 그렇지 않으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeArrayType">
      <summary>하한이 0인 현재 형식의 1차원 배열을 나타내는 <see cref="T:System.Type" /> 개체를 반환합니다.</summary>
      <returns>하한이 0인 현재 형식의 1차원 배열을 나타내는 <see cref="T:System.Type" /> 개체입니다.</returns>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.Derived classes must provide an implementation.</exception>
      <exception cref="T:System.TypeLoadException">The current type is <see cref="T:System.TypedReference" />.-or-The current type is a ByRef type.That is, <see cref="P:System.Type.IsByRef" /> returns true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeArrayType(System.Int32)">
      <summary>지정된 차수의 현재 형식 배열을 나타내는 <see cref="T:System.Type" /> 개체를 반환합니다.</summary>
      <returns>지정된 차수의 현재 형식 배열을 나타내는 개체입니다.</returns>
      <param name="rank">배열의 차수입니다.이 수는 32보다 작거나 같아야 합니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="rank" /> is invalid.For example, 0 or negative.</exception>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.</exception>
      <exception cref="T:System.TypeLoadException">The current type is <see cref="T:System.TypedReference" />.-or-The current type is a ByRef type.That is, <see cref="P:System.Type.IsByRef" /> returns true.-or-<paramref name="rank" /> is greater than 32.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeByRefType">
      <summary>
        <see cref="T:System.Type" />(Visual Basic의 경우 ref) 매개 변수로 전달될 때 현재 형식을 나타내는 ByRef 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Type" />(Visual Basic의 경우 ref) 매개 변수로 전달될 때 현재 형식을 나타내는 ByRef 개체입니다.</returns>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.</exception>
      <exception cref="T:System.TypeLoadException">The current type is <see cref="T:System.TypedReference" />.-or-The current type is a ByRef type.That is, <see cref="P:System.Type.IsByRef" /> returns true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeGenericType(System.Type[])">
      <summary>형식 배열의 요소를 현재 제네릭 형식 정의의 형식 매개 변수로 대체하며 생성된 형식을 나타내는 <see cref="T:System.Type" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Type" />의 요소를 현재 제네릭 형식의 형식 매개 변수로 대체하여 생성된 형식을 나타내는 <paramref name="typeArguments" />입니다.</returns>
      <param name="typeArguments">현재 제네릭 형식의 형식 매개 변수로 대체할 형식 배열입니다.</param>
      <exception cref="T:System.InvalidOperationException">The current type does not represent a generic type definition.That is, <see cref="P:System.Type.IsGenericTypeDefinition" /> returns false.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeArguments" /> is null.-or- Any element of <paramref name="typeArguments" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The number of elements in <paramref name="typeArguments" /> is not the same as the number of type parameters in the current generic type definition.-or- Any element of <paramref name="typeArguments" /> does not satisfy the constraints specified for the corresponding type parameter of the current generic type. -or- <paramref name="typeArguments" /> contains an element that is a pointer type (<see cref="P:System.Type.IsPointer" /> returns true), a by-ref type (<see cref="P:System.Type.IsByRef" /> returns true), or <see cref="T:System.Void" />.</exception>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.Derived classes must provide an implementation.</exception>
    </member>
    <member name="M:System.Type.MakePointerType">
      <summary>현재 형식에 대한 포인터를 나타내는 <see cref="T:System.Type" /> 개체를 반환합니다.</summary>
      <returns>현재 형식에 대한 포인터를 나타내는 <see cref="T:System.Type" /> 개체입니다.</returns>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.</exception>
      <exception cref="T:System.TypeLoadException">The current type is <see cref="T:System.TypedReference" />.-or-The current type is a ByRef type.That is, <see cref="P:System.Type.IsByRef" /> returns true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Type.Missing">
      <summary>
        <see cref="T:System.Type" /> 정보의 손실된 값을 나타냅니다.이 필드는 읽기 전용입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.Name"></member>
    <member name="P:System.Type.Namespace">
      <summary>
        <see cref="T:System.Type" />의 네임스페이스를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Type" />의 네임스페이스입니다. 현재 인스턴스가 제네릭 매개 변수를 나타내거나 네임스페이스가 없으면 null입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.ToString">
      <summary>현재 String의 이름을 나타내는 Type을 반환합니다.</summary>
      <returns>현재 <see cref="T:System.String" />의 이름을 나타내는 <see cref="T:System.Type" />입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.TypeHandle">
      <summary>현재 <see cref="T:System.Type" />에 대한 핸들을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Type" />에 대한 핸들입니다.</returns>
      <exception cref="T:System.NotSupportedException">The .NET Compact Framework does not currently support this property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.TypeAccessException">
      <summary>메서드가 액세스할 수 없는 형식을 사용하려고 할 때 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.TypeAccessException.#ctor">
      <summary>오류를 설명하는 시스템 제공 메시지를 사용하여 <see cref="T:System.TypeAccessException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.TypeAccessException.#ctor(System.String)">
      <summary>오류를 설명하는 지정된 메시지를 사용하여 <see cref="T:System.TypeAccessException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외를 설명하는 메시지입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 따라 지역화되었는지 확인해야 합니다.</param>
    </member>
    <member name="M:System.TypeAccessException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.TypeAccessException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외를 설명하는 메시지입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 따라 지역화되었는지 확인해야 합니다.</param>
      <param name="inner">현재 예외의 원인인 예외입니다.<paramref name="inner" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.TypeCode">
      <summary>개체의 형식을 지정합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.TypeCode.Boolean">
      <summary>true 또는 false의 부울 값을 나타내는 단순 형식입니다.</summary>
    </member>
    <member name="F:System.TypeCode.Byte">
      <summary>0과 255 사이의 값을 가진 부호 없는 8비트 정수를 나타내는 정수 계열 형식입니다.</summary>
    </member>
    <member name="F:System.TypeCode.Char">
      <summary>0과 65535 사이의 값을 가진 부호 없는 16비트 정수를 나타내는 정수 계열 형식입니다.<see cref="F:System.TypeCode.Char" /> 형식에 사용할 수 있는 값 집합은 유니코드 문자 집합과 일치합니다.</summary>
    </member>
    <member name="F:System.TypeCode.DateTime">
      <summary>날짜 및 시간 값을 나타내는 형식입니다.</summary>
    </member>
    <member name="F:System.TypeCode.Decimal">
      <summary>1.0 x 10-28부터 약 7.9 x 1028까지 28-29개의 유효 자릿수를 가진 값을 나타내는 단순 형식입니다.</summary>
    </member>
    <member name="F:System.TypeCode.Double">
      <summary>약 5.0 x 10-324부터 1.7 x 10308까지 15-16자리의 정밀도를 가진 값을 나타내는 부동 소수점 형식입니다.</summary>
    </member>
    <member name="F:System.TypeCode.Empty">
      <summary>null 참조입니다.</summary>
    </member>
    <member name="F:System.TypeCode.Int16">
      <summary>-32768과 32767 사이의 값을 가진 부호 있는 16비트 정수를 나타내는 정수 계열 형식입니다.</summary>
    </member>
    <member name="F:System.TypeCode.Int32">
      <summary>-2147483648과 2147483647 사이의 값을 가진 부호 있는 32비트 정수를 나타내는 정수 계열 형식입니다.</summary>
    </member>
    <member name="F:System.TypeCode.Int64">
      <summary>-9223372036854775808과 9223372036854775807 사이의 값을 가진 부호 있는 64비트 정수를 나타내는 정수 계열 형식입니다.</summary>
    </member>
    <member name="F:System.TypeCode.Object">
      <summary>참조 또는 값 형식을 나타내는 일반 형식은 다른 TypeCode로 명시적으로 표시되지 않습니다.</summary>
    </member>
    <member name="F:System.TypeCode.SByte">
      <summary>-128과 127 사이의 값을 가진 부호 있는 8비트 정수를 나타내는 정수 계열 형식입니다.</summary>
    </member>
    <member name="F:System.TypeCode.Single">
      <summary>약 1.5 x 10-45부터 3.4 x 1038까지 7자리의 정밀도를 가진 값을 나타내는 부동 소수점 형식입니다.</summary>
    </member>
    <member name="F:System.TypeCode.String">
      <summary>유니코드 문자열을 나타내는 봉인된 클래스 형식입니다.</summary>
    </member>
    <member name="F:System.TypeCode.UInt16">
      <summary>0과 65535 사이의 값을 가진 부호 없는 16비트 정수를 나타내는 정수 계열 형식입니다.</summary>
    </member>
    <member name="F:System.TypeCode.UInt32">
      <summary>0과 4294967295 사이의 값을 가진 부호 없는 32비트 정수를 나타내는 정수 계열 형식입니다.</summary>
    </member>
    <member name="F:System.TypeCode.UInt64">
      <summary>0과 18446744073709551615 사이의 값을 가진 부호 없는 64비트 정수를 나타내는 정수 계열 형식입니다.</summary>
    </member>
    <member name="T:System.TypeInitializationException">
      <summary>클래스 이니셜라이저에 의해 throw되는 예외 주위에서 래퍼로 throw되는 예외입니다.이 클래스는 상속될 수 없습니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
      <summary>기본 오류 메시지, 지정된 형식 이름 및 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.TypeInitializationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fullTypeName">초기화에 실패한 형식의 정규화된 이름입니다. </param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null 참조(Visual Basic에서는 Nothing)가 아니면, 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="P:System.TypeInitializationException.TypeName">
      <summary>초기화에 실패한 형식의 정규화된 이름을 가져옵니다.</summary>
      <returns>초기화에 실패한 형식의 정규화된 이름입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.TypeLoadException">
      <summary>형식 로드 시 오류가 발생할 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TypeLoadException.#ctor">
      <summary>
        <see cref="T:System.TypeLoadException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.TypeLoadException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.TypeLoadException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다. </param>
    </member>
    <member name="M:System.TypeLoadException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.TypeLoadException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="inner">현재 예외의 원인이 되는 예외입니다.<paramref name="inner" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="P:System.TypeLoadException.Message">
      <summary>이 예외에 대한 오류 메시지를 가져옵니다.</summary>
      <returns>오류 메시지 문자열입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.TypeLoadException.TypeName">
      <summary>이 예외를 발생시킨 형식의 정규화된 이름을 가져옵니다.</summary>
      <returns>정규화된 형식 이름입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.UInt16">
      <summary>16비트 부호 없는 정수를 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.CompareTo(System.UInt16)">
      <summary>이 인스턴스를 지정된 16비트 부호 없는 정수와 비교하여 상대 값의 표시를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">비교할 부호 없는 정수입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt16.Equals(System.Object)">
      <summary>이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 <paramref name="obj" />의 인스턴스이고 이 인스턴스의 값과 같으면 <see cref="T:System.UInt16" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt16.Equals(System.UInt16)">
      <summary>이 인스턴스가 지정된 <see cref="T:System.UInt16" /> 값과 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 이 인터페이스와 같은 값을 가지면 <paramref name="obj" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 16비트 부호 없는 정수입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt16.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UInt16.MaxValue">
      <summary>
        <see cref="T:System.UInt16" />의 최대값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UInt16.MinValue">
      <summary>
        <see cref="T:System.UInt16" />의 최소값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String)">
      <summary>숫자의 문자열 표현을 해당하는 16비트 부호 없는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 있는 수에 해당하는 16비트 부호 없는 정수입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>지정된 스타일로 된 숫자의 문자열 표현을 해당하는 16비트 부호 없는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 수에 해당하는 16비트 부호 없는 정수입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다.이 문자열은 <paramref name="style" /> 매개 변수로 지정된 스타일을 사용하여 해석됩니다.</param>
      <param name="style">
        <paramref name="s" />에 사용할 수 있는 서식을 지정하는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 16비트 부호 없는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 수에 해당하는 16비트 부호 없는 정수입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다.이 문자열은 <paramref name="style" /> 매개 변수로 지정된 스타일을 사용하여 해석됩니다.</param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String,System.IFormatProvider)">
      <summary>지정된 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 16비트 부호 없는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 수에 해당하는 16비트 부호 없는 정수입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다. </param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.System#IComparable#CompareTo(System.Object)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 순서를 나타내는 부호 있는 정수입니다.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">이 인스턴스와 비교할 개체 또는 null입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.UInt16" /> object. </exception>
    </member>
    <member name="M:System.UInt16.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.UInt16.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>현재 인스턴스의 값이 0이 아니면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Byte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Char" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 변환은 지원되지 않습니다.값이 반환되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Decimal" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Double" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int16" />으로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int64" />으로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.SByte" />으로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Single" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <paramref name="type" />으로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="type">이 <see cref="T:System.UInt16" /> 값을 변환할 대상 형식입니다.</param>
      <param name="provider">반환된 값의 형식에 대한 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 구현입니다.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>변경되지 않은 이 인스턴스의 현재 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt16.ToString">
      <summary>이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>부호나 앞에 오는 0 없이 0에서 9 사이의 숫자 시퀀스로 구성된 이 인스턴스 값의 문자열 표현입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.ToString(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>부호나 앞에 오는 0 없이 0에서 9 사이의 숫자 시퀀스로 구성된 이 인스턴스 값의 문자열 표현입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.ToString(System.String)">
      <summary>지정된 형식을 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값을 <paramref name="format" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="format">숫자 서식 문자열입니다.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.ToString(System.String,System.IFormatProvider)">
      <summary>지정된 형식 및 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="format" /> 및 <paramref name="provider" />로 지정된 이 인스턴스 값의 문자열 표현입니다.</returns>
      <param name="format">숫자 서식 문자열입니다.</param>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16@)">
      <summary>지정된 스타일과 문화권별 서식으로 나타낸 숫자의 문자열 표현을 해당하는 16비트 부호 없는 정수로 변환하려고 합니다.반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다.이 문자열은 <paramref name="style" /> 매개 변수로 지정된 스타일을 사용하여 해석됩니다.</param>
      <param name="style">
        <paramref name="s" />에 사용할 수 있는 형식을 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자에 해당하는 16비트 부호 없는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, 형식이 <paramref name="style" />과 호환되지 않거나, <see cref="F:System.UInt16.MinValue" />보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.TryParse(System.String,System.UInt16@)">
      <summary>숫자의 문자열 표현을 해당하는 16비트 부호 없는 정수로 변환하려고 합니다.반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자에 해당하는 16비트 부호 없는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나 올바른 서식이 아니면 변환에 실패합니다., 또는 <see cref="F:System.UInt16.MinValue" />보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큰 숫자를 나타냅니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UInt32">
      <summary>32비트 부호 없는 정수를 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.CompareTo(System.UInt32)">
      <summary>이 인스턴스를 지정된 32비트 부호 없는 정수와 비교하여 상대 값의 표시를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.Return value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">비교할 부호 없는 정수입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt32.Equals(System.Object)">
      <summary>이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 <paramref name="obj" />의 인스턴스이고 이 인스턴스의 값과 같으면 <see cref="T:System.UInt32" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt32.Equals(System.UInt32)">
      <summary>이 인스턴스가 지정된 <see cref="T:System.UInt32" />와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>true가 이 인터페이스와 같은 값을 가지면 <paramref name="obj" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 값입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt32.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UInt32.MaxValue">
      <summary>
        <see cref="T:System.UInt32" />의 최대값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UInt32.MinValue">
      <summary>
        <see cref="T:System.UInt32" />의 최소값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String)">
      <summary>숫자의 문자열 표현을 해당하는 32비트 부호 없는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 있는 수에 해당하는 32비트 부호 없는 정수입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>지정된 스타일로 된 숫자의 문자열 표현을 해당하는 32비트 부호 없는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 수에 해당하는 32비트 부호 없는 정수입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다.이 문자열은 <paramref name="style" /> 매개 변수로 지정된 스타일을 사용하여 해석됩니다.</param>
      <param name="style">
        <paramref name="s" />에 사용할 수 있는 서식을 지정하는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 32비트 부호 없는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 수에 해당하는 32비트 부호 없는 정수입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다.이 문자열은 <paramref name="style" /> 매개 변수로 지정된 스타일을 사용하여 해석됩니다.</param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String,System.IFormatProvider)">
      <summary>지정된 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 32비트 부호 없는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 수에 해당하는 32비트 부호 없는 정수입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다. </param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct style. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.System#IComparable#CompareTo(System.Object)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 순서를 나타내는 부호 있는 정수입니다.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.UInt32" /> object. </exception>
    </member>
    <member name="M:System.UInt32.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.UInt32.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>현재 인스턴스의 값이 0이 아니면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Byte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Char" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 변환은 지원되지 않습니다.값이 반환되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Decimal" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Double" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int16" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.SByte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Single" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <paramref name="type" />으로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="type">이 <see cref="T:System.UInt32" /> 값을 변환할 대상 형식입니다.</param>
      <param name="provider">반환된 값의 형식에 대한 문화권별 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 구현입니다.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt16" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>변경되지 않은 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt32.ToString">
      <summary>이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>부호나 앞에 오는 0 없이 0에서 9 사이의 숫자 열로 구성된 이 인스턴스 값의 문자열 표현입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.ToString(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>부호나 앞에 오는 0 없이 0에서 9 사이의 숫자 시퀀스로 구성된 이 인스턴스 값의 문자열 표현입니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.ToString(System.String)">
      <summary>지정된 형식을 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값을 <paramref name="format" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="format">숫자 서식 문자열입니다.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.ToString(System.String,System.IFormatProvider)">
      <summary>지정된 형식 및 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="format" /> 및 <paramref name="provider" />로 지정된 이 인스턴스 값의 문자열 표현입니다.</returns>
      <param name="format">숫자 서식 문자열입니다.</param>
      <param name="provider">이 인스턴스에 대한 문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32@)">
      <summary>지정된 스타일과 문화권별 서식으로 나타낸 숫자의 문자열 표현을 해당하는 32비트 부호 없는 정수로 변환하려고 합니다.반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다.이 문자열은 <paramref name="style" /> 매개 변수로 지정된 스타일을 사용하여 해석됩니다.</param>
      <param name="style">
        <paramref name="s" />에 사용할 수 있는 형식을 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자에 해당하는 32비트 부호 없는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, 형식이 <paramref name="style" />과 호환되지 않거나, <see cref="F:System.UInt32.MinValue" />보다 작거나 <see cref="F:System.UInt32.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.TryParse(System.String,System.UInt32@)">
      <summary>숫자의 문자열 표현을 해당하는 32비트 부호 없는 정수로 변환하려고 합니다.반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자에 해당하는 32비트 부호 없는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, 형식이 올바르지 않거나, <see cref="F:System.UInt32.MinValue" />보다 작거나 <see cref="F:System.UInt32.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UInt64">
      <summary>64비트 부호 없는 정수를 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.CompareTo(System.UInt64)">
      <summary>이 인스턴스를 지정된 64비트 부호 없는 정수와 비교하여 상대 값의 표시를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">비교할 부호 없는 정수입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt64.Equals(System.Object)">
      <summary>이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 <paramref name="obj" />의 인스턴스이고 이 인스턴스의 값과 같으면 <see cref="T:System.UInt64" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt64.Equals(System.UInt64)">
      <summary>이 인스턴스가 지정된 <see cref="T:System.UInt64" /> 값과 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>true가 이 인터페이스와 같은 값을 가지면 <paramref name="obj" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 <see cref="T:System.UInt64" /> 값입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt64.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UInt64.MaxValue">
      <summary>
        <see cref="T:System.UInt64" />의 최대값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UInt64.MinValue">
      <summary>
        <see cref="T:System.UInt64" />의 최소값을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String)">
      <summary>숫자의 문자열 표현을 해당하는 64비트 부호 없는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 있는 수에 해당하는 64비트 부호 없는 정수입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>지정된 스타일로 된 숫자의 문자열 표현을 해당하는 64비트 부호 없는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 수에 해당하는 64비트 부호 없는 정수입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다.이 문자열은 <paramref name="style" /> 매개 변수로 지정된 스타일을 사용하여 해석됩니다.</param>
      <param name="style">
        <paramref name="s" />에 사용할 수 있는 서식을 지정하는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 64비트 부호 없는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 수에 해당하는 64비트 부호 없는 정수입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다.이 문자열은 <paramref name="style" /> 매개 변수로 지정된 스타일을 사용하여 해석됩니다.</param>
      <param name="style">
        <paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String,System.IFormatProvider)">
      <summary>지정된 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 64비트 부호 없는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="s" />에 지정된 수에 해당하는 64비트 부호 없는 정수입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다. </param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not in the correct style. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.System#IComparable#CompareTo(System.Object)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 순서를 나타내는 부호 있는 정수입니다.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.UInt64" /> object. </exception>
    </member>
    <member name="M:System.UInt64.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.UInt64.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>현재 인스턴스의 값이 0이 아니면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Byte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Char" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>이 변환은 지원되지 않습니다.이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</summary>
      <returns>이 변환은 지원되지 않습니다.값이 반환되지 않습니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Decimal" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Double" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int16" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Int64" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.SByte" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.Single" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <paramref name="type" />으로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="type">이 <see cref="T:System.UInt64" /> 값을 변환할 대상 형식입니다.</param>
      <param name="provider">반환된 값의 형식에 대한 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 구현입니다.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt16" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>
        <see cref="T:System.UInt32" />로 변환된 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />를 참조하십시오. </summary>
      <returns>변경되지 않은 현재 인스턴스의 값입니다.</returns>
      <param name="provider">이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.UInt64.ToString">
      <summary>이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>부호나 앞에 오는 0 없이 0에서 9 사이의 숫자 열로 구성된 이 인스턴스 값의 문자열 표현입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.ToString(System.IFormatProvider)">
      <summary>지정된 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>부호나 앞에 오는 0 없이 0에서 9 사이의 숫자 열로 구성된 이 인스턴스 값의 문자열 표현입니다.  </returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.ToString(System.String)">
      <summary>지정된 형식을 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값을 <paramref name="format" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</returns>
      <param name="format">숫자 서식 문자열입니다.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.ToString(System.String,System.IFormatProvider)">
      <summary>지정된 형식 및 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <returns>
        <paramref name="format" /> 및 <paramref name="provider" />로 지정된 이 인스턴스 값의 문자열 표현입니다.</returns>
      <param name="format">숫자 서식 문자열입니다.</param>
      <param name="provider">이 인스턴스에 대한 문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)">
      <summary>지정된 스타일과 문화권별 서식으로 나타낸 숫자의 문자열 표현을 해당하는 64비트 부호 없는 정수로 변환하려고 합니다.반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다.이 문자열은 <paramref name="style" /> 매개 변수로 지정된 스타일을 사용하여 해석됩니다.</param>
      <param name="style">
        <paramref name="s" />에 사용할 수 있는 형식을 나타내는 열거형 값의 비트 조합입니다.지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <param name="provider">
        <paramref name="s" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자에 해당하는 64비트 부호 없는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, 형식이 <paramref name="style" />과 호환되지 않거나, <see cref="F:System.UInt64.MinValue" />보다 작거나 <see cref="F:System.UInt64.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.TryParse(System.String,System.UInt64@)">
      <summary>숫자의 문자열 표현을 해당하는 64비트 부호 없는 정수로 변환하려고 합니다.반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</summary>
      <returns>true가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="s">변환할 숫자를 나타내는 문자열입니다. </param>
      <param name="result">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자에 해당하는 64비트 부호 없는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.<paramref name="s" /> 매개 변수가 null 또는 <see cref="F:System.String.Empty" />이거나, 형식이 올바르지 않거나, <see cref="F:System.UInt64.MinValue" />보다 작거나 <see cref="F:System.UInt64.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UIntPtr">
      <summary>포인터나 핸들을 나타내는 데 사용되는 플랫폼별 형식입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.#ctor(System.UInt32)">
      <summary>지정된 32비트 포인터나 핸들을 사용하여 <see cref="T:System.UIntPtr" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">32비트의 부호 없는 정수에 들어 있는 포인터나 핸들입니다. </param>
    </member>
    <member name="M:System.UIntPtr.#ctor(System.UInt64)">
      <summary>지정된 64비트 포인터나 핸들을 사용하여 <see cref="T:System.UIntPtr" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">64비트의 부호 없는 정수에 들어 있는 포인터나 핸들입니다. </param>
      <exception cref="T:System.OverflowException">32비트 플랫폼에서 <paramref name="value" />가 너무 커서 <see cref="T:System.UIntPtr" />로 나타낼 수 없는 경우 </exception>
    </member>
    <member name="M:System.UIntPtr.#ctor(System.Void*)">
      <summary>알 수 없는 형식의 지정된 포인터를 사용하여 <see cref="T:System.UIntPtr" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">알 수 없는 형식의 포인터입니다. </param>
    </member>
    <member name="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
      <summary>부호 없는 포인터의 값에 오프셋을 더합니다.</summary>
      <returns>
        <paramref name="pointer" />에 <paramref name="offset" /> 더하기를 반영하는 부호 없는 새 포인터입니다.</returns>
      <param name="pointer">오프셋을 더할 부호 없는 포인터입니다.</param>
      <param name="offset">더할 오프셋입니다.</param>
    </member>
    <member name="M:System.UIntPtr.Equals(System.Object)">
      <summary>이 인스턴스가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="obj" />가 <see cref="T:System.UIntPtr" />의 인스턴스이고 이 인스턴스의 값과 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UIntPtr.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
      <summary>부호 없는 포인터의 값에 오프셋을 더합니다.</summary>
      <returns>
        <paramref name="pointer" />에 <paramref name="offset" /> 더하기를 반영하는 부호 없는 새 포인터입니다.</returns>
      <param name="pointer">오프셋을 더할 부호 없는 포인터입니다.</param>
      <param name="offset">더할 오프셋입니다.</param>
    </member>
    <member name="M:System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)">
      <summary>
        <see cref="T:System.UIntPtr" />의 지정된 두 인스턴스가 같은지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="value1" />이 <paramref name="value2" />와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value1">비교할 첫 번째 포인터 또는 핸들입니다. </param>
      <param name="value2">비교할 두 번째 포인터 또는 핸들입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UInt32)~System.UIntPtr">
      <summary>32비트의 부호 없는 정수의 값을 <see cref="T:System.UIntPtr" />로 변환합니다.</summary>
      <returns>
        <paramref name="value" />로 초기화된 <see cref="T:System.UIntPtr" />의 새 인스턴스입니다.</returns>
      <param name="value">32비트 부호 없는 정수입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UInt64)~System.UIntPtr">
      <summary>64비트의 부호 없는 정수의 값을 <see cref="T:System.UIntPtr" />로 변환합니다.</summary>
      <returns>
        <paramref name="value" />로 초기화된 <see cref="T:System.UIntPtr" />의 새 인스턴스입니다.</returns>
      <param name="value">64비트 부호 없는 정수입니다. </param>
      <exception cref="T:System.OverflowException">32비트 플랫폼에서 <paramref name="value" />가 너무 커서 <see cref="T:System.UIntPtr" />로 나타낼 수 없는 경우 </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt64">
      <summary>지정된 <see cref="T:System.UIntPtr" />의 값을 64비트의 부호 없는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="value" />의 내용입니다.</returns>
      <param name="value">변환할 포인터 또는 핸들입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*">
      <summary>지정된 <see cref="T:System.UIntPtr" />의 값을 알 수 없는 형식의 포인터로 변환합니다.</summary>
      <returns>
        <paramref name="value" />의 내용입니다.</returns>
      <param name="value">변환할 포인터 또는 핸들입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32">
      <summary>지정된 <see cref="T:System.UIntPtr" />의 값을 32비트의 부호 없는 정수로 변환합니다.</summary>
      <returns>
        <paramref name="value" />의 내용입니다.</returns>
      <param name="value">변환할 포인터 또는 핸들입니다. </param>
      <exception cref="T:System.OverflowException">64비트 플랫폼에서 <paramref name="value" />의 값이 너무 커서 32비트의 부호 없는 정수로 나타낼 수 없는 경우 </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr">
      <summary>알 수 없는 형식에 대한 지정된 포인터를 <see cref="T:System.UIntPtr" />로 변환합니다.</summary>
      <returns>
        <paramref name="value" />로 초기화된 <see cref="T:System.UIntPtr" />의 새 인스턴스입니다.</returns>
      <param name="value">알 수 없는 형식의 포인터입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)">
      <summary>
        <see cref="T:System.UIntPtr" />의 지정된 두 인스턴스가 같지 않은지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="value1" />이 <paramref name="value2" />와 같지 않으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value1">비교할 첫 번째 포인터 또는 핸들입니다. </param>
      <param name="value2">비교할 두 번째 포인터 또는 핸들입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
      <summary>부호 없는 포인터의 값에서 오프셋을 뺍니다.</summary>
      <returns>
        <paramref name="pointer" />에서 <paramref name="offset" /> 빼기를 반영하는 부호 없는 새 포인터입니다.</returns>
      <param name="pointer">오프셋을 뺄 부호 없는 포인터입니다.</param>
      <param name="offset">뺄 오프셋입니다.</param>
    </member>
    <member name="P:System.UIntPtr.Size">
      <summary>이 인스턴스의 크기를 가져옵니다.</summary>
      <returns>이 플랫폼에서 바이트로 측정된 포인터나 핸들의 크기입니다.이 속성의 값은 32비트 플랫폼에서 4이고, 64비트 플랫폼에서 8입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
      <summary>부호 없는 포인터의 값에서 오프셋을 뺍니다.</summary>
      <returns>
        <paramref name="pointer" />에서 <paramref name="offset" /> 빼기를 반영하는 부호 없는 새 포인터입니다.</returns>
      <param name="pointer">오프셋을 뺄 부호 없는 포인터입니다.</param>
      <param name="offset">뺄 오프셋입니다.</param>
    </member>
    <member name="M:System.UIntPtr.ToPointer">
      <summary>이 인스턴스의 값을 알 수 없는 형식의 포인터로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Void" />의 포인터 즉, 알 수 없는 형식의 데이터가 들어 있는 메모리에 대한 포인터입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.ToString">
      <summary>이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns>이 인스턴스의 값에 대한 문자열 표현입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.ToUInt32">
      <summary>이 인스턴스의 값을 32비트의 부호 없는 정수로 변환합니다.</summary>
      <returns>이 인스턴스의 값과 같은 32비트의 부호 없는 정수입니다.</returns>
      <exception cref="T:System.OverflowException">64비트 플랫폼에서 이 인스턴스의 값이 너무 커서 32비트의 부호 없는 정수로 나타낼 수 없는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.ToUInt64">
      <summary>이 인스턴스의 값을 64비트의 부호 없는 정수로 변환합니다.</summary>
      <returns>이 인스턴스의 값과 같은 64비트의 부호 없는 정수입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UIntPtr.Zero">
      <summary>0으로 초기화된 포인터나 핸들을 나타내는 읽기 전용 필드입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UnauthorizedAccessException">
      <summary>I/O 오류 또는 특정 형식의 보안 오류로 인해 운영 체제가 액세스를 거부할 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UnauthorizedAccessException.#ctor">
      <summary>
        <see cref="T:System.UnauthorizedAccessException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.UnauthorizedAccessException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.UnauthorizedAccessException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다. </param>
    </member>
    <member name="M:System.UnauthorizedAccessException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.UnauthorizedAccessException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="inner">현재 예외의 원인인 예외입니다.<paramref name="inner" /> 매개 변수가 null 참조(Visual Basic에서는 Nothing)가 아니면, 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.Uri">
      <summary>URI(Uniform Resource Indentifier)의 개체 표현을 제공하며 URI 부분에 쉽게 액세스할 수 있도록 합니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.#ctor(System.String)">
      <summary>URI가 지정된 <see cref="T:System.Uri" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="uriString">URI입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" />가 null인 경우 </exception>
      <exception cref="T:System.UriFormatException">에 .NET for Windows Store apps 또는 이식 가능한 클래스 라이브러리, 기본 클래스 예외를 catch <see cref="T:System.FormatException" />, 대신 합니다.<paramref name="uriString" />가 비어 있는 경우또는 <paramref name="uriString" />에 지정된 체계가 제대로 구성되지 않은 경우.참조 <see cref="M:System.Uri.CheckSchemeName(System.String)" />합니다.또는 <paramref name="uriString" />에 슬래시가 너무 많은 경우또는 <paramref name="uriString" />에 지정된 암호가 잘못된 경우또는 <paramref name="uriString" />에 지정된 호스트 이름이 잘못된 경우또는 <paramref name="uriString" />에 지정된 파일 이름이 잘못된 경우 또는 <paramref name="uriString" />에 지정된 사용자 이름이 잘못된 경우또는 <paramref name="uriString" />에 지정된 호스트 또는 인증 기관 이름이 백슬래시로 끝나는 경우또는 <paramref name="uriString" />에 지정된 포트 번호가 잘못되었거나 구문 분석될 수 없는 경우또는 길이 <paramref name="uriString" /> 65519 자를 초과 합니다.또는 <paramref name="uriString" />에 지정된 체계의 길이가 1023자를 초과하는 경우또는 <paramref name="uriString" />에 잘못된 문자 시퀀스가 있는 경우또는 <paramref name="uriString" />에 지정된 MS-DOS 경로가 c:\\로 시작하지 않는 경우</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.String,System.UriKind)">
      <summary>URI가 지정된 <see cref="T:System.Uri" /> 클래스의 새 인스턴스를 초기화합니다.이 생성자를 사용하면 URI 문자열이 상대 URI 또는 절대 URI인지, 아니면 결정되지 않았는지를 지정할 수 있습니다.</summary>
      <param name="uriString">
        <see cref="T:System.Uri" /> 인스턴스가 나타낼 리소스를 식별하는 문자열입니다.</param>
      <param name="uriKind">URI 문자열이 상대 URI 또는 절대 URI인지, 아니면 결정되지 않았는지를 지정합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="uriKind" />이 잘못되었습니다. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" />가 null인 경우 </exception>
      <exception cref="T:System.UriFormatException">에 .NET for Windows Store apps 또는 이식 가능한 클래스 라이브러리, 기본 클래스 예외를 catch <see cref="T:System.FormatException" />, 대신 합니다.<paramref name="uriString" />에 상대 URI가 포함되어 있고 <paramref name="uriKind" />가 <see cref="F:System.UriKind.Absolute" />인 경우또는<paramref name="uriString" />에 절대 URI가 포함되어 있고 <paramref name="uriKind" />가 <see cref="F:System.UriKind.Relative" />인 경우또는<paramref name="uriString" />가 비어 있는 경우또는 <paramref name="uriString" />에 지정된 체계가 제대로 구성되지 않은 경우.참조 <see cref="M:System.Uri.CheckSchemeName(System.String)" />합니다.또는 <paramref name="uriString" />에 슬래시가 너무 많은 경우또는 <paramref name="uriString" />에 지정된 암호가 잘못된 경우또는 <paramref name="uriString" />에 지정된 호스트 이름이 잘못된 경우또는 <paramref name="uriString" />에 지정된 파일 이름이 잘못된 경우 또는 <paramref name="uriString" />에 지정된 사용자 이름이 잘못된 경우또는 <paramref name="uriString" />에 지정된 호스트 또는 인증 기관 이름이 백슬래시로 끝나는 경우또는 <paramref name="uriString" />에 지정된 포트 번호가 잘못되었거나 구문 분석될 수 없는 경우또는 길이 <paramref name="uriString" /> 65519 자를 초과 합니다.또는 <paramref name="uriString" />에 지정된 체계의 길이가 1023자를 초과하는 경우또는 <paramref name="uriString" />에 잘못된 문자 시퀀스가 있는 경우또는 <paramref name="uriString" />에 지정된 MS-DOS 경로가 c:\\로 시작하지 않는 경우</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.Uri,System.String)">
      <summary>지정된 기본 URI와 상대 URI 문자열을 기반으로 <see cref="T:System.Uri" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="baseUri">기본 URI입니다. </param>
      <param name="relativeUri">기본 URI에 추가할 상대 URI입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="baseUri" />가 절대 <see cref="T:System.Uri" /> 인스턴스가 아닌 경우 </exception>
      <exception cref="T:System.UriFormatException">에 .NET for Windows Store apps 또는 이식 가능한 클래스 라이브러리, 기본 클래스 예외를 catch <see cref="T:System.FormatException" />, 대신 합니다.<paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI가 비어 있거나 공백만 포함하는 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 체계가 잘못된 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 슬래시가 너무 많은 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 암호가 잘못된 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 호스트 이름이 잘못된 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 파일 이름이 잘못된 경우 또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 사용자 이름이 잘못된 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 호스트 또는 인증 기관 이름이 백슬래시로 끝나는 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 포트 번호가 잘못되었거나 구문 분석될 수 없는 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI의 길이가 65519자를 초과하는 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 체계의 길이가 1023자를 초과하는 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 잘못된 문자 시퀀스가 있는 경우또는 <paramref name="uriString" />에 지정된 MS-DOS 경로가 c:\\로 시작하지 않는 경우</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.Uri,System.Uri)">
      <summary>지정된 기본 <see cref="T:System.Uri" /> 인스턴스와 상대 <see cref="T:System.Uri" /> 인스턴스의 조합을 기반으로 <see cref="T:System.Uri" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="baseUri">새 <see cref="T:System.Uri" /> 인스턴스의 기본인 절대 <see cref="T:System.Uri" />입니다. </param>
      <param name="relativeUri">
        <see cref="T:System.Uri" />와 결합되는 상대 <paramref name="baseUri" /> 인스턴스입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseUri" />가 절대 <see cref="T:System.Uri" /> 인스턴스가 아닌 경우 </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="baseUri" />가 절대 <see cref="T:System.Uri" /> 인스턴스가 아닌 경우 </exception>
      <exception cref="T:System.UriFormatException">에 .NET for Windows Store apps 또는 이식 가능한 클래스 라이브러리, 기본 클래스 예외를 catch <see cref="T:System.FormatException" />, 대신 합니다.<paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI가 비어 있거나 공백만 포함하는 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 체계가 잘못된 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 슬래시가 너무 많은 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 암호가 잘못된 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 호스트 이름이 잘못된 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 파일 이름이 잘못된 경우 또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 사용자 이름이 잘못된 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 호스트 또는 인증 기관 이름이 백슬래시로 끝나는 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 포트 번호가 잘못되었거나 구문 분석될 수 없는 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI의 길이가 65519자를 초과하는 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 체계의 길이가 1023자를 초과하는 경우또는 <paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 잘못된 문자 시퀀스가 있는 경우또는 <paramref name="uriString" />에 지정된 MS-DOS 경로가 c:\\로 시작하지 않는 경우</exception>
    </member>
    <member name="P:System.Uri.AbsolutePath">
      <summary>URI의 절대 경로를 가져옵니다.</summary>
      <returns>리소스에 대한 절대 경로가 포함된 <see cref="T:System.String" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.AbsoluteUri">
      <summary>절대 URI를 가져옵니다.</summary>
      <returns>전체 URI가 포함된 <see cref="T:System.String" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Authority">
      <summary>서버의 DNS(Domain Name System) 호스트 이름이나 IP 주소 및 포트 번호를 가져옵니다.</summary>
      <returns>이 인스턴스가 나타내는 URI의 인증 기관 구성 요소가 포함된 <see cref="T:System.String" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.CheckHostName(System.String)">
      <summary>지정된 호스트 이름이 유효한 DNS 이름인지 여부를 확인합니다.</summary>
      <returns>호스트 이름의 형식을 나타내는 <see cref="T:System.UriHostNameType" />입니다.호스트 이름의 형식을 확인할 수 없거나 호스트 이름이 null 또는 길이가 0인 문자열이면 이 메서드에서 <see cref="F:System.UriHostNameType.Unknown" />을 반환합니다.</returns>
      <param name="name">유효성을 확인할 호스트 이름입니다.IPv4 또는 IPv6 주소이거나 인터넷 호스트 이름일 수 있습니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.CheckSchemeName(System.String)">
      <summary>지정된 체계 이름이 유효한지 여부를 확인합니다.</summary>
      <returns>스키마 이름이 유효하면 <see cref="T:System.Boolean" /> 값이  true이고, 그렇지 않으면 false입니다.</returns>
      <param name="schemeName">유효성을 확인할 체계 이름입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
      <summary>지정된 비교 규칙을 사용하여 두 URI의 지정된 부분을 비교합니다.</summary>
      <returns>비교한 <see cref="T:System.Int32" /> 구성 요소 간의 어휘 관계를 나타내는 <see cref="T:System.Uri" /> 값입니다.값의미0보다 작음<paramref name="uri1" />가 <paramref name="uri2" />보다 작은 경우0<paramref name="uri1" />가 <paramref name="uri2" />와 같습니다.0보다 큼<paramref name="uri1" />가 <paramref name="uri2" />보다 큰 경우</returns>
      <param name="uri1">첫 번째 <see cref="T:System.Uri" />입니다.</param>
      <param name="uri2">두 번째 <see cref="T:System.Uri" />입니다.</param>
      <param name="partsToCompare">비교할 <see cref="T:System.UriComponents" />과 <paramref name="uri1" />의 부분을 지정하는 <paramref name="uri2" /> 값의 비트 조합입니다.</param>
      <param name="compareFormat">URI 구성 요소를 비교할 때 사용되는 문자 이스케이프를 지정하는 <see cref="T:System.UriFormat" /> 값 중 하나입니다.</param>
      <param name="comparisonType">
        <see cref="T:System.StringComparison" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" />은(는) 올바른 <see cref="T:System.StringComparison" /> 값이 아닙니다.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Uri.DnsSafeHost">
      <summary>DNS 확인용으로 사용하기 안전한 이스케이프되지 않은 호스트 이름을 가져옵니다.</summary>
      <returns>DNS 확인용으로 적합한 이스케이프되지 않은 URI 호스트 부분을 포함하는 <see cref="T:System.String" />이거나, DNS 확인용으로 이미 적합한 경우 이스케이프되지 않은 원래 호스트 문자열입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.Equals(System.Object)">
      <summary>두 <see cref="T:System.Uri" /> 인스턴스가 같은지 비교합니다.</summary>
      <returns>두 인스턴스가 같은 URI를 나타내면 <see cref="T:System.Boolean" /> 값이 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="comparand">현재 인스턴스와 비교할 URI 식별자나 <see cref="T:System.Uri" /> 인스턴스입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Uri.EscapeDataString(System.String)">
      <summary>문자열을 이스케이프된 표현으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.String" />에 대해 이스케이프된 표현이 포함된 <paramref name="stringToEscape" />입니다.</returns>
      <param name="stringToEscape">이스케이프할 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToEscape" />가 null인 경우 </exception>
      <exception cref="T:System.UriFormatException">에 .NET for Windows Store apps 또는 이식 가능한 클래스 라이브러리, 기본 클래스 예외를 catch <see cref="T:System.FormatException" />, 대신 합니다.길이 <paramref name="stringToEscape" /> 32766 자를 초과 합니다.</exception>
    </member>
    <member name="M:System.Uri.EscapeUriString(System.String)">
      <summary>URI 문자열을 이스케이프된 표현으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.String" />에 대해 이스케이프된 표현이 포함된 <paramref name="stringToEscape" />입니다.</returns>
      <param name="stringToEscape">이스케이프할 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToEscape" />가 null인 경우 </exception>
      <exception cref="T:System.UriFormatException">에 .NET for Windows Store apps 또는 이식 가능한 클래스 라이브러리, 기본 클래스 예외를 catch <see cref="T:System.FormatException" />, 대신 합니다.길이 <paramref name="stringToEscape" /> 32766 자를 초과 합니다.</exception>
    </member>
    <member name="P:System.Uri.Fragment">
      <summary>이스케이프된 URI 조각을 가져옵니다.</summary>
      <returns>URI 조각 정보가 포함된 <see cref="T:System.String" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
      <summary>특수 문자에 지정된 이스케이프를 사용하여 현재 인스턴스에 지정된 구성 요소를 가져옵니다.</summary>
      <returns>구성 요소가 포함된 <see cref="T:System.String" />입니다.</returns>
      <param name="components">호출자에게 반환할 현재 인스턴스 부분을 지정하는 <see cref="T:System.UriComponents" /> 값의 비트 조합입니다.</param>
      <param name="format">특수 문자가 이스케이프되는 방법을 제어하는 <see cref="T:System.UriFormat" /> 값 중 하나입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="uriComponents" />가 유효한 <see cref="T:System.UriComponents" /> 값의 조합이 아닌 경우</exception>
      <exception cref="T:System.InvalidOperationException">현재 <see cref="T:System.Uri" />가 절대 URI가 아닌 경우.상대 URI는 이 메서드에서 사용할 수 없습니다.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.GetHashCode">
      <summary>URI의 해시 코드를 가져옵니다.</summary>
      <returns>이 URI에 대해 생성된 해시 값을 포함하는 <see cref="T:System.Int32" />입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Host">
      <summary>이 인스턴스의 호스트 구성 요소를 가져옵니다.</summary>
      <returns>호스트 이름이 포함된 <see cref="T:System.String" />입니다.일반적으로 서버의 DNS 호스트 이름이나 IP 주소입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.HostNameType">
      <summary>URI에 지정된 호스트 이름의 형식을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.UriHostNameType" /> 열거의 멤버입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IdnHost">
      <summary>Punycode를 적절하게 사용하는 호스트의 RFC 3490 규격 국제 도메인 이름입니다.</summary>
      <returns>IDN 표준에 따라 Punycode로 포맷된 호스트 이름을 반환합니다.<see cref="T:System.String" /></returns>
    </member>
    <member name="P:System.Uri.IsAbsoluteUri">
      <summary>
        <see cref="T:System.Uri" /> 인스턴스가 절대 URI인지 여부를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Boolean" /> 인스턴스가 절대 URI이면 true 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 false입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.IsBaseOf(System.Uri)">
      <summary>현재 <see cref="T:System.Uri" /> 인스턴스가 지정된 <see cref="T:System.Uri" /> 인스턴스의 기본 URI인지 여부를 확인합니다.</summary>
      <returns>현재 true 인스턴스가 <see cref="T:System.Uri" />의 기본 URI이면 <paramref name="uri" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="uri">테스트할 지정된 <see cref="T:System.Uri" /> 인스턴스입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" />가 null인 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsDefaultPort">
      <summary>URI의 포트 값이 이 체계의 기본값인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Boolean" /> 속성 값이 이 체계의 기본 포트이면 true 값이 <see cref="P:System.Uri.Port" />이고, 그렇지 않으면 false입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsFile">
      <summary>지정된 <see cref="T:System.Uri" />가 파일 URI인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Boolean" />가 파일 URI이면 true 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 false입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsLoopback">
      <summary>지정된 <see cref="T:System.Uri" />가 로컬 호스트를 참조하는지 여부를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Boolean" />가 로컬 호스트를 참조하면 true 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 false입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsUnc">
      <summary>지정된 <see cref="T:System.Uri" />가 UNC(Universal Naming Convention) 경로인지 여부를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Boolean" />가 UNC 경로이면 true 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 false입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.IsWellFormedOriginalString">
      <summary>이 <see cref="T:System.Uri" />를 구성하는 데 사용된 문자열의 형식이 올바른지, 이후에 문자열을 이스케이프하지 않아도 되는지 여부를 나타냅니다.</summary>
      <returns>문자열이 제대로 구성되었으면 <see cref="T:System.Boolean" /> 값이 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
      <summary>문자열로 URI 생성을 시도하여 문자열 형식이 올바른지 여부를 나타내고 이후에 문자열을 이스케이프하지 않아도 되는지 확인합니다.</summary>
      <returns>문자열이 제대로 구성되었으면 <see cref="T:System.Boolean" /> 값이 true 이고, 그렇지 않으면 false입니다.</returns>
      <param name="uriString">
        <see cref="T:System.Uri" /> 생성을 시도하는 데 사용되는 문자열입니다.</param>
      <param name="uriKind">
        <see cref="T:System.Uri" />에 있는 <paramref name="uriString" />의 형식입니다.</param>
    </member>
    <member name="P:System.Uri.LocalPath">
      <summary>파일 이름에 대한 로컬 운영 체제 표현을 가져옵니다.</summary>
      <returns>파일 이름에 대한 로컬 운영 체제 표현이 포함된 <see cref="T:System.String" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.MakeRelativeUri(System.Uri)">
      <summary>두 <see cref="T:System.Uri" /> 인스턴스 간의 차이점을 확인합니다.</summary>
      <returns>이 URI 인스턴스와 <paramref name="uri" />의 호스트 이름 및 스키마가 같으면 이 메서드에서 상대 <see cref="T:System.Uri" />를 반환합니다. 이 상대 URI가 현재 URI 인스턴스에 추가되면 <paramref name="uri" />가 생성됩니다.호스트 이름이나 체계가 다르면 이 메서드에서 <see cref="T:System.Uri" /> 매개 변수를 나타내는 <paramref name="uri" />을 반환합니다.</returns>
      <param name="uri">현재 URI와 비교할 URI입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" />가 null인 경우 </exception>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
    </member>
    <member name="M:System.Uri.op_Equality(System.Uri,System.Uri)">
      <summary>두 <see cref="T:System.Uri" /> 인스턴스의 값이 같은지를 확인합니다.</summary>
      <returns>두 <see cref="T:System.Boolean" /> 인스턴스가 동일하면 true 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="uri1">
        <see cref="T:System.Uri" />와 비교할 <paramref name="uri2" /> 인스턴스입니다. </param>
      <param name="uri2">
        <see cref="T:System.Uri" />와 비교할 <paramref name="uri1" /> 인스턴스입니다. </param>
      <filterpriority>3</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.op_Inequality(System.Uri,System.Uri)">
      <summary>두 <see cref="T:System.Uri" /> 인스턴스의 값이 다른지 여부를 확인합니다.</summary>
      <returns>두 <see cref="T:System.Boolean" /> 인스턴스가 동일하면 true 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 false입니다.매개 변수 중 하나가 null이면 이 메서드에서 true를 반환합니다.</returns>
      <param name="uri1">
        <see cref="T:System.Uri" />와 비교할 <paramref name="uri2" /> 인스턴스입니다. </param>
      <param name="uri2">
        <see cref="T:System.Uri" />와 비교할 <paramref name="uri1" /> 인스턴스입니다. </param>
      <filterpriority>3</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.OriginalString">
      <summary>
        <see cref="T:System.Uri" /> 생성자에 전달된 원래 URI 문자열을 가져옵니다.</summary>
      <returns>이 인스턴스를 만들 때 URI를 지정했으면 해당 URI가 포함된 <see cref="T:System.String" />이고, 그렇지 않으면 <see cref="F:System.String.Empty" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.PathAndQuery">
      <summary>물음표(?)로 구분된 <see cref="P:System.Uri.AbsolutePath" /> 및 <see cref="P:System.Uri.Query" /> 속성을 가져옵니다.</summary>
      <returns>물음표(?)로 구분된 <see cref="T:System.String" /> 및 <see cref="P:System.Uri.AbsolutePath" /> 속성이 포함된 <see cref="P:System.Uri.Query" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Port">
      <summary>이 URI의 포트 번호를 가져옵니다.</summary>
      <returns>이 URI의 포트 번호가 포함된 <see cref="T:System.Int32" /> 값입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Query">
      <summary>지정된 URI에 포함된 쿼리 정보를 가져옵니다.</summary>
      <returns>지정된 URI에 포함된 쿼리 정보를 포함하는 <see cref="T:System.String" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Scheme">
      <summary>이 URI의 체계 이름을 가져옵니다.</summary>
      <returns>소문자로 변환된 이 URI의 스키마가 포함된 <see cref="T:System.String" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Segments">
      <summary>지정된 URI를 구성하는 경로 세그먼트가 포함된 배열을 가져옵니다.</summary>
      <returns>지정된 URI를 구성하는 경로 세그먼트가 포함된 <see cref="T:System.String" /> 배열입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.ToString">
      <summary>지정된 <see cref="T:System.Uri" /> 인스턴스에 대한 정식 문자열 표현을 가져옵니다.</summary>
      <returns>이스케이프되지 않은 <see cref="T:System.String" /> 인스턴스의 정식 표현을 포함하는 <see cref="T:System.Uri" /> 인스턴스입니다.#, ? 및 %를 제외한 모든 문자가 이스케이프되지 않습니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)">
      <summary>지정된 <see cref="T:System.Uri" /> 인스턴스와 <see cref="T:System.String" />를 사용하여 새 <see cref="T:System.UriKind" />를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Boolean" />가 만들어졌으면 true 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="uriString">
        <see cref="T:System.String" />를 나타내는 <see cref="T:System.Uri" />입니다.</param>
      <param name="uriKind">URI의 형식입니다.</param>
      <param name="result">이 메서드가 반환될 때 생성된 <see cref="T:System.Uri" />를 포함합니다.</param>
    </member>
    <member name="M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)">
      <summary>지정된 기본 및 상대 <see cref="T:System.Uri" /> 인스턴스를 사용하여 새 <see cref="T:System.String" />를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Boolean" />가 만들어졌으면 true 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="baseUri">기본 <see cref="T:System.Uri" />입니다.</param>
      <param name="relativeUri">기본 <see cref="T:System.Uri" />에 추가할 <see cref="T:System.String" />으로 나타낸 상대 <see cref="T:System.Uri" />입니다.</param>
      <param name="result">이 메서드가 반환될 때 <see cref="T:System.Uri" />와 <paramref name="baseUri" />에서 만든 <paramref name="relativeUri" />를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
    </member>
    <member name="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
      <summary>지정된 기본 및 상대 <see cref="T:System.Uri" /> 인스턴스를 사용하여 새 <see cref="T:System.Uri" />를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Boolean" />가 만들어졌으면 true 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 false입니다.</returns>
      <param name="baseUri">기본 <see cref="T:System.Uri" />입니다. </param>
      <param name="relativeUri">기본 <see cref="T:System.Uri" />에 추가할 상대 <see cref="T:System.Uri" />입니다. </param>
      <param name="result">이 메서드가 반환될 때 <see cref="T:System.Uri" />와 <paramref name="baseUri" />에서 만든 <paramref name="relativeUri" />를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" />가 null인 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.UnescapeDataString(System.String)">
      <summary>문자열을 이스케이프되지 않은 표현으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.String" />에 대해 이스케이프되지 않은 표현이 포함된 <paramref name="stringToUnescape" />입니다. </returns>
      <param name="stringToUnescape">이스케이프되지 않을 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToUnescape" />가 null인 경우 </exception>
    </member>
    <member name="P:System.Uri.UserEscaped">
      <summary>
        <see cref="T:System.Uri" /> 인스턴스를 만들기 전에 URI 문자열을 완전히 이스케이프했음을 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Boolean" /> 인스턴스를 만들 때 true 매개 변수를 <paramref name="dontEscape" />로 설정했으면 true 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Uri.UserInfo">
      <summary>지정된 URI와 연결된 사용자 이름, 암호 및 기타 사용자 관련 정보를 가져옵니다.</summary>
      <returns>URI와 연결된 사용자 정보가 포함된 <see cref="T:System.String" />입니다.반환된 값에는 URI의 사용자 정보 부분을 구분하기 위해 예약된 '@' 문자가 포함되지 않습니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.UriComponents">
      <summary>
        <see cref="T:System.Uri" />의 부분을 지정합니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UriComponents.AbsoluteUri">
      <summary>
        <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.UserInfo" />, <see cref="P:System.Uri.Host" />, <see cref="P:System.Uri.Port" />, <see cref="P:System.Uri.LocalPath" />, <see cref="P:System.Uri.Query" /> 및 <see cref="P:System.Uri.Fragment" /> 데이터입니다.</summary>
    </member>
    <member name="F:System.UriComponents.Fragment">
      <summary>
        <see cref="P:System.Uri.Fragment" /> 데이터입니다.</summary>
    </member>
    <member name="F:System.UriComponents.Host">
      <summary>
        <see cref="P:System.Uri.Host" /> 데이터입니다.</summary>
    </member>
    <member name="F:System.UriComponents.HostAndPort">
      <summary>
        <see cref="P:System.Uri.Host" /> 및 <see cref="P:System.Uri.Port" /> 데이터입니다.포트 데이터가 Uri에 없고 기본 포트가 <see cref="P:System.Uri.Scheme" />에 할당되어 있는 경우 기본 포트가 반환됩니다.기본 포트가 없으면 -1이 반환됩니다.</summary>
    </member>
    <member name="F:System.UriComponents.HttpRequestUrl">
      <summary>
        <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.Host" />, <see cref="P:System.Uri.Port" />, <see cref="P:System.Uri.LocalPath" /> 및 <see cref="P:System.Uri.Query" /> 데이터입니다.</summary>
    </member>
    <member name="F:System.UriComponents.KeepDelimiter">
      <summary>구분 기호가 포함되도록 지정합니다.</summary>
    </member>
    <member name="F:System.UriComponents.NormalizedHost">
      <summary>
        <see cref="P:System.Uri.Host" />의 정규화된 형태입니다.</summary>
    </member>
    <member name="F:System.UriComponents.Path">
      <summary>
        <see cref="P:System.Uri.LocalPath" /> 데이터입니다.</summary>
    </member>
    <member name="F:System.UriComponents.PathAndQuery">
      <summary>
        <see cref="P:System.Uri.LocalPath" /> 및 <see cref="P:System.Uri.Query" /> 데이터입니다.<see cref="P:System.Uri.PathAndQuery" />도 참조하십시오.</summary>
    </member>
    <member name="F:System.UriComponents.Port">
      <summary>
        <see cref="P:System.Uri.Port" /> 데이터입니다.</summary>
    </member>
    <member name="F:System.UriComponents.Query">
      <summary>
        <see cref="P:System.Uri.Query" /> 데이터입니다.</summary>
    </member>
    <member name="F:System.UriComponents.Scheme">
      <summary>
        <see cref="P:System.Uri.Scheme" /> 데이터입니다.</summary>
    </member>
    <member name="F:System.UriComponents.SchemeAndServer">
      <summary>
        <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.Host" /> 및 <see cref="P:System.Uri.Port" /> 데이터입니다.</summary>
    </member>
    <member name="F:System.UriComponents.SerializationInfoString">
      <summary>URI Serializer에 필요한 완전한 <see cref="T:System.Uri" /> 컨텍스트입니다.이 컨텍스트에는 IPv6 범위가 포함됩니다.</summary>
    </member>
    <member name="F:System.UriComponents.StrongAuthority">
      <summary>
        <see cref="P:System.Uri.UserInfo" />, <see cref="P:System.Uri.Host" /> 및 <see cref="P:System.Uri.Port" /> 데이터입니다.포트 데이터가 <see cref="T:System.Uri" />에 없고 기본 포트가 <see cref="P:System.Uri.Scheme" />에 할당되어 있는 경우 기본 포트가 반환됩니다.기본 포트가 없으면 -1이 반환됩니다.</summary>
    </member>
    <member name="F:System.UriComponents.StrongPort">
      <summary>
        <see cref="P:System.Uri.Port" /> 데이터입니다.포트 데이터가 <see cref="T:System.Uri" />에 없고 기본 포트가 <see cref="P:System.Uri.Scheme" />에 할당되어 있는 경우 기본 포트가 반환됩니다.기본 포트가 없으면 -1이 반환됩니다.</summary>
    </member>
    <member name="F:System.UriComponents.UserInfo">
      <summary>
        <see cref="P:System.Uri.UserInfo" /> 데이터입니다.</summary>
    </member>
    <member name="T:System.UriFormat">
      <summary>URI 정보가 이스케이프되는 방법을 제어합니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UriFormat.SafeUnescaped">
      <summary>요청된 URI 구성 요소에서 예약된 의미를 갖는 문자가 이스케이프된 상태로 유지됩니다.다른 모든 문자는 이스케이프되지 않습니다.설명 부분을 참조하십시오.</summary>
    </member>
    <member name="F:System.UriFormat.Unescaped">
      <summary>이스케이프가 수행되지 않습니다.</summary>
    </member>
    <member name="F:System.UriFormat.UriEscaped">
      <summary>이스케이프가 RFC 2396의 규칙에 따라 수행됩니다.</summary>
    </member>
    <member name="T:System.UriFormatException">
      <summary>잘못된 URI(Uniform Resource Identifier)가 감지될 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UriFormatException.#ctor">
      <summary>
        <see cref="T:System.UriFormatException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.UriFormatException.#ctor(System.String)">
      <summary>지정된 메시지를 사용하여 <see cref="T:System.UriFormatException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="textString">오류 메시지 문자열입니다. </param>
    </member>
    <member name="M:System.UriFormatException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.UriFormatException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="textString">예외를 설명하는 메시지입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
      <param name="e">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.UriHostNameType">
      <summary>
        <see cref="M:System.Uri.CheckHostName(System.String)" /> 메서드에 대한 호스트 이름 형식을 정의합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UriHostNameType.Basic">
      <summary>호스트를 설정했지만 형식을 확인할 수 없습니다.</summary>
    </member>
    <member name="F:System.UriHostNameType.Dns">
      <summary>호스트 이름이 DNS 스타일의 호스트 이름입니다.</summary>
    </member>
    <member name="F:System.UriHostNameType.IPv4">
      <summary>호스트 이름이 인터넷 프로토콜(IP) 버전 4 호스트 주소입니다.</summary>
    </member>
    <member name="F:System.UriHostNameType.IPv6">
      <summary>호스트 이름이 인터넷 프로토콜(IP) 버전 6 호스트 주소입니다.</summary>
    </member>
    <member name="F:System.UriHostNameType.Unknown">
      <summary>호스트 이름 형식이 제공되지 않습니다.</summary>
    </member>
    <member name="T:System.UriKind">
      <summary>
        <see cref="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)" />과 몇 가지 <see cref="Overload:System.Uri.#ctor" /> 메서드에 대한 <see cref="T:System.Uri" />의 종류를 정의합니다.</summary>
    </member>
    <member name="F:System.UriKind.Absolute">
      <summary>URI가 절대 URI입니다.</summary>
    </member>
    <member name="F:System.UriKind.Relative">
      <summary>URI가 상대 URI입니다.</summary>
    </member>
    <member name="F:System.UriKind.RelativeOrAbsolute">
      <summary>URI의 종류가 결정되지 않았습니다.</summary>
    </member>
    <member name="T:System.ValueType">
      <summary>값 형식의 기본 클래스를 제공합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ValueType.#ctor">
      <summary>
        <see cref="T:System.ValueType" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ValueType.Equals(System.Object)">
      <summary>이 인스턴스와 지정된 개체가 같은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="obj" />와 이 인스턴스가 동일한 형식이고 동일한 값을 나타내면 true이고, 그렇지 않으면 false입니다. </returns>
      <param name="obj">현재 인스턴스와 비교할 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ValueType.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>이 인스턴스의 해시 코드인 32비트 부호 있는 정수입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ValueType.ToString">
      <summary>이 인스턴스의 정규화된 형식 이름을 반환합니다.</summary>
      <returns>정규화된 형식 이름이 있는 <see cref="T:System.String" />입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Version">
      <summary>어셈블리, 운영 체제 또는 공용 언어 런타임의 버전 번호를 나타냅니다.이 클래스는 상속될 수 없습니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.#ctor(System.Int32,System.Int32)">
      <summary>지정된 주 버전 및 부 버전 값을 사용하여 <see cref="T:System.Version" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="major">주 버전 번호입니다. </param>
      <param name="minor">부 버전 번호입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="major" /> or <paramref name="minor" /> is less than zero. </exception>
    </member>
    <member name="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>지정된 주 버전, 부 버전 및 빌드 버전 값을 사용하여 <see cref="T:System.Version" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="major">주 버전 번호입니다. </param>
      <param name="minor">부 버전 번호입니다. </param>
      <param name="build">빌드 번호입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="major" />, <paramref name="minor" />, or <paramref name="build" /> is less than zero. </exception>
    </member>
    <member name="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>지정된 주 버전, 부 버전, 빌드 버전 및 수정 버전 번호를 사용하여 <see cref="T:System.Version" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="major">주 버전 번호입니다. </param>
      <param name="minor">부 버전 번호입니다. </param>
      <param name="build">빌드 번호입니다. </param>
      <param name="revision">수정 번호입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="major" />, <paramref name="minor" />, <paramref name="build" />, or <paramref name="revision" /> is less than zero. </exception>
    </member>
    <member name="M:System.Version.#ctor(System.String)">
      <summary>지정된 문자열을 사용하여 <see cref="T:System.Version" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="version">각 번호가 마침표('.')로 구분된 주 버전, 부 버전, 빌드 버전 및 수정 버전이 포함된 문자열입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="version" /> has fewer than two components or more than four components. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A major, minor, build, or revision component is less than zero. </exception>
      <exception cref="T:System.FormatException">At least one component of <paramref name="version" /> does not parse to an integer. </exception>
      <exception cref="T:System.OverflowException">At least one component of <paramref name="version" /> represents a number greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="P:System.Version.Build">
      <summary>현재 <see cref="T:System.Version" /> 개체에 대한 버전 번호의 빌드 버전 구성 요소 값을 가져옵니다.</summary>
      <returns>빌드 번호이며 빌드 번호가 정의되지 않으면 -1입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.CompareTo(System.Version)">
      <summary>현재 <see cref="T:System.Version" /> 개체를 지정된 <see cref="T:System.Version" /> 개체와 비교하여 상대 값의 표시를 반환합니다.</summary>
      <returns>다음 표와 같이 두 개체의 상대 값을 나타내는 부호 있는 정수입니다.반환 값 의미 0보다 작음 현재 <see cref="T:System.Version" /> 개체가 <paramref name="value" /> 이전의 버전입니다. 0 현재 <see cref="T:System.Version" /> 개체가 <paramref name="value" />와 같은 버전입니다. 0보다 큼 현재 <see cref="T:System.Version" /> 개체가 <paramref name="value" /> 이후의 버전입니다. 또는<paramref name="value" />가 null입니다.</returns>
      <param name="value">현재 <see cref="T:System.Version" /> 개체와 비교할 <see cref="T:System.Version" /> 개체이거나, null입니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Version" /> 개체가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>현재 <see cref="T:System.Version" /> 개체와 <paramref name="obj" />가 <see cref="T:System.Version" /> 개체이고 현재 <see cref="T:System.Version" /> 개체의 모든 구성 요소가 <paramref name="obj" />의 해당 구성 요소와 일치하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">현재 <see cref="T:System.Version" /> 개체와 비교할 개체이거나 null입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.Equals(System.Version)">
      <summary>현재 <see cref="T:System.Version" /> 개체와 지정된 <see cref="T:System.Version" /> 개체의 값이 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>현재 <see cref="T:System.Version" /> 개체의 모든 구성 요소가 <paramref name="obj" /> 매개 변수의 해당 구성 요소와 일치하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">현재 <see cref="T:System.Version" /> 개체와 비교할 <see cref="T:System.Version" /> 개체이거나, null입니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.GetHashCode">
      <summary>현재 <see cref="T:System.Version" /> 개체의 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Version.Major">
      <summary>현재 <see cref="T:System.Version" /> 개체에 대한 버전 번호의 주 버전 구성 요소 값을 가져옵니다.</summary>
      <returns>주 버전 번호입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Version.MajorRevision">
      <summary>수정 버전 번호의 상위 16비트를 가져옵니다.</summary>
      <returns>16비트 부호 있는 정수입니다.</returns>
    </member>
    <member name="P:System.Version.Minor">
      <summary>현재 <see cref="T:System.Version" /> 개체에 대한 버전 번호의 부 버전 구성 요소 값을 가져옵니다.</summary>
      <returns>부 버전 번호입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Version.MinorRevision">
      <summary>수정 버전 번호의 하위 16비트를 가져옵니다.</summary>
      <returns>16비트 부호 있는 정수입니다.</returns>
    </member>
    <member name="M:System.Version.op_Equality(System.Version,System.Version)">
      <summary>지정된 두 가지 <see cref="T:System.Version" /> 개체가 같은지를 확인합니다.</summary>
      <returns>
        <paramref name="v1" />이 <paramref name="v2" />와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="v1">첫 번째 <see cref="T:System.Version" /> 개체입니다. </param>
      <param name="v2">두 번째 <see cref="T:System.Version" /> 개체입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_GreaterThan(System.Version,System.Version)">
      <summary>지정된 첫 번째 <see cref="T:System.Version" /> 개체가 지정된 두 번째 <see cref="T:System.Version" /> 개체보다 큰지를 확인합니다.</summary>
      <returns>
        <paramref name="v1" />이 <paramref name="v2" />보다 크면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="v1">첫 번째 <see cref="T:System.Version" /> 개체입니다. </param>
      <param name="v2">두 번째 <see cref="T:System.Version" /> 개체입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
      <summary>지정된 첫 번째 <see cref="T:System.Version" /> 개체가 지정된 두 번째 <see cref="T:System.Version" /> 개체보다 크거나 같은지를 확인합니다.</summary>
      <returns>
        <paramref name="v1" />가 <paramref name="v2" />보다 크거나 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="v1">첫 번째 <see cref="T:System.Version" /> 개체입니다. </param>
      <param name="v2">두 번째 <see cref="T:System.Version" /> 개체입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_Inequality(System.Version,System.Version)">
      <summary>지정된 두 개의 <see cref="T:System.Version" /> 개체가 다른지를 확인합니다.</summary>
      <returns>
        <paramref name="v1" />이 <paramref name="v2" />와 다르면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="v1">첫 번째 <see cref="T:System.Version" /> 개체입니다. </param>
      <param name="v2">두 번째 <see cref="T:System.Version" /> 개체입니다. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_LessThan(System.Version,System.Version)">
      <summary>지정된 첫 번째 <see cref="T:System.Version" /> 개체가 지정된 두 번째 <see cref="T:System.Version" /> 개체보다 작은지를 확인합니다.</summary>
      <returns>
        <paramref name="v1" />이 <paramref name="v2" />보다 작으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="v1">첫 번째 <see cref="T:System.Version" /> 개체입니다. </param>
      <param name="v2">두 번째 <see cref="T:System.Version" /> 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="v1" /> is null. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
      <summary>지정된 첫 번째 <see cref="T:System.Version" /> 개체가 두 번째 <see cref="T:System.Version" /> 개체보다 작거나 같은지를 확인합니다.</summary>
      <returns>
        <paramref name="v1" />이 <paramref name="v2" />보다 작거나 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="v1">첫 번째 <see cref="T:System.Version" /> 개체입니다. </param>
      <param name="v2">두 번째 <see cref="T:System.Version" /> 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="v1" /> is null. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.Parse(System.String)">
      <summary>버전 번호의 문자열 표현을 해당하는 <see cref="T:System.Version" /> 개체로 변환합니다.</summary>
      <returns>
        <paramref name="input" /> 매개 변수에 지정된 버전 번호에 해당하는 개체입니다.</returns>
      <param name="input">변환할 버전 번호가 들어 있는 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="input" /> has fewer than two or more than four version components.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">At least one component in <paramref name="input" /> is less than zero.</exception>
      <exception cref="T:System.FormatException">At least one component in <paramref name="input" /> is not an integer.</exception>
      <exception cref="T:System.OverflowException">At least one component in <paramref name="input" /> represents a number that is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="P:System.Version.Revision">
      <summary>현재 <see cref="T:System.Version" /> 개체에 대한 버전 번호의 수정 버전 구성 요소 값을 가져옵니다.</summary>
      <returns>수정 번호이며 수정 번호가 정의되지 않으면 -1입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.System#IComparable#CompareTo(System.Object)">
      <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="value" />의 상대 순서를 나타내는 부호 있는 정수입니다.반환 값 의미 0보다 작음 이 인스턴스가 정렬 순서에서 <paramref name="value" /> 앞에 옵니다.0 이 인스턴스가 정렬 순서에서 <paramref name="value" />와 동일한 위치에서 발생합니다.0보다 큼 이 인스턴스가 정렬 순서에서 <paramref name="value" /> 뒤에 옵니다.또는 <paramref name="value" />가 null인 경우 </returns>
      <param name="version">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Version" /> object. </exception>
    </member>
    <member name="M:System.Version.ToString">
      <summary>현재 <see cref="T:System.Version" /> 개체의 값을 해당하는 <see cref="T:System.String" /> 표현으로 변환합니다.</summary>
      <returns>현재 <see cref="T:System.Version" /> 개체의 주 버전, 부 버전, 빌드 버전 및 수정 버전 구성 요소의 값에 대한 <see cref="T:System.String" /> 표현으로, 다음 형식과 같습니다.각 구성 요소는 마침표('.')로 구분됩니다.구성 요소가 정의되지 않았을 경우 반환 값에 표시되지 않는 구성 요소는 대괄호('['와 ']')로 묶습니다.주 버전.부 버전[.빌드 버전[.수정 버전]]입니다. 예를 들어, Version(1,1) 생성자를 사용하여 <see cref="T:System.Version" /> 개체를 만드는 경우 반환되는 문자열은 "1.1"입니다.Version(1,3,4,2) 생성자를 사용하여 <see cref="T:System.Version" /> 개체를 만드는 경우 반환되는 문자열은 "1.3.4.2"입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.ToString(System.Int32)">
      <summary>현재 <see cref="T:System.Version" /> 개체의 값을 해당하는 <see cref="T:System.String" /> 표현으로 변환합니다.지정된 개수는 반환할 구성 요소의 수를 나타냅니다.</summary>
      <returns>마침표('.')로 구분된 현재 <see cref="T:System.Version" /> 개체의 주 버전, 부 버전, 빌드 버전 및 수정 버전 구성 요소의 값에 대한 <see cref="T:System.String" /> 표현입니다.<paramref name="fieldCount" /> 매개 변수는 반환될 구성 요소의 개수를 결정합니다.fieldCount 반환 값 0 빈 문자열("")입니다. 1 주 버전입니다. 2 주 버전.부 버전입니다. 3 주 버전.부 버전.빌드 버전입니다. 4 주 버전.부 버전.빌드 버전.수정 버전입니다. 예를 들어, Version(1,3,5) 생성자를 사용하여 <see cref="T:System.Version" /> 개체를 만드는 경우 ToString(2)에서는 "1.3"이 반환되고 ToString(4)에서는 예외가 throw됩니다.</returns>
      <param name="fieldCount">반환할 구성 요소의 수입니다.<paramref name="fieldCount" />의 범위는 0에서 4까지입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fieldCount" /> is less than 0, or more than 4.-or- <paramref name="fieldCount" /> is more than the number of components defined in the current <see cref="T:System.Version" /> object. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.TryParse(System.String,System.Version@)">
      <summary>버전 번호의 문자열 표현을 해당하는 <see cref="T:System.Version" /> 개체로 변환하려고 시도하고, 변환에 성공했는지를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="input" /> 매개 변수가 변환되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="input">변환할 버전 번호가 들어 있는 문자열입니다.</param>
      <param name="result">이 메서드가 반환될 때 변환에 성공하는 경우 <paramref name="input" />에 포함된 숫자에 해당하는 <see cref="T:System.Version" />을 포함하고, 변환에 실패하는 경우 주 및 부 버전 번호가 0인 <see cref="T:System.Version" /> 개체를 포함합니다.<paramref name="input" />이 null 또는 <see cref="F:System.String.Empty" />인 경우, 메서드가 반환될 때 <paramref name="result" />는 null입니다.</param>
    </member>
    <member name="T:System.Void">
      <summary>값을 반환하지 않는 메서드의 반환 값 형식을 지정합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.WeakReference">
      <summary>가비지 수집에 의한 개체 회수를 허용하면서 개체를 참조하는 약한 참조를 나타냅니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.WeakReference.#ctor(System.Object)">
      <summary>지정된 개체를 참조하여 <see cref="T:System.WeakReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="target">추적할 개체 또는 null입니다. </param>
    </member>
    <member name="M:System.WeakReference.#ctor(System.Object,System.Boolean)">
      <summary>지정된 개체를 참조하고 지정된 재활성화 추적을 사용하여 <see cref="T:System.WeakReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="target">추적할 개체입니다. </param>
      <param name="trackResurrection">개체 추적을 중지할 시기를 나타냅니다.true일 경우 종료 후 개체를 추적하고, false일 경우 종료할 때까지만 개체를 추적합니다.</param>
    </member>
    <member name="M:System.WeakReference.Finalize">
      <summary>현재 <see cref="T:System.WeakReference" /> 개체가 나타내는 대상에 대한 참조를 삭제합니다.</summary>
    </member>
    <member name="P:System.WeakReference.IsAlive">
      <summary>현재 <see cref="T:System.WeakReference" /> 개체에서 참조하는 개체가 가비지 수집되었는지 여부를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.WeakReference" /> 개체에서 참조하는 개체가 가비지 수집되지 않았지만 계속 액세스할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.WeakReference.Target">
      <summary>현재 <see cref="T:System.WeakReference" /> 개체에서 참조하는 개체(대상)를 가져오거나 설정합니다.</summary>
      <returns>현재 <see cref="T:System.WeakReference" /> 개체에서 참조하는 개체가 가비지 수집되었으면 null이고, 그렇지 않으면 <see cref="T:System.WeakReference" /> 개체에서 참조하는 개체에 대한 참조입니다.</returns>
      <exception cref="T:System.InvalidOperationException">대상 개체에 대한 참조가 잘못된 경우.값이 null 참조이거나 설정 작업을 수행할 때 개체가 종료된 경우 이 속성을 설정하는 동안에 이 예외가 throw될 수 있습니다.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.WeakReference.TrackResurrection">
      <summary>현재 <see cref="T:System.WeakReference" /> 개체에서 참조되는 개체가 종료된 후 추적되는지 여부를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.WeakReference" /> 개체에서 참조하는 개체가 종료된 후 추적되면 true이고, 종료될 때까지만 개체가 추적되면 false입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.WeakReference`1">
      <summary>개체가 가비지 수집에서 회수될 수 있도록 허용하면서 개체를 참조하는 형식화된 약한 참조를 나타냅니다.</summary>
      <typeparam name="T">참조되는 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.WeakReference`1.#ctor(`0)">
      <summary>지정된 개체를 참조하는 <see cref="T:System.WeakReference`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="target">참조할 개체이거나 null입니다.</param>
    </member>
    <member name="M:System.WeakReference`1.#ctor(`0,System.Boolean)">
      <summary>지정된 개체를 참조하고 지정된 재활성화 추적을 사용하는 <see cref="T:System.WeakReference`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="target">참조할 개체이거나 null입니다.</param>
      <param name="trackResurrection">종료 후 개체를 추적하려면 true이고, 종료할 때까지만 개체를 추적하려면 false입니다.</param>
    </member>
    <member name="M:System.WeakReference`1.Finalize">
      <summary>현재 <see cref="T:System.WeakReference`1" /> 개체가 나타내는 대상에 대한 참조를 삭제합니다.</summary>
    </member>
    <member name="M:System.WeakReference`1.SetTarget(`0)">
      <summary>이 <see cref="T:System.WeakReference`1" /> 개체에 의해 참조되는 대상 개체를 설정합니다.</summary>
      <param name="target">새 대상 개체입니다.</param>
    </member>
    <member name="M:System.WeakReference`1.TryGetTarget(`0@)">
      <summary>현재 <see cref="T:System.WeakReference`1" /> 개체가 참조하는 대상 개체를 검색하려고 시도합니다.</summary>
      <returns>대상이 검색되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="target">이 메서드가 반환될 때 사용할 수 있는 경우 대상 개체를 포함합니다.이 매개 변수는 초기화되지 않은 것으로 취급됩니다.</param>
    </member>
    <member name="T:System.Collections.DictionaryEntry">
      <summary>설정하거나 검색할 수 있는 사전 키/값 쌍을 정의합니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.DictionaryEntry.#ctor(System.Object,System.Object)">
      <summary>지정된 키와 값을 사용하여 <see cref="T:System.Collections.DictionaryEntry" /> 형식의 인스턴스를 초기화합니다.</summary>
      <param name="key">각 키/값 쌍에 정의된 개체입니다. </param>
      <param name="value">
        <paramref name="key" />와 관련된 정의입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null이고 .NET Framework 버전이 1.0 또는 1.1인 경우 </exception>
    </member>
    <member name="P:System.Collections.DictionaryEntry.Key">
      <summary>키/값 쌍에서 키를 가져오거나 설정합니다.</summary>
      <returns>키/값 쌍의 키입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Collections.DictionaryEntry.Value">
      <summary>키/값 쌍에서 값을 가져오거나 설정합니다.</summary>
      <returns>키/값 쌍의 값입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Collections.ICollection">
      <summary>제네릭이 아닌 모든 컬렉션의 크기, 열거자 및 동기화 메서드를 정의합니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
      <summary>특정 <see cref="T:System.Array" /> 인덱스에서 시작하여 <see cref="T:System.Collections.ICollection" />의 요소를 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Collections.ICollection" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Array" />입니다.<see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null입니다. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 다차원 배열인 경우또는 소스 <see cref="T:System.Collections.ICollection" />의 요소 수가 <paramref name="index" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큰 경우또는소스 <see cref="T:System.Collections.ICollection" /> 형식을 대상 <paramref name="array" /> 형식으로 자동 캐스팅할 수 없는 경우</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.ICollection.Count">
      <summary>
        <see cref="T:System.Collections.ICollection" />에 포함된 요소 수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />에 포함된 요소 수입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.ICollection.IsSynchronized">
      <summary>
        <see cref="T:System.Collections.ICollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 true이고, 그렇지 않으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.ICollection.SyncRoot">
      <summary>
        <see cref="T:System.Collections.ICollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IComparer">
      <summary>두 개체를 비교하는 메서드를 노출합니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IComparer.Compare(System.Object,System.Object)">
      <summary>두 개체를 비교하여 한 개체가 다른 개체보다 작거나, 같거나 또는 크다는 것을 나타내는 값을 반환합니다.</summary>
      <returns>다음 표와 같이 <paramref name="x" /> 및 <paramref name="y" />의 상대 값을 나타내는 부호 있는 정수입니다.값 의미 0보다 작음 <paramref name="x" />가 <paramref name="y" />보다 작습니다. Zero <paramref name="x" />가 <paramref name="y" />와 같습니다. 0보다 큼 <paramref name="x" />가 <paramref name="y" />보다 큰 경우 </returns>
      <param name="x">비교할 첫 번째 개체입니다. </param>
      <param name="y">비교할 두 번째 개체입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="x" /> 또는 <paramref name="y" /> 모두 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않는 경우또는 <paramref name="x" />와 <paramref name="y" />가 형식이 다르므로 서로 비교할 수 없는 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IDictionary">
      <summary>키/값 쌍의 제네릭이 아닌 컬렉션을 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
      <summary>제공된 키와 값이 있는 요소를 <see cref="T:System.Collections.IDictionary" /> 개체에 추가합니다.</summary>
      <param name="key">추가할 요소의 키로 사용하는 <see cref="T:System.Object" />입니다. </param>
      <param name="value">추가할 요소의 값으로 사용하는 <see cref="T:System.Object" />입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentException">같은 키를 가진 요소가 이미 <see cref="T:System.Collections.IDictionary" /> 개체에 있는 경우 </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IDictionary" />가 읽기 전용인 경우또는 <see cref="T:System.Collections.IDictionary" />의 크기가 고정되어 있는 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Clear">
      <summary>
        <see cref="T:System.Collections.IDictionary" /> 개체에서 요소를 모두 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IDictionary" /> 개체가 읽기 전용인 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Contains(System.Object)">
      <summary>
        <see cref="T:System.Collections.IDictionary" /> 개체에 지정된 키가 있는 요소가 포함되어 있는지 여부를 확인합니다.</summary>
      <returns>true if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, false.</returns>
      <param name="key">
        <see cref="T:System.Collections.IDictionary" /> 개체에서 찾을 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.GetEnumerator">
      <summary>
        <see cref="T:System.Collections.IDictionary" /> 개체의 <see cref="T:System.Collections.IDictionaryEnumerator" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> 개체의 <see cref="T:System.Collections.IDictionaryEnumerator" /> 개체입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.IsFixedSize">
      <summary>
        <see cref="T:System.Collections.IDictionary" /> 개체의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>true if the <see cref="T:System.Collections.IDictionary" /> object has a fixed size; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.IsReadOnly">
      <summary>
        <see cref="T:System.Collections.IDictionary" /> 개체가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>true if the <see cref="T:System.Collections.IDictionary" /> object is read-only; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.Item(System.Object)">
      <summary>지정한 키를 가진 요소를 가져오거나 설정합니다.</summary>
      <returns>지정된 키를 가진 속성입니다. 해당 키가 없는 경우 null입니다.</returns>
      <param name="key">가져오거나 설정할 요소의 키입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우 </exception>
      <exception cref="T:System.NotSupportedException">속성이 설정되어 있고 <see cref="T:System.Collections.IDictionary" /> 개체가 읽기 전용인 경우또는 속성이 설정되어 있고 <paramref name="key" />가 컬렉션에 없으며 <see cref="T:System.Collections.IDictionary" />의 크기가 고정된 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.Keys">
      <summary>
        <see cref="T:System.Collections.IDictionary" /> 개체의 키를 포함하는 <see cref="T:System.Collections.ICollection" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> 개체의 키를 포함하는 <see cref="T:System.Collections.ICollection" /> 개체입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Remove(System.Object)">
      <summary>
        <see cref="T:System.Collections.IDictionary" /> 개체에서 지정된 키를 가진 요소를 제거합니다.</summary>
      <param name="key">제거할 요소의 키입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우 </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IDictionary" /> 개체가 읽기 전용인 경우또는 <see cref="T:System.Collections.IDictionary" />의 크기가 고정되어 있는 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.Values">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.IDictionary" /> object.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> 개체의 값이 포함된 <see cref="T:System.Collections.ICollection" /> 개체입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IDictionaryEnumerator">
      <summary>제네릭이 아닌 사전의 요소를 열거합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionaryEnumerator.Entry">
      <summary>현재 사전 엔트리의 키와 값을 모두 가져옵니다.</summary>
      <returns>현재 사전 엔트리의 키와 값을 모두 포함하는 <see cref="T:System.Collections.DictionaryEntry" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Collections.IDictionaryEnumerator" />가 사전의 첫 번째 항목 앞 또는 마지막 항목 뒤에 배치되는 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionaryEnumerator.Key">
      <summary>현재 사전 엔트리의 키를 가져옵니다.</summary>
      <returns>현재 열거 요소의 키입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Collections.IDictionaryEnumerator" />가 사전의 첫 번째 항목 앞 또는 마지막 항목 뒤에 배치되는 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionaryEnumerator.Value">
      <summary>현재 사전 엔트리의 값을 가져옵니다.</summary>
      <returns>현재 열거 요소의 값입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Collections.IDictionaryEnumerator" />가 사전의 첫 번째 항목 앞 또는 마지막 항목 뒤에 배치되는 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IEnumerable">
      <summary>제네릭이 아닌 컬렉션에서 단순하게 반복할 수 있도록 지원하는 열거자를 노출합니다.이 유형에 대한 .NET Framework 소스 코드를 검색하려면 참조 소스를 참조하세요.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IEnumerable.GetEnumerator">
      <summary>컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns>컬렉션을 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IEnumerator">
      <summary>제네릭이 아닌 컬렉션을 단순하게 반복할 수 있도록 지원합니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Collections.IEnumerator.Current">
      <summary>컬렉션의 현재 요소를 가져옵니다.</summary>
      <returns>컬렉션의 현재 요소입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IEnumerator.MoveNext">
      <summary>열거자를 컬렉션의 다음 요소로 이동합니다.</summary>
      <returns>열거자가 다음 요소로 이동한 경우 true가 반환되고, 컬렉션의 끝을 지난 경우 false가 반환됩니다.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IEnumerator.Reset">
      <summary>컬렉션의 첫 번째 요소 앞의 초기 위치에 열거자를 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IEqualityComparer">
      <summary>개체가 같은지 비교할 수 있는 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)">
      <summary>지정한 개체가 같은지 여부를 확인합니다.</summary>
      <returns>지정한 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="x">비교할 첫 번째 개체입니다.</param>
      <param name="y">비교할 두 번째 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="x" />와 <paramref name="y" />가 형식이 다르므로 서로 비교할 수 없는 경우</exception>
    </member>
    <member name="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)">
      <summary>지정한 개체의 해시 코드를 반환합니다.</summary>
      <returns>지정한 개체의 해시 코드입니다.</returns>
      <param name="obj">해시 코드가 반환될 <see cref="T:System.Object" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 형식이 참조 형식이고 <paramref name="obj" />가 null인 경우</exception>
    </member>
    <member name="T:System.Collections.IList">
      <summary>인덱스로 각각 액세스할 수 있는 제네릭이 아닌 개체 컬렉션을 나타냅니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Add(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" />에 항목을 추가합니다.</summary>
      <returns>새 요소가 삽입된 위치입니다. -1은 항목이 컬렉션에 삽입되지 않았음을 나타냅니다.</returns>
      <param name="value">
        <see cref="T:System.Collections.IList" />에 추가할 개체입니다. </param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" />가 읽기 전용인 경우또는 <see cref="T:System.Collections.IList" />의 크기가 고정되어 있는 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Clear">
      <summary>
        <see cref="T:System.Collections.IList" />에서 항목을 모두 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" />가 읽기 전용인 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Contains(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" />에 특정 값이 들어 있는지 여부를 확인합니다.</summary>
      <returns>
        <see cref="T:System.Object" />가 <see cref="T:System.Collections.IList" />에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">
        <see cref="T:System.Collections.IList" />에서 찾을 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.IndexOf(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" />에서 특정 항목의 인덱스를 확인합니다.</summary>
      <returns>목록에 있으면 <paramref name="value" />의 인덱스이고, 그렇지 않으면 -1입니다.</returns>
      <param name="value">
        <see cref="T:System.Collections.IList" />에서 찾을 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Insert(System.Int32,System.Object)">
      <summary>항목을 <see cref="T:System.Collections.IList" />의 지정된 인덱스에 삽입합니다.</summary>
      <param name="index">
        <paramref name="value" />를 삽입해야 하는 인덱스(0부터 시작)입니다. </param>
      <param name="value">
        <see cref="T:System.Collections.IList" />에 삽입할 개체입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <see cref="T:System.Collections.IList" />의 유효한 인덱스가 아닌 경우 </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" />가 읽기 전용인 경우또는 <see cref="T:System.Collections.IList" />의 크기가 고정되어 있는 경우 </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="value" />가 <see cref="T:System.Collections.IList" />에서 null 참조인 경우</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IList.IsFixedSize">
      <summary>
        <see cref="T:System.Collections.IList" />의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.IList" />의 크기가 고정되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IList.IsReadOnly">
      <summary>
        <see cref="T:System.Collections.IList" />가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.IList" />가 읽기 전용이면 true이고, 그렇지 않으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IList.Item(System.Int32)">
      <summary>지정된 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>지정된 인덱스의 요소입니다.</returns>
      <param name="index">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <see cref="T:System.Collections.IList" />의 유효한 인덱스가 아닌 경우 </exception>
      <exception cref="T:System.NotSupportedException">속성이 설정되어 있으며 <see cref="T:System.Collections.IList" />가 읽기 전용인 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Remove(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" />에서 맨 처음 발견되는 특정 개체를 제거합니다.</summary>
      <param name="value">
        <see cref="T:System.Collections.IList" />에서 제거할 개체입니다. </param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" />가 읽기 전용인 경우또는 <see cref="T:System.Collections.IList" />의 크기가 고정되어 있는 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.RemoveAt(System.Int32)">
      <summary>지정한 인덱스에서 <see cref="T:System.Collections.IList" /> 항목을 제거합니다.</summary>
      <param name="index">제거할 항목의 인덱스(0부터 시작)입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <see cref="T:System.Collections.IList" />의 유효한 인덱스가 아닌 경우 </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" />가 읽기 전용인 경우또는 <see cref="T:System.Collections.IList" />의 크기가 고정되어 있는 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IStructuralComparable">
      <summary>컬렉션 개체의 구조 비교를 지원합니다.</summary>
    </member>
    <member name="M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)">
      <summary>정렬 순서에서 현재 컬렉션 개체의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 확인합니다.</summary>
      <returns>다음 표와 같이 현재 컬렉션 개체와 <paramref name="other" /> 사이의 관계를 나타내는 정수입니다.반환 값설명-1현재 인스턴스가 <paramref name="other" /> 앞에 옵니다.0현재 인스턴스와 <paramref name="other" />가 같습니다.1현재 인스턴스가 <paramref name="other" /> 뒤에 옵니다.</returns>
      <param name="other">현재 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">현재 컬렉션 개체의 멤버를 <paramref name="other" />의 해당하는 멤버와 비교하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">이 인스턴스와 <paramref name="other" />가 동일한 형식이 아닌 경우</exception>
    </member>
    <member name="T:System.Collections.IStructuralEquatable">
      <summary>개체의 구조가 같은지 비교할 수 있는 메서드를 정의합니다. </summary>
    </member>
    <member name="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>개체가 현재 인스턴스와 구조적으로 같은지 여부를 확인합니다.</summary>
      <returns>두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="other">현재 인스턴스와 비교할 개체입니다.</param>
      <param name="comparer">현재 인스턴스와 <paramref name="other" />가 같은지 여부를 확인하는 개체입니다. </param>
    </member>
    <member name="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
      <summary>현재 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>현재 인스턴스에 대한 해시 코드입니다.</returns>
      <param name="comparer">현재 개체의 해시 코드를 계산하는 개체입니다.</param>
    </member>
    <member name="T:System.Collections.Generic.ICollection`1">
      <summary>제네릭 컬렉션을 조작할 메서드를 정의합니다.</summary>
      <typeparam name="T">컬렉션에 있는 요소의 형식입니다.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Add(`0)">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" />에 항목을 추가합니다.</summary>
      <param name="item">
        <see cref="T:System.Collections.Generic.ICollection`1" />에 추가할 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" />가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Clear">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" />에서 항목을 모두 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" />가 읽기 전용인 경우 </exception>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Contains(`0)">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" />에 특정 값이 들어 있는지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="item" />가 <see cref="T:System.Collections.Generic.ICollection`1" />에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="item">
        <see cref="T:System.Collections.Generic.ICollection`1" />에서 찾을 개체입니다.</param>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
      <summary>특정 <see cref="T:System.Array" /> 인덱스에서 시작하여 <see cref="T:System.Collections.Generic.ICollection`1" />의 요소를 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Collections.Generic.ICollection`1" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Array" />입니다.<see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="arrayIndex">
        <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">소스 <see cref="T:System.Collections.Generic.ICollection`1" />의 요소 수가 <paramref name="arrayIndex" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큰 경우</exception>
    </member>
    <member name="P:System.Collections.Generic.ICollection`1.Count">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" />에 포함된 요소 수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.ICollection`1" />에 포함된 요소 수입니다.</returns>
    </member>
    <member name="P:System.Collections.Generic.ICollection`1.IsReadOnly">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" />이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.ICollection`1" />이 읽기 전용이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Remove(`0)">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" />에서 맨 처음 발견되는 특정 개체를 제거합니다.</summary>
      <returns>
        <paramref name="item" />이 <see cref="T:System.Collections.Generic.ICollection`1" />에서 성공적으로 제거되면 true이고, 그렇지 않으면 false입니다.이 메서드는 <paramref name="item" />이 원래 <see cref="T:System.Collections.Generic.ICollection`1" />에 없는 경우에도 false를 반환합니다.</returns>
      <param name="item">
        <see cref="T:System.Collections.Generic.ICollection`1" />에서 제거할 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" />가 읽기 전용인 경우</exception>
    </member>
    <member name="T:System.Collections.Generic.IComparer`1">
      <summary>형식에서 두 개체를 비교하기 위해 구현하는 메서드를 정의합니다.</summary>
      <typeparam name="T">비교할 개체의 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)">
      <summary>두 개체를 비교하여 한 개체가 다른 개체보다 작거나, 같거나 또는 크다는 것을 나타내는 값을 반환합니다.</summary>
      <returns>다음 표와 같이 <paramref name="x" /> 및 <paramref name="y" />의 상대 값을 나타내는 부호 있는 정수입니다.값 의미 0보다 작음<paramref name="x" />가 <paramref name="y" />보다 작습니다.Zero<paramref name="x" />가 <paramref name="y" />와 같습니다.0보다 큼<paramref name="x" />가 <paramref name="y" />보다 큰 경우</returns>
      <param name="x">비교할 첫 번째 개체입니다.</param>
      <param name="y">비교할 두 번째 개체입니다.</param>
    </member>
    <member name="T:System.Collections.Generic.IDictionary`2">
      <summary>키/값 쌍의 제네릭 컬렉션을 나타냅니다.</summary>
      <typeparam name="TKey">사전에 있는 키의 형식입니다.</typeparam>
      <typeparam name="TValue">사전에 있는 값의 형식입니다.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
      <summary>제공된 키와 값이 있는 요소를 <see cref="T:System.Collections.Generic.IDictionary`2" />에 추가합니다.</summary>
      <param name="key">추가할 요소의 키로 사용할 개체입니다.</param>
      <param name="value">추가할 요소의 값으로 사용할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentException">같은 키를 가지는 요소가 이미 <see cref="T:System.Collections.Generic.IDictionary`2" />에 있는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" />가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
      <summary>
        <see cref="T:System.Collections.Generic.IDictionary`2" />에 지정된 키를 가진 요소가 포함되어 있는지 여부를 확인합니다.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, false.</returns>
      <param name="key">
        <see cref="T:System.Collections.Generic.IDictionary`2" />에서 찾을 수 있는 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우</exception>
    </member>
    <member name="P:System.Collections.Generic.IDictionary`2.Item(`0)">
      <summary>지정한 키를 가진 요소를 가져오거나 설정합니다.</summary>
      <returns>지정한 키가 있는 요소입니다.</returns>
      <param name="key">가져오거나 설정할 요소의 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">속성이 검색되었지만 <paramref name="key" />가 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">속성이 설정되어 있으며 <see cref="T:System.Collections.Generic.IDictionary`2" />가 읽기 전용인 경우</exception>
    </member>
    <member name="P:System.Collections.Generic.IDictionary`2.Keys">
      <summary>
        <see cref="T:System.Collections.Generic.IDictionary`2" />의 키를 포함하는 <see cref="T:System.Collections.Generic.ICollection`1" />을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" />를 구현하는 개체의 키를 포함하는 <see cref="T:System.Collections.Generic.ICollection`1" />입니다.</returns>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
      <summary>
        <see cref="T:System.Collections.Generic.IDictionary`2" />에서 지정한 키를 가지는 요소를 제거합니다.</summary>
      <returns>요소가 성공적으로 제거되면 true이고, 그렇지 않으면 false입니다.This method also returns false if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
      <param name="key">제거할 요소의 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" />가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
      <summary>지정한 키와 연결된 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" />를 구현하는 개체에 지정한 키가 있는 요소가 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">가져올 값이 있는 키입니다.</param>
      <param name="value">이 메서드가 반환될 때 지정된 키가 있으면 해당 키와 연결된 값이고, 그렇지 않으면 <paramref name="value" /> 매개 변수의 형식에 대한 기본값입니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우</exception>
    </member>
    <member name="P:System.Collections.Generic.IDictionary`2.Values">
      <summary>
        <see cref="T:System.Collections.Generic.IDictionary`2" />의 값을 포함하는 <see cref="T:System.Collections.Generic.ICollection`1" />을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" />를 구현하는 개체의 값을 포함하는 <see cref="T:System.Collections.Generic.ICollection`1" />입니다.</returns>
    </member>
    <member name="T:System.Collections.Generic.IEnumerable`1">
      <summary>지정된 형식의 컬렉션을 단순하게 반복할 수 있도록 지원하는 열거자를 노출합니다.이 형식에 대 한.NET Framework 소스 코드를 찾아보려면 참조는 참조 원본.</summary>
      <typeparam name="T">열거할 개체의 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
      <summary>컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns>컬렉션을 반복하는 데 사용할 수 있는 열거자입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Collections.Generic.IEnumerator`1">
      <summary>제네릭 컬렉션을 단순하게 반복할 수 있도록 지원합니다.</summary>
      <typeparam name="T">열거할 개체의 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Collections.Generic.IEnumerator`1.Current">
      <summary>컬렉션에서 열거자의 현재 위치에 있는 요소를 가져옵니다.</summary>
      <returns>컬렉션에서 열거자의 현재 위치에 있는 요소입니다.</returns>
    </member>
    <member name="T:System.Collections.Generic.IEqualityComparer`1">
      <summary>개체가 같은지 비교할 수 있는 메서드를 정의합니다.</summary>
      <typeparam name="T">비교할 개체의 형식입니다.이 형식 매개 변수는 반공변입니다. 즉, 지정한 형식이나 더 적게 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)">
      <summary>지정한 개체가 같은지 여부를 확인합니다.</summary>
      <returns>지정한 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="x">비교할 <paramref name="T" /> 형식의 첫 번째 개체입니다.</param>
      <param name="y">비교할 <paramref name="T" /> 형식의 두 번째 개체입니다.</param>
    </member>
    <member name="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)">
      <summary>지정한 개체의 해시 코드를 반환합니다.</summary>
      <returns>지정한 개체의 해시 코드입니다.</returns>
      <param name="obj">해시 코드가 반환될 <see cref="T:System.Object" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 형식이 참조 형식이고 <paramref name="obj" />가 null인 경우</exception>
    </member>
    <member name="T:System.Collections.Generic.IList`1">
      <summary>개별적으로 인덱스에 의해 액세스될 수 있는 개체의 컬렉션을 나타냅니다.</summary>
      <typeparam name="T">목록에 있는 요소의 형식입니다.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IList`1.IndexOf(`0)">
      <summary>
        <see cref="T:System.Collections.Generic.IList`1" />에서 특정 항목의 인덱스를 확인합니다.</summary>
      <returns>목록에 있으면 <paramref name="item" />의 인덱스이고, 그렇지 않으면 -1입니다.</returns>
      <param name="item">
        <see cref="T:System.Collections.Generic.IList`1" />에서 찾을 개체입니다.</param>
    </member>
    <member name="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
      <summary>항목을 <see cref="T:System.Collections.Generic.IList`1" />의 지정한 인덱스에 삽입합니다.</summary>
      <param name="index">
        <paramref name="item" />을 삽입해야 하는 인덱스(0부터 시작)입니다.</param>
      <param name="item">
        <see cref="T:System.Collections.Generic.IList`1" />에 삽입할 개체입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <see cref="T:System.Collections.Generic.IList`1" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IList`1" />가 읽기 전용인 경우</exception>
    </member>
    <member name="P:System.Collections.Generic.IList`1.Item(System.Int32)">
      <summary>지정된 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>지정된 인덱스의 요소입니다.</returns>
      <param name="index">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <see cref="T:System.Collections.Generic.IList`1" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.NotSupportedException">속성이 설정되어 있으며 <see cref="T:System.Collections.Generic.IList`1" />가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
      <summary>지정한 인덱스에서 <see cref="T:System.Collections.Generic.IList`1" /> 항목을 제거합니다.</summary>
      <param name="index">제거할 항목의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <see cref="T:System.Collections.Generic.IList`1" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IList`1" />가 읽기 전용인 경우</exception>
    </member>
    <member name="T:System.Collections.Generic.IReadOnlyCollection`1">
      <summary>강력한 유형의 읽기 전용 요소 모음을 표현한다.</summary>
      <typeparam name="T">요소의 형식입니다.이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyCollection`1.Count">
      <summary>컬렉션에 있는 요소의 수를 가져옵니다.</summary>
      <returns>컬렉션에 있는 요소의 수입니다. </returns>
    </member>
    <member name="T:System.Collections.Generic.IReadOnlyDictionary`2">
      <summary>키/값 쌍의 제네릭 읽기 전용 컬렉션을 나타냅니다.</summary>
      <typeparam name="TKey">읽기 전용 사전에 있는 키의 형식입니다. </typeparam>
      <typeparam name="TValue">읽기 전용 사전에 있는 값의 형식입니다. </typeparam>
    </member>
    <member name="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
      <summary>지정된 키를 가진 요소가 읽기 전용 사전에 포함되어 있는지 여부를 확인합니다.</summary>
      <returns>읽기 전용 사전에 지정된 키를 가진 요소가 포함되어 있는 경우 true이고, 그렇지 않은 경우 false입니다.</returns>
      <param name="key">찾을 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
      <summary>읽기 전용 사전에 지정된 키를 가진 요소를 가져옵니다.</summary>
      <returns>읽기 전용 사전에 지정된 키를 가진 요소입니다.</returns>
      <param name="key">찾을 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">속성이 검색되었지만 <paramref name="key" />가 없는 경우 </exception>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys">
      <summary>읽기 전용 사전의 키를 포함하는 열거 가능한 컬렉션을 가져옵니다. </summary>
      <returns>읽기 전용 사전의 키를 포함하는 열거 가능한 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
      <summary>지정한 키와 연결된 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> 인터페이스를 구현하는 개체에 지정된 키를 가진 요소가 들어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">찾을 키입니다.</param>
      <param name="value">이 메서드가 반환될 때 지정된 키가 있으면 해당 키와 연결된 값이고, 그렇지 않으면 <paramref name="value" /> 매개 변수의 형식에 대한 기본값입니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyDictionary`2.Values">
      <summary>읽기 전용 사전의 값을 포함하는 열거 가능한 컬렉션을 가져옵니다.</summary>
      <returns>읽기 전용 사전의 값을 포함하는 열거 가능한 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Collections.Generic.IReadOnlyList`1">
      <summary>인덱스로 액세스할 수 있는 요소의 읽기 전용 컬렉션을 나타냅니다. </summary>
      <typeparam name="T">읽기 전용 목록의 요소 형식입니다. 이 형식 매개 변수는 공변입니다. 즉, 지정한 형식이나 더 많이 파생되는 모든 형식을 사용할 수 있습니다. 공 분산 및 반공 분산에 대한 자세한 내용은 제네릭의 공 분산과 반공 분산 항목을 참조하세요.</typeparam>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)">
      <summary>읽기 전용 목록에서 지정된 인덱스의 요소를 가져옵니다.</summary>
      <returns>읽기 전용 목록에서 지정된 인덱스의 요소입니다.</returns>
      <param name="index">가져올 요소의 0부터 시작하는 인덱스입니다. </param>
    </member>
    <member name="T:System.Collections.Generic.ISet`1">
      <summary>집합 추상화를 위한 기본 인터페이스를 제공합니다.</summary>
      <typeparam name="T">집합에 있는 요소의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.Add(`0)">
      <summary>현재 집합에 요소를 추가하고 요소가 성공적으로 추가되었는지 여부를 나타내는 값을 반환합니다. </summary>
      <returns>요소가 집합에 추가되었으면 true이고, 요소가 집합에 이미 있으면 false입니다.</returns>
      <param name="item">집합에 추가할 요소입니다.</param>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>현재 집합에서 지정된 컬렉션의 모든 요소를 제거합니다.</summary>
      <param name="other">집합에서 제거할 항목의 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" />가 null인 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>지정된 컬렉션에도 있는 요소만 포함되도록 현재 집합을 수정합니다.</summary>
      <param name="other">현재 집합과 비교할 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" />가 null인 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>현재 집합이 지정된 컬렉션의 적절한(고급) 하위 집합인지 여부를 확인합니다.</summary>
      <returns>현재 집합이 <paramref name="other" />의 적절한 하위 집합이면 true이고, 그렇지 않으면  false입니다.</returns>
      <param name="other">현재 집합과 비교할 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" />가 null인 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>현재 집합이 지정된 컬렉션의 적절한(고급) 하위 집합인지 여부를 확인합니다.</summary>
      <returns>현재 집합이 <paramref name="other" />의 적절한 상위 집합이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="other">현재 집합과 비교할 컬렉션입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" />가 null인 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>집합이 지정된 컬렉션의 하위 집합인지 여부를 확인합니다.</summary>
      <returns>현재 집합이 <paramref name="other" />의 하위 집합이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="other">현재 집합과 비교할 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" />가 null인 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>현재 집합이 지정된 컬렉션의 상위 집합인지 여부를 확인합니다.</summary>
      <returns>현재 집합이 <paramref name="other" />의 상위 집합이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="other">현재 집합과 비교할 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" />가 null인 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
      <summary>현재 집합이 지정된 컬렉션과 겹치는지 여부를 확인합니다.</summary>
      <returns>현재 집합과 <paramref name="other" />가 적어도 하나의 공통 요소를 공유하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="other">현재 집합과 비교할 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" />가 null인 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
      <summary>현재 집합과 지정된 컬렉션에 같은 요소가 들어 있는지 여부를 확인합니다.</summary>
      <returns>현재 집합이 <paramref name="other" />와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="other">현재 집합과 비교할 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" />가 null인 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>현재 집합이나 지정된 컬렉션에 있고 둘 다에는 없는 요소만 포함되도록 현재 집합을 수정합니다. </summary>
      <param name="other">현재 집합과 비교할 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" />가 null인 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>현재 집합이나 지정된 컬렉션 또는 둘 다에 있는 모든 요소가 포함되도록 현재 집합을 수정합니다.</summary>
      <param name="other">현재 집합과 비교할 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" />가 null인 경우</exception>
    </member>
    <member name="T:System.Collections.Generic.KeyNotFoundException">
      <summary>컬렉션의 요소에 액세스하기 위해 지정한 키가 컬렉션의 키와 일치하지 않으면 예외가 throw됩니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.KeyNotFoundException.#ctor">
      <summary>기본 속성 값을 사용하여 <see cref="T:System.Collections.Generic.KeyNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Collections.Generic.KeyNotFoundException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.Collections.Generic.KeyNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다.</param>
    </member>
    <member name="M:System.Collections.Generic.KeyNotFoundException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Collections.Generic.KeyNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.Collections.Generic.KeyValuePair`2">
      <summary>설정하거나 검색할 수 있는 키/값 쌍을 정의합니다.</summary>
      <typeparam name="TKey">키의 형식입니다.</typeparam>
      <typeparam name="TValue">값의 형식입니다.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)">
      <summary>지정한 키 및 값을 사용하여 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="key">각 키/값 쌍에 정의된 개체입니다.</param>
      <param name="value">
        <paramref name="key" />와 관련된 정의입니다.</param>
    </member>
    <member name="P:System.Collections.Generic.KeyValuePair`2.Key">
      <summary>키/값 쌍의 키를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.KeyValuePair`2" />의 키인 <paramref name="TKey" />입니다. </returns>
    </member>
    <member name="M:System.Collections.Generic.KeyValuePair`2.ToString">
      <summary>키와 값에 대한 문자열 표현을 사용하여 <see cref="T:System.Collections.Generic.KeyValuePair`2" />에 대한 문자열 표현을 반환합니다.</summary>
      <returns>키와 값에 대한 문자열 표현을 포함하는 <see cref="T:System.Collections.Generic.KeyValuePair`2" />에 대한 문자열 표현입니다.</returns>
    </member>
    <member name="P:System.Collections.Generic.KeyValuePair`2.Value">
      <summary>키/값 쌍의 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.KeyValuePair`2" />의 값인 <paramref name="TValue" />입니다. </returns>
    </member>
    <member name="T:System.Collections.ObjectModel.Collection`1">
      <summary>제네릭 컬렉션의 기본 클래스를 제공합니다.</summary>
      <typeparam name="T">컬렉션에 있는 요소의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.#ctor">
      <summary>비어 있는 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})">
      <summary>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> 클래스의 새 인스턴스를 지정된 목록의 래퍼로 초기화합니다.</summary>
      <param name="list">새 컬렉션이 래핑하는 목록입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" />가 null입니다.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
      <summary>개체를 <see cref="T:System.Collections.ObjectModel.Collection`1" />의 끝 부분에 추가합니다. </summary>
      <param name="item">
        <see cref="T:System.Collections.ObjectModel.Collection`1" />의 끝에 추가할 개체입니다.참조 형식에 대해 값은 null이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Clear">
      <summary>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />에서 요소를 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.ClearItems">
      <summary>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />에서 요소를 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
      <summary>요소가 <see cref="T:System.Collections.ObjectModel.Collection`1" />에 있는지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="item" />이 <see cref="T:System.Collections.ObjectModel.Collection`1" />에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="item">
        <see cref="T:System.Collections.ObjectModel.Collection`1" />에서 찾을 개체입니다.참조 형식에 대해 값은 null이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
      <summary>대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.Collections.ObjectModel.Collection`1" />를 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Collections.ObjectModel.Collection`1" />에서 복사한 요소의 대상인 1차원 <see cref="T:System.Array" />입니다.<see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">소스 <see cref="T:System.Collections.ObjectModel.Collection`1" />의 요소 수가 <paramref name="index" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큰 경우</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.Count">
      <summary>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />에 실제로 포함된 요소의 수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />에 실제로 포함된 요소의 수입니다.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
      <summary>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />을 반복하는 열거자를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />에 대한 <see cref="T:System.Collections.Generic.IEnumerator`1" />입니다.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
      <summary>지정한 개체를 검색하고, 전체 <see cref="T:System.Collections.ObjectModel.Collection`1" />에서 이 개체가 처음 나타나는 인덱스(0부터 시작)를 반환합니다.</summary>
      <returns>전체 <see cref="T:System.Collections.ObjectModel.Collection`1" />에서 <paramref name="item" />을 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <param name="item">
        <see cref="T:System.Collections.Generic.List`1" />에서 찾을 개체입니다.참조 형식에 대해 값은 null이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
      <summary>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />의 지정된 인덱스에 요소를 삽입합니다.</summary>
      <param name="index">
        <paramref name="item" />을 삽입해야 하는 인덱스(0부터 시작)입니다.</param>
      <param name="item">삽입할 개체입니다.참조 형식에 대해 값은 null이 될 수 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우또는<paramref name="index" />가 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />보다 큰 경우</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
      <summary>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />의 지정된 인덱스에 요소를 삽입합니다.</summary>
      <param name="index">
        <paramref name="item" />을 삽입해야 하는 인덱스(0부터 시작)입니다.</param>
      <param name="item">삽입할 개체입니다.참조 형식에 대해 값은 null이 될 수 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우또는<paramref name="index" />가 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />보다 큰 경우</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
      <summary>지정된 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>지정된 인덱스의 요소입니다.</returns>
      <param name="index">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우또는<paramref name="index" />가 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />보다 크거나 같은 경우 </exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.Items">
      <summary>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />을 둘러싸는 <see cref="T:System.Collections.Generic.IList`1" /> 래퍼를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />을 둘러싸는 <see cref="T:System.Collections.Generic.IList`1" /> 래퍼입니다.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
      <summary>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />에서 맨 처음 발견되는 특정 개체를 제거합니다.</summary>
      <returns>
        <paramref name="item" />이 성공적으로 제거되면 true이고, 그렇지 않으면 false입니다.  이 메서드는 <paramref name="item" />이 원래 <see cref="T:System.Collections.ObjectModel.Collection`1" />에 없는 경우에도 false를 반환합니다.</returns>
      <param name="item">
        <see cref="T:System.Collections.ObjectModel.Collection`1" />에서 제거할 개체입니다.참조 형식에 대해 값은 null이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
      <summary>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />의 지정한 인덱스에서 요소를 제거합니다.</summary>
      <param name="index">제거할 요소의 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우또는<paramref name="index" />가 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />보다 크거나 같은 경우</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
      <summary>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />의 지정한 인덱스에서 요소를 제거합니다.</summary>
      <param name="index">제거할 요소의 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우또는<paramref name="index" />가 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />보다 크거나 같은 경우</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
      <summary>지정된 인덱스에 있는 요소를 바꿉니다.</summary>
      <param name="index">바꿀 요소의 인덱스(0부터 시작)입니다.</param>
      <param name="item">지정한 인덱스에 있는 요소의 새 값입니다.참조 형식에 대해 값은 null이 될 수 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우또는<paramref name="index" />가 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />보다 큰 경우</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" />이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.ICollection`1" />이 읽기 전용이면 true이고, 그렇지 않으면 false입니다.  <see cref="T:System.Collections.ObjectModel.Collection`1" />의 기본 구현에서 이 속성은 언제나 false를 반환합니다.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>특정 <see cref="T:System.Array" /> 인덱스에서 시작하여 <see cref="T:System.Collections.ICollection" />의 요소를 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Collections.ICollection" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Array" />입니다.<see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null입니다. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 다차원 배열인 경우또는<paramref name="array" />에 0부터 시작하는 인덱스가 없습니다.또는소스 <see cref="T:System.Collections.ICollection" />의 요소 수가 <paramref name="index" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큰 경우또는소스 <see cref="T:System.Collections.ICollection" /> 형식을 대상 <paramref name="array" /> 형식으로 자동 캐스팅할 수 없는 경우</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
      <summary>
        <see cref="T:System.Collections.ICollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 true이고, 그렇지 않으면 false입니다.  <see cref="T:System.Collections.ObjectModel.Collection`1" />의 기본 구현에서 이 속성은 언제나 false를 반환합니다.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
      <summary>
        <see cref="T:System.Collections.ICollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.  <see cref="T:System.Collections.ObjectModel.Collection`1" />의 기본 구현에서 이 속성은 언제나 현재 인스턴스를 반환합니다.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns>컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" />에 항목을 추가합니다.</summary>
      <returns>새 요소가 삽입된 위치입니다.</returns>
      <param name="value">
        <see cref="T:System.Collections.IList" />에 추가할 <see cref="T:System.Object" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />의 형식은 <see cref="T:System.Collections.IList" />에 할당할 수 없습니다.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" />에 특정 값이 들어 있는지 여부를 확인합니다.</summary>
      <returns>
        <see cref="T:System.Object" />가 <see cref="T:System.Collections.IList" />에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">
        <see cref="T:System.Collections.IList" />에서 찾을 <see cref="T:System.Object" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />의 형식은 <see cref="T:System.Collections.IList" />에 할당할 수 없습니다.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" />에서 특정 항목의 인덱스를 확인합니다.</summary>
      <returns>목록에 있으면 <paramref name="value" />의 인덱스이고, 그렇지 않으면 -1입니다.</returns>
      <param name="value">
        <see cref="T:System.Collections.IList" />에서 찾을 <see cref="T:System.Object" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />의 형식은 <see cref="T:System.Collections.IList" />에 할당할 수 없습니다.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>항목을 <see cref="T:System.Collections.IList" />의 지정한 인덱스에 삽입합니다.</summary>
      <param name="index">
        <paramref name="value" />를 삽입해야 하는 인덱스(0부터 시작)입니다.</param>
      <param name="value">
        <see cref="T:System.Collections.IList" />에 삽입할 <see cref="T:System.Object" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <see cref="T:System.Collections.IList" />의 유효한 인덱스가 아닌 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />의 형식은 <see cref="T:System.Collections.IList" />에 할당할 수 없습니다.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize">
      <summary>
        <see cref="T:System.Collections.IList" />의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.IList" />의 크기가 고정되어 있으면 true이고, 그렇지 않으면 false입니다.  <see cref="T:System.Collections.ObjectModel.Collection`1" />의 기본 구현에서 이 속성은 언제나 false를 반환합니다.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly">
      <summary>
        <see cref="T:System.Collections.IList" />가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.IList" />가 읽기 전용이면 true이고, 그렇지 않으면 false입니다.  <see cref="T:System.Collections.ObjectModel.Collection`1" />의 기본 구현에서 이 속성은 언제나 false를 반환합니다.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
      <summary>지정된 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>지정된 인덱스의 요소입니다.</returns>
      <param name="index">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <see cref="T:System.Collections.IList" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException">속성이 설정되어 있고 <paramref name="value" />의 형식을 <see cref="T:System.Collections.IList" />에 할당할 수 없는 경우</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" />에서 맨 처음 발견되는 특정 개체를 제거합니다.</summary>
      <param name="value">
        <see cref="T:System.Collections.IList" />에서 제거할 <see cref="T:System.Object" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />의 형식은 <see cref="T:System.Collections.IList" />에 할당할 수 없습니다.</exception>
    </member>
    <member name="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
      <summary>제네릭 읽기 전용 컬렉션의 기본 클래스를 제공합니다.</summary>
      <typeparam name="T">컬렉션에 있는 요소의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
      <summary>지정한 목록을 둘러싸는 읽기 전용 래퍼인 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="list">래핑할 목록입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> is null.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)">
      <summary>요소가 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />에 있는지를 확인합니다.</summary>
      <returns>
        <paramref name="value" />가 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />에서 찾을 개체입니다.참조 형식에 대해 값은 null이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
      <summary>대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />을 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />에서 복사한 요소의 대상인 1차원 <see cref="T:System.Array" />입니다.<see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count">
      <summary>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 인스턴스에 포함된 요소의 수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 인스턴스에 포함된 요소의 수입니다.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
      <summary>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />을 반복하는 열거자를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />에 대한 <see cref="T:System.Collections.Generic.IEnumerator`1" />입니다.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)">
      <summary>지정된 개체를 검색하고, 전체 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />에서 처음으로 검색한 개체의 인덱스(0부터 시작)를 반환합니다.</summary>
      <returns>
        <paramref name="item" />이 있으면 전체 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />에서 맨 처음 발견되는 값의 0부터 시작하는 인덱스이고, 그렇지 않으면 -1입니다.</returns>
      <param name="value">
        <see cref="T:System.Collections.Generic.List`1" />에서 찾을 개체입니다.참조 형식에 대해 값은 null이 될 수 있습니다.</param>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
      <summary>지정한 인덱스에 있는 요소를 가져옵니다.</summary>
      <returns>지정한 인덱스의 요소입니다.</returns>
      <param name="index">가져올 요소의 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count" />. </exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items">
      <summary>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />이 래핑하는 <see cref="T:System.Collections.Generic.IList`1" />을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />이 래핑하는 <see cref="T:System.Collections.Generic.IList`1" />입니다.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" />에 항목을 추가합니다.이 구현은 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="value">
        <see cref="T:System.Collections.Generic.ICollection`1" />에 추가할 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" />에서 항목을 모두 제거합니다.이 구현은 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" />가 읽기 전용인지를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.ICollection`1" />이 읽기 전용이면 true이고, 그렇지 않으면 false입니다.<see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />의 기본 구현에서 이 속성은 언제나 true를 반환합니다.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" />에서 맨 처음 발견되는 특정 개체를 제거합니다.이 구현은 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>
        <paramref name="value" />이 <see cref="T:System.Collections.Generic.ICollection`1" />에서 제거되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">
        <see cref="T:System.Collections.Generic.ICollection`1" />에서 제거할 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>항목을 <see cref="T:System.Collections.Generic.IList`1" />의 지정된 인덱스에 삽입합니다.이 구현은 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="index">
        <paramref name="value" />를 삽입해야 하는 0부터 시작하는 인덱스입니다.</param>
      <param name="value">
        <see cref="T:System.Collections.Generic.IList`1" />에 삽입할 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>지정한 인덱스에 있는 요소를 가져옵니다.<see cref="T:System.NotSupportedException" />은 지정된 인덱스에 항목을 설정하는 경우 발생합니다.</summary>
      <returns>지정한 인덱스의 요소입니다.</returns>
      <param name="index">가져올 요소의 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.NotSupportedException">Always thrown if the property is set.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>지정한 인덱스에서 <see cref="T:System.Collections.Generic.IList`1" /> 항목을 제거합니다.이 구현은 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="index">제거할 항목의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>특정 <see cref="T:System.Array" /> 인덱스부터 시작하여 <see cref="T:System.Collections.ICollection" />의 요소를 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Collections.ICollection" />에서 복사한 요소의 대상인 1차원 <see cref="T:System.Array" />입니다.<see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-<paramref name="array" /> does not have zero-based indexing.-or-The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.-or-The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>
        <see cref="T:System.Collections.ICollection" /> 개체에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 true이고, 그렇지 않으면 false입니다.<see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />의 기본 구현에서 이 속성은 항상 false를 반환합니다.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>
        <see cref="T:System.Collections.ICollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.<see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />의 기본 구현에서 이 속성은 언제나 현재 인스턴스를 반환합니다.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns>컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" />에 항목을 추가합니다.이 구현은 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>새 요소가 삽입된 위치입니다.</returns>
      <param name="value">
        <see cref="T:System.Collections.IList" />에 추가할 <see cref="T:System.Object" />입니다.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear">
      <summary>
        <see cref="T:System.Collections.IList" />에서 항목을 모두 제거합니다.이 구현은 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" />에 특정 값이 포함되었는지를 확인합니다.</summary>
      <returns>
        <see cref="T:System.Object" />가 <see cref="T:System.Collections.IList" />에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">
        <see cref="T:System.Collections.IList" />에서 찾을 <see cref="T:System.Object" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not of the type specified for the generic type parameter <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" />에서 특정 항목의 인덱스를 확인합니다.</summary>
      <returns>목록에 있으면 <paramref name="value" />의 인덱스이고, 그렇지 않으면 -1입니다.</returns>
      <param name="value">
        <see cref="T:System.Collections.IList" />에서 찾을 <see cref="T:System.Object" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not of the type specified for the generic type parameter <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>항목을 <see cref="T:System.Collections.IList" />의 지정된 인덱스에 삽입합니다.이 구현은 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="index">
        <paramref name="value" />를 삽입해야 하는 0부터 시작하는 인덱스입니다.</param>
      <param name="value">
        <see cref="T:System.Collections.IList" />에 삽입할 <see cref="T:System.Object" />입니다.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
      <summary>
        <see cref="T:System.Collections.IList" />의 크기가 고정되어 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.IList" />의 크기가 고정되어 있으면 true이고, 그렇지 않으면 false입니다.<see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />의 기본 구현에서 이 속성은 항상 true를 반환합니다.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
      <summary>
        <see cref="T:System.Collections.IList" />가 읽기 전용인지를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.IList" />이 읽기 전용이면 true이고, 그렇지 않으면 false입니다.<see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />의 기본 구현에서 이 속성은 항상 true를 반환합니다.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>지정한 인덱스에 있는 요소를 가져옵니다.<see cref="T:System.NotSupportedException" />은 지정된 인덱스에 항목을 설정하는 경우 발생합니다.</summary>
      <returns>지정한 인덱스의 요소입니다.</returns>
      <param name="index">가져올 요소의 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">Always thrown if the property is set.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" />에서 처음 발견되는 특정 개체를 제거합니다.이 구현은 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="value">
        <see cref="T:System.Collections.IList" />에서 제거할 <see cref="T:System.Object" />입니다.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>지정한 인덱스에서 <see cref="T:System.Collections.IList" /> 항목을 제거합니다.이 구현은 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="index">제거할 항목의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="T:System.ComponentModel.DefaultValueAttribute">
      <summary>속성의 기본값을 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Boolean)">
      <summary>
        <see cref="T:System.Boolean" /> 값을 사용하여 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">
        <see cref="T:System.Boolean" />입니다(기본값). </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Byte)">
      <summary>8비트 부호 없는 정수를 사용하여 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">8비트 부호 없는 정수입니다(기본값). </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Char)">
      <summary>유니코드 문자를 사용하여 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">유니코드 문자입니다(기본값). </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Double)">
      <summary>배정밀도 부동 소수점 숫자를 사용하여 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">배정밀도 부동 소수점 숫자입니다(기본값). </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int16)">
      <summary>16비트 부호 있는 정수를 사용하여 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">16비트 부호 있는 정수입니다(기본값). </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int32)">
      <summary>32비트 부호 있는 정수를 사용하여 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">32비트 부호 있는 정수입니다(기본값). </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int64)">
      <summary>64비트 부호 있는 정수를 사용하여 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">64비트 부호 있는 정수입니다(기본값). </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Object)">
      <summary>
        <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">기본값을 나타내는 <see cref="T:System.Object" />입니다. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Single)">
      <summary>단정밀도 부동 소수점 숫자를 사용하여 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">단정밀도 부동 소수점 숫자입니다(기본값). </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.String" />을 사용하여 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">
        <see cref="T:System.String" />입니다(기본값). </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Type,System.String)">
      <summary>지정된 값을 지정된 형식으로 변환하고 고정 문화권을 번역 컨텍스트로 사용하여 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type">값을 변환할 대상 형식을 나타내는 <see cref="T:System.Type" />입니다. </param>
      <param name="value">형식에 대한 <see cref="T:System.ComponentModel.TypeConverter" /> 및 미국 영어 문화권을 사용하여 해당 형식으로 변환할 수 있는 <see cref="T:System.String" />입니다. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.Equals(System.Object)">
      <summary>주어진 개체의 값이 현재 <see cref="T:System.ComponentModel.DefaultValueAttribute" />와 같은지 여부를 반환합니다.</summary>
      <returns>주어진 개체의 값이 현재 개체의 값과 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">값이 같은지 테스트할 개체입니다. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.GetHashCode"></member>
    <member name="P:System.ComponentModel.DefaultValueAttribute.Value">
      <summary>이 특성이 바인딩될 속성의 기본값을 가져옵니다.</summary>
      <returns>이 특성이 바인딩될 속성의 기본값을 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.EditorBrowsableAttribute">
      <summary>속성 또는 메서드가 편집기에 표시되도록 지정합니다.이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.#ctor(System.ComponentModel.EditorBrowsableState)">
      <summary>
        <see cref="T:System.ComponentModel.EditorBrowsableState" />를 사용하여 <see cref="T:System.ComponentModel.EditorBrowsableAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="P:System.ComponentModel.EditorBrowsableAttribute.State" />를 설정할 <see cref="T:System.ComponentModel.EditorBrowsableState" />입니다. </param>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.Equals(System.Object)">
      <summary>주어진 개체의 값이 현재 <see cref="T:System.ComponentModel.EditorBrowsableAttribute" />와 같은지 여부를 반환합니다.</summary>
      <returns>주어진 개체의 값이 현재 개체의 값과 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">값이 같은지 테스트할 개체입니다. </param>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.GetHashCode"></member>
    <member name="P:System.ComponentModel.EditorBrowsableAttribute.State">
      <summary>속성 또는 메서드의 찾아볼 수 있는 상태를 가져옵니다.</summary>
      <returns>속성 또는 메서드의 찾아볼 수 있는 상태인 <see cref="T:System.ComponentModel.EditorBrowsableState" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.EditorBrowsableState">
      <summary>편집기 내에서 속성 또는 메서드의 찾아볼 수 있는 상태를 지정합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Advanced">
      <summary>속성 또는 메서드는 고급 사용자만 봐야 하는 기능입니다.편집기에서는 이러한 속성을 표시하거나 숨길 수 있습니다.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Always">
      <summary>이 속성 또는 메서드는 편집기 내에서 항상 찾아볼 수 있습니다.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Never">
      <summary>이 속성 또는 메서드는 편집기 내에서 찾아볼 수 없습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.ConditionalAttribute">
      <summary>지정한 조건부 컴파일 기호가 정의되어 있지 않으면 메서드 호출이나 특성을 무시하도록 컴파일러에 알립니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Diagnostics.ConditionalAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Diagnostics.ConditionalAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="conditionString">특성과 관련된 대/소문자 구분 조건부 컴파일 기호를 지정하는 문자열입니다. </param>
    </member>
    <member name="P:System.Diagnostics.ConditionalAttribute.ConditionString">
      <summary>
        <see cref="T:System.Diagnostics.ConditionalAttribute" /> 특성과 관련된 조건부 컴파일 기호를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.ConditionalAttribute" /> 특성과 관련된 대/소문자 구분 조건부 컴파일 기호를 지정하는 문자열입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.DebuggableAttribute">
      <summary>런타임 JIT(just-in-time) 디버깅을 위해 생성된 코드를 수정합니다.이 클래스는 상속될 수 없습니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Diagnostics.DebuggableAttribute.DebuggingModes)">
      <summary>JIT(Just-In-Time) 컴파일러에 대한 지정된 디버깅 모드를 사용하여 <see cref="T:System.Diagnostics.DebuggableAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="modes">JIT 컴파일러에 대한 디버깅 모드를 지정하는 <see cref="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" /> 값의 비트 조합입니다.</param>
    </member>
    <member name="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
      <summary>JIT(Just-In-Time) 컴파일러의 디버깅 모드를 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default">
      <summary>JIT(Just In Time) 컴파일러에 기본 동작을 사용하도록 지시합니다. 기본 동작은 최적화를 사용하고, 편집하며 계속하기 지원을 사용하지 않고, 기호 저장소 시퀀스 위치가 있는 경우 해당 위치를 사용하는 것 등입니다..NET Framework 버전 2.0에서는 JIT 추적 정보인 메서드 내부의 네이티브 코드 오프셋에 대한 MSIL(Microsoft Intermediate Language) 오프셋이 항상 생성됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations">
      <summary>컴파일러에서 더 작지만 빠르고 효율적인 출력 파일을 만들기 위해 수행하는 최적화 기능을 비활성화합니다.최적화 작업을 수행하면 출력 파일에서 코드가 다시 정렬되기 때문에 디버깅이 어려워질 수 있습니다.일반적으로 디버깅하는 동안에는 최적화 기능을 비활성해야 합니다.버전 2.0 이상에서는 이 값을 기본값(Default | DisableOptimizations)과 결합하여 JIT 추적을 활성화하고 최적화를 비활성화합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.EnableEditAndContinue">
      <summary>편집하며 계속하기를 활성화합니다.편집하며 계속하기를 활성화하면 프로그램이 중단 모드에 있는 동안 소스 코드를 변경할 수 있습니다.편집하며 계속하기 기능은 컴파일러에 따라 다릅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints">
      <summary>PDB(프로그램 데이터베이스) 시퀀스 위치가 아닌 암시적 MSIL 시퀀스 위치를 사용합니다.일반적으로 기호 정보에는 소스의 각 줄마다 최소한 하나의 MSIL(Microsoft Intermediate Language) 오프셋이 들어 있습니다.JIT(Just-In-Time) 컴파일러에서 메서드를 컴파일할 때, 컴파일러에서는 프로파일링 서비스에 저장된 MSIL 오프셋 목록을 요청합니다.이러한 MSIL 오프셋을 시퀀스 위치라고 합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.None">
      <summary>.NET Framework 버전 2.0에서는 JIT 추적 정보가 항상 생성되며, 이 플래그는 버전 2.0에서 의미가 없는 <see cref="P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled" /> 속성이 false라는 점을 제외하고 <see cref="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default" />와 같은 효과가 있습니다.</summary>
    </member>
    <member name="T:System.Globalization.DateTimeStyles">
      <summary>여러 날짜 및 시간 구문 분석 메서드의 문자열 구문 분석 방법을 사용자 지정하는 형식 지정 옵션을 정의합니다.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AdjustToUniversal">
      <summary>날짜와 시간은 UTC(협정 세계시)로 반환됩니다.입력 문자열이 표준 시간대 지정자 또는 <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" />을 통해 현지 시간을 나타내는 경우 해당 날짜 및 시간은 현지 시간대에서 UTC로 변환됩니다.입력 문자열이 표준 시간대 지정자 또는 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />을 통해 UTC 시간을 나타내는 경우에는 변환이 수행되지 않습니다.입력 문자열이 현지 시간 또는 UTC 시간을 나타내지 않는 경우에는 변환이 수행되지 않으며 결과 <see cref="P:System.DateTime.Kind" /> 속성은 <see cref="F:System.DateTimeKind.Unspecified" />입니다.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowInnerWhite">
      <summary>문자열 중간의 추가 공백 문자는 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 형식 패턴에 포함된 경우를 제외하고는 구문 분석 중에 무시해야 합니다.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowLeadingWhite">
      <summary>선행 공백 문자는 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 형식 패턴에 포함된 경우를 제외하고는 구문 분석 중에 무시해야 합니다.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowTrailingWhite">
      <summary>후행 공백 문자는 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 형식 패턴에 포함된 경우를 제외하고는 구문 분석 중에 무시해야 합니다.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowWhiteSpaces">
      <summary>문자열에 있는 추가 공백 문자는 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 형식 패턴에 포함된 경우를 제외하고는 구문 분석 중에 무시해야 합니다.이 값은 <see cref="F:System.Globalization.DateTimeStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.DateTimeStyles.AllowTrailingWhite" />, 및 <see cref="F:System.Globalization.DateTimeStyles.AllowInnerWhite" /> 값의 조합입니다.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AssumeLocal">
      <summary>구문 분석되는 문자열에 표준 시간대가 지정되어 있지 않으면 해당 문자열은 현지 시간을 나타내는 것으로 간주됩니다. </summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AssumeUniversal">
      <summary>구문 분석되는 문자열에 표준 시간대가 지정되어 있지 않으면 해당 문자열은 UTC를 나타내는 것으로 간주됩니다. </summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault">
      <summary>구문 분석되는 문자열에 날짜가 아닌 시간만 들어 있으면 구문 분석 메서드에서는 year = 1, month = 1, day = 1인 그레고리오식 날짜를 사용합니다.이 값을 사용하지 않는 경우 현재 날짜가 사용됩니다.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.None">
      <summary>기본 형식 지정 옵션을 사용해야 합니다.이 값은 기본 스타일에 대한 <see cref="M:System.DateTime.Parse(System.String)" />, <see cref="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)" />, 및 <see cref="M:System.DateTime.TryParse(System.String,System.DateTime@)" /> 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.RoundtripKind">
      <summary>
        <see cref="T:System.DateTime" /> 개체가 "o" 또는 "r" 표준 형식 지정자를 사용하는 문자열로 변환되고 그 문자열이 다시 <see cref="T:System.DateTime" /> 개체로 변환될 때 날짜의 <see cref="T:System.DateTimeKind" /> 필드가 유지됩니다.</summary>
    </member>
    <member name="T:System.Globalization.NumberStyles">
      <summary>정수 및 부동 소수점 숫자 형식의 Parse 및 TryParse 메서드에 전달되는 숫자 문자열에서 사용할 수 있는 스타일을 결정합니다.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowCurrencySymbol">
      <summary>숫자 문자열에 통화 기호가 포함될 수 있음을 나타냅니다.유효한 통화 기호는 <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" /> 속성으로 결정됩니다.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowDecimalPoint">
      <summary>숫자 문자열에 소수점이 있을 수 있음을 나타냅니다.<see cref="T:System.Globalization.NumberStyles" /> 값에 <see cref="F:System.Globalization.NumberStyles.AllowCurrencySymbol" /> 플래그가 포함되고 구문 분석된 문자열에 통화 기호가 포함된 경우 10진 구분 기호 문자는 <see cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" /> 속성으로 결정됩니다.그렇지 않으면 소수 구분 문자가 <see cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" /> 속성으로 결정됩니다.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowExponent">
      <summary>숫자 문자열에 지수 표시가 있을 수 있음을 나타냅니다.<see cref="F:System.Globalization.NumberStyles.AllowExponent" /> 플래그를 사용하면 구문 분석된 문자열에 "E" 또는 "e" 문자로 시작하고 선택적 양 또는 음의 부호 및 정수가 있는 지수를 포함할 수 있습니다.즉, nnnExx, nnnE+xx 및 nnnE-xx 형식으로 문자열을 성공적으로 구문 분석합니다.소수 구분 기호나 유효 숫자 또는 가수의 부호를 허용하지 않습니다. 구문 분석될 문자열에서 이러한 요소를 허용하려면 <see cref="F:System.Globalization.NumberStyles.AllowDecimalPoint" /> 및 <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" /> 플래그를 사용하거나 이러한 개별 플래그가 포함된 복합 스타일을 사용합니다.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowHexSpecifier">
      <summary>숫자 문자열이 16진수 값을 나타낸다는 것을 나타냅니다.유효한 16진수 값은 0부터 9까지의 숫자와 A부터 F 및 a부터 f까지의 16진 문자를 포함합니다.이 스타일을 사용하여 구문 분석된 문자열에는 "0x" 또는 "&amp;h" 접두사를 사용할 수 없습니다.<see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 스타일을 사용하여 구문 분석된 문자열은 항상 16진수 값으로 해석됩니다.<see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />와 함께 사용할 수 있는 플래그는 <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" /> 및 <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" />뿐입니다.<see cref="T:System.Globalization.NumberStyles" /> 열거형에는 이러한 세 플래그로 구성된 복합 스타일인 <see cref="F:System.Globalization.NumberStyles.HexNumber" />가 포함됩니다.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowLeadingSign">
      <summary>숫자 문자열에 선행 부호가 있을 수 있음을 나타냅니다.유효한 선행 부호 문자는 <see cref="P:System.Globalization.NumberFormatInfo.PositiveSign" /> 및 <see cref="P:System.Globalization.NumberFormatInfo.NegativeSign" /> 속성으로 결정됩니다.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowLeadingWhite">
      <summary>구문 분석된 문자열에 선행 공백 문자를 사용할 수 있음을 나타냅니다.공백 문자의 유니코드 값은 U+0009, U+000A, U+000B, U+000C, U+000D 및 U+0020입니다.이는 <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> 메서드가 true를 반환하는 문자의 하위 집합입니다.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowParentheses">
      <summary>숫자 문자열에 숫자를 둘러싸는 한 쌍의 괄호가 있을 수 있음을 나타냅니다.괄호는 구문 분석될 문자열이 음수를 나타냄을 나타냅니다.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowThousands">
      <summary>숫자 문자열에 1000 단위를 구분하는 기호와 같은 그룹 구분 기호가 있을 수 있음을 나타냅니다.<see cref="T:System.Globalization.NumberStyles" /> 값에 <see cref="F:System.Globalization.NumberStyles.AllowCurrencySymbol" /> 플래그가 포함되고 구문 분석할 문자열에 통화 기호가 포함된 경우 유효한 그룹 구분 기호 문자는 <see cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" /> 속성으로 결정되고 각 그룹의 자릿수는 <see cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" /> 속성으로 결정됩니다.그렇지 않으면 유효한 그룹 구분 문자가 <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" /> 속성으로 결정되며 각 그룹의 자릿수는 <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" /> 속성으로 결정됩니다.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowTrailingSign">
      <summary>숫자 문자열에 후행 부호가 있을 수 있음을 나타냅니다.유효한 후행 부호 문자는 <see cref="P:System.Globalization.NumberFormatInfo.PositiveSign" /> 및 <see cref="P:System.Globalization.NumberFormatInfo.NegativeSign" /> 속성으로 결정됩니다.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowTrailingWhite">
      <summary>구문 분석된 문자열에 후행 공백 문자를 사용할 수 있음을 나타냅니다.공백 문자의 유니코드 값은 U+0009, U+000A, U+000B, U+000C, U+000D 및 U+0020입니다.이는 <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> 메서드가 true를 반환하는 문자의 하위 집합입니다.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Any">
      <summary>
        <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />를 제외한 모든 스타일을 사용함을 나타냅니다.이것은 복합 숫자 스타일입니다.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Currency">
      <summary>
        <see cref="F:System.Globalization.NumberStyles.AllowExponent" /> 및 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />를 제외한 모든 스타일을 사용함을 나타냅니다.이것은 복합 숫자 스타일입니다.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Float">
      <summary>
        <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" />, <see cref="F:System.Globalization.NumberStyles.AllowDecimalPoint" /> 및 <see cref="F:System.Globalization.NumberStyles.AllowExponent" /> 스타일을 사용함을 나타냅니다.이것은 복합 숫자 스타일입니다.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.HexNumber">
      <summary>
        <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" /> 및 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 스타일을 사용함을 나타냅니다.이것은 복합 숫자 스타일입니다.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Integer">
      <summary>
        <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" /> 및 <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" /> 스타일을 사용함을 나타냅니다.이것은 복합 숫자 스타일입니다.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.None">
      <summary>구문 분석된 문자열에 선행 또는 후행 공백, 1000단위 구분 기호, 소수 구분 기호와 같은 스타일 요소가 있을 수 없다는 것을 나타냅니다.구문 분석될 문자열은 정수로만 구성되어야 합니다.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Number">
      <summary>
        <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingSign" />, <see cref="F:System.Globalization.NumberStyles.AllowDecimalPoint" /> 및 <see cref="F:System.Globalization.NumberStyles.AllowThousands" /> 스타일을 사용함을 나타냅니다.이것은 복합 숫자 스타일입니다.</summary>
    </member>
    <member name="T:System.Globalization.TimeSpanStyles">
      <summary>
        <see cref="Overload:System.TimeSpan.ParseExact" /> 및 <see cref="Overload:System.TimeSpan.TryParseExact" /> 메서드의 문자열 구문 분석 방법을 사용자 지정하는 형식 지정 옵션을 정의합니다.</summary>
    </member>
    <member name="F:System.Globalization.TimeSpanStyles.AssumeNegative">
      <summary>입력이 항상 음수 시간 간격으로 해석됨을 나타냅니다.</summary>
    </member>
    <member name="F:System.Globalization.TimeSpanStyles.None">
      <summary>음수 부호가 있을 경우에만 입력이 음수 시간 간격으로 해석됨을 나타냅니다.</summary>
    </member>
    <member name="T:System.IO.DirectoryNotFoundException">
      <summary>파일이나 디렉터리의 일부를 찾을 수 없을 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.DirectoryNotFoundException.#ctor">
      <summary>시스템에서 제공되는 메시지로 설정된 메시지 문자열과 COR_E_DIRECTORYNOTFOUND로 설정된 HRESULT를 사용하여 <see cref="T:System.IO.DirectoryNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.IO.DirectoryNotFoundException.#ctor(System.String)">
      <summary>
        <paramref name="message" />로 설정된 메시지 문자열과 COR_E_DIRECTORYNOTFOUND로 설정된 HRESULT를 사용하여 <see cref="T:System.IO.DirectoryNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다.<paramref name="message" /> 내용은 사용자의 이해를 돕기 위한 것입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
    </member>
    <member name="M:System.IO.DirectoryNotFoundException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.IO.DirectoryNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.IO.FileLoadException">
      <summary>관리되는 어셈블리를 찾을 수는 있지만 로드할 수 없는 경우 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor">
      <summary>
        <see cref="T:System.IO.FileLoadException" /> 클래스의 새 인스턴스를 초기화한 다음 새 인스턴스의 <see cref="P:System.Exception.Message" /> 속성을 "지정한 파일을 로드할 수 없습니다"와 같이 오류를 설명하는 시스템 제공 메시지로 설정합니다. 이 메시지는 현재 시스템의 문화권을 따릅니다.</summary>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.IO.FileLoadException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다.<paramref name="message" /> 내용은 사용자의 이해를 돕기 위한 것입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.IO.FileLoadException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다.<paramref name="message" /> 내용은 사용자의 이해를 돕기 위한 것입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
      <param name="inner">현재 예외의 원인이 되는 예외입니다.<paramref name="inner" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor(System.String,System.String)">
      <summary>지정된 오류 메시지와 로드할 수 없는 파일의 이름을 사용하여 <see cref="T:System.IO.FileLoadException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다.<paramref name="message" /> 내용은 사용자의 이해를 돕기 위한 것입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
      <param name="fileName">로드되지 않은 파일의 이름을 포함하는 <see cref="T:System.String" />입니다. </param>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
      <summary>지정된 오류 메시지, 로드할 수 없는 파일의 이름 및 해당 예외의 원인이 되는 내부 예외에 대한 참조를 사용하여 <see cref="T:System.IO.FileLoadException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다.<paramref name="message" /> 내용은 사용자의 이해를 돕기 위한 것입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
      <param name="fileName">로드되지 않은 파일의 이름을 포함하는 <see cref="T:System.String" />입니다. </param>
      <param name="inner">현재 예외의 원인이 되는 예외입니다.<paramref name="inner" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="P:System.IO.FileLoadException.FileName">
      <summary>이 예외를 발생시킨 파일의 이름을 가져옵니다.</summary>
      <returns>잘못된 이미지가 있는 파일의 이름이 들어 있는 <see cref="T:System.String" />이거나, 현재 인스턴스의 생성자에 파일 이름이 전달되지 않은 경우는 null 참조입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.FileLoadException.Message">
      <summary>오류 메시지와 이 예외를 발생시킨 파일의 이름을 가져옵니다.</summary>
      <returns>오류 메시지와 이 예외를 발생시킨 파일의 이름이 들어 있는 문자열입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.FileLoadException.ToString">
      <summary>현재 예외의 정규화된 이름과 오류 메시지, 내부 예외 이름 및 스택 추적을 반환합니다.</summary>
      <returns>사용한 <see cref="T:System.IO.FileLoadException" /> 생성자에 따라 이 예외의 정규화된 이름과 오류 메시지, 내부 예외 이름 및 스택 추적을 포함하는 문자열입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.IO.FileNotFoundException">
      <summary>디스크에 없는 파일에 대한 액세스 시도가 실패할 때 예외가 throw됩니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor">
      <summary>시스템에서 제공되는 메시지로 설정된 메시지 문자열과 COR_E_FILENOTFOUND로 설정된 HRESULT를 사용하여 <see cref="T:System.IO.FileNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor(System.String)">
      <summary>
        <paramref name="message" />로 설정된 메시지 문자열과 COR_E_FILENOTFOUND로 설정된 HRESULT를 사용하여 <see cref="T:System.IO.FileNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류에 대한 설명입니다.<paramref name="message" /> 내용은 사용자의 이해를 돕기 위한 것입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.IO.FileNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류에 대한 설명입니다.<paramref name="message" /> 내용은 사용자의 이해를 돕기 위한 것입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor(System.String,System.String)">
      <summary>찾을 수 없는 파일 이름을 지정하는 <paramref name="message" />로 설정된 메시지 문자열과 COR_E_FILENOTFOUND로 설정된 HRESULT를 사용하여 <see cref="T:System.IO.FileNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류에 대한 설명입니다.<paramref name="message" /> 내용은 사용자의 이해를 돕기 위한 것입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
      <param name="fileName">잘못된 이미지를 포함하는 파일의 전체 이름입니다. </param>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor(System.String,System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.IO.FileNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="fileName">잘못된 이미지를 포함하는 파일의 전체 이름입니다. </param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="P:System.IO.FileNotFoundException.FileName">
      <summary>찾을 수 없는 파일 이름을 가져옵니다.</summary>
      <returns>파일 이름이며, 이 인스턴스에 대해 생성자에 전달된 파일 이름이 없는 경우 null입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.FileNotFoundException.Message">
      <summary>예외에 대한 이유를 설명하는 오류 메시지를 가져옵니다.</summary>
      <returns>오류 메시지입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.FileNotFoundException.ToString">
      <summary>이 예외의 정규화된 이름과 오류 메시지, 내부 예외 이름 및 스택 추적을 반환합니다.</summary>
      <returns>이 예외의 정규화된 이름과 오류 메시지, 내부 예외 이름 및 스택 추적입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.IO.IOException">
      <summary>I/O 오류가 발생할 때 throw되는 예외입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IO.IOException.#ctor">
      <summary>빈 문자열("")로 설정된 메시지 문자열, COR_E_IO로 설정된 HRESULT 및 null 참조로 설정된 내부 예외를 사용하여 <see cref="T:System.IO.IOException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.IO.IOException.#ctor(System.String)">
      <summary>
        <paramref name="message" />로 설정된 메시지 문자열, COR_E_IO로 설정된 HRESULT 및 null로 설정된 내부 예외를 사용하여 <see cref="T:System.IO.IOException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다.<paramref name="message" /> 내용은 사용자의 이해를 돕기 위한 것입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
    </member>
    <member name="M:System.IO.IOException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.IO.IOException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="M:System.IO.IOException.#ctor(System.String,System.Int32)">
      <summary>
        <paramref name="message" />로 설정된 메시지 문자열과 사용자 정의된 HRESULT를 사용하여 <see cref="T:System.IO.IOException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다.<paramref name="message" /> 내용은 사용자의 이해를 돕기 위한 것입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
      <param name="hresult">발생한 오류를 식별하는 정수입니다. </param>
    </member>
    <member name="T:System.IO.PathTooLongException">
      <summary>경로 또는 파일 이름이 시스템에서 정의한 최대 길이보다 길 때 throw되는 예외입니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.PathTooLongException.#ctor">
      <summary>COR_E_PATHTOOLONG으로 설정된 HRESULT를 사용하여 <see cref="T:System.IO.PathTooLongException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.IO.PathTooLongException.#ctor(System.String)">
      <summary>
        <paramref name="message" />로 설정된 메시지 문자열과 COR_E_PATHTOOLONG으로 설정된 HRESULT를 사용하여 <see cref="T:System.IO.PathTooLongException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다.<paramref name="message" /> 내용은 사용자의 이해를 돕기 위한 것입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
    </member>
    <member name="M:System.IO.PathTooLongException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.IO.PathTooLongException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다.<paramref name="message" /> 내용은 사용자의 이해를 돕기 위한 것입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.Reflection.AssemblyCompanyAttribute">
      <summary>어셈블리 매니페스트에 대한 회사 이름 사용자 지정 특성을 정의합니다.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyCompanyAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Reflection.AssemblyCompanyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="company">회사 이름에 대한 정보입니다. </param>
    </member>
    <member name="P:System.Reflection.AssemblyCompanyAttribute.Company">
      <summary>회사 이름에 대한 정보를 가져옵니다.</summary>
      <returns>회사 이름을 포함하는 문자열입니다.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyConfigurationAttribute">
      <summary>어셈블리의 빌드 구성(예: 정식 버전 또는 디버그 버전)을 지정합니다.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyConfigurationAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Reflection.AssemblyConfigurationAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="configuration">어셈블리 구성입니다. </param>
    </member>
    <member name="P:System.Reflection.AssemblyConfigurationAttribute.Configuration">
      <summary>어셈블리 구성 정보를 가져옵니다.</summary>
      <returns>어셈블리 구성 정보가 포함되는 문자열입니다.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyCopyrightAttribute">
      <summary>어셈블리 매니페스트에 대한 저작권 사용자 지정 특성을 정의합니다.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyCopyrightAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Reflection.AssemblyCopyrightAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="copyright">저작권 정보입니다. </param>
    </member>
    <member name="P:System.Reflection.AssemblyCopyrightAttribute.Copyright">
      <summary>저작권 정보를 가져옵니다.</summary>
      <returns>저작권 정보가 포함된 문자열입니다.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyCultureAttribute">
      <summary>어셈블리가 지원하는 문화권을 지정합니다.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyCultureAttribute.#ctor(System.String)">
      <summary>특성 사용 어셈블리에서 지원하는 문화권으로 <see cref="T:System.Reflection.AssemblyCultureAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="culture">특성 사용 어셈블리에서 지원하는 문화권입니다. </param>
    </member>
    <member name="P:System.Reflection.AssemblyCultureAttribute.Culture">
      <summary>특성 사용 어셈블리에서 지원하는 문화권을 가져옵니다.</summary>
      <returns>지원되는 문화권의 이름이 포함된 문자열입니다.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyDefaultAliasAttribute">
      <summary>어셈블리 매니페스트에 대한 기본 별칭을 정의합니다.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyDefaultAliasAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Reflection.AssemblyDefaultAliasAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="defaultAlias">어셈블리 기본 별칭 정보입니다. </param>
    </member>
    <member name="P:System.Reflection.AssemblyDefaultAliasAttribute.DefaultAlias">
      <summary>기본 별칭 정보를 가져옵니다.</summary>
      <returns>기본 별칭 정보가 포함된 문자열입니다.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyDelaySignAttribute">
      <summary>어셈블리가 만들어질 때 완전히 서명되지 않도록 지정합니다.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyDelaySignAttribute.#ctor(System.Boolean)">
      <summary>
        <see cref="T:System.Reflection.AssemblyDelaySignAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="delaySign">이 특성이 나타내는 기능을 활성화하면 true이고, 그렇지 않으면 false입니다. </param>
    </member>
    <member name="P:System.Reflection.AssemblyDelaySignAttribute.DelaySign">
      <summary>특성의 상태를 나타내는 값을 가져옵니다.</summary>
      <returns>이 어셈블리가 서명이 연기된 상태로 빌드되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyDescriptionAttribute">
      <summary>어셈블리에 대한 텍스트 설명을 제공합니다.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyDescriptionAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Reflection.AssemblyDescriptionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="description">어셈블리 설명입니다. </param>
    </member>
    <member name="P:System.Reflection.AssemblyDescriptionAttribute.Description">
      <summary>어셈블리 설명 정보를 가져옵니다.</summary>
      <returns>어셈블리 설명이 포함된 문자열입니다.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyFileVersionAttribute">
      <summary>컴파일러에서 Win32 파일 버전 리소스에 대해 특정 버전 번호를 사용하도록 만듭니다.Win32 파일 버전은 어셈블리의 버전 번호와 같지 않아도 됩니다.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyFileVersionAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Reflection.AssemblyFileVersionAttribute" /> 클래스의 새 인스턴스를 초기화하며 파일 버전을 지정합니다.</summary>
      <param name="version">파일 버전입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />가 null입니다. </exception>
    </member>
    <member name="P:System.Reflection.AssemblyFileVersionAttribute.Version">
      <summary>Win32 파일 버전 리소스 이름을 가져옵니다.</summary>
      <returns>파일 버전 리소스 이름이 포함되어 있는 문자열입니다.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyFlagsAttribute">
      <summary>어셈블리에 대해 JIT(Just-In-Time) 컴파일러 옵션, 어셈블리 대상 변경 가능 여부 그리고 어셈블리에 전체 공개 키 또는 토큰화된 공개 키가 있는지 여부를 설명하는 <see cref="T:System.Reflection.AssemblyNameFlags" /> 플래그의 비트 조합을 지정합니다.이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)">
      <summary>지정된 <see cref="T:System.Reflection.AssemblyNameFlags" /> 플래그 조합을 사용하여 <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="assemblyFlags">JIT(Just-In-Time) 컴파일러 옵션, 수명, 어셈블리 대상 변경 가능 여부 그리고 어셈블리에 전체 공개 키 또는 토큰화된 공개 키가 있는지 여부를 나타내는 <see cref="T:System.Reflection.AssemblyNameFlags" /> 플래그의 비트 조합입니다.</param>
    </member>
    <member name="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
      <summary>이 특성 인스턴스가 만들어졌을 때 지정된 <see cref="T:System.Reflection.AssemblyNameFlags" /> 플래그의 조합을 나타내는 정수 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Reflection.AssemblyNameFlags" /> 플래그의 비트 조합을 나타내는 정수 값입니다.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyInformationalVersionAttribute">
      <summary>어셈블리 매니페스트에 대한 추가 버전 정보를 정의합니다.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyInformationalVersionAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Reflection.AssemblyInformationalVersionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="informationalVersion">어셈블리 버전 정보입니다. </param>
    </member>
    <member name="P:System.Reflection.AssemblyInformationalVersionAttribute.InformationalVersion">
      <summary>버전 정보를 가져옵니다.</summary>
      <returns>버전 정보가 포함된 문자열입니다.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyKeyFileAttribute">
      <summary>강력한 이름을 생성하는 데 사용된 키 쌍을 포함하는 파일의 이름을 지정합니다.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyKeyFileAttribute.#ctor(System.String)">
      <summary>특성 사용 어셈블리의 강력한 이름을 생성하기 위한 키 쌍을 포함하는 파일의 이름으로 AssemblyKeyFileAttribute 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="keyFile">키 쌍을 포함하는 파일의 이름입니다. </param>
    </member>
    <member name="P:System.Reflection.AssemblyKeyFileAttribute.KeyFile">
      <summary>특성 사용 어셈블리에 대한 강력한 이름을 생성하는 데 사용되는 키 쌍을 포함하는 파일의 이름을 가져옵니다.</summary>
      <returns>키 쌍을 포함하는 파일의 이름이 들어 있는 문자열입니다.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyKeyNameAttribute">
      <summary>강력한 이름을 생성하는 데 사용된 키 쌍을 포함하는 CSP 내에 키 컨테이너의 이름을 지정합니다.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyKeyNameAttribute.#ctor(System.String)">
      <summary>특성 사용 어셈블리의 강력한 이름을 생성하기 위한 키 쌍을 보유하는 컨테이너의 이름으로 <see cref="T:System.Reflection.AssemblyKeyNameAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="keyName">키 쌍을 포함하는 컨테이너의 이름입니다. </param>
    </member>
    <member name="P:System.Reflection.AssemblyKeyNameAttribute.KeyName">
      <summary>특성 사용 어셈블리에 대한 강력한 이름을 생성하는 데 사용되는 키 쌍을 포함하는 컨테이너의 이름을 가져옵니다.</summary>
      <returns>관련된 키 쌍을 보유하는 컨테이너의 이름이 포함된 문자열입니다.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyMetadataAttribute">
      <summary>데코레이팅된 어셈블리의 키/값 메타데이터 쌍을 정의합니다.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyMetadataAttribute.#ctor(System.String,System.String)">
      <summary>지정된 메타데이터 키 및 값을 사용하여 <see cref="T:System.Reflection.AssemblyMetadataAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="key">메타데이터 키입니다.</param>
      <param name="value">메타데이터 값입니다.</param>
    </member>
    <member name="P:System.Reflection.AssemblyMetadataAttribute.Key">
      <summary>메타데이터 키를 가져옵니다.</summary>
      <returns>메타데이터 키입니다.</returns>
    </member>
    <member name="P:System.Reflection.AssemblyMetadataAttribute.Value">
      <summary>메타데이터 값을 가져옵니다.</summary>
      <returns>메타데이터 값입니다.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyNameFlags">
      <summary>
        <see cref="T:System.Reflection.Assembly" /> 참조에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="F:System.Reflection.AssemblyNameFlags.None">
      <summary>플래그가 적용되지 않도록 지정합니다.</summary>
    </member>
    <member name="F:System.Reflection.AssemblyNameFlags.PublicKey">
      <summary>공개 키 토큰이 아닌 전체 공개 키에서 공개 키가 만들어지도록 지정합니다.</summary>
    </member>
    <member name="F:System.Reflection.AssemblyNameFlags.Retargetable">
      <summary>어셈블리의 대상이 런타임에 다른 게시자의 어셈블리로 변경될 수 있도록 지정합니다.이 값은 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="T:System.Reflection.AssemblyProductAttribute">
      <summary>어셈블리 매니페스트에 대한 제품 이름 사용자 지정 특성을 정의합니다.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyProductAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Reflection.AssemblyProductAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="product">제품 이름에 대한 정보입니다. </param>
    </member>
    <member name="P:System.Reflection.AssemblyProductAttribute.Product">
      <summary>제품 이름에 대한 정보를 가져옵니다.</summary>
      <returns>제품 이름을 포함하는 문자열입니다.</returns>
    </member>
    <member name="T:System.Reflection.AssemblySignatureKeyAttribute">
      <summary>이전의 더 간단한 강력한 이름 키에서 더 강력한 해시 알고리즘이 있는 크기가 더 큰 키로 마이그레이션합니다.</summary>
    </member>
    <member name="M:System.Reflection.AssemblySignatureKeyAttribute.#ctor(System.String,System.String)">
      <summary>지정된 공개 키 및 연대 서명을 사용하여 <see cref="T:System.Reflection.AssemblySignatureKeyAttribute" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="publicKey">공개 또는 ID 키입니다.</param>
      <param name="countersignature">연대 서명으로, 강력한 이름 키의 서명 키 부분입니다.</param>
    </member>
    <member name="P:System.Reflection.AssemblySignatureKeyAttribute.Countersignature">
      <summary>이 어셈블리에 대한 강력한 이름의 연대 서명을 가져옵니다.</summary>
      <returns>이 서명 키에 대한 연대 서명입니다.</returns>
    </member>
    <member name="P:System.Reflection.AssemblySignatureKeyAttribute.PublicKey">
      <summary>어셈블리를 서명하는 데 사용되는 강력한 이름의 공용 키를 가져옵니다.</summary>
      <returns>이 어셈블리의 공개 키입니다.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyTitleAttribute">
      <summary>어셈블리에 대한 설명을 지정합니다.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyTitleAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Reflection.AssemblyTitleAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="title">어셈블리 제목입니다. </param>
    </member>
    <member name="P:System.Reflection.AssemblyTitleAttribute.Title">
      <summary>어셈블리 제목 정보를 가져옵니다.</summary>
      <returns>어셈블리 제목입니다. </returns>
    </member>
    <member name="T:System.Reflection.AssemblyTrademarkAttribute">
      <summary>어셈블리 매니페스트에 대한 상표 사용자 지정 특성을 정의합니다.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyTrademarkAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Reflection.AssemblyTrademarkAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="trademark">상표 정보입니다. </param>
    </member>
    <member name="P:System.Reflection.AssemblyTrademarkAttribute.Trademark">
      <summary>상표 정보를 가져옵니다.</summary>
      <returns>상표 정보가 포함된 String입니다.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyVersionAttribute">
      <summary>특성 사용 어셈블리의 버전을 지정합니다.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
      <summary>특성 사용 어셈블리의 버전 번호로 AssemblyVersionAttribute 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="version">특성 사용 어셈블리의 버전 번호입니다. </param>
    </member>
    <member name="P:System.Reflection.AssemblyVersionAttribute.Version">
      <summary>특성 사용 어셈블리의 버전 번호를 가져옵니다.</summary>
      <returns>어셈블리 버전 번호를 포함하는 문자열입니다.</returns>
    </member>
    <member name="T:System.Reflection.DefaultMemberAttribute">
      <summary>
        <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />에 사용된 기본 멤버인 형식 멤버를 정의합니다. </summary>
    </member>
    <member name="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Reflection.DefaultMemberAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="memberName">호출할 멤버 이름이 포함된 String입니다.String은 생성자, 메서드, 속성 또는 필드일 수 있습니다.멤버를 호출할 때는 적합한 호출 특성을 지정해야 합니다.멤버 이름으로 빈 String을 전달하여 클래스의 기본 멤버를 지정할 수 있습니다.형식의 기본 멤버는 DefaultMemberAttribute 사용자 지정 특성으로 표시되거나 일반적인 방법으로 COM에 표시됩니다. </param>
    </member>
    <member name="P:System.Reflection.DefaultMemberAttribute.MemberName">
      <summary>특성에서 이름을 가져옵니다.</summary>
      <returns>멤버 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="T:System.Reflection.ProcessorArchitecture">
      <summary>실행 파일의 대상이 되는 플랫폼의 프로세서 및 워드 당 비트 수를 식별합니다.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.Amd64">
      <summary>64비트 AMD 프로세서 전용입니다.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.Arm">
      <summary>ARM 전처리기입니다.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.IA64">
      <summary>64비트 Intel 프로세서 전용입니다.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.MSIL">
      <summary>프로세서 및 워드 당 비트에 대해 중립적입니다.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.None">
      <summary>프로세서와 워드 당 비트의 알 수 없거나 지정되지 않은 조합입니다.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.X86">
      <summary>네이티브 32비트 Intel 프로세서 또는 64비트 플랫폼(WOW64)의 Windows On Windows 환경에서 실행되는 32비트 Intel 프로세서입니다.</summary>
    </member>
    <member name="T:System.Runtime.GCLargeObjectHeapCompactionMode">
      <summary>[.NET Framework 4.5.1 이상 버전에서 지원됨] 다음 차단 가비지 수집 중 LOH(큰 개체 힙)를 압축할지를 나타냅니다. </summary>
    </member>
    <member name="F:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce">
      <summary>다음 차단 2세대 가비지 수집 중 LOH(큰 개체 힙)를 압축합니다. </summary>
    </member>
    <member name="F:System.Runtime.GCLargeObjectHeapCompactionMode.Default">
      <summary>LOH(큰 개체 힙)는 압축되지 않습니다.</summary>
    </member>
    <member name="T:System.Runtime.GCLatencyMode">
      <summary>가비지 수집기가 응용 프로그램에 개입하는 시점을 조정합니다.   </summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.Batch">
      <summary>가비지 수집 동시성을 사용하지 않도록 설정하고 일괄 호출을 통해 개체를 회수합니다.이는 개입 수준이 가장 높은 모드입니다.</summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.Interactive">
      <summary>가비지 수집 동시성을 사용하도록 설정하고 응용 프로그램이 실행 중인 동안 개체를 회수합니다.이것은 워크스테이션에서 가비지 수집에 대한 기본 모드이며 <see cref="F:System.Runtime.GCLatencyMode.Batch" />보다 개입 수준이 낮습니다.또한 응답성과 처리량 사이의 균형이 적절히 조정됩니다.</summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.LowLatency">
      <summary>개체를 보다 보수적으로 회수하는 가비지 수집을 사용하도록 설정합니다.시스템에 메모리가 부족할 때만 전체 수집이 발생하며, 0세대 및 1세대 수집은 보다 자주 수행될 수 있습니다.</summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.SustainedLowLatency">
      <summary>장기간의 대기 시간을 최소화하려고 하는 가비지 수집을 사용하도록 설정할 수 있습니다.수집기는 0세대, 1세대 및 동시 2세대 수집만 수행하려고 합니다.시스템에 메모리가 부족한 경우 전체 차단 수집이 발생할 수 있습니다.</summary>
    </member>
    <member name="T:System.Runtime.GCSettings">
      <summary>현재 프로세스의 가비지 수집 설정을 지정합니다. </summary>
    </member>
    <member name="P:System.Runtime.GCSettings.IsServerGC">
      <summary>서버 가비지 수집이 설정되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>서버 가비지 수집이 설정되었으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
      <summary>[.NET Framework 4.5.1 이상 버전에서 지원됨] 전체 차단 가비지 수집이 대형 개체 힙(LOH)을 압축할지 여부를 나타내는 값을 가져오거나 설정합니다. </summary>
      <returns>전체 차단 가비지 수집 중 LOH를 압축할지 여부를 나타내는 열거형 값 중 하나입니다. </returns>
    </member>
    <member name="P:System.Runtime.GCSettings.LatencyMode">
      <summary>가비지 수집에 대한 현재 대기 모드를 가져오거나 설정합니다.</summary>
      <returns>대기 모드를 지정하는 열거형 값 중 하나입니다. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Runtime.GCSettings.LatencyMode" /> 속성이 잘못 된 값으로 설정 됩니다. 또는<see cref="P:System.Runtime.GCSettings.LatencyMode" /> 속성 설정할 수 없습니다 <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" />. </exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute">
      <summary>특성 사용 필드에 액세스하는 속성의 이름을 지정합니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.#ctor(System.String)">
      <summary>특성 사용 필드에 액세스하는 데 사용한 속성의 이름을 사용하여 AccessedThroughPropertyAttribute 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="propertyName">특성 사용 필드에 액세스하는 데 사용한 속성의 이름입니다. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.PropertyName">
      <summary>특성 사용 필드에 액세스하는 데 사용한 속성의 이름을 가져옵니다.</summary>
      <returns>특성 사용 필드에 액세스하는 데 사용한 속성의 이름입니다.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.AsyncStateMachineAttribute">
      <summary>메서드가 Async(Visual Basic) 또는 async(C# 참조) 한정자로 표시되는지 여부를 나타냅니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncStateMachineAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.AsyncStateMachineAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stateMachineType">상태 시스템 메서드를 구현하는 데 사용되는 기본 상태 시스템에 대한 형식 개체입니다.</param>
    </member>
    <member name="T:System.Runtime.CompilerServices.CallerFilePathAttribute">
      <summary>호출자가 포함된 소스 파일의 전체 경로를 얻을 수 있습니다.컴파일할 때의 파일 경로입니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CallerFilePathAttribute.#ctor">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.CallerFilePathAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.CallerLineNumberAttribute">
      <summary>메서드가 호출되는 소스 파일의 줄 번호를 얻을 수 있습니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CallerLineNumberAttribute.#ctor">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.CallerMemberNameAttribute">
      <summary>메서드 호출자의 메서드 또는 속성 이름을 얻을 수 있습니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CallerMemberNameAttribute.#ctor">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.CompilationRelaxationsAttribute">
      <summary>공용언어 런타임의 JIT(just-in-time) 컴파일러가 생성한 코드를 엄격하게 제어합니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CompilationRelaxationsAttribute.#ctor(System.Int32)">
      <summary>지정된 컴파일 relaxation을 사용하여 <see cref="T:System.Runtime.CompilerServices.CompilationRelaxationsAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="relaxations">컴파일 relaxation입니다. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.CompilationRelaxationsAttribute.CompilationRelaxations">
      <summary>현재 개체를 구성할 때 지정한 컴파일 relaxation을 가져옵니다.</summary>
      <returns>현재 개체를 구성할 때 지정한 컴파일 relaxation입니다.<see cref="P:System.Runtime.CompilerServices.CompilationRelaxationsAttribute.CompilationRelaxations" /> 속성과 함께 <see cref="T:System.Runtime.CompilerServices.CompilationRelaxations" /> 열거형을 사용합니다.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.CompilerGeneratedAttribute">
      <summary>컴파일러에서 생성한 요소와 사용자가 생성한 요소를 구별합니다.이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CompilerGeneratedAttribute.#ctor">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.CompilerGeneratedAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
      <summary>컴파일러에서 관리되는 개체에 개체 필드를 동적으로 연결할 수 있도록 합니다.</summary>
      <typeparam name="TKey">필드가 연결된 참조 형식입니다. </typeparam>
      <typeparam name="TValue">필드의 형식입니다.참조 형식이어야 합니다.</typeparam>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
      <summary>테이블에 키를 추가합니다.</summary>
      <param name="key">추가할 키입니다.<paramref name="key" />는 속성이 연결된 개체를 나타냅니다.</param>
      <param name="value">키의 속성 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" />이(가) 이미 있습니다.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Finalize">
      <summary>리소스가 해제 되 고 가비지 수집기가 회수 했을 때 다른 정리 작업이 수행 되도록는 <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> 개체입니다. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
      <summary>테이블에서 지정된 키를 각각 검색하여 해당 값을 반환합니다.테이블에 키가 없는 경우 테이블의 값을 나타내는 클래스의 기본 생성자를 메서드가 호출하여 지정된 키에 바인딩된 값을 만듭니다.</summary>
      <returns>테이블에 이미 <paramref name="key" />가 있으면 <paramref name="key" />에 해당하는 값이고, 그렇지 않으면 <paramref name="TValue" /> 제네릭 형식 매개 변수에 의해 정의된 클래스의 기본 생성자가 만든 새 값입니다.</returns>
      <param name="key">검색할 키입니다.<paramref name="key" />는 속성이 연결된 개체를 나타냅니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우</exception>
      <exception cref="T:System.MissingMethodException">Windows 스토어 앱용 .NET 또는 이식 가능한 클래스 라이브러리에서 대신 기본 클래스 예외 <see cref="T:System.MissingMemberException" />를 catch합니다.테이블의 값을 나타내는 클래스가 기본 생성자를 정의하지 않는 경우</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)">
      <summary>테이블에서 지정된 키를 각각 검색하여 해당 값을 반환합니다.테이블에 키가 없는 경우 메서드가 콜백 메서드를 호출하여 지정된 키에 바인딩된 값을 만듭니다.</summary>
      <returns>테이블에 이미 <paramref name="key" />가 있으면 <paramref name="key" />에 연결된 값이고, 그렇지 않으면 <paramref name="createValueCallback" /> 대리자가 반환하는 새 값입니다.</returns>
      <param name="key">검색할 키입니다.<paramref name="key" />는 속성이 연결된 개체를 나타냅니다.</param>
      <param name="createValueCallback">지정된 <paramref name="key" />에 대한 값을 만들 수 있는 메서드에 대한 대리자입니다.<paramref name="TKey" /> 형식의 단일 매개 변수가 있으며 <paramref name="TValue" /> 형식의 값을 반환합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 또는 <paramref name="createValueCallback" />가 null인 경우</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
      <summary>테이블에서 키와 해당 값을 제거합니다.</summary>
      <returns>키를 찾아서 제거하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">제거할 키입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
      <summary>지정된 키의 값을 가져옵니다.</summary>
      <returns>
        <paramref name="key" />가 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">연결된 속성이 있는 개체를 나타내는 키입니다.</param>
      <param name="value">이 메서드가 반환될 때 연결된 속성 값을 포함합니다.<paramref name="key" />를 찾을 수 없으면 <paramref name="value" />에 기본값이 포함됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우</exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> 개체에 키/값 쌍의 일부로 추가할 기본값 이외의 값을 만드는 메서드를 나타냅니다. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback.BeginInvoke(`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback.Invoke(`0)"></member>
    <member name="T:System.Runtime.CompilerServices.CustomConstantAttribute">
      <summary>컴파일러가 필드 또는 메서드 매개 변수 값으로 유지할 수 있는 상수 값을 정의합니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CustomConstantAttribute.#ctor">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.CustomConstantAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.CustomConstantAttribute.Value">
      <summary>이 특성에 의해 저장된 상수 값을 가져옵니다.</summary>
      <returns>이 특성에 의해 저장된 상수 값입니다.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.DateTimeConstantAttribute">
      <summary>필드 또는 매개 변수 값으로 8바이트 <see cref="T:System.DateTime" /> 상수를 유지합니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.DateTimeConstantAttribute.#ctor(System.Int64)">
      <summary>이 인스턴스의 날짜와 시간을 나타내는 100나노초 눈금의 수로 DateTimeConstantAttribute 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="ticks">이 인스턴스의 날짜 및 시간을 나타내는 100나노초 눈금의 수입니다. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.DateTimeConstantAttribute.Value">
      <summary>이 인스턴스의 날짜 및 시간을 나타내는 100나노초 눈금의 수를 가져옵니다.</summary>
      <returns>이 인스턴스의 날짜 및 시간을 나타내는 100나노초 눈금의 수입니다.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.DecimalConstantAttribute">
      <summary>메타데이터에 <see cref="T:System.Decimal" /> 상수 값을 저장합니다.이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.Int32,System.Int32,System.Int32)">
      <summary>지정된 부호 있는 정수 값을 사용하여 <see cref="T:System.Runtime.CompilerServices.DecimalConstantAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="scale">소수점 오른쪽에 자릿수를 나타내는 소수 자릿수 인수 10의 거듭제곱입니다.유효한 값은 0부터 28까지를 포함합니다.</param>
      <param name="sign">값이 0이면 양수 값을 나타내고, 값이 1이면 음수 값을 나타냅니다.</param>
      <param name="hi">96비트 <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" />의 상위 32비트입니다.</param>
      <param name="mid">96비트 <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" />의 중간 32비트입니다.</param>
      <param name="low">96비트 <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" />의 하위 32비트입니다.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)">
      <summary>지정된 부호 없는 정수 값을 사용하여 <see cref="T:System.Runtime.CompilerServices.DecimalConstantAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="scale">소수점 오른쪽에 자릿수를 나타내는 소수 자릿수 인수 10의 거듭제곱입니다.유효한 값은 0부터 28까지를 포함합니다.</param>
      <param name="sign">값이 0이면 양수 값을 나타내고, 값이 1이면 음수 값을 나타냅니다. </param>
      <param name="hi">96비트 <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" />의 상위 32비트입니다. </param>
      <param name="mid">96비트 <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" />의 중간 32비트입니다. </param>
      <param name="low">96비트 <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" />의 하위 32비트입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scale" />이 28보다 큽니다. </exception>
    </member>
    <member name="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value">
      <summary>이 특성에 저장된 10진 상수를 가져옵니다.</summary>
      <returns>이 특성에 저장된 10진 상수입니다.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.DisablePrivateReflectionAttribute">
      <summary>어셈블리의 형식에 포함 된 모든 private 멤버 리플렉션을 사용할 수 없는 것을 나타냅니다. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.DisablePrivateReflectionAttribute.#ctor">
      <summary>새 인스턴스를 초기화는 <see cref="T:System.Runtime.CompilerServices.DisablePrivateReflectionAttribute" /> 클래스입니다. </summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.ExtensionAttribute">
      <summary>메서드가 확장 메서드이거나 클래스 또는 어셈블리에 확장 메서드가 들어 있음을 나타냅니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ExtensionAttribute.#ctor">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.ExtensionAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.FixedBufferAttribute">
      <summary>필드를 고정된 수의 지정된 기본 형식 요소가 포함된 필드로 처리해야 함을 나타냅니다.이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.FixedBufferAttribute.#ctor(System.Type,System.Int32)">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.FixedBufferAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="elementType">버퍼에 포함된 요소의 형식입니다.</param>
      <param name="length">버퍼의 요소 수입니다.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.FixedBufferAttribute.ElementType">
      <summary>고정 버퍼에 포함된 요소의 형식을 가져옵니다. </summary>
      <returns>요소의 형식입니다.</returns>
    </member>
    <member name="P:System.Runtime.CompilerServices.FixedBufferAttribute.Length">
      <summary>고정 버퍼의 요소 수를 가져옵니다. </summary>
      <returns>고정 버퍼의 요소 수입니다.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.FormattableStringFactory">
      <summary>복합 형식 문자열 및 해당 인수에서 <see cref="T:System.FormattableString" /> 개체를 만드는 정적 메서드를 제공합니다. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.FormattableStringFactory.Create(System.String,System.Object[])">
      <summary>복합 형식 문자열 및 해당 인수에서 <see cref="T:System.FormattableString" /> 인스턴스를 만듭니다. </summary>
      <returns>복합 형식 문자열 및 해당 인수를 나타내는 개체입니다. </returns>
      <param name="format">복합 형식 문자열입니다. </param>
      <param name="arguments">해당 문자열 표현이 결과 문자열에 삽입되는 인수입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />가 null인 경우 또는<paramref name="arguments" />가 null인 경우 </exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.IndexerNameAttribute">
      <summary>인덱서를 직접 지원하지 않는 프로그래밍 언어에서 인덱서를 식별하는 이름을 나타냅니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IndexerNameAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.IndexerNameAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="indexerName">다른 언어로 표시된 인덱서의 이름입니다. </param>
    </member>
    <member name="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
      <summary>일반적으로는 현재 어셈블리 내에서만 볼 수 있는 형식을 지정된 어셈블리에서 볼 수 있도록 지정합니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
      <summary>지정된 friend 어셈블리의 이름을 사용하여 <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="assemblyName">friend 어셈블리의 이름입니다.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
      <summary>internal 키워드로 표시된 모든 형식 및 형식 멤버가 표시되도록 지정할 friend 어셈블리의 이름을 가져옵니다. </summary>
      <returns>friend 어셈블리의 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.IsConst">
      <summary>한정자가 지정된 형식에 const 한정자가 있음을 나타냅니다.이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.IStrongBox">
      <summary>개체가 참조하는 값에 액세스하기 위한 속성을 정의합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.CompilerServices.IStrongBox.Value">
      <summary>개체가 참조하는 값을 가져오거나 설정합니다.</summary>
      <returns>개체가 참조하는 값입니다.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.IsVolatile">
      <summary>필드를 volatile로 표시합니다.이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
      <summary>Visual Basic의 메서드가 Iterator 한정자로 표시되었는지 여부를 나타냅니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IteratorStateMachineAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stateMachineType">상태 시스템 메서드를 구현하는 데 사용되는 기본 상태 시스템에 대한 형식 개체입니다.</param>
    </member>
    <member name="T:System.Runtime.CompilerServices.MethodImplAttribute">
      <summary>메서드 구현 방법을 자세히 지정합니다.이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.MethodImplAttribute.#ctor(System.Runtime.CompilerServices.MethodImplOptions)">
      <summary>지정된 <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" /> 값을 사용하여 <see cref="T:System.Runtime.CompilerServices.MethodImplAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="methodImplOptions">특성 사용 메서드의 속성을 지정하는 <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" /> 값입니다. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.MethodImplAttribute.Value">
      <summary>특성 사용 메서드를 설명하는 <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" /> 값을 가져옵니다.</summary>
      <returns>특성 사용 메서드를 설명하는 <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" /> 값입니다.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.MethodImplOptions">
      <summary>메서드 구현 방법을 자세히 정의합니다.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining">
      <summary>가능한 경우 메서드가 인라인되어야 합니다.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.NoInlining">
      <summary>메서드를 인라인할 수 없습니다.인라이닝은 메서드 호출을 메서드 본문으로 대체하는 최적화입니다.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.NoOptimization">
      <summary>발생 가능한 코드 생성 문제를 디버깅할 때 메서드가 JIT(Just-In-Time) 컴파일러 또는 네이티브 코드 생성(Ngen.exe 참조)에 의해 최적화되지 않습니다.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.PreserveSig">
      <summary>메서드 시그니처를 선언한 대로 정확하게 내보냅니다.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.ReferenceAssemblyAttribute">
      <summary>메타데이터를 포함하지만 실행 코드는 포함하지 않는 참조 어셈블리로 어셈블리를 식별합니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ReferenceAssemblyAttribute.#ctor">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.ReferenceAssemblyAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ReferenceAssemblyAttribute.#ctor(System.String)">
      <summary>지정된 설명을 사용하여 <see cref="T:System.Runtime.CompilerServices.ReferenceAssemblyAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="description">참조 어셈블리에 대한 설명입니다. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.ReferenceAssemblyAttribute.Description">
      <summary>참조 어셈블리에 대한 설명을 가져옵니다.</summary>
      <returns>참조 어셈블리에 대한 설명입니다.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
      <summary>
        <see cref="T:System.Exception" /> 클래스에서 파생되지 않은 예외를 <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> 개체로 래핑할지 여부를 지정합니다.이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.#ctor">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.WrapNonExceptionThrows">
      <summary>
        <see cref="T:System.Exception" /> 클래스에서 파생되지 않은 예외를 <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> 개체로 래핑할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Exception" /> 클래스에서 파생되지 않은 예외가 <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> 개체로 래핑되어 나타나면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.RuntimeHelpers">
      <summary>컴파일러를 지원하는 일련의 정적 메서드와 속성을 제공합니다.이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.EnsureSufficientExecutionStack">
      <summary>남아 있는 스택 공간이 평균적인 .NET Framework 함수를 실행할 정도로 충분히 큰지 확인합니다.</summary>
      <exception cref="T:System.InsufficientExecutionStackException">이용 가능한 스택 공간이 평균적인 .NET Framework 함수를 실행하는데 부족합니다.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(System.Object)">
      <summary>특정 개체에 대한 해시 함수로 사용되며 해시 테이블과 같은 해시 코드를 사용하는 데이터 구조 및 알고리즘에 적합합니다.</summary>
      <returns>
        <paramref name="o" /> 매개 변수로 식별되는 개체의 해시 코드입니다.</returns>
      <param name="o">해시 코드를 검색할 개체입니다. </param>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.GetObjectValue(System.Object)">
      <summary>값 형식을 상자에 넣습니다.</summary>
      <returns>값 형식이 값 클래스이면 <paramref name="obj" />의 boxed 사본이고, 그렇지 않으면 <paramref name="obj" /> 자체입니다.</returns>
      <param name="obj">상자에 넣을 값 형식입니다. </param>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.InitializeArray(System.Array,System.RuntimeFieldHandle)">
      <summary>모듈에 저장되는 데이터의 배열을 신속하게 초기화하는 방법을 제공합니다.</summary>
      <param name="array">초기화할 배열입니다. </param>
      <param name="fldHandle">배열을 초기화하는 데 사용되는 데이터의 위치를 지정하는 필드 핸들입니다. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.RuntimeHelpers.OffsetToStringData">
      <summary>지정된 문자열에 있는 데이터의 오프셋을 바이트 단위로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.String" /> 개체의 처음부터 문자열의 첫 번째 문자까지의 바이트 오프셋입니다.</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(System.RuntimeTypeHandle)">
      <summary>지정된 클래스 생성자 메서드를 실행합니다.</summary>
      <param name="type">실행할 클래스 생성자 메서드를 지정하는 형식 핸들입니다. </param>
      <exception cref="T:System.TypeInitializationException">클래스 이니셜라이저가 예외를 throw합니다. </exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.StateMachineAttribute">
      <summary>메서드가 상태 시스템 메서드인지 여부를 확인할 수 있습니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.StateMachineAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.StateMachineAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stateMachineType">상태 시스템 메서드를 구현하기 위해 컴파일러에서 생성되었던 기본 상태 시스템에 대한 형식 개체입니다.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.StateMachineAttribute.StateMachineType">
      <summary>상태 컴퓨터 메서드를 구현하기 위해 컴파일러에서 생성되었던 기본 상태 컴퓨터 유형에 대한 유형 개체를 반환합니다.</summary>
      <returns>상태 컴퓨터 메서드를 구현하기 위해 컴파일러에서 생성된 기본 상태 컴퓨터 형식에 대한 형식 개체를 가져옵니다.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.StrongBox`1">
      <summary>값에 대한 참조를 보유합니다.</summary>
      <typeparam name="T">
        <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />에서 참조하는 값의 형식입니다.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.CompilerServices.StrongBox`1.#ctor">
      <summary>참조 호출에서 사용될 때 값을 받을 수 있는 새 StrongBox를 초기화합니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.StrongBox`1.#ctor(`0)">
      <summary>제공된 값을 사용하여 <see cref="T:System.Runtime.CompilerServices.StrongBox`1" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="value">
        <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />에서 참조할 값입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.CompilerServices.StrongBox`1.System#Runtime#CompilerServices#IStrongBox#Value">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />에서 참조하는 속성 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />에서 참조하는 값입니다.</returns>
    </member>
    <member name="F:System.Runtime.CompilerServices.StrongBox`1.Value">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />에서 참조하는 값을 나타냅니다.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.TypeForwardedFromAttribute">
      <summary>다른 어셈블리에 있는 소스 <see cref="T:System.Type" />을 지정합니다. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.TypeForwardedFromAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.TypeForwardedFromAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="assemblyFullName">다른 어셈블리에 있는 소스 <see cref="T:System.Type" />입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFullName" />이 null이거나 비어 있는 경우</exception>
    </member>
    <member name="P:System.Runtime.CompilerServices.TypeForwardedFromAttribute.AssemblyFullName">
      <summary>소스 형식의 정규화된 어셈블리 이름을 가져옵니다.</summary>
      <returns>소스 형식의 정규화된 어셈블리 이름입니다.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.TypeForwardedToAttribute">
      <summary>다른 어셈블리에 있는 대상 <see cref="T:System.Type" />을 지정합니다. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.TypeForwardedToAttribute.#ctor(System.Type)">
      <summary>대상 <see cref="T:System.Type" />을 지정하여 <see cref="T:System.Runtime.CompilerServices.TypeForwardedToAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="destination">다른 어셈블리에 있는 대상 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.TypeForwardedToAttribute.Destination">
      <summary>다른 어셈블리에 있는 대상 <see cref="T:System.Type" />을 가져옵니다.</summary>
      <returns>다른 어셈블리에 있는 대상 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.UnsafeValueTypeAttribute">
      <summary>오버플로될 수 있는 관리되지 않는 배열이 형식에 포함되도록 지정합니다.이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.UnsafeValueTypeAttribute.#ctor">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.UnsafeValueTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo">
      <summary>상태가 코드의 특정 지점에 캡처되는 예외를 나타냅니다. </summary>
    </member>
    <member name="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
      <summary>코드의 현재 지점에서 지정된 예외를 나타내는 <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /> 개체를 만듭니다. </summary>
      <returns>코드의 현재 지점에서 지정된 예외를 나타내는 개체입니다. </returns>
      <param name="source">상태가 캡처되고 반환된 개체로 표시되는 예외입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" />가 null입니다. </exception>
    </member>
    <member name="P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException">
      <summary>현재 인스턴스로 표시되는 예외를 가져옵니다. </summary>
      <returns>현재 인스턴스로 표시되는 예외입니다. </returns>
    </member>
    <member name="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw">
      <summary>예외가 캡처될 때 저장된 상태로 복원한 후 <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /> 개체로 표현되는 예외를 throw합니다. </summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CharSet">
      <summary>마샬링된 문자열이 사용할 문자 집합을 지정합니다.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CharSet.Ansi">
      <summary>문자열을 다중 바이트 문자열로 마샬링합니다.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CharSet.Unicode">
      <summary>문자열을 유니코드 2바이트 문자로 마샬링합니다.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComVisibleAttribute">
      <summary>COM에 대한 어셈블리 내의 관리되는 개별 형식이나 멤버 또는 모든 형식의 액세스 가능성을 제어합니다.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComVisibleAttribute.#ctor(System.Boolean)">
      <summary>ComVisibleAttribute 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="visibility">true는 형식이 COM에 표시된다는 것을 나타내고, 그렇지 않으면 false입니다.기본값은 true입니다.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComVisibleAttribute.Value">
      <summary>COM 형식이 표시되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>형식이 표시되면 true이고, 그렇지 않으면 false입니다.기본값은 true입니다.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.FieldOffsetAttribute">
      <summary>클래스 또는 구조체의 관리되지 않는 표현 내에서 필드의 실제 위치를 나타냅니다.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.FieldOffsetAttribute.#ctor(System.Int32)">
      <summary>구조체에 있는 필드의 시작 부분까지의 오프셋을 사용하여 <see cref="T:System.Runtime.InteropServices.FieldOffsetAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="offset">구조체의 시작 부분에서 필드의 시작 부분까지 바이트 단위로 나타낸 오프셋입니다. </param>
    </member>
    <member name="P:System.Runtime.InteropServices.FieldOffsetAttribute.Value">
      <summary>구조체의 시작 부분에서 필드의 시작 부분까지 오프셋을 가져옵니다.</summary>
      <returns>구조체의 시작 부분에서 필드의 시작 부분까지의 오프셋입니다.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.LayoutKind">
      <summary>비관리 코드로 내보낼 때 개체의 레이아웃을 제어합니다.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.LayoutKind.Auto">
      <summary>런타임에서는 자동으로 관리되지 않는 메모리에 있는 개체의 멤버에 적합한 레이아웃을 선택합니다.이 열거형 멤버로 정의된 개체는 관리 코드 외부에 노출시킬 수 없습니다.관리 코드 외부에 노출시키려고 하면 예외가 발생합니다.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.LayoutKind.Explicit">
      <summary>관리되지 않는 메모리에 있는 개체의 각 멤버에 대한 정확한 위치는 명시적으로 제어됩니다. 이 위치는 <see cref="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack" /> 필드의 설정을 기준으로 합니다.각 멤버는 <see cref="T:System.Runtime.InteropServices.FieldOffsetAttribute" />를 사용하여 형식 내부에서 필드의 위치를 나타내야 합니다.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.LayoutKind.Sequential">
      <summary>개체의 멤버는 관리되지 않는 메모리로 내보낼 때 표시되는 순서대로 배치됩니다.멤버는 <see cref="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack" />에서 지정된 방식에 따라 배치되며, 연속되지 않을 수 있습니다.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.OutAttribute">
      <summary>데이터가 피호출자로부터 호출자로 마샬링 됨을 나타냅니다.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.OutAttribute.#ctor">
      <summary>
        <see cref="T:System.Runtime.InteropServices.OutAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.StructLayoutAttribute">
      <summary>메모리에 있는 클래스 또는 구조체의 데이터 필드에 대한 실제 레이아웃을 제어할 수 있습니다.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)">
      <summary>지정된 <see cref="T:System.Runtime.InteropServices.LayoutKind" /> 열거형 멤버를 사용하여 <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="layoutKind">클래스나 구조체의 정렬 방법을 지정하는 열거형 값 중 하나입니다. </param>
    </member>
    <member name="F:System.Runtime.InteropServices.StructLayoutAttribute.CharSet">
      <summary>클래스 내의 문자열 데이터 필드가 기본적으로 LPWSTR 또는 LPSTR(으)로 마샬링되어야 하는지 여부를 나타냅니다.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack">
      <summary>메모리에 있는 클래스 또는 구조체의 데이터 필드 맞춤을 제어합니다.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.StructLayoutAttribute.Size">
      <summary>클래스나 구조체의 절대적인 크기를 나타냅니다.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.StructLayoutAttribute.Value">
      <summary>클래스나 구조의 배열 방법을 지정하는 <see cref="T:System.Runtime.InteropServices.LayoutKind" /> 값을 가져옵니다.</summary>
      <returns>클래스나 구조체의 정렬 방법을 지정하는 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.TargetFrameworkAttribute">
      <summary>특정 어셈블리가 컴파일된 .NET Framework의 버전을 식별합니다.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.TargetFrameworkAttribute.#ctor(System.String)">
      <summary>어셈블리가 빌드된 .NET Framework 버전을 지정하여 <see cref="T:System.Runtime.Versioning.TargetFrameworkAttribute" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="frameworkName">어셈블리가 빌드된 .NET Framework의 버전입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="frameworkName" />가 null입니다.</exception>
    </member>
    <member name="P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName">
      <summary>어셈블리가 빌드된 .NET Framework 버전의 표시 이름을 가져옵니다.</summary>
      <returns>.NET Framework 버전의 표시 이름입니다.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName">
      <summary>특정 어셈블리가 컴파일된 .NET Framework 버전의 이름을 가져옵니다.</summary>
      <returns>어셈블리가 컴파일된 .NET Framework 버전의 이름입니다.</returns>
    </member>
    <member name="T:System.Security.AllowPartiallyTrustedCallersAttribute">
      <summary>부분 신뢰 코드에서 어셈블리를 호출할 수 있도록 허용합니다.이 선언이 없으면 완전히 신뢰할 수 있는 호출자만 어셈블리를 사용할 수 있습니다.이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.AllowPartiallyTrustedCallersAttribute.#ctor">
      <summary>
        <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="T:System.Security.SecurityCriticalAttribute">
      <summary>코드 또는 어셈블리가 보안에 중요한 작업을 수행하도록 지정합니다.</summary>
    </member>
    <member name="M:System.Security.SecurityCriticalAttribute.#ctor">
      <summary>
        <see cref="T:System.Security.SecurityCriticalAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="T:System.Security.SecurityException">
      <summary>보안 오류가 감지될 때 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Security.SecurityException.#ctor">
      <summary>기본 속성을 사용하여 <see cref="T:System.Security.SecurityException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.SecurityException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.Security.SecurityException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
    </member>
    <member name="M:System.Security.SecurityException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Security.SecurityException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="inner">현재 예외의 원인이 되는 예외입니다.<paramref name="inner" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="M:System.Security.SecurityException.ToString">
      <summary>현재 <see cref="T:System.Security.SecurityException" />의 표현을 반환합니다.</summary>
      <returns>현재 <see cref="T:System.Security.SecurityException" />의 문자열 표현입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.Security.SecuritySafeCriticalAttribute">
      <summary>투명 코드에서 안전하게 액세스할 수 있으며 보안에 중요한 형식 또는 멤버를 식별합니다.</summary>
    </member>
    <member name="M:System.Security.SecuritySafeCriticalAttribute.#ctor">
      <summary>
        <see cref="T:System.Security.SecuritySafeCriticalAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="T:System.Security.SecurityTransparentAttribute">
      <summary>어셈블리에 대해 권한 수준을 올릴 수 없음을 지정합니다. </summary>
    </member>
    <member name="M:System.Security.SecurityTransparentAttribute.#ctor">
      <summary>
        <see cref="T:System.Security.SecurityTransparentAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="T:System.Security.VerificationException">
      <summary>보안 정책에 형식 안전 코드가 필요한데 확인 프로세스를 통해 코드의 형식이 안전한지 확인할 수 없을 경우 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Security.VerificationException.#ctor">
      <summary>기본 속성을 사용하여 <see cref="T:System.Security.VerificationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.VerificationException.#ctor(System.String)">
      <summary>설명 메시지를 사용하여 <see cref="T:System.Security.VerificationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외가 발생한 이유를 나타내는 메시지입니다. </param>
    </member>
    <member name="M:System.Security.VerificationException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Security.VerificationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.Text.StringBuilder">
      <summary>변경할 수 있는 문자열을 나타냅니다.이 클래스는 상속될 수 없습니다.이 형식에 대 한.NET Framework 소스 코드를 찾아보려면 참조는 참조 원본.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor">
      <summary>
        <see cref="T:System.Text.StringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.Int32)">
      <summary>지정된 용량을 사용하여 <see cref="T:System.Text.StringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="capacity">이 인스턴스의 제안된 시작 크기입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" />가 0보다 작은 경우 </exception>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
      <summary>지정된 용량으로 시작되어 지정된 최대 용량까지 커질 수 있는 <see cref="T:System.Text.StringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="capacity">
        <see cref="T:System.Text.StringBuilder" />의 제안된 시작 크기입니다. </param>
      <param name="maxCapacity">현재 문자열에 포함할 수 있는 최대 문자 수입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxCapacity" />가 1보다 작거나 <paramref name="capacity" />가 0보다 작거나 <paramref name="capacity" />가 <paramref name="maxCapacity" />보다 큰 경우 </exception>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.String)">
      <summary>지정된 문자열을 사용하여 <see cref="T:System.Text.StringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">인스턴스 값을 초기화하는 데 사용되는 문자열입니다.<paramref name="value" />가 null이면 새 <see cref="T:System.Text.StringBuilder" />에 빈 문자열(<see cref="F:System.String.Empty" />)이 포함됩니다.</param>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
      <summary>지정된 문자열과 용량을 사용하여 <see cref="T:System.Text.StringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">인스턴스 값을 초기화하는 데 사용되는 문자열입니다.<paramref name="value" />가 null이면 새 <see cref="T:System.Text.StringBuilder" />에 빈 문자열(<see cref="F:System.String.Empty" />)이 포함됩니다.</param>
      <param name="capacity">
        <see cref="T:System.Text.StringBuilder" />의 제안된 시작 크기입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" />가 0보다 작은 경우 </exception>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>지정된 부분 문자열과 용량을 사용하여 <see cref="T:System.Text.StringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">이 인스턴스 값을 초기화하는 데 사용된 부분 문자열이 포함된 문자열입니다.<paramref name="value" />가 null이면 새 <see cref="T:System.Text.StringBuilder" />에 빈 문자열(<see cref="F:System.String.Empty" />)이 포함됩니다.</param>
      <param name="startIndex">
        <paramref name="value" /> 내에서 부분 문자열이 시작되는 위치입니다. </param>
      <param name="length">부분 문자열에 있는 문자의 수입니다. </param>
      <param name="capacity">
        <see cref="T:System.Text.StringBuilder" />의 제안된 시작 크기입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" />가 0보다 작은 경우또는 <paramref name="startIndex" />와 <paramref name="length" />의 합이 <paramref name="value" /> 내에 위치하지 않는 경우 </exception>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Boolean)">
      <summary>지정된 부울 값의 문자열 표현을 이 인스턴스에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 Boolean 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Byte)">
      <summary>지정된 8비트 부호 없는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char)">
      <summary>지정된 유니코드 문자의 문자열 표현을 이 인스턴스에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 유니코드 문자입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
      <summary>이 인스턴스와 지정된 된 주소에서 시작 하는 유니코드 문자의 배열에 추가 합니다. </summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다. </returns>
      <param name="value">문자 배열에 대 한 포인터입니다. </param>
      <param name="valueCount">배열에 있는 문자의 수입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="valueCount" />가 0보다 작은 경우 또는이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="value" />null 포인터가입니다. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
      <summary>유니코드 문자에 대한 문자열 표현의 지정된 복사본 수를 이 인스턴스에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 문자입니다. </param>
      <param name="repeatCount">
        <paramref name="value" />를 추가할 횟수입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="repeatCount" />가 0보다 작은 경우또는 이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <exception cref="T:System.OutOfMemoryException">메모리가 부족합니다.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char[])">
      <summary>지정된 배열의 유니코드 문자에 대한 문자열 표현을 이 인스턴스에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 문자 배열입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
      <summary>유니코드 문자의 지정된 하위 배열에 대한 문자열 표현을 이 인스턴스에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">문자 배열입니다. </param>
      <param name="startIndex">
        <paramref name="value" /> 안의 시작 위치입니다. </param>
      <param name="charCount">추가할 문자 수입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />가 null이고 <paramref name="startIndex" /> 및 <paramref name="charCount" />가 0이 아닌 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charCount" />가 0보다 작은 경우또는 <paramref name="startIndex" />가 0보다 작은 경우또는 <paramref name="startIndex" />와 <paramref name="charCount" />의 합이 <paramref name="value" />의 길이보다 큰 경우또는 이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Decimal)">
      <summary>지정된 10진수의 문자열 표현을 이 인스턴스에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Double)">
      <summary>지정된 배정밀도 부동 소수점 숫자의 문자열 표현을 이 인스턴스에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Int16)">
      <summary>지정된 16비트 부호 있는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Int32)">
      <summary>지정된 32비트 부호 있는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Int64)">
      <summary>지정된 64비트 부호 있는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Object)">
      <summary>지정된 개체의 문자열 표현을 이 인스턴스에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 개체입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.SByte)">
      <summary>지정된 8비트 부호 있는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Single)">
      <summary>지정된 단정밀도 부동 소수점 숫자의 문자열 표현을 이 인스턴스에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.String)">
      <summary>지정된 문자열의 복사본을 이 인스턴스의 끝에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 문자열입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
      <summary>지정된 부분 문자열의 복사본을 이 인스턴스에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 부분 문자열이 들어 있는 문자열입니다. </param>
      <param name="startIndex">
        <paramref name="value" />에 있는 부분 문자열의 시작 위치입니다. </param>
      <param name="count">
        <paramref name="value" />에서 추가할 문자 수입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />가 null이고 <paramref name="startIndex" /> 및 <paramref name="count" />가 0이 아닌 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작은 경우또는 <paramref name="startIndex" />가 0보다 작은 경우또는 <paramref name="startIndex" />와 <paramref name="count" />의 합이 <paramref name="value" />의 길이보다 큰 경우또는 이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.UInt16)">
      <summary>지정된 16비트 부호 없는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.UInt32)">
      <summary>지정된 32비트 부호 없는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.UInt64)">
      <summary>지정된 64비트 부호 없는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
      <summary>서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.지정된 형식 공급자를 사용하여 각 서식 항목이 단일 인수의 문자열 표현으로 바뀝니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.추가 작업 후이 인스턴스에 포함의 복사본이 접미사로 작업 전에 있던 데이터는 <paramref name="format" /> 서식 지정에서 사양은의 문자열 표현으로 바뀝니다 <paramref name="arg0" />.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <param name="format">합성 형식 문자열입니다(설명 부분 참조). </param>
      <param name="arg0">형식을 지정할 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />가 null인 경우 </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" />이(가) 잘못되었습니다. 또는형식 항목의 인덱스는 0 (영) 보다 작고 또는 보다 크거나 같은 일 (1). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">확장된 문자열 길이는 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과합니다. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
      <summary>서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.지정된 형식 공급자를 사용하여 각 형식 항목이 두 인수 중 하나의 문자열 표현으로 바뀝니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.추가 작업 후, 이 인스턴스에는 추가 작업 이전부터 있던 데이터가 포함되고 그 뒤에 형식 사양이 해당하는 개체 인수의 문자열 표현으로 바뀐 <paramref name="format" />의 복사본이 포함됩니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <param name="format">합성 형식 문자열입니다(설명 부분 참조). </param>
      <param name="arg0">형식을 지정할 첫 번째 개체입니다. </param>
      <param name="arg1">형식을 지정할 두 번째 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />가 null인 경우 </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" />이(가) 잘못되었습니다. 또는형식 항목의 인덱스는 0 (영) 보다 작고 또는 (2) 2 보다 크거나 합니다. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">확장된 문자열 길이는 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과합니다. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
      <summary>서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.지정된 형식 공급자를 사용하여 각 형식 항목이 세 인수 중 하나의 문자열 표현으로 바뀝니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.추가 작업 후, 이 인스턴스에는 추가 작업 이전부터 있던 데이터가 포함되고 그 뒤에 형식 사양이 해당하는 개체 인수의 문자열 표현으로 바뀐 <paramref name="format" />의 복사본이 포함됩니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <param name="format">합성 형식 문자열입니다(설명 부분 참조). </param>
      <param name="arg0">형식을 지정할 첫 번째 개체입니다. </param>
      <param name="arg1">형식을 지정할 두 번째 개체입니다. </param>
      <param name="arg2">형식을 지정할 세 번째 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />가 null인 경우 </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" />이(가) 잘못되었습니다. 또는형식 항목의 인덱스는 0 (영) 보다 작고 또는 보다 크거나 같은 3 (3). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">확장된 문자열 길이는 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과합니다. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
      <summary>서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.각 서식 항목은 지정된 서식 공급자를 사용하여 매개 변수 배열에 있는 해당 인수의 문자열 표현으로 바뀝니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.추가 작업 후, 이 인스턴스에는 추가 작업 이전부터 있던 데이터가 포함되고 그 뒤에 형식 사양이 해당하는 개체 인수의 문자열 표현으로 바뀐 <paramref name="format" />의 복사본이 포함됩니다.</returns>
      <param name="provider">문화권별 서식 지정 정보를 제공하는 개체입니다. </param>
      <param name="format">합성 형식 문자열입니다(설명 부분 참조). </param>
      <param name="args">형식을 지정할 개체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />가 null인 경우 </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" />이(가) 잘못되었습니다. 또는서식 항목의 인덱스가 0보다 작거나 <paramref name="args" /> 배열의 길이보다 크거나 같습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">확장된 문자열 길이는 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과합니다. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
      <summary>서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.각 서식 항목이 단일 인수의 문자열 표현으로 바뀝니다.</summary>
      <returns>
        <paramref name="format" />이 추가된 이 인스턴스에 대한 참조입니다.<paramref name="format" />의 각 서식 항목이 <paramref name="arg0" />의 문자열 표현으로 바뀝니다.</returns>
      <param name="format">합성 형식 문자열입니다(설명 부분 참조). </param>
      <param name="arg0">형식을 지정할 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />가 null인 경우 </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" />이(가) 잘못되었습니다. 또는형식 항목의 인덱스는 0(영)보다 작고, 또는 1보다 크거나 같습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">확장된 문자열 길이는 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과합니다. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
      <summary>서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.각 서식 항목이 두 인수 중 하나의 문자열 표현으로 바뀝니다.</summary>
      <returns>
        <paramref name="format" />이 추가된 이 인스턴스에 대한 참조입니다.<paramref name="format" />의 각 서식 항목은 해당 개체 인수의 문자열 표현으로 바뀝니다.</returns>
      <param name="format">합성 형식 문자열입니다(설명 부분 참조). </param>
      <param name="arg0">형식을 지정할 첫 번째 개체입니다. </param>
      <param name="arg1">형식을 지정할 두 번째 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />가 null인 경우 </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" />이(가) 잘못되었습니다.또는형식 항목의 인덱스는 0(영)보다 작고, 또는 2보다 크거나 같습니다. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">확장된 문자열 길이는 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과합니다. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
      <summary>서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.각 서식 항목이 세 인수 중 하나의 문자열 표현으로 바뀝니다.</summary>
      <returns>
        <paramref name="format" />이 추가된 이 인스턴스에 대한 참조입니다.<paramref name="format" />의 각 서식 항목은 해당 개체 인수의 문자열 표현으로 바뀝니다.</returns>
      <param name="format">합성 형식 문자열입니다(설명 부분 참조). </param>
      <param name="arg0">형식을 지정할 첫 번째 개체입니다. </param>
      <param name="arg1">형식을 지정할 두 번째 개체입니다. </param>
      <param name="arg2">형식을 지정할 세 번째 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />가 null인 경우 </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" />이(가) 잘못되었습니다.또는형식 항목의 인덱스는 0(영)보다 작고, 또는 3보다 크거나 같습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">확장된 문자열 길이는 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과합니다. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
      <summary>서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.각 형식 항목은 매개 변수 배열에 있는 해당 인수의 문자열 표현으로 바뀝니다.</summary>
      <returns>
        <paramref name="format" />이 추가된 이 인스턴스에 대한 참조입니다.<paramref name="format" />의 각 서식 항목은 해당 개체 인수의 문자열 표현으로 바뀝니다.</returns>
      <param name="format">합성 형식 문자열입니다(설명 부분 참조). </param>
      <param name="args">형식을 지정할 개체의 배열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> 또는 <paramref name="args" />가 null인 경우 </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" />이(가) 잘못되었습니다. 또는서식 항목의 인덱스가 0보다 작거나 <paramref name="args" /> 배열의 길이보다 크거나 같습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">확장된 문자열 길이는 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과합니다. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendLine">
      <summary>현재 <see cref="T:System.Text.StringBuilder" /> 개체의 끝에 기본 줄 종결자를 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendLine(System.String)">
      <summary>현재 <see cref="T:System.Text.StringBuilder" /> 개체의 끝에 지정한 문자열의 복사본과 기본 줄 종결자를 차례로 추가합니다.</summary>
      <returns>추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="value">추가할 문자열입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.Capacity">
      <summary>현재 인스턴스에 의해 할당된 메모리에 포함할 수 있는 최대 문자 수를 가져오거나 설정합니다.</summary>
      <returns>현재 인스턴스에 의해 할당된 메모리에 포함할 수 있는 최대 문자 수입니다.해당 값의 범위는 <see cref="P:System.Text.StringBuilder.Length" /> 를 <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Set 작업에 지정된 값이 이 인스턴스의 현재 길이보다 작은 경우또는 Set 작업에 지정된 값이 최대 용량보다 큰 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.Chars(System.Int32)">
      <summary>이 인스턴트에서 특정 위치에 있는 문자를 가져오거나 설정합니다.</summary>
      <returns>
        <paramref name="index" /> 위치에 있는 유니코드 문자입니다.</returns>
      <param name="index">문자의 위치입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">문자를 설정할 때 <paramref name="index" />가 이 인스턴스의 경계를 벗어나는 경우 </exception>
      <exception cref="T:System.IndexOutOfRangeException">문자를 가져올 때 <paramref name="index" />가 이 인스턴스의 경계를 벗어나는 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Clear">
      <summary>현재 <see cref="T:System.Text.StringBuilder" /> 인스턴스에서 모든 문자를 제거합니다.</summary>
      <returns>
        <see cref="P:System.Text.StringBuilder.Length" />가 0인 개체입니다.</returns>
    </member>
    <member name="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>이 인스턴스에서 지정한 세그먼트의 문자를 대상 <see cref="T:System.Char" /> 배열에서 지정한 세그먼트에 복사합니다.</summary>
      <param name="sourceIndex">이 인스턴스에서 문자가 복사되기 시작하는 위치입니다.인덱스는 0부터 시작합니다.</param>
      <param name="destination">문자가 복사될 배열입니다.</param>
      <param name="destinationIndex">
        <paramref name="destination" />에서 문자 복사가 시작될 위치입니다.인덱스는 0부터 시작합니다.</param>
      <param name="count">복사될 문자 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" />, <paramref name="destinationIndex" /> 또는 <paramref name="count" />가 0보다 작은 경우또는<paramref name="sourceIndex" />가 이 인스턴스의 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceIndex" />와 <paramref name="count" />의 합이 이 인스턴스의 길이보다 큰 경우또는<paramref name="destinationIndex" />와 <paramref name="count" />의 합이 <paramref name="destination" />의 길이보다 큰 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
      <summary>이 <see cref="T:System.Text.StringBuilder" /> 인스턴스의 용량이 최소한 지정된 값이 되도록 합니다.</summary>
      <returns>이 인스턴스의 새 용량입니다.</returns>
      <param name="capacity">확보할 최소 용량입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" />가 0보다 작은 경우또는 이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
      <summary>이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <returns>이 인스턴스와 <paramref name="sb" />에 같은 문자열, <see cref="P:System.Text.StringBuilder.Capacity" /> 및 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 값이 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="sb">이 인스턴스와 비교할 개체 또는 null입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
      <summary>지정된 문자 위치에 있는 이 인스턴스에 부울 값의 문자열 표현을 삽입합니다.</summary>
      <returns>삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="index">삽입을 시작할 인스턴스 내의 위치입니다. </param>
      <param name="value">삽입할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 이 인스턴스의 길이보다 큰 경우</exception>
      <exception cref="T:System.OutOfMemoryException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
      <summary>지정된 8비트 부호 없는 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</summary>
      <returns>삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="index">삽입을 시작할 인스턴스 내의 위치입니다. </param>
      <param name="value">삽입할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 이 인스턴스의 길이보다 큰 경우 </exception>
      <exception cref="T:System.OutOfMemoryException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
      <summary>지정된 유니코드 문자의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</summary>
      <returns>삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="index">삽입을 시작할 인스턴스 내의 위치입니다. </param>
      <param name="value">삽입할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 이 인스턴스의 길이보다 큰 경우또는 이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
      <summary>지정된 유니코드 문자 배열의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</summary>
      <returns>삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="index">삽입을 시작할 인스턴스 내의 위치입니다. </param>
      <param name="value">삽입할 문자 배열입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 이 인스턴스의 길이보다 큰 경우또는 이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>유니코드 문자의 지정된 하위 배열에 대한 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</summary>
      <returns>삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="index">삽입을 시작할 인스턴스 내의 위치입니다. </param>
      <param name="value">문자 배열입니다. </param>
      <param name="startIndex">
        <paramref name="value" /> 내의 시작 인덱스입니다. </param>
      <param name="charCount">삽입할 문자 수입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />가 null이고 <paramref name="startIndex" /> 및 <paramref name="charCount" />가 0이 아닌 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />, <paramref name="startIndex" /> 또는 <paramref name="charCount" />가 0보다 작은 경우또는 <paramref name="index" />가 이 인스턴스의 길이보다 큰 경우또는 <paramref name="startIndex" />와 <paramref name="charCount" />의 합이 <paramref name="value" /> 내에 위치하지 않는 경우또는 이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
      <summary>10진수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</summary>
      <returns>삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="index">삽입을 시작할 인스턴스 내의 위치입니다. </param>
      <param name="value">삽입할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 이 인스턴스의 길이보다 큰 경우 </exception>
      <exception cref="T:System.OutOfMemoryException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
      <summary>배정밀도 부동 소수점 숫자의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</summary>
      <returns>삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="index">삽입을 시작할 인스턴스 내의 위치입니다. </param>
      <param name="value">삽입할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 이 인스턴스의 길이보다 큰 경우 </exception>
      <exception cref="T:System.OutOfMemoryException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
      <summary>지정된 16비트 부호 있는 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</summary>
      <returns>삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="index">삽입을 시작할 인스턴스 내의 위치입니다. </param>
      <param name="value">삽입할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 이 인스턴스의 길이보다 큰 경우 </exception>
      <exception cref="T:System.OutOfMemoryException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
      <summary>지정된 32비트 부호 있는 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</summary>
      <returns>삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="index">삽입을 시작할 인스턴스 내의 위치입니다. </param>
      <param name="value">삽입할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 이 인스턴스의 길이보다 큰 경우 </exception>
      <exception cref="T:System.OutOfMemoryException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
      <summary>부호 있는 64비트 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</summary>
      <returns>삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="index">삽입을 시작할 인스턴스 내의 위치입니다. </param>
      <param name="value">삽입할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 이 인스턴스의 길이보다 큰 경우 </exception>
      <exception cref="T:System.OutOfMemoryException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
      <summary>개체의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</summary>
      <returns>삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="index">삽입을 시작할 인스턴스 내의 위치입니다. </param>
      <param name="value">삽입할 개체이거나 null입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 이 인스턴스의 길이보다 큰 경우 </exception>
      <exception cref="T:System.OutOfMemoryException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
      <summary>지정된 8비트 부호 있는 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</summary>
      <returns>삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="index">삽입을 시작할 인스턴스 내의 위치입니다. </param>
      <param name="value">삽입할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 이 인스턴스의 길이보다 큰 경우 </exception>
      <exception cref="T:System.OutOfMemoryException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
      <summary>단정밀도 부동 소수점 숫자의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</summary>
      <returns>삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="index">삽입을 시작할 인스턴스 내의 위치입니다. </param>
      <param name="value">삽입할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 이 인스턴스의 길이보다 큰 경우 </exception>
      <exception cref="T:System.OutOfMemoryException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
      <summary>문자열을 지정한 인덱스에 있는 이 인스턴스에 삽입합니다.</summary>
      <returns>삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="index">삽입을 시작할 인스턴스 내의 위치입니다. </param>
      <param name="value">삽입할 문자열입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 이 인스턴스의 현재 길이보다 큰 경우 또는이 <see cref="T:System.Text.StringBuilder" /> 개체의 현재 길이와 <paramref name="value" />의 길이를 더한 값이 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과하는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
      <summary>지정된 하나 이상의 문자열의 복사본을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</summary>
      <returns>삽입 작업이 완료한 후에 이 인스턴스에 대한 참조입니다.</returns>
      <param name="index">삽입을 시작할 인스턴스 내의 위치입니다. </param>
      <param name="value">삽입할 문자열입니다. </param>
      <param name="count">
        <paramref name="value" />를 삽입할 횟수입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 이 인스턴스의 현재 길이보다 큰 경우또는 <paramref name="count" />가 0보다 작은 경우 </exception>
      <exception cref="T:System.OutOfMemoryException">
        <paramref name="value" />의 길이에 <paramref name="count" />를 곱한 값과 이 <see cref="T:System.Text.StringBuilder" /> 개체의 현재 길이를 더한 값이 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과하는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
      <summary>부호 없는 16비트 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</summary>
      <returns>삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="index">삽입을 시작할 인스턴스 내의 위치입니다. </param>
      <param name="value">삽입할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 이 인스턴스의 길이보다 큰 경우 </exception>
      <exception cref="T:System.OutOfMemoryException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
      <summary>부호 없는 32비트 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</summary>
      <returns>삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="index">삽입을 시작할 인스턴스 내의 위치입니다. </param>
      <param name="value">삽입할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 이 인스턴스의 길이보다 큰 경우 </exception>
      <exception cref="T:System.OutOfMemoryException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
      <summary>부호 없는 64비트 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</summary>
      <returns>삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="index">삽입을 시작할 인스턴스 내의 위치입니다. </param>
      <param name="value">삽입할 값입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 이 인스턴스의 길이보다 큰 경우 </exception>
      <exception cref="T:System.OutOfMemoryException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.Length">
      <summary>현재 <see cref="T:System.Text.StringBuilder" /> 개체의 길이를 가져오거나 설정합니다.</summary>
      <returns>이 인스턴스의 길이입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">설정된 값이 0보다 작거나 <see cref="P:System.Text.StringBuilder.MaxCapacity" />보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.MaxCapacity">
      <summary>이 인스턴스의 최대 용량을 가져옵니다.</summary>
      <returns>이 인스턴스가 보유할 수 있는 최대 문자 수입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
      <summary>이 인스턴스에서 지정된 문자 범위를 제거합니다.</summary>
      <returns>삭제 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</returns>
      <param name="startIndex">이 인스턴스 내에서 제거를 시작할 위치(0에서 시작)입니다. </param>
      <param name="length">제거할 문자 수입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> 또는 <paramref name="length" />가 0보다 작거나 <paramref name="startIndex" />와 <paramref name="length" />의 합이 이 인스턴스의 길이보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
      <summary>이 인스턴스에서 발견되는 지정된 문자를 지정된 다른 문자로 모두 바꿉니다.</summary>
      <returns>
        <paramref name="oldChar" />가 <paramref name="newChar" />로 바뀐 이 인스턴스에 대한 참조입니다.</returns>
      <param name="oldChar">바꿀 문자입니다. </param>
      <param name="newChar">
        <paramref name="oldChar" />를 바꾸는 문자입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
      <summary>이 인스턴스의 부분 문자열에서 발견되는 지정된 문자를 지정된 다른 문자로 모두 바꿉니다.</summary>
      <returns>
        <paramref name="oldChar" />가 <paramref name="startIndex" />에서부터 <paramref name="startIndex" />와 <paramref name="count" />를 더한 값에서 1을 뺀 범위에 있는 <paramref name="newChar" />로 바뀐 이 인스턴스에 대한 참조입니다.</returns>
      <param name="oldChar">바꿀 문자입니다. </param>
      <param name="newChar">
        <paramref name="oldChar" />를 바꾸는 문자입니다. </param>
      <param name="startIndex">부분 문자열이 시작되는 인스턴스 내의 위치입니다. </param>
      <param name="count">부분 문자열의 길이입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />와 <paramref name="count" />의 합이 이 인스턴스 값의 길이보다 큰 경우또는 <paramref name="startIndex" /> 또는 <paramref name="count" />가 0보다 작은 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.String,System.String)">
      <summary>이 인스턴스에서 발견되는 지정된 문자열을 지정된 다른 문자열로 모두 바꿉니다.</summary>
      <returns>
        <paramref name="oldValue" />의 모든 인스턴스가 <paramref name="newValue" />로 바뀐 이 인스턴스에 대한 참조입니다.</returns>
      <param name="oldValue">바꿀 문자열입니다. </param>
      <param name="newValue">
        <paramref name="oldValue" />를 바꾸는 문자열이거나 null입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oldValue" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="oldValue" />의 길이가 0인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary>이 인스턴스의 부분 문자열에서 발견되는 지정된 문자열을 지정된 다른 문자열로 모두 바꿉니다.</summary>
      <returns>
        <paramref name="oldValue" />의 모든 인스턴스가 <paramref name="startIndex" />에서 <paramref name="startIndex" />와 <paramref name="count" />의 합에서 1을 뺀 값 사이에 있는 <paramref name="newValue" />로 바뀐 이 인스턴스에 대한 참조입니다.</returns>
      <param name="oldValue">바꿀 문자열입니다. </param>
      <param name="newValue">
        <paramref name="oldValue" />를 바꾸는 문자열이거나 null입니다. </param>
      <param name="startIndex">부분 문자열이 시작되는 인스턴스 내의 위치입니다. </param>
      <param name="count">부분 문자열의 길이입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oldValue" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="oldValue" />의 길이가 0인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> 또는 <paramref name="count" />가 0보다 작은 경우또는 <paramref name="startIndex" />와 <paramref name="count" />의 합이 이 인스턴스 내에 있지 않은 문자 위치를 나타내는 경우또는 이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과할 수 있는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.ToString">
      <summary>이 인스턴스의 값을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns>이 인스턴스와 같은 값을 가진 문자열입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
      <summary>이 인스턴스의 부분 문자열 값을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns>이 인스턴스의 지정된 부분 문자열과 같은 값을 가진 문자열입니다.</returns>
      <param name="startIndex">이 인스턴스에 있는 부분 문자열의 시작 위치입니다. </param>
      <param name="length">부분 문자열의 길이입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> 또는 <paramref name="length" />가 0보다 작은 경우또는 <paramref name="startIndex" />와 <paramref name="length" />의 합이 현재 인스턴스의 길이보다 큰 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Threading.LazyThreadSafetyMode">
      <summary>
        <see cref="T:System.Lazy`1" /> 인스턴스가 여러 스레드 간 액세스를 동기화하는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Threading.LazyThreadSafetyMode.ExecutionAndPublication">
      <summary>잠금은 단일 스레드만 <see cref="T:System.Lazy`1" /> 인스턴스를 스레드로부터 안전한 방식으로 초기화할 수 있도록 하는 데 사용됩니다.초기화 메서드(초기화 메서드가 없는 경우에는 기본 생성자)가 내부적으로 잠금을 사용하는 경우 교착 상태가 발생할 수 있습니다.초기화 메서드(<paramref name="valueFactory" /> 매개 변수)를 지정하는 <see cref="T:System.Lazy`1" /> 생성자를 사용하고 <see cref="P:System.Lazy`1.Value" /> 속성을 처음 호출할 때 이 초기화 메서드가 예외를 throw하거나 예외를 처리하지 못하면 예외가 캐시되고 이후에 <see cref="P:System.Lazy`1.Value" /> 속성을 호출할 때 다시 throw됩니다.초기화 메서드를 지정하지 않는 <see cref="T:System.Lazy`1" /> 생성자를 사용할 경우에는 <paramref name="T" />에 대한 기본 생성자에서 throw되는 예외가 캐시되지 않습니다.이 경우 이후에 <see cref="P:System.Lazy`1.Value" /> 속성을 호출할 때 <see cref="T:System.Lazy`1" /> 인스턴스가 성공적으로 초기화될 수도 있습니다.초기화 메서드가 <see cref="T:System.Lazy`1" /> 인스턴스의 <see cref="P:System.Lazy`1.Value" /> 속성에 재귀적으로 액세스하면 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</summary>
    </member>
    <member name="F:System.Threading.LazyThreadSafetyMode.None">
      <summary>
        <see cref="T:System.Lazy`1" /> 인스턴스는 스레드로부터 안전하지 않으므로 여러 스레드에서 인스턴스에 액세스할 경우 해당 인스턴스의 동작이 정의되지 않습니다.높은 성능이 중요하고 <see cref="T:System.Lazy`1" /> 인스턴스가 절대 두 개 이상의 스레드에서 초기화되지 않을 것임이 확실한 경우에만 이 모드를 사용하십시오.초기화 메서드(<paramref name="valueFactory" /> 매개 변수)를 지정하는 <see cref="T:System.Lazy`1" /> 생성자를 사용하고 <see cref="P:System.Lazy`1.Value" /> 속성을 처음 호출할 때 이 초기화 메서드가 예외를 throw하거나 예외를 처리하지 못하면 예외가 캐시되고 이후에 <see cref="P:System.Lazy`1.Value" /> 속성을 호출할 때 다시 throw됩니다.초기화 메서드를 지정하지 않는 <see cref="T:System.Lazy`1" /> 생성자를 사용할 경우에는 <paramref name="T" />에 대한 기본 생성자에서 throw되는 예외가 캐시되지 않습니다.이 경우 이후에 <see cref="P:System.Lazy`1.Value" /> 속성을 호출할 때 <see cref="T:System.Lazy`1" /> 인스턴스가 성공적으로 초기화될 수도 있습니다.초기화 메서드가 <see cref="T:System.Lazy`1" /> 인스턴스의 <see cref="P:System.Lazy`1.Value" /> 속성에 재귀적으로 액세스하면 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</summary>
    </member>
    <member name="F:System.Threading.LazyThreadSafetyMode.PublicationOnly">
      <summary>여러 스레드에서 <see cref="T:System.Lazy`1" /> 인스턴스를 동시에 초기화하려고 하면 모든 스레드에서 초기화 메서드(초기화 메서드가 없는 경우 기본 생성자)를 실행할 수 있습니다.초기화를 완료하는 첫 번째 스레드가 <see cref="T:System.Lazy`1" /> 인스턴스의 값을 설정합니다.해당 스레드에서 초기화 메서드가 예외를 throw하지 않으면 이 값은 동시에 초기화 메서드를 실행 중이던 다른 모든 스레드에 반환됩니다.경쟁 스레드에서 만든 <paramref name="T" />의 인스턴스는 모두 삭제됩니다.임의의 스레드에서 초기화 메서드가 예외를 throw하면 해당 스레드의 <see cref="P:System.Lazy`1.Value" /> 속성에서 예외가 전파됩니다.예외가 캐시되지 않습니다.<see cref="P:System.Lazy`1.IsValueCreated" /> 속성의 값이 false로 유지되고 이후에 예외가 throw된 스레드 또는 다른 스레드에서 <see cref="P:System.Lazy`1.Value" /> 속성을 호출하면 초기화 메서드가 다시 실행됩니다.초기화 메서드가 <see cref="T:System.Lazy`1" /> 인스턴스의 <see cref="P:System.Lazy`1.Value" /> 속성에 재귀적으로 액세스하면 예외가 throw되지 않습니다.</summary>
    </member>
    <member name="T:System.Threading.Timeout">
      <summary>무한 시간 제한 간격을 지정하는 상수를 포함합니다.이 클래스는 상속될 수 없습니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Threading.Timeout.Infinite">
      <summary>
        <see cref="T:System.Int32" /> 매개 변수를 허용하는 스레딩 메서드의 경우 무한 대기 기간을 지정하는 데 사용되는 상수입니다. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Threading.Timeout.InfiniteTimeSpan">
      <summary>
        <see cref="T:System.TimeSpan" /> 매개 변수를 허용하는 메서드의 경우 무한 대기 기간을 지정하는 데 사용되는 상수입니다.</summary>
    </member>
    <member name="T:System.Threading.WaitHandle">
      <summary>공유 리소스에 대한 단독 액세스를 기다리는 운영 체제 관련 개체를 캡슐화합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.#ctor">
      <summary>
        <see cref="T:System.Threading.WaitHandle" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Threading.WaitHandle.Dispose">
      <summary>
        <see cref="T:System.Threading.WaitHandle" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Threading.WaitHandle.Dispose(System.Boolean)">
      <summary>파생 클래스에서 재정의된 경우 <see cref="T:System.Threading.WaitHandle" />에서 사용하는 관리되지 않는 리소스를 해제하고 필요에 따라 관리되는 리소스를 해제합니다.</summary>
      <param name="explicitDisposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 true로 설정하고, 관리되지 않는 리소스만 해제하려면 false로 설정합니다. </param>
    </member>
    <member name="F:System.Threading.WaitHandle.InvalidHandle">
      <summary>유효하지 않은 네이티브 운영 체제 핸들을 나타냅니다.이 필드는 읽기 전용입니다.</summary>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])">
      <summary>지정된 배열의 모든 요소가 신호를 받기를 기다립니다.</summary>
      <returns>
        <paramref name="waitHandles" />의 모든 요소가 신호를 받으면 true를 반환하고, 그렇지 않으면 아무 값도 반환하지 않습니다.</returns>
      <param name="waitHandles">현재 인스턴스에서 기다릴 개체가 포함된 WaitHandle 배열입니다.이 배열에는 같은 개체에 대한 여러 개의 참조가 포함될 수 없습니다.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array are null. -or-<paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</exception>
      <exception cref="T:System.DuplicateWaitObjectException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.The <paramref name="waitHandles" /> array contains elements that are duplicates. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.-or- The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element. </exception>
      <exception cref="T:System.ApplicationException">
        <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait terminated because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)">
      <summary>시간 간격을 지정하는 <see cref="T:System.Int32" /> 값을 사용하여 지정된 배열의 모든 요소가 신호를 받기를 기다립니다.</summary>
      <returns>
        <paramref name="waitHandles" />에 있는 모든 요소가 신호를 받으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="waitHandles">현재 인스턴스에서 기다릴 개체가 포함된 WaitHandle 배열입니다.이 배열에는 같은 개체(중복 개체)에 대한 여러 개의 참조가 포함될 수 없습니다.</param>
      <param name="millisecondsTimeout">대기할 시간(밀리초)이거나, 무기한 대기할 경우 <see cref="F:System.Threading.Timeout.Infinite" />(-1)입니다. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or- One or more of the objects in the <paramref name="waitHandles" /> array is null. -or-<paramref name="waitHandles" /> is an array with no elements. </exception>
      <exception cref="T:System.DuplicateWaitObjectException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.The <paramref name="waitHandles" /> array contains elements that are duplicates. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.-or- The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)">
      <summary>
        <see cref="T:System.TimeSpan" /> 값을 사용하여 시간 간격을 지정함으로써 지정된 배열의 모든 요소가 신호를 받기를 기다립니다.</summary>
      <returns>
        <paramref name="waitHandles" />에 있는 모든 요소가 신호를 받으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="waitHandles">현재 인스턴스에서 기다릴 개체가 포함된 WaitHandle 배열입니다.이 배열에는 같은 개체에 대한 여러 개의 참조가 포함될 수 없습니다.</param>
      <param name="timeout">대기할 시간(밀리초)을 나타내는 <see cref="T:System.TimeSpan" />이거나, 무한 대기하도록 -1밀리초를 나타내는 <see cref="T:System.TimeSpan" />입니다. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null. -or- One or more of the objects in the <paramref name="waitHandles" /> array is null. -or-<paramref name="waitHandles" /> is an array with no elements. </exception>
      <exception cref="T:System.DuplicateWaitObjectException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.The <paramref name="waitHandles" /> array contains elements that are duplicates. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.-or- The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out. -or-<paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait terminated because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])">
      <summary>지정된 배열의 모든 요소가 신호를 받기를 기다립니다.</summary>
      <returns>대기를 만족한 개체의 배열 인덱스입니다.</returns>
      <param name="waitHandles">현재 인스턴스에서 기다릴 개체가 포함된 WaitHandle 배열입니다. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array is null. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits. </exception>
      <exception cref="T:System.ApplicationException">
        <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later. </exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)">
      <summary>부호 있는 32비트 정수를 사용하여 시간 간격을 지정함으로써 지정된 배열의 임의 요소가 신호를 받기를 기다립니다.</summary>
      <returns>대기를 만족하는 개체의 배열 인덱스이거나 대기를 만족하는 개체가 없고 <paramref name="millisecondsTimeout" />과 동일한 시간 간격이 전달된 경우 <see cref="F:System.Threading.WaitHandle.WaitTimeout" />입니다.</returns>
      <param name="waitHandles">현재 인스턴스에서 기다릴 개체가 포함된 WaitHandle 배열입니다. </param>
      <param name="millisecondsTimeout">대기할 시간(밀리초)이거나, 무기한 대기할 경우 <see cref="F:System.Threading.Timeout.Infinite" />(-1)입니다. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array is null. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="waitHandles" /> is an array with no elements. </exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)">
      <summary>
        <see cref="T:System.TimeSpan" />을 사용하여 시간 간격을 지정함으로써 지정된 배열의 임의 요소가 신호를 받기를 기다립니다.</summary>
      <returns>대기를 만족하는 개체의 배열 인덱스이거나 대기를 만족하는 개체가 없고 <paramref name="timeout" />과 동일한 시간 간격이 전달된 경우 <see cref="F:System.Threading.WaitHandle.WaitTimeout" />입니다.</returns>
      <param name="waitHandles">현재 인스턴스에서 기다릴 개체가 포함된 WaitHandle 배열입니다. </param>
      <param name="timeout">대기할 시간(밀리초)을 나타내는 <see cref="T:System.TimeSpan" />이거나, 무한 대기하도록 -1밀리초를 나타내는 <see cref="T:System.TimeSpan" />입니다. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array is null. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out. -or-<paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="waitHandles" /> is an array with no elements. </exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitOne">
      <summary>현재 <see cref="T:System.Threading.WaitHandle" />이(가) 신호를 받을 때까지 현재 스레드를 차단합니다.</summary>
      <returns>현재 인스턴스가 신호를 받으면 true을(를) 반환합니다.현재 인스턴스가 신호를 받지 않으면 <see cref="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />은(는) 아무 값도 반환하지 않습니다.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitOne(System.Int32)">
      <summary>부호 있는 32비트 정수로 시간 간격(밀리초)을 지정하여 현재 <see cref="T:System.Threading.WaitHandle" />이 신호를 받을 때까지 현재 스레드를 차단합니다.</summary>
      <returns>현재 인스턴스가 신호를 받으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="millisecondsTimeout">대기할 시간(밀리초)이거나, 무기한 대기할 경우 <see cref="F:System.Threading.Timeout.Infinite" />(-1)입니다. </param>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)">
      <summary>
        <see cref="T:System.TimeSpan" />로 시간 간격을 지정하여 현재 인스턴스가 신호를 받을 때까지 현재 스레드를 차단합니다.</summary>
      <returns>현재 인스턴스가 신호를 받으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="timeout">대기할 시간(밀리초)을 나타내는 <see cref="T:System.TimeSpan" />이거나, 무한 대기하도록 -1밀리초를 나타내는 <see cref="T:System.TimeSpan" />입니다. </param>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.-or-<paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="F:System.Threading.WaitHandle.WaitTimeout">
      <summary>대기 핸들이 신호를 받기 전에 <see cref="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" /> 작업이 제한 시간을 초과했음을 나타냅니다.이 필드는 상수입니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
  </members>
</doc>