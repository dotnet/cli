<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime</name>
  </assembly>
  <members>
    <member name="T:System.Action">
      <summary>Encapsule une méthode n'ayant aucun paramètre et ne retournant aucune valeur.</summary>
    </member>
    <member name="M:System.Action.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action.BeginInvoke(System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action.Invoke"></member>
    <member name="T:System.Action`1">
      <summary>Encapsule une méthode ayant un seul paramètre et ne retournant aucune valeur.Pour parcourir le code source .NET Framework correspondant à ce type, consultez la Source de référence.</summary>
      <typeparam name="T">Type du paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Action`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`1.BeginInvoke(`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`1.Invoke(`0)"></member>
    <member name="T:System.Action`10">
      <summary>Encapsule une méthode ayant 10 paramètres et ne retournant aucune valeur.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T9">Type du neuvième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T10">Type du dixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`10.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`10.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`10.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`10.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)"></member>
    <member name="T:System.Action`11">
      <summary>Encapsule une méthode ayant 11 paramètres et ne retournant aucune valeur.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T9">Type du neuvième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T10">Type du dixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T11">Type du onzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`11.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`11.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`11.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`11.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)"></member>
    <member name="T:System.Action`12">
      <summary>Encapsule une méthode ayant 12 paramètres et ne retournant aucune valeur.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T9">Type du neuvième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T10">Type du dixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T11">Type du onzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T12">Type du douzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`12.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`12.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`12.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`12.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)"></member>
    <member name="T:System.Action`13">
      <summary>Encapsule une méthode ayant 13 paramètres et ne retournant aucune valeur.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T9">Type du neuvième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T10">Type du dixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T11">Type du onzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T12">Type du douzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T13">Type du treizième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`13.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`13.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`13.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`13.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)"></member>
    <member name="T:System.Action`14">
      <summary>Encapsule une méthode ayant 14 paramètres et ne retournant aucune valeur.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T9">Type du neuvième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T10">Type du dixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T11">Type du onzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T12">Type du douzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T13">Type du treizième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T14">Type du quatorzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`14.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`14.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`14.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`14.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)"></member>
    <member name="T:System.Action`15">
      <summary>Encapsule une méthode ayant 15 paramètres et ne retournant aucune valeur.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T9">Type du neuvième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T10">Type du dixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T11">Type du onzième paramètre de la méthode encapsulée par ce délégué. </typeparam>
      <typeparam name="T12">Type du douzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T13">Type du treizième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T14">Type du quatorzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T15">Type du quinzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`15.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`15.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`15.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`15.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)"></member>
    <member name="T:System.Action`16">
      <summary>Encapsule une méthode ayant 16 paramètres et ne retournant aucune valeur.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T9">Type du neuvième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T10">Type du dixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T11">Type du onzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T12">Type du douzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T13">Type du treizième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T14">Type du quatorzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T15">Type du quinzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T16">Type du seizième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`16.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`16.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`16.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`16.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)"></member>
    <member name="T:System.Action`2">
      <summary>Encapsule une méthode ayant deux paramètres et ne retournant aucune valeur.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`2.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`2.BeginInvoke(`0,`1,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`2.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`2.Invoke(`0,`1)"></member>
    <member name="T:System.Action`3">
      <summary>Encapsule une méthode ayant trois paramètres et ne retournant aucune valeur.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`3.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`3.BeginInvoke(`0,`1,`2,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`3.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`3.Invoke(`0,`1,`2)"></member>
    <member name="T:System.Action`4">
      <summary>Encapsule une méthode ayant quatre paramètres et ne retournant aucune valeur.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`4.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`4.BeginInvoke(`0,`1,`2,`3,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`4.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`4.Invoke(`0,`1,`2,`3)"></member>
    <member name="T:System.Action`5">
      <summary>Encapsule une méthode ayant cinq paramètres et ne retournant aucune valeur.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`5.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`5.BeginInvoke(`0,`1,`2,`3,`4,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`5.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`5.Invoke(`0,`1,`2,`3,`4)"></member>
    <member name="T:System.Action`6">
      <summary>Encapsule une méthode ayant six paramètres et ne retournant aucune valeur.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`6.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`6.BeginInvoke(`0,`1,`2,`3,`4,`5,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`6.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`6.Invoke(`0,`1,`2,`3,`4,`5)"></member>
    <member name="T:System.Action`7">
      <summary>Encapsule une méthode ayant sept paramètres et ne retournant aucune valeur.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`7.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`7.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`7.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`7.Invoke(`0,`1,`2,`3,`4,`5,`6)"></member>
    <member name="T:System.Action`8">
      <summary>Encapsule une méthode ayant huit paramètres et ne retournant aucune valeur.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`8.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`8.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`8.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`8.Invoke(`0,`1,`2,`3,`4,`5,`6,`7)"></member>
    <member name="T:System.Action`9">
      <summary>Encapsule une méthode ayant neuf paramètres et ne retournant aucune valeur.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T9">Type du neuvième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`9.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`9.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`9.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`9.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8)"></member>
    <member name="T:System.Activator">
      <summary>Contient des méthodes permettant de créer des types d'objets localement ou à distance, ou d'obtenir des références à des objets distants existants.Cette classe ne peut pas être héritée.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Activator.CreateInstance``1">
      <summary>Crée une instance du type désigné par le paramètre de type générique spécifié, à l'aide du constructeur sans paramètre.</summary>
      <returns>Référence au nouvel objet créé.</returns>
      <typeparam name="T">Type à créer.</typeparam>
      <exception cref="T:System.MissingMethodException">Dans le .NET for Windows Store apps ou bibliothèque de classes Portable, intercepter l'exception de la classe de base, <see cref="T:System.MissingMemberException" />, à la place.Le type qui est spécifié pour <paramref name="T" /> ne comporte pas de constructeur sans paramètre. </exception>
    </member>
    <member name="M:System.Activator.CreateInstance(System.Type)">
      <summary>Crée une instance du type spécifié à l'aide du constructeur par défaut de ce type.</summary>
      <returns>Référence au nouvel objet créé.</returns>
      <param name="type">Type de l'objet à créer. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> n'est pas un RuntimeType. ou<paramref name="type" /> est un type générique ouvert (en d'autres termes, la propriété <see cref="P:System.Type.ContainsGenericParameters" /> retourne true).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="type" /> ne peut pas être <see cref="T:System.Reflection.Emit.TypeBuilder" />.ou La création des types <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> et <see cref="T:System.RuntimeArgumentHandle" />, ou de tableaux de ces types, n'est pas prise en charge.ouL'assembly qui contient <paramref name="type" /> est un assembly dynamique créé avec <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">Le constructeur appelé lève une exception. </exception>
      <exception cref="T:System.MethodAccessException">Dans le .NET for Windows Store apps ou bibliothèque de classes Portable, intercepter l'exception de la classe de base, <see cref="T:System.MemberAccessException" />, à la place.L'appelant n'a pas l'autorisation d'appeler ce constructeur. </exception>
      <exception cref="T:System.MemberAccessException">Impossible de créer une instance d'une classe abstraite, ou ce membre a été appelé à l'aide d'un mécanisme à liaison tardive. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Le type COM n'a pas été obtenu via <see cref="Overload:System.Type.GetTypeFromProgID" /> ni <see cref="Overload:System.Type.GetTypeFromCLSID" />. </exception>
      <exception cref="T:System.MissingMethodException">Dans le .NET for Windows Store apps ou bibliothèque de classes Portable, intercepter l'exception de la classe de base, <see cref="T:System.MissingMemberException" />, à la place.Aucun constructeur public correspondant n'a été trouvé. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
        <paramref name="type" /> est un objet COM, mais l'identificateur de classe utilisé pour l'obtention du type n'est pas valide ou la classe identifiée n'est pas inscrite. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="type" /> n'est pas un type valide. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.CreateInstance(System.Type,System.Object[])">
      <summary>Crée une instance du type spécifié à l'aide du constructeur qui correspond le mieux aux paramètres spécifiés.</summary>
      <returns>Référence au nouvel objet créé.</returns>
      <param name="type">Type de l'objet à créer. </param>
      <param name="args">Tableau d'arguments dont le nombre, l'ordre et le type correspondent aux paramètres du constructeur à appeler.Si <paramref name="args" /> est un tableau vide ou null, le constructeur qui ne prend aucun paramètre (constructeur par défaut) est appelé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> n'est pas un RuntimeType. ou<paramref name="type" /> est un type générique ouvert (en d'autres termes, la propriété <see cref="P:System.Type.ContainsGenericParameters" /> retourne true).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="type" /> ne peut pas être <see cref="T:System.Reflection.Emit.TypeBuilder" />.ou La création des types <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> et <see cref="T:System.RuntimeArgumentHandle" />, ou de tableaux de ces types, n'est pas prise en charge. ouL'assembly qui contient <paramref name="type" /> est un assembly dynamique créé avec <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.ouLe constructeur qui correspond le mieux à <paramref name="args" /> a des arguments varargs. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">Le constructeur appelé lève une exception. </exception>
      <exception cref="T:System.MethodAccessException">Dans le .NET for Windows Store apps ou bibliothèque de classes Portable, intercepter l'exception de la classe de base, <see cref="T:System.MemberAccessException" />, à la place.L'appelant n'a pas l'autorisation d'appeler ce constructeur. </exception>
      <exception cref="T:System.MemberAccessException">Impossible de créer une instance d'une classe abstraite, ou ce membre a été appelé à l'aide d'un mécanisme à liaison tardive. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Le type COM n'a pas été obtenu via <see cref="Overload:System.Type.GetTypeFromProgID" /> ni <see cref="Overload:System.Type.GetTypeFromCLSID" />. </exception>
      <exception cref="T:System.MissingMethodException">Dans le .NET for Windows Store apps ou bibliothèque de classes Portable, intercepter l'exception de la classe de base, <see cref="T:System.MissingMemberException" />, à la place.Aucun constructeur public correspondant n'a été trouvé. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
        <paramref name="type" /> est un objet COM, mais l'identificateur de classe utilisé pour l'obtention du type n'est pas valide ou la classe identifiée n'est pas inscrite. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="type" /> n'est pas un type valide. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, RemotingConfiguration" />
      </PermissionSet>
    </member>
    <member name="T:System.ArgumentException">
      <summary>Exception levée quand un argument non valide est fourni à une méthode.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ArgumentException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentException" />.</summary>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas une référence null, l'exception actuelle est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentException" /> avec un message d'erreur spécifié et le nom du paramètre ayant provoqué l'exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="paramName">Nom du paramètre ayant provoqué l'exception actuelle. </param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String,System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentException" /> avec un message d'erreur spécifié, le nom du paramètre et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="paramName">Nom du paramètre ayant provoqué l'exception actuelle. </param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas une référence null, l'exception actuelle est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="P:System.ArgumentException.Message">
      <summary>Obtient le message d'erreur et le nom du paramètre, ou le message d'erreur uniquement si aucun nom de paramètre n'a été défini.</summary>
      <returns>Chaîne de texte décrivant l'exception.La valeur de cette propriété peut se présenter sous deux formes :Condition Valeur <paramref name="paramName" /> est une référence null (Nothing en Visual Basic) ou de longueur nulle. Chaîne <paramref name="message" /> passée au constructeur. <paramref name="paramName" /> n'est pas une référence null (Nothing en Visual Basic) et sa longueur est supérieure à zéro. Chaîne <paramref name="message" /> à laquelle est ajouté le nom du paramètre non valide. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ArgumentException.ParamName">
      <summary>Obtient le nom du paramètre qui a provoqué cette exception.</summary>
      <returns>Nom du paramètre.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.ArgumentNullException">
      <summary>Exception levée lorsqu'une référence null (Nothing en Visual Basic) est passée à une méthode pour laquelle cet argument n'est pas valide. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgumentNullException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentNullException" />.</summary>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentNullException" /> avec le nom du paramètre ayant provoqué l'exception.</summary>
      <param name="paramName">Nom du paramètre ayant provoqué l'exception. </param>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentNullException" /> avec un message d'erreur spécifié et l'exception qui est à l'origine de cette exception.</summary>
      <param name="message">Message d'erreur expliquant la raison de cette exception. </param>
      <param name="innerException">Exception à l'origine de l'exception en cours, ou une référence null (Nothing en Visual Basic) si aucune exception interne n'est spécifiée. </param>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentNullException" /> avec un message d'erreur spécifié et le nom du paramètre ayant provoqué l'exception.</summary>
      <param name="paramName">Nom du paramètre ayant provoqué l'exception. </param>
      <param name="message">Message qui décrit l'erreur. </param>
    </member>
    <member name="T:System.ArgumentOutOfRangeException">
      <summary>Exception levée lorsque la valeur d'un argument est en dehors de la plage des valeurs autorisées, telle que définie par la méthode appelée.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentOutOfRangeException" />.</summary>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentOutOfRangeException" /> avec le nom du paramètre ayant provoqué l'exception.</summary>
      <param name="paramName">Nom du paramètre ayant provoqué cette exception. </param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentOutOfRangeException" /> avec un message d'erreur spécifié et l'exception qui est à l'origine de cette exception.</summary>
      <param name="message">Message d'erreur expliquant la raison de cette exception. </param>
      <param name="innerException">Exception à l'origine de l'exception en cours, ou une référence null (Nothing en Visual Basic) si aucune exception interne n'est spécifiée. </param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentOutOfRangeException" /> avec le nom du paramètre, la valeur de l'argument et un message d'erreur spécifié.</summary>
      <param name="paramName">Nom du paramètre ayant provoqué l'exception. </param>
      <param name="actualValue">Valeur de l'argument qui provoque cette exception. </param>
      <param name="message">Message décrivant l'erreur. </param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentOutOfRangeException" /> avec le nom du paramètre ayant provoqué l'exception et un message d'erreur spécifié.</summary>
      <param name="paramName">Nom du paramètre ayant provoqué l'exception. </param>
      <param name="message">Message décrivant l'erreur. </param>
    </member>
    <member name="P:System.ArgumentOutOfRangeException.ActualValue">
      <summary>Obtient la valeur de l'argument qui provoque cette exception.</summary>
      <returns>Object qui contient la valeur du paramètre ayant provoqué le <see cref="T:System.Exception" /> actuel.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ArgumentOutOfRangeException.Message">
      <summary>Obtient le message d'erreur et la chaîne représentant la valeur de l'argument non valide, ou uniquement le message d'erreur si la valeur de l'argument est Null.</summary>
      <returns>Le message texte pour cette exception.La valeur de cette propriété peut se présenter sous deux formes :Condition Valeur Le <paramref name="actualValue" /> est null. Chaîne <paramref name="message" /> passée au constructeur. <paramref name="actualValue" /> n'est pas null. Chaîne <paramref name="message" /> à laquelle est ajoutée la chaîne représentant la valeur du paramètre non valide. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ArithmeticException">
      <summary>Exception levée en cas d'erreurs au cours d'une opération arithmétique, de casting ou de conversion.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArithmeticException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArithmeticException" />.</summary>
    </member>
    <member name="M:System.ArithmeticException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArithmeticException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'erreur. </param>
    </member>
    <member name="M:System.ArithmeticException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArithmeticException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="innerException">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas une référence null, l'exception actuelle est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Array">
      <summary>Fournit des méthodes pour la création, la manipulation, la recherche ainsi que le tri des tableaux et sert de classe de base pour tous les tableaux du Common Language Runtime.Pour parcourir le code source de .NET Framework pour ce type, consultez la Source de référence.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object)">
      <summary>Recherche une valeur dans une plage d'éléments d'un tableau trié unidimensionnel, à l'aide de l'interface <see cref="T:System.IComparable" /> implémentée par chaque élément du tableau et par la valeur spécifiée.</summary>
      <returns>Index du <paramref name="value" /> spécifié dans le <paramref name="array" /> spécifié, si <paramref name="value" /> est trouvé.Si <paramref name="value" /> est introuvable et si <paramref name="value" /> est inférieur à un ou plusieurs éléments de <paramref name="array" />, un nombre négatif qui est le complément d'opération de bits de l'index du premier élément supérieur à <paramref name="value" />.Si <paramref name="value" /> est introuvable et si <paramref name="value" /> est supérieur à un élément quelconque de <paramref name="array" />, un nombre négatif qui est le complément d'opération de bits de (l'index du dernier élément plus 1).</returns>
      <param name="array">Tableau trié unidimensionnel <see cref="T:System.Array" /> à explorer.</param>
      <param name="index">Index de départ de la plage dans laquelle effectuer la recherche.</param>
      <param name="length">Longueur de la plage dans laquelle effectuer la recherche.</param>
      <param name="value">Objet à rechercher.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> est multidimensionnel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à la limite inférieure de <paramref name="array" />.ou<paramref name="length" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <paramref name="array" />.ou<paramref name="value" /> est d'un type qui n'est pas compatible avec les éléments de <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> n'implémente pas l'interface <see cref="T:System.IComparable" />, et la recherche rencontre un élément qui n'implémente pas l'interface <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
      <summary>Recherche une valeur dans une plage d'éléments d'un tableau trié unidimensionnel, à l'aide de l'interface <see cref="T:System.Collections.IComparer" /> spécifiée.</summary>
      <returns>Index du <paramref name="value" /> spécifié dans le <paramref name="array" /> spécifié, si <paramref name="value" /> est trouvé.Si <paramref name="value" /> est introuvable et si <paramref name="value" /> est inférieur à un ou plusieurs éléments de <paramref name="array" />, un nombre négatif qui est le complément d'opération de bits de l'index du premier élément supérieur à <paramref name="value" />.Si <paramref name="value" /> est introuvable et si <paramref name="value" /> est supérieur à un élément quelconque de <paramref name="array" />, un nombre négatif qui est le complément d'opération de bits de (l'index du dernier élément plus 1).</returns>
      <param name="array">Tableau trié unidimensionnel <see cref="T:System.Array" /> à explorer.</param>
      <param name="index">Index de départ de la plage dans laquelle effectuer la recherche.</param>
      <param name="length">Longueur de la plage dans laquelle effectuer la recherche.</param>
      <param name="value">Objet à rechercher.</param>
      <param name="comparer">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser lors de la comparaison d'éléments.ou null pour utiliser l'implémentation de <see cref="T:System.IComparable" /> de chaque élément.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> est multidimensionnel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à la limite inférieure de <paramref name="array" />.ou<paramref name="length" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <paramref name="array" />.ou<paramref name="comparer" /> est null et <paramref name="value" /> est d'un type qui n'est pas compatible avec les éléments de <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> est null, <paramref name="value" /> n'implémente pas l'interface <see cref="T:System.IComparable" />, et la recherche rencontre un élément qui n'implémente pas l'interface <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Object)">
      <summary>Recherche un élément spécifique dans un tableau trié unidimensionnel, à l'aide de l'interface <see cref="T:System.IComparable" /> implémentée par chaque élément du tableau et par l'objet spécifié.</summary>
      <returns>Index du <paramref name="value" /> spécifié dans le <paramref name="array" /> spécifié, si <paramref name="value" /> est trouvé.Si <paramref name="value" /> est introuvable et si <paramref name="value" /> est inférieur à un ou plusieurs éléments de <paramref name="array" />, un nombre négatif qui est le complément d'opération de bits de l'index du premier élément supérieur à <paramref name="value" />.Si <paramref name="value" /> est introuvable et si <paramref name="value" /> est supérieur à un élément quelconque de <paramref name="array" />, un nombre négatif qui est le complément d'opération de bits de (l'index du dernier élément plus 1).</returns>
      <param name="array">Tableau trié unidimensionnel <see cref="T:System.Array" /> à explorer.</param>
      <param name="value">Objet à rechercher.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> est multidimensionnel.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> est d'un type qui n'est pas compatible avec les éléments de <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> n'implémente pas l'interface <see cref="T:System.IComparable" />, et la recherche rencontre un élément qui n'implémente pas l'interface <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Object,System.Collections.IComparer)">
      <summary>Recherche une valeur dans un tableau trié unidimensionnel, à l'aide de l'interface <see cref="T:System.Collections.IComparer" /> spécifiée.</summary>
      <returns>Index du <paramref name="value" /> spécifié dans le <paramref name="array" /> spécifié, si <paramref name="value" /> est trouvé.Si <paramref name="value" /> est introuvable et si <paramref name="value" /> est inférieur à un ou plusieurs éléments de <paramref name="array" />, un nombre négatif qui est le complément d'opération de bits de l'index du premier élément supérieur à <paramref name="value" />.Si <paramref name="value" /> est introuvable et si <paramref name="value" /> est supérieur à un élément quelconque de <paramref name="array" />, un nombre négatif qui est le complément d'opération de bits de (l'index du dernier élément plus 1).</returns>
      <param name="array">Tableau trié unidimensionnel <see cref="T:System.Array" /> à explorer.</param>
      <param name="value">Objet à rechercher.</param>
      <param name="comparer">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser lors de la comparaison d'éléments.ou null pour utiliser l'implémentation de <see cref="T:System.IComparable" /> de chaque élément.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> est multidimensionnel.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparer" /> est null et <paramref name="value" /> est d'un type qui n'est pas compatible avec les éléments de <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> est null, <paramref name="value" /> n'implémente pas l'interface <see cref="T:System.IComparable" />, et la recherche rencontre un élément qui n'implémente pas l'interface <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0)">
      <summary>Recherche une valeur dans une plage d'éléments d'un tableau trié unidimensionnel, à l'aide de l'interface générique <see cref="T:System.IComparable`1" /> implémentée par chaque élément de <see cref="T:System.Array" /> et par la valeur spécifiée.</summary>
      <returns>Index du <paramref name="value" /> spécifié dans le <paramref name="array" /> spécifié, si <paramref name="value" /> est trouvé.Si <paramref name="value" /> est introuvable et si <paramref name="value" /> est inférieur à un ou plusieurs éléments de <paramref name="array" />, un nombre négatif qui est le complément d'opération de bits de l'index du premier élément supérieur à <paramref name="value" />.Si <paramref name="value" /> est introuvable et si <paramref name="value" /> est supérieur à un élément quelconque de <paramref name="array" />, un nombre négatif qui est le complément d'opération de bits de (l'index du dernier élément plus 1).</returns>
      <param name="array">
        <see cref="T:System.Array" /> trié de base zéro unidimensionnel à explorer. </param>
      <param name="index">Index de départ de la plage dans laquelle effectuer la recherche.</param>
      <param name="length">Longueur de la plage dans laquelle effectuer la recherche.</param>
      <param name="value">Objet à rechercher.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à la limite inférieure de <paramref name="array" />.ou<paramref name="length" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <paramref name="array" />.ou<paramref name="value" /> est d'un type qui n'est pas compatible avec les éléments de <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="T" /> n'implémente pas l'interface générique <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
      <summary>Recherche une valeur dans une plage d'éléments d'un tableau trié unidimensionnel, à l'aide de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> spécifiée.</summary>
      <returns>Index du <paramref name="value" /> spécifié dans le <paramref name="array" /> spécifié, si <paramref name="value" /> est trouvé.Si <paramref name="value" /> est introuvable et si <paramref name="value" /> est inférieur à un ou plusieurs éléments de <paramref name="array" />, un nombre négatif qui est le complément d'opération de bits de l'index du premier élément supérieur à <paramref name="value" />.Si <paramref name="value" /> est introuvable et si <paramref name="value" /> est supérieur à un élément quelconque de <paramref name="array" />, un nombre négatif qui est le complément d'opération de bits de (l'index du dernier élément plus 1).</returns>
      <param name="array">
        <see cref="T:System.Array" /> trié de base zéro unidimensionnel à explorer. </param>
      <param name="index">Index de départ de la plage dans laquelle effectuer la recherche.</param>
      <param name="length">Longueur de la plage dans laquelle effectuer la recherche.</param>
      <param name="value">Objet à rechercher.</param>
      <param name="comparer">Implémentation de <see cref="T:System.Collections.Generic.IComparer`1" /> à utiliser lors de la comparaison d'éléments.ou null pour utiliser l'implémentation de <see cref="T:System.IComparable`1" /> de chaque élément.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à la limite inférieure de <paramref name="array" />.ou<paramref name="length" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <paramref name="array" />.ou<paramref name="comparer" /> est null et <paramref name="value" /> est d'un type qui n'est pas compatible avec les éléments de <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> est null et <paramref name="T" /> n'implémente pas l'interface générique <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],``0)">
      <summary>Recherche un élément spécifique dans un tableau trié unidimensionnel, à l'aide de l'interface générique <see cref="T:System.IComparable`1" /> implémentée par chaque élément de <see cref="T:System.Array" /> et par l'objet spécifié.</summary>
      <returns>Index du <paramref name="value" /> spécifié dans le <paramref name="array" /> spécifié, si <paramref name="value" /> est trouvé.Si <paramref name="value" /> est introuvable et si <paramref name="value" /> est inférieur à un ou plusieurs éléments de <paramref name="array" />, un nombre négatif qui est le complément d'opération de bits de l'index du premier élément supérieur à <paramref name="value" />.Si <paramref name="value" /> est introuvable et si <paramref name="value" /> est supérieur à un élément quelconque de <paramref name="array" />, un nombre négatif qui est le complément d'opération de bits de (l'index du dernier élément plus 1).</returns>
      <param name="array">
        <see cref="T:System.Array" /> trié de base zéro unidimensionnel à explorer. </param>
      <param name="value">Objet à rechercher.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="T" /> n'implémente pas l'interface générique <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],``0,System.Collections.Generic.IComparer{``0})">
      <summary>Recherche une valeur dans un tableau trié unidimensionnel, à l'aide de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> spécifiée.</summary>
      <returns>Index du <paramref name="value" /> spécifié dans le <paramref name="array" /> spécifié, si <paramref name="value" /> est trouvé.Si <paramref name="value" /> est introuvable et si <paramref name="value" /> est inférieur à un ou plusieurs éléments de <paramref name="array" />, un nombre négatif qui est le complément d'opération de bits de l'index du premier élément supérieur à <paramref name="value" />.Si <paramref name="value" /> est introuvable et si <paramref name="value" /> est supérieur à un élément quelconque de <paramref name="array" />, un nombre négatif qui est le complément d'opération de bits de (l'index du dernier élément plus 1).</returns>
      <param name="array">
        <see cref="T:System.Array" /> trié de base zéro unidimensionnel à explorer.  </param>
      <param name="value">Objet à rechercher.</param>
      <param name="comparer">Implémentation de <see cref="T:System.Collections.Generic.IComparer`1" /> à utiliser lors de la comparaison d'éléments.ou null pour utiliser l'implémentation de <see cref="T:System.IComparable`1" /> de chaque élément.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparer" /> est null et <paramref name="value" /> est d'un type qui n'est pas compatible avec les éléments de <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> est null et <paramref name="T" /> n'implémente pas l'interface générique <see cref="T:System.IComparable`1" /></exception>
    </member>
    <member name="M:System.Array.Clear(System.Array,System.Int32,System.Int32)">
      <summary>Définit une plage d'éléments dans un tableau à la valeur par défaut de chaque type d'élément.</summary>
      <param name="array">Le tableau dont les éléments doivent être effacés.</param>
      <param name="index">Index de départ de la plage d'éléments à effacer.</param>
      <param name="length">Nombre d'éléments à effacer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> est inférieur à la limite inférieure de <paramref name="array" />.ou<paramref name="length" /> est inférieur à zéro.ouLa somme de <paramref name="index" /> et <paramref name="length" /> est supérieure à la taille de <paramref name="array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Clone">
      <summary>Crée une copie superficielle de <see cref="T:System.Array" />.</summary>
      <returns>Copie superficielle de <see cref="T:System.Array" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Copie une série d'éléments de <see cref="T:System.Array" /> en commençant à l'index source spécifié et les colle dans un autre <see cref="T:System.Array" /> en commençant à l'index de destination spécifié.Garantit que toutes les modifications sont annulées si la copie ne se déroule pas intégralement avec succès.</summary>
      <param name="sourceArray">
        <see cref="T:System.Array" /> qui contient les données à copier.</param>
      <param name="sourceIndex">Entier 32 bits qui représente l'index de <paramref name="sourceArray" /> à partir duquel la copie commence.</param>
      <param name="destinationArray">
        <see cref="T:System.Array" /> qui reçoit les données.</param>
      <param name="destinationIndex">Entier 32 bits qui représente l'index de <paramref name="destinationArray" /> à partir duquel le stockage commence.</param>
      <param name="length">Entier 32 bits qui représente le nombre d'éléments à copier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" /> a la valeur null.ou<paramref name="destinationArray" /> a la valeur null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="sourceArray" /> et <paramref name="destinationArray" /> possèdent des rangs différents.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">Le type <paramref name="sourceArray" /> n'est ni le même ni dérivé du type <paramref name="destinationArray" />.</exception>
      <exception cref="T:System.InvalidCastException">Au moins un élément de <paramref name="sourceArray" /> ne peut pas être casté en type de <paramref name="destinationArray" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" /> est inférieur à la limite inférieure de la première dimension de <paramref name="sourceArray" />.ou<paramref name="destinationIndex" /> est inférieur à la limite inférieure de la première dimension de <paramref name="destinationArray" />.ou<paramref name="length" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="length" /> est supérieur au nombre d'éléments de <paramref name="sourceIndex" /> à la fin de <paramref name="sourceArray" />.ou<paramref name="length" /> est supérieur au nombre d'éléments de <paramref name="destinationIndex" /> à la fin de <paramref name="destinationArray" />.</exception>
    </member>
    <member name="M:System.Array.Copy(System.Array,System.Array,System.Int32)">
      <summary>Copie une série d'éléments de <see cref="T:System.Array" /> en commençant au premier élément, et les colle dans un autre <see cref="T:System.Array" /> en commençant au premier élément.La longueur est spécifiée sous forme d'un entier 32 bits.</summary>
      <param name="sourceArray">
        <see cref="T:System.Array" /> qui contient les données à copier.</param>
      <param name="destinationArray">
        <see cref="T:System.Array" /> qui reçoit les données.</param>
      <param name="length">Entier 32 bits qui représente le nombre d'éléments à copier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" /> a la valeur null.ou<paramref name="destinationArray" /> a la valeur null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="sourceArray" /> et <paramref name="destinationArray" /> possèdent des rangs différents.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">
        <paramref name="sourceArray" /> et <paramref name="destinationArray" /> sont de types incompatibles.</exception>
      <exception cref="T:System.InvalidCastException">Au moins un élément de <paramref name="sourceArray" /> ne peut pas être casté en type de <paramref name="destinationArray" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="length" /> est supérieur au nombre d'éléments dans <paramref name="sourceArray" />.ou<paramref name="length" /> est supérieur au nombre d'éléments dans <paramref name="destinationArray" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Copie une série d'éléments de <see cref="T:System.Array" /> en commençant à l'index source spécifié et les colle dans un autre <see cref="T:System.Array" /> en commençant à l'index de destination spécifié.La longueur et les index sont spécifiés en tant qu'entiers 32 bits.</summary>
      <param name="sourceArray">
        <see cref="T:System.Array" /> qui contient les données à copier.</param>
      <param name="sourceIndex">Entier 32 bits qui représente l'index de <paramref name="sourceArray" /> à partir duquel la copie commence.</param>
      <param name="destinationArray">
        <see cref="T:System.Array" /> qui reçoit les données.</param>
      <param name="destinationIndex">Entier 32 bits qui représente l'index de <paramref name="destinationArray" /> à partir duquel le stockage commence.</param>
      <param name="length">Entier 32 bits qui représente le nombre d'éléments à copier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" /> a la valeur null.ou<paramref name="destinationArray" /> a la valeur null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="sourceArray" /> et <paramref name="destinationArray" /> possèdent des rangs différents.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">
        <paramref name="sourceArray" /> et <paramref name="destinationArray" /> sont de types incompatibles.</exception>
      <exception cref="T:System.InvalidCastException">Au moins un élément de <paramref name="sourceArray" /> ne peut pas être casté en type de <paramref name="destinationArray" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" /> est inférieur à la limite inférieure de la première dimension de <paramref name="sourceArray" />.ou<paramref name="destinationIndex" /> est inférieur à la limite inférieure de la première dimension de <paramref name="destinationArray" />.ou<paramref name="length" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="length" /> est supérieur au nombre d'éléments de <paramref name="sourceIndex" /> à la fin de <paramref name="sourceArray" />.ou<paramref name="length" /> est supérieur au nombre d'éléments de <paramref name="destinationIndex" /> à la fin de <paramref name="destinationArray" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CopyTo(System.Array,System.Int32)">
      <summary>Copie tous les éléments du tableau unidimensionnel actuel dans le tableau unidimensionnel spécifié en commençant à l'index du tableau de destination spécifié.L'index est spécifié en tant qu'entier 32 bits.</summary>
      <param name="array">Tableau unidimensionnel constituant la destination des éléments copiés à partir du tableau actuel.</param>
      <param name="index">Entier 32 bits qui représente l'index de <paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à la limite inférieure de <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.ouLe nombre d'éléments dans le segment de tableau source est supérieur au nombre d'éléments disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">Le cast automatique du type du <see cref="T:System.Array" /> source en type du <paramref name="array" /> de destination est impossible.</exception>
      <exception cref="T:System.RankException">Le tableau source est multidimensionnel.</exception>
      <exception cref="T:System.InvalidCastException">Au moins un élément du <see cref="T:System.Array" /> source ne peut pas être casté en type de <paramref name="array" /> de destination.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32)">
      <summary>Crée un <see cref="T:System.Array" /> unidimensionnel du <see cref="T:System.Type" /> et de la longueur spécifiés, à l'aide d'un index de base zéro.</summary>
      <returns>Nouveau <see cref="T:System.Array" /> unidimensionnel du <see cref="T:System.Type" /> et de la longueur spécifiés, à l'aide d'un index de base zéro.</returns>
      <param name="elementType">
        <see cref="T:System.Type" /> du <see cref="T:System.Array" /> à créer.</param>
      <param name="length">Taille du <see cref="T:System.Array" /> à créer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementType" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementType" /> n'est pas un <see cref="T:System.Type" /> valide.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" /> n'est pas pris en charge.Par exemple, <see cref="T:System.Void" /> n'est pas pris en charge.ou<paramref name="elementType" /> est un type générique ouvert.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> est inférieur à zéro.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32[])">
      <summary>Crée un <see cref="T:System.Array" /> multidimensionnel du <see cref="T:System.Type" /> et des longueurs de dimensions spécifiés, à l'aide d'un index de base zéro.Les longueurs de dimensions sont spécifiées en tant qu'entiers 32 bits.</summary>
      <returns>Nouveau <see cref="T:System.Array" /> multidimensionnel du <see cref="T:System.Type" /> spécifié avec la longueur déterminée pour chaque dimension, à l'aide d'un index de base zéro.</returns>
      <param name="elementType">
        <see cref="T:System.Type" /> du <see cref="T:System.Array" /> à créer.</param>
      <param name="lengths">Tableau d'entiers 32 bits qui représentent la taille de chaque dimension du <see cref="T:System.Array" /> à créer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementType" /> a la valeur null.ou<paramref name="lengths" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementType" /> n'est pas un <see cref="T:System.Type" /> valide.ouLe tableau <paramref name="lengths" /> contient moins d'un élément.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" /> n'est pas pris en charge.Par exemple, <see cref="T:System.Void" /> n'est pas pris en charge.ou<paramref name="elementType" /> est un type générique ouvert.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Toutes les valeurs de <paramref name="lengths" /> sont inférieures à zéro.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32[],System.Int32[])">
      <summary>Crée un <see cref="T:System.Array" /> multidimensionnel du <see cref="T:System.Type" /> et des longueurs de dimensions spécifiés, avec les limites inférieures déterminées.</summary>
      <returns>Crée un <see cref="T:System.Array" /> multidimensionnel du <see cref="T:System.Type" /> spécifié avec la longueur et la limite inférieure déterminées pour chaque dimension.</returns>
      <param name="elementType">
        <see cref="T:System.Type" /> du <see cref="T:System.Array" /> à créer.</param>
      <param name="lengths">Tableau unidimensionnel qui contient la taille de chaque dimension du <see cref="T:System.Array" /> à créer.</param>
      <param name="lowerBounds">Tableau unidimensionnel qui contient la limite inférieure (index de départ) de chaque dimension du <see cref="T:System.Array" /> à créer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementType" /> a la valeur null.ou<paramref name="lengths" /> a la valeur null.ou<paramref name="lowerBounds" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementType" /> n'est pas un <see cref="T:System.Type" /> valide.ouLe tableau <paramref name="lengths" /> contient moins d'un élément.ouLes tableaux <paramref name="lengths" /> et <paramref name="lowerBounds" /> ne contiennent pas le même nombre d'éléments.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" /> n'est pas pris en charge.Par exemple, <see cref="T:System.Void" /> n'est pas pris en charge.ou<paramref name="elementType" /> est un type générique ouvert.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Toutes les valeurs de <paramref name="lengths" /> sont inférieures à zéro.ouComme toutes les valeurs de <paramref name="lowerBounds" /> sont très élevées, la somme de la limite inférieure et de la longueur d'une dimension est supérieure à <see cref="F:System.Int32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Empty``1">
      <summary>Retourne un tableau vide.</summary>
      <returns>Retourne un vide <see cref="T:System.Array" />.</returns>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
    </member>
    <member name="M:System.Array.Exists``1(``0[],System.Predicate{``0})">
      <summary>Détermine si le tableau spécifié contient des éléments qui correspondent aux conditions définies par le prédicat spécifié.</summary>
      <returns>true si <paramref name="array" /> contient un ou plusieurs éléments qui correspondent aux conditions définies par le prédicat spécifié ; sinon, false.</returns>
      <param name="array">
        <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</param>
      <param name="match">
        <see cref="T:System.Predicate`1" /> qui définit les conditions des éléments à rechercher.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.ou<paramref name="match" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Array.Find``1(``0[],System.Predicate{``0})">
      <summary>Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne la première occurrence dans le <see cref="T:System.Array" /> entier.</summary>
      <returns>Premier élément qui correspond aux conditions définies par le prédicat spécifié, s'il est trouvé ; sinon, la valeur par défaut pour le type <paramref name="T" />.</returns>
      <param name="array">Le tableau de base zéro unidimensionnel à explorer.</param>
      <param name="match">Le prédicat qui définit les conditions de l'élément à rechercher.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.ou<paramref name="match" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Array.FindAll``1(``0[],System.Predicate{``0})">
      <summary>Récupère tous les éléments qui correspondent aux conditions définies par le prédicat spécifié.</summary>
      <returns>
        <see cref="T:System.Array" /> contenant tous les éléments qui correspondent aux conditions définies par le prédicat spécifié, s'il existe ; sinon, un <see cref="T:System.Array" /> vide.</returns>
      <param name="array">
        <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</param>
      <param name="match">
        <see cref="T:System.Predicate`1" /> qui définit les conditions des éléments à rechercher.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.ou<paramref name="match" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Array.FindIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})">
      <summary>Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l'index de base zéro de la première occurrence dans la plage d'éléments du <see cref="T:System.Array" /> qui commence à l'index spécifié et contient le nombre d'éléments spécifié.</summary>
      <returns>Index de base zéro de la première occurrence d'un élément répondant aux conditions définies par <paramref name="match" />, si cette occurrence est trouvée ; sinon, -1.</returns>
      <param name="array">
        <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</param>
      <param name="startIndex">Index de début de base zéro de la recherche.</param>
      <param name="count">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</param>
      <param name="match">
        <see cref="T:System.Predicate`1" /> qui définit les conditions de l'élément à rechercher.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.ou<paramref name="match" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> est en dehors de la plage des index valides pour <paramref name="array" />.ou<paramref name="count" /> est inférieur à zéro.ou<paramref name="startIndex" /> et <paramref name="count" /> ne spécifient pas une section valide dans <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.FindIndex``1(``0[],System.Int32,System.Predicate{``0})">
      <summary>Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l'index de base zéro de la première occurrence dans la plage d'éléments du <see cref="T:System.Array" /> qui s'étend de l'index spécifié au dernier élément.</summary>
      <returns>Index de base zéro de la première occurrence d'un élément répondant aux conditions définies par <paramref name="match" />, si cette occurrence est trouvée ; sinon, -1.</returns>
      <param name="array">
        <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</param>
      <param name="startIndex">Index de début de base zéro de la recherche.</param>
      <param name="match">
        <see cref="T:System.Predicate`1" /> qui définit les conditions de l'élément à rechercher.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.ou<paramref name="match" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> est en dehors de la plage des index valides pour <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.FindIndex``1(``0[],System.Predicate{``0})">
      <summary>Recherche un élément qui correspond aux conditions définies par le prédicat spécifié, et retourne l'index de base zéro de la première occurrence dans le <see cref="T:System.Array" /> entier.</summary>
      <returns>Index de base zéro de la première occurrence d'un élément répondant aux conditions définies par <paramref name="match" />, si cette occurrence est trouvée ; sinon, -1.</returns>
      <param name="array">
        <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</param>
      <param name="match">
        <see cref="T:System.Predicate`1" /> qui définit les conditions de l'élément à rechercher.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.ou<paramref name="match" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Array.FindLast``1(``0[],System.Predicate{``0})">
      <summary>Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne la dernière occurrence dans le <see cref="T:System.Array" /> entier.</summary>
      <returns>Dernier élément qui correspond aux conditions définies par le prédicat spécifié, s'il est trouvé ; sinon, la valeur par défaut pour le type <paramref name="T" />.</returns>
      <param name="array">
        <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</param>
      <param name="match">
        <see cref="T:System.Predicate`1" /> qui définit les conditions de l'élément à rechercher.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.ou<paramref name="match" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})">
      <summary>Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l'index de base zéro de la dernière occurrence dans la plage d'éléments du <see cref="T:System.Array" /> qui contient le nombre d'éléments spécifié et se termine à l'index spécifié.</summary>
      <returns>Index de base zéro de la dernière occurrence d'un élément répondant aux conditions définies par <paramref name="match" />, si cette occurrence est trouvée ; sinon, -1.</returns>
      <param name="array">
        <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</param>
      <param name="startIndex">Index de début de base zéro de la recherche vers le haut.</param>
      <param name="count">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</param>
      <param name="match">
        <see cref="T:System.Predicate`1" /> qui définit les conditions de l'élément à rechercher.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.ou<paramref name="match" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> est en dehors de la plage des index valides pour <paramref name="array" />.ou<paramref name="count" /> est inférieur à zéro.ou<paramref name="startIndex" /> et <paramref name="count" /> ne spécifient pas une section valide dans <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Predicate{``0})">
      <summary>Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l'index de base zéro de la dernière occurrence dans la plage d'éléments du <see cref="T:System.Array" /> qui s'étend du premier élément à l'index spécifié.</summary>
      <returns>Index de base zéro de la dernière occurrence d'un élément répondant aux conditions définies par <paramref name="match" />, si cette occurrence est trouvée ; sinon, -1.</returns>
      <param name="array">
        <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</param>
      <param name="startIndex">Index de début de base zéro de la recherche vers le haut.</param>
      <param name="match">
        <see cref="T:System.Predicate`1" /> qui définit les conditions de l'élément à rechercher.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.ou<paramref name="match" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> est en dehors de la plage des index valides pour <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.FindLastIndex``1(``0[],System.Predicate{``0})">
      <summary>Recherche un élément qui correspond aux conditions définies par le prédicat spécifié, et retourne l'index de base zéro de la dernière occurrence dans le <see cref="T:System.Array" /> entier.</summary>
      <returns>Index de base zéro de la dernière occurrence d'un élément répondant aux conditions définies par <paramref name="match" />, si cette occurrence est trouvée ; sinon, -1.</returns>
      <param name="array">
        <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</param>
      <param name="match">
        <see cref="T:System.Predicate`1" /> qui définit les conditions de l'élément à rechercher.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.ou<paramref name="match" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Array.GetEnumerator">
      <summary>Retourne un <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.Array" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.Array" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.GetLength(System.Int32)">
      <summary>Obtient un entier 32 bits qui représente le nombre d'éléments dans la dimension spécifiée de <see cref="T:System.Array" />.</summary>
      <returns>Entier 32 bits qui représente le nombre d'éléments dans la dimension spécifiée.</returns>
      <param name="dimension">Dimension de base zéro de <see cref="T:System.Array" /> dont la longueur doit être déterminée.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="dimension" /> est inférieur à zéro.ou<paramref name="dimension" /> est supérieur ou égal à <see cref="P:System.Array.Rank" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.GetLowerBound(System.Int32)">
      <summary>Obtient l'index du premier élément de la dimension spécifiée dans le tableau.</summary>
      <returns>Index du premier élément de la dimension spécifiée dans le tableau.</returns>
      <param name="dimension">Dimension de base zéro du tableau dont l'index de départ doit être déterminé.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="dimension" /> est inférieur à zéro.ou<paramref name="dimension" /> est supérieur ou égal à <see cref="P:System.Array.Rank" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.GetUpperBound(System.Int32)">
      <summary>Obtient l'index du dernier élément de la dimension spécifiée dans le tableau.</summary>
      <returns>Index du dernier élément de la dimension spécifiée dans le tableau, ou -1 si la dimension spécifiée est vide. </returns>
      <param name="dimension">Dimension de base zéro du tableau dont la limite supérieure doit être déterminée.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="dimension" /> est inférieur à zéro.ou<paramref name="dimension" /> est supérieur ou égal à <see cref="P:System.Array.Rank" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.GetValue(System.Int32)">
      <summary>Obtient la valeur à la position spécifiée du <see cref="T:System.Array" /> unidimensionnel.L'index est spécifié en tant qu'entier 32 bits.</summary>
      <returns>Valeur à la position spécifiée du <see cref="T:System.Array" /> unidimensionnel.</returns>
      <param name="index">Entier 32 bits qui représente la position de l'élément <see cref="T:System.Array" /> à obtenir.</param>
      <exception cref="T:System.ArgumentException">Le <see cref="T:System.Array" /> en cours ne possède pas exactement une dimension.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> est en dehors de la plage d'index valide pour le <see cref="T:System.Array" /> en cours.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.GetValue(System.Int32[])">
      <summary>Obtient la valeur à la position spécifiée du <see cref="T:System.Array" /> multidimensionnel.Les index sont spécifiés sous la forme d'un tableau d'entiers 32 bits.</summary>
      <returns>Valeur à la position spécifiée du <see cref="T:System.Array" /> multidimensionnel.</returns>
      <param name="indices">Tableau unidimensionnel d'entier 32 bits qui représentent les index qui spécifient la position de l'élément <see cref="T:System.Array" /> à obtenir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="indices" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le nombre de dimensions dans le <see cref="T:System.Array" /> en cours n'est pas égal au nombre d'éléments dans <paramref name="indices" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Tous les éléments de <paramref name="indices" /> sont en dehors de la plage d'index valide pour la dimension correspondante du <see cref="T:System.Array" /> en cours.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf(System.Array,System.Object)">
      <summary>Recherche l'objet spécifié et retourne l'index de sa première occurrence dans un tableau unidimensionnel. </summary>
      <returns>L'index de la première occurrence de <paramref name="value" /> dans <paramref name="array" />, s'il est trouvé ; Sinon, la limite inférieure du tableau moins 1.</returns>
      <param name="array">Tableau unidimensionnel à explorer.</param>
      <param name="value">Objet à rechercher dans <paramref name="array" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> est multidimensionnel.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf(System.Array,System.Object,System.Int32)">
      <summary>Recherche l'objet spécifié dans une plage d'éléments d'un tableau unidimensionnel, et retourne l'index de sa première occurrence.La plage s'étend d'un index spécifié à la fin du tableau.</summary>
      <returns>L'index de la première occurrence de <paramref name="value" />, s'il est trouvé dans la plage d'éléments de <paramref name="array" /> qui s'étend de <paramref name="startIndex" /> jusqu'au dernier élément ; Sinon, la limite inférieure du tableau moins 1.</returns>
      <param name="array">Tableau unidimensionnel à explorer.</param>
      <param name="value">Objet à rechercher dans <paramref name="array" />.</param>
      <param name="startIndex">Index de départ de la recherche.0 (zéro) est valide dans un tableau vide.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> est en dehors de la plage des index valides pour <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> est multidimensionnel.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf(System.Array,System.Object,System.Int32,System.Int32)">
      <summary>Recherche l'objet spécifié dans une plage d'éléments d'un tableau unidimensionnel, et retourne l'index de sa première occurrence.La plage commence à un index spécifié pour un nombre d'éléments spécifié.</summary>
      <returns>L'index de la première occurrence de <paramref name="value" />, s'il est trouvé dans le <paramref name="array" /> à partir de l'index <paramref name="startIndex" /> à <paramref name="startIndex" /> + <paramref name="count" /> - 1 ; Sinon, la limite inférieure du tableau moins 1.</returns>
      <param name="array">Tableau unidimensionnel à explorer.</param>
      <param name="value">Objet à rechercher dans <paramref name="array" />.</param>
      <param name="startIndex">Index de départ de la recherche.0 (zéro) est valide dans un tableau vide.</param>
      <param name="count">Nombre d'éléments à explorer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> est en dehors de la plage des index valides pour <paramref name="array" />.ou<paramref name="count" /> est inférieur à zéro.ou<paramref name="startIndex" /> et <paramref name="count" /> ne spécifient pas une section valide dans <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> est multidimensionnel.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf``1(``0[],``0)">
      <summary>Recherche l'objet spécifié et retourne l'index de sa première occurrence dans un tableau unidimensionnel.</summary>
      <returns>Index de base zéro de la première occurrence de <paramref name="value" /> dans l'ensemble du <paramref name="array" />, si trouvée ; Sinon, valeur – 1.</returns>
      <param name="array">Le tableau de base zéro unidimensionnel à explorer.</param>
      <param name="value">Objet à rechercher dans <paramref name="array" />.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Array.IndexOf``1(``0[],``0,System.Int32)">
      <summary>Recherche l'objet spécifié dans une plage d'éléments d'un tableau unidimensionnel, et retourne l'index de sa première occurrence.La plage s'étend d'un index spécifié à la fin du tableau.</summary>
      <returns>Index de base zéro de la première occurrence de <paramref name="value" /> dans la plage d'éléments du <paramref name="array" /> qui s'étend de <paramref name="startIndex" /> jusqu'au dernier élément, s'il existe ; sinon, -1.</returns>
      <param name="array">Le tableau de base zéro unidimensionnel à explorer.</param>
      <param name="value">Objet à rechercher dans <paramref name="array" />.</param>
      <param name="startIndex">Index de début de base zéro de la recherche.0 (zéro) est valide dans un tableau vide.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> est en dehors de la plage des index valides pour <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.IndexOf``1(``0[],``0,System.Int32,System.Int32)">
      <summary>Recherche l'objet spécifié dans une plage d'éléments d'un tableau unidimensionnel, et retourne l'index de sa première occurrence.La plage commence à un index spécifié pour un nombre d'éléments spécifié.</summary>
      <returns>Index de base zéro de la première occurrence de <paramref name="value" /> dans la plage d'éléments du <paramref name="array" /> qui commence à <paramref name="startIndex" /> et qui contient le nombre d'éléments spécifiés dans <paramref name="count" />, s'il existe ; sinon, -1.</returns>
      <param name="array">Le tableau de base zéro unidimensionnel à explorer.</param>
      <param name="value">Objet à rechercher dans <paramref name="array" />.</param>
      <param name="startIndex">Index de début de base zéro de la recherche.0 (zéro) est valide dans un tableau vide.</param>
      <param name="count">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> est en dehors de la plage des index valides pour <paramref name="array" />.ou<paramref name="count" /> est inférieur à zéro.ou<paramref name="startIndex" /> et <paramref name="count" /> ne spécifient pas une section valide dans <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.Initialize">
      <summary>Initialise tous les éléments du <see cref="T:System.Array" /> de type valeur en appelant le constructeur par défaut du type valeur.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf(System.Array,System.Object)">
      <summary>Recherche l'objet spécifié et retourne l'index de la dernière occurrence dans l'ensemble du <see cref="T:System.Array" /> unidimensionnel.</summary>
      <returns>Index de la dernière occurrence de <paramref name="value" /> dans le <paramref name="array" /> entier, s'il existe ; sinon, la limite inférieure du tableau -1.</returns>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel à rechercher.</param>
      <param name="value">Objet à rechercher dans <paramref name="array" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> est multidimensionnel.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32)">
      <summary>Recherche l'objet spécifié et retourne l'index de la dernière occurrence dans la plage d'éléments du <see cref="T:System.Array" /> unidimensionnel qui s'étend du premier élément jusqu'à l'index spécifié.</summary>
      <returns>Index de la dernière occurrence de <paramref name="value" /> dans la plage d'éléments de <paramref name="array" /> qui s'étend du premier élément jusqu'à <paramref name="startIndex" />, s'il existe ; sinon, la limite inférieure du tableau -1.</returns>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel à rechercher.</param>
      <param name="value">Objet à rechercher dans <paramref name="array" />.</param>
      <param name="startIndex">Index de départ de la recherche vers le haut.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> est en dehors de la plage des index valides pour <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> est multidimensionnel.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32,System.Int32)">
      <summary>Recherche l'objet spécifié et retourne l'index de la dernière occurrence dans la plage d'éléments du <see cref="T:System.Array" /> unidimensionnel qui contient le nombre d'éléments spécifié et se termine à l'index spécifié.</summary>
      <returns>Index de la dernière occurrence de <paramref name="value" /> dans la plage d'éléments de <paramref name="array" /> qui contient le nombre d'éléments spécifié dans <paramref name="count" /> et se termine à <paramref name="startIndex" />, si cette occurrence existe ; sinon, la limite inférieure du tableau -1.</returns>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel à rechercher.</param>
      <param name="value">Objet à rechercher dans <paramref name="array" />.</param>
      <param name="startIndex">Index de départ de la recherche vers le haut.</param>
      <param name="count">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> est en dehors de la plage des index valides pour <paramref name="array" />.ou<paramref name="count" /> est inférieur à zéro.ou<paramref name="startIndex" /> et <paramref name="count" /> ne spécifient pas une section valide dans <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> est multidimensionnel.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf``1(``0[],``0)">
      <summary>Recherche l'objet spécifié et retourne l'index de la dernière occurrence dans le <see cref="T:System.Array" /> entier.</summary>
      <returns>Index de base zéro de la dernière occurrence de <paramref name="value" /> dans le <paramref name="array" /> entier, si cette occurrence existe ; sinon, -1.</returns>
      <param name="array">
        <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</param>
      <param name="value">Objet à rechercher dans <paramref name="array" />.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32)">
      <summary>Recherche l'objet spécifié et retourne l'index de la dernière occurrence dans la plage d'éléments du <see cref="T:System.Array" /> qui s'étend du premier élément jusqu'à l'index spécifié.</summary>
      <returns>Index de base zéro de la dernière occurrence de <paramref name="value" /> dans la plage d'éléments du <paramref name="array" /> qui s'étend du premier élément jusqu'à <paramref name="startIndex" />, s'il existe ; sinon, -1.</returns>
      <param name="array">
        <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</param>
      <param name="value">Objet à rechercher dans <paramref name="array" />.</param>
      <param name="startIndex">Index de début de base zéro de la recherche vers le haut.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> est en dehors de la plage des index valides pour <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32,System.Int32)">
      <summary>Recherche l'objet spécifié et retourne l'index de la dernière occurrence dans la plage d'éléments du <see cref="T:System.Array" /> qui contient le nombre d'éléments spécifié et se termine à l'index spécifié.</summary>
      <returns>Index de base zéro de la dernière occurrence de <paramref name="value" /> dans la plage d'éléments du <paramref name="array" /> qui contient le nombre d'éléments spécifié dans <paramref name="count" /> et se termine à <paramref name="startIndex" />, s'il existe ; sinon, -1.</returns>
      <param name="array">
        <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</param>
      <param name="value">Objet à rechercher dans <paramref name="array" />.</param>
      <param name="startIndex">Index de début de base zéro de la recherche vers le haut.</param>
      <param name="count">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> est en dehors de la plage des index valides pour <paramref name="array" />.ou<paramref name="count" /> est inférieur à zéro.ou<paramref name="startIndex" /> et <paramref name="count" /> ne spécifient pas une section valide dans <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Array.Length">
      <summary>Obtient un entier 32 bits qui représente le nombre total d'éléments dans toutes les dimensions de <see cref="T:System.Array" />.</summary>
      <returns>Entier 32 bits qui représente le nombre total d'éléments dans toutes les dimensions de <see cref="T:System.Array" /> ; zéro si le tableau ne contient pas d'élément.</returns>
      <exception cref="T:System.OverflowException">Le tableau est multidimensionnel et contient plus de <see cref="F:System.Int32.MaxValue" /> éléments.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Array.Rank">
      <summary>Obtient le rang (nombre de dimensions) de <see cref="T:System.Array" />.Par exemple, un tableau unidimensionnel retourne 1, un tableau bidimensionnel retourne 2, etc.</summary>
      <returns>Rang (nombre de dimensions) de <see cref="T:System.Array" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Resize``1(``0[]@,System.Int32)">
      <summary>Modifie le nombre d'éléments d'un tableau unidimensionnel avec la nouvelle taille spécifiée.</summary>
      <param name="array">Tableau unidimensionnel, de base zéro à redimensionner ou null pour créer un nouveau tableau avec la taille spécifiée.</param>
      <param name="newSize">Taille du nouveau tableau.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="newSize" /> est inférieur à zéro.</exception>
    </member>
    <member name="M:System.Array.Reverse(System.Array)">
      <summary>Inverse l'ordre des éléments dans l'intégralité du <see cref="T:System.Array" /> unidimensionnel.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel à inverser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null. </exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> est multidimensionnel. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Reverse(System.Array,System.Int32,System.Int32)">
      <summary>Inverse l'ordre des éléments dans la plage d'éléments d'un <see cref="T:System.Array" /> unidimensionnel.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel à inverser.</param>
      <param name="index">Index de départ de la section à inverser.</param>
      <param name="length">Nombre d'éléments contenus dans la section à inverser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> est multidimensionnel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à la limite inférieure de <paramref name="array" />.ou<paramref name="length" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <paramref name="array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.SetValue(System.Object,System.Int32)">
      <summary>Affecte une valeur à l'élément à la position spécifiée du <see cref="T:System.Array" /> unidimensionnel.L'index est spécifié en tant qu'entier 32 bits.</summary>
      <param name="value">Nouvelle valeur de l'élément spécifié.</param>
      <param name="index">Entier 32 bits qui représente la position de l'élément <see cref="T:System.Array" /> à définir.</param>
      <exception cref="T:System.ArgumentException">Le <see cref="T:System.Array" /> en cours ne possède pas exactement une dimension.</exception>
      <exception cref="T:System.InvalidCastException">Le cast automatique de <paramref name="value" /> en type d'élément du <see cref="T:System.Array" /> en cours est impossible.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> est en dehors de la plage d'index valide pour le <see cref="T:System.Array" /> en cours.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.SetValue(System.Object,System.Int32[])">
      <summary>Affecte une valeur à l'élément à la position spécifiée du <see cref="T:System.Array" /> multidimensionnel.Les index sont spécifiés sous la forme d'un tableau d'entiers 32 bits.</summary>
      <param name="value">Nouvelle valeur de l'élément spécifié.</param>
      <param name="indices">Tableau unidimensionnel d'entiers 32 bits qui représentent les index spécifiant la position de l'élément à définir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="indices" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le nombre de dimensions dans le <see cref="T:System.Array" /> en cours n'est pas égal au nombre d'éléments dans <paramref name="indices" />.</exception>
      <exception cref="T:System.InvalidCastException">Le cast automatique de <paramref name="value" /> en type d'élément du <see cref="T:System.Array" /> en cours est impossible.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Tous les éléments de <paramref name="indices" /> sont en dehors de la plage d'index valide pour la dimension correspondante du <see cref="T:System.Array" /> en cours.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array)">
      <summary>Trie les éléments dans l'intégralité d'un <see cref="T:System.Array" /> unidimensionnel à l'aide de l'implémentation de <see cref="T:System.IComparable" /> de chaque élément de <see cref="T:System.Array" />.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel à trier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> est multidimensionnel.</exception>
      <exception cref="T:System.InvalidOperationException">Un ou plusieurs éléments de <paramref name="array" /> n'implémentent pas l'interface <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array)">
      <summary>Trie une paire d'objets <see cref="T:System.Array" /> unidimensionnels (l'un contient les clés et l'autre, les éléments correspondants) en fonction des clés du premier <see cref="T:System.Array" /> à l'aide de l'implémentation de <see cref="T:System.IComparable" /> de chaque clé.</summary>
      <param name="keys">
        <see cref="T:System.Array" /> unidimensionnel qui contient les clés à trier.</param>
      <param name="items">
        <see cref="T:System.Array" /> unidimensionnel qui contient les éléments correspondant à chaque clé du <paramref name="keys" /><see cref="T:System.Array" />.ounull pour trier uniquement <paramref name="keys" /><see cref="T:System.Array" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> a la valeur null.</exception>
      <exception cref="T:System.RankException">
        <see cref="T:System.Array" />
        <paramref name="keys" /> est multidimensionnel.ou<see cref="T:System.Array" /><paramref name="items" /> est multidimensionnel.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> n'est pas null et la longueur de <paramref name="keys" /> est supérieure à celle de <paramref name="items" />.</exception>
      <exception cref="T:System.InvalidOperationException">Un ou plusieurs éléments du <see cref="T:System.Array" /><paramref name="keys" /> n'implémentent pas l'interface <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array,System.Collections.IComparer)">
      <summary>Trie une paire d'objets <see cref="T:System.Array" /> unidimensionnels (l'un contient les clés et l'autre, les éléments correspondants) en fonction des clés du premier <see cref="T:System.Array" /> à l'aide de l'objet <see cref="T:System.Collections.IComparer" /> spécifié.</summary>
      <param name="keys">
        <see cref="T:System.Array" /> unidimensionnel qui contient les clés à trier.</param>
      <param name="items">
        <see cref="T:System.Array" /> unidimensionnel qui contient les éléments correspondant à chaque clé du <paramref name="keys" /><see cref="T:System.Array" />.ounull pour trier uniquement <paramref name="keys" /><see cref="T:System.Array" />.</param>
      <param name="comparer">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser lors de la comparaison d'éléments.ounull pour utiliser l'implémentation de <see cref="T:System.IComparable" /> de chaque élément.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> a la valeur null.</exception>
      <exception cref="T:System.RankException">
        <see cref="T:System.Array" />
        <paramref name="keys" /> est multidimensionnel.ou<see cref="T:System.Array" /><paramref name="items" /> est multidimensionnel.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> n'est pas null et la longueur de <paramref name="keys" /> est supérieure à celle de <paramref name="items" />. ouL'implémentation de <paramref name="comparer" /> a provoqué une erreur pendant le tri.Par exemple, <paramref name="comparer" /> peut ne pas retourner 0 lors de la comparaison d'un élément à lui-même.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> est null et un ou plusieurs éléments du <see cref="T:System.Array" /><paramref name="keys" /> n'implémentent pas l'interface <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32)">
      <summary>Trie une plage d'éléments dans une paire d'objets <see cref="T:System.Array" /> unidimensionnels (l'un contient les clés et l'autre, les éléments correspondants) en fonction des clés du premier <see cref="T:System.Array" /> à l'aide de l'implémentation de <see cref="T:System.IComparable" /> de chaque clé.</summary>
      <param name="keys">
        <see cref="T:System.Array" /> unidimensionnel qui contient les clés à trier.</param>
      <param name="items">
        <see cref="T:System.Array" /> unidimensionnel qui contient les éléments correspondant à chaque clé du <paramref name="keys" /><see cref="T:System.Array" />.ounull pour trier uniquement <paramref name="keys" /><see cref="T:System.Array" />.</param>
      <param name="index">Index de départ de la plage à trier.</param>
      <param name="length">Nombre d'éléments à trier dans la plage.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> a la valeur null.</exception>
      <exception cref="T:System.RankException">
        <see cref="T:System.Array" />
        <paramref name="keys" /> est multidimensionnel.ou<see cref="T:System.Array" /><paramref name="items" /> est multidimensionnel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à la limite inférieure de <paramref name="keys" />.ou<paramref name="length" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> n'est pas null et la longueur de <paramref name="keys" /> est supérieure à celle de <paramref name="items" />.ou<paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <see cref="T:System.Array" /><paramref name="keys" />.ou<paramref name="items" /> n'est pas null et <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <see cref="T:System.Array" /><paramref name="items" />.</exception>
      <exception cref="T:System.InvalidOperationException">Un ou plusieurs éléments du <see cref="T:System.Array" /><paramref name="keys" /> n'implémentent pas l'interface <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32,System.Collections.IComparer)">
      <summary>Trie une plage d'éléments dans une paire d'objets <see cref="T:System.Array" /> unidimensionnels (l'un contient les clés et l'autre, les éléments correspondants) en fonction des clés du premier <see cref="T:System.Array" /> à l'aide de l'objet <see cref="T:System.Collections.IComparer" /> spécifié.</summary>
      <param name="keys">
        <see cref="T:System.Array" /> unidimensionnel qui contient les clés à trier.</param>
      <param name="items">
        <see cref="T:System.Array" /> unidimensionnel qui contient les éléments correspondant à chaque clé du <paramref name="keys" /><see cref="T:System.Array" />.ounull pour trier uniquement <paramref name="keys" /><see cref="T:System.Array" />.</param>
      <param name="index">Index de départ de la plage à trier.</param>
      <param name="length">Nombre d'éléments à trier dans la plage.</param>
      <param name="comparer">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser lors de la comparaison d'éléments.ounull pour utiliser l'implémentation de <see cref="T:System.IComparable" /> de chaque élément.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> a la valeur null.</exception>
      <exception cref="T:System.RankException">
        <see cref="T:System.Array" />
        <paramref name="keys" /> est multidimensionnel.ou<see cref="T:System.Array" /><paramref name="items" /> est multidimensionnel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à la limite inférieure de <paramref name="keys" />.ou<paramref name="length" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> n'est pas null et la limite inférieure de <paramref name="keys" /> ne correspond pas à la limite inférieure de <paramref name="items" />.ou<paramref name="items" /> n'est pas null et la longueur de <paramref name="keys" /> est supérieure à celle de <paramref name="items" />.ou<paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <see cref="T:System.Array" /><paramref name="keys" />.ou<paramref name="items" /> n'est pas null et <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <see cref="T:System.Array" /><paramref name="items" />. ouL'implémentation de <paramref name="comparer" /> a provoqué une erreur pendant le tri.Par exemple, <paramref name="comparer" /> peut ne pas retourner 0 lors de la comparaison d'un élément à lui-même.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> est null et un ou plusieurs éléments du <see cref="T:System.Array" /><paramref name="keys" /> n'implémentent pas l'interface <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Collections.IComparer)">
      <summary>Trie les éléments d'un <see cref="T:System.Array" /> unidimensionnel à l'aide de l'objet <see cref="T:System.Collections.IComparer" /> spécifié.</summary>
      <param name="array">Tableau unidimensionnel à trier.</param>
      <param name="comparer">Implémentation à utiliser pendant la comparaison d'éléments.ounull pour utiliser l'implémentation de <see cref="T:System.IComparable" /> de chaque élément.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> est multidimensionnel.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> est null et un ou plusieurs éléments de <paramref name="array" /> n'implémentent pas l'interface <see cref="T:System.IComparable" />.</exception>
      <exception cref="T:System.ArgumentException">L'implémentation de <paramref name="comparer" /> a provoqué une erreur pendant le tri.Par exemple, <paramref name="comparer" /> peut ne pas retourner 0 lors de la comparaison d'un élément à lui-même.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Int32,System.Int32)">
      <summary>Trie les éléments d'une plage d'éléments d'un <see cref="T:System.Array" /> unidimensionnel à l'aide de l'implémentation de <see cref="T:System.IComparable" /> de chaque élément de <see cref="T:System.Array" />.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel à trier.</param>
      <param name="index">Index de départ de la plage à trier.</param>
      <param name="length">Nombre d'éléments à trier dans la plage.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> est multidimensionnel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à la limite inférieure de <paramref name="array" />.ou<paramref name="length" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Un ou plusieurs éléments de <paramref name="array" /> n'implémentent pas l'interface <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Int32,System.Int32,System.Collections.IComparer)">
      <summary>Trie les éléments d'une plage d'éléments d'un <see cref="T:System.Array" /> unidimensionnel à l'aide de l'objet <see cref="T:System.Collections.IComparer" /> spécifié.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel à trier.</param>
      <param name="index">Index de départ de la plage à trier.</param>
      <param name="length">Nombre d'éléments à trier dans la plage.</param>
      <param name="comparer">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser lors de la comparaison d'éléments.ounull pour utiliser l'implémentation de <see cref="T:System.IComparable" /> de chaque élément.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> est multidimensionnel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à la limite inférieure de <paramref name="array" />.ou<paramref name="length" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <paramref name="array" />. ouL'implémentation de <paramref name="comparer" /> a provoqué une erreur pendant le tri.Par exemple, <paramref name="comparer" /> peut ne pas retourner 0 lors de la comparaison d'un élément à lui-même.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> est null et un ou plusieurs éléments de <paramref name="array" /> n'implémentent pas l'interface <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort``1(``0[])">
      <summary>Trie les éléments dans l'intégralité d'un <see cref="T:System.Array" /> à l'aide de l'implémentation de l'interface générique <see cref="T:System.IComparable`1" /> de chaque élément de <see cref="T:System.Array" />.</summary>
      <param name="array">
        <see cref="T:System.Array" /> de base zéro unidimensionnel à trier.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.InvalidOperationException">Un ou plusieurs éléments de <paramref name="array" /> n'implémentent pas l'interface générique <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Collections.Generic.IComparer{``0})">
      <summary>Trie les éléments dans un <see cref="T:System.Array" /> unidimensionnel à l'aide de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> spécifiée.</summary>
      <param name="array">
        <see cref="T:System.Array" /> de base zéro unidimensionnel à trier.</param>
      <param name="comparer">Implémentation de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> à utiliser lors de la comparaison d'éléments, ou null pour utiliser l'implémentation de l'interface générique <see cref="T:System.IComparable`1" /> de chaque élément.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> est null et un ou plusieurs éléments de <paramref name="array" /> n'implémentent pas l'interface générique <see cref="T:System.IComparable`1" />.</exception>
      <exception cref="T:System.ArgumentException">L'implémentation de <paramref name="comparer" /> a provoqué une erreur pendant le tri.Par exemple, <paramref name="comparer" /> peut ne pas retourner 0 lors de la comparaison d'un élément à lui-même.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Comparison{``0})">
      <summary>Trie les éléments dans un <see cref="T:System.Array" /> à l'aide de l'objet <see cref="T:System.Comparison`1" /> spécifié.</summary>
      <param name="array">
        <see cref="T:System.Array" /> de base zéro unidimensionnel à trier.</param>
      <param name="comparison">
        <see cref="T:System.Comparison`1" /> à utiliser lors de la comparaison d'éléments.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.ou<paramref name="comparison" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">L'implémentation de <paramref name="comparison" /> a provoqué une erreur pendant le tri.Par exemple, <paramref name="comparison" /> peut ne pas retourner 0 lors de la comparaison d'un élément à lui-même.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Int32,System.Int32)">
      <summary>Trie les éléments d'une plage d'éléments d'un <see cref="T:System.Array" /> à l'aide de l'implémentation de l'interface générique <see cref="T:System.IComparable`1" /> de chaque élément de <see cref="T:System.Array" />.</summary>
      <param name="array">
        <see cref="T:System.Array" /> de base zéro unidimensionnel à trier.</param>
      <param name="index">Index de départ de la plage à trier.</param>
      <param name="length">Nombre d'éléments à trier dans la plage.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à la limite inférieure de <paramref name="array" />.ou<paramref name="length" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Un ou plusieurs éléments de <paramref name="array" /> n'implémentent pas l'interface générique <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})">
      <summary>Trie les éléments dans une plage d'éléments d'un <see cref="T:System.Array" /> à l'aide de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> spécifiée.</summary>
      <param name="array">
        <see cref="T:System.Array" /> de base zéro unidimensionnel à trier.</param>
      <param name="index">Index de départ de la plage à trier.</param>
      <param name="length">Nombre d'éléments à trier dans la plage.</param>
      <param name="comparer">Implémentation de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> à utiliser lors de la comparaison d'éléments, ou null pour utiliser l'implémentation de l'interface générique <see cref="T:System.IComparable`1" /> de chaque élément.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à la limite inférieure de <paramref name="array" />.ou<paramref name="length" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <paramref name="array" />. ouL'implémentation de <paramref name="comparer" /> a provoqué une erreur pendant le tri.Par exemple, <paramref name="comparer" /> peut ne pas retourner 0 lors de la comparaison d'un élément à lui-même.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> est null et un ou plusieurs éléments de <paramref name="array" /> n'implémentent pas l'interface générique <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[])">
      <summary>Trie une paire d'objets <see cref="T:System.Array" /> (l'un contient les clés et l'autre, les éléments correspondants) en fonction des clés du premier <see cref="T:System.Array" /> à l'aide de l'implémentation de l'interface générique <see cref="T:System.IComparable`1" /> de chaque clé.</summary>
      <param name="keys">
        <see cref="T:System.Array" /> unidimensionnel de base zéro qui contient les clés à trier. </param>
      <param name="items">
        <see cref="T:System.Array" /> unidimensionnel de base zéro qui contient les éléments qui correspondent aux clés dans <paramref name="keys" />, ou null pour trier uniquement <paramref name="keys" />.</param>
      <typeparam name="TKey">Type des éléments du tableau des clés.</typeparam>
      <typeparam name="TValue">Type des éléments du tableau des éléments.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> n'est pas null et la limite inférieure de <paramref name="keys" /> ne correspond pas à la limite inférieure de <paramref name="items" />.ou<paramref name="items" /> n'est pas null et la longueur de <paramref name="keys" /> est supérieure à celle de <paramref name="items" />.</exception>
      <exception cref="T:System.InvalidOperationException">Un ou plusieurs éléments du <see cref="T:System.Array" /><paramref name="keys" /> n'implémentent pas l'interface générique <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[],System.Collections.Generic.IComparer{``0})">
      <summary>Trie une paire d'objets <see cref="T:System.Array" /> (l'un contient les clés et l'autre, les éléments correspondants) en fonction des clés du premier <see cref="T:System.Array" /> à l'aide de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> spécifiée.</summary>
      <param name="keys">
        <see cref="T:System.Array" /> unidimensionnel de base zéro qui contient les clés à trier. </param>
      <param name="items">
        <see cref="T:System.Array" /> unidimensionnel de base zéro qui contient les éléments qui correspondent aux clés dans <paramref name="keys" />, ou null pour trier uniquement <paramref name="keys" />.</param>
      <param name="comparer">Implémentation de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> à utiliser lors de la comparaison d'éléments, ou null pour utiliser l'implémentation de l'interface générique <see cref="T:System.IComparable`1" /> de chaque élément.</param>
      <typeparam name="TKey">Type des éléments du tableau des clés.</typeparam>
      <typeparam name="TValue">Type des éléments du tableau des éléments.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> n'est pas null et la limite inférieure de <paramref name="keys" /> ne correspond pas à la limite inférieure de <paramref name="items" />.ou<paramref name="items" /> n'est pas null et la longueur de <paramref name="keys" /> est supérieure à celle de <paramref name="items" />.ouL'implémentation de <paramref name="comparer" /> a provoqué une erreur pendant le tri.Par exemple, <paramref name="comparer" /> peut ne pas retourner 0 lors de la comparaison d'un élément à lui-même.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> est null et un ou plusieurs éléments du <see cref="T:System.Array" /><paramref name="keys" /> n'implémentent pas l'interface générique <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32)">
      <summary>Trie une plage d'éléments dans une paire d'objets <see cref="T:System.Array" /> unidimensionnels (l'un contient les clés et l'autre, les éléments correspondants) en fonction des clés du premier <see cref="T:System.Array" /> à l'aide de l'implémentation d'interface générique <see cref="T:System.IComparable`1" /> de chaque clé.</summary>
      <param name="keys">
        <see cref="T:System.Array" /> unidimensionnel de base zéro qui contient les clés à trier. </param>
      <param name="items">
        <see cref="T:System.Array" /> unidimensionnel de base zéro qui contient les éléments qui correspondent aux clés dans <paramref name="keys" />, ou null pour trier uniquement <paramref name="keys" />.</param>
      <param name="index">Index de départ de la plage à trier.</param>
      <param name="length">Nombre d'éléments à trier dans la plage.</param>
      <typeparam name="TKey">Type des éléments du tableau des clés.</typeparam>
      <typeparam name="TValue">Type des éléments du tableau des éléments.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à la limite inférieure de <paramref name="keys" />.ou<paramref name="length" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> n'est pas null et la limite inférieure de <paramref name="keys" /> ne correspond pas à la limite inférieure de <paramref name="items" />.ou<paramref name="items" /> n'est pas null et la longueur de <paramref name="keys" /> est supérieure à celle de <paramref name="items" />.ou<paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <see cref="T:System.Array" /><paramref name="keys" />.ou<paramref name="items" /> n'est pas null et <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <see cref="T:System.Array" /><paramref name="items" />.</exception>
      <exception cref="T:System.InvalidOperationException">Un ou plusieurs éléments du <see cref="T:System.Array" /><paramref name="keys" /> n'implémentent pas l'interface générique <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})">
      <summary>Trie une plage d'éléments dans une paire d'objets <see cref="T:System.Array" /> unidimensionnels (l'un contient les clés et l'autre, les éléments correspondants) en fonction des clés du premier <see cref="T:System.Array" /> à l'aide de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> spécifiée.</summary>
      <param name="keys">
        <see cref="T:System.Array" /> unidimensionnel de base zéro qui contient les clés à trier. </param>
      <param name="items">
        <see cref="T:System.Array" /> unidimensionnel de base zéro qui contient les éléments qui correspondent aux clés dans <paramref name="keys" />, ou null pour trier uniquement <paramref name="keys" />.</param>
      <param name="index">Index de départ de la plage à trier.</param>
      <param name="length">Nombre d'éléments à trier dans la plage.</param>
      <param name="comparer">Implémentation de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> à utiliser lors de la comparaison d'éléments, ou null pour utiliser l'implémentation de l'interface générique <see cref="T:System.IComparable`1" /> de chaque élément.</param>
      <typeparam name="TKey">Type des éléments du tableau des clés.</typeparam>
      <typeparam name="TValue">Type des éléments du tableau des éléments.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à la limite inférieure de <paramref name="keys" />.ou<paramref name="length" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> n'est pas null et la limite inférieure de <paramref name="keys" /> ne correspond pas à la limite inférieure de <paramref name="items" />.ou<paramref name="items" /> n'est pas null et la longueur de <paramref name="keys" /> est supérieure à celle de <paramref name="items" />.ou<paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <see cref="T:System.Array" /><paramref name="keys" />.ou<paramref name="items" /> n'est pas null et <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <see cref="T:System.Array" /><paramref name="items" />. ouL'implémentation de <paramref name="comparer" /> a provoqué une erreur pendant le tri.Par exemple, <paramref name="comparer" /> peut ne pas retourner 0 lors de la comparaison d'un élément à lui-même.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> est null et un ou plusieurs éléments du <see cref="T:System.Array" /><paramref name="keys" /> n'implémentent pas l'interface générique <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="P:System.Array.System#Collections#ICollection#Count">
      <summary>Obtient le nombre d'éléments contenus dans la classe <see cref="T:System.Array" />.</summary>
      <returns>Nombre d'éléments contenus dans la collection.</returns>
    </member>
    <member name="P:System.Array.System#Collections#ICollection#IsSynchronized">
      <summary>Obtient une valeur qui indique si l'accès à <see cref="T:System.Array" /> est synchronisé (thread safe).</summary>
      <returns>true si l'accès à <see cref="T:System.Array" /> est synchronisé (thread-safe) ; sinon false.</returns>
    </member>
    <member name="P:System.Array.System#Collections#ICollection#SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Array" />.</summary>
      <returns>Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Array" />.</returns>
    </member>
    <member name="M:System.Array.System#Collections#IList#Add(System.Object)">
      <summary>Appel de cette méthode lève toujours une <see cref="T:System.NotSupportedException" /> exception. </summary>
      <returns>L'ajout d'une valeur à un tableau n'est pas pris en charge.Aucune valeur n'est retournée.</returns>
      <param name="value">Objet à ajouter à <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> est de taille fixe.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#Clear">
      <summary>Supprime tous les éléments de <see cref="T:System.Collections.IList" />.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> est en lecture seule.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#Contains(System.Object)">
      <summary>Détermine si le <see cref="T:System.Collections.IList" /> contient un élément.</summary>
      <returns>true si <paramref name="value" /> se trouve dans <see cref="T:System.Collections.IList" /> ; sinon, false.</returns>
      <param name="value">Objet à rechercher dans la liste active.L'élément à trouver peut être null pour les types référence.</param>
    </member>
    <member name="M:System.Array.System#Collections#IList#IndexOf(System.Object)">
      <summary>Détermine l'index d'un élément spécifique d'<see cref="T:System.Collections.IList" />.</summary>
      <returns>Index de valeur s'il figure dans la liste ; sinon, -1.</returns>
      <param name="value">Objet à rechercher dans la liste active.</param>
    </member>
    <member name="M:System.Array.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Insère un élément dans <see cref="T:System.Collections.IList" /> à l'index spécifié.</summary>
      <param name="index">Index auquel <paramref name="value" /> doit être inséré.</param>
      <param name="value">Objet à insérer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> n'est pas un index valide dans <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> est en lecture seule.ou <see cref="T:System.Collections.IList" /> est de taille fixe. </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="value" /> est une référence null dans <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="P:System.Array.System#Collections#IList#IsFixedSize">
      <summary>Obtient une valeur qui indique si <see cref="T:System.Array" /> est de taille fixe.</summary>
      <returns>true si <see cref="T:System.Array" /> a une taille fixe ; sinon, false.</returns>
    </member>
    <member name="P:System.Array.System#Collections#IList#IsReadOnly">
      <summary>Obtient une valeur qui indique si l'objet <see cref="T:System.Array" /> est en lecture seule.</summary>
      <returns>true si <see cref="T:System.Array" /> est en lecture seule ; sinon, false.</returns>
    </member>
    <member name="P:System.Array.System#Collections#IList#Item(System.Int32)">
      <summary>Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <returns>Élément à l'index spécifié.</returns>
      <param name="index">Index de l'élément à obtenir ou à définir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.ou<paramref name="index" /> est supérieur ou égal à <see cref="P:System.Collections.ICollection.Count" />.</exception>
      <exception cref="T:System.ArgumentException">Le <see cref="T:System.Array" /> en cours ne possède pas exactement une dimension.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#Remove(System.Object)">
      <summary>Supprime la première occurrence d'un objet spécifique de <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Objet à supprimer de <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> est en lecture seule.ou <see cref="T:System.Collections.IList" /> est de taille fixe. </exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Supprime l'élément <see cref="T:System.Collections.IList" /> au niveau de l'index spécifié.</summary>
      <param name="index">Index de l'élément à supprimer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">index n'est pas un index valide dans <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> est en lecture seule.ou <see cref="T:System.Collections.IList" /> est de taille fixe.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Détermine si l'objet collection actuel précède, se situe à la même position que, ou suit un autre objet dans l'ordre de tri.</summary>
      <returns>Entier qui indique la relation de l'objet de collection actuel par rapport aux autres objets, comme indiqué dans le tableau suivant.Valeur de retourDescription-1L'instance actuelle précède <paramref name="other" />.0L'instance actuelle et <paramref name="other" /> sont égaux.1L'instance actuelle suit <paramref name="other" />.</returns>
      <param name="other">Objet à comparer à l'instance en cours.</param>
      <param name="comparer">Objet qui compare l'objet actuel à un objet <paramref name="other" />.</param>
    </member>
    <member name="M:System.Array.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Détermine si un objet est identique à l'instance actuelle.</summary>
      <returns>true si les deux objets sont égaux ; sinon false.</returns>
      <param name="other">Objet à comparer à l'instance en cours.</param>
      <param name="comparer">Un objet qui détermine si l'instance actuelle et <paramref name="other" /> sont égaux. </param>
    </member>
    <member name="M:System.Array.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Retourne un code de hachage pour l'instance actuelle.</summary>
      <returns>Code de hachage de l'instance actuelle.</returns>
      <param name="comparer">Objet qui calcule le code de hachage de l'objet actif.</param>
    </member>
    <member name="M:System.Array.TrueForAll``1(``0[],System.Predicate{``0})">
      <summary>Détermine si chaque élément dans le tableau correspond aux conditions définies par le prédicat spécifié.</summary>
      <returns>true si chaque élément dans <paramref name="array" /> correspond aux conditions définies par le prédicat spécifié ; sinon, false.Si le tableau ne contient pas d'élément, la valeur de retour est true.</returns>
      <param name="array">
        <see cref="T:System.Array" /> de base zéro unidimensionnel à vérifier par rapport aux conditions.</param>
      <param name="match">Le prédicat qui définit les conditions à vérifier par rapport aux éléments.</param>
      <typeparam name="T">Type des éléments du tableau.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.ou<paramref name="match" /> a la valeur null.</exception>
    </member>
    <member name="T:System.ArraySegment`1">
      <summary>Délimite une section d'un tableau unidimensionnel.</summary>
      <typeparam name="T">Type des éléments du segment du tableau.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArraySegment`1.#ctor(`0[])">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.ArraySegment`1" /> qui délimite tous les éléments dans le tableau spécifié.</summary>
      <param name="array">Tableau à encapsuler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.ArraySegment`1" /> qui délimite la plage spécifiée d'éléments dans le tableau spécifié.</summary>
      <param name="array">Tableau contenant la plage d'éléments à délimiter.</param>
      <param name="offset">Index de base zéro du premier élément de la plage.</param>
      <param name="count">Nombre d'éléments dans la plage.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ou <paramref name="count" /> est inférieur à 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> et <paramref name="count" /> ne spécifient pas une plage valide dans <paramref name="array" />.</exception>
    </member>
    <member name="P:System.ArraySegment`1.Array">
      <summary>Obtient le tableau d'origine contenant la plage d'éléments que le segment du tableau délimite.</summary>
      <returns>Le tableau d'origine qui a été passé au constructeur et qui contient la plage délimitée par <see cref="T:System.ArraySegment`1" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ArraySegment`1.Count">
      <summary>Obtient le nombre d'éléments de la plage délimitée par le segment du tableau.</summary>
      <returns>Nombre d'éléments de la plage délimitée par <see cref="T:System.ArraySegment`1" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
      <summary>Détermine si la structure <see cref="T:System.ArraySegment`1" /> spécifiée est égale à l'instance actuelle.</summary>
      <returns>true si la structure <see cref="T:System.ArraySegment`1" /> spécifiée équivaut à l'instance actuelle ; sinon, false.</returns>
      <param name="obj">Structure à comparer à l'instance actuelle.</param>
    </member>
    <member name="M:System.ArraySegment`1.Equals(System.Object)">
      <summary>Détermine si l'objet spécifié est identique à l'instance actuelle.</summary>
      <returns>true si l'objet <see cref="T:System.ArraySegment`1" /> spécifié équivaut à l'instance actuelle ; sinon, false.</returns>
      <param name="obj">Objet à comparer à l'instance actuelle.</param>
    </member>
    <member name="M:System.ArraySegment`1.GetHashCode">
      <summary>Retourne le code de hachage pour l'instance actuelle.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.ArraySegment`1.Offset">
      <summary>Obtient la position du premier élément de la plage délimitée par le segment du tableau, par rapport au début du tableau d'origine.</summary>
      <returns>Position du premier élément de la plage délimitée par <see cref="T:System.ArraySegment`1" />, par rapport au début du tableau d'origine.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
      <summary>Indique si deux structures <see cref="T:System.ArraySegment`1" /> sont égales.</summary>
      <returns>true si <paramref name="a" /> est égal à <paramref name="b" /> ; sinon false.</returns>
      <param name="a">Structure  à gauche de l'opérateur d'égalité.</param>
      <param name="b">Structure à droite de l'opérateur d'égalité.</param>
    </member>
    <member name="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
      <summary>Indique si deux structures <see cref="T:System.ArraySegment`1" /> sont inégales.</summary>
      <returns>true si <paramref name="a" /> n'est pas égal à <paramref name="b" /> ; sinon, false.</returns>
      <param name="a">Structure à gauche de l'opérateur d'inégalité.</param>
      <param name="b">Structure à droite de l'opérateur d'inégalité.</param>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Ajoute un élément au segment de tableau.</summary>
      <param name="item">Objet à ajouter au segment de tableau.</param>
      <exception cref="T:System.NotSupportedException">Le segment de tableau est en lecture seule.</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Supprime tous les éléments du segment de tableau.</summary>
      <exception cref="T:System.NotSupportedException">Le segment de tableau est en lecture seule. </exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Contains(`0)">
      <summary>Détermine si le segment de tableau contient une valeur spécifique.</summary>
      <returns>true si <paramref name="item" /> existe dans le segment de tableau ; sinon, false.</returns>
      <param name="item">Objet à localiser dans le segment de tableau.</param>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)">
      <summary>Copie les éléments du segment de tableau dans un tableau, en commençant au niveau de l'index de tableau spécifié.</summary>
      <param name="array">Tableau unidimensionnel constituant la destination des éléments copiés à partir du segment de tableau.Ce tableau doit avoir une indexation de base zéro.</param>
      <param name="arrayIndex">Index de base zéro dans le <paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> est inférieur à 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.ouLe nombre d'éléments dans le segment de tableau source est supérieur à l'espace disponible entre <paramref name="arrayIndex" /> et la fin du <paramref name="array" /> de destination.ouLe type <paramref name="T" /> ne peut pas être casté automatiquement en type du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Obtient une valeur qui indique si le segment de tableau est en lecture seule.</summary>
      <returns>true si le segment du tableau est en lecture seule ; sinon, false.</returns>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Supprime la première occurrence d'un objet spécifique du segment de tableau.</summary>
      <returns>true si <paramref name="item" /> a été correctement supprimé du segment de tableau ; sinon, false.Cette méthode retourne également false si <paramref name="item" /> est introuvable dans le segment du tableau.</returns>
      <param name="item">Objet à supprimer du segment de tableau.</param>
      <exception cref="T:System.NotSupportedException">Le segment de tableau est en lecture seule.</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Retourne un énumérateur qui effectue une itération au sein du segment de tableau.</summary>
      <returns>Énumérateur qui peut être utilisé pour effectuer une itération au sein du segment de tableau.</returns>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IList{T}#IndexOf(`0)">
      <summary>Détermine l'index d'un élément spécifique dans le segment de tableau.</summary>
      <returns>Index de <paramref name="item" /> s'il figure dans la liste ; sinon, -1.</returns>
      <param name="item">Objet à localiser dans le segment de tableau.</param>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>Insère un élément dans le segment de tableau à l'index spécifié.</summary>
      <param name="index">Index de base zéro auquel <paramref name="item" /> doit être inséré.</param>
      <param name="item">Objet à insérer dans le segment de tableau.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> n'est pas un index valide dans le segment de tableau.</exception>
      <exception cref="T:System.NotSupportedException">Le segment de tableau est en lecture seule.</exception>
    </member>
    <member name="P:System.ArraySegment`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <returns>Élément à l'index spécifié.</returns>
      <param name="index">Index de base zéro de l'élément à obtenir ou à définir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> n'est pas un index valide dans <see cref="T:System.ArraySegment`1" />.</exception>
      <exception cref="T:System.NotSupportedException">La propriété est définie et le segment du tableau est en lecture seule.</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>Supprime l'élément du segment de tableau à l'index spécifié.</summary>
      <param name="index">Index de base zéro de l'élément à supprimer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> n'est pas un index valide dans le segment de tableau.</exception>
      <exception cref="T:System.NotSupportedException">Le segment de tableau est en lecture seule.</exception>
    </member>
    <member name="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList{T}#Item(System.Int32)">
      <summary>Obtient l'élément à l'index spécifié du segment du tableau.</summary>
      <returns>Élément à l'index spécifié.</returns>
      <param name="index">Index de base zéro de l'élément à obtenir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> n'est pas un index valide dans <see cref="T:System.ArraySegment`1" />.</exception>
      <exception cref="T:System.NotSupportedException">La propriété est définie.</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui effectue une itération au sein d'un segment de tableau.</summary>
      <returns>Énumérateur qui peut être utilisé pour effectuer une itération au sein du segment de tableau.</returns>
    </member>
    <member name="T:System.ArrayTypeMismatchException">
      <summary>Exception levée lors d'une tentative de stockage d'un élément de type incorrect dans un tableau. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArrayTypeMismatchException" />.</summary>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArrayTypeMismatchException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'erreur. </param>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArrayTypeMismatchException" /> avec un message d'erreur spécifié et une référence à l'exception interne qui est à l'origine de cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="innerException">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas une référence null, l'exception actuelle est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.AsyncCallback">
      <summary>Référence une méthode à appeler quand une opération asynchrone correspondante se termine.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AsyncCallback.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.AsyncCallback.BeginInvoke(System.IAsyncResult,System.AsyncCallback,System.Object)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AsyncCallback.EndInvoke(System.IAsyncResult)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AsyncCallback.Invoke(System.IAsyncResult)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Attribute">
      <summary>Représente la classe de base pour les attributs personnalisés.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Attribute" />.</summary>
    </member>
    <member name="M:System.Attribute.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si cette instance équivaut à un objet spécifié.</summary>
      <returns>true si <paramref name="obj" /> est égal au type et à la valeur de cette instance ; sinon, false.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> à comparer à cette instance de null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Attribute.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.AttributeTargets">
      <summary>Spécifie les éléments de l'application auxquels un attribut peut être appliqué.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.AttributeTargets.All">
      <summary>L'attribut peut être appliqué à n'importe quel élément de l'application.</summary>
    </member>
    <member name="F:System.AttributeTargets.Assembly">
      <summary>L'attribut peut être appliqué à un assembly.</summary>
    </member>
    <member name="F:System.AttributeTargets.Class">
      <summary>L'attribut peut être appliqué à une classe.</summary>
    </member>
    <member name="F:System.AttributeTargets.Constructor">
      <summary>L'attribut peut être appliqué à un constructeur.</summary>
    </member>
    <member name="F:System.AttributeTargets.Delegate">
      <summary>L'attribut peut être appliqué à un délégué.</summary>
    </member>
    <member name="F:System.AttributeTargets.Enum">
      <summary>L'attribut peut être appliqué à une énumération.</summary>
    </member>
    <member name="F:System.AttributeTargets.Event">
      <summary>L'attribut peut être appliqué à un événement.</summary>
    </member>
    <member name="F:System.AttributeTargets.Field">
      <summary>L'attribut peut être appliqué à un champ.</summary>
    </member>
    <member name="F:System.AttributeTargets.GenericParameter">
      <summary>L'attribut peut être appliqué à un paramètre générique.</summary>
    </member>
    <member name="F:System.AttributeTargets.Interface">
      <summary>L'attribut peut être appliqué à une interface.</summary>
    </member>
    <member name="F:System.AttributeTargets.Method">
      <summary>L'attribut peut être appliqué à une méthode.</summary>
    </member>
    <member name="F:System.AttributeTargets.Module">
      <summary>L'attribut peut être appliqué à un module.</summary>
    </member>
    <member name="F:System.AttributeTargets.Parameter">
      <summary>L'attribut peut être appliqué à un paramètre.</summary>
    </member>
    <member name="F:System.AttributeTargets.Property">
      <summary>L'attribut peut être appliqué à une propriété.</summary>
    </member>
    <member name="F:System.AttributeTargets.ReturnValue">
      <summary>L'attribut peut être appliqué à une valeur de retour.</summary>
    </member>
    <member name="F:System.AttributeTargets.Struct">
      <summary>L'attribut peut être appliqué à une structure, c'est-à-dire à un type valeur.</summary>
    </member>
    <member name="T:System.AttributeUsageAttribute">
      <summary>Spécifie l'utilisation d'une autre classe d'attributs.Cette classe ne peut pas être héritée.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.AttributeUsageAttribute" /> avec la liste spécifiée de <see cref="T:System.AttributeTargets" />, la valeur <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> et la valeur <see cref="P:System.AttributeUsageAttribute.Inherited" />.</summary>
      <param name="validOn">Ensemble de valeurs combinées à l'aide d'une opération de bits OR pour indiquer les éléments de programme valides. </param>
    </member>
    <member name="P:System.AttributeUsageAttribute.AllowMultiple">
      <summary>Obtient ou définit une valeur Boolean indiquant si plusieurs instances de l'attribut indiqué peuvent être spécifiées pour un seul élément de programme.</summary>
      <returns>true si la spécification de plusieurs instances est autorisée ; sinon false.La valeur par défaut est false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AttributeUsageAttribute.Inherited">
      <summary>Obtient ou définit une valeur Boolean indiquant si l'attribut indiqué peut être hérité par des classes dérivées ou des membres de substitution.</summary>
      <returns>true si l'attribut peut être hérité par des classes dérivées ou des membres de substitution ; sinon false.La valeur par défaut est true.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AttributeUsageAttribute.ValidOn">
      <summary>Obtient un ensemble de valeurs identifiant les éléments de programme auxquels l'attribut indiqué peut être appliqué.</summary>
      <returns>Une ou plusieurs valeurs <see cref="T:System.AttributeTargets" />.La valeur par défaut est All.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.BadImageFormatException">
      <summary>Exception levée quand l'image fichier d'une bibliothèque de liens dynamiques (DLL) ou d'un programme exécutable n'est pas valide. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.BadImageFormatException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.BadImageFormatException" />.</summary>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.BadImageFormatException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message décrivant l'erreur. </param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.BadImageFormatException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="inner">Exception ayant provoqué l'exception actuelle.Si le paramètre <paramref name="inner" /> n'est pas une référence null, l'exception actuelle est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.BadImageFormatException" /> avec un message d'erreur et un nom de fichier spécifiés.</summary>
      <param name="message">Message qui décrit l'erreur. </param>
      <param name="fileName">Nom complet du fichier comportant l'image non valide. </param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.BadImageFormatException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="fileName">Nom complet du fichier comportant l'image non valide. </param>
      <param name="inner">Exception ayant provoqué l'exception actuelle.Si le paramètre <paramref name="inner" /> n'est pas null, l'exception actuelle est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="P:System.BadImageFormatException.FileName">
      <summary>Obtient le nom du fichier ayant provoqué cette exception.</summary>
      <returns>Nom du fichier contenant l'image non valide, ou une référence null si aucun nom de fichier n'a été passé au constructeur pour l'instance actuelle.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.BadImageFormatException.Message">
      <summary>Obtient le message d'erreur et le nom du fichier ayant provoqué cette exception.</summary>
      <returns>Chaîne contenant le message d'erreur et le nom du fichier ayant provoqué cette exception.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.BadImageFormatException.ToString">
      <summary>Retourne le nom qualifié complet de cette exception et éventuellement le message d'erreur, le nom de l'exception interne et la trace de la pile.</summary>
      <returns>Chaîne comprenant le nom qualifié complet de cette exception et éventuellement le message d'erreur, le nom de l'exception interne et la trace de la pile.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.Boolean">
      <summary>Représente une valeur booléenne (true ou false).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.CompareTo(System.Boolean)">
      <summary>Compare cette instance à un objet <see cref="T:System.Boolean" /> spécifié et retourne un entier qui indique la relation entre ces deux éléments.</summary>
      <returns>Entier signé indiquant les valeurs relatives de cette instance et <paramref name="value" />.Valeur de retour Condition Inférieure à zéro Cette instance est false et <paramref name="value" /> est true. Zéro Cette instance et <paramref name="value" /> sont égaux (tous les deux sont true ou false). Supérieure à zéro Cette instance est true et <paramref name="value" /> est false. </returns>
      <param name="value">Objet <see cref="T:System.Boolean" /> à comparer à cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.Equals(System.Boolean)">
      <summary>Retourne une valeur indiquant si cette instance équivaut à un objet <see cref="T:System.Boolean" /> spécifié.</summary>
      <returns>true si <paramref name="obj" /> possède la même valeur que cette instance ; sinon, false.</returns>
      <param name="obj">Valeur <see cref="T:System.Boolean" /> à comparer à cette instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si cette instance équivaut à un objet spécifié.</summary>
      <returns>true si <paramref name="obj" /> est <see cref="T:System.Boolean" /> et possède la même valeur que cette instance ; sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Boolean.FalseString">
      <summary>Représente la valeur booléenne false sous forme de chaîne.Ce champ est en lecture seule.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage de l'objet <see cref="T:System.Boolean" /> en cours.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.Parse(System.String)">
      <summary>Convertit la représentation sous forme de chaîne spécifiée d'une valeur logique en son <see cref="T:System.Boolean" /> équivalent, ou lève une exception si la chaîne n'est pas égale à la valeur de <see cref="F:System.Boolean.TrueString" /> ou <see cref="F:System.Boolean.FalseString" />.</summary>
      <returns>true si <paramref name="value" /> est égal à la valeur du champ <see cref="F:System.Boolean.TrueString" /> ; false si <paramref name="value" /> est égal à la valeur du champ <see cref="F:System.Boolean.FalseString" />.</returns>
      <param name="value">Chaîne contenant la valeur à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> n'est pas égale à la valeur du champ <see cref="F:System.Boolean.TrueString" /> ou <see cref="F:System.Boolean.FalseString" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</summary>
      <returns>Entier signé indiquant l'ordre relatif de cette instance et <paramref name="obj" />.Valeur de retour Condition Inférieure à zéro Cette instance est false et <paramref name="obj" /> est true. Zéro Cette instance et <paramref name="obj" /> sont égaux (tous les deux sont true ou false). Supérieure à zéro Cette instance est true et <paramref name="obj" /> est false.ou <paramref name="obj" /> a la valeur null. </returns>
      <param name="obj">Objet à comparer à cette instance ou null.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true ou false.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>1 si la valeur de cette instance est true ; sinon, 0. </returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève un <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Cette conversion n'est pas prise en charge.Aucune valeur n'est retournée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">Vous tentez de convertir une valeur <see cref="T:System.Boolean" /> en valeur <see cref="T:System.Char" />.Cette conversion n'est pas prise en charge.</exception>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève un <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Cette conversion n'est pas prise en charge.Aucune valeur n'est retournée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">Vous tentez de convertir une valeur <see cref="T:System.Boolean" /> en valeur <see cref="T:System.DateTime" />.Cette conversion n'est pas prise en charge.</exception>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</summary>
      <returns>1 si cette instance est true ; sinon, 0.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</summary>
      <returns>1 si cette instance est true ; sinon, 0.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>1 si cette instance est true ; sinon, 0.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>1 si cette instance est true ; sinon, 0.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>1 si cette instance est true ; sinon, 0.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>1 si cette instance est true ; sinon, 0.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</summary>
      <returns>1 si cette instance est true ; sinon, 0.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToString(System.IFormatProvider)"></member>
    <member name="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Objet du type spécifié, avec une valeur qui est équivalente à la valeur de cet objet Boolean.</returns>
      <param name="type">Type souhaité. </param>
      <param name="provider">Implémentation d'<see cref="T:System.IFormatProvider" /> qui fournit des informations propres à la culture sur le format de la valeur retournée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> a la valeur null. </exception>
      <exception cref="T:System.InvalidCastException">La conversion de type demandée n'est pas prise en charge. </exception>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>1 si cette instance est true ; sinon, 0.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>1 si cette instance est true ; sinon, 0.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>1 si cette instance est true ; sinon, 0.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Boolean.ToString">
      <summary>Convertit la valeur de cette instance en sa représentation sous forme de chaîne équivalente ("True" ou "False").</summary>
      <returns>
        <see cref="F:System.Boolean.TrueString" /> si la valeur de cette instance est true ou <see cref="F:System.Boolean.FalseString" /> si la valeur de cette instance est false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Boolean.TrueString">
      <summary>Représente la valeur booléenne true sous forme de chaîne.Ce champ est en lecture seule.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.TryParse(System.String,System.Boolean@)">
      <summary>Tente de convertir la représentation sous forme de chaîne d'une valeur logique en son équivalent <see cref="T:System.Boolean" />.Une valeur de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion de <paramref name="value" /> est réussie ; sinon, false.</returns>
      <param name="value">Chaîne contenant la valeur à convertir. </param>
      <param name="result">Lorsque cette méthode est retournée, si la conversion a réussi, contient true si <paramref name="value" /> est égal à <see cref="F:System.Boolean.TrueString" /> ou false si <paramref name="value" /> est égal à <see cref="F:System.Boolean.FalseString" />.Si la conversion a échoué, contient false.La conversion échoue si <paramref name="value" /> est null ou n'est pas égal à la valeur du champ <see cref="F:System.Boolean.TrueString" /> ou <see cref="F:System.Boolean.FalseString" />.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Buffer">
      <summary>Manipule les tableaux de types primitifs.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Buffer.BlockCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Copie un nombre spécifié d'octets à partir d'un tableau source en commençant à un offset particulier vers un tableau de destination commençant à un offset donné.</summary>
      <param name="src">Mémoire tampon source. </param>
      <param name="srcOffset">Offset d'octet de base zéro dans <paramref name="src" />. </param>
      <param name="dst">Mémoire tampon de destination. </param>
      <param name="dstOffset">Offset d'octet de base zéro dans <paramref name="dst" />. </param>
      <param name="count">Nombre d'octets à copier. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="src" /> ou <paramref name="dst" /> est null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="src" /> ou <paramref name="dst" /> n'est pas un tableau de primitives.ou Le nombre d'octets pour <paramref name="src" /> est inférieur à <paramref name="srcOffset" /> plus <paramref name="count" />.ou Le nombre d'octets pour <paramref name="dst" /> est inférieur à <paramref name="dstOffset" /> plus <paramref name="count" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="srcOffset" />, <paramref name="dstOffset" /> ou <paramref name="count" /> est inférieur à 0. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Buffer.ByteLength(System.Array)">
      <summary>Retourne le nombre d'octets dans le tableau spécifié.</summary>
      <returns>Nombre d'octets dans le tableau.</returns>
      <param name="array">Tableau. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> n'est pas une primitive. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="array" /> est supérieur à 2 gigaoctets (Go).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Buffer.GetByte(System.Array,System.Int32)">
      <summary>Récupère l'octet à un emplacement donné d'un tableau spécifié.</summary>
      <returns>Retourne l'octet <paramref name="index" /> dans le tableau.</returns>
      <param name="array">Tableau. </param>
      <param name="index">Emplacement du tableau. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> n'est pas une primitive. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est négatif ou supérieur à la longueur de <paramref name="array" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="array" /> est supérieur à 2 gigaoctets (Go).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Buffer.MemoryCopy(System.Void*,System.Void*,System.Int64,System.Int64)">
      <summary>Copie un nombre d'octets spécifié comme une valeur d'entier long à partir d'une adresse en mémoire à l'autre. </summary>
      <param name="source">L'adresse d'octets à copier. </param>
      <param name="destination">Adresse cible. </param>
      <param name="destinationSizeInBytes">Le nombre d'octets disponibles dans le bloc de mémoire de destination. </param>
      <param name="sourceBytesToCopy">Nombre d'octets à copier.  </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceBytesToCopy" /> est supérieur à <paramref name="destinationSizeInBytes" />. </exception>
    </member>
    <member name="M:System.Buffer.MemoryCopy(System.Void*,System.Void*,System.UInt64,System.UInt64)">
      <summary>Copie un nombre d'octets spécifié comme une valeur d'entier long non signé à partir d'une adresse en mémoire à l'autre. </summary>
      <param name="source">L'adresse d'octets à copier. </param>
      <param name="destination">Adresse cible. </param>
      <param name="destinationSizeInBytes">Le nombre d'octets disponibles dans le bloc de mémoire de destination. </param>
      <param name="sourceBytesToCopy">Nombre d'octets à copier.   </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceBytesToCopy" /> est supérieur à <paramref name="destinationSizeInBytes" />. </exception>
    </member>
    <member name="M:System.Buffer.SetByte(System.Array,System.Int32,System.Byte)">
      <summary>Assigne une valeur spécifiée à un octet à un emplacement particulier dans un tableau spécifié.</summary>
      <param name="array">Tableau. </param>
      <param name="index">Emplacement du tableau. </param>
      <param name="value">Valeur à assigner. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> n'est pas une primitive. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est négatif ou supérieur à la longueur de <paramref name="array" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="array" /> est supérieur à 2 gigaoctets (Go).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Byte">
      <summary>Représente un entier non signé 8 bits.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.CompareTo(System.Byte)">
      <summary>Compare cette instance à un entier non signé 8 bits et retourne une indication sur leurs valeurs relatives.</summary>
      <returns>Entier signé indiquant l'ordre relatif de cette instance et <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Entier non signé 8 bits à comparer. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.Equals(System.Byte)">
      <summary>Retourne une valeur indiquant si cette instance et un objet <see cref="T:System.Byte" /> spécifié représentent la même valeur.</summary>
      <returns>true si <paramref name="obj" /> est égal à cette instance ; sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si cette instance équivaut à un objet spécifié.</summary>
      <returns>true si <paramref name="obj" /> est une instance de <see cref="T:System.Byte" /> et est égal à la valeur de cette instance ; sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance ou null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage du <see cref="T:System.Byte" /> actuel.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Byte.MaxValue">
      <summary>Représente la plus grande valeur possible d'un <see cref="T:System.Byte" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Byte.MinValue">
      <summary>Représente la plus petite valeur possible de <see cref="T:System.Byte" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre en sa représentation <see cref="T:System.Byte" /> équivalente.</summary>
      <returns>Valeur d'octet qui équivaut au nombre contenu dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir.La chaîne est interprétée à l'aide du style <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Convertit la représentation d'un nombre sous forme de chaîne dans un style spécifié en son équivalent <see cref="T:System.Byte" />.</summary>
      <returns>Valeur d'octet qui équivaut au nombre contenu dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir.La chaîne est interprétée à l'aide du style spécifié par <paramref name="style" />.</param>
      <param name="style">Combinaison de bits de valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre, ayant un style et un format propre à la culture spécifiés, en sa représentation <see cref="T:System.Byte" /> équivalente.</summary>
      <returns>Valeur d'octet qui équivaut au nombre contenu dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir.La chaîne est interprétée à l'aide du style spécifié par <paramref name="style" />.</param>
      <param name="style">Combinaison de bits de valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Objet qui fournit des informations spécifiques à la culture concernant le format de <paramref name="s" />.Si <paramref name="provider" /> est null, la culture actuelle du thread est utilisée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre, ayant un format spécifique à la culture spécifié, en sa représentation <see cref="T:System.Byte" /> équivalente.</summary>
      <returns>Valeur d'octet qui équivaut au nombre contenu dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir.La chaîne est interprétée à l'aide du style <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Objet qui fournit des informations d'analyse spécifiques à la culture concernant <paramref name="s" />.Si <paramref name="provider" /> est null, la culture actuelle du thread est utilisée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</summary>
      <returns>Entier signé indiquant l'ordre relatif de cette instance et <paramref name="value" />.Return value Description Less than zero This instance precedes <paramref name="value" /> in the sort order. Zero This instance occurs in the same position as <paramref name="value" /> in the sort order. Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Objet à comparer à cette instance ou null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Byte" />. </exception>
    </member>
    <member name="M:System.Byte.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true si la valeur de l'instance actuelle est différente de zéro ; sinon, false.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, inchangée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Char" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Cette conversion n'est pas prise en charge.Aucune valeur n'est retournée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Double" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int16" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.SByte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Single" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <paramref name="type" />.</returns>
      <param name="type">Type dans lequel convertir cette valeur <see cref="T:System.Byte" />. </param>
      <param name="provider">Implémentation de <see cref="T:System.IFormatProvider" /> qui fournit des informations sur le format de la valeur retournée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null. </exception>
      <exception cref="T:System.InvalidCastException">The requested type conversion is not supported. </exception>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt16" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Byte.ToString">
      <summary>Convertit la valeur de l'objet <see cref="T:System.Byte" /> actif en sa représentation équivalente sous forme de chaîne.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cet objet, constituée d'une séquence de chiffres entre 0 et 9, sans zéro non significatif.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.ToString(System.IFormatProvider)">
      <summary>Convertit la valeur numérique de l'objet <see cref="T:System.Byte" /> actuel en sa représentation sous forme de chaîne équivalente à l'aide des informations de mise en forme propres à la culture spécifiées.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cet objet, dans le format spécifié par le paramètre <paramref name="provider" />.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.ToString(System.String)">
      <summary>Convertit la valeur de l'objet <see cref="T:System.Byte" /> actuel en sa représentation sous forme de chaîne équivalente en utilisant le format spécifié.</summary>
      <returns>Représentation sous forme de chaîne de l'objet <see cref="T:System.Byte" /> actif, mis en forme tel que spécifié par le paramètre <paramref name="format" />.</returns>
      <param name="format">Chaîne de format numérique.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> includes an unsupported specifier.Supported format specifiers are listed in the Remarks section.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.ToString(System.String,System.IFormatProvider)">
      <summary>Convertit la valeur de l'objet <see cref="T:System.Byte" /> actif en sa représentation sous forme de chaîne équivalente à l'aide du format et des informations de mise en forme spécifiques à la culture spécifiés.</summary>
      <returns>Représentation sous forme de chaîne de l'objet <see cref="T:System.Byte" /> actif, mis en forme tel que spécifié par les paramètres <paramref name="format" /> et <paramref name="provider" />.</returns>
      <param name="format">Chaîne de format numérique standard ou personnalisée.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> includes an unsupported specifier.Supported format specifiers are listed in the Remarks section.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.TryParse(System.String,System.Byte@)">
      <summary>Essaie de convertir la représentation sous forme de chaîne d'un nombre en son équivalent <see cref="T:System.Byte" /> et retourne une valeur indiquant si la conversion a réussi.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false. </returns>
      <param name="s">Chaîne contenant un nombre à convertir.La chaîne est interprétée à l'aide du style <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="result">Quand cette méthode est retournée, contient la valeur <see cref="T:System.Byte" /> équivalente au nombre contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre, ayant un style et un format propre à la culture spécifiés, en sa représentation <see cref="T:System.Byte" /> équivalente.Une valeur de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne contenant un nombre à convertir.La chaîne est interprétée à l'aide du style spécifié par <paramref name="style" />.</param>
      <param name="style">Combinaison de bits de valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />.Si <paramref name="provider" /> est null, la culture actuelle du thread est utilisée.</param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de l'entier signé 8 bits équivalente au nombre contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, n'est pas au format approprié ou représente un nombre inférieur à <see cref="F:System.Byte.MinValue" /> ou supérieur à <see cref="F:System.Byte.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Char">
      <summary>Représente un caractère sous forme d'une unité de code UTF-16.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.CompareTo(System.Char)">
      <summary>Compare cette instance à un objet <see cref="T:System.Char" /> spécifié et indique si cette instance précède, suit ou apparaît à la même position dans l'ordre de tri que l'objet <see cref="T:System.Char" /> spécifié.</summary>
      <returns>Nombre signé indiquant la position de cette instance dans l'ordre de tri par rapport au paramètre <paramref name="value" />.Valeur de retour Description Inférieure à zéro Cette instance précède <paramref name="value" />. Zéro Cette instance a la même position dans l'ordre de tri que <paramref name="value" />. Supérieure à zéro Cette instance suit <paramref name="value" />. </returns>
      <param name="value">Objet <see cref="T:System.Char" /> à comparer. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.ConvertFromUtf32(System.Int32)">
      <summary>Convertit le point de code Unicode spécifié en une chaîne encodée UTF-16.</summary>
      <returns>Chaîne composée d'un objet <see cref="T:System.Char" /> ou d'une paire de substitution d'objets <see cref="T:System.Char" /> équivalents au point de code spécifié par le paramètre <paramref name="utf32" />.</returns>
      <param name="utf32">Point de code Unicode 21 bits. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="utf32" /> n'est pas un point de code Unicode 21 bits valide compris entre U+0 et U+10FFFF, à l'exclusion de la plage de paires de substitution comprise entre U+D800 et U+DFFF. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
      <summary>Convertit la valeur d'une paire de substitution encodée UTF-16 en point de code Unicode.</summary>
      <returns>Point de code Unicode 21 bits représenté par les paramètres <paramref name="highSurrogate" /> et <paramref name="lowSurrogate" />.</returns>
      <param name="highSurrogate">Unité de code de substitution étendue (autrement dit, unité de code comprise entre U+D800 et U+DBFF). </param>
      <param name="lowSurrogate">Unité de code de substitution faible (autrement dit, unité de code comprise entre U+DC00 et U+DFFF). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="highSurrogate" /> n'est pas dans la plage comprise entre U+D800 et U+DBFF, ou <paramref name="lowSurrogate" /> n'est pas dans la plage comprise entre U+DC00 et U+DFFF. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ConvertToUtf32(System.String,System.Int32)">
      <summary>Convertit la valeur d'une paire de substitution ou d'un caractère encodé UTF-16 à un emplacement précis d'une chaîne en un point de code Unicode.</summary>
      <returns>Point de code Unicode 21 bits représenté par le caractère ou la paire de substitution à l'emplacement du paramètre <paramref name="s" /> spécifié par le paramètre <paramref name="index" />.</returns>
      <param name="s">Chaîne qui contient un caractère ou une paire de substitution. </param>
      <param name="index">Position d'index du caractère ou de la paire de substitution dans <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ne correspond pas à une position dans <paramref name="s" />. </exception>
      <exception cref="T:System.ArgumentException">La position d'index spécifiée contient une paire de substitution, et le premier caractère de la paire n'est pas un caractère de substitution étendu valide ou le deuxième caractère de la paire n'est pas un caractère de substitution faible valide. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.Equals(System.Char)">
      <summary>Retourne une valeur qui indique si cette instance équivaut à l'objet <see cref="T:System.Char" /> spécifié.</summary>
      <returns>true si le paramètre <paramref name="obj" /> est égal à la valeur de cette instance ; sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.Equals(System.Object)">
      <summary>Retourne une valeur qui indique si cette instance est égale à un objet spécifié.</summary>
      <returns>true si <paramref name="obj" /> est une instance de <see cref="T:System.Char" /> et est égal à la valeur de cette instance ; sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance ou null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.GetNumericValue(System.Char)">
      <summary>Convertit le caractère Unicode numérique spécifié en un nombre à virgule flottante double précision.</summary>
      <returns>Valeur numérique de <paramref name="c" /> si ce caractère représente un nombre ; sinon, -1,0.</returns>
      <param name="c">Caractère Unicode à convertir. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.GetNumericValue(System.String,System.Int32)">
      <summary>Convertit le caractère Unicode numérique à la position spécifiée dans une chaîne spécifiée en un nombre à virgule flottante double précision.</summary>
      <returns>Valeur numérique du caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> si ce caractère représente un nombre ; sinon, -1.</returns>
      <param name="s">
        <see cref="T:System.String" />
      </param>
      <param name="index">Position du caractère dans <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsControl(System.Char)">
      <summary>Indique si le caractère Unicode spécifié est classé dans la catégorie des caractères de contrôle.</summary>
      <returns>true si <paramref name="c" /> est un caractère de contrôle ; sinon, false.</returns>
      <param name="c">Caractère Unicode à évaluer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsControl(System.String,System.Int32)">
      <summary>Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des caractères de contrôle.</summary>
      <returns>true si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est un caractère de contrôle ; sinon, false.</returns>
      <param name="s">Une chaîne. </param>
      <param name="index">Position du caractère à évaluer dans <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsDigit(System.Char)">
      <summary>Indique si le caractère Unicode spécifié est classé dans la catégorie des chiffres décimaux.</summary>
      <returns>true si <paramref name="c" /> est un chiffre décimal ; sinon, false.</returns>
      <param name="c">Caractère Unicode à évaluer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsDigit(System.String,System.Int32)">
      <summary>Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des chiffres décimaux.</summary>
      <returns>true si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est un chiffre décimal ; sinon, false.</returns>
      <param name="s">Une chaîne. </param>
      <param name="index">Position du caractère à évaluer dans <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsHighSurrogate(System.Char)">
      <summary>Indique si l'objet <see cref="T:System.Char" /> spécifié est un caractère de substitution étendu.</summary>
      <returns>true si la valeur numérique du paramètre <paramref name="c" /> est comprise entre U+D800 et U+DBFF ; sinon, false.</returns>
      <param name="c">Caractère Unicode à évaluer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
      <summary>Indique si l'objet <see cref="T:System.Char" /> à la position spécifiée dans une chaîne est un caractère de substitution étendu.</summary>
      <returns>true si la valeur numérique du caractère spécifié dans le paramètre <paramref name="s" /> est comprise entre U+D800 et U+DBFF ; sinon, false.</returns>
      <param name="s">Une chaîne. </param>
      <param name="index">Position du caractère à évaluer dans <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ne correspond pas à une position dans <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetter(System.Char)">
      <summary>Indique si le caractère Unicode spécifié est classé dans la catégorie des lettres Unicode. </summary>
      <returns>true si <paramref name="c" /> est une lettre ; sinon, false.</returns>
      <param name="c">Caractère Unicode à évaluer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetter(System.String,System.Int32)">
      <summary>Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des lettres Unicode.</summary>
      <returns>true si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est une lettre ; sinon, false.</returns>
      <param name="s">Une chaîne. </param>
      <param name="index">Position du caractère à évaluer dans <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetterOrDigit(System.Char)">
      <summary>Indique si le caractère Unicode spécifié est classé dans la catégorie des lettres ou des chiffres décimaux.</summary>
      <returns>true si <paramref name="c" /> est une lettre ou un chiffre décimal ; sinon, false.</returns>
      <param name="c">Caractère Unicode à évaluer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetterOrDigit(System.String,System.Int32)">
      <summary>Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des lettres ou des chiffres décimaux.</summary>
      <returns>true si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est une lettre ou un chiffre décimal ; sinon, false.</returns>
      <param name="s">Une chaîne. </param>
      <param name="index">Position du caractère à évaluer dans <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLower(System.Char)">
      <summary>Indique si le caractère Unicode spécifié est classé dans la catégorie des lettres minuscules.</summary>
      <returns>true si <paramref name="c" /> est une lettre minuscule ; sinon, false.</returns>
      <param name="c">Caractère Unicode à évaluer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLower(System.String,System.Int32)">
      <summary>Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des minuscules.</summary>
      <returns>true si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est une lettre minuscule ; sinon, false.</returns>
      <param name="s">Une chaîne. </param>
      <param name="index">Position du caractère à évaluer dans <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLowSurrogate(System.Char)">
      <summary>Indique si l'objet <see cref="T:System.Char" /> spécifié est un caractère de substitution faible.</summary>
      <returns>true si la valeur numérique du paramètre <paramref name="c" /> est comprise entre U+DC00 et U+DFFF ; sinon, false.</returns>
      <param name="c">Caractère à évaluer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
      <summary>Indique si l'objet <see cref="T:System.Char" /> à la position spécifiée dans une chaîne est un caractère de substitution faible.</summary>
      <returns>true si la valeur numérique du caractère spécifié dans le paramètre <paramref name="s" /> est comprise entre U+DC00 et U+DFFF ; sinon, false.</returns>
      <param name="s">Une chaîne. </param>
      <param name="index">Position du caractère à évaluer dans <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ne correspond pas à une position dans <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsNumber(System.Char)">
      <summary>Indique si le caractère Unicode spécifié est classé dans la catégorie des nombres.</summary>
      <returns>true si <paramref name="c" /> est un nombre ; sinon, false.</returns>
      <param name="c">Caractère Unicode à évaluer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsNumber(System.String,System.Int32)">
      <summary>Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des nombres.</summary>
      <returns>true si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est un nombre ; sinon, false.</returns>
      <param name="s">Une chaîne. </param>
      <param name="index">Position du caractère à évaluer dans <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsPunctuation(System.Char)">
      <summary>Indique si le caractère Unicode spécifié est classé dans la catégorie des signes de ponctuation.</summary>
      <returns>true si <paramref name="c" /> est un signe de ponctuation ; sinon, false.</returns>
      <param name="c">Caractère Unicode à évaluer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsPunctuation(System.String,System.Int32)">
      <summary>Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des signes de ponctuation.</summary>
      <returns>true si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est un signe de ponctuation ; sinon, false.</returns>
      <param name="s">Une chaîne. </param>
      <param name="index">Position du caractère à évaluer dans <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSeparator(System.Char)">
      <summary>Indique si le caractère Unicode spécifié est classé dans la catégorie des caractères de séparation.</summary>
      <returns>true si <paramref name="c" /> est un caractère de séparation ; sinon, false.</returns>
      <param name="c">Caractère Unicode à évaluer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSeparator(System.String,System.Int32)">
      <summary>Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des caractères de séparation.</summary>
      <returns>true si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est un caractère de séparation ; sinon, false.</returns>
      <param name="s">Une chaîne. </param>
      <param name="index">Position du caractère à évaluer dans <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogate(System.Char)">
      <summary>Indique si le caractère spécifié possède une unité de code de substitution.</summary>
      <returns>true si <paramref name="c" /> est un substitut étendu ou faible ; sinon, false.</returns>
      <param name="c">Caractère Unicode à évaluer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogate(System.String,System.Int32)">
      <summary>Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée possède une unité de code de substitution.</summary>
      <returns>true si le caractère à la position <paramref name="index" /> dans <paramref name="s" /> est un substitut étendu ou faible ; sinon, false.</returns>
      <param name="s">Une chaîne. </param>
      <param name="index">Position du caractère à évaluer dans <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogatePair(System.Char,System.Char)">
      <summary>Indique si les deux objets <see cref="T:System.Char" /> spécifiés forment une paire de substitution.</summary>
      <returns>true si la valeur numérique du paramètre <paramref name="highSurrogate" /> est comprise entre U+D800 et U+DBFF, et si la valeur numérique du paramètre <paramref name="lowSurrogate" /> est comprise entre U+DC00 et U+DFFF ; sinon, false.</returns>
      <param name="highSurrogate">Caractère à évaluer comme substitut étendu d'une paire de substitution. </param>
      <param name="lowSurrogate">Caractère à évaluer comme substitut faible d'une paire de substitution. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
      <summary>Indique si deux objets <see cref="T:System.Char" /> adjacents à une position spécifiée dans une chaîne forment une paire de substitution.</summary>
      <returns>true si le paramètre <paramref name="s" /> inclut des caractères adjacents aux positions <paramref name="index" /> et <paramref name="index" /> + 1, et que la valeur numérique du caractère à la position <paramref name="index" /> est comprise entre U+D800 et U+DBFF, et que la valeur numérique du caractère à la position <paramref name="index" />+1 est comprise entre U+DC00 et U+DFFF ; sinon, false.</returns>
      <param name="s">Une chaîne. </param>
      <param name="index">Position de départ de la paire de caractères à évaluer dans <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ne correspond pas à une position dans <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSymbol(System.Char)">
      <summary>Indique si le caractère Unicode spécifié est classé dans la catégorie des symboles.</summary>
      <returns>true si <paramref name="c" /> est un symbole ; sinon, false.</returns>
      <param name="c">Caractère Unicode à évaluer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSymbol(System.String,System.Int32)">
      <summary>Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des symboles.</summary>
      <returns>true si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est un symbole ; sinon, false.</returns>
      <param name="s">Une chaîne. </param>
      <param name="index">Position du caractère à évaluer dans <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsUpper(System.Char)">
      <summary>Indique si le caractère Unicode spécifié est classé dans la catégorie des lettres majuscules.</summary>
      <returns>true si <paramref name="c" /> est une lettre majuscule ; sinon, false.</returns>
      <param name="c">Caractère Unicode à évaluer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsUpper(System.String,System.Int32)">
      <summary>Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des majuscules.</summary>
      <returns>true si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est une lettre majuscule ; sinon, false.</returns>
      <param name="s">Une chaîne. </param>
      <param name="index">Position du caractère à évaluer dans <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsWhiteSpace(System.Char)">
      <summary>Indique si le caractère Unicode spécifié est classé dans la catégorie des espaces blancs.</summary>
      <returns>true si <paramref name="c" /> est un espace blanc ; sinon, false.</returns>
      <param name="c">Caractère Unicode à évaluer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
      <summary>Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des espaces blancs.</summary>
      <returns>true si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est un espace blanc ; sinon, false.</returns>
      <param name="s">Une chaîne. </param>
      <param name="index">Position du caractère à évaluer dans <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Char.MaxValue">
      <summary>Représente la plus grande valeur possible de <see cref="T:System.Char" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Char.MinValue">
      <summary>Représente la plus petite valeur possible de <see cref="T:System.Char" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.Parse(System.String)">
      <summary>Convertit la valeur de la chaîne spécifiée en caractère Unicode équivalent.</summary>
      <returns>Caractère Unicode équivalant au caractère unique dans <paramref name="s" />.</returns>
      <param name="s">Chaîne qui contient un seul caractère, ou null. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.FormatException">La longueur de <paramref name="s" /> n'est pas 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</summary>
      <returns>Entier signé qui indique la position de cette instance dans l'ordre de tri par rapport au paramètre <paramref name="value" />.Valeur de retour Description Inférieure à zéro Cette instance précède <paramref name="value" /> dans l'ordre de tri. Zéro Cette instance a la même position dans l'ordre de tri que <paramref name="value" />. Supérieure à zéro Cette instance suit <paramref name="value" /> dans l'ordre de tri.ou <paramref name="value" /> a la valeur null. </returns>
      <param name="value">Objet auquel comparer cette instance ou null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> n'est pas un objet <see cref="T:System.Char" />. </exception>
    </member>
    <member name="M:System.Char.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Remarque Cette conversion n'est pas prise en charge.Toute tentative de ce type lève <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Cette conversion n'est pas prise en charge.Aucune valeur n'est retournée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">Cette conversion n'est pas prise en charge.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.Char" /> actuel.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</summary>
      <returns>Valeur de l'objet <see cref="T:System.Char" /> actuel inchangée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Remarque Cette conversion n'est pas prise en charge.Toute tentative de ce type lève <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Aucune valeur n'est retournée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">Cette conversion n'est pas prise en charge.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Remarque Cette conversion n'est pas prise en charge.Toute tentative de ce type lève <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Aucune valeur n'est retournée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">Cette conversion n'est pas prise en charge.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Remarque Cette conversion n'est pas prise en charge.Toute tentative de ce type lève <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Aucune valeur n'est retournée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">Cette conversion n'est pas prise en charge.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary> Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.Char" /> actuel.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.Char" /> actuel.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary> Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.Char" /> actuel.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary> Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.Char" /> actuel.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Remarque Cette conversion n'est pas prise en charge.Toute tentative de ce type lève <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Aucune valeur n'est retournée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">Cette conversion n'est pas prise en charge.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToString(System.IFormatProvider)"></member>
    <member name="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</summary>
      <returns>Objet du type spécifié.</returns>
      <param name="type">Objet <see cref="T:System.Type" />. </param>
      <param name="provider">Objet <see cref="T:System.IFormatProvider" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> a la valeur null.</exception>
      <exception cref="T:System.InvalidCastException">La valeur de l'objet <see cref="T:System.Char" /> en cours ne peut pas être convertie dans le type spécifié par le paramètre <paramref name="type" />. </exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.Char" /> actuel.</returns>
      <param name="provider">Objet <see cref="T:System.IFormatProvider" />.(Spécifiez null car le paramètre <paramref name="provider" /> est ignoré.)</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.Char" /> actuel.</returns>
      <param name="provider">Objet <see cref="T:System.IFormatProvider" />.(Spécifiez null car le paramètre <paramref name="provider" /> est ignoré.)</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.Char" /> actuel.</returns>
      <param name="provider">Objet <see cref="T:System.IFormatProvider" />.(Spécifiez null car le paramètre <paramref name="provider" /> est ignoré.)</param>
    </member>
    <member name="M:System.Char.ToLower(System.Char)">
      <summary>Convertit la valeur d'un caractère Unicode en son équivalent en minuscules.</summary>
      <returns>L'équivalent en minuscule de <paramref name="c" />, ou la valeur inchangée de <paramref name="c" /> si <paramref name="c" /> est déjà en minuscule ou non alphabétique.</returns>
      <param name="c">Caractère Unicode à convertir. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToLowerInvariant(System.Char)">
      <summary>Convertit la valeur d'un caractère Unicode en son équivalent minuscule à l'aide des règles de casse de la culture dite indifférente.</summary>
      <returns>L'équivalent en minuscule du paramètre <paramref name="c" />, ou la valeur inchangée de <paramref name="c" /> si <paramref name="c" /> est déjà en minuscule ou non alphabétique.</returns>
      <param name="c">Caractère Unicode à convertir. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToString">
      <summary>Convertit la valeur de cette instance en sa représentation sous forme de chaîne équivalente.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToString(System.Char)">
      <summary>Convertit le caractère Unicode spécifié en sa représentation sous forme de chaîne équivalente.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de <paramref name="c" />.</returns>
      <param name="c">Caractère Unicode à convertir. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToUpper(System.Char)">
      <summary>Convertit la valeur d'un caractère Unicode en son équivalent en majuscule.</summary>
      <returns>Équivalent en majuscules de <paramref name="c" />, ou valeur inchangée de <paramref name="c" /> si <paramref name="c" /> est déjà en majuscules, n'a pas d'équivalent en majuscules ou est non alphabétique.</returns>
      <param name="c">Caractère Unicode à convertir. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToUpperInvariant(System.Char)">
      <summary>Convertit la valeur d'un caractère Unicode en son équivalent en majuscule à l'aide des règles de casse de la culture dite indifférente.</summary>
      <returns>L'équivalent en majuscule du paramètre <paramref name="c" />, ou la valeur inchangée de <paramref name="c" /> si <paramref name="c" /> est déjà en majuscule ou non alphabétique.</returns>
      <param name="c">Caractère Unicode à convertir. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.TryParse(System.String,System.Char@)">
      <summary>Convertit la valeur de la chaîne spécifiée en caractère Unicode équivalent.Un code de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion du paramètre <paramref name="s" /> a réussi ; sinon, false.</returns>
      <param name="s">Chaîne qui contient un seul caractère, ou null. </param>
      <param name="result">Quand cette méthode est retournée, contient un caractère Unicode équivalent au seul caractère de <paramref name="s" /> si la conversion a réussi, ou une valeur indéfinie si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou si la longueur de <paramref name="s" /> n'est pas égale à 1.Ce paramètre est passé sans être initialisé.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.CLSCompliantAttribute">
      <summary>Indique si un élément de programme est conforme CLS (Common Language Specification).Cette classe ne peut pas être héritée.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.CLSCompliantAttribute.#ctor(System.Boolean)">
      <summary>Initialise une instance de la classe <see cref="T:System.CLSCompliantAttribute" /> avec une valeur Boolean indiquant si l'élément de programme indiqué est conforme CLS.</summary>
      <param name="isCompliant">true si conforme CLS ; sinon false. </param>
    </member>
    <member name="P:System.CLSCompliantAttribute.IsCompliant">
      <summary>Obtient la valeur Boolean indiquant si l'élément de programme indiqué est conforme CLS.</summary>
      <returns>true si l'élément de programme est conforme CLS ; sinon false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Comparison`1">
      <summary>Représente la méthode qui compare deux objets du même type.</summary>
      <typeparam name="T">Type des objets à comparer.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Comparison`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Comparison`1.BeginInvoke(`0,`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Comparison`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Comparison`1.Invoke(`0,`0)"></member>
    <member name="T:System.DateTime">
      <summary>Représente un instant, généralement exprimé sous la forme d'une date et d'une heure. Pour parcourir le code source de .NET Framework pour ce type, consultez la Reference Source.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.DateTime" /> avec l'année, le mois et le jour spécifiés.</summary>
      <param name="year">Année (1 à 9999). </param>
      <param name="month">Mois (1 à 12). </param>
      <param name="day">Jour (de 1 au nombre de jours de <paramref name="month" />). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> est inférieur à 1 ou supérieur à 9999.ou <paramref name="month" /> est inférieur à 1 ou supérieur à 12.ou <paramref name="day" /> est inférieur à 1 ou supérieur au nombre de jours de <paramref name="month" />. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.DateTime" /> avec l'année, le mois, le jour, l'heure, la minute et la seconde spécifiés.</summary>
      <param name="year">Année (1 à 9999). </param>
      <param name="month">Mois (1 à 12). </param>
      <param name="day">Jour (de 1 au nombre de jours de <paramref name="month" />). </param>
      <param name="hour">Heures (0 à 23). </param>
      <param name="minute">Minutes (0 à 59). </param>
      <param name="second">Secondes (0 à 59). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> est inférieur à 1 ou supérieur à 9999. ou <paramref name="month" /> est inférieur à 1 ou supérieur à 12. ou <paramref name="day" /> est inférieur à 1 ou supérieur au nombre de jours de <paramref name="month" />.ou <paramref name="hour" /> est inférieur à 0 ou supérieur à 23. ou <paramref name="minute" /> est inférieur à 0 ou supérieure à 59. ou <paramref name="second" /> est inférieur à 0 ou supérieure à 59. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.DateTime" /> avec l'année, le mois, le jour, l'heure, la minute, la seconde et l'heure UTC ou locale.</summary>
      <param name="year">Année (1 à 9999). </param>
      <param name="month">Mois (1 à 12). </param>
      <param name="day">Jour (de 1 au nombre de jours de <paramref name="month" />). </param>
      <param name="hour">Heures (0 à 23). </param>
      <param name="minute">Minutes (0 à 59). </param>
      <param name="second">Secondes (0 à 59). </param>
      <param name="kind">Une des valeurs d'énumération qui indique si <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" /> et <paramref name="second" /> spécifient une heure locale, une heure UTC, ou aucune des deux.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> est inférieur à 1 ou supérieur à 9999. ou <paramref name="month" /> est inférieur à 1 ou supérieur à 12. ou <paramref name="day" /> est inférieur à 1 ou supérieur au nombre de jours de <paramref name="month" />.ou <paramref name="hour" /> est inférieur à 0 ou supérieur à 23. ou <paramref name="minute" /> est inférieur à 0 ou supérieure à 59. ou <paramref name="second" /> est inférieur à 0 ou supérieure à 59. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="kind" /> ne fait pas partie des valeurs <see cref="T:System.DateTimeKind" />.</exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.DateTime" /> avec l'année, le mois, le jour, l'heure, la minute, la seconde et la milliseconde spécifiés.</summary>
      <param name="year">Année (1 à 9999). </param>
      <param name="month">Mois (1 à 12). </param>
      <param name="day">Jour (de 1 au nombre de jours de <paramref name="month" />). </param>
      <param name="hour">Heures (0 à 23). </param>
      <param name="minute">Minutes (0 à 59). </param>
      <param name="second">Secondes (0 à 59). </param>
      <param name="millisecond">Millisecondes (0 à 999). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> est inférieur à 1 ou supérieur à 9999.ou <paramref name="month" /> est inférieur à 1 ou supérieur à 12.ou <paramref name="day" /> est inférieur à 1 ou supérieur au nombre de jours de <paramref name="month" />.ou <paramref name="hour" /> est inférieur à 0 ou supérieur à 23.ou <paramref name="minute" /> est inférieur à 0 ou supérieure à 59.ou <paramref name="second" /> est inférieur à 0 ou supérieure à 59.ou <paramref name="millisecond" /> est inférieur à 0 ou supérieur à 999. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.DateTime" /> avec l'année, le mois, le jour, l'heure, la minute, la seconde, la milliseconde et l'heure UTC ou locale.</summary>
      <param name="year">Année (1 à 9999). </param>
      <param name="month">Mois (1 à 12). </param>
      <param name="day">Jour (de 1 au nombre de jours de <paramref name="month" />). </param>
      <param name="hour">Heures (0 à 23). </param>
      <param name="minute">Minutes (0 à 59). </param>
      <param name="second">Secondes (0 à 59). </param>
      <param name="millisecond">Millisecondes (0 à 999). </param>
      <param name="kind">Une des valeurs d'énumération qui indique si <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" /> et <paramref name="millisecond" /> spécifient une heure locale, une heure UTC, ou aucune des deux.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> est inférieur à 1 ou supérieur à 9999.ou <paramref name="month" /> est inférieur à 1 ou supérieur à 12.ou <paramref name="day" /> est inférieur à 1 ou supérieur au nombre de jours de <paramref name="month" />.ou <paramref name="hour" /> est inférieur à 0 ou supérieur à 23.ou <paramref name="minute" /> est inférieur à 0 ou supérieure à 59.ou <paramref name="second" /> est inférieur à 0 ou supérieure à 59.ou <paramref name="millisecond" /> est inférieur à 0 ou supérieur à 999. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="kind" /> ne fait pas partie des valeurs <see cref="T:System.DateTimeKind" />.</exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int64)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.DateTime" /> avec le nombre de graduations spécifié.</summary>
      <param name="ticks">Date et heure exprimées en nombre d'intervalles de 100 nanosecondes écoulés depuis le 1er janvier 0001 à 00:00:00.000 (minuit) dans le calendrier grégorien. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ticks" /> est inférieur à <see cref="F:System.DateTime.MinValue" /> ou supérieur à <see cref="F:System.DateTime.MaxValue" />. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int64,System.DateTimeKind)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.DateTime" /> avec un nombre spécifié de graduations et une heure UTC ou locale.</summary>
      <param name="ticks">Date et heure exprimées en nombre d'intervalles de 100 nanosecondes écoulés depuis le 1er janvier 0001 à 00:00:00.000 (minuit) dans le calendrier grégorien. </param>
      <param name="kind">Une des valeurs d'énumération qui indique si <paramref name="ticks" /> spécifie une heure locale, une heure UTC, ou aucune des deux.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ticks" /> est inférieur à <see cref="F:System.DateTime.MinValue" /> ou supérieur à <see cref="F:System.DateTime.MaxValue" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="kind" /> ne fait pas partie des valeurs <see cref="T:System.DateTimeKind" />.</exception>
    </member>
    <member name="M:System.DateTime.Add(System.TimeSpan)">
      <summary>Retourne un nouveau <see cref="T:System.DateTime" /> qui ajoute la valeur du <see cref="T:System.TimeSpan" /> spécifié à la valeur de cette instance.</summary>
      <returns>Objet dont la valeur est la somme de la date et de l'heure représentées par cette instance et de l'intervalle de temps représenté par <paramref name="value" />.</returns>
      <param name="value">Intervalle de temps positif ou négatif. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le <see cref="T:System.DateTime" /> obtenu est inférieur à <see cref="F:System.DateTime.MinValue" /> ou supérieur à <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddDays(System.Double)">
      <summary>Retourne un nouveau <see cref="T:System.DateTime" /> qui ajoute le nombre de jours spécifié à la valeur de cette instance.</summary>
      <returns>Objet dont la valeur est égale à la somme de la date et de l'heure représentées par cette instance et du nombre de jours représenté par <paramref name="value" />.</returns>
      <param name="value">Nombre de jours entiers et partiels.Le paramètre <paramref name="value" /> peut être négatif ou positif.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le <see cref="T:System.DateTime" /> obtenu est inférieur à <see cref="F:System.DateTime.MinValue" /> ou supérieur à <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddHours(System.Double)">
      <summary>Retourne un nouveau <see cref="T:System.DateTime" /> qui ajoute le nombre d'heures spécifié à la valeur de cette instance.</summary>
      <returns>Objet dont la valeur est égale à la somme de la date et de l'heure représentées par cette instance et du nombre d'heures représenté par <paramref name="value" />.</returns>
      <param name="value">Nombre d'heures entières et partielles.Le paramètre <paramref name="value" /> peut être négatif ou positif.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le <see cref="T:System.DateTime" /> obtenu est inférieur à <see cref="F:System.DateTime.MinValue" /> ou supérieur à <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddMilliseconds(System.Double)">
      <summary>Retourne un nouveau <see cref="T:System.DateTime" /> qui ajoute le nombre de millisecondes spécifié à la valeur de cette instance.</summary>
      <returns>Objet dont la valeur est égale à la somme de la date et de l'heure représentées par cette instance et du nombre de millisecondes représenté par <paramref name="value" />.</returns>
      <param name="value">Nombre de millisecondes entières et partielles.Le paramètre <paramref name="value" /> peut être négatif ou positif.Notez que cette valeur est arrondie à l'entier le plus proche.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le <see cref="T:System.DateTime" /> obtenu est inférieur à <see cref="F:System.DateTime.MinValue" /> ou supérieur à <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddMinutes(System.Double)">
      <summary>Retourne un nouveau <see cref="T:System.DateTime" /> qui ajoute le nombre de minutes spécifié à la valeur de cette instance.</summary>
      <returns>Objet dont la valeur est égale à la somme de la date et de l'heure représentées par cette instance et du nombre de minutes représenté par <paramref name="value" />.</returns>
      <param name="value">Nombre de minutes entières et partielles.Le paramètre <paramref name="value" /> peut être négatif ou positif.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le <see cref="T:System.DateTime" /> obtenu est inférieur à <see cref="F:System.DateTime.MinValue" /> ou supérieur à <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddMonths(System.Int32)">
      <summary>Retourne un nouveau <see cref="T:System.DateTime" /> qui ajoute le nombre de mois spécifié à la valeur de cette instance.</summary>
      <returns>Objet dont la valeur est égale à la somme de la date et de l'heure représentées par cette instance et de <paramref name="months" />.</returns>
      <param name="months">Nombre de mois.Le paramètre <paramref name="months" /> peut être négatif ou positif.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le <see cref="T:System.DateTime" /> obtenu est inférieur à <see cref="F:System.DateTime.MinValue" /> ou supérieur à <see cref="F:System.DateTime.MaxValue" />.ou <paramref name="months" /> est inférieur à -120.000 ou supérieur à 120 000. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddSeconds(System.Double)">
      <summary>Retourne un nouveau <see cref="T:System.DateTime" /> qui ajoute le nombre de secondes spécifié à la valeur de cette instance.</summary>
      <returns>Objet dont la valeur est égale à la somme de la date et de l'heure représentées par cette instance et du nombre de secondes représenté par <paramref name="value" />.</returns>
      <param name="value">Nombre de secondes entières et partielles.Le paramètre <paramref name="value" /> peut être négatif ou positif.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le <see cref="T:System.DateTime" /> obtenu est inférieur à <see cref="F:System.DateTime.MinValue" /> ou supérieur à <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddTicks(System.Int64)">
      <summary>Retourne un nouveau <see cref="T:System.DateTime" /> qui ajoute le nombre de graduations spécifié à la valeur de cette instance.</summary>
      <returns>Objet dont la valeur est égale à la somme de la date et de l'heure représentées par cette instance et du temps représenté par <paramref name="value" />.</returns>
      <param name="value">Nombre de graduations de 100 nanosecondes.Le paramètre <paramref name="value" /> peut être positif ou négatif.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le <see cref="T:System.DateTime" /> obtenu est inférieur à <see cref="F:System.DateTime.MinValue" /> ou supérieur à <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddYears(System.Int32)">
      <summary>Retourne un nouveau <see cref="T:System.DateTime" /> qui ajoute le nombre d'années spécifié à la valeur de cette instance.</summary>
      <returns>Objet dont la valeur est égale à la somme de la date et de l'heure représentées par cette instance et du nombre d'années représenté par <paramref name="value" />.</returns>
      <param name="value">Nombre d'années.Le paramètre <paramref name="value" /> peut être négatif ou positif.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> ou le <see cref="T:System.DateTime" /> obtenu est inférieur à <see cref="F:System.DateTime.MinValue" /> ou supérieur à <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Compare(System.DateTime,System.DateTime)">
      <summary>Compare deux instances de <see cref="T:System.DateTime" /> et retourne un entier qui indique si la première instance est antérieure, identique ou ultérieure à la deuxième instance.</summary>
      <returns>Nombre signé indiquant les valeurs relatives de <paramref name="t1" /> et de <paramref name="t2" />.Type valeur Condition Inférieure à zéro <paramref name="t1" /> est antérieur à <paramref name="t2" />. Zéro <paramref name="t1" /> est identique à <paramref name="t2" />. Supérieure à zéro <paramref name="t1" /> est ultérieur à <paramref name="t2" />. </returns>
      <param name="t1">Premier objet à comparer. </param>
      <param name="t2">Deuxième objet à comparer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.CompareTo(System.DateTime)">
      <summary>Compare la valeur de cette instance à une valeur <see cref="T:System.DateTime" /> spécifiée et retourne un entier qui indique si cette instance est antérieure, identique ou ultérieure à la valeur <see cref="T:System.DateTime" /> spécifiée.</summary>
      <returns>Nombre signé indiquant les valeurs relatives de cette instance et du paramètre <paramref name="value" />.Valeur Description Inférieure à zéro Cette instance est antérieure à <paramref name="value" />. Zéro Cette instance est la même que <paramref name="value" />. Supérieure à zéro Cette instance est ultérieure à <paramref name="value" />. </returns>
      <param name="value">Objet à comparer avec l'instance actuelle. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Date">
      <summary>Obtient le composant « date » de cette instance.</summary>
      <returns>Nouvel objet dont la date est identique à celle de cette instance, et valeur d'heure définie à 12:00:00 minuit (00:00:00).</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Day">
      <summary>Obtient le jour du mois représenté par cette instance.</summary>
      <returns>Composant « jour », exprimé comme une valeur comprise entre 1 et 31.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.DayOfWeek">
      <summary>Obtient le jour de semaine représenté par cette instance.</summary>
      <returns>Constante énumérée qui indique le jour de la semaine de cette valeur <see cref="T:System.DateTime" />. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.DayOfYear">
      <summary>Obtient le jour de l'année représenté par cette instance.</summary>
      <returns>Jour de l'année, exprimé comme une valeur comprise entre 1 et 366.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.DaysInMonth(System.Int32,System.Int32)">
      <summary>Retourne le nombre de jours compris dans le mois et l'année spécifiés.</summary>
      <returns>Nombre de jours de <paramref name="month" /> pour le <paramref name="year" /> spécifié.Par exemple, si <paramref name="month" /> est égal à 2 pour février, la valeur de retour est 28 ou 29, suivant que <paramref name="year" /> est une année bissextile ou non.</returns>
      <param name="year">Année. </param>
      <param name="month">Mois (chiffre compris entre 1 et 12). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="month" /> est inférieur à 1 ou supérieur à 12.ou<paramref name="year" /> est inférieur à 1 ou supérieur à 9999.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Equals(System.DateTime)">
      <summary>Renvoie une valeur indiquant si la valeur de cette instance est égale à la valeur de l'instance <see cref="T:System.DateTime" /> spécifiée.</summary>
      <returns>true si le paramètre <paramref name="value" /> est égal à la valeur de cette instance ; sinon, false.</returns>
      <param name="value">Objet à comparer à cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Equals(System.DateTime,System.DateTime)">
      <summary>Retourne une valeur indiquant si deux instances de <see cref="T:System.DateTime" /> représentent la même valeur de date et d'heure.</summary>
      <returns>true si les deux valeurs sont égales ; sinon, false.</returns>
      <param name="t1">Premier objet à comparer. </param>
      <param name="t2">Deuxième objet à comparer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si cette instance équivaut à un objet spécifié.</summary>
      <returns>true si <paramref name="value" /> est une instance de <see cref="T:System.DateTime" /> et est égal à la valeur de cette instance ; sinon, false.</returns>
      <param name="value">Objet à comparer à cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.FromBinary(System.Int64)">
      <summary>Désérialise une valeur binaire 64 bits et recrée un objet <see cref="T:System.DateTime" /> sérialisé d'origine.</summary>
      <returns>Objet qui équivaut à l'objet <see cref="T:System.DateTime" /> qui a été sérialisé par la méthode <see cref="M:System.DateTime.ToBinary" />.</returns>
      <param name="dateData">Entier 64 bits signé qui encode la propriété <see cref="P:System.DateTime.Kind" /> dans un champ 2 bits et la propriété <see cref="P:System.DateTime.Ticks" /> dans un champ 62 bits. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateData" /> est inférieur à <see cref="F:System.DateTime.MinValue" /> ou supérieur à <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.FromFileTime(System.Int64)">
      <summary>Convertit l'heure de fichier Windows spécifiée en heure locale équivalente.</summary>
      <returns>Objet qui représente l'heure locale équivalente à la date et à l'heure représentées par le paramètre <paramref name="fileTime" />.</returns>
      <param name="fileTime">Heure de fichier Windows exprimée en graduations. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="fileTime" /> est inférieur à 0 ou représente une heure supérieure à <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.FromFileTimeUtc(System.Int64)">
      <summary>Convertit l'heure de fichier Windows spécifiée en heure UTC équivalente.</summary>
      <returns>Objet qui représente l'heure UTC équivalente à la date et à l'heure représentées par le paramètre <paramref name="fileTime" />.</returns>
      <param name="fileTime">Heure de fichier Windows exprimée en graduations. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="fileTime" /> est inférieur à 0 ou représente une heure supérieure à <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats">
      <summary>Convertit la valeur de cette instance en toutes les représentations sous forme de chaîne prises en charge par les spécificateurs de format de date et d'heure standard.</summary>
      <returns>Tableau de chaînes dont chaque élément est la représentation de la valeur de cette instance, mise en forme à l'aide d'un des spécificateurs de format de date et d'heure standard.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.Char)">
      <summary>Convertit la valeur de cette instance en toutes les représentations sous forme de chaîne prises en charge par le spécificateur de format de date et d'heure standard spécifié.</summary>
      <returns>Tableau de chaînes dont chaque élément est la représentation de la valeur de cette instance mise en forme à l'aide du spécificateur de format de date et d'heure standard <paramref name="format" />.</returns>
      <param name="format">Chaîne de format de date et d'heure standard (consultez la section Notes). </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> n'est pas un caractère de spécificateur de format de date et d'heure standard valide.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)">
      <summary>Convertit la valeur de cette instance en toutes les représentations sous forme de chaîne prises en charge par le spécificateur de format de date et d'heure standard spécifié et les données de format propres à la culture.</summary>
      <returns>Tableau de chaînes dont chaque élément est la représentation de la valeur de cette instance, mise en forme à l'aide d'un des spécificateurs de format de date et d'heure standard.</returns>
      <param name="format">Chaîne de format de date et d'heure (consultez la section Notes). </param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture se rapportant à cette instance. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> n'est pas un caractère de spécificateur de format de date et d'heure standard valide.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.IFormatProvider)">
      <summary>Convertit la valeur de cette instance en toutes les représentations sous forme de chaîne prises en charge par les spécificateurs de format de date et d'heure standard spécifié et les données de format propres à la culture spécifiées.</summary>
      <returns>Tableau de chaînes dont chaque élément est la représentation de la valeur de cette instance, mise en forme à l'aide d'un des spécificateurs de format de date et d'heure standard.</returns>
      <param name="provider">Objet qui fournit des informations de format propres à la culture se rapportant à cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Hour">
      <summary>Obtient le composant « heure » de la date représentée par cette instance.</summary>
      <returns>Composant « heure », exprimé comme une valeur comprise entre 0 et 23.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.IsDaylightSavingTime">
      <summary>Indique si cette instance de <see cref="T:System.DateTime" /> est dans la plage d'heures d'été pour le fuseau horaire actuel.</summary>
      <returns>true si la valeur de la propriété <see cref="P:System.DateTime.Kind" /> est <see cref="F:System.DateTimeKind.Local" /> ou <see cref="F:System.DateTimeKind.Unspecified" /> et la valeur de cette instance de <see cref="T:System.DateTime" /> est dans la plage d'heures d'été pour le fuseau horaire ; false si <see cref="P:System.DateTime.Kind" /> est <see cref="F:System.DateTimeKind.Utc" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.IsLeapYear(System.Int32)">
      <summary>Retourne une indication confirmant si l'année spécifiée est une année bissextile.</summary>
      <returns>true si <paramref name="year" /> est une année bissextile ; sinon, false.</returns>
      <param name="year">Année sur 4 chiffres. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> est inférieur à 1 ou supérieur à 9999.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Kind">
      <summary>Obtient une valeur qui indique si l'heure représentée par cette instance se base sur l'heure locale, l'heure UTC, ou aucune des deux.</summary>
      <returns>Une des valeurs d'énumération qui indique ce que représente l'heure actuelle.La valeur par défaut est <see cref="F:System.DateTimeKind.Unspecified" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.DateTime.MaxValue">
      <summary>Représente la plus grande valeur possible de <see cref="T:System.DateTime" />.Ce champ est en lecture seule.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Millisecond">
      <summary>Obtient le composant « millisecondes » de la date représentée par cette instance.</summary>
      <returns>Composant « millisecondes », exprimé comme une valeur comprise entre 0 et 999.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Minute">
      <summary>Obtient le composant « minutes » de la date représentée par cette instance.</summary>
      <returns>Composant « minute », exprimé comme une valeur comprise entre 0 et 59.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.DateTime.MinValue">
      <summary>Représente la plus petite valeur possible de <see cref="T:System.DateTime" />.Ce champ est en lecture seule.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Month">
      <summary>Obtient le composant « mois » de la date représentée par cette instance.</summary>
      <returns>Composant « mois », exprimé comme une valeur comprise entre 1 et 12.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Now">
      <summary>Obtient un objet <see cref="T:System.DateTime" /> qui a pour valeur la date et l'heure actuelles sur cet ordinateur, exprimées en heure locale.</summary>
      <returns>Objet dont la valeur est égale à la date et à l'heure locales actuelles.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Addition(System.DateTime,System.TimeSpan)">
      <summary>Ajoute un intervalle de temps spécifié à une date et une heure spécifiées, générant une nouvelle date et heure.</summary>
      <returns>Objet qui est la somme des valeurs de <paramref name="d" /> et <paramref name="t" />.</returns>
      <param name="d">Valeur de date et heure à ajouter. </param>
      <param name="t">Intervalle de temps à ajouter. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le <see cref="T:System.DateTime" /> obtenu est inférieur à <see cref="F:System.DateTime.MinValue" /> ou supérieur à <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Equality(System.DateTime,System.DateTime)">
      <summary>Détermine si deux instances spécifiées de <see cref="T:System.DateTime" /> sont égales.</summary>
      <returns>true si <paramref name="d1" /> et <paramref name="d2" /> représentent les mêmes date et heure ; sinon, false.</returns>
      <param name="d1">Premier objet à comparer. </param>
      <param name="d2">Deuxième objet à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)">
      <summary>Détermine si un <see cref="T:System.DateTime" /> spécifié est ultérieur à un autre <see cref="T:System.DateTime" /> spécifié.</summary>
      <returns>true si <paramref name="t1" /> est postérieur à <paramref name="t2" /> ; sinon, false.</returns>
      <param name="t1">Premier objet à comparer. </param>
      <param name="t2">Deuxième objet à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)">
      <summary>Détermine si un <see cref="T:System.DateTime" /> spécifié représente une date et une heure identiques ou ultérieures à un autre <see cref="T:System.DateTime" /> spécifié.</summary>
      <returns>true si <paramref name="t1" /> est identique ou postérieur à <paramref name="t2" /> ; sinon, false.</returns>
      <param name="t1">Premier objet à comparer. </param>
      <param name="t2">Deuxième objet à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Inequality(System.DateTime,System.DateTime)">
      <summary>Détermine si deux instances spécifiées de <see cref="T:System.DateTime" /> ne sont pas égales.</summary>
      <returns>true si <paramref name="d1" /> et <paramref name="d2" /> ne représentent pas les mêmes date et heure ; sinon, false.</returns>
      <param name="d1">Premier objet à comparer. </param>
      <param name="d2">Deuxième objet à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_LessThan(System.DateTime,System.DateTime)">
      <summary>Détermine si un <see cref="T:System.DateTime" /> spécifié est antérieur à un autre <see cref="T:System.DateTime" /> spécifié.</summary>
      <returns>true si <paramref name="t1" /> est antérieur à <paramref name="t2" /> ; sinon, false.</returns>
      <param name="t1">Premier objet à comparer. </param>
      <param name="t2">Deuxième objet à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)">
      <summary>Détermine si un <see cref="T:System.DateTime" /> spécifié représente une date et une heure identiques ou antérieures à un autre <see cref="T:System.DateTime" /> spécifié.</summary>
      <returns>true si <paramref name="t1" /> est identique ou postérieur à <paramref name="t2" /> ; sinon, false.</returns>
      <param name="t1">Premier objet à comparer. </param>
      <param name="t2">Deuxième objet à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Subtraction(System.DateTime,System.DateTime)">
      <summary>Soustrait une date et une heure spécifiées des autres date et heure spécifiées, et retourne un intervalle de temps.</summary>
      <returns>Intervalle de temps entre <paramref name="d1" /> et <paramref name="d2" /> ; c'est-à-dire, <paramref name="d1" /> moins <paramref name="d2" />.</returns>
      <param name="d1">Valeur de date et d'heure à laquelle appliquer la soustraction (diminuende). </param>
      <param name="d2">Valeur de date et d'heure à soustraire (diminuteur). </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)">
      <summary>Soustrait un intervalle de temps spécifié d'une date et d'une heure spécifiées et retourne une nouvelle date et heure.</summary>
      <returns>Objet dont la valeur correspond à la valeur de <paramref name="d" /> moins la valeur de <paramref name="t" />.</returns>
      <param name="d">Valeur de date et d'heure à laquelle appliquer la soustraction. </param>
      <param name="t">Intervalle de temps à soustraire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le <see cref="T:System.DateTime" /> obtenu est inférieur à <see cref="F:System.DateTime.MinValue" /> ou supérieur à <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.Parse(System.String)">
      <summary>Convertit la représentation sous forme de chaîne d'une date et d'une heure en son équivalent <see cref="T:System.DateTime" />.</summary>
      <returns>Objet qui équivaut à la date et à l'heure figurant dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant une date et une heure à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ne contient pas de représentation sous forme de chaîne valide de date et d'heure. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Parse(System.String,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'une date et d'une heure en son équivalent <see cref="T:System.DateTime" /> à l'aide des informations de format propres à la culture.</summary>
      <returns>Objet qui équivaut à la date et à l'heure figurant dans <paramref name="s" />, comme spécifié par <paramref name="provider" />.</returns>
      <param name="s">Chaîne contenant une date et une heure à convertir. </param>
      <param name="provider">Objet qui fournit des informations de format spécifiques à la culture sur <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ne contient pas de représentation sous forme de chaîne valide de date et d'heure. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Convertit la représentation sous forme de chaîne spécifiée d'une date et d'une heure en son équivalent <see cref="T:System.DateTime" /> à l'aide des informations et du style de format propres à la culture.</summary>
      <returns>Objet qui équivaut à la date et à l'heure figurant dans <paramref name="s" />, comme spécifié par <paramref name="provider" /> et <paramref name="styles" />.</returns>
      <param name="s">Chaîne contenant une date et une heure à convertir. </param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <param name="styles">Combinaison d'opérations de bits des valeurs d'énumération qui indique les éléments de style pouvant être présents dans <paramref name="s" /> pour la réussite de l'opération d'analyse et qui définit comment interpréter la date analysée par rapport au fuseau horaire actuel ou à la date actuelle.Une valeur typique à spécifier est <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ne contient pas de représentation sous forme de chaîne valide de date et d'heure. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> contient une combinaison non valide de valeurs <see cref="T:System.Globalization.DateTimeStyles" />.Par exemple, <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> et <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne spécifiée d'une date et d'une heure en son équivalent <see cref="T:System.DateTime" /> à l'aide des informations de format propres à la culture et au format spécifiés.Le format de la chaîne doit correspondre exactement au format spécifié.</summary>
      <returns>Objet qui équivaut à la date et à l'heure figurant dans <paramref name="s" />, comme spécifié par <paramref name="format" /> et <paramref name="provider" />.</returns>
      <param name="s">Chaîne contenant une date et une heure à convertir. </param>
      <param name="format">Spécificateur de format définissant le format requis de <paramref name="s" />.Pour plus d'informations, consultez la section Remarques.</param>
      <param name="provider">Objet qui fournit des informations de format spécifiques à la culture sur <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ou <paramref name="format" /> a la valeur null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ou <paramref name="format" /> est une chaîne vide. ou <paramref name="s" /> ne contient aucune date et heure correspondant au modèle spécifié dans <paramref name="format" />. ouLe composant « heure » et l'indicateur AM/PM de <paramref name="s" /> ne correspondent pas.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Convertit la représentation sous forme de chaîne spécifiée d'une date et d'une heure en son équivalent <see cref="T:System.DateTime" /> à l'aide des informations et du style de format propres à la culture spécifiés.Le format de la représentation sous forme de chaîne doit correspondre exactement au format spécifié, ou une exception est levée.</summary>
      <returns>Objet qui équivaut à la date et à l'heure figurant dans <paramref name="s" />, comme spécifié par <paramref name="format" />, <paramref name="provider" /> et <paramref name="style" />.</returns>
      <param name="s">Chaîne contenant une date et une heure à convertir. </param>
      <param name="format">Spécificateur de format définissant le format requis de <paramref name="s" />.Pour plus d'informations, consultez la section Remarques.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <param name="style">Combinaison d'opérations de bits des valeurs d'énumération qui fournit des informations supplémentaires sur <paramref name="s" />, sur des éléments de style qui peuvent être présents dans <paramref name="s" /> ou sur la conversion de <paramref name="s" /> en une valeur <see cref="T:System.DateTime" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ou <paramref name="format" /> a la valeur null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ou <paramref name="format" /> est une chaîne vide. ou <paramref name="s" /> ne contient aucune date et heure correspondant au modèle spécifié dans <paramref name="format" />. ouLe composant « heure » et l'indicateur AM/PM de <paramref name="s" /> ne correspondent pas.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> contient une combinaison non valide de valeurs <see cref="T:System.Globalization.DateTimeStyles" />.Par exemple, <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> et <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Convertit la représentation sous forme de chaîne spécifiée d'une date et heure en son équivalent <see cref="T:System.DateTime" /> à l'aide du tableau de formats, des informations et du style de format propres à la culture spécifiés.Le format de la représentation sous forme de chaîne doit correspondre exactement à au moins l'un des formats spécifiés, ou une exception est levée.</summary>
      <returns>Objet qui équivaut à la date et à l'heure figurant dans <paramref name="s" />, comme spécifié par <paramref name="formats" />, <paramref name="provider" /> et <paramref name="style" />.</returns>
      <param name="s">Chaîne contenant une date et une heure à convertir. </param>
      <param name="formats">Tableau de formats possibles pour <paramref name="s" />.Pour plus d'informations, consultez la section Remarques.</param>
      <param name="provider">Objet qui fournit des informations de format spécifiques à la culture sur <paramref name="s" />. </param>
      <param name="style">Combinaison d'opérations de bits de valeurs d'énumération qui indique le format autorisé du paramètre <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ou <paramref name="formats" /> a la valeur null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> est une chaîne vide. ou un élément de <paramref name="formats" /> est une chaîne vide. ou <paramref name="s" /> ne contient aucune date ou heure correspondant à un élément de <paramref name="formats" />. ouLe composant « heure » et l'indicateur AM/PM de <paramref name="s" /> ne correspondent pas.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> contient une combinaison non valide de valeurs <see cref="T:System.Globalization.DateTimeStyles" />.Par exemple, <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> et <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Second">
      <summary>Obtient le composant « secondes » de la date représentée par cette instance.</summary>
      <returns>Composant « secondes », exprimé comme une valeur comprise entre 0 et 59.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)">
      <summary>Crée un objet <see cref="T:System.DateTime" /> qui a le même nombre de graduations que le <see cref="T:System.DateTime" /> spécifié, mais qui est désigné comme une heure locale, une heure UTC ou aucune des deux, en fonction de ce que la valeur <see cref="T:System.DateTimeKind" /> spécifiée indique.</summary>
      <returns>Nouvel objet qui a le même nombre de graduations que l'objet représenté par le paramètre <paramref name="value" /> et la valeur <see cref="T:System.DateTimeKind" /> spécifiée par le paramètre <paramref name="kind" />. </returns>
      <param name="value">Date et heure. </param>
      <param name="kind">Une des valeurs d'énumération qui indique si le nouvel objet représente une heure locale, une heure UTC ou aucune des deux.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Subtract(System.DateTime)">
      <summary>Soustrait la date et l'heure spécifiées de cette instance.</summary>
      <returns>Intervalle de temps égal à la date et à l'heure représentées par cette instance moins la date et l'heure représentées par <paramref name="value" />.</returns>
      <param name="value">Valeur de date et d'heure à soustraire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le résultat est inférieur à <see cref="F:System.DateTime.MinValue" /> ou supérieur à <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Subtract(System.TimeSpan)">
      <summary>Soustrait la durée spécifiée de cette instance.</summary>
      <returns>Objet qui est égal à la date et à l'heure représentées par cette instance moins l'intervalle de temps représenté par <paramref name="value" />.</returns>
      <param name="value">Intervalle de temps à soustraire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le résultat est inférieur à <see cref="F:System.DateTime.MinValue" /> ou supérieur à <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si cette instance précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</summary>
      <returns>Nombre signé indiquant l'ordre relatif de cette instance et <paramref name="value" />.Valeur Description Inférieure à zéro Cette instance précède <paramref name="value" /> dans l'ordre de tri. Zéro Cette instance se produit dans la même position dans l'ordre de tri que <paramref name="value" />. Supérieure à zéro Cette instance suit <paramref name="value" /> dans l'ordre de tri, ou <paramref name="value" /> est null. </returns>
      <param name="value">Objet à comparer à cette instance ou null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> n'est pas un <see cref="T:System.DateTime" />. </exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>La valeur de retour pour ce membre n'est pas utilisée.</returns>
      <param name="provider">Objet qui implémente l'interface <see cref="T:System.IFormatProvider" />.(Ce paramètre n'est pas utilisé ; spécifiez null).</param>
      <exception cref="T:System.InvalidCastException">Dans tous les cas.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>La valeur de retour pour ce membre n'est pas utilisée.</returns>
      <param name="provider">Objet qui implémente l'interface <see cref="T:System.IFormatProvider" />.(Ce paramètre n'est pas utilisé ; spécifiez null).</param>
      <exception cref="T:System.InvalidCastException">Dans tous les cas.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>La valeur de retour pour ce membre n'est pas utilisée.</returns>
      <param name="provider">Objet qui implémente l'interface <see cref="T:System.IFormatProvider" />.(Ce paramètre n'est pas utilisé ; spécifiez null).</param>
      <exception cref="T:System.InvalidCastException">Dans tous les cas.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Retourne l'objet <see cref="T:System.DateTime" /> actuel.</summary>
      <returns>Objet actif.</returns>
      <param name="provider">Objet qui implémente l'interface <see cref="T:System.IFormatProvider" />.(Ce paramètre n'est pas utilisé ; spécifiez null).</param>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>La valeur de retour pour ce membre n'est pas utilisée.</returns>
      <param name="provider">Objet qui implémente l'interface <see cref="T:System.IFormatProvider" />.(Ce paramètre n'est pas utilisé ; spécifiez null).</param>
      <exception cref="T:System.InvalidCastException">Dans tous les cas.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>La valeur de retour pour ce membre n'est pas utilisée.</returns>
      <param name="provider">Objet qui implémente l'interface <see cref="T:System.IFormatProvider" />.(Ce paramètre n'est pas utilisé ; spécifiez null).</param>
      <exception cref="T:System.InvalidCastException">Dans tous les cas.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>La valeur de retour pour ce membre n'est pas utilisée.</returns>
      <param name="provider">Objet qui implémente l'interface <see cref="T:System.IFormatProvider" />.(Ce paramètre n'est pas utilisé ; spécifiez null).</param>
      <exception cref="T:System.InvalidCastException">Dans tous les cas.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>La valeur de retour pour ce membre n'est pas utilisée.</returns>
      <param name="provider">Objet qui implémente l'interface <see cref="T:System.IFormatProvider" />.(Ce paramètre n'est pas utilisé ; spécifiez null).</param>
      <exception cref="T:System.InvalidCastException">Dans tous les cas.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>La valeur de retour pour ce membre n'est pas utilisée.</returns>
      <param name="provider">Objet qui implémente l'interface <see cref="T:System.IFormatProvider" />.(Ce paramètre n'est pas utilisé ; spécifiez null).</param>
      <exception cref="T:System.InvalidCastException">Dans tous les cas.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>La valeur de retour pour ce membre n'est pas utilisée.</returns>
      <param name="provider">Objet qui implémente l'interface <see cref="T:System.IFormatProvider" />.(Ce paramètre n'est pas utilisé ; spécifiez null).</param>
      <exception cref="T:System.InvalidCastException">Dans tous les cas.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>La valeur de retour pour ce membre n'est pas utilisée.</returns>
      <param name="provider">Objet qui implémente l'interface <see cref="T:System.IFormatProvider" />.(Ce paramètre n'est pas utilisé ; spécifiez null).</param>
      <exception cref="T:System.InvalidCastException">Dans tous les cas. </exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Convertit l'objet <see cref="T:System.DateTime" /> actuel en un objet de type spécifié.</summary>
      <returns>Objet du type spécifié par le paramètre de <paramref name="type" />, avec une valeur équivalente à l'objet <see cref="T:System.DateTime" /> actuel.</returns>
      <param name="type">Type souhaité. </param>
      <param name="provider">Objet qui implémente l'interface <see cref="T:System.IFormatProvider" />.(Ce paramètre n'est pas utilisé ; spécifiez null).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> a la valeur null. </exception>
      <exception cref="T:System.InvalidCastException">Cette conversion n'est pas prise en charge pour le type <see cref="T:System.DateTime" />.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>La valeur de retour pour ce membre n'est pas utilisée.</returns>
      <param name="provider">Objet qui implémente l'interface <see cref="T:System.IFormatProvider" />.(Ce paramètre n'est pas utilisé ; spécifiez null).</param>
      <exception cref="T:System.InvalidCastException">Dans tous les cas.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>La valeur de retour pour ce membre n'est pas utilisée.</returns>
      <param name="provider">Objet qui implémente l'interface <see cref="T:System.IFormatProvider" />.(Ce paramètre n'est pas utilisé ; spécifiez null).</param>
      <exception cref="T:System.InvalidCastException">Dans tous les cas.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>La valeur de retour pour ce membre n'est pas utilisée.</returns>
      <param name="provider">Objet qui implémente l'interface <see cref="T:System.IFormatProvider" />.(Ce paramètre n'est pas utilisé ; spécifiez null).</param>
      <exception cref="T:System.InvalidCastException">Dans tous les cas.</exception>
    </member>
    <member name="P:System.DateTime.Ticks">
      <summary>Obtient le nombre de graduations représentant la date et l'heure de cette instance.</summary>
      <returns>Nombre de graduations représentant la date et l'heure de cette instance.La valeur est comprise entre DateTime.MinValue.Ticks et DateTime.MaxValue.Ticks.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.TimeOfDay">
      <summary>Obtient l'heure de cette instance.</summary>
      <returns>Intervalle de temps qui représente la fraction du jour écoulée depuis minuit.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToBinary">
      <summary>Sérialise l'objet <see cref="T:System.DateTime" /> actuel en une valeur binaire 64 bits qui pourra ensuite être utilisée pour recréer l'objet <see cref="T:System.DateTime" />.</summary>
      <returns>Entier signé 64 bits qui encode les propriétés <see cref="P:System.DateTime.Kind" /> et <see cref="P:System.DateTime.Ticks" />. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Today">
      <summary>Obtient la date actuelle.</summary>
      <returns>Objet défini à la date d'aujourd'hui, avec le composant de l'heure défini à 00:00:00.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToFileTime">
      <summary>Convertit la valeur de l'objet <see cref="T:System.DateTime" /> actuel en heure de fichier Windows.</summary>
      <returns>Valeur de l'objet <see cref="T:System.DateTime" /> actuel exprimée sous forme d'heure de fichier Windows.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">L'heure du fichier résultante représente une date et une heure antérieures à 12:00 (minuit) le 1er janvier 1601 (notre ère)en temps universel coordonné (UTC).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToFileTimeUtc">
      <summary>Convertit la valeur de l'objet <see cref="T:System.DateTime" /> actuel en heure de fichier Windows.</summary>
      <returns>Valeur de l'objet <see cref="T:System.DateTime" /> actuel exprimée sous forme d'heure de fichier Windows.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">L'heure du fichier résultante représente une date et une heure antérieures à 12:00 (minuit) le 1er janvier 1601 (notre ère)en temps universel coordonné (UTC).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToLocalTime">
      <summary>Convertit la valeur de l'objet <see cref="T:System.DateTime" /> actuel en heure locale.</summary>
      <returns>Objet dont la propriété <see cref="P:System.DateTime.Kind" /> est <see cref="F:System.DateTimeKind.Local" /> et dont la valeur est l'heure locale équivalente à la valeur de l'objet <see cref="T:System.DateTime" /> actif ou <see cref="F:System.DateTime.MaxValue" /> si la valeur convertie est trop grande pour être représentée par un objet <see cref="T:System.DateTime" /> ou <see cref="F:System.DateTime.MinValue" /> si la valeur convertie est trop petite pour être représentée comme un objet <see cref="T:System.DateTime" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString">
      <summary>Convertit la valeur de l'objet <see cref="T:System.DateTime" /> actif en sa représentation équivalente sous forme de chaîne.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de l'objet <see cref="T:System.DateTime" /> actuel.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La date et l'heure sont en dehors de la plage de dates prise en charge par le calendrier utilisé par la culture actuelle. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString(System.IFormatProvider)">
      <summary>Convertit la valeur de l'objet <see cref="T:System.DateTime" /> actuel en sa représentation sous forme de chaîne équivalente à l'aide des informations de format propres à la culture spécifiées.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de l'objet <see cref="T:System.DateTime" /> actuel tel que spécifié par <paramref name="provider" />.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">La date et l'heure sont en dehors de la plage de dates prise en charge par le calendrier utilisé par <paramref name="provider" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString(System.String)">
      <summary>Convertit la valeur de l'objet <see cref="T:System.DateTime" /> actuel en sa représentation sous forme de chaîne équivalente en utilisant le format spécifié.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de l'objet <see cref="T:System.DateTime" /> actuel tel que spécifié par <paramref name="format" />.</returns>
      <param name="format">Chaîne de format de date et d'heure standard ou personnalisée (consultez la section Notes). </param>
      <exception cref="T:System.FormatException">La longueur de <paramref name="format" /> est 1 et il ne s'agit pas d'un des caractères spécificateurs de format définis pour <see cref="T:System.Globalization.DateTimeFormatInfo" />.ou <paramref name="format" /> ne contient pas de modèle de format personnalisé valide. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La date et l'heure sont en dehors de la plage de dates prise en charge par le calendrier utilisé par la culture actuelle.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString(System.String,System.IFormatProvider)">
      <summary>Convertit la valeur de l'objet <see cref="T:System.DateTime" /> actuel en sa représentation sous forme de chaîne équivalente à l'aide du format et des informations de format spécifiques à la culture spécifiés.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de l'objet <see cref="T:System.DateTime" /> actuel tel que spécifié par <paramref name="format" /> et <paramref name="provider" />.</returns>
      <param name="format">Chaîne de format de date et d'heure standard ou personnalisée. </param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <exception cref="T:System.FormatException">La longueur de <paramref name="format" /> est 1 et il ne s'agit pas d'un des caractères spécificateurs de format définis pour <see cref="T:System.Globalization.DateTimeFormatInfo" />.ou <paramref name="format" /> ne contient pas de modèle de format personnalisé valide. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La date et l'heure sont en dehors de la plage de dates prise en charge par le calendrier utilisé par <paramref name="provider" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToUniversalTime">
      <summary>Convertit la valeur de l'objet <see cref="T:System.DateTime" /> actuel en Temps universel coordonné (UTC).</summary>
      <returns>Objet dont la propriété <see cref="P:System.DateTime.Kind" /> est <see cref="F:System.DateTimeKind.Utc" /> et dont la valeur est l'heure UTC équivalente à la valeur de l'objet <see cref="T:System.DateTime" /> actuel, ou <see cref="F:System.DateTime.MaxValue" /> si la valeur convertie est trop grande pour être représentée par un objet <see cref="T:System.DateTime" />, ou <see cref="F:System.DateTime.MinValue" /> si la valeur convertie est trop petite pour être représentée par un objet <see cref="T:System.DateTime" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParse(System.String,System.DateTime@)">
      <summary>Convertit la représentation sous forme de chaîne spécifiée d'une date et d'une heure en son équivalent <see cref="T:System.DateTime" /> et retourne une valeur qui indique si la conversion a réussi.</summary>
      <returns>true si la conversion du paramètre <paramref name="s" /> a réussi ; sinon, false.</returns>
      <param name="s">Chaîne contenant une date et une heure à convertir. </param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de <see cref="T:System.DateTime" /> équivalente à la date et l'heure contenues dans <paramref name="s" /> si la conversion a réussi, ou <see cref="F:System.DateTime.MinValue" /> si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null, est une chaîne vide ("") ou ne contient pas de représentation sous forme de chaîne valide d'une date et d'une heure.Ce paramètre est passé sans être initialisé.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <summary>Convertit la représentation sous forme de chaîne spécifiée d'une date et d'une heure en son équivalent <see cref="T:System.DateTime" /> à l'aide des informations de format et du style de mise en forme propres à la culture spécifiés, et retourne une valeur qui indique si la conversion a réussi.</summary>
      <returns>true si la conversion du paramètre <paramref name="s" /> a réussi ; sinon, false.</returns>
      <param name="s">Chaîne contenant une date et une heure à convertir. </param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <param name="styles">Combinaison d'opérations de bits de valeurs d'énumération qui définit la manière d'interpréter les données analysées par rapport au fuseau horaire actuel ou à la date actuelle.Une valeur typique à spécifier est <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de <see cref="T:System.DateTime" /> équivalente à la date et l'heure contenues dans <paramref name="s" /> si la conversion a réussi, ou <see cref="F:System.DateTime.MinValue" /> si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null, est une chaîne vide ("") ou ne contient pas de représentation sous forme de chaîne valide d'une date et d'une heure.Ce paramètre est passé sans être initialisé.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> n'est pas une valeur <see cref="T:System.Globalization.DateTimeStyles" /> valide.ou<paramref name="styles" /> contient une combinaison non valide de valeurs <see cref="T:System.Globalization.DateTimeStyles" /> (par exemple, <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> et <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="provider" /> est une culture neutre et ne peut être employé dans le cadre d'une opération d'analyse.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <summary>Convertit la représentation sous forme de chaîne spécifiée d'une date et d'une heure en son équivalent <see cref="T:System.DateTime" /> à l'aide des informations et du style de format propres à la culture spécifiés.Le format de la chaîne doit correspondre exactement au format spécifié.La méthode retourne une valeur qui indique si la conversion a réussi.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne contenant une date et une heure à convertir. </param>
      <param name="format">Format requis du paramètre <paramref name="s" />.Pour plus d'informations, consultez la section Notes.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <param name="style">Combinaison d'opérations de bits d'une ou plusieurs valeurs d'énumération qui indique le format autorisé du paramètre <paramref name="s" />. </param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de <see cref="T:System.DateTime" /> équivalente à la date et l'heure contenues dans <paramref name="s" /> si la conversion a réussi, ou <see cref="F:System.DateTime.MinValue" /> si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> ou <paramref name="format" /> est null, est une chaîne vide ou ne contient pas une date et une heure correspondant au modèle spécifié dans <paramref name="format" />.Ce paramètre est passé sans être initialisé.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> n'est pas une valeur <see cref="T:System.Globalization.DateTimeStyles" /> valide.ou<paramref name="styles" /> contient une combinaison non valide de valeurs <see cref="T:System.Globalization.DateTimeStyles" /> (par exemple, <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> et <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <summary>Convertit la représentation sous forme de chaîne spécifiée d'une date et heure en son équivalent <see cref="T:System.DateTime" /> à l'aide du tableau de formats, des informations et du style de format propres à la culture spécifiés.Le format de la chaîne doit correspondre exactement à au moins un des formats spécifiés.La méthode retourne une valeur qui indique si la conversion a réussi.</summary>
      <returns>true si la conversion du paramètre <paramref name="s" /> a réussi ; sinon, false.</returns>
      <param name="s">Chaîne contenant une date et une heure à convertir. </param>
      <param name="formats">Tableau de formats possibles pour <paramref name="s" />.Pour plus d'informations, consultez la section Notes.</param>
      <param name="provider">Objet qui fournit des informations de format spécifiques à la culture sur <paramref name="s" />. </param>
      <param name="style">Combinaison d'opérations de bits de valeurs d'énumération qui indique le format autorisé du paramètre <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de <see cref="T:System.DateTime" /> équivalente à la date et l'heure contenues dans <paramref name="s" /> si la conversion a réussi, ou <see cref="F:System.DateTime.MinValue" /> si elle a échoué.La conversion échoue si <paramref name="s" /> ou <paramref name="formats" /> est null, si <paramref name="s" /> ou un élément de <paramref name="formats" /> est une chaîne vide, ou si la mise en forme de <paramref name="s" /> ne correspond pas exactement à celle qui est spécifiée par au moins l'un des modèles de format dans <paramref name="formats" />.Ce paramètre est passé sans être initialisé.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> n'est pas une valeur <see cref="T:System.Globalization.DateTimeStyles" /> valide.ou<paramref name="styles" /> contient une combinaison non valide de valeurs <see cref="T:System.Globalization.DateTimeStyles" /> (par exemple, <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> et <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.UtcNow">
      <summary>Obtient un objet <see cref="T:System.DateTime" /> qui a pour valeur la date et l'heure actuelles sur cet ordinateur, exprimées en temps UTC.</summary>
      <returns>Objet dont la valeur est égale à la date et à l'heure UTC actuelles.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Year">
      <summary>Obtient le composant « année » de la date représentée par cette instance.</summary>
      <returns>Année, comprise entre 1 et 9999.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.DateTimeKind">
      <summary>Spécifie si un objet <see cref="T:System.DateTime" /> représente un horaire local, un horaire UTC ou ni l'un ni l'autre.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.DateTimeKind.Local">
      <summary>L'heure représentée est l'heure locale.</summary>
    </member>
    <member name="F:System.DateTimeKind.Unspecified">
      <summary>L'heure représentée n'est pas spécifiée comme heure locale ou heure UTC.</summary>
    </member>
    <member name="F:System.DateTimeKind.Utc">
      <summary>L'heure représentée est une heure UTC.</summary>
    </member>
    <member name="T:System.DateTimeOffset">
      <summary>Représente un instant précis, généralement exprimé sous la forme d'une date et d'une heure, par rapport au temps universel (UTC, Universal Time Coordinated).</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.DateTime)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.DateTimeOffset" /> à l'aide de la valeur <see cref="T:System.DateTime" /> spécifiée.</summary>
      <param name="dateTime">Date et heure.   </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Les date et heure en UTC résultant de l'application de l'offset sont antérieures à <see cref="F:System.DateTimeOffset.MinValue" />.ouLes date et heure en UTC résultant de l'application de l'offset sont ultérieures à <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.DateTimeOffset" /> à l'aide de l'offset et de la valeur <see cref="T:System.DateTime" /> spécifiés.</summary>
      <param name="dateTime">Date et heure.   </param>
      <param name="offset">Offset d'heure à partir du temps universel.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateTime.Kind" /> est égal à <see cref="F:System.DateTimeKind.Utc" /> et <paramref name="offset" /> est différent de zéro.ou<paramref name="dateTime.Kind" /> est égal à <see cref="F:System.DateTimeKind.Local" /> et <paramref name="offset" /> n'est pas égal à l'offset du fuseau horaire local du système.ou<paramref name="offset" /> n'est pas spécifié en minutes entières.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> est inférieur à -14 heures ou supérieur à 14 heures.ou<see cref="P:System.DateTimeOffset.UtcDateTime" /> est inférieur à <see cref="F:System.DateTimeOffset.MinValue" /> ou supérieur à <see cref="F:System.DateTimeOffset.MaxValue" />. </exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.DateTimeOffset" /> en utilisant l'année, le mois, le jour, l'heure, la minute, la seconde, la milliseconde et l'offset spécifiés.</summary>
      <param name="year">Année (1 à 9999).</param>
      <param name="month">Mois (1 à 12).</param>
      <param name="day">Jour (de 1 au nombre de jours de <paramref name="month" />).</param>
      <param name="hour">Heures (0 à 23).   </param>
      <param name="minute">Minutes (0 à 59).</param>
      <param name="second">Secondes (0 à 59).</param>
      <param name="millisecond">Millisecondes (0 à 999).</param>
      <param name="offset">Offset d'heure à partir du temps universel.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> ne représente pas de minutes entières.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> est inférieur à 1 ou supérieur à 9999.ou<paramref name="month" /> est inférieur à 1 ou supérieur à 12.ou<paramref name="day" /> est inférieur à 1 ou supérieur au nombre de jours de <paramref name="month" />.ou<paramref name="hour" /> est inférieur à zéro ou supérieur à 23.ou<paramref name="minute" /> est inférieur à 0 ou supérieur à 59.ou<paramref name="second" /> est inférieur à 0 ou supérieur à 59.ou<paramref name="millisecond" /> est inférieur à 0 ou supérieur à 999.ou<paramref name="offset" /> est inférieur à -14 ou supérieur à 14.ouLa propriété <see cref="P:System.DateTimeOffset.UtcDateTime" /> est antérieure à <see cref="F:System.DateTimeOffset.MinValue" /> ou ultérieure à <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.DateTimeOffset" /> en utilisant l'année, le mois, le jour, l'heure, la minute, la seconde et l'offset spécifiés.</summary>
      <param name="year">Année (1 à 9999).</param>
      <param name="month">Mois (1 à 12).</param>
      <param name="day">Jour (de 1 au nombre de jours de <paramref name="month" />).</param>
      <param name="hour">Heures (0 à 23).   </param>
      <param name="minute">Minutes (0 à 59).</param>
      <param name="second">Secondes (0 à 59).</param>
      <param name="offset">Offset d'heure à partir du temps universel.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> ne représente pas de minutes entières.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> est inférieur à 1 ou supérieur à 9999.ou<paramref name="month" /> est inférieur à 1 ou supérieur à 12.ou<paramref name="day" /> est inférieur à 1 ou supérieur au nombre de jours de <paramref name="month" />.ou<paramref name="hour" /> est inférieur à zéro ou supérieur à 23.ou<paramref name="minute" /> est inférieur à 0 ou supérieur à 59.ou<paramref name="second" /> est inférieur à 0 ou supérieur à 59.ou<paramref name="offset" /> est inférieur à -14 heures ou supérieur à 14 heures.ouLa propriété <see cref="P:System.DateTimeOffset.UtcDateTime" /> est antérieure à <see cref="F:System.DateTimeOffset.MinValue" /> ou ultérieure à <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.DateTimeOffset" /> à l'aide de l'offset et du nombre de graduations spécifiés.</summary>
      <param name="ticks">Date et heure exprimées sous la forme d'un nombre d'intervalles de 100 nanosecondes écoulés depuis le 1er janvier 0001, à 12:00:00 (minuit).</param>
      <param name="offset">Offset d'heure à partir du temps universel.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> n'est pas spécifié en minutes entières.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La propriété <see cref="P:System.DateTimeOffset.UtcDateTime" /> est antérieure à <see cref="F:System.DateTimeOffset.MinValue" /> ou ultérieure à <see cref="F:System.DateTimeOffset.MaxValue" />.ou<paramref name="ticks" /> est inférieur à DateTimeOffset.MinValue.Ticks ou supérieur à DateTimeOffset.MaxValue.Ticks.ou<paramref name="Offset" /> est inférieur à -14 heures ou supérieur à 14 heures.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Add(System.TimeSpan)">
      <summary>Retourne un nouvel <see cref="T:System.DateTimeOffset" /> objet qui ajoute un intervalle de temps spécifié à la valeur de cette instance.</summary>
      <returns>Objet dont la valeur est égale à la somme de la date et de l'heure représentées par l'objet <see cref="T:System.DateTimeOffset" /> actuel et de l'intervalle de temps représenté par <paramref name="timeSpan" />.</returns>
      <param name="timeSpan">Objet <see cref="T:System.TimeSpan" /> représentant un intervalle de temps positif ou négatif.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur <see cref="T:System.DateTimeOffset" /> obtenue est inférieure à <see cref="F:System.DateTimeOffset.MinValue" />.ou La valeur <see cref="T:System.DateTimeOffset" /> obtenue est supérieure à <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddDays(System.Double)">
      <summary>Retourne un nouvel <see cref="T:System.DateTimeOffset" /> objet qui ajoute un nombre spécifié de jours entiers et partiels à la valeur de cette instance.</summary>
      <returns>Objet dont la valeur est égale à la somme de la date et de l'heure représentées par l'objet <see cref="T:System.DateTimeOffset" /> actuel et du nombre de jours représenté par <paramref name="days" />.</returns>
      <param name="days">Nombre de jours entiers et partiels.Le nombre peut être négatif ou positif.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur <see cref="T:System.DateTimeOffset" /> obtenue est inférieure à <see cref="F:System.DateTimeOffset.MinValue" />.ou La valeur <see cref="T:System.DateTimeOffset" /> obtenue est supérieure à <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddHours(System.Double)">
      <summary>Retourne un nouvel <see cref="T:System.DateTimeOffset" /> objet qui ajoute un nombre spécifié d'heures entières et partielles à la valeur de cette instance.</summary>
      <returns>Objet dont la valeur est égale à la somme de la date et de l'heure représentées par l'objet <see cref="T:System.DateTimeOffset" /> actuel et du nombre d'heures représenté par <paramref name="hours" />.</returns>
      <param name="hours">Nombre d'heures entières et partielles.Le nombre peut être négatif ou positif.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur <see cref="T:System.DateTimeOffset" /> obtenue est inférieure à <see cref="F:System.DateTimeOffset.MinValue" />.ou La valeur <see cref="T:System.DateTimeOffset" /> obtenue est supérieure à <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddMilliseconds(System.Double)">
      <summary>Retourne un nouvel <see cref="T:System.DateTimeOffset" /> objet qui ajoute un nombre spécifié de millisecondes à la valeur de cette instance.</summary>
      <returns>Objet dont la valeur est égale à la somme de la date et de l'heure représentées par l'objet <see cref="T:System.DateTimeOffset" /> actuel et du nombre de millisecondes entières représenté par <paramref name="milliseconds" />.</returns>
      <param name="milliseconds">Nombre de millisecondes entières et partielles.Le nombre peut être négatif ou positif.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur <see cref="T:System.DateTimeOffset" /> obtenue est inférieure à <see cref="F:System.DateTimeOffset.MinValue" />.ou La valeur <see cref="T:System.DateTimeOffset" /> obtenue est supérieure à <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddMinutes(System.Double)">
      <summary>Retourne un nouvel <see cref="T:System.DateTimeOffset" /> objet qui ajoute un nombre spécifié de minutes entières et partielles à la valeur de cette instance.</summary>
      <returns>Objet dont la valeur est égale à la somme de la date et de l'heure représentées par l'objet <see cref="T:System.DateTimeOffset" /> actuel et du nombre de minutes représenté par <paramref name="minutes" />.</returns>
      <param name="minutes">Nombre de minutes entières et partielles.Le nombre peut être négatif ou positif.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur <see cref="T:System.DateTimeOffset" /> obtenue est inférieure à <see cref="F:System.DateTimeOffset.MinValue" />.ou La valeur <see cref="T:System.DateTimeOffset" /> obtenue est supérieure à <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddMonths(System.Int32)">
      <summary>Retourne un nouvel <see cref="T:System.DateTimeOffset" /> objet qui ajoute un nombre spécifié de mois à la valeur de cette instance.</summary>
      <returns>Objet dont la valeur est égale à la somme de la date et de l'heure représentées par l'objet <see cref="T:System.DateTimeOffset" /> actuel et du nombre de mois représenté par <paramref name="months" />.</returns>
      <param name="months">Nombre de mois entiers.Le nombre peut être négatif ou positif.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur <see cref="T:System.DateTimeOffset" /> obtenue est inférieure à <see cref="F:System.DateTimeOffset.MinValue" />.ou La valeur <see cref="T:System.DateTimeOffset" /> obtenue est supérieure à <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddSeconds(System.Double)">
      <summary>Retourne un nouvel <see cref="T:System.DateTimeOffset" /> objet qui ajoute un nombre spécifié de secondes entières et partielles à la valeur de cette instance.</summary>
      <returns>Objet dont la valeur est égale à la somme de la date et de l'heure représentées par l'objet <see cref="T:System.DateTimeOffset" /> actuel et du nombre de secondes représenté par <paramref name="seconds" />.</returns>
      <param name="seconds">Nombre de secondes entières et partielles.Le nombre peut être négatif ou positif.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur <see cref="T:System.DateTimeOffset" /> obtenue est inférieure à <see cref="F:System.DateTimeOffset.MinValue" />.ou La valeur <see cref="T:System.DateTimeOffset" /> obtenue est supérieure à <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddTicks(System.Int64)">
      <summary>Retourne un nouvel <see cref="T:System.DateTimeOffset" /> objet qui ajoute un nombre de graduations spécifié à la valeur de cette instance.</summary>
      <returns>Objet dont la valeur est égale à la somme de la date et de l'heure représentées par l'objet <see cref="T:System.DateTimeOffset" /> actuel et du nombre de graduations représenté par <paramref name="ticks" />.</returns>
      <param name="ticks">Nombre de graduations de 100 nanosecondes.Le nombre peut être négatif ou positif.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur <see cref="T:System.DateTimeOffset" /> obtenue est inférieure à <see cref="F:System.DateTimeOffset.MinValue" />.ou La valeur <see cref="T:System.DateTimeOffset" /> obtenue est supérieure à <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddYears(System.Int32)">
      <summary>Retourne un nouvel <see cref="T:System.DateTimeOffset" /> objet qui ajoute un nombre spécifié d'années à la valeur de cette instance.</summary>
      <returns>Objet dont la valeur est égale à la somme de la date et de l'heure représentées par l'objet <see cref="T:System.DateTimeOffset" /> actif et du nombre d'années représenté par <paramref name="years" />.</returns>
      <param name="years">Nombre d'années.Le nombre peut être négatif ou positif.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur <see cref="T:System.DateTimeOffset" /> obtenue est inférieure à <see cref="F:System.DateTimeOffset.MinValue" />.ou La valeur <see cref="T:System.DateTimeOffset" /> obtenue est supérieure à <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Compare deux objets <see cref="T:System.DateTimeOffset" /> et indique si le premier est antérieur, égal ou ultérieur au second.</summary>
      <returns>Entier signé indiquant si la valeur du paramètre <paramref name="first" /> est antérieure, ultérieure ou égale à la valeur du paramètre <paramref name="second" />, comme l'indique le tableau suivant.Valeur de retourSignificationInférieure à zéro<paramref name="first" /> est antérieur à <paramref name="second" />.Zéro<paramref name="first" /> est égal à <paramref name="second" />.Supérieure à zéro<paramref name="first" /> est ultérieur à <paramref name="second" />.</returns>
      <param name="first">Premier objet à comparer.</param>
      <param name="second">Deuxième objet à comparer.</param>
    </member>
    <member name="M:System.DateTimeOffset.CompareTo(System.DateTimeOffset)">
      <summary>Compare l'objet <see cref="T:System.DateTimeOffset" /> en cours à un objet <see cref="T:System.DateTimeOffset" /> spécifié et indique si l'objet en cours est antérieur, égal ou ultérieur au second objet <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Entier signé indiquant la relation entre l'objet <see cref="T:System.DateTimeOffset" /> en cours et <paramref name="other" />, comme l'indique le tableau suivant.Valeur de retourDescriptionInférieure à zéroL'objet <see cref="T:System.DateTimeOffset" /> en cours est antérieur à <paramref name="other" />.ZéroL'objet <see cref="T:System.DateTimeOffset" /> en cours est identique à <paramref name="other" />.Supérieure à zéro.L'objet <see cref="T:System.DateTimeOffset" /> en cours est ultérieur à <paramref name="other" />.</returns>
      <param name="other">Un objet à comparer avec l'objet <see cref="T:System.DateTimeOffset" /> actuel.</param>
    </member>
    <member name="P:System.DateTimeOffset.Date">
      <summary>Obtient une valeur <see cref="T:System.DateTime" /> représentant le composant "date" de l'objet <see cref="T:System.DateTimeOffset" /> en cours.</summary>
      <returns>Valeur <see cref="T:System.DateTime" /> représentant le composant "date" de l'objet <see cref="T:System.DateTimeOffset" /> en cours.</returns>
    </member>
    <member name="P:System.DateTimeOffset.DateTime">
      <summary>Obtient une valeur <see cref="T:System.DateTime" /> représentant la date et l'heure de l'objet <see cref="T:System.DateTimeOffset" /> en cours.</summary>
      <returns>Date et heure de l'objet <see cref="T:System.DateTimeOffset" /> actuel.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Day">
      <summary>Obtient le jour du mois représenté par l'objet <see cref="T:System.DateTimeOffset" /> en cours.</summary>
      <returns>Composant "jour" de l'objet <see cref="T:System.DateTimeOffset" /> en cours, exprimé sous la forme d'une valeur comprise entre 1 et 31.</returns>
    </member>
    <member name="P:System.DateTimeOffset.DayOfWeek">
      <summary>Obtient le jour de la semaine représenté par l'objet <see cref="T:System.DateTimeOffset" /> en cours.</summary>
      <returns>Une des valeurs d'énumération qui indique le jour de la semaine de l'objet <see cref="T:System.DateTimeOffset" /> actuel.</returns>
    </member>
    <member name="P:System.DateTimeOffset.DayOfYear">
      <summary>Obtient le jour de l'année représenté par l'objet <see cref="T:System.DateTimeOffset" /> en cours.</summary>
      <returns>Jour de l'année de l'objet <see cref="T:System.DateTimeOffset" /> en cours, exprimé sous la forme d'une valeur comprise entre 1 et 366.</returns>
    </member>
    <member name="M:System.DateTimeOffset.Equals(System.DateTimeOffset)">
      <summary>Détermine si l'objet <see cref="T:System.DateTimeOffset" /> en cours représente le même instant précis qu'un objet <see cref="T:System.DateTimeOffset" /> spécifié.</summary>
      <returns>true si les deux objets <see cref="T:System.DateTimeOffset" /> ont la même valeur <see cref="P:System.DateTimeOffset.UtcDateTime" /> ; sinon, false.</returns>
      <param name="other">Objet à comparer à l'objet <see cref="T:System.DateTimeOffset" /> en cours.   </param>
    </member>
    <member name="M:System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Détermine si deux objets <see cref="T:System.DateTimeOffset" /> spécifiés représentent le même instant précis.</summary>
      <returns>true si les deux objets <see cref="T:System.DateTimeOffset" /> ont la même valeur <see cref="P:System.DateTimeOffset.UtcDateTime" /> ; sinon, false.</returns>
      <param name="first">Premier objet à comparer.</param>
      <param name="second">Deuxième objet à comparer.</param>
    </member>
    <member name="M:System.DateTimeOffset.Equals(System.Object)">
      <summary>Détermine si un objet <see cref="T:System.DateTimeOffset" /> représente le même instant précis qu'un objet spécifié.</summary>
      <returns>true si le paramètre <paramref name="obj" /> est un objet <see cref="T:System.DateTimeOffset" /> et représente le même instant précis que l'objet <see cref="T:System.DateTimeOffset" /> en cours ; sinon, false.</returns>
      <param name="obj">Objet à comparer à l'objet <see cref="T:System.DateTimeOffset" /> actuel.</param>
    </member>
    <member name="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)">
      <summary>Détermine si l'objet <see cref="T:System.DateTimeOffset" /> en cours représente la même heure et a le même offset qu'un objet <see cref="T:System.DateTimeOffset" /> spécifié.</summary>
      <returns>true si l'objet <see cref="T:System.DateTimeOffset" /> en cours et <paramref name="other" /> ont la même valeur de date et d'heure et la même valeur <see cref="P:System.DateTimeOffset.Offset" /> ; sinon, false.</returns>
      <param name="other">Objet à comparer à l'objet <see cref="T:System.DateTimeOffset" /> actuel. </param>
    </member>
    <member name="M:System.DateTimeOffset.FromFileTime(System.Int64)">
      <summary>Convertit l'heure de fichier Windows spécifiée en heure locale équivalente.</summary>
      <returns>Objet qui représente la date et l'heure de <paramref name="fileTime" />, l'offset étant égal à l'offset de l'heure locale.</returns>
      <param name="fileTime">Heure de fichier Windows, exprimée en graduations.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="filetime" /> est inférieur à zéro.ou<paramref name="filetime" /> est supérieur à DateTimeOffset.MaxValue.Ticks.</exception>
    </member>
    <member name="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)">
      <summary>Convertit une heure Unix exprimée en nombre de millisecondes écoulées depuis 1970-01-01T00:00:00Z à une <see cref="T:System.DateTimeOffset" /> valeur.</summary>
      <returns>Une valeur de date et d'heure qui représente au même moment dans le temps que le temps d'Unix. </returns>
      <param name="milliseconds">Temps Unix, exprimé comme le nombre de millisecondes qui se sont écoulées depuis 1970-01-01T00:00:00Z (1er janvier 1970 à 00h00 UTC).Pour les temps Unix avant cette date, sa valeur est négative.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="milliseconds" /> est inférieur à -62 135 596 800 000. ou<paramref name="milliseconds" /> est supérieur à 253 402 300 799 999. </exception>
    </member>
    <member name="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)">
      <summary>Convertit une heure Unix exprimée en nombre de secondes écoulées depuis 1970-01-01T00:00:00Z à une <see cref="T:System.DateTimeOffset" /> valeur. </summary>
      <returns>Une valeur de date et d'heure qui représente au même moment dans le temps que le temps d'Unix. </returns>
      <param name="seconds">Temps Unix, exprimé comme le nombre de secondes qui se sont écoulées depuis 1970-01-01T00:00:00Z (1er janvier 1970 à 00h00 UTC).Pour les temps Unix avant cette date, sa valeur est négative.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="seconds" /> est inférieur à -62 135 596 800. ou<paramref name="seconds" /> est supérieur à 253 402 300 799. </exception>
    </member>
    <member name="M:System.DateTimeOffset.GetHashCode">
      <summary>Retourne le code de hachage pour l'objet <see cref="T:System.DateTimeOffset" /> en cours.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Hour">
      <summary>Obtient le composant "heure" de l'heure représentée par l'objet <see cref="T:System.DateTimeOffset" /> en cours.</summary>
      <returns>Composant "heure" de l'objet <see cref="T:System.DateTimeOffset" /> en cours.Cette propriété utilise une horloge de 24 heures ; la valeur est comprise entre 0 et 23.</returns>
    </member>
    <member name="P:System.DateTimeOffset.LocalDateTime">
      <summary>Obtient une valeur <see cref="T:System.DateTime" /> représentant la date et l'heure locales de l'objet <see cref="T:System.DateTimeOffset" /> en cours.</summary>
      <returns>Date et heure locales de l'objet <see cref="T:System.DateTimeOffset" /> actuel.</returns>
    </member>
    <member name="F:System.DateTimeOffset.MaxValue">
      <summary>Représente la plus grande valeur possible de <see cref="T:System.DateTimeOffset" />.Ce champ est en lecture seule.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="F:System.DateTime.MaxValue" /> se situe hors de la page du calendrier par défaut de la culture actuelle ou spécifiée.</exception>
    </member>
    <member name="P:System.DateTimeOffset.Millisecond">
      <summary>Obtient le composant « milliseconde » de l'heure représentée par l'objet <see cref="T:System.DateTimeOffset" /> en cours.</summary>
      <returns>Composant « milliseconde » de l'objet <see cref="T:System.DateTimeOffset" /> en cours, exprimé sous la forme d'un entier compris entre 0 et 999.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Minute">
      <summary>Obtient le composant "minute" de l'heure représentée par l'objet <see cref="T:System.DateTimeOffset" /> en cours.</summary>
      <returns>Composant "minute" de l'objet <see cref="T:System.DateTimeOffset" /> en cours, exprimé sous la forme d'un entier compris entre 0 et 59.</returns>
    </member>
    <member name="F:System.DateTimeOffset.MinValue">
      <summary>Représente la première valeur possible de <see cref="T:System.DateTimeOffset" />.Ce champ est en lecture seule.</summary>
    </member>
    <member name="P:System.DateTimeOffset.Month">
      <summary>Obtient le composant "mois" de la date représentée par l'objet <see cref="T:System.DateTimeOffset" /> en cours.</summary>
      <returns>Composant "mois" de l'objet <see cref="T:System.DateTimeOffset" /> en cours, exprimé sous la forme d'un entier compris entre 1 et 12.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Now">
      <summary>Obtient un objet <see cref="T:System.DateTimeOffset" /> qui a pour valeur la date et l'heure actuelles de l'ordinateur actif, l'offset étant égal à l'offset de l'heure locale à partir du temps universel.</summary>
      <returns>Objet <see cref="T:System.DateTimeOffset" /> dont la date et l'heure correspondent à l'heure locale actuelle et dont l'offset est égal à l'offset du fuseau horaire local à partir du temps universel.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Offset">
      <summary>Obtient l'offset d'heure à partir du temps universel. </summary>
      <returns>Différence entre la valeur d'heure de l'objet <see cref="T:System.DateTimeOffset" /> actuel et le temps universel coordonné.</returns>
    </member>
    <member name="M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)">
      <summary>Ajoute un intervalle de temps spécifié à un objet <see cref="T:System.DateTimeOffset" /> présentant une date et une heure spécifiées et produit un objet <see cref="T:System.DateTimeOffset" /> présentant une nouvelle date et une nouvelle heure.</summary>
      <returns>Objet dont la valeur est égale à la somme des valeurs de <paramref name="dateTimeTz" /> et <paramref name="timeSpan" />.</returns>
      <param name="dateTimeOffset">Objet auquel ajouter l'intervalle de temps.</param>
      <param name="timeSpan">Intervalle de temps à ajouter.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur <see cref="T:System.DateTimeOffset" /> obtenue est inférieure à <see cref="F:System.DateTimeOffset.MinValue" />.ou La valeur <see cref="T:System.DateTimeOffset" /> obtenue est supérieure à <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Détermine si deux objets <see cref="T:System.DateTimeOffset" /> spécifiés représentent le même instant précis.</summary>
      <returns>true si les deux objets <see cref="T:System.DateTimeOffset" /> ont la même valeur <see cref="P:System.DateTimeOffset.UtcDateTime" /> ; sinon, false.</returns>
      <param name="left">Premier objet à comparer.</param>
      <param name="right">Deuxième objet à comparer.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Détermine si un objet <see cref="T:System.DateTimeOffset" /> spécifié est supérieur (ou ultérieur) au second objet <see cref="T:System.DateTimeOffset" /> spécifié.</summary>
      <returns>true si la valeur <see cref="P:System.DateTimeOffset.UtcDateTime" /> de <paramref name="left" /> est ultérieure à la valeur <see cref="P:System.DateTimeOffset.UtcDateTime" /> de <paramref name="right" /> ; sinon, false.</returns>
      <param name="left">Premier objet à comparer.</param>
      <param name="right">Deuxième objet à comparer.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Détermine si un objet <see cref="T:System.DateTimeOffset" /> spécifié est supérieur ou égal au second objet <see cref="T:System.DateTimeOffset" /> spécifié.</summary>
      <returns>true si la valeur <see cref="P:System.DateTimeOffset.UtcDateTime" /> de <paramref name="left" /> est identique ou ultérieure à la valeur <see cref="P:System.DateTimeOffset.UtcDateTime" /> de <paramref name="right" /> ; sinon, false.</returns>
      <param name="left">Premier objet à comparer.</param>
      <param name="right">Deuxième objet à comparer.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset">
      <summary>Définit une conversion implicite d'un objet <see cref="T:System.DateTime" /> en objet <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Objet converti.</returns>
      <param name="dateTime">Objet à convertir. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Les date et heure en UTC résultant de l'application de l'offset sont antérieures à <see cref="F:System.DateTimeOffset.MinValue" />.ouLes date et heure en UTC résultant de l'application de l'offset sont ultérieures à <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Détermine si deux objets <see cref="T:System.DateTimeOffset" /> spécifiés font référence à des moments différents.</summary>
      <returns>true si <paramref name="left" /> et <paramref name="right" /> n'ont pas la même valeur <see cref="P:System.DateTimeOffset.UtcDateTime" /> ; sinon, false.</returns>
      <param name="left">Premier objet à comparer.</param>
      <param name="right">Deuxième objet à comparer.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Détermine si un objet <see cref="T:System.DateTimeOffset" /> spécifié est inférieur à un deuxième objet <see cref="T:System.DateTimeOffset" /> spécifié.</summary>
      <returns>true si la valeur <see cref="P:System.DateTimeOffset.UtcDateTime" /> de <paramref name="left" /> est antérieure à la valeur <see cref="P:System.DateTimeOffset.UtcDateTime" /> de <paramref name="right" /> ; sinon, false.</returns>
      <param name="left">Premier objet à comparer.</param>
      <param name="right">Deuxième objet à comparer.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Détermine si un objet <see cref="T:System.DateTimeOffset" /> spécifié est inférieur à un deuxième objet <see cref="T:System.DateTimeOffset" /> spécifié.</summary>
      <returns>true si la valeur <see cref="P:System.DateTimeOffset.UtcDateTime" /> de <paramref name="left" /> est antérieure à la valeur <see cref="P:System.DateTimeOffset.UtcDateTime" /> de <paramref name="right" /> ; sinon, false.</returns>
      <param name="left">Premier objet à comparer.</param>
      <param name="right">Deuxième objet à comparer.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Soustrait un objet <see cref="T:System.DateTimeOffset" /> d'un autre objet et produit un intervalle de temps.</summary>
      <returns>Objet qui représente la différence entre <paramref name="left" /> et <paramref name="right" />.</returns>
      <param name="left">Diminuende.   </param>
      <param name="right">Diminuteur.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)">
      <summary>Soustrait un intervalle de temps spécifié d'une date et d'une heure spécifiées et produit une nouvelle date et heure.</summary>
      <returns>Objet qui est égal à la valeur de <paramref name="dateTimeOffset" /> moins <paramref name="timeSpan" />.</returns>
      <param name="dateTimeOffset">Objet de date et d'heure auquel appliquer la soustraction.</param>
      <param name="timeSpan">Intervalle de temps à soustraire.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur <see cref="T:System.DateTimeOffset" /> obtenue est inférieure à <see cref="F:System.DateTimeOffset.MinValue" /> ou supérieure à <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Parse(System.String)">
      <summary>Convertit la représentation sous forme de chaîne spécifiée d'une date, heure et offset en <see cref="T:System.DateTimeOffset" /> équivalent.</summary>
      <returns>Objet qui équivaut à la date et à l'heure figurant dans <paramref name="input" />.</returns>
      <param name="input">Chaîne contenant une date et une heure à convertir.</param>
      <exception cref="T:System.ArgumentException">L'offset est supérieur à 14 heures ou inférieur à -14 heures.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ne contient pas de représentation sous forme de chaîne valide de date et d'heure.ou<paramref name="input" /> contient la représentation sous forme de chaîne d'une valeur d'offset sans date ou heure.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne spécifiée d'une date et d'une heure en <see cref="T:System.DateTimeOffset" /> équivalent à l'aide des informations de format propres à la culture spécifiées.</summary>
      <returns>Objet qui équivaut à la date et à l'heure figurant dans <paramref name="input" />, comme spécifié par <paramref name="formatProvider" />.</returns>
      <param name="input">Chaîne contenant une date et une heure à convertir.   </param>
      <param name="formatProvider">Objet qui fournit des informations de format spécifiques à la culture concernant <paramref name="input" />.</param>
      <exception cref="T:System.ArgumentException">L'offset est supérieur à 14 heures ou inférieur à -14 heures.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ne contient pas de représentation sous forme de chaîne valide de date et d'heure.ou<paramref name="input" /> contient la représentation sous forme de chaîne d'une valeur d'offset sans date ou heure.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Convertit la chaîne représentant une date et heure en <see cref="T:System.DateTimeOffset" /> équivalent à l'aide des informations et style de format propres à la culture spécifiés.</summary>
      <returns>Objet qui équivaut à la date et à l'heure figurant dans <paramref name="input" /> comme spécifié par <paramref name="formatProvider" /> et <paramref name="styles" />.</returns>
      <param name="input">Chaîne contenant une date et une heure à convertir.   </param>
      <param name="formatProvider">Objet qui fournit des informations de format spécifiques à la culture concernant <paramref name="input" />.</param>
      <param name="styles">Combinaison d'opérations de bits de valeurs d'énumération qui indique le format autorisé du paramètre <paramref name="input" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentException">L'offset est supérieur à 14 heures ou inférieur à -14 heures.ou<paramref name="styles" /> n'est pas une valeur <see cref="T:System.Globalization.DateTimeStyles" /> valide.ou<paramref name="styles" /> inclut une valeur <see cref="T:System.Globalization.DateTimeStyles" /> non prise en charge.ou<paramref name="styles" /> inclut des valeurs <see cref="T:System.Globalization.DateTimeStyles" /> qui ne peuvent pas être utilisées ensemble.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ne contient pas de représentation sous forme de chaîne valide de date et d'heure.ou<paramref name="input" /> contient la représentation sous forme de chaîne d'une valeur d'offset sans date ou heure.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne spécifiée d'une date et d'une heure en <see cref="T:System.DateTimeOffset" /> équivalent à l'aide des informations de format propres à la culture et au format spécifiés.Le format de la chaîne doit correspondre exactement au format spécifié.</summary>
      <returns>Objet qui équivaut à la date et à l'heure figurant dans <paramref name="input" /> comme spécifié par <paramref name="format" /> et <paramref name="formatProvider" />.</returns>
      <param name="input">Chaîne contenant une date et une heure à convertir.</param>
      <param name="format">Spécificateur de format définissant le format attendu de <paramref name="input" />.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="input" />.</param>
      <exception cref="T:System.ArgumentException">L'offset est supérieur à 14 heures ou inférieur à -14 heures.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur null.ou<paramref name="format" /> a la valeur null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> est une chaîne vide ("").ou<paramref name="input" /> ne contient pas de représentation sous forme de chaîne valide de date et d'heure.ou<paramref name="format" /> est une chaîne vide.ouLe composant « heure » et l'indicateur AM/PM de <paramref name="input" /> ne correspondent pas.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Convertit la représentation sous forme de chaîne spécifiée d'une date et d'une heure en <see cref="T:System.DateTimeOffset" /> équivalent à l'aide des informations et du style de format propres à la culture spécifiés.Le format de la chaîne doit correspondre exactement au format spécifié.</summary>
      <returns>Objet qui équivaut à la date et à l'heure figurant dans le paramètre <paramref name="input" />, comme spécifié par les paramètres <paramref name="format" />, <paramref name="formatProvider" /> et <paramref name="styles" />.</returns>
      <param name="input">Chaîne contenant une date et une heure à convertir.</param>
      <param name="format">Spécificateur de format définissant le format attendu de <paramref name="input" />.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="input" />.</param>
      <param name="styles">Combinaison d'opérations de bits de valeurs d'énumération qui indique le format autorisé du paramètre <paramref name="input" />.</param>
      <exception cref="T:System.ArgumentException">L'offset est supérieur à 14 heures ou inférieur à -14 heures.ouLe paramètre <paramref name="styles" /> inclut une valeur non prise en charge.ouLe paramètre <paramref name="styles" /> contient des valeurs <see cref="T:System.Globalization.DateTimeStyles" /> qui ne peuvent pas être utilisées ensemble.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur null.ou<paramref name="format" /> a la valeur null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> est une chaîne vide ("").ou<paramref name="input" /> ne contient pas de représentation sous forme de chaîne valide de date et d'heure.ou<paramref name="format" /> est une chaîne vide.ouLe composant « heure » et l'indicateur AM/PM de <paramref name="input" /> ne correspondent pas. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Convertit la représentation sous forme de chaîne spécifiée d'une date et d'une heure en <see cref="T:System.DateTimeOffset" /> équivalent à l'aide du style, des informations de format propres à la culture et des formats spécifiés.Le format de la représentation sous forme de chaîne doit correspondre exactement à l'un des formats spécifiés.</summary>
      <returns>Objet qui équivaut à la date et à l'heure figurant dans le paramètre <paramref name="input" />, comme spécifié par les paramètres <paramref name="formats" />, <paramref name="formatProvider" /> et <paramref name="styles" />.</returns>
      <param name="input">Chaîne contenant une date et une heure à convertir.</param>
      <param name="formats">Tableau des spécificateurs de format définissant les formats attendus de <paramref name="input" />.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="input" />.</param>
      <param name="styles">Combinaison d'opérations de bits de valeurs d'énumération qui indique le format autorisé du paramètre <paramref name="input" />.</param>
      <exception cref="T:System.ArgumentException">L'offset est supérieur à 14 heures ou inférieur à -14 heures.ou<paramref name="styles" /> inclut une valeur non prise en charge.ouLe paramètre <paramref name="styles" /> contient des valeurs <see cref="T:System.Globalization.DateTimeStyles" /> qui ne peuvent pas être utilisées ensemble.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> est une chaîne vide ("").ou<paramref name="input" /> ne contient pas de représentation sous forme de chaîne valide de date et d'heure.ouAucun élément de <paramref name="formats" /> ne contient de spécificateur de format valide.ouLe composant « heure » et l'indicateur AM/PM de <paramref name="input" /> ne correspondent pas. </exception>
    </member>
    <member name="P:System.DateTimeOffset.Second">
      <summary>Obtient le composant "seconde" de l'heure de l'horloge représentée par l'objet <see cref="T:System.DateTimeOffset" /> en cours.</summary>
      <returns>Composant "seconde" de l'objet <see cref="T:System.DateTimeOffset" />, exprimé sous la forme d'une valeur entière comprise entre 0 et 59.</returns>
    </member>
    <member name="M:System.DateTimeOffset.Subtract(System.DateTimeOffset)">
      <summary>Soustrait une valeur <see cref="T:System.DateTimeOffset" /> représentant une date et une heure spécifiques de l'objet <see cref="T:System.DateTimeOffset" /> en cours.</summary>
      <returns>Objet qui spécifie l'intervalle entre les deux objets <see cref="T:System.DateTimeOffset" />.</returns>
      <param name="value">Objet qui représente la valeur à soustraire. </param>
    </member>
    <member name="M:System.DateTimeOffset.Subtract(System.TimeSpan)">
      <summary>Soustrait un intervalle de temps spécifié de l'objet <see cref="T:System.DateTimeOffset" /> en cours.</summary>
      <returns>Objet égal à la date et à l'heure représentées par l'objet <see cref="T:System.DateTimeOffset" /> actuel, moins l'intervalle de temps représenté par <paramref name="value" />.</returns>
      <param name="value">Intervalle de temps à soustraire.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur <see cref="T:System.DateTimeOffset" /> obtenue est inférieure à <see cref="F:System.DateTimeOffset.MinValue" />.ou La valeur <see cref="T:System.DateTimeOffset" /> obtenue est supérieure à <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.System#IComparable#CompareTo(System.Object)">
      <summary>Compare la valeur de l'objet <see cref="T:System.DateTimeOffset" /> en cours à un objet du même type.</summary>
      <returns>Entier signé 32 bits indiquant si l'objet <see cref="T:System.DateTimeOffset" /> en cours est inférieur, égal ou supérieur à <paramref name="obj" />.Les valeurs de retour de la méthode sont interprétées comme suit :Valeur de retourDescriptionInférieure à zéroL'objet <see cref="T:System.DateTimeOffset" /> en cours est inférieur à (antérieur à) <paramref name="obj" />.ZéroL'objet <see cref="T:System.DateTimeOffset" /> en cours est égal à (même instant précis que) <paramref name="obj" />.Supérieure à zéroL'objet <see cref="T:System.DateTimeOffset" /> en cours est supérieur à (ultérieur à) <paramref name="obj" />.</returns>
      <param name="obj">Objet à comparer avec l'objet <see cref="T:System.DateTimeOffset" /> en cours.</param>
    </member>
    <member name="P:System.DateTimeOffset.Ticks">
      <summary>Obtient le nombre de graduations représentant la date et l'heure de l'objet <see cref="T:System.DateTimeOffset" /> en cours en temps horloge.</summary>
      <returns>Nombre de graduations dans le temps horloge de l'objet <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="P:System.DateTimeOffset.TimeOfDay">
      <summary>Obtient l'heure pour l'objet <see cref="T:System.DateTimeOffset" /> en cours.</summary>
      <returns>Intervalle de temps de la date actuelle écoulé depuis minuit.</returns>
    </member>
    <member name="M:System.DateTimeOffset.ToFileTime">
      <summary>Convertit la valeur de l'objet <see cref="T:System.DateTimeOffset" /> en cours en heure de fichier Windows.</summary>
      <returns>Valeur de l'objet <see cref="T:System.DateTimeOffset" /> en cours exprimée sous forme d'heure de fichier Windows.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">L'heure du fichier résultante représente une date et une heure antérieures à minuit le 1er janvier 1601 (notre ère)Temps universel coordonné (UTC).</exception>
    </member>
    <member name="M:System.DateTimeOffset.ToLocalTime">
      <summary>Convertit l'objet <see cref="T:System.DateTimeOffset" /> en cours en objet <see cref="T:System.DateTimeOffset" /> représentant l'heure locale.</summary>
      <returns>Objet qui représente la date et l'heure de l'objet <see cref="T:System.DateTimeOffset" /> actuel converties en heure locale.</returns>
    </member>
    <member name="M:System.DateTimeOffset.ToOffset(System.TimeSpan)">
      <summary>Convertit la valeur de l'objet <see cref="T:System.DateTimeOffset" /> en cours en date et heure spécifiées par une valeur d'offset.</summary>
      <returns>Objet égal à l'objet <see cref="T:System.DateTimeOffset" /> d'origine (c'est-à-dire dont les méthodes <see cref="M:System.DateTimeOffset.ToUniversalTime" /> retournent des instants identiques) mais dont la propriété <see cref="P:System.DateTimeOffset.Offset" /> a la valeur <paramref name="offset" />.</returns>
      <param name="offset">Offset de conversion de la valeur <see cref="T:System.DateTimeOffset" />.   </param>
      <exception cref="T:System.ArgumentException">La valeur <see cref="P:System.DateTimeOffset.DateTime" /> de l'objet <see cref="T:System.DateTimeOffset" /> obtenu est antérieure à <see cref="F:System.DateTimeOffset.MinValue" />.ouLa valeur <see cref="P:System.DateTimeOffset.DateTime" /> de l'objet <see cref="T:System.DateTimeOffset" /> obtenu est ultérieure à <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> est inférieur à -14 heures.ou<paramref name="offset" /> est supérieur à 14 heures.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString">
      <summary>Convertit la valeur de l'objet <see cref="T:System.DateTimeOffset" /> actif en sa représentation équivalente sous forme de chaîne.</summary>
      <returns>Représentation sous forme de chaîne d'un objet <see cref="T:System.DateTimeOffset" />qui inclut l'offset ajouté à la fin de la chaîne.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La date et l'heure sont en dehors de la plage de dates prise en charge par le calendrier utilisé par la culture actuelle. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString(System.IFormatProvider)">
      <summary>Convertit la valeur de l'objet <see cref="T:System.DateTimeOffset" /> en cours en représentation sous forme de chaîne équivalente à l'aide des informations de format propres à la culture spécifiées.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de l'objet <see cref="T:System.DateTimeOffset" /> actif, telle que spécifiée par <paramref name="formatProvider" />.</returns>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La date et l'heure sont en dehors de la plage de dates prise en charge par le calendrier utilisé par <paramref name="formatProvider" />. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString(System.String)">
      <summary>Convertit la valeur de l'objet <see cref="T:System.DateTimeOffset" /> actuel en sa représentation sous forme de chaîne équivalente en utilisant le format spécifié.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de l'objet <see cref="T:System.DateTimeOffset" /> actif, telle que spécifiée par <paramref name="format" />.</returns>
      <param name="format">Chaîne de format.</param>
      <exception cref="T:System.FormatException">La longueur de <paramref name="format" /> est 1 et il ne s'agit pas d'un des caractères spécificateurs de format standard définis pour <see cref="T:System.Globalization.DateTimeFormatInfo" />. ou<paramref name="format" /> ne contient pas de modèle de format personnalisé valide.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La date et l'heure sont en dehors de la plage de dates prise en charge par le calendrier utilisé par la culture actuelle. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)">
      <summary>Convertit la valeur de l'objet <see cref="T:System.DateTimeOffset" /> actif en sa représentation sous forme de chaîne équivalente à l'aide du format et des informations de format spécifiques à la culture spécifiés.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de l'objet <see cref="T:System.DateTimeOffset" /> en cours, telle que spécifiée par <paramref name="format" /> et <paramref name="provider" />.</returns>
      <param name="format">Chaîne de format.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <exception cref="T:System.FormatException">La longueur de <paramref name="format" /> est 1 et il ne s'agit pas d'un des caractères spécificateurs de format standard définis pour <see cref="T:System.Globalization.DateTimeFormatInfo" />.ou<paramref name="format" /> ne contient pas de modèle de format personnalisé valide. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La date et l'heure sont en dehors de la plage de dates prise en charge par le calendrier utilisé par <paramref name="formatProvider" />. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ToUniversalTime">
      <summary>Convertit l'objet <see cref="T:System.DateTimeOffset" /> en cours en valeur <see cref="T:System.DateTimeOffset" /> représentant le temps universel.</summary>
      <returns>Objet qui représente la date et l'heure de l'objet <see cref="T:System.DateTimeOffset" /> actuel converties en temps universel coordonné.</returns>
    </member>
    <member name="M:System.DateTimeOffset.ToUnixTimeMilliseconds">
      <summary>Retourne le nombre de millisecondes écoulées depuis 1970-01-01T00:00:00.000Z. </summary>
      <returns>Le nombre de millisecondes écoulées depuis 1970-01-01T00:00:00.000Z. </returns>
    </member>
    <member name="M:System.DateTimeOffset.ToUnixTimeSeconds">
      <summary>Retourne le nombre de secondes écoulées depuis 1970-01-01T00:00:00Z. </summary>
      <returns>Le nombre de secondes écoulées depuis 1970-01-01T00:00:00Z. </returns>
    </member>
    <member name="M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)">
      <summary>Essaie de convertir une représentation sous forme de chaîne spécifiée d'une date et d'une heure en son équivalent <see cref="T:System.DateTimeOffset" /> et retourne une valeur indiquant si la conversion a réussi.</summary>
      <returns>true si la conversion du paramètre <paramref name="input" /> a réussi ; sinon, false.</returns>
      <param name="input">Chaîne contenant une date et une heure à convertir.</param>
      <param name="result">Lorsque la méthode est retournée, contient le <see cref="T:System.DateTimeOffset" /> équivalent à la date et l'heure de <paramref name="input" /> si la conversion a réussi, ou <see cref="F:System.DateTimeOffset.MinValue" /> si elle a échoué.La conversion échoue si le paramètre <paramref name="input" /> est null ou ne contient pas de représentation sous forme de chaîne valide d'une date et d'une heure.Ce paramètre est passé sans être initialisé.</param>
    </member>
    <member name="M:System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
      <summary>Essaie de convertir une représentation sous forme de chaîne spécifiée d'une date et d'une heure en son équivalent <see cref="T:System.DateTimeOffset" /> et retourne une valeur indiquant si la conversion a réussi.</summary>
      <returns>true si la conversion du paramètre <paramref name="input" /> a réussi ; sinon, false.</returns>
      <param name="input">Chaîne contenant une date et une heure à convertir.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme spécifiques à la culture concernant <paramref name="input" />.</param>
      <param name="styles">Combinaison d'opérations de bits de valeurs d'énumération qui indique le format autorisé du paramètre <paramref name="input" />. </param>
      <param name="result">Lorsque la méthode est retournée, contient la valeur <see cref="T:System.DateTimeOffset" /> équivalente à la date et l'heure de <paramref name="input" /> si la conversion a réussi, ou <see cref="F:System.DateTimeOffset.MinValue" /> si elle a échoué.La conversion échoue si le paramètre <paramref name="input" /> est null ou ne contient pas de représentation sous forme de chaîne valide d'une date et d'une heure.Ce paramètre est passé sans être initialisé.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> inclut une valeur <see cref="T:System.Globalization.DateTimeStyles" /> non définie.ou<see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> n'est pas pris en charge.ou<paramref name="styles" /> inclut des valeurs <see cref="T:System.Globalization.DateTimeStyles" /> qui s'excluent mutuellement.</exception>
    </member>
    <member name="M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
      <summary>Convertit la représentation sous forme de chaîne spécifiée d'une date et d'une heure en <see cref="T:System.DateTimeOffset" /> équivalent à l'aide des informations et du style de format propres à la culture spécifiés.Le format de la chaîne doit correspondre exactement au format spécifié.</summary>
      <returns>true si la conversion du paramètre <paramref name="input" /> a réussi ; sinon, false.</returns>
      <param name="input">Chaîne contenant une date et une heure à convertir.</param>
      <param name="format">Spécificateur de format définissant le format requis de <paramref name="input" />.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="input" />.</param>
      <param name="styles">Combinaison de bits de valeurs d'énumération qui indique le format autorisé de l'entrée.Une valeur typique à spécifier est None.</param>
      <param name="result">Lorsque la méthode est retournée, contient le <see cref="T:System.DateTimeOffset" /> équivalent à la date et l'heure de <paramref name="input" /> si la conversion a réussi, ou <see cref="F:System.DateTimeOffset.MinValue" /> si elle a échoué.La conversion échoue si le paramètre <paramref name="input" /> est null ou ne contient aucune représentation sous forme de chaîne valide d'une date et d'une heure au format attendu défini par <paramref name="format" /> et <paramref name="provider" />.Ce paramètre est passé sans être initialisé.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> inclut une valeur <see cref="T:System.Globalization.DateTimeStyles" /> non définie.ou<see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> n'est pas pris en charge.ou<paramref name="styles" /> inclut des valeurs <see cref="T:System.Globalization.DateTimeStyles" /> qui s'excluent mutuellement.</exception>
    </member>
    <member name="M:System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
      <summary>Convertit la représentation sous forme de chaîne spécifiée d'une date et heure en <see cref="T:System.DateTimeOffset" /> équivalent à l'aide du tableau de formats, des informations et du style de format propres à la culture spécifiés.Le format de la représentation sous forme de chaîne doit correspondre exactement à l'un des formats spécifiés.</summary>
      <returns>true si la conversion du paramètre <paramref name="input" /> a réussi ; sinon, false.</returns>
      <param name="input">Chaîne contenant une date et une heure à convertir.</param>
      <param name="formats">Tableau définissant les formats attendus de <paramref name="input" />.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="input" />.</param>
      <param name="styles">Combinaison de bits de valeurs d'énumération qui indique le format autorisé de l'entrée.Une valeur typique à spécifier est None.</param>
      <param name="result">Lorsque la méthode est retournée, contient le <see cref="T:System.DateTimeOffset" /> équivalent à la date et l'heure de <paramref name="input" /> si la conversion a réussi, ou <see cref="F:System.DateTimeOffset.MinValue" /> si elle a échoué.La conversion échoue si <paramref name="input" /> ne contient aucune représentation sous forme de chaîne valide d'une date et d'une heure ou ne contient pas la date et l'heure au format attendu défini par <paramref name="format" />, ou si <paramref name="formats" /> est null.Ce paramètre est passé sans être initialisé.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> inclut une valeur <see cref="T:System.Globalization.DateTimeStyles" /> non définie.ou<see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> n'est pas pris en charge.ou<paramref name="styles" /> inclut des valeurs <see cref="T:System.Globalization.DateTimeStyles" /> qui s'excluent mutuellement.</exception>
    </member>
    <member name="P:System.DateTimeOffset.UtcDateTime">
      <summary>Obtient une valeur <see cref="T:System.DateTime" /> représentant la date et l'heure en temps universel de l'objet <see cref="T:System.DateTimeOffset" /> en cours.</summary>
      <returns>Date et heure en temps universel coordonné de l'objet <see cref="T:System.DateTimeOffset" /> actuel.</returns>
    </member>
    <member name="P:System.DateTimeOffset.UtcNow">
      <summary>Obtient un objet <see cref="T:System.DateTimeOffset" /> dont la date et l'heure ont la valeur de la date et de l'heure en temps universel actuel et dont l'offset a la valeur <see cref="F:System.TimeSpan.Zero" />.</summary>
      <returns>Objet dont la date et l'heure sont en temps universel coordonné actuel et dont l'offset a la valeur <see cref="F:System.TimeSpan.Zero" />.</returns>
    </member>
    <member name="P:System.DateTimeOffset.UtcTicks">
      <summary>Obtient le nombre de graduations représentant la date et l'heure de l'objet <see cref="T:System.DateTimeOffset" /> en cours en temps universel.</summary>
      <returns>Nombre de graduations dans le temps universel coordonné de l'objet <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Year">
      <summary>Obtient le composant "année" de la date représentée par l'objet <see cref="T:System.DateTimeOffset" /> en cours.</summary>
      <returns>Composant "année" de l'objet <see cref="T:System.DateTimeOffset" /> en cours, exprimé sous la forme d'une valeur entière comprise entre 0 et 9999.</returns>
    </member>
    <member name="T:System.DayOfWeek">
      <summary>Spécifie le jour de la semaine.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.DayOfWeek.Friday">
      <summary>Indique Friday (vendredi).</summary>
    </member>
    <member name="F:System.DayOfWeek.Monday">
      <summary>Indique Monday (lundi).</summary>
    </member>
    <member name="F:System.DayOfWeek.Saturday">
      <summary>Indique Saturday (samedi).</summary>
    </member>
    <member name="F:System.DayOfWeek.Sunday">
      <summary>Indique Sunday (dimanche).</summary>
    </member>
    <member name="F:System.DayOfWeek.Thursday">
      <summary>Indique Thursday (jeudi).</summary>
    </member>
    <member name="F:System.DayOfWeek.Tuesday">
      <summary>Indique Tuesday (mardi).</summary>
    </member>
    <member name="F:System.DayOfWeek.Wednesday">
      <summary>Indique Wednesday (mercredi).</summary>
    </member>
    <member name="T:System.Decimal">
      <summary>Représente un nombre décimal.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.#ctor(System.Double)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Decimal" /> avec la valeur du nombre à virgule flottante double précision spécifié.</summary>
      <param name="value">Valeur à représenter en tant que <see cref="T:System.Decimal" />. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.-or- <paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Decimal" /> avec la valeur de l'entier 32 bits signé spécifié.</summary>
      <param name="value">Valeur à représenter en tant que <see cref="T:System.Decimal" />. </param>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Decimal" /> à partir de paramètres spécifiant les parties qui constituent l'instance.</summary>
      <param name="lo">32 bits de poids faible d'un entier 96 bits. </param>
      <param name="mid">32 bits de poids moyen d'un entier 96 bits. </param>
      <param name="hi">32 bits de poids fort d'un entier 96 bits. </param>
      <param name="isNegative">true pour indiquer un nombre négatif ; false pour indiquer un nombre positif. </param>
      <param name="scale">Puissance de 10 dont la valeur est comprise entre 0 et 28. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scale" /> is greater than 28. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32[])">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Decimal" /> avec une valeur décimale représentée au format binaire qui figure dans un tableau spécifié.</summary>
      <param name="bits">Tableau d'entiers signés 32 bits contenant la représentation d'une valeur décimale. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bits" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The length of the <paramref name="bits" /> is not 4.-or- The representation of the decimal value in <paramref name="bits" /> is not valid. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int64)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Decimal" /> avec la valeur de l'entier 64 bits signé spécifié.</summary>
      <param name="value">Valeur à représenter en tant que <see cref="T:System.Decimal" />. </param>
    </member>
    <member name="M:System.Decimal.#ctor(System.Single)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Decimal" /> avec la valeur du nombre à virgule flottante simple précision spécifié.</summary>
      <param name="value">Valeur à représenter en tant que <see cref="T:System.Decimal" />. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.-or- <paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.UInt32)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Decimal" /> avec la valeur de l'entier 32 bits non signé spécifié.</summary>
      <param name="value">Valeur à représenter en tant que <see cref="T:System.Decimal" />. </param>
    </member>
    <member name="M:System.Decimal.#ctor(System.UInt64)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Decimal" /> avec la valeur de l'entier 64 bits non signé spécifié.</summary>
      <param name="value">Valeur à représenter en tant que <see cref="T:System.Decimal" />. </param>
    </member>
    <member name="M:System.Decimal.Add(System.Decimal,System.Decimal)">
      <summary>Ajoute deux valeurs <see cref="T:System.Decimal" /> spécifiées.</summary>
      <returns>Somme de <paramref name="d1" /> et <paramref name="d2" />.</returns>
      <param name="d1">Première valeur à ajouter. </param>
      <param name="d2">Seconde valeur à ajouter. </param>
      <exception cref="T:System.OverflowException">The sum of <paramref name="d1" /> and <paramref name="d2" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Ceiling(System.Decimal)">
      <summary>Retourne la plus petite valeur intégrale supérieure ou égale au nombre décimal spécifié.</summary>
      <returns>Plus petite valeur intégrale qui est supérieure ou égale au paramètre <paramref name="d" />.Notez que cette méthode retourne un objet <see cref="T:System.Decimal" /> plutôt qu'un type intégral.</returns>
      <param name="d">Nombre décimal. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
      <summary>Compare deux valeurs <see cref="T:System.Decimal" /> spécifiées.</summary>
      <returns>Nombre signé indiquant les valeurs relatives de <paramref name="d1" /> et de <paramref name="d2" />.Return value Meaning Less than zero <paramref name="d1" /> is less than <paramref name="d2" />. Zero <paramref name="d1" /> and <paramref name="d2" /> are equal. Greater than zero <paramref name="d1" /> is greater than <paramref name="d2" />. </returns>
      <param name="d1">Première valeur à comparer. </param>
      <param name="d2">Deuxième valeur à comparer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.CompareTo(System.Decimal)">
      <summary>Compare cette instance à un objet <see cref="T:System.Decimal" /> spécifié et retourne une comparaison de leurs valeurs relatives.</summary>
      <returns>Nombre signé indiquant les valeurs relatives de cette instance et <paramref name="value" />.Return value Meaning Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Objet à comparer avec cette instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
      <summary>Divise deux valeurs <see cref="T:System.Decimal" /> spécifiées.</summary>
      <returns>Résultat de la division de <paramref name="d1" /> par <paramref name="d2" />.</returns>
      <param name="d1">Dividende. </param>
      <param name="d2">Diviseur. </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value (that is, the quotient) is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Equals(System.Decimal)">
      <summary>Retourne une valeur indiquant si cette instance et un objet <see cref="T:System.Decimal" /> spécifié représentent la même valeur.</summary>
      <returns>true si <paramref name="value" /> est égal à cette instance ; sinon, false.</returns>
      <param name="value">Objet à comparer à cette instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.Equals(System.Decimal,System.Decimal)">
      <summary>Retourne une valeur indiquant si deux instances spécifiées de <see cref="T:System.Decimal" /> représentent la même valeur.</summary>
      <returns>true si <paramref name="d1" /> est égal à <paramref name="d2" /> ; sinon, false.</returns>
      <param name="d1">Première valeur à comparer. </param>
      <param name="d2">Deuxième valeur à comparer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si cette instance et un <see cref="T:System.Object" /> spécifié représentent le même type et la même valeur.</summary>
      <returns>true si <paramref name="value" /> est <see cref="T:System.Decimal" /> et s'il est égal à cette instance ; sinon, false.</returns>
      <param name="value">Objet à comparer avec cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.Floor(System.Decimal)">
      <summary>Arrondit un nombre <see cref="T:System.Decimal" /> spécifié à l'entier le plus proche de moins l'infini.</summary>
      <returns>Si <paramref name="d" /> comporte une partie fractionnaire, le nombre <see cref="T:System.Decimal" /> entier suivant vers moins l'infini inférieur à <paramref name="d" />.ou Si <paramref name="d" /> ne contient pas de partie fractionnaire, <paramref name="d" /> est retourné tel quel.Notez que la méthode retourne une valeur intégrale de type <see cref="T:System.Decimal" />.</returns>
      <param name="d">Valeur à arrondir. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.GetBits(System.Decimal)">
      <summary>Convertit la valeur d'une instance de <see cref="T:System.Decimal" /> spécifiée en représentation binaire équivalente.</summary>
      <returns>Tableau d'entiers signés 32 bits avec quatre éléments qui contiennent la représentation binaire de <paramref name="d" />.</returns>
      <param name="d">Valeur à convertir. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Decimal.MaxValue">
      <summary>Représente la plus grande valeur possible de <see cref="T:System.Decimal" />.Ce champ est une constante et est en lecture seule.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.MinusOne">
      <summary>Représente le nombre 1 négatif (-1).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.MinValue">
      <summary>Représente la plus petite valeur possible de <see cref="T:System.Decimal" />.Ce champ est une constante et est en lecture seule.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
      <summary>Multiplie deux valeurs <see cref="T:System.Decimal" /> spécifiées.</summary>
      <returns>Résultat de la multiplication de <paramref name="d1" /> par <paramref name="d2" />.</returns>
      <param name="d1">Multiplicande. </param>
      <param name="d2">Multiplicateur. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Negate(System.Decimal)">
      <summary>Retourne le résultat de la multiplication de la valeur <see cref="T:System.Decimal" /> spécifiée par 1 négatif.</summary>
      <returns>Nombre décimal ayant la valeur de <paramref name="d" />, mais le signe inverse.ou Zéro, si <paramref name="d" /> est égal à zéro.</returns>
      <param name="d">Valeur à rendre négative. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.One">
      <summary>Représente le nombre un (1).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
      <summary>Ajoute deux valeurs <see cref="T:System.Decimal" /> spécifiées.</summary>
      <returns>Résultat de l'addition de <paramref name="d1" /> et de <paramref name="d2" />.</returns>
      <param name="d1">Première valeur à ajouter. </param>
      <param name="d2">Seconde valeur à ajouter. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Decrement(System.Decimal)">
      <summary>Décrémente l'opérande <see cref="T:System.Decimal" /> de 1.</summary>
      <returns>Valeur de <paramref name="d" /> décrémentée de 1.</returns>
      <param name="d">Valeur à décrémenter. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
      <summary>Divise deux valeurs <see cref="T:System.Decimal" /> spécifiées.</summary>
      <returns>Résultat de la division de <paramref name="d1" /> par <paramref name="d2" />.</returns>
      <param name="d1">Dividende. </param>
      <param name="d2">Diviseur. </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
      <summary>Retourne une valeur qui indique si deux valeurs <see cref="T:System.Decimal" /> sont égales.</summary>
      <returns>true si <paramref name="d1" /> est égal à <paramref name="d2" /> ; sinon, false.</returns>
      <param name="d1">Première valeur à comparer. </param>
      <param name="d2">Deuxième valeur à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
      <summary>Définit une conversion explicite de <see cref="T:System.Decimal" /> en entier signé 8 bits.</summary>
      <returns>Entier 8 bits signé représentant le <see cref="T:System.Decimal" /> converti.</returns>
      <param name="value">Valeur à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
      <summary>Définit une conversion explicite de <see cref="T:System.Decimal" /> en entier signé 64 bits.</summary>
      <returns>Entier 64 bits signé représentant l'objet <see cref="T:System.Decimal" /> converti.</returns>
      <param name="value">Valeur à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
      <summary>Définit une conversion explicite de <see cref="T:System.Decimal" /> en entier non signé 16 bits.</summary>
      <returns>Entier 16 bits non signé représentant l'objet <see cref="T:System.Decimal" /> converti.</returns>
      <param name="value">Valeur à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
      <summary>Définit une conversion explicite de <see cref="T:System.Decimal" /> en entier non signé 64 bits.</summary>
      <returns>Entier 64 bits non signé représentant l'objet <see cref="T:System.Decimal" /> converti.</returns>
      <param name="value">Valeur à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
      <summary>Définit une conversion explicite de <see cref="T:System.Decimal" /> en entier non signé 32 bits.</summary>
      <returns>Entier 32 bits non signé représentant l'objet <see cref="T:System.Decimal" /> converti.</returns>
      <param name="value">Valeur à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is negative or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
      <summary>Définit une conversion explicite de <see cref="T:System.Decimal" /> en entier signé 32 bits.</summary>
      <returns>Entier 32 bits signé représentant l'objet <see cref="T:System.Decimal" /> converti.</returns>
      <param name="value">Valeur à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
      <summary>Définit une conversion explicite de <see cref="T:System.Decimal" /> en caractère Unicode.</summary>
      <returns>Caractère Unicode qui représente le <see cref="T:System.Decimal" /> converti.</returns>
      <param name="value">Valeur à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
      <summary>Définit une conversion explicite de <see cref="T:System.Decimal" /> en entier non signé 8 bits.</summary>
      <returns>Entier 8 bits non signé représentant le <see cref="T:System.Decimal" /> converti.</returns>
      <param name="value">Valeur à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
      <summary>Définit une conversion explicite de <see cref="T:System.Decimal" /> en nombre à virgule flottante simple précision.</summary>
      <returns>Nombre à virgule flottante simple précision représentant le <see cref="T:System.Decimal" /> converti.</returns>
      <param name="value">Valeur à convertir. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
      <summary>Définit une conversion explicite de <see cref="T:System.Decimal" /> en entier signé 16 bits.</summary>
      <returns>Entier 16 bits signé représentant l'objet <see cref="T:System.Decimal" /> converti.</returns>
      <param name="value">Valeur à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
      <summary>Définit une conversion explicite de <see cref="T:System.Decimal" /> en nombre à virgule flottante double précision.</summary>
      <returns>Nombre à virgule flottante double précision représentant le <see cref="T:System.Decimal" /> converti.</returns>
      <param name="value">Valeur à convertir. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
      <summary>Définit une conversion explicite d'un nombre à virgule flottante double précision en <see cref="T:System.Decimal" />.</summary>
      <returns>Nombre à virgule flottante double précision converti.</returns>
      <param name="value">Nombre à virgule flottante double précision à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.-or- <paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
      <summary>Définit une conversion explicite d'un nombre à virgule flottante simple précision en <see cref="T:System.Decimal" />.</summary>
      <returns>Nombre à virgule flottante simple précision converti.</returns>
      <param name="value">Nombre à virgule flottante simple précision à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.-or- <paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
      <summary>Retourne une valeur indiquant si un <see cref="T:System.Decimal" /> spécifié est supérieur à un autre <see cref="T:System.Decimal" /> spécifié.</summary>
      <returns>true si <paramref name="d1" /> est supérieur à <paramref name="d2" /> ; sinon, false.</returns>
      <param name="d1">Première valeur à comparer. </param>
      <param name="d2">Deuxième valeur à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
      <summary>Retourne une valeur indiquant si un <see cref="T:System.Decimal" /> spécifié est supérieur ou égal à un autre <see cref="T:System.Decimal" /> spécifié.</summary>
      <returns>true si <paramref name="d1" /> est supérieur ou égal à <paramref name="d2" /> ; sinon, false.</returns>
      <param name="d1">Première valeur à comparer. </param>
      <param name="d2">Deuxième valeur à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
      <summary>Définit une conversion explicite d'un entier non signé 8 bits en <see cref="T:System.Decimal" />.</summary>
      <returns>Entier non signé 8 bits converti.</returns>
      <param name="value">Entier non signé 8 bits à convertir. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
      <summary>Définit une conversion explicite d'un caractère Unicode en <see cref="T:System.Decimal" />.</summary>
      <returns>Caractère Unicode converti.</returns>
      <param name="value">Caractère Unicode à convertir. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
      <summary>Définit une conversion explicite d'un entier signé 16 bits en <see cref="T:System.Decimal" />.</summary>
      <returns>Entier signé 16 bits converti.</returns>
      <param name="value">Entier signé 16 bits à convertir. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
      <summary>Définit une conversion explicite d'un entier signé 32 bits en <see cref="T:System.Decimal" />.</summary>
      <returns>Entier signé 32 bits converti.</returns>
      <param name="value">Entier signé 32 bits à convertir. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
      <summary>Définit une conversion explicite d'un entier signé 64 bits en <see cref="T:System.Decimal" />.</summary>
      <returns>Entier signé 64 bits converti.</returns>
      <param name="value">Entier signé 64 bits à convertir. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
      <summary>Définit une conversion explicite d'un entier signé 8 bits en <see cref="T:System.Decimal" />.</summary>
      <returns>Entier signé 8 bits converti.</returns>
      <param name="value">Entier signé 8 bits à convertir. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
      <summary>Définit une conversion explicite d'un entier non signé 16 bits en <see cref="T:System.Decimal" />.</summary>
      <returns>Entier non signé 16 bits converti.</returns>
      <param name="value">Entier non signé 16 bits à convertir. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
      <summary>Définit une conversion explicite d'un entier non signé 32 bits en <see cref="T:System.Decimal" />.</summary>
      <returns>Entier non signé 32 bits converti.</returns>
      <param name="value">Entier non signé 32 bits à convertir. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
      <summary>Définit une conversion explicite d'un entier non signé 64 bits en <see cref="T:System.Decimal" />.</summary>
      <returns>Entier non signé 64 bits converti.</returns>
      <param name="value">Entier non signé 64 bits à convertir. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Increment(System.Decimal)">
      <summary>Incrémente l'opérande <see cref="T:System.Decimal" /> de 1.</summary>
      <returns>Valeur de <paramref name="d" /> incrémentée de 1.</returns>
      <param name="d">Valeur à incrémenter. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
      <summary>Retourne une valeur qui indique si deux objets <see cref="T:System.Decimal" /> ont des valeurs différentes.</summary>
      <returns>true si <paramref name="d1" /> et <paramref name="d2" /> ne sont pas égaux ; sinon, false.</returns>
      <param name="d1">Première valeur à comparer. </param>
      <param name="d2">Deuxième valeur à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
      <summary>Retourne une valeur indiquant si un <see cref="T:System.Decimal" /> spécifié est inférieur à un autre <see cref="T:System.Decimal" /> spécifié.</summary>
      <returns>true si <paramref name="d1" /> est inférieur à <paramref name="d2" /> ; sinon, false.</returns>
      <param name="d1">Première valeur à comparer. </param>
      <param name="d2">Deuxième valeur à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
      <summary>Retourne une valeur indiquant si un <see cref="T:System.Decimal" /> spécifié est inférieur ou égal à un autre <see cref="T:System.Decimal" /> spécifié.</summary>
      <returns>true si <paramref name="d1" /> est inférieur ou égal à <paramref name="d2" /> ; sinon, false.</returns>
      <param name="d1">Première valeur à comparer. </param>
      <param name="d2">Deuxième valeur à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
      <summary>Retourne le reste de la division de deux valeurs <see cref="T:System.Decimal" /> spécifiées.</summary>
      <returns>Reste de la division de <paramref name="d1" /> par <paramref name="d2" />.</returns>
      <param name="d1">Dividende. </param>
      <param name="d2">Diviseur. </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
      <summary>Multiplie deux valeurs <see cref="T:System.Decimal" /> spécifiées.</summary>
      <returns>Résultat de la multiplication de <paramref name="d1" /> par <paramref name="d2" />.</returns>
      <param name="d1">Première valeur à multiplier. </param>
      <param name="d2">Seconde valeur à multiplier. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
      <summary>Soustrait deux valeurs <see cref="T:System.Decimal" /> spécifiées.</summary>
      <returns>Résultat de la soustraction de <paramref name="d2" /> de <paramref name="d1" />.</returns>
      <param name="d1">Diminuende. </param>
      <param name="d2">Diminuteur. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_UnaryNegation(System.Decimal)">
      <summary>Rend négative la valeur de l'opérande <see cref="T:System.Decimal" /> spécifié.</summary>
      <returns>Résultat de la multiplication de <paramref name="d" /> par 1 négatif (-1).</returns>
      <param name="d">Valeur à rendre négative. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_UnaryPlus(System.Decimal)">
      <summary>Retourne la valeur de l'opérande <see cref="T:System.Decimal" /> (le signe de l'opérande est le même).</summary>
      <returns>Valeur de l'opérande, <paramref name="d" />.</returns>
      <param name="d">Opérande à retourner.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre en sa représentation <see cref="T:System.Decimal" /> équivalente.</summary>
      <returns>Équivalent au nombre figurant dans <paramref name="s" />.</returns>
      <param name="s">Représentation sous forme de chaîne du nombre à convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Convertit la représentation d'un nombre sous forme de chaîne dans un style spécifié en son équivalent <see cref="T:System.Decimal" />.</summary>
      <returns>Nombre <see cref="T:System.Decimal" /> équivalent au nombre figurant dans <paramref name="s" />, comme spécifié par <paramref name="style" />.</returns>
      <param name="s">Représentation sous forme de chaîne du nombre à convertir. </param>
      <param name="style">Combinaison d'opérations de bits de valeurs <see cref="T:System.Globalization.NumberStyles" /> qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Number" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre en son <see cref="T:System.Decimal" /> équivalent à l'aide du style et du format spécifiques à la culture spécifiés.</summary>
      <returns>Nombre <see cref="T:System.Decimal" /> équivalent au nombre figurant dans <paramref name="s" />, comme spécifié par <paramref name="style" /> et <paramref name="provider" />.</returns>
      <param name="s">Représentation sous forme de chaîne du nombre à convertir. </param>
      <param name="style">Combinaison d'opérations de bits de valeurs <see cref="T:System.Globalization.NumberStyles" /> qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Number" />.</param>
      <param name="provider">Objet <see cref="T:System.IFormatProvider" /> qui fournit des informations spécifiques à la culture concernant le format de <paramref name="s" />. </param>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre en son <see cref="T:System.Decimal" /> équivalent à l'aide des informations de format propres à la culture spécifiée.</summary>
      <returns>Nombre <see cref="T:System.Decimal" /> équivalent au nombre figurant dans <paramref name="s" />, comme spécifié par <paramref name="provider" />.</returns>
      <param name="s">Représentation sous forme de chaîne du nombre à convertir. </param>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> qui fournit des informations d'analyse propres à la culture concernant <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
      <summary>Calcule le reste de la division de deux valeurs <see cref="T:System.Decimal" />.</summary>
      <returns>Reste de la division de <paramref name="d1" /> par <paramref name="d2" />.</returns>
      <param name="d1">Dividende. </param>
      <param name="d2">Diviseur. </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
      <summary>Soustrait une valeur <see cref="T:System.Decimal" /> spécifiée d'une autre.</summary>
      <returns>Résultat de la soustraction de <paramref name="d2" /> de <paramref name="d1" />.</returns>
      <param name="d1">Diminuende. </param>
      <param name="d2">Diminuteur. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</summary>
      <returns>Entier signé indiquant l'ordre relatif de cette instance et <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Objet à comparer à cette instance, ou null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Decimal" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</summary>
      <returns>true si la valeur de l'instance actuelle est différente de zéro ; sinon, false.</returns>
      <param name="provider">Ce paramètre est ignoré. </param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Byte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>AucunCette conversion n'est pas prise en charge.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>AucunCette conversion n'est pas prise en charge.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</summary>
      <returns>Valeur de l'instance actuelle, inchangée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Double" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int16" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int32" />.</returns>
      <param name="provider">Le paramètre est ignoré.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.SByte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Single" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</summary>
      <returns>Valeur de l'instance actuelle, convertie en <paramref name="type" />.</returns>
      <param name="type">Type vers lequel convertir la valeur de cette instance de <see cref="T:System.Decimal" />. </param>
      <param name="provider">Implémentation de <see cref="T:System.IFormatProvider" /> qui fournit des informations propres à la culture sur le format de la valeur retournée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null. </exception>
      <exception cref="T:System.InvalidCastException">The requested type conversion is not supported. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt16" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.ToByte(System.Decimal)">
      <summary>Convertit la valeur du <see cref="T:System.Decimal" /> spécifié en entier 8 bits non signé équivalent.</summary>
      <returns>Entier 8 bits non signé équivalant à <paramref name="value" />.</returns>
      <param name="value">Nombre décimal à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToDouble(System.Decimal)">
      <summary>Convertit la valeur du <see cref="T:System.Decimal" /> spécifié en nombre à virgule flottante double précision équivalent.</summary>
      <returns>Nombre à virgule flottante double précision équivalent à <paramref name="d" />.</returns>
      <param name="d">Nombre décimal à convertir. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToInt16(System.Decimal)">
      <summary>Convertit la valeur du <see cref="T:System.Decimal" /> spécifié en entier 16 bits signé équivalent.</summary>
      <returns>Entier 16 bits signé équivalant à <paramref name="value" />.</returns>
      <param name="value">Nombre décimal à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToInt32(System.Decimal)">
      <summary>Convertit la valeur du <see cref="T:System.Decimal" /> spécifié en entier 32 bits signé équivalent.</summary>
      <returns>Entier 32 bits non signé équivalant à la valeur de <paramref name="d" />.</returns>
      <param name="d">Nombre décimal à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToInt64(System.Decimal)">
      <summary>Convertit la valeur du <see cref="T:System.Decimal" /> spécifié en entier 64 bits signé équivalent.</summary>
      <returns>Entier 64 bits non signé équivalant à la valeur de <paramref name="d" />.</returns>
      <param name="d">Nombre décimal à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToSByte(System.Decimal)">
      <summary>Convertit la valeur du <see cref="T:System.Decimal" /> spécifié en entier 8 bits signé équivalent.</summary>
      <returns>Entier 8 bits signé équivalant à <paramref name="value" />.</returns>
      <param name="value">Nombre décimal à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToSingle(System.Decimal)">
      <summary>Convertit la valeur du <see cref="T:System.Decimal" /> spécifié en nombre à virgule flottante simple précision équivalent.</summary>
      <returns>Nombre à virgule flottante simple précision équivalant à la valeur de <paramref name="d" />.</returns>
      <param name="d">Nombre décimal à convertir. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString">
      <summary>Convertit la valeur numérique de cette instance en sa représentation équivalente sous forme de chaîne.</summary>
      <returns>Une chaîne qui représente la valeur de cette instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString(System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide des informations de format spécifiques à la culture donnée.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="provider" />.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString(System.String)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente en utilisant le format spécifié.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="format" />.</returns>
      <param name="format">Chaîne de format numérique standard ou personnalisée (consultez la section Notes).</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide du format spécifié et des informations de format spécifiques à la culture.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, telle que spécifiée par <paramref name="format" /> et <paramref name="provider" />.</returns>
      <param name="format">Chaîne de format numérique (consultez Remarques).</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToUInt16(System.Decimal)">
      <summary>Convertit la valeur du <see cref="T:System.Decimal" /> spécifié en entier 16 bits non signé équivalent.</summary>
      <returns>Entier 16 bits signé équivalant à la valeur de <paramref name="value" />.</returns>
      <param name="value">Nombre décimal à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToUInt32(System.Decimal)">
      <summary>Convertit la valeur du <see cref="T:System.Decimal" /> spécifié en entier 32 bits non signé équivalent.</summary>
      <returns>Entier 32 bits signé équivalant à la valeur de <paramref name="d" />.</returns>
      <param name="d">Nombre décimal à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is negative or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToUInt64(System.Decimal)">
      <summary>Convertit la valeur du <see cref="T:System.Decimal" /> spécifié en entier 64 bits non signé équivalent.</summary>
      <returns>Entier 64 bits signé équivalant à la valeur de <paramref name="d" />.</returns>
      <param name="d">Nombre décimal à convertir. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Truncate(System.Decimal)">
      <summary>Retourne les chiffres intégraux du <see cref="T:System.Decimal" /> spécifié ; tous les chiffres fractionnaires sont ignorés.</summary>
      <returns>Résultat obtenu lorsque <paramref name="d" /> est arrondi au nombre entier le plus proche de zéro.</returns>
      <param name="d">Nombre décimal à tronquer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.TryParse(System.String,System.Decimal@)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre en sa représentation <see cref="T:System.Decimal" /> équivalente.Une valeur de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Représentation sous forme de chaîne du nombre à convertir.</param>
      <param name="result">Lorsque cette méthode retourne une valeur, contient le nombre <see cref="T:System.Decimal" /> qui équivaut à la valeur numérique figurant dans <paramref name="s" /> si la conversion a réussi ou à zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, n'est pas un nombre dans un format valide ou représente un nombre inférieur à <see cref="F:System.Decimal.MinValue" /> ou supérieur à <see cref="F:System.Decimal.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre en son <see cref="T:System.Decimal" /> équivalent à l'aide du style et du format spécifiques à la culture spécifiés.Une valeur de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Représentation sous forme de chaîne du nombre à convertir.</param>
      <param name="style">Combinaison d'opérations de bits de valeurs d'énumération qui indique le format autorisé du paramètre <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Number" />.</param>
      <param name="provider">Objet qui fournit des informations d'analyse spécifiques à la culture concernant <paramref name="s" />. </param>
      <param name="result">Lorsque cette méthode retourne une valeur, contient le nombre <see cref="T:System.Decimal" /> qui équivaut à la valeur numérique figurant dans <paramref name="s" /> si la conversion a réussi ou à zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, qu'il n'est pas dans un format conforme à <paramref name="style" /> ou qu'il représente un nombre inférieur à <see cref="F:System.Decimal.MinValue" /> ou supérieur à <see cref="F:System.Decimal.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.Zero">
      <summary>Représente le nombre zéro (0).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Delegate">
      <summary>Représente un délégué, qui est une structure de données faisant référence à une méthode statique ou une instance de classe et à une méthode d'instance de cette classe.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.Combine(System.Delegate,System.Delegate)">
      <summary>Concatène les listes d'appel de deux délégués.</summary>
      <returns>Nouveau délégué avec une liste d'appel qui concatène les listes d'appel de <paramref name="a" /> et de <paramref name="b" />, dans cet ordre.Retourne <paramref name="a" /> si <paramref name="b" /> est null, retourne <paramref name="b" /> si <paramref name="a" /> est une référence null, et retourne une référence null si <paramref name="a" /> et <paramref name="b" /> sont des références null.</returns>
      <param name="a">Délégué dont la liste d'appel est la première. </param>
      <param name="b">Délégué dont la liste d'appel est la dernière. </param>
      <exception cref="T:System.ArgumentException">Both <paramref name="a" /> and <paramref name="b" /> are not null, and <paramref name="a" /> and <paramref name="b" /> are not instances of the same delegate type. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.Combine(System.Delegate[])">
      <summary>Concatène les listes d'appel d'un tableau de délégués.</summary>
      <returns>Nouveau délégué avec une liste d'appel qui concatène les listes d'appel des délégués figurant dans le tableau <paramref name="delegates" />.Retourne null si <paramref name="delegates" /> est null, si <paramref name="delegates" /> contient zéro élément ou si chaque entrée de <paramref name="delegates" /> est null.</returns>
      <param name="delegates">Tableau de délégués à combiner. </param>
      <exception cref="T:System.ArgumentException">Not all the non-null entries in <paramref name="delegates" /> are instances of the same delegate type. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.DynamicInvoke(System.Object[])">
      <summary>Appelle de manière dynamique (avec liaison tardive) la méthode représentée par le délégué actuel.</summary>
      <returns>Objet retourné par la méthode représentée par le délégué.</returns>
      <param name="args">Tableau d'objets correspondants aux arguments à passer à la méthode représentée par le délégué actuel.ou null, si la méthode représentée par le délégué actuel ne requiert pas d'argument. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private).-or- The number, order, or type of parameters listed in <paramref name="args" /> is invalid. </exception>
      <exception cref="T:System.ArgumentException">The method represented by the delegate is invoked on an object or a class that does not support it. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The method represented by the delegate is an instance method and the target object is null.-or- One of the encapsulated methods throws an exception. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.Equals(System.Object)">
      <summary>Détermine si l'objet spécifié et le délégué actuel sont du même type et partagent les mêmes cibles, méthodes et liste d'appel.</summary>
      <returns>true si <paramref name="obj" /> et le délégué actuel ont les mêmes cibles, méthodes et liste d'appel, sinon, false.</returns>
      <param name="obj">Objet à comparer avec le délégué actuel. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private). </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.GetHashCode">
      <summary>Retourne un code de hachage pour le délégué.</summary>
      <returns>Code de hachage du délégué.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.GetInvocationList">
      <summary>Retourne la liste d'appel du délégué.</summary>
      <returns>Tableau de délégués représentant la liste d'appel du délégué actuel.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.op_Equality(System.Delegate,System.Delegate)">
      <summary>Détermine si les délégués spécifiés sont égaux.</summary>
      <returns>true si <paramref name="d1" /> est égal à <paramref name="d2" /> ; sinon false.</returns>
      <param name="d1">Premier délégué à comparer. </param>
      <param name="d2">Second délégué à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Delegate.op_Inequality(System.Delegate,System.Delegate)">
      <summary>Détermine si les délégués spécifiés ne sont pas égaux.</summary>
      <returns>true si <paramref name="d1" /> n'est pas égal à <paramref name="d2" /> ; sinon, false.</returns>
      <param name="d1">Premier délégué à comparer. </param>
      <param name="d2">Second délégué à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Delegate.Remove(System.Delegate,System.Delegate)">
      <summary>Supprime la dernière occurrence de la liste d'appel d'un délégué dans la liste d'appel d'un autre délégué.</summary>
      <returns>Nouveau délégué avec une liste d'appel générée à partir de la liste d'appel de <paramref name="source" /> en supprimant la dernière occurrence de la liste d'appel de <paramref name="value" />, si la liste d'appel de <paramref name="value" /> figure dans la liste d'appel de <paramref name="source" />.Retourne <paramref name="source" />, si <paramref name="value" /> est null, ou si la liste d'appel de <paramref name="value" /> ne figure pas dans la liste d'appel de <paramref name="source" />.Retourne une référence null si la liste d'appel de <paramref name="value" /> est égale à la liste d'appel de <paramref name="source" /> ou si <paramref name="source" /> est une référence null.</returns>
      <param name="source">Délégué dans lequel supprimer la liste d'appel de <paramref name="value" />. </param>
      <param name="value">Délégué qui fournit la liste d'appel à supprimer de la liste d'appel de <paramref name="source" />. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private). </exception>
      <exception cref="T:System.ArgumentException">The delegate types do not match.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.RemoveAll(System.Delegate,System.Delegate)">
      <summary>Supprime toutes les occurrences de la liste d'appel d'un délégué dans la liste d'appel d'un autre délégué.</summary>
      <returns>Nouveau délégué avec une liste d'appel générée à partir de la liste d'appel de <paramref name="source" /> en supprimant toutes les occurrences de la liste d'appel de <paramref name="value" />, si la liste d'appel de <paramref name="value" /> figure dans la liste d'appel de <paramref name="source" />.Retourne <paramref name="source" />, si <paramref name="value" /> est null, ou si la liste d'appel de <paramref name="value" /> ne figure pas dans la liste d'appel de <paramref name="source" />.Retourne une référence null si la liste d'appel de <paramref name="value" /> est égale à la liste d'appel de <paramref name="source" />, si <paramref name="source" /> contient uniquement une série de listes d'appel égales à la liste d'appel de <paramref name="value" />, ou si <paramref name="source" /> est une référence null.</returns>
      <param name="source">Délégué dans lequel supprimer la liste d'appel de <paramref name="value" />. </param>
      <param name="value">Délégué qui fournit la liste d'appel à supprimer de la liste d'appel de <paramref name="source" />. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private). </exception>
      <exception cref="T:System.ArgumentException">The delegate types do not match.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Delegate.Target">
      <summary>Obtient l'instance de classe sur laquelle le délégué actuel appelle la méthode d'instance.</summary>
      <returns>Objet sur lequel le délégué actuel appelle la méthode d'instance, si le délégué représente une méthode d'instance, null si le délégué représente une méthode statique.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.DivideByZeroException">
      <summary>Exception levée lors d'une tentative de division d'une valeur intégrale ou décimale par zéro.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DivideByZeroException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.DivideByZeroException" />.</summary>
    </member>
    <member name="M:System.DivideByZeroException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.DivideByZeroException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'erreur. </param>
    </member>
    <member name="M:System.DivideByZeroException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.DivideByZeroException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="innerException">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Double">
      <summary>Représente un nombre à virgule flottante double précision.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.CompareTo(System.Double)">
      <summary>Compare cette instance à un nombre à virgule flottante double précision spécifié et retourne un entier qui indique si la valeur de cette instance est inférieure, égale ou supérieure à celle du nombre à virgule flottante double précision spécifié.</summary>
      <returns>Nombre signé indiquant les valeurs relatives de cette instance et <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />.-or- This instance is not a number (<see cref="F:System.Double.NaN" />) and <paramref name="value" /> is a number. Zero This instance is equal to <paramref name="value" />.-or- Both this instance and <paramref name="value" /> are not a number (<see cref="F:System.Double.NaN" />), <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />. Greater than zero This instance is greater than <paramref name="value" />.-or- This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Double.NaN" />). </returns>
      <param name="value">Nombre à virgule flottante double précision à comparer. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Double.Epsilon">
      <summary>Représente la valeur <see cref="T:System.Double" /> positive la plus petite qui est supérieure à zéro.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Equals(System.Double)">
      <summary>Retourne une valeur indiquant si cette instance et un objet <see cref="T:System.Double" /> spécifié représentent la même valeur.</summary>
      <returns>true si <paramref name="obj" /> est égal à cette instance ; sinon, false.</returns>
      <param name="obj">Objet <see cref="T:System.Double" /> à comparer à cette instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si cette instance équivaut à un objet spécifié.</summary>
      <returns>true si <paramref name="obj" /> est une instance de <see cref="T:System.Double" /> et est égal à la valeur de cette instance ; sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.IsInfinity(System.Double)">
      <summary>Retourne une valeur indiquant si le nombre spécifié a pour valeur l'infini négatif ou positif. </summary>
      <returns>true si <paramref name="d" /> a la valeur <see cref="F:System.Double.PositiveInfinity" /> ou <see cref="F:System.Double.NegativeInfinity" /> ; sinon, false.</returns>
      <param name="d">Nombre à virgule flottante double précision. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.IsNaN(System.Double)">
      <summary>Retourne une valeur qui indique si la valeur spécifiée n'est pas un nombre (<see cref="F:System.Double.NaN" />).</summary>
      <returns>true si <paramref name="d" /> a la valeur <see cref="F:System.Double.NaN" /> ; sinon, false.</returns>
      <param name="d">Nombre à virgule flottante double précision. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.IsNegativeInfinity(System.Double)">
      <summary>Retourne une valeur indiquant si le nombre spécifié est équivalent à l'infini négatif.</summary>
      <returns>true si <paramref name="d" /> a la valeur <see cref="F:System.Double.NegativeInfinity" /> ; sinon, false.</returns>
      <param name="d">Nombre à virgule flottante double précision. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.IsPositiveInfinity(System.Double)">
      <summary>Retourne une valeur indiquant si le nombre spécifié est équivalent à l'infini positif.</summary>
      <returns>true si <paramref name="d" /> a la valeur <see cref="F:System.Double.PositiveInfinity" /> ; sinon, false.</returns>
      <param name="d">Nombre à virgule flottante double précision. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.MaxValue">
      <summary>Représente la plus grande valeur possible de <see cref="T:System.Double" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.MinValue">
      <summary>Représente la plus petite valeur possible de <see cref="T:System.Double" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.NaN">
      <summary>Représente une valeur qui n'est pas un nombre (NaN).Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.NegativeInfinity">
      <summary>Représente l'infini négatif.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.op_Equality(System.Double,System.Double)">
      <summary>Retourne une valeur qui indique si deux valeurs <see cref="T:System.Double" /> spécifiées sont égales.</summary>
      <returns>true si <paramref name="left" /> est égal à <paramref name="right" /> ; sinon, false.</returns>
      <param name="left">Première valeur à comparer. </param>
      <param name="right">Deuxième valeur à comparer.</param>
    </member>
    <member name="M:System.Double.op_GreaterThan(System.Double,System.Double)">
      <summary>Retourne une valeur qui indique si une valeur <see cref="T:System.Double" /> spécifique est supérieure à une autre valeur <see cref="T:System.Double" /> spécifique.</summary>
      <returns>true si <paramref name="left" /> est supérieur à <paramref name="right" /> ; sinon, false.</returns>
      <param name="left">Première valeur à comparer.</param>
      <param name="right">Deuxième valeur à comparer.</param>
    </member>
    <member name="M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double)">
      <summary>Retourne une valeur qui indique si une valeur <see cref="T:System.Double" /> spécifique est supérieure ou égale à une autre valeur <see cref="T:System.Double" /> spécifique.</summary>
      <returns>true si <paramref name="left" /> est supérieur ou égal à <paramref name="right" /> ; sinon, false.</returns>
      <param name="left">Première valeur à comparer.</param>
      <param name="right">Deuxième valeur à comparer.</param>
    </member>
    <member name="M:System.Double.op_Inequality(System.Double,System.Double)">
      <summary>Retourne une valeur qui indique si deux valeurs <see cref="T:System.Double" /> spécifiées sont différentes.</summary>
      <returns>true si <paramref name="left" /> et <paramref name="right" /> ne sont pas égaux ; sinon, false.</returns>
      <param name="left">Première valeur à comparer.</param>
      <param name="right">Deuxième valeur à comparer.</param>
    </member>
    <member name="M:System.Double.op_LessThan(System.Double,System.Double)">
      <summary>Retourne une valeur qui indique si une valeur <see cref="T:System.Double" /> spécifique est inférieure à une autre valeur <see cref="T:System.Double" /> spécifique.</summary>
      <returns>true si <paramref name="left" /> est inférieur à <paramref name="right" /> ; sinon, false.</returns>
      <param name="left">Première valeur à comparer.</param>
      <param name="right">Deuxième valeur à comparer.</param>
    </member>
    <member name="M:System.Double.op_LessThanOrEqual(System.Double,System.Double)">
      <summary>Retourne une valeur qui indique si une valeur <see cref="T:System.Double" /> spécifique est inférieure ou égale à une autre valeur <see cref="T:System.Double" /> spécifique.</summary>
      <returns>true si <paramref name="left" /> est inférieur ou égal à <paramref name="right" /> ; sinon, false.</returns>
      <param name="left">Première valeur à comparer.</param>
      <param name="right">Deuxième valeur à comparer.</param>
    </member>
    <member name="M:System.Double.Parse(System.String)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre en nombre à virgule flottante double précision équivalent.</summary>
      <returns>Nombre à virgule flottante double précision équivalant à la valeur numérique ou au symbole spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un style spécifié en nombre à virgule flottante double précision équivalent.</summary>
      <returns>Nombre à virgule flottante double précision équivalant à la valeur numérique ou au symbole spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="style">Combinaison d'opérations de bit des valeurs d'énumération qui indiquent les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est une combinaison de <see cref="F:System.Globalization.NumberStyles.Float" /> combinée avec <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un style et un format propre à la culture spécifiés en nombre à virgule flottante double précision équivalent.</summary>
      <returns>Nombre à virgule flottante double précision équivalant à la valeur numérique ou au symbole spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="style">Combinaison d'opérations de bit des valeurs d'énumération qui indiquent les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Float" /> combinée avec <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a numeric value. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Parse(System.String,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un format propre à la culture spécifié en nombre à virgule flottante double précision équivalent.</summary>
      <returns>Nombre à virgule flottante double précision équivalant à la valeur numérique ou au symbole spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.PositiveInfinity">
      <summary>Représente l'infini positif.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</summary>
      <returns>Entier signé indiquant l'ordre relatif de cette instance et <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Objet à comparer à cette instance ou null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Double" />. </exception>
    </member>
    <member name="M:System.Double.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true si la valeur de l'instance actuelle est différente de zéro ; sinon, false.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Byte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Cette conversion n'est pas prise en charge.Aucune valeur n'est retournée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Cette conversion n'est pas prise en charge.Aucune valeur n'est retournée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, inchangée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int16" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.SByte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Single" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <paramref name="type" />.</returns>
      <param name="type">Type dans lequel convertir cette valeur <see cref="T:System.Double" />.</param>
      <param name="provider">Implémentation de <see cref="T:System.IFormatProvider" /> qui fournit des informations propres à la culture sur le format de la valeur retournée.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt16" />.</returns>
      <param name="provider">Ce paramètre est ignoré. </param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.   </param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Double.ToString">
      <summary>Convertit la valeur numérique de cette instance en sa représentation équivalente sous forme de chaîne.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.ToString(System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide des informations de format spécifiques à la culture donnée.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="provider" />.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.ToString(System.String)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente en utilisant le format spécifié.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="format" />.</returns>
      <param name="format">Chaîne de format numérique.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.ToString(System.String,System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide du format spécifié et des informations de format spécifiques à la culture.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, telle que spécifiée par <paramref name="format" /> et <paramref name="provider" />.</returns>
      <param name="format">Chaîne de format numérique.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.TryParse(System.String,System.Double@)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre en nombre à virgule flottante double précision équivalent.Une valeur de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="result">Quand cette méthode est retournée, contient le nombre à virgule flottante double précision équivalent au paramètre <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, n'est pas un nombre dans un format valide ou représente un nombre inférieur à <see cref="F:System.Double.MinValue" /> ou supérieur à <see cref="F:System.Double.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un style et un format propre à la culture spécifiés en nombre à virgule flottante double précision équivalent.Une valeur de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="style">Combinaison d'opérations de bits de valeurs <see cref="T:System.Globalization.NumberStyles" /> indiquant le format autorisé de <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Float" /> combinée avec <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> qui fournit des informations de format propres à la culture concernant <paramref name="s" />. </param>
      <param name="result">Quand cette méthode est retournée, contient un nombre à virgule flottante double précision équivalent à la valeur numérique ou au symbole contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, n'est pas dans un format conforme à <paramref name="style" />, représente un nombre inférieur à <see cref="F:System.SByte.MinValue" /> ou supérieur à <see cref="F:System.SByte.MaxValue" />, ou encore si <paramref name="style" /> n'est pas une combinaison valide de constantes énumérées <see cref="T:System.Globalization.NumberStyles" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Enum">
      <summary>Fournit la classe de base pour les énumérations.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Enum" />. </summary>
    </member>
    <member name="M:System.Enum.CompareTo(System.Object)">
      <summary>Compare cette instance à un objet spécifié et retourne une indication sur leurs valeurs relatives.</summary>
      <returns>Nombre signé qui indique les valeurs relatives de cette instance et de <paramref name="target" />.Valeur Signification Inférieure à zéro La valeur de cette instance est inférieure à celle de <paramref name="target" />. Zéro La valeur de cette instance est égale à celle de <paramref name="target" />. Supérieure à zéro La valeur de cette instance est supérieure à celle de <paramref name="target" />.ou <paramref name="target" /> a la valeur null. </returns>
      <param name="target">Objet à comparer ou null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> and this instance are not the same type. </exception>
      <exception cref="T:System.InvalidOperationException">This instance is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si cette instance est égale à un objet spécifié.</summary>
      <returns>true si <paramref name="obj" /> est une valeur d'énumération du même type et avec la même valeur sous-jacente que cette instance. Sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance, ou null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.Format(System.Type,System.Object,System.String)">
      <summary>Convertit la valeur spécifiée d'un type énuméré spécifié en sa représentation sous forme de chaîne équivalente conformément au format spécifié.</summary>
      <returns>Représentation sous forme de chaîne de <paramref name="value" />.</returns>
      <param name="enumType">Type énumération de la valeur à convertir. </param>
      <param name="value">Valeur à convertir. </param>
      <param name="format">Format de sortie à utiliser. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="enumType" />, <paramref name="value" />, or <paramref name="format" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" /> type.-or- The <paramref name="value" /> is from an enumeration that differs in type from <paramref name="enumType" />.-or- The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />. </exception>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter contains an invalid value. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="format" /> equals "X", but the enumeration type is unknown.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetHashCode">
      <summary>Retourne le code de hachage de la valeur de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.GetName(System.Type,System.Object)">
      <summary>Récupère le nom de la constante dans l'énumération spécifiée associée à la valeur spécifiée.</summary>
      <returns>Chaîne contenant le nom de la constante énumérée dans <paramref name="enumType" /> dont la valeur est <paramref name="value" />, ou null si cette constante est introuvable.</returns>
      <param name="enumType">Type énumération. </param>
      <param name="value">Valeur d'une constante énumérée qui a un type sous-jacent particulier. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is neither of type <paramref name="enumType" /> nor does it have the same underlying type as <paramref name="enumType" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetNames(System.Type)">
      <summary>Récupère un tableau de noms des constantes dans une énumération spécifiée.</summary>
      <returns>Tableau de chaînes contenant les noms des constantes dans <paramref name="enumType" />. </returns>
      <param name="enumType">Type énumération. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetUnderlyingType(System.Type)">
      <summary>Retourne le type sous-jacent de l'énumération spécifiée.</summary>
      <returns>Type sous-jacent de <paramref name="enumType" />.</returns>
      <param name="enumType">Énumération dont le type sous-jacent sera récupéré.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetValues(System.Type)">
      <summary>Récupère un tableau des valeurs des constantes dans une énumération spécifiée.</summary>
      <returns>Tableau qui contient les valeurs des constantes dans <paramref name="enumType" />. </returns>
      <param name="enumType">Type énumération. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />. </exception>
      <exception cref="T:System.InvalidOperationException">The method is invoked by reflection in a reflection-only context, -or-<paramref name="enumType" /> is a type from an assembly loaded in a reflection-only context.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.HasFlag(System.Enum)">
      <summary>Détermine si un ou plusieurs champs de bits sont définis dans l'instance actuelle.</summary>
      <returns>true si le ou les champs de bits définis dans <paramref name="flag" /> sont également définis dans l'instance actuelle, sinon, false.</returns>
      <param name="flag">Valeur d'énumération.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> is a different type than the current instance.</exception>
    </member>
    <member name="M:System.Enum.IsDefined(System.Type,System.Object)">
      <summary>Retourne une indication spécifiant si une constante avec une valeur spécifiée existe dans une énumération spécifiée.</summary>
      <returns>true si une constante de <paramref name="enumType" /> a une valeur égale à <paramref name="value" />, sinon, false.</returns>
      <param name="enumType">Type énumération. </param>
      <param name="value">Valeur ou nom d'une constante dans <paramref name="enumType" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an Enum.-or- The type of <paramref name="value" /> is an enumeration, but it is not an enumeration of type <paramref name="enumType" />.-or- The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />, or <see cref="T:System.String" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.Parse(System.Type,System.String)">
      <summary>Convertit la représentation sous forme de chaîne du nom ou de la valeur numérique d'une ou de plusieurs constantes énumérées en objet énuméré équivalent.</summary>
      <returns>Objet de type <paramref name="enumType" /> dont la valeur est représentée par <paramref name="value" />.</returns>
      <param name="enumType">Type énumération. </param>
      <param name="value">Chaîne contenant le nom ou la valeur à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is either an empty string or only contains white space.-or- <paramref name="value" /> is a name, but not one of the named constants defined for the enumeration. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
      <summary>Convertit la représentation sous forme de chaîne du nom ou de la valeur numérique d'une ou de plusieurs constantes énumérées en objet énuméré équivalent.Un paramètre spécifie si l'opération ne respecte pas la casse.</summary>
      <returns>Objet de type <paramref name="enumType" /> dont la valeur est représentée par <paramref name="value" />.</returns>
      <param name="enumType">Type énumération. </param>
      <param name="value">Chaîne contenant le nom ou la valeur à convertir. </param>
      <param name="ignoreCase">true pour ignorer la casse, sinon, false. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is either an empty string ("") or only contains white space.-or- <paramref name="value" /> is a name, but not one of the named constants defined for the enumeration. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Convertit la valeur actuelle en valeur booléenne basée sur le type sous-jacent.</summary>
      <returns>Ce membre lève toujours une exception.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Convertit la valeur actuelle en entier non signé 8 bits en fonction du type sous-jacent.</summary>
      <returns>Valeur convertie.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Convertit la valeur actuelle en caractère Unicode en fonction du type sous-jacent.</summary>
      <returns>Ce membre lève toujours une exception.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Convertit la valeur actuelle en <see cref="T:System.DateTime" /> basé sur le type sous-jacent.</summary>
      <returns>Ce membre lève toujours une exception.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Convertit la valeur actuelle en <see cref="T:System.Decimal" /> basé sur le type sous-jacent.</summary>
      <returns>Ce membre lève toujours une exception.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Convertit la valeur actuelle en nombre à virgule flottante double précision en fonction du type sous-jacent.</summary>
      <returns>Ce membre lève toujours une exception.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Convertit la valeur actuelle en entier signé 16 bits en fonction du type sous-jacent.</summary>
      <returns>Valeur convertie.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Convertit la valeur actuelle en entier signé 32 bits en fonction du type sous-jacent.</summary>
      <returns>Valeur convertie.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Convertit la valeur actuelle en entier signé 64 bits en fonction du type sous-jacent.</summary>
      <returns>Valeur convertie.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Convertit la valeur actuelle en entier signé 8 bits en fonction du type sous-jacent.</summary>
      <returns>Valeur convertie.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Convertit la valeur actuelle en nombre à virgule flottante simple précision en fonction du type sous-jacent.</summary>
      <returns>Ce membre lève toujours une exception.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToString(System.IFormatProvider)">
      <summary>Convertit la valeur actuelle en chaîne en fonction du type sous-jacent.</summary>
      <returns>Valeur convertie.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Convertit la valeur actuelle en type spécifié en fonction du type sous-jacent.</summary>
      <returns>Valeur convertie.</returns>
      <param name="type">Type dans lequel convertir. </param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Convertit la valeur actuelle en entier non signé 16 bits en fonction du type sous-jacent.</summary>
      <returns>Valeur convertie.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Convertit la valeur actuelle en entier non signé 32 bits en fonction du type sous-jacent.</summary>
      <returns>Valeur convertie.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Convertit la valeur actuelle en entier non signé 64 bits en fonction du type sous-jacent.</summary>
      <returns>Valeur convertie.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
    </member>
    <member name="M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Cette surcharge de méthode est obsolète ; utilisez <see cref="M:System.Enum.ToString(System.String)" />.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="format" />.</returns>
      <param name="format">Spécification de format.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> does not contain a valid format specification. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="format" /> equals "X", but the enumeration type is unknown.</exception>
    </member>
    <member name="M:System.Enum.ToObject(System.Type,System.Object)">
      <summary>Convertit l'objet spécifié avec une valeur entière en membre de l'énumération.</summary>
      <returns>Objet d'énumération dont la valeur est <paramref name="value" />.</returns>
      <param name="enumType">Type énumération à retourner. </param>
      <param name="value">Valeur à convertir en membre de l'énumération. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.ToString">
      <summary>Convertit la valeur de cette instance en sa représentation sous forme de chaîne équivalente.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.ToString(System.String)">
      <summary>Convertit la valeur de cette instance en sa représentation sous forme de chaîne équivalente à l'aide du format spécifié.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, telle que spécifiée par <paramref name="format" />.</returns>
      <param name="format">Chaîne de format. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> contains an invalid specification. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="format" /> equals "X", but the enumeration type is unknown.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
      <summary>Convertit la représentation sous forme de chaîne du nom ou de la valeur numérique d'une ou de plusieurs constantes énumérées en objet énuméré équivalent.Un paramètre spécifie si l'opération respecte la casse.La valeur de retour indique si la conversion a réussi.</summary>
      <returns>true si la conversion du paramètre <paramref name="value" /> a réussi ; sinon, false.</returns>
      <param name="value">Représentation sous forme de chaîne du nom de l'énumération ou de la valeur sous-jacente à convertir.</param>
      <param name="ignoreCase">true pour ignorer la casse, sinon, false.</param>
      <param name="result">Quand cette méthode est retournée, <paramref name="result" /> contient un objet du type <paramref name="TEnum" /> dont la valeur est représentée par <paramref name="value" /> si l'opération d'analyse s'effectue correctement.Si l'opération d'analyse échoue, <paramref name="result" /> contient la valeur par défaut du type sous-jacent de <paramref name="TEnum" />.Notez que cette valeur n'a pas besoin d'être membre de l'énumération <paramref name="TEnum" />.Ce paramètre est passé sans être initialisé.</param>
      <typeparam name="TEnum">Type énumération vers lequel convertir <paramref name="value" />.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="TEnum" /> is not an enumeration type.</exception>
    </member>
    <member name="M:System.Enum.TryParse``1(System.String,``0@)">
      <summary>Convertit la représentation sous forme de chaîne du nom ou de la valeur numérique d'une ou de plusieurs constantes énumérées en objet énuméré équivalent.La valeur de retour indique si la conversion a réussi.</summary>
      <returns>true si la conversion du paramètre <paramref name="value" /> a réussi ; sinon, false.</returns>
      <param name="value">Représentation sous forme de chaîne du nom de l'énumération ou de la valeur sous-jacente à convertir.</param>
      <param name="result">Quand cette méthode est retournée, <paramref name="result" /> contient un objet du type <paramref name="TEnum" /> dont la valeur est représentée par <paramref name="value" /> si l'opération d'analyse s'effectue correctement.Si l'opération d'analyse échoue, <paramref name="result" /> contient la valeur par défaut du type sous-jacent de <paramref name="TEnum" />.Notez que cette valeur n'a pas besoin d'être membre de l'énumération <paramref name="TEnum" />.Ce paramètre est passé sans être initialisé.</param>
      <typeparam name="TEnum">Type énumération vers lequel convertir <paramref name="value" />.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="TEnum" /> is not an enumeration type.</exception>
    </member>
    <member name="T:System.EventArgs">
      <summary>Représente la classe de base pour les classes qui contiennent des données d'événement, et fournit une valeur à utiliser pour les événements qui n'incluent pas de données d'événement. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.EventArgs.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.EventArgs" />.</summary>
    </member>
    <member name="F:System.EventArgs.Empty">
      <summary>Fournit une valeur à utiliser avec les événements qui n'ont pas de données d'événement.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.EventHandler">
      <summary>Représente la méthode qui gérera un événement qui n'a aucune donnée d'événement.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.EventHandler.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.EventHandler.BeginInvoke(System.Object,System.EventArgs,System.AsyncCallback,System.Object)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.EventHandler.EndInvoke(System.IAsyncResult)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.EventHandler.Invoke(System.Object,System.EventArgs)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.EventHandler`1">
      <summary>Représente la méthode qui gérera un événement lorsque l'événement fournit des données. </summary>
      <typeparam name="TEventArgs">Type des données d'événement générées par l'événement.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.EventHandler`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.EventHandler`1.BeginInvoke(System.Object,`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.EventHandler`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.EventHandler`1.Invoke(System.Object,`0)"></member>
    <member name="T:System.Exception">
      <summary>Représente les erreurs qui se produisent lors de l'exécution de l'application.Pour parcourir le code source de .NET Framework pour ce type, consultez la Source de référence.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Exception.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Exception" />.</summary>
    </member>
    <member name="M:System.Exception.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Exception" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message décrivant l'erreur. </param>
    </member>
    <member name="M:System.Exception.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Exception" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception. </param>
      <param name="innerException">Exception à l'origine de l'exception actuelle, ou une référence null (Nothing en Visual Basic) si aucune exception interne n'est spécifiée. </param>
    </member>
    <member name="P:System.Exception.Data">
      <summary>Obtient une collection de paires clé/valeur qui fournissent des informations supplémentaires définies par l'utilisateur sur l'exception.</summary>
      <returns>Objet qui implémente l'interface <see cref="T:System.Collections.IDictionary" /> et contient une collection de paires clé/valeur définies par l'utilisateur.La valeur par défaut est une collection vide.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Exception.GetBaseException">
      <summary>En cas de substitution dans une classe dérivée, retourne la <see cref="T:System.Exception" /> qui est à l'origine d'une ou de plusieurs exceptions ultérieures.</summary>
      <returns>Première exception levée dans une chaîne d'exceptions.Si la propriété <see cref="P:System.Exception.InnerException" /> de l'exception actuelle est une référence null (Nothing en Visual Basic), cette propriété retourne l'exception actuelle.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Exception.HelpLink">
      <summary>Obtient ou définit un lien vers le fichier d'aide associé à cette exception.</summary>
      <returns>URN (Uniform Resource Name) ou URL (Uniform Resource Locator).</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Exception.HResult">
      <summary>Obtient ou définit HRESULT, valeur numérique codée qui est assignée à une exception spécifique.</summary>
      <returns>Valeur HRESULT.</returns>
    </member>
    <member name="P:System.Exception.InnerException">
      <summary>Obtient l'instance <see cref="T:System.Exception" /> qui a provoqué l'exception actuelle.</summary>
      <returns>Objet décrivant l'erreur qui a provoqué l'exception actuelle.La propriété <see cref="P:System.Exception.InnerException" /> retourne la même valeur que celle transmise au constructeur <see cref="M:System.Exception.#ctor(System.String,System.Exception)" />, ou null si la valeur de l'exception interne n'a pas été fournie au constructeur.Cette propriété est en lecture seule.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Exception.Message">
      <summary>Obtient un message qui décrit l'exception actuelle.</summary>
      <returns>Message d'erreur qui explique la raison de l'exception ou bien chaîne vide ("").</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Exception.Source">
      <summary>Obtient ou définit le nom de l'application ou de l'objet qui est à l'origine de l'erreur.</summary>
      <returns>Nom de l'application ou de l'objet qui est à l'origine de l'erreur.</returns>
      <exception cref="T:System.ArgumentException">The object must be a runtime <see cref="N:System.Reflection" /> object</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Exception.StackTrace">
      <summary>Obtient une représentation sous forme de chaîne des frames immédiats sur la pile des appels.</summary>
      <returns>Chaîne qui décrit les frames immédiates de la pile des appels.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Exception.ToString">
      <summary>Crée et retourne une chaîne représentant l'exception actuelle.</summary>
      <returns>Représentation sous forme de chaîne de l'exception actuelle.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.FieldAccessException">
      <summary>Exception levée lors d'une tentative non valide d'accès à un champ privé ou protégé à l'intérieur d'une classe.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.FieldAccessException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.FieldAccessException" />.</summary>
    </member>
    <member name="M:System.FieldAccessException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.FieldAccessException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception.</param>
    </member>
    <member name="M:System.FieldAccessException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.FieldAccessException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception.</param>
      <param name="inner">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="inner" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.FlagsAttribute">
      <summary>Indique qu'une énumération peut être traitée comme un champ de bits, c'est-à-dire un ensemble d'indicateurs.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.FlagsAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.FlagsAttribute" />.</summary>
    </member>
    <member name="T:System.FormatException">
      <summary>Exception levée quand le format d'un argument n'est pas valide ou qu'une chaîne de format composite n'est pas formée correctement. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.FormatException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.FormatException" />.</summary>
    </member>
    <member name="M:System.FormatException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.FormatException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message décrivant l'erreur. </param>
    </member>
    <member name="M:System.FormatException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.FormatException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas une référence null (Nothing en Visual Basic), l'exception actuelle est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.FormattableString">
      <summary>Représente une chaîne de format composite, ainsi que l'argument à mettre en forme. </summary>
    </member>
    <member name="M:System.FormattableString.#ctor">
      <summary>Instancie une nouvelle instance de la classe <see cref="T:System.FormattableString" />. </summary>
    </member>
    <member name="P:System.FormattableString.ArgumentCount">
      <summary>Obtient le nombre d'arguments à mettre en forme. </summary>
      <returns>Le nombre d'arguments à mettre en forme. </returns>
    </member>
    <member name="P:System.FormattableString.Format">
      <summary>Retourne la chaîne de format composite. </summary>
      <returns>La chaîne de format composite. </returns>
    </member>
    <member name="M:System.FormattableString.GetArgument(System.Int32)">
      <summary>Retourne l'argument à la position d'index spécifiée. </summary>
      <returns>Argument. </returns>
      <param name="index">Index de l'argument.Sa valeur peut aller de zéro à un de moins que la valeur de <see cref="P:System.FormattableString.ArgumentCount" />.</param>
    </member>
    <member name="M:System.FormattableString.GetArguments">
      <summary>Retourne un tableau d'objets qui contient un ou plusieurs objets à mettre en forme. </summary>
      <returns>Tableau d'objets qui contient un ou plusieurs objets à mettre en forme. </returns>
    </member>
    <member name="M:System.FormattableString.Invariant(System.FormattableString)">
      <summary>Retourne une chaîne de résultat dans lequel les arguments sont formatés en utilisant les conventions de la culture dite indifférente. </summary>
      <returns>La chaîne qui résulte de l'instance actuelle de la mise en forme en utilisant les conventions de la culture dite indifférente. </returns>
      <param name="formattable">Objet à convertir en une chaîne de résultat. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="formattable" /> a la valeur null. </exception>
    </member>
    <member name="M:System.FormattableString.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Retourne la chaîne qui résulte de la mise en forme de la chaîne de format avec ses arguments en utilisant les conventions de mise en forme d'une culture spécifiée. </summary>
      <returns>Une chaîne mise en forme à l'aide des conventions de la <paramref name="formatProvider" /> paramètre. </returns>
      <param name="ignored">Une chaîne.Cet argument est ignoré.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
    </member>
    <member name="M:System.FormattableString.ToString">
      <summary>Retourne la chaîne qui résulte de la mise en forme de la chaîne de format composite avec ses arguments en utilisant les conventions de mise en forme de la culture actuelle. </summary>
      <returns>Une chaîne de résultat mise en forme en utilisant les conventions de la culture actuelle. </returns>
    </member>
    <member name="M:System.FormattableString.ToString(System.IFormatProvider)">
      <summary>Retourne la chaîne qui résulte de la mise en forme de la chaîne de format composite avec ses arguments en utilisant les conventions de mise en forme d'une culture spécifiée. </summary>
      <returns>Une chaîne de résultat mise en forme en utilisant les conventions de <paramref name="formatProvider" />. </returns>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
    </member>
    <member name="T:System.Func`1">
      <summary>Encapsule une méthode n'ayant aucun paramètre et retournant une valeur du type spécifié par le paramètre <paramref name="TResult" />.</summary>
      <typeparam name="TResult">Type de la valeur de retour de la méthode encapsulée par ce délégué.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Func`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`1.BeginInvoke(System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`1.Invoke"></member>
    <member name="T:System.Func`10">
      <summary>Encapsule une méthode ayant neuf paramètres et retournant une valeur du type spécifié par le paramètre <paramref name="TResult" />.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T9">Type du neuvième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="TResult">Type de la valeur de retour de la méthode encapsulée par ce délégué.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`10.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`10.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`10.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`10.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8)"></member>
    <member name="T:System.Func`11">
      <summary>Encapsule une méthode ayant 10 paramètres et retournant une valeur du type spécifié par le paramètre <paramref name="TResult" />.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T9">Type du neuvième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T10">Type du dixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="TResult">Type de la valeur de retour de la méthode encapsulée par ce délégué.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`11.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`11.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`11.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`11.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)"></member>
    <member name="T:System.Func`12">
      <summary>Encapsule une méthode ayant 11 paramètres et retournant une valeur du type spécifié par le paramètre <paramref name="TResult" />.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T9">Type du neuvième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T10">Type du dixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T11">Type du onzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="TResult">Type de la valeur de retour de la méthode encapsulée par ce délégué.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`12.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`12.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`12.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`12.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)"></member>
    <member name="T:System.Func`13">
      <summary>Encapsule une méthode ayant 12 paramètres et retournant une valeur du type spécifié par le paramètre <paramref name="TResult" />.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T9">Type du neuvième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T10">Type du dixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T11">Type du onzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T12">Type du douzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="TResult">Type de la valeur de retour de la méthode encapsulée par ce délégué.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`13.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`13.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`13.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`13.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)"></member>
    <member name="T:System.Func`14">
      <summary>Encapsule une méthode ayant 13 paramètres et retournant une valeur du type spécifié par le paramètre <paramref name="TResult" />.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T9">Type du neuvième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T10">Type du dixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T11">Type du onzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T12">Type du douzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T13">Type du treizième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="TResult">Type de la valeur de retour de la méthode encapsulée par ce délégué.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`14.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`14.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`14.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`14.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)"></member>
    <member name="T:System.Func`15">
      <summary>Encapsule une méthode ayant 14 paramètres et retournant une valeur du type spécifié par le paramètre <paramref name="TResult" />.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T9">Type du neuvième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T10">Type du dixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T11">Type du onzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T12">Type du douzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T13">Type du treizième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T14">Type du quatorzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="TResult">Type de la valeur de retour de la méthode encapsulée par ce délégué.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`15.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`15.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`15.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`15.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)"></member>
    <member name="T:System.Func`16">
      <summary>Encapsule une méthode ayant 15 paramètres et retournant une valeur du type spécifié par le paramètre <paramref name="TResult" />.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T9">Type du neuvième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T10">Type du dixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T11">Type du onzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T12">Type du douzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T13">Type du treizième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T14">Type du quatorzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T15">Type du quinzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="TResult">Type de la valeur de retour de la méthode encapsulée par ce délégué.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`16.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`16.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`16.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`16.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)"></member>
    <member name="T:System.Func`17">
      <summary>Encapsule une méthode ayant 16 paramètres et retournant une valeur du type spécifié par le paramètre <paramref name="TResult" />.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T9">Type du neuvième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T10">Type du dixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T11">Type du onzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T12">Type du douzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T13">Type du treizième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T14">Type du quatorzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T15">Type du quinzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T16">Type du seizième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="TResult">Type de la valeur de retour de la méthode encapsulée par ce délégué.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`17.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`17.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`17.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`17.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)"></member>
    <member name="T:System.Func`2">
      <summary>Encapsule une méthode ayant un seul paramètre et retournant une valeur du type spécifié par le paramètre <paramref name="TResult" />.Pour parcourir le code source .NET Framework correspondant à ce type, consultez la Source de référence.</summary>
      <typeparam name="T">Type du paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="TResult">Type de la valeur de retour de la méthode encapsulée par ce délégué.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`2.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`2.BeginInvoke(`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`2.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`2.Invoke(`0)"></member>
    <member name="T:System.Func`3">
      <summary>Encapsule une méthode ayant deux paramètres et retourne une valeur du type spécifié par le paramètre <paramref name="TResult" />.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="TResult">Type de la valeur de retour de la méthode encapsulée par ce délégué.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`3.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`3.BeginInvoke(`0,`1,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`3.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`3.Invoke(`0,`1)"></member>
    <member name="T:System.Func`4">
      <summary>Encapsule une méthode ayant trois paramètres et retournant une valeur du type spécifié par le paramètre <paramref name="TResult" />.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="TResult">Type de la valeur de retour de la méthode encapsulée par ce délégué.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`4.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`4.BeginInvoke(`0,`1,`2,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`4.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`4.Invoke(`0,`1,`2)"></member>
    <member name="T:System.Func`5">
      <summary>Encapsule une méthode ayant quatre paramètres et retournant une valeur du type spécifié par le paramètre <paramref name="TResult" />.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="TResult">Type de la valeur de retour de la méthode encapsulée par ce délégué.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`5.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`5.BeginInvoke(`0,`1,`2,`3,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`5.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`5.Invoke(`0,`1,`2,`3)"></member>
    <member name="T:System.Func`6">
      <summary>Encapsule une méthode ayant cinq paramètres et retournant une valeur du type spécifié par le paramètre <paramref name="TResult" />.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="TResult">Type de la valeur de retour de la méthode encapsulée par ce délégué.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`6.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`6.BeginInvoke(`0,`1,`2,`3,`4,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`6.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`6.Invoke(`0,`1,`2,`3,`4)"></member>
    <member name="T:System.Func`7">
      <summary>Encapsule une méthode ayant six paramètres et retournant une valeur du type spécifié par le paramètre <paramref name="TResult" />.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="TResult">Type de la valeur de retour de la méthode encapsulée par ce délégué.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`7.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`7.BeginInvoke(`0,`1,`2,`3,`4,`5,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`7.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`7.Invoke(`0,`1,`2,`3,`4,`5)"></member>
    <member name="T:System.Func`8">
      <summary>Encapsule une méthode ayant sept paramètres et retournant une valeur du type spécifié par le paramètre <paramref name="TResult" />.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="TResult">Type de la valeur de retour de la méthode encapsulée par ce délégué.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`8.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`8.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`8.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`8.Invoke(`0,`1,`2,`3,`4,`5,`6)"></member>
    <member name="T:System.Func`9">
      <summary>Encapsule une méthode ayant huit paramètres et retournant une valeur du type spécifié par le paramètre <paramref name="TResult" />.</summary>
      <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
      <typeparam name="TResult">Type de la valeur de retour de la méthode encapsulée par ce délégué.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`9.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`9.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`9.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`9.Invoke(`0,`1,`2,`3,`4,`5,`6,`7)"></member>
    <member name="T:System.GC">
      <summary>Contrôle le garbage collector du système, un service qui récupère automatiquement la mémoire inutilisée.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.GC.AddMemoryPressure(System.Int64)">
      <summary>Informe l'exécution d'une allocation volumineuse de mémoire non managée qui doit être prise en considération lors de la planification du garbage collection.</summary>
      <param name="bytesAllocated">Quantité incrémentielle de mémoire non managée qui a été allouée. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bytesAllocated" /> est inférieur ou égal à 0.ouSur un ordinateur à 32 bits, <paramref name="bytesAllocated" /> est supérieur à <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.GC.Collect">
      <summary>Force un garbage collection immédiat sur toutes les générations. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.Collect(System.Int32)">
      <summary>Force un garbage collection immédiat de la génération 0 jusqu'à une génération spécifiée.</summary>
      <param name="generation">Numéro de la génération la plus ancienne devant faire l'objet d'un garbage collection. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" /> n'est pas valide. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.Collect(System.Int32,System.GCCollectionMode)">
      <summary>Force un garbage collection de la génération 0 jusqu'à une génération spécifiée, à une heure indiquée par une valeur <see cref="T:System.GCCollectionMode" />.</summary>
      <param name="generation">Numéro de la génération la plus ancienne devant faire l'objet d'un garbage collection. </param>
      <param name="mode">Valeur d'énumération qui spécifie si le garbage collection est forcé (<see cref="F:System.GCCollectionMode.Default" /> ou <see cref="F:System.GCCollectionMode.Forced" />) ou optimisé (<see cref="F:System.GCCollectionMode.Optimized" />). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" /> n'est pas valide.ou<paramref name="mode" /> ne fait pas partie des valeurs <see cref="T:System.GCCollectionMode" />.</exception>
    </member>
    <member name="M:System.GC.Collect(System.Int32,System.GCCollectionMode,System.Boolean)">
      <summary>Force un garbage collection de la génération 0 jusqu'à une génération spécifiée, à une heure indiquée par une valeur <see cref="T:System.GCCollectionMode" />, avec une valeur indiquant si le garbage collection doit effectuer le blocage.</summary>
      <param name="generation">Numéro de la génération la plus ancienne devant faire l'objet d'un garbage collection. </param>
      <param name="mode">Valeur d'énumération qui spécifie si le garbage collection est forcé (<see cref="F:System.GCCollectionMode.Default" /> ou <see cref="F:System.GCCollectionMode.Forced" />) ou optimisé (<see cref="F:System.GCCollectionMode.Optimized" />). </param>
      <param name="blocking">true pour effectuer un garbage collection de blocage ; false pour effectuer un garbage collection d'arrière-plan, si possible.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" /> n'est pas valide.ou<paramref name="mode" /> ne fait pas partie des valeurs <see cref="T:System.GCCollectionMode" />.</exception>
    </member>
    <member name="M:System.GC.CollectionCount(System.Int32)">
      <summary>Retourne le nombre de fois que le garbage collection s'est produit pour la génération d'objets spécifiée.</summary>
      <returns>Nombre de fois où le garbage collection s'est produit pour la génération spécifiée, depuis que le processus a été démarré.</returns>
      <param name="generation">Génération d'objets pour lesquels le compteur de garbage collection doit être déterminé. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" /> est inférieur à 0. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.GetGeneration(System.Object)">
      <summary>Retourne le numéro de la génération actuelle de l'objet spécifié.</summary>
      <returns>Numéro de génération actuelle de <paramref name="obj" />.</returns>
      <param name="obj">Objet pour lequel les informations de génération sont récupérées. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.GetTotalMemory(System.Boolean)">
      <summary>Récupère le nombre d'octets qu'il est actuellement prévu d'allouer.Un paramètre indique si cette méthode peut attendre une courte période de temps avant de retourner une réponse, pour permettre au système d'effectuer un garbage collection et de finaliser les objets.</summary>
      <returns>Nombre correspondant à la meilleure approximation possible du nombre d'octets actuellement alloués dans la mémoire managée.</returns>
      <param name="forceFullCollection">true pour indiquer que cette méthode peut attendre le garbage collection avant de retourner une réponse ; sinon, false.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.KeepAlive(System.Object)">
      <summary>Référence l'objet spécifié, ce qui le rend inéligible pour le garbage collection du début de la routine actuelle jusqu'au point où cette méthode est appelée.</summary>
      <param name="obj">Objet à référencer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.GC.MaxGeneration">
      <summary>Obtient le nombre maximal de générations actuellement pris en charge par le système.</summary>
      <returns>Valeur comprise entre zéro et le nombre maximal de générations prises en charge.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.RemoveMemoryPressure(System.Int64)">
      <summary>Informe l'exécution que la mémoire non managée a été libérée et n'a plus besoin d'être prise en compte lors de la planification du garbage collection.</summary>
      <param name="bytesAllocated">Quantité de mémoire non managée qui a été libérée. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bytesAllocated" /> est inférieur ou égal à 0. ou Sur un ordinateur à 32 bits, <paramref name="bytesAllocated" /> est supérieur à <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.GC.ReRegisterForFinalize(System.Object)">
      <summary>Demande que le système appelle le finaliseur pour l'objet spécifié, pour lequel <see cref="M:System.GC.SuppressFinalize(System.Object)" /> a été précédemment appelé.</summary>
      <param name="obj">Objet pour lequel un finaliseur doit être appelé. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> a la valeur null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.SuppressFinalize(System.Object)">
      <summary>Demande que le Common Language Runtime n'appelle pas le finaliseur pour l'objet spécifié. </summary>
      <param name="obj">Objet dont le finaliseur ne doit pas être exécuté. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> a la valeur null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.WaitForPendingFinalizers">
      <summary>Suspend le thread actif jusqu'à ce que le thread traitant la file d'attente des finaliseurs ait vidé cette file d'attente.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.GCCollectionMode">
      <summary>Spécifie le comportement pour un garbage collection forcé.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.GCCollectionMode.Default">
      <summary>Paramètre par défaut pour cette énumération, qui est actuellement <see cref="F:System.GCCollectionMode.Forced" />. </summary>
    </member>
    <member name="F:System.GCCollectionMode.Forced">
      <summary>Force l'exécution immédiate du garbage collection.</summary>
    </member>
    <member name="F:System.GCCollectionMode.Optimized">
      <summary>Permet au garbage collector de déterminer s'il vaut mieux récupérer des objets maintenant ou plus tard. </summary>
    </member>
    <member name="T:System.Guid">
      <summary>Représente un GUID (identificateur global unique).Pour parcourir le code source de .NET Framework pour ce type, consultez la Source de référence.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.#ctor(System.Byte[])">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Guid" /> à l'aide du tableau d'octets spécifié.</summary>
      <param name="b">Tableau d'octets à 16 éléments contenant les valeurs avec lesquelles initialiser le GUID. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="b" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="b" /> ne fait pas 16 octets de long. </exception>
    </member>
    <member name="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Guid" /> à l'aide des entiers et des octets spécifiés.</summary>
      <param name="a">Les quatre premiers octets du GUID. </param>
      <param name="b">Les deux octets suivants du GUID. </param>
      <param name="c">Les deux octets suivants du GUID. </param>
      <param name="d">L'octet suivant du GUID. </param>
      <param name="e">L'octet suivant du GUID. </param>
      <param name="f">L'octet suivant du GUID. </param>
      <param name="g">L'octet suivant du GUID. </param>
      <param name="h">L'octet suivant du GUID. </param>
      <param name="i">L'octet suivant du GUID. </param>
      <param name="j">L'octet suivant du GUID. </param>
      <param name="k">L'octet suivant du GUID. </param>
    </member>
    <member name="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Guid" /> à l'aide des entiers et du tableau d'octets spécifiés.</summary>
      <param name="a">Les quatre premiers octets du GUID. </param>
      <param name="b">Les deux octets suivants du GUID. </param>
      <param name="c">Les deux octets suivants du GUID. </param>
      <param name="d">Les huit octets restants du GUID. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="d" /> ne fait pas 8 octets de long. </exception>
    </member>
    <member name="M:System.Guid.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Guid" /> à l'aide de la valeur représentée par la chaîne spécifiée.</summary>
      <param name="g">Chaîne qui contient un GUID dans l'un des formats suivants (« d » représente un chiffre hexadécimal dont la casse est ignorée) : 32 chiffres contigus : dddddddddddddddddddddddddddddddd ou Groupes de 8, 4, 4, 4 et 12 chiffres, les groupes étant séparés par des traits d'union.Le GUID entier peut éventuellement être placé entre accolades ou parenthèses :dddddddd-dddd-dddd-dddd-dddddddddddd ou {dddddddd-dddd-dddd-dddd-dddddddddddd} ou (dddddddd-dddd-dddd-dddd-dddddddddddd) ou Groupes de 8, 4 et 4 chiffres, et un sous-ensemble de huit groupes de 2 chiffres, chaque groupe ayant le préfixe « 0x » ou « 0X » et les groupes étant séparés par des virgules.Le GUID entier, ainsi que le sous-ensemble, est placé entre accolades :{0xdddddddd, 0xdddd, 0xdddd,{0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd}} Tous les préfixes « 0x », accolades et virgules sont requis.Tous les espaces incorporés sont ignorés.Tous les zéros non significatifs dans un groupe sont ignorés.Les chiffres indiqués dans un groupe représentent le nombre maximal de chiffres significatifs pouvant figurer dans ce groupe.Vous pouvez spécifier entre 1 chiffre et le nombre de chiffres indiqué pour un groupe.Les chiffres spécifiés sont considérés comme les chiffres d'ordre bas du groupe.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> a la valeur null. </exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="g" /> n'est pas valide. </exception>
      <exception cref="T:System.OverflowException">Le format de <paramref name="g" /> n'est pas valide. </exception>
    </member>
    <member name="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Guid" /> à l'aide des entiers et des octets non signés spécifiés.</summary>
      <param name="a">Les quatre premiers octets du GUID. </param>
      <param name="b">Les deux octets suivants du GUID. </param>
      <param name="c">Les deux octets suivants du GUID. </param>
      <param name="d">L'octet suivant du GUID. </param>
      <param name="e">L'octet suivant du GUID. </param>
      <param name="f">L'octet suivant du GUID. </param>
      <param name="g">L'octet suivant du GUID. </param>
      <param name="h">L'octet suivant du GUID. </param>
      <param name="i">L'octet suivant du GUID. </param>
      <param name="j">L'octet suivant du GUID. </param>
      <param name="k">L'octet suivant du GUID. </param>
    </member>
    <member name="M:System.Guid.CompareTo(System.Guid)">
      <summary>Compare cette instance à un objet <see cref="T:System.Guid" /> spécifié et retourne une indication de leurs valeurs relatives.</summary>
      <returns>Nombre signé indiquant les valeurs relatives de cette instance et <paramref name="value" />.Valeur de retour Description Entier négatif Cette instance est inférieure à <paramref name="value" />. Zéro Cette instance est égale à <paramref name="value" />. Entier positif Cette instance est supérieure à <paramref name="value" />. </returns>
      <param name="value">Objet à comparer à cette instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Guid.Empty">
      <summary>Instance en lecture seule de la structure <see cref="T:System.Guid" /> dont la valeur ne peut être composée que de zéros.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.Equals(System.Guid)">
      <summary>Retourne une valeur indiquant si cette instance et un objet <see cref="T:System.Guid" /> spécifié représentent la même valeur.</summary>
      <returns>true si <paramref name="g" /> est égal à cette instance ; sinon, false.</returns>
      <param name="g">Objet à comparer à cette instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.Equals(System.Object)">
      <summary>Retourne une valeur qui indique si cette instance est égale à un objet spécifié.</summary>
      <returns>true si <paramref name="o" /> est un <see cref="T:System.Guid" /> qui possède la même valeur que cette instance ; sinon, false.</returns>
      <param name="o">Objet à comparer avec cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage de cette instance.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.NewGuid">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Guid" />.</summary>
      <returns>Nouvel objet GUID.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.op_Equality(System.Guid,System.Guid)">
      <summary>Indique si les valeurs de deux objets <see cref="T:System.Guid" /> spécifiés sont égaux.</summary>
      <returns>true si <paramref name="a" /> est égal à <paramref name="b" /> ; sinon, false.</returns>
      <param name="a">Premier objet à comparer. </param>
      <param name="b">Deuxième objet à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Guid.op_Inequality(System.Guid,System.Guid)">
      <summary>Indique si les valeurs de deux objets <see cref="T:System.Guid" /> spécifiés ne sont pas égaux.</summary>
      <returns>true si <paramref name="a" /> et <paramref name="b" /> ne sont pas égaux ; sinon, false.</returns>
      <param name="a">Premier objet à comparer. </param>
      <param name="b">Deuxième objet à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Guid.Parse(System.String)">
      <summary>Convertit la représentation sous forme de chaîne d'un GUID en une structure <see cref="T:System.Guid" /> équivalente.</summary>
      <returns>Structure qui contient la valeur analysée.</returns>
      <param name="input">Chaîne à convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n'est pas dans un format reconnu.</exception>
    </member>
    <member name="M:System.Guid.ParseExact(System.String,System.String)">
      <summary>Convertit la représentation sous forme de chaîne d'un GUID en une structure <see cref="T:System.Guid" /> équivalente, à condition que la chaîne soit au format spécifié.</summary>
      <returns>Structure qui contient la valeur analysée.</returns>
      <param name="input">GUID à convertir.</param>
      <param name="format">Un des spécificateurs suivants qui indique le format exact à utiliser lors de l'interprétation de <paramref name="input" /> : "N", "D", "B", "P" ou "X".</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="format" /> a la valeur null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" />n'est pas dans le format spécifié par <paramref name="format" />.</exception>
    </member>
    <member name="M:System.Guid.System#IComparable#CompareTo(System.Object)">
      <summary>Compare cette instance à un objet spécifié et retourne une indication de leurs valeurs relatives. </summary>
      <returns>Nombre signé indiquant les valeurs relatives de cette instance et <paramref name="value" />.Valeur de retour Description Entier négatif Cette instance est inférieure à <paramref name="value" />. Zéro Cette instance est égale à <paramref name="value" />. Entier positif Cette instance est supérieure à <paramref name="value" />, ou <paramref name="value" /> est null. </returns>
      <param name="value">Objet à comparer ou null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> n'est pas un <see cref="T:System.Guid" />. </exception>
    </member>
    <member name="M:System.Guid.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Retourne une représentation sous forme de chaîne de la valeur de cette instance, selon le spécificateur de format fourni.</summary>
      <returns>Valeur de ce <see cref="T:System.Guid" />, représentée sous la forme d'une série de chiffres hexadécimaux en minuscules dans le format spécifié.</returns>
      <param name="format">Spécificateur de format unique qui indique comment mettre en forme la valeur de <see cref="T:System.Guid" />.Le paramètre <paramref name="format" /> peut être "N", "D", "B", "P" ou "X".Si <paramref name="format" /> a la valeur null ou une chaîne vide (""), "D" est utilisé.</param>
      <param name="provider">(Réservé) Objet fournissant des informations de mise en forme propres à la culture.</param>
      <exception cref="T:System.FormatException">La valeur <paramref name="format" /> n'est pas null, une chaîne vide (""), ou l'un des spécificateurs de format unique suivants : « N », « D », « B », « P » ou « X ».</exception>
    </member>
    <member name="M:System.Guid.ToByteArray">
      <summary>Retourne un tableau d'octets à 16 éléments qui contient la valeur de cette instance.</summary>
      <returns>Tableau d'octets à 16 éléments.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.ToString">
      <summary>Retourne une représentation sous forme de chaîne de la valeur de cette instance au format du Registre.</summary>
      <returns>Valeur de ce <see cref="T:System.Guid" />, mise en forme à l'aide du spécificateur de format « D » comme suit : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx où la valeur du GUID est représentée sous la forme d'une série de chiffres hexadécimaux en minuscules par groupes de 8, 4, 4, 4 et 12 chiffres et séparés par des traits d'union.Exemple de valeur de retour : « 382c74c3-721d-4f34-80e5-57657b6cbc27 ».Pour convertir les chiffres hexadécimaux de a à f en majuscules, appelez la méthode <see cref="M:System.String.ToUpper" /> sur la chaîne retournée.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.ToString(System.String)">
      <summary>Retourne une représentation sous forme de chaîne de la valeur de cette instance <see cref="T:System.Guid" />, selon le spécificateur de format fourni.</summary>
      <returns>Valeur de ce <see cref="T:System.Guid" />, représentée sous la forme d'une série de chiffres hexadécimaux en minuscules dans le format spécifié. </returns>
      <param name="format">Spécificateur de format unique qui indique comment mettre en forme la valeur de ce <see cref="T:System.Guid" />.Le paramètre <paramref name="format" /> peut être "N", "D", "B", "P" ou "X".Si <paramref name="format" /> a la valeur null ou une chaîne vide (""), "D" est utilisé.</param>
      <exception cref="T:System.FormatException">La valeur de <paramref name="format" /> n'est pas null, une chaîne vide (""), "N", "D", "B", "P" ou "X". </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.TryParse(System.String,System.Guid@)">
      <summary>Convertit la représentation sous forme de chaîne d'un GUID en une structure <see cref="T:System.Guid" /> équivalente. </summary>
      <returns>true si l'opération d'analyse réussit ; sinon, false.</returns>
      <param name="input">GUID à convertir.</param>
      <param name="result">Structure qui contiendra la valeur analysée.Si la méthode retourne true, <paramref name="result" /> contient un <see cref="T:System.Guid" />valide.Si la méthode retourne false, <paramref name="result" /> est égal à <see cref="F:System.Guid.Empty" />.</param>
    </member>
    <member name="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
      <summary>Convertit la représentation sous forme de chaîne d'un GUID en une structure <see cref="T:System.Guid" /> équivalente, à condition que la chaîne soit au format spécifié.</summary>
      <returns>true si l'opération d'analyse réussit ; sinon, false.</returns>
      <param name="input">GUID à convertir.</param>
      <param name="format">Un des spécificateurs suivants qui indique le format exact à utiliser lors de l'interprétation de <paramref name="input" /> : "N", "D", "B", "P" ou "X".</param>
      <param name="result">Structure qui contiendra la valeur analysée.Si la méthode retourne true, <paramref name="result" /> contient un <see cref="T:System.Guid" />valide.Si la méthode retourne false, <paramref name="result" /> est égal à <see cref="F:System.Guid.Empty" />.</param>
    </member>
    <member name="T:System.IAsyncResult">
      <summary>Représente l'état d'une opération asynchrone. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.AsyncState">
      <summary>Obtient un objet défini par l'utilisateur qui qualifie ou qui contient des informations sur une opération asynchrone.</summary>
      <returns>Objet défini par l'utilisateur qui qualifie ou qui contient des informations sur une opération asynchrone.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.AsyncWaitHandle">
      <summary>Obtient <see cref="T:System.Threading.WaitHandle" /> utilisé pour attendre qu'une opération asynchrone se termine.</summary>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> utilisé pour attendre qu'une opération asynchrone se termine.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.CompletedSynchronously">
      <summary>Obtient une valeur qui indique si l'opération asynchrone a été terminée de manière synchrone.</summary>
      <returns>true si l'opération asynchrone a été terminée de manière synchrone ; sinon, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.IsCompleted">
      <summary>Obtient une valeur qui indique si l'opération asynchrone est terminée.</summary>
      <returns>true si l'opération est terminée ; sinon, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IComparable">
      <summary>Définit une méthode de comparaison généralisée spécifique au type qu'un type valeur ou une classe implémente pour créer ou trier ses instances.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IComparable.CompareTo(System.Object)">
      <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</summary>
      <returns>Valeur qui indique l'ordre relatif des objets comparés.La valeur de retour a les significations suivantes :Valeur Signification Inférieur à zéro Cette instance précède <paramref name="obj" /> dans l'ordre de tri. Zéro Cette instance se produit à la même position dans l'ordre de tri que <paramref name="obj" />. Supérieure à zéro Cette instance suit <paramref name="obj" /> dans l'ordre de tri. </returns>
      <param name="obj">Objet à comparer à cette instance. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> n'est pas du même type que cette instance. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IComparable`1">
      <summary>Définit une méthode de comparaison généralisée qu'un type valeur ou une classe implémente pour créer une méthode de comparaison spécifique au type et permettant d'ordonnancer ou de trier ses instances.</summary>
      <typeparam name="T">Le type d'objet à comparer. Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IComparable`1.CompareTo(`0)">
      <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri. </summary>
      <returns>Valeur qui indique l'ordre relatif des objets comparés.La valeur de retour a les significations suivantes :Valeur Signification Inférieure à zéro Cette instance précède <paramref name="other" /> dans l'ordre de tri.  Zéro Cette instance se produit à la même position dans l'ordre de tri que <paramref name="other" />. Supérieure à zéro Cette instance suit <paramref name="other" /> dans l'ordre de tri. </returns>
      <param name="other">Objet à comparer à cette instance. </param>
    </member>
    <member name="T:System.IConvertible">
      <summary>Définit les méthodes qui convertissent la valeur de la référence d'implémentation ou du type valeur en un type Common Language Runtime possédant une valeur équivalente.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.GetTypeCode">
      <summary>Retourne le <see cref="T:System.TypeCode" /> de cette instance.</summary>
      <returns>Constante énumérée qui est le <see cref="T:System.TypeCode" /> de la classe ou le type valeur qui implémente cette interface.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToBoolean(System.IFormatProvider)">
      <summary>Convertit la valeur de cette instance en une valeur booléenne équivalente à l'aide des informations de mise en forme propres à la culture spécifiées.</summary>
      <returns>Valeur booléenne équivalant à la valeur de cette instance.</returns>
      <param name="provider">Implémentation de l'interface <see cref="T:System.IFormatProvider" /> qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToByte(System.IFormatProvider)">
      <summary>Convertit la valeur de cette instance en un entier 8 bits non signé équivalent à l'aide des informations de mise en forme propres à la culture spécifiées.</summary>
      <returns>Entier 8 bits non signé équivalant à la valeur de cette instance.</returns>
      <param name="provider">Implémentation de l'interface <see cref="T:System.IFormatProvider" /> qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToChar(System.IFormatProvider)">
      <summary>Convertit la valeur de cette instance en un caractère Unicode équivalent à l'aide des informations de mise en forme propres à la culture spécifiées.</summary>
      <returns>Caractères Unicode équivalant à la valeur de cette instance.</returns>
      <param name="provider">Implémentation de l'interface <see cref="T:System.IFormatProvider" /> qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToDateTime(System.IFormatProvider)">
      <summary>Convertit la valeur de cette instance en <see cref="T:System.DateTime" /> équivalent à l'aide des informations de mise en forme propres à la culture spécifiées.</summary>
      <returns>Instance de <see cref="T:System.DateTime" /> équivalant à la valeur de cette instance.</returns>
      <param name="provider">Implémentation de l'interface <see cref="T:System.IFormatProvider" /> qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToDecimal(System.IFormatProvider)">
      <summary>Convertit la valeur de cette instance en nombre <see cref="T:System.Decimal" /> équivalent à l'aide des informations de mise en forme propres à la culture spécifiées.</summary>
      <returns>Nombre <see cref="T:System.Decimal" /> équivalant à la valeur de cette instance.</returns>
      <param name="provider">Implémentation de l'interface <see cref="T:System.IFormatProvider" /> qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToDouble(System.IFormatProvider)">
      <summary>Convertit la valeur de cette instance en un nombre à virgule flottante double précision à l'aide des informations de mise en forme propres à la culture spécifiées.</summary>
      <returns>Nombre à virgule flottante double précision équivalant à la valeur de cette instance.</returns>
      <param name="provider">Implémentation de l'interface <see cref="T:System.IFormatProvider" /> qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToInt16(System.IFormatProvider)">
      <summary>Convertit la valeur de cette instance en un entier 16 bits signé équivalent à l'aide des informations de mise en forme propres à la culture spécifiées.</summary>
      <returns>Entier 16 bits signé équivalant à la valeur de cette instance.</returns>
      <param name="provider">Implémentation de l'interface <see cref="T:System.IFormatProvider" /> qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToInt32(System.IFormatProvider)">
      <summary>Convertit la valeur de cette instance en un entier 32 bits signé équivalent à l'aide des informations de mise en forme propres à la culture spécifiées.</summary>
      <returns>Entier 32 bits signé équivalant à la valeur de cette instance.</returns>
      <param name="provider">Implémentation de l'interface <see cref="T:System.IFormatProvider" /> qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToInt64(System.IFormatProvider)">
      <summary>Convertit la valeur de cette instance en un entier 64 bits signé équivalent à l'aide des informations de mise en forme propres à la culture spécifiées.</summary>
      <returns>Entier 64 bits signé équivalant à la valeur de cette instance.</returns>
      <param name="provider">Implémentation de l'interface <see cref="T:System.IFormatProvider" /> qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToSByte(System.IFormatProvider)">
      <summary>Convertit la valeur de cette instance en un entier 8 bits signé équivalent à l'aide des informations de mise en forme propres à la culture spécifiées.</summary>
      <returns>Entier 8 bits signé équivalant à la valeur de cette instance.</returns>
      <param name="provider">Implémentation de l'interface <see cref="T:System.IFormatProvider" /> qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToSingle(System.IFormatProvider)">
      <summary>Convertit la valeur de cette instance en un nombre à virgule flottante simple précision à l'aide des informations de mise en forme propres à la culture spécifiées.</summary>
      <returns>Nombre à virgule flottante simple précision équivalant à la valeur de cette instance.</returns>
      <param name="provider">Implémentation de l'interface <see cref="T:System.IFormatProvider" /> qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToString(System.IFormatProvider)">
      <summary>Convertit la valeur de cette instance en <see cref="T:System.String" /> équivalent à l'aide des informations de mise en forme propres à la culture spécifiées.</summary>
      <returns>Instance de <see cref="T:System.String" /> équivalant à la valeur de cette instance.</returns>
      <param name="provider">Implémentation de l'interface <see cref="T:System.IFormatProvider" /> qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)">
      <summary>Convertit la valeur de cette instance en <see cref="T:System.Object" /> du <see cref="T:System.Type" /> spécifié possédant une valeur équivalente, à l'aide des informations de mise en forme propres à la culture spécifiées.</summary>
      <returns>Instance de <see cref="T:System.Object" /> de type <paramref name="conversionType" /> dont la valeur équivaut à celle de cette instance.</returns>
      <param name="conversionType">
        <see cref="T:System.Type" /> dans lequel la valeur de cette instance est convertie. </param>
      <param name="provider">Implémentation de l'interface <see cref="T:System.IFormatProvider" /> qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToUInt16(System.IFormatProvider)">
      <summary>Convertit la valeur de cette instance en un entier 16 bits non signé équivalent à l'aide des informations de mise en forme propres à la culture spécifiées.</summary>
      <returns>Entier 16 bits non signé équivalant à la valeur de cette instance.</returns>
      <param name="provider">Implémentation de l'interface <see cref="T:System.IFormatProvider" /> qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToUInt32(System.IFormatProvider)">
      <summary>Convertit la valeur de cette instance en un entier 32 bits non signé équivalent à l'aide des informations de mise en forme propres à la culture spécifiées.</summary>
      <returns>Entier 32 bits non signé équivalant à la valeur de cette instance.</returns>
      <param name="provider">Implémentation de l'interface <see cref="T:System.IFormatProvider" /> qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToUInt64(System.IFormatProvider)">
      <summary>Convertit la valeur de cette instance en un entier 64 bits non signé équivalent à l'aide des informations de mise en forme propres à la culture spécifiées.</summary>
      <returns>Entier 64 bits non signé équivalant à la valeur de cette instance.</returns>
      <param name="provider">Implémentation de l'interface <see cref="T:System.IFormatProvider" /> qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ICustomFormatter">
      <summary>Définit une méthode qui prend en charge la mise en forme personnalisée de la valeur d'un objet.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
      <summary>Convertit la valeur d'un objet spécifié en une chaîne équivalente à l'aide du format spécifié et des informations de mise en forme propres à la culture.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de <paramref name="arg" />, mise en forme comme spécifié par <paramref name="format" /> et <paramref name="formatProvider" />.</returns>
      <param name="format">Chaîne de format contenant des spécifications de mise en forme. </param>
      <param name="arg">Objet à mettre en forme. </param>
      <param name="formatProvider">Objet qui fournit les informations de format concernant l'instance actuelle. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IDisposable">
      <summary>Fournit un mécanisme pour libérer des ressources non gérées.Pour parcourir le code source .NET Framework correspondant à ce type, consultez la Source de référence.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IDisposable.Dispose">
      <summary>Exécute les tâches définies par l'application associées à la libération ou à la redéfinition des ressources non managées.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IEquatable`1">
      <summary>Définit une méthode généralisée qu'un type valeur ou qu'une classe implémente pour créer une méthode spécifique au type et permettant de déterminer l'égalité des instances.</summary>
      <typeparam name="T">Type des objets à comparer.</typeparam>
    </member>
    <member name="M:System.IEquatable`1.Equals(`0)">
      <summary>Indique si l'objet actuel est égal à un autre objet du même type.</summary>
      <returns>true si l'objet en cours est égal au paramètre <paramref name="other" /> ; sinon, false.</returns>
      <param name="other">Objet à comparer avec cet objet.</param>
    </member>
    <member name="T:System.IFormatProvider">
      <summary>Fournit un mécanisme permettant de récupérer un objet pour contrôler la mise en forme.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IFormatProvider.GetFormat(System.Type)">
      <summary>Retourne un objet qui assure des services de mise en forme pour le type spécifié.</summary>
      <returns>Une instance de l'objet spécifié par <paramref name="formatType" />, si l'implémentation <see cref="T:System.IFormatProvider" /> peut fournir ce type d'objet ; sinon, null.</returns>
      <param name="formatType">Objet qui spécifie le type d'objet de format à retourner. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.IFormattable">
      <summary>Fournit des fonctionnalités permettant de mettre en forme la valeur d'un objet dans une chaîne.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
      <summary>Met en forme la valeur de l'instance actuelle à l'aide du format spécifié.</summary>
      <returns>Valeur de l'instance actuelle au format spécifié.</returns>
      <param name="format">Format à utiliser.ou Référence null (Nothing en Visual Basic) pour utiliser le format par défaut défini pour le type de l'implémentation <see cref="T:System.IFormattable" />. </param>
      <param name="formatProvider">Fournisseur à utiliser pour mettre en forme la valeur.ou Référence null (Nothing en Visual Basic) pour obtenir les informations de mise en forme des nombres à partir des paramètres régionaux définis dans le système d'exploitation. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IndexOutOfRangeException">
      <summary>Exception levée au moment d'une tentative d'accès à un élément d'un tableau ou d'une collection ayant un index en dehors de ses limites. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IndexOutOfRangeException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IndexOutOfRangeException" />.</summary>
    </member>
    <member name="M:System.IndexOutOfRangeException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IndexOutOfRangeException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message décrivant l'erreur. </param>
    </member>
    <member name="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IndexOutOfRangeException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas une référence null (Nothing en Visual Basic), l'exception actuelle est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.InsufficientExecutionStackException">
      <summary>Exception levée lorsque la pile d'exécution disponible est insuffisante pour permettre l'exécution de la plupart des méthodes.</summary>
    </member>
    <member name="M:System.InsufficientExecutionStackException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InsufficientExecutionStackException" />. </summary>
    </member>
    <member name="M:System.InsufficientExecutionStackException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InsufficientExecutionStackException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
    </member>
    <member name="M:System.InsufficientExecutionStackException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InsufficientExecutionStackException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="innerException">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="inner" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Int16">
      <summary>Représente un entier signé 16 bits.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.CompareTo(System.Int16)">
      <summary>Compare cette instance à un entier signé 16 bits spécifie et retourne un entier qui indique si la valeur de cette instance est inférieure, égale ou supérieure à la valeur de l'entier signé 16 bits spécifié.</summary>
      <returns>Nombre signé indiquant les valeurs relatives de cette instance et <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Entier à comparer. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.Equals(System.Int16)">
      <summary>Retourne une valeur indiquant si cette instance est égale à une valeur <see cref="T:System.Int16" /> spécifiée.</summary>
      <returns>true si <paramref name="obj" /> possède la même valeur que cette instance ; sinon, false.</returns>
      <param name="obj">Valeur <see cref="T:System.Int16" /> à comparer à cette instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si cette instance équivaut à un objet spécifié.</summary>
      <returns>true si <paramref name="obj" /> est une instance de <see cref="T:System.Int16" /> et est égal à la valeur de cette instance ; sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Int16.MaxValue">
      <summary>Représente la plus grande valeur possible d'un <see cref="T:System.Int16" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Int16.MinValue">
      <summary>Représente la plus petite valeur possible de <see cref="T:System.Int16" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre en son équivalent entier 16 bits signé.</summary>
      <returns>Entier 16 bits signé équivalant au nombre contenu dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Convertit une représentation d'un nombre sous forme de chaîne dans un style spécifié en entier 16 bits signé équivalent.</summary>
      <returns>Entier 16 bits signé équivalant au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="style">Combinaison de bits des valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. -or-<paramref name="s" /> includes non-zero fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un style et un format propre à une culture spécifiés en entier 16 bits signé équivalent.</summary>
      <returns>Entier 16 bits signé équivalant au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="style">Combinaison de bits de valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> qui fournit des informations de format propres à la culture concernant <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. -or-<paramref name="s" /> includes non-zero fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String,System.IFormatProvider)">
      <summary>Convertit la représentation d'un nombre sous forme de chaîne dans un format propre à une culture spécifié en entier 16 bits signé équivalent.</summary>
      <returns>Entier 16 bits signé équivalant au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> qui fournit des informations de format propres à la culture concernant <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</summary>
      <returns>Entier signé indiquant l'ordre relatif de cette instance et <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Objet à comparer à cette instance ou null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Int16" />. </exception>
    </member>
    <member name="M:System.Int16.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Int16.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true si la valeur de l'instance actuelle est différente de zéro ; sinon, false.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Byte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Char" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Cette conversion n'est pas prise en charge.Aucune valeur n'est retournée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Double" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, inchangée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.SByte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Single" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <paramref name="type" />.</returns>
      <param name="type">Type dans lequel convertir cette valeur <see cref="T:System.Int16" />.</param>
      <param name="provider">Implémentation de <see cref="T:System.IFormatProvider" /> qui fournit des informations sur le format de la valeur retournée.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, inchangée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int16.ToString">
      <summary>Convertit la valeur numérique de cette instance en sa représentation équivalente sous forme de chaîne.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, avec un signe moins si la valeur est négative et une séquence de chiffres allant de 0 à 9 sans zéros non significatifs.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.ToString(System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide des informations de format spécifiques à la culture donnée.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="provider" />.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> qui fournit des informations de format propres à la culture. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.ToString(System.String)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente en utilisant le format spécifié.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="format" />.</returns>
      <param name="format">Chaîne de format numérique.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.ToString(System.String,System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en représentation sous forme de chaîne équivalente à l'aide du format spécifié et des informations de mise en forme spécifiques à la culture.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, telle que spécifiée par <paramref name="format" /> et <paramref name="provider" />.</returns>
      <param name="format">Chaîne de format numérique.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un style et un format propre à une culture spécifiés en entier 16 bits signé équivalent.Une valeur de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne contenant un nombre à convertir.La chaîne est interprétée à l'aide du style spécifié par <paramref name="style" />.</param>
      <param name="style">Combinaison de bits de valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de l'entier 16 bits signé équivalente au nombre contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, qu'il n'est pas dans un format conforme à <paramref name="style" /> ou qu'il représente un nombre inférieur à <see cref="F:System.Int16.MinValue" /> ou supérieur à <see cref="F:System.Int16.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.TryParse(System.String,System.Int16@)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre en son équivalent entier 16 bits signé.Une valeur de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de l'entier 16 bits signé équivalente au nombre contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, n'est pas au format approprié ou représente un nombre inférieur à <see cref="F:System.Int16.MinValue" /> ou supérieur à <see cref="F:System.Int16.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Int32">
      <summary>Représente un entier signé 32 bits.Pour parcourir le code source de .NET Framework pour ce type, consultez la Source de référence.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.CompareTo(System.Int32)">
      <summary>Compare cette instance à un entier 32 bits signé et retourne une indication de leurs valeurs relatives.</summary>
      <returns>Nombre signé indiquant les valeurs relatives de cette instance et <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Entier à comparer. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.Equals(System.Int32)">
      <summary>Retourne une valeur indiquant si cette instance est égale à une valeur <see cref="T:System.Int32" /> spécifiée. </summary>
      <returns>true si <paramref name="obj" /> possède la même valeur que cette instance ; sinon, false.</returns>
      <param name="obj">Valeur <see cref="T:System.Int32" /> à comparer à cette instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si cette instance équivaut à un objet spécifié.</summary>
      <returns>true si <paramref name="obj" /> est une instance de <see cref="T:System.Int32" /> et est égal à la valeur de cette instance ; sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Int32.MaxValue">
      <summary>Représente la plus grande valeur possible d'un <see cref="T:System.Int32" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Int32.MinValue">
      <summary>Représente la plus petite valeur possible de <see cref="T:System.Int32" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre en son équivalent entier 32 bits signé.</summary>
      <returns>Entier 32 bits signé équivalant au nombre contenu dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Convertit une représentation d'un nombre sous forme de chaîne dans un style spécifié en entier 32 bits signé équivalent.</summary>
      <returns>Entier 32 bits signé équivalant au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="style">Combinaison de bits des valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un style et un format propre à une culture spécifiés en entier 32 bits signé équivalent.</summary>
      <returns>Entier 32 bits signé équivalant au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="style">Combinaison de bits de valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Objet qui fournit des informations spécifiques à la culture concernant le format de <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String,System.IFormatProvider)">
      <summary>Convertit la représentation d'un nombre sous forme de chaîne dans un format propre à une culture spécifié en entier 32 bits signé équivalent.</summary>
      <returns>Entier 32 bits signé équivalant au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</summary>
      <returns>Entier signé indiquant l'ordre relatif de cette instance et <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Objet à comparer à cette instance ou null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an <see cref="T:System.Int32" />. </exception>
    </member>
    <member name="M:System.Int32.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true si la valeur de l'instance actuelle est différente de zéro ; sinon, false.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Byte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Char" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Cette conversion n'est pas prise en charge.Aucune valeur n'est retournée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Double" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int16" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, inchangée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.SByte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Single" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <paramref name="type" />.</returns>
      <param name="type">Type dans lequel convertir cette valeur <see cref="T:System.Int32" />.</param>
      <param name="provider">Objet qui fournit des informations sur le format de la valeur retournée.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt16" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int32.ToString">
      <summary>Convertit la valeur numérique de cette instance en sa représentation équivalente sous forme de chaîne.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, avec un signe négatif si la valeur est négative et une séquence de chiffres allant de 0 à 9 sans zéros non significatifs.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.ToString(System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide des informations de format spécifiques à la culture donnée.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="provider" />.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.ToString(System.String)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente en utilisant le format spécifié.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="format" />.</returns>
      <param name="format">Chaîne de format numérique standard ou personnalisée.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.ToString(System.String,System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide du format spécifié et des informations de format spécifiques à la culture.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, telle que spécifiée par <paramref name="format" /> et <paramref name="provider" />.</returns>
      <param name="format">Chaîne de format numérique standard ou personnalisée.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un style et un format propre à une culture spécifiés en entier 32 bits signé équivalent.Une valeur de retour indique si la conversion a réussi.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne contenant un nombre à convertir.La chaîne est interprétée à l'aide du style spécifié par <paramref name="style" />.</param>
      <param name="style">Combinaison de bits de valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de l'entier signé 32 bits équivalente au nombre contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, qu'il n'est pas dans un format conforme à <paramref name="style" /> ou qu'il représente un nombre inférieur à <see cref="F:System.Int32.MinValue" /> ou supérieur à <see cref="F:System.Int32.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.TryParse(System.String,System.Int32@)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre en son équivalent entier 32 bits signé.Une valeur de retour indique si la conversion a réussi.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de l'entier signé 32 bits équivalente au nombre contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, n'est pas au format approprié ou représente un nombre inférieur à <see cref="F:System.Int32.MinValue" /> ou supérieur à <see cref="F:System.Int32.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Int64">
      <summary>Représente un entier signé 64 bits.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.CompareTo(System.Int64)">
      <summary>Compare cette instance à un entier 64 bits signé et retourne une indication de leurs valeurs relatives.</summary>
      <returns>Nombre signé indiquant les valeurs relatives de cette instance et <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Entier à comparer. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.Equals(System.Int64)">
      <summary>Retourne une valeur indiquant si cette instance est égale à une valeur <see cref="T:System.Int64" /> spécifiée.</summary>
      <returns>true si <paramref name="obj" /> possède la même valeur que cette instance ; sinon, false.</returns>
      <param name="obj">Valeur <see cref="T:System.Int64" /> à comparer à cette instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si cette instance équivaut à un objet spécifié.</summary>
      <returns>true si <paramref name="obj" /> est une instance de <see cref="T:System.Int64" /> et est égal à la valeur de cette instance ; sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Int64.MaxValue">
      <summary>Représente la plus grande valeur possible d'un Int64.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Int64.MinValue">
      <summary>Représente la plus petite valeur possible de Int64.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre en son équivalent entier 64 bits signé.</summary>
      <returns>Entier 64 bits signé équivalant au nombre contenu dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Convertit une représentation d'un nombre sous forme de chaîne dans un style spécifié en entier 64 bits signé équivalent.</summary>
      <returns>Entier 64 bits signé équivalant au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="style">Combinaison d'opérations de bits de valeurs <see cref="T:System.Globalization.NumberStyles" /> indiquant le format autorisé de <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.-or-<paramref name="style" /> supports fractional digits but <paramref name="s" /> includes non-zero fractional digits. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un style et un format propre à une culture spécifiés en entier 64 bits signé équivalent.</summary>
      <returns>Entier 64 bits signé équivalant au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="style">Combinaison de bits de valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> qui fournit des informations de format propres à la culture concernant <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. -or-<paramref name="style" /> supports fractional digits, but <paramref name="s" /> includes non-zero fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String,System.IFormatProvider)">
      <summary>Convertit la représentation d'un nombre sous forme de chaîne dans un format propre à une culture spécifié en entier 64 bits signé équivalent.</summary>
      <returns>Entier 64 bits signé équivalant au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</summary>
      <returns>Entier signé indiquant l'ordre relatif de cette instance et <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Objet à comparer à cette instance ou null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an <see cref="T:System.Int64" />. </exception>
    </member>
    <member name="M:System.Int64.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Int64.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true si la valeur de l'instance actuelle est différente de zéro ; sinon, false.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Byte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Char" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Cette conversion n'est pas prise en charge.Aucune valeur n'est retournée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Double" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int16" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, inchangée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.SByte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Single" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <paramref name="type" />.</returns>
      <param name="type">Type dans lequel convertir cette valeur <see cref="T:System.Int64" />.</param>
      <param name="provider">Implémentation de <see cref="T:System.IFormatProvider" /> qui fournit des informations sur le format de la valeur retournée.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt16" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Int64.ToString">
      <summary>Convertit la valeur numérique de cette instance en sa représentation équivalente sous forme de chaîne.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, avec un signe moins si la valeur est négative et une séquence de chiffres allant de 0 à 9 sans zéros non significatifs.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.ToString(System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide des informations de format spécifiques à la culture donnée.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="provider" />.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> qui fournit des informations de format propres à la culture. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.ToString(System.String)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente en utilisant le format spécifié.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="format" />.</returns>
      <param name="format">Chaîne de format numérique.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.ToString(System.String,System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide du format spécifié et des informations de format spécifiques à la culture.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, telle que spécifiée par <paramref name="format" /> et <paramref name="provider" />.</returns>
      <param name="format">Chaîne de format numérique.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture se rapportant à cette instance. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un style et un format propre à une culture spécifiés en entier 64 bits signé équivalent.Une valeur de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne contenant un nombre à convertir.La chaîne est interprétée à l'aide du style spécifié par <paramref name="style" />.</param>
      <param name="style">Combinaison de bits de valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de l'entier signé 64 bits équivalente au nombre contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, qu'il n'est pas dans un format conforme à <paramref name="style" /> ou qu'il représente un nombre inférieur à <see cref="F:System.Int64.MinValue" /> ou supérieur à <see cref="F:System.Int64.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.TryParse(System.String,System.Int64@)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre en son équivalent entier 64 bits signé.Une valeur de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de l'entier signé 64 bits équivalente au nombre contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, n'est pas au format approprié ou représente un nombre inférieur à <see cref="F:System.Int64.MinValue" /> ou supérieur à <see cref="F:System.Int64.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.IntPtr">
      <summary>Type spécifique à la plateforme, utilisé pour représenter un pointeur ou un handle.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.IntPtr" /> à l'aide du pointeur ou handle 32 bits spécifié.</summary>
      <param name="value">Pointeur ou handle contenu dans un entier 32 bits signé. </param>
    </member>
    <member name="M:System.IntPtr.#ctor(System.Int64)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.IntPtr" /> à l'aide du pointeur 64 bits spécifié.</summary>
      <param name="value">Pointeur ou handle contenu dans un entier 64 bits signé. </param>
      <exception cref="T:System.OverflowException">Sur une plateforme 32 bits, <paramref name="value" /> est trop élevé ou trop bas pour être représenté en tant que <see cref="T:System.IntPtr" />. </exception>
    </member>
    <member name="M:System.IntPtr.#ctor(System.Void*)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.IntPtr" /> à l'aide du pointeur spécifié vers un type non spécifié.</summary>
      <param name="value">Pointeur vers un type non spécifié. </param>
    </member>
    <member name="M:System.IntPtr.Add(System.IntPtr,System.Int32)">
      <summary>Ajoute un offset à la valeur d'un pointeur.</summary>
      <returns>Nouveau pointeur qui reflète l'ajout d'un <paramref name="offset" /> au <paramref name="pointer" />.</returns>
      <param name="pointer">Pointeur auquel ajouter l'offset.</param>
      <param name="offset">Offset à ajouter.</param>
    </member>
    <member name="M:System.IntPtr.Equals(System.Object)">
      <summary>Renvoie une valeur indiquant si cette instance équivaut à un objet spécifié.</summary>
      <returns>true si <paramref name="obj" /> est une instance de <see cref="T:System.IntPtr" /> et est égal à la valeur de cette instance ; sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance ou null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IntPtr.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)">
      <summary>Ajoute un offset à la valeur d'un pointeur.</summary>
      <returns>Nouveau pointeur qui reflète l'ajout d'un <paramref name="offset" /> au <paramref name="pointer" />.</returns>
      <param name="pointer">Pointeur auquel ajouter l'offset.</param>
      <param name="offset">Offset à ajouter.</param>
    </member>
    <member name="M:System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)">
      <summary>Détermine si deux instances spécifiées de <see cref="T:System.IntPtr" /> sont égales.</summary>
      <returns>true si <paramref name="value1" /> est égal à <paramref name="value2" /> ; sinon, false.</returns>
      <param name="value1">Premier pointeur ou handle à comparer.</param>
      <param name="value2">Second pointeur ou handle à comparer.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.Int32)~System.IntPtr">
      <summary>Convertit la valeur d'un entier 32 bits signé en <see cref="T:System.IntPtr" />.</summary>
      <returns>Nouvelle instance de <see cref="T:System.IntPtr" /> initialisée avec <paramref name="value" />.</returns>
      <param name="value">Entier signe 32 bits. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.Int64)~System.IntPtr">
      <summary>Convertit la valeur d'un entier 64 bits signé en <see cref="T:System.IntPtr" />.</summary>
      <returns>Nouvelle instance de <see cref="T:System.IntPtr" /> initialisée avec <paramref name="value" />.</returns>
      <param name="value">Entier signé 64 bits. </param>
      <exception cref="T:System.OverflowException">Sur une plateforme 32 bits, <paramref name="value" /> est trop élevé pour être représenté en tant que <see cref="T:System.IntPtr" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int64">
      <summary>Convertit la valeur du <see cref="T:System.IntPtr" /> spécifié en entier 64 bits signé.</summary>
      <returns>Contenu de <paramref name="value" />.</returns>
      <param name="value">Pointeur ou handle à convertir.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Void*">
      <summary>Convertit la valeur du <see cref="T:System.IntPtr" /> spécifié en pointeur vers un type non spécifié.</summary>
      <returns>Contenu de <paramref name="value" />.</returns>
      <param name="value">Pointeur ou handle à convertir. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int32">
      <summary>Convertit la valeur du <see cref="T:System.IntPtr" /> spécifié en entier 32 bits signé.</summary>
      <returns>Contenu de <paramref name="value" />.</returns>
      <param name="value">Pointeur ou handle à convertir.</param>
      <exception cref="T:System.OverflowException">Sur une plateforme 64 bits, <paramref name="value" /> a une valeur trop élevée pour être représenté en tant qu'entier 32 bits signé. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.Void*)~System.IntPtr">
      <summary>Convertit le pointeur spécifié vers un type non spécifié en <see cref="T:System.IntPtr" />.</summary>
      <returns>Nouvelle instance de <see cref="T:System.IntPtr" /> initialisée avec <paramref name="value" />.</returns>
      <param name="value">Pointeur vers un type non spécifié. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)">
      <summary>Détermine si deux instances spécifiées de <see cref="T:System.IntPtr" /> ne sont pas égales.</summary>
      <returns>true si <paramref name="value1" /> n'est pas égal à <paramref name="value2" /> ; sinon, false.</returns>
      <param name="value1">Premier pointeur ou handle à comparer. </param>
      <param name="value2">Second pointeur ou handle à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)">
      <summary>Soustrait un offset de la valeur d'un pointeur.</summary>
      <returns>Nouveau pointeur qui reflète la soustraction de l'<paramref name="offset" /> du <paramref name="pointer" />.</returns>
      <param name="pointer">Pointeur auquel soustraire l'offset.</param>
      <param name="offset">Offset à soustraire.</param>
    </member>
    <member name="P:System.IntPtr.Size">
      <summary>Obtient la taille de cette instance.</summary>
      <returns>Taille d'un pointeur ou d'un handle sur ce processus, mesurée en octets.Sur un processus 32 bits, cette propriété a la valeur 4, sur un processus 64 bits, elle a la valeur 8.Vous pouvez définir le type de processus en définissant le commutateur de /platform lorsque vous compilez votre code avec les compilateurs C# et Visual Basic.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.Subtract(System.IntPtr,System.Int32)">
      <summary>Soustrait un offset de la valeur d'un pointeur.</summary>
      <returns>Nouveau pointeur qui reflète la soustraction de l'<paramref name="offset" /> du <paramref name="pointer" />.</returns>
      <param name="pointer">Pointeur auquel soustraire l'offset.</param>
      <param name="offset">Offset à soustraire.</param>
    </member>
    <member name="M:System.IntPtr.ToInt32">
      <summary>Convertit la valeur de cette instance en entier 32 bits signé.</summary>
      <returns>Entier 32 bits signé équivalant à la valeur de cette instance.</returns>
      <exception cref="T:System.OverflowException">Sur une plateforme 64 bits, cette instance a une valeur trop élevée ou trop basse pour être représentée en tant qu'entier 32 bits signé. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToInt64">
      <summary>Convertit la valeur de cette instance en entier 64 bits signé.</summary>
      <returns>Entier 64 bits signé équivalant à la valeur de cette instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToPointer">
      <summary>Convertit la valeur de cette instance en pointeur vers un type non spécifié.</summary>
      <returns>Pointeur vers <see cref="T:System.Void" /> ; c'est-à-dire pointeur vers une mémoire contenant des données de type non spécifié.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToString">
      <summary>Convertit la valeur numérique de l'objet en cours <see cref="T:System.IntPtr" /> en sa représentation chaîne équivalente.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToString(System.String)">
      <summary>Convertit la valeur numérique de l'objet en cours <see cref="T:System.IntPtr" /> en sa représentation chaîne équivalente.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de l'objet <see cref="T:System.IntPtr" /> actuel.</returns>
      <param name="format">Spécification de format qui régit la façon dont l'objet <see cref="T:System.IntPtr" /> actuel est converti. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.IntPtr.Zero">
      <summary>Champ en lecture seule représentant un pointeur ou un handle remis à zéro.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.InvalidCastException">
      <summary>Exception levée pour un casting non valide ou une conversion explicite.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.InvalidCastException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidCastException" />.</summary>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidCastException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message décrivant l'erreur. </param>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidCastException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="innerException">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidCastException" /> avec un message et un code d'erreur spécifiés.</summary>
      <param name="message">Message indiquant la raison pour laquelle l'exception s'est produite.</param>
      <param name="errorCode">Valeur (HRESULT) du code d'erreur associé à l'exception.</param>
    </member>
    <member name="T:System.InvalidOperationException">
      <summary>Exception levée en cas d'appel de méthode non valide pour l'état actuel de l'objet.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.InvalidOperationException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="M:System.InvalidOperationException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidOperationException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message décrivant l'erreur. </param>
    </member>
    <member name="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidOperationException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas une référence null (Nothing en Visual Basic), l'exception actuelle est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.InvalidProgramException">
      <summary>Exception levée lorsqu'un programme contient du langage MSIL (Microsoft Intermediate Language) ou des métadonnées non valides.Cela indique généralement un bogue dans le compilateur qui a généré le programme.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.InvalidProgramException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidProgramException" /> avec des propriétés par défaut.</summary>
    </member>
    <member name="M:System.InvalidProgramException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidProgramException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
    </member>
    <member name="M:System.InvalidProgramException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidProgramException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="inner">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="inner" /> n'est pas une référence null (Nothing en Visual Basic), l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.InvalidTimeZoneException">
      <summary>Exception qui est levée lorsque les informations de fuseau horaire ne sont pas valides.</summary>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidTimeZoneException" /> avec un message fourni par le système.</summary>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidTimeZoneException" /> avec la chaîne de message spécifiée.</summary>
      <param name="message">Chaîne qui décrit l'exception.</param>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidTimeZoneException" /> avec un message d'erreur spécifié et une référence à l'exception interne qui est à l'origine de cette exception.</summary>
      <param name="message">Chaîne qui décrit l'exception.    </param>
      <param name="innerException">Exception qui constitue la cause de l'exception actuelle.  </param>
    </member>
    <member name="T:System.IObservable`1">
      <summary>Définit un fournisseur pour les notifications basées sur les transmissions de type push.</summary>
      <typeparam name="T">Objet qui fournit des informations de notification.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
    </member>
    <member name="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
      <summary>Notifie le fournisseur qu'un observateur doit recevoir des notifications.</summary>
      <returns>Une référence à une interface qui permet aux observateurs d'arrêter de recevoir des notifications avant que le fournisseur n'ait terminé de les envoyer.</returns>
      <param name="observer">Objet devant recevoir les notifications.</param>
    </member>
    <member name="T:System.IObserver`1">
      <summary>Fournit un mécanisme permettant de recevoir des notifications basées sur des transmissions de type push.</summary>
      <typeparam name="T">Objet qui fournit des informations de notification.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
    </member>
    <member name="M:System.IObserver`1.OnCompleted">
      <summary>Notifie l'observateur que le fournisseur a terminé d'envoyer des notifications basées sur des transmissions de type push.</summary>
    </member>
    <member name="M:System.IObserver`1.OnError(System.Exception)">
      <summary>Notifie l'observateur que le fournisseur a rencontré une condition d'erreur.</summary>
      <param name="error">Objet qui contient des informations supplémentaires sur l'erreur.</param>
    </member>
    <member name="M:System.IObserver`1.OnNext(`0)">
      <summary>Fournit de nouvelles données à l'observateur.</summary>
      <param name="value">Informations de la notification actuelle.</param>
    </member>
    <member name="T:System.IProgress`1">
      <summary>Définit un fournisseur pour les mises à jour de progression.</summary>
      <typeparam name="T">Type de valeur de mise à jour de la progression.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
    </member>
    <member name="M:System.IProgress`1.Report(`0)">
      <summary>Signale une mise à jour de progression.</summary>
      <param name="value">Valeur de la progression mise à jour.</param>
    </member>
    <member name="T:System.Lazy`1">
      <summary>Fournit une prise en charge des initialisations tardives.</summary>
      <typeparam name="T">Type d'objet initialisé de façon tardive.</typeparam>
    </member>
    <member name="M:System.Lazy`1.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Lazy`1" />.Lorsque l'initialisation tardive se produit, le constructeur par défaut du type cible est utilisé.</summary>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Lazy`1" />.Lorsque l'initialisation tardive se produit, le constructeur par défaut du type cible et le mode d'initialisation spécifié sont utilisés.</summary>
      <param name="isThreadSafe">true pour que cette instance puisse être utilisée simultanément par plusieurs threads ; false pour que l'instance ne puisse être utilisée que par un thread à la fois. </param>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Lazy`1" />.Lorsque l'initialisation tardive se produit, la fonction d'initialisation spécifiée est utilisée.</summary>
      <param name="valueFactory">Délégué appelé pour produire la valeur d'initialisation différée lorsque cela est nécessaire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="valueFactory" /> a la valeur null. </exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0},System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Lazy`1" />.Lorsque l'initialisation tardive se produit, la fonction d'initialisation et le mode d'initialisation spécifiés sont utilisés.</summary>
      <param name="valueFactory">Délégué appelé pour produire la valeur d'initialisation différée lorsque cela est nécessaire.</param>
      <param name="isThreadSafe">true pour que cette instance puisse être utilisée simultanément par plusieurs threads ; false pour que cette instance ne puisse être utilisée que par un thread à la fois.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="valueFactory" /> a la valeur null. </exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0},System.Threading.LazyThreadSafetyMode)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Lazy`1" /> qui utilise la fonction d'initialisation et le mode de cohérence de thread spécifiés.</summary>
      <param name="valueFactory">Délégué appelé pour produire la valeur d'initialisation différée lorsque cela est nécessaire.</param>
      <param name="mode">Une des valeurs d'énumération qui spécifie le mode de cohérence de thread. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> contient une valeur non valide. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="valueFactory" /> a la valeur null. </exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Threading.LazyThreadSafetyMode)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Lazy`1" /> qui utilise le constructeur par défaut de <paramref name="T" /> et le mode de cohérence de thread spécifié.</summary>
      <param name="mode">Une des valeurs d'énumération qui spécifie le mode de cohérence de thread. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> contient une valeur non valide. </exception>
    </member>
    <member name="P:System.Lazy`1.IsValueCreated">
      <summary>Obtient une valeur qui indique si une valeur a été créée pour cette instance <see cref="T:System.Lazy`1" />.</summary>
      <returns>true si une valeur a été créée pour cette instance <see cref="T:System.Lazy`1" /> ; sinon, false.</returns>
    </member>
    <member name="M:System.Lazy`1.ToString">
      <summary>Crée et retourne une représentation sous forme de chaîne de la propriété <see cref="P:System.Lazy`1.Value" /> de cette instance.</summary>
      <returns>Résultat de l'appel à la méthode <see cref="M:System.Object.ToString" /> sur la propriété <see cref="P:System.Lazy`1.Value" /> pour cette instance, si la valeur a été créée (en d'autres termes, si la propriété <see cref="P:System.Lazy`1.IsValueCreated" /> retourne true).Sinon, une chaîne indiquant que la valeur n'a pas été créée.</returns>
      <exception cref="T:System.NullReferenceException">La propriété <see cref="P:System.Lazy`1.Value" /> est null.</exception>
    </member>
    <member name="P:System.Lazy`1.Value">
      <summary>Obtient la valeur initialisée tardivement de l'objet <see cref="T:System.Lazy`1" /> en cours.</summary>
      <returns>Valeur initialisée tardivement de l'instance <see cref="T:System.Lazy`1" /> en cours.</returns>
      <exception cref="T:System.MemberAccessException">L'instance <see cref="T:System.Lazy`1" /> est initialisée pour utiliser le constructeur par défaut du type initialisé tardivement et les autorisations pour accéder au constructeur manquent. </exception>
      <exception cref="T:System.MissingMemberException">L'instance <see cref="T:System.Lazy`1" /> est initialisée pour utiliser le constructeur par défaut du type initialisé tardivement et ce type n'a pas de constructeur public sans paramètre. </exception>
      <exception cref="T:System.InvalidOperationException">La fonction d'initialisation essaie d'accéder à <see cref="P:System.Lazy`1.Value" /> sur cette instance. </exception>
    </member>
    <member name="T:System.Lazy`2">
      <summary>Fournit une référence indirecte tardive à un objet et ses métadonnées associées pour une utilisation par Managed Extensibility Framework.</summary>
      <typeparam name="T">Type de l'objet référencé.</typeparam>
      <typeparam name="TMetadata">Type de métadonnées.</typeparam>
    </member>
    <member name="M:System.Lazy`2.#ctor(System.Func{`0},`1)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Lazy`2" /> avec les métadonnées spécifiées qui utilise la fonction spécifiée pour obtenir l'objet référencé.</summary>
      <param name="valueFactory">Fonction qui retourne l'objet référencé.</param>
      <param name="metadata">Métadonnées associées à l'objet référencé.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Lazy`2" /> avec les métadonnées spécifiées et la valeur de sécurité des threads qui utilise la fonction spécifiée pour obtenir l'objet référencé.</summary>
      <param name="valueFactory">Fonction qui retourne l'objet référencé.</param>
      <param name="metadata">Métadonnées associées à l'objet référencé.</param>
      <param name="isThreadSafe">Indique si l'objet <see cref="T:System.Lazy`2" /> créé sera thread-safe.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Lazy`2" /> avec les métadonnées spécifiées et le mode de synchronisation de threads qui utilise la fonction définie pour obtenir l'objet référencé.</summary>
      <param name="valueFactory">Fonction qui retourne l'objet référencé.</param>
      <param name="metadata">Métadonnées associées à l'objet référencé.</param>
      <param name="mode">Mode de synchronisation de threads.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(`1)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Lazy`2" /> avec les métadonnées spécifiées.</summary>
      <param name="metadata">Métadonnées associées à l'objet référencé.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(`1,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Lazy`2" /> avec les métadonnées et la valeur de sécurité des threads spécifiées.</summary>
      <param name="metadata">Métadonnées associées à l'objet référencé.</param>
      <param name="isThreadSafe">Indique si l'objet <see cref="T:System.Lazy`2" /> créé sera thread-safe.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Lazy`2" /> avec les métadonnées et le mode de synchronisation de threads spécifiés.</summary>
      <param name="metadata">Métadonnées associées à l'objet référencé.</param>
      <param name="mode">Mode de synchronisation de threads.</param>
    </member>
    <member name="P:System.Lazy`2.Metadata">
      <summary>Obtient les métadonnées associées à l'objet référencé.</summary>
      <returns>Métadonnées associées à l'objet référencé.</returns>
    </member>
    <member name="T:System.MemberAccessException">
      <summary>Exception levée lorsqu'une tentative d'accès à un membre de classe échoue.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MemberAccessException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.MemberAccessException" />.</summary>
    </member>
    <member name="M:System.MemberAccessException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.MemberAccessException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message décrivant l'erreur. </param>
    </member>
    <member name="M:System.MemberAccessException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.MemberAccessException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="inner">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="inner" /> n'est pas une référence null (Nothing en Visual Basic), l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.MethodAccessException">
      <summary>Exception levée lors d'une tentative non valide d'accès à une méthode, par exemple l'accès à une méthode privée à partir d'un code d'un niveau de confiance partiel.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MethodAccessException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.MethodAccessException" />, en affectant un message système décrivant l'erreur, tel que « La tentative d'accès à la méthode a échoué. », à la propriété <see cref="P:System.Exception.Message" /> de la nouvelle instance. Ce message prend en considération la culture du système en cours.</summary>
    </member>
    <member name="M:System.MethodAccessException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.MethodAccessException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'erreur. </param>
    </member>
    <member name="M:System.MethodAccessException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.MethodAccessException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="inner">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="inner" /> n'est pas une référence null (Nothing en Visual Basic), l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.MissingFieldException">
      <summary>Exception levée lors d'une tentative d'accès dynamique à un champ qui n'existe pas.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MissingFieldException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.MissingFieldException" />.</summary>
    </member>
    <member name="M:System.MissingFieldException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.MissingFieldException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'erreur. </param>
    </member>
    <member name="M:System.MissingFieldException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.MissingFieldException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="inner">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="inner" /> n'est pas une référence null (Nothing en Visual Basic), l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="P:System.MissingFieldException.Message">
      <summary>Obtient la chaîne de texte montrant la signature du champ manquant, le nom de la classe et le nom du champ.Cette propriété est en lecture seule.</summary>
      <returns>Chaîne du message d'erreur.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.MissingMemberException">
      <summary>Exception levée lors d'une tentative d'accès dynamique à un membre de classe qui n'existe pas.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MissingMemberException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.MissingMemberException" />.</summary>
    </member>
    <member name="M:System.MissingMemberException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.MissingMemberException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message décrivant l'erreur. </param>
    </member>
    <member name="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.MissingMemberException" /> avec un message d'erreur spécifié et une référence à l'exception interne qui est la cause première de cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="inner">Instance de <see cref="T:System.Exception" /> ayant provoqué le Exception en cours.Si <paramref name="inner" /> n'est pas une référence null, (Nothing en Visual Basic), le Exception en cours est alors levé dans un bloc catch gérant <paramref name="inner" />.</param>
    </member>
    <member name="P:System.MissingMemberException.Message">
      <summary>Obtient la chaîne de texte montrant le nom de la classe, le nom du membre et la signature du champ manquant.</summary>
      <returns>Chaîne du message d'erreur.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.MissingMethodException">
      <summary>Exception levée lors d'une tentative d'accès dynamique à une méthode qui n'existe pas.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MissingMethodException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.MissingMethodException" />.</summary>
    </member>
    <member name="M:System.MissingMethodException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.MissingMethodException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'erreur. </param>
    </member>
    <member name="M:System.MissingMethodException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.MissingMethodException" /> avec un message d'erreur spécifié et une référence à l'exception interne qui est à l'origine de cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="inner">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="inner" /> n'est pas une référence null (Nothing en Visual Basic), l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="P:System.MissingMethodException.Message">
      <summary>Obtient la chaîne de texte montrant le nom de la classe, le nom de la méthode et la signature de la méthode manquante.Cette propriété est en lecture seule.</summary>
      <returns>Chaîne du message d'erreur.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.MTAThreadAttribute">
      <summary>Indique que le modèle de thread COM d'une application est un modèle MTA (MultiThreaded Apartment). </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.MTAThreadAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.MTAThreadAttribute" />.</summary>
    </member>
    <member name="T:System.MulticastDelegate">
      <summary>Représente un délégué multicast, c'est-à-dire un délégué dont la liste d'appel peut comporter plusieurs éléments.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.Equals(System.Object)">
      <summary>Détermine si ce délégué multicast et l'objet spécifié sont égaux.</summary>
      <returns>true si <paramref name="obj" /> et cette instance ont les mêmes listes d'appel ; sinon false.</returns>
      <param name="obj">Objet à comparer avec cette instance. </param>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.GetInvocationList">
      <summary>Retourne la liste d'appel de ce délégué multicast, dans l'ordre d'appel.</summary>
      <returns>Tableau de délégués dont les listes d'appel correspondent collectivement à la liste d'appel de cette instance.</returns>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.op_Equality(System.MulticastDelegate,System.MulticastDelegate)">
      <summary>Détermine si deux objets <see cref="T:System.MulticastDelegate" /> sont égaux.</summary>
      <returns>true si <paramref name="d1" /> et <paramref name="d2" /> ont les mêmes listes d'appel ; sinon false.</returns>
      <param name="d1">Opérande gauche. </param>
      <param name="d2">Opérande droit. </param>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.op_Inequality(System.MulticastDelegate,System.MulticastDelegate)">
      <summary>Détermine si deux objets <see cref="T:System.MulticastDelegate" /> ne sont pas égaux.</summary>
      <returns>true si <paramref name="d1" /> et <paramref name="d2" /> n'ont pas les mêmes listes d'appel ; sinon false.</returns>
      <param name="d1">Opérande gauche. </param>
      <param name="d2">Opérande droit. </param>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.NotImplementedException">
      <summary>Exception levée lorsqu'une méthode ou une opération demandée n'est pas implémentée.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.NotImplementedException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.NotImplementedException" /> avec des propriétés par défaut.</summary>
    </member>
    <member name="M:System.NotImplementedException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.NotImplementedException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
    </member>
    <member name="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.NotImplementedException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="inner">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="inner" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.NotSupportedException">
      <summary>Exception levée lorsqu'une méthode appelée n'est pas prise en charge ou lors d'une tentative de lecture, recherche ou écriture dans un flux qui ne prend pas en charge la fonctionnalité appelée.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.NotSupportedException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.NotSupportedException" />, en affectant un message système décrivant l'erreur à la propriété <see cref="P:System.Exception.Message" /> de la nouvelle instance.Ce message prend en considération la culture du système en cours.</summary>
    </member>
    <member name="M:System.NotSupportedException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.NotSupportedException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'erreur.Le contenu du <paramref name="message" /> doit être compréhensible pour les utilisateurs.L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture du système en cours.</param>
    </member>
    <member name="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.NotSupportedException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="innerException">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas une référence null, l'exception actuelle est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Nullable">
      <summary>Prend en charge un type valeur qui peut avoir la valeur null.Cette classe ne peut pas être héritée.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable.Compare``1(System.Nullable{``0},System.Nullable{``0})">
      <summary>Compare les valeurs relatives de deux objets <see cref="T:System.Nullable`1" />.</summary>
      <returns>Entier qui indique les valeurs relatives des paramètres <paramref name="n1" /> et <paramref name="n2" />.Valeur de retourDescription Inférieur à zéroLa propriété <see cref="P:System.Nullable`1.HasValue" /> pour <paramref name="n1" /> est false, et la propriété <see cref="P:System.Nullable`1.HasValue" /> pour <paramref name="n2" /> est true.ouLes propriétés <see cref="P:System.Nullable`1.HasValue" /> pour <paramref name="n1" /> et <paramref name="n2" /> sont true et la valeur de la propriété <see cref="P:System.Nullable`1.Value" /> pour <paramref name="n1" /> est inférieure à celle de la propriété <see cref="P:System.Nullable`1.Value" /> pour <paramref name="n2" />.ZéroLes propriétés <see cref="P:System.Nullable`1.HasValue" /> pour <paramref name="n1" /> et <paramref name="n2" /> ont la valeur false.ouLes propriétés <see cref="P:System.Nullable`1.HasValue" /> pour <paramref name="n1" /> et <paramref name="n2" /> sont true et la valeur de la propriété <see cref="P:System.Nullable`1.Value" /> pour <paramref name="n1" /> est égale à celle de la propriété <see cref="P:System.Nullable`1.Value" /> pour <paramref name="n2" />.Supérieure à zéroLa propriété <see cref="P:System.Nullable`1.HasValue" /> pour <paramref name="n1" /> est true, et la propriété <see cref="P:System.Nullable`1.HasValue" /> pour <paramref name="n2" /> est false.ouLes propriétés <see cref="P:System.Nullable`1.HasValue" /> pour <paramref name="n1" /> et <paramref name="n2" /> sont true et la valeur de la propriété <see cref="P:System.Nullable`1.Value" /> pour <paramref name="n1" /> est supérieure à celle de la propriété <see cref="P:System.Nullable`1.Value" /> pour <paramref name="n2" />.</returns>
      <param name="n1">Objet <see cref="T:System.Nullable`1" />.</param>
      <param name="n2">Objet <see cref="T:System.Nullable`1" />.</param>
      <typeparam name="T">Type valeur sous-jacent des paramètres <paramref name="n1" /> et <paramref name="n2" />.</typeparam>
    </member>
    <member name="M:System.Nullable.Equals``1(System.Nullable{``0},System.Nullable{``0})">
      <summary>Indique si deux objets <see cref="T:System.Nullable`1" /> spécifiés sont égaux.</summary>
      <returns>true si le paramètre <paramref name="n1" /> est égal au paramètre <paramref name="n2" /> ; sinon, false. La valeur de retour dépend des propriétés <see cref="P:System.Nullable`1.HasValue" /> et <see cref="P:System.Nullable`1.Value" /> des deux paramètres qui sont comparés.Valeur de retourDescription trueLes propriétés <see cref="P:System.Nullable`1.HasValue" /> pour <paramref name="n1" /> et <paramref name="n2" /> ont la valeur false. ouLes propriétés <see cref="P:System.Nullable`1.HasValue" /> pour <paramref name="n1" /> et <paramref name="n2" /> sont true et les propriétés <see cref="P:System.Nullable`1.Value" /> des paramètres sont égales.falseLa propriété <see cref="P:System.Nullable`1.HasValue" /> est true pour un paramètre et false pour l'autre paramètre.ouLes propriétés <see cref="P:System.Nullable`1.HasValue" /> pour <paramref name="n1" /> et <paramref name="n2" /> sont true et les propriétés <see cref="P:System.Nullable`1.Value" /> des paramètres ne sont pas égales.</returns>
      <param name="n1">Objet <see cref="T:System.Nullable`1" />.</param>
      <param name="n2">Objet <see cref="T:System.Nullable`1" />.</param>
      <typeparam name="T">Type valeur sous-jacent des paramètres <paramref name="n1" /> et <paramref name="n2" />.</typeparam>
    </member>
    <member name="M:System.Nullable.GetUnderlyingType(System.Type)">
      <summary>Retourne l'argument de type sous-jacent du type Nullable spécifié.</summary>
      <returns>L'argument de type du paramètre <paramref name="nullableType" />, si le paramètre <paramref name="nullableType" /> est un type Nullable générique fermé ; sinon, null. </returns>
      <param name="nullableType">Objet <see cref="T:System.Type" /> qui décrit un type Nullable générique fermé. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nullableType" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Nullable`1">
      <summary>Représente un type valeur qui peut avoir la valeur null.</summary>
      <typeparam name="T">Type valeur sous-jacent du type <see cref="T:System.Nullable`1" /> générique.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable`1.#ctor(`0)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Nullable`1" /> avec la valeur spécifiée. </summary>
      <param name="value">Un type valeur.</param>
    </member>
    <member name="M:System.Nullable`1.Equals(System.Object)">
      <summary>Indique si l'objet <see cref="T:System.Nullable`1" /> actuel est égal à un objet spécifié.</summary>
      <returns>true si le paramètre <paramref name="other" /> est égal à l'objet <see cref="T:System.Nullable`1" /> actuel ; sinon, false. Cette table décrit la façon dont l'égalité est définie pour les valeurs comparées : Valeur de retourDescriptiontrueLa propriété <see cref="P:System.Nullable`1.HasValue" /> est false, et le paramètre <paramref name="other" /> est null.Autrement dit, deux valeurs null sont égales par définition.ouLa propriété <see cref="P:System.Nullable`1.HasValue" /> a la valeur true, et la valeur retournée par la propriété <see cref="P:System.Nullable`1.Value" /> est égale au paramètre <paramref name="other" />.falseLa propriété <see cref="P:System.Nullable`1.HasValue" /> de la structure <see cref="T:System.Nullable`1" /> en cours a la valeur true, et le paramètre <paramref name="other" /> est null.ouLa propriété <see cref="P:System.Nullable`1.HasValue" /> de la structure <see cref="T:System.Nullable`1" /> en cours a la valeur false, et le paramètre <paramref name="other" /> n'est pas null.ouLa propriété <see cref="P:System.Nullable`1.HasValue" /> de la structure <see cref="T:System.Nullable`1" /> en cours a la valeur true, et la valeur retournée par la propriété <see cref="P:System.Nullable`1.Value" /> n'est pas égale au paramètre <paramref name="other" />.</returns>
      <param name="other">Objet.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable`1.GetHashCode">
      <summary>Récupère le code de hachage de l'objet retourné par la propriété <see cref="P:System.Nullable`1.Value" />.</summary>
      <returns>Code de hachage de l'objet retourné par la propriété <see cref="P:System.Nullable`1.Value" /> si la propriété <see cref="P:System.Nullable`1.HasValue" /> est true ou zéro si la propriété <see cref="P:System.Nullable`1.HasValue" /> est false. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable`1.GetValueOrDefault">
      <summary>Récupère la valeur de l'objet <see cref="T:System.Nullable`1" /> actuel ou la valeur par défaut de l'objet.</summary>
      <returns>Valeur de la propriété <see cref="P:System.Nullable`1.Value" /> si la propriété <see cref="P:System.Nullable`1.HasValue" /> est true ; sinon, la valeur par défaut de l'objet <see cref="T:System.Nullable`1" /> actuel.Le type de la valeur par défaut est l'argument de type de l'objet <see cref="T:System.Nullable`1" /> actuel et la valeur par défaut se compose uniquement de zéros binaires.</returns>
    </member>
    <member name="M:System.Nullable`1.GetValueOrDefault(`0)">
      <summary>Récupère la valeur de l'objet <see cref="T:System.Nullable`1" /> actuel ou la valeur par défaut spécifiée.</summary>
      <returns>Valeur de la propriété <see cref="P:System.Nullable`1.Value" /> si la propriété <see cref="P:System.Nullable`1.HasValue" /> est true ; sinon, paramètre <paramref name="defaultValue" />.</returns>
      <param name="defaultValue">Valeur à retourner si la propriété <see cref="P:System.Nullable`1.HasValue" /> est false.</param>
    </member>
    <member name="P:System.Nullable`1.HasValue">
      <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Nullable`1" /> actuel a une valeur valide de son type sous-jacent. </summary>
      <returns>true si l'objet <see cref="T:System.Nullable`1" /> actuel a une valeur ; false si l'objet <see cref="T:System.Nullable`1" /> actuel n'a aucune valeur.</returns>
    </member>
    <member name="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
      <summary>Définit une conversion explicite d'une instance <see cref="T:System.Nullable`1" /> à sa valeur sous-jacente. </summary>
      <returns>Valeur de la propriété <see cref="P:System.Nullable`1.Value" /> pour le paramètre <paramref name="value" />.</returns>
      <param name="value">Valeur de type nullable.</param>
    </member>
    <member name="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
      <summary>Crée un objet <see cref="T:System.Nullable`1" /> initialisé à une valeur spécifiée. </summary>
      <returns>Objet <see cref="T:System.Nullable`1" /> dont la propriété <see cref="P:System.Nullable`1.Value" /> est initialisée avec le paramètre <paramref name="value" />.</returns>
      <param name="value">Un type valeur.</param>
    </member>
    <member name="M:System.Nullable`1.ToString">
      <summary>Retourne la représentation textuelle de la valeur de l'objet <see cref="T:System.Nullable`1" /> actuel.</summary>
      <returns>Représentation textuelle de la valeur de l'objet <see cref="T:System.Nullable`1" /> actuel si la propriété <see cref="P:System.Nullable`1.HasValue" /> est true ou une chaîne vide ("") si la propriété <see cref="P:System.Nullable`1.HasValue" /> est false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Nullable`1.Value">
      <summary>Obtient la valeur de l'objet <see cref="T:System.Nullable`1" /> actuel si une valeur sous-jacente valide lui a été assignée.</summary>
      <returns>Valeur de l'objet <see cref="T:System.Nullable`1" /> actuel si la propriété <see cref="P:System.Nullable`1.HasValue" /> est true.Une exception est levée si la propriété <see cref="P:System.Nullable`1.HasValue" /> est false.</returns>
      <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Nullable`1.HasValue" /> a la valeur false.</exception>
    </member>
    <member name="T:System.NullReferenceException">
      <summary>Exception levée au moment d'une tentative de suppression de la référence à une référence d'objet null.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.NullReferenceException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.NullReferenceException" />, en affectant un message système décrivant l'erreur, tel que « La valeur null a été trouvée à l'emplacement où une instance d'un objet était requise. », à la propriété <see cref="P:System.Exception.Message" /> de la nouvelle instance. Ce message prend en considération la culture du système actuel.</summary>
    </member>
    <member name="M:System.NullReferenceException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.NullReferenceException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'erreur.Le contenu du <paramref name="message" /> doit être compréhensible pour les utilisateurs.L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</param>
    </member>
    <member name="M:System.NullReferenceException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.NullReferenceException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas null, l'exception actuelle est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Object">
      <summary>Prend en charge toutes les classes de la hiérarchie des classes du .NET Framework et fournit des services de bas niveau à des classes dérivées.Il s'agit de la classe de base fondamentale parmi toutes les classes du .NET Framework. Elle constitue la racine de la hiérarchie des types.Pour parcourir le code source .NET Framework correspondant à ce type, consultez la Source de référence.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Object.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Object" />.</summary>
    </member>
    <member name="M:System.Object.Equals(System.Object)">
      <summary>Détermine si l'objet spécifié est identique à l'objet actuel.</summary>
      <returns>true si l'objet spécifié est égal à l'objet actuel ; sinon, false.</returns>
      <param name="obj">Objet à comparer avec l'objet actuel. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.Equals(System.Object,System.Object)">
      <summary>Détermine si les instances d'objet spécifiées sont considérées comme égales.</summary>
      <returns>true si les objets sont considérés comme identiques ; sinon, false.Si à la fois <paramref name="objA" /> et <paramref name="objB" /> ont la valeur null, la méthode retourne true.</returns>
      <param name="objA">Premier objet à comparer. </param>
      <param name="objB">Second objet à comparer. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.Finalize">
      <summary>Autorise un objet à tenter de libérer des ressources et à exécuter d'autres opérations de nettoyage avant qu'il ne soit récupéré par une opération garbage collection.</summary>
    </member>
    <member name="M:System.Object.GetHashCode">
      <summary>Sert de fonction de hachage par défaut. </summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.GetType">
      <summary>Obtient le <see cref="T:System.Type" /> de l'instance actuelle.</summary>
      <returns>Type exact de l'instance actuelle au moment de l'exécution.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.MemberwiseClone">
      <summary>Crée une copie superficielle du <see cref="T:System.Object" /> actuel.</summary>
      <returns>Copie superficielle du <see cref="T:System.Object" /> actuel.</returns>
    </member>
    <member name="M:System.Object.ReferenceEquals(System.Object,System.Object)">
      <summary>Détermine si les instances de <see cref="T:System.Object" /> spécifiées sont identiques.</summary>
      <returns>true si <paramref name="objA" /> est la même instance que <paramref name="objB" /> ou s'il s'agit de deux valeurs null ; sinon, false.</returns>
      <param name="objA">Premier objet à comparer. </param>
      <param name="objB">Second objet à comparer. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.ToString">
      <summary>Retourne une chaîne qui représente l'objet actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ObjectDisposedException">
      <summary>Exception levée quand une opération est effectuée sur un objet supprimé.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ObjectDisposedException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ObjectDisposedException" /> avec une chaîne contenant le nom de l'objet supprimé.</summary>
      <param name="objectName">Chaîne contenant le nom de l'objet supprimé. </param>
    </member>
    <member name="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ObjectDisposedException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle.Si <paramref name="innerException" /> n'est pas null, l'exception actuelle est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ObjectDisposedException" /> avec le nom de l'objet et le message spécifiés.</summary>
      <param name="objectName">Nom de l'objet supprimé. </param>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
    </member>
    <member name="P:System.ObjectDisposedException.Message">
      <summary>Obtient le message décrivant l'erreur.</summary>
      <returns>Chaîne qui décrit l'erreur.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ObjectDisposedException.ObjectName">
      <summary>Obtient le nom de l'objet supprimé.</summary>
      <returns>Chaîne contenant le nom de l'objet supprimé.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.ObsoleteAttribute">
      <summary>Marque les éléments de programme qui ne sont plus utilisés.Cette classe ne peut pas être héritée.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ObsoleteAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ObsoleteAttribute" /> avec des propriétés par défaut.</summary>
    </member>
    <member name="M:System.ObsoleteAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ObsoleteAttribute" /> avec un message de solution spécifié.</summary>
      <param name="message">Chaîne de texte décrivant d'autres solutions. </param>
    </member>
    <member name="M:System.ObsoleteAttribute.#ctor(System.String,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ObsoleteAttribute" /> avec un message de solution et une valeur Boolean indiquant si l'utilisation de l'élément obsolète est considérée comme une erreur.</summary>
      <param name="message">Chaîne de texte décrivant d'autres solutions. </param>
      <param name="error">Valeur Boolean qui indique si l'utilisation de l'élément obsolète est considérée comme une erreur. </param>
    </member>
    <member name="P:System.ObsoleteAttribute.IsError">
      <summary>Obtient une valeur Boolean indiquant si le compilateur traitera l'utilisation de l'élément de programme obsolète comme une erreur.</summary>
      <returns>true si l'utilisation de l'élément obsolète est considérée comme une erreur ; sinon false.La valeur par défaut est false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ObsoleteAttribute.Message">
      <summary>Obtient le message de solution comprenant une description des autres éléments de programme.</summary>
      <returns>Chaîne de texte de la solution.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.OutOfMemoryException">
      <summary>Exception levée quand il n'y a pas suffisamment de mémoire pour poursuivre l'exécution d'un programme.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.OutOfMemoryException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.OutOfMemoryException" />.</summary>
    </member>
    <member name="M:System.OutOfMemoryException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.OutOfMemoryException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message décrivant l'erreur. </param>
    </member>
    <member name="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.OutOfMemoryException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas une référence null (Nothing en Visual Basic), l'exception actuelle est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.OverflowException">
      <summary>Exception levée lorsqu'une opération arithmétique, de cast ou de conversion engendre un dépassement de capacité dans un contexte contrôlé.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.OverflowException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.OverflowException" />.</summary>
    </member>
    <member name="M:System.OverflowException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.OverflowException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message décrivant l'erreur. </param>
    </member>
    <member name="M:System.OverflowException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.OverflowException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="innerException">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas une référence null (Nothing en Visual Basic), l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.ParamArrayAttribute">
      <summary>Indique qu'une méthode autorise un nombre variable d'arguments dans son appel.Cette classe ne peut pas être héritée.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ParamArrayAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ParamArrayAttribute" /> avec des propriétés par défaut.</summary>
    </member>
    <member name="T:System.PlatformNotSupportedException">
      <summary>Exception levée lorsqu'une fonctionnalité ne s'exécute pas sur une plateforme particulière.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.PlatformNotSupportedException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.PlatformNotSupportedException" /> avec des propriétés par défaut.</summary>
    </member>
    <member name="M:System.PlatformNotSupportedException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.PlatformNotSupportedException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message texte qui explique la raison de l'exception. </param>
    </member>
    <member name="M:System.PlatformNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.PlatformNotSupportedException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="inner">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="inner" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Predicate`1">
      <summary>Représente la méthode qui définit un ensemble de critères et détermine si l'objet spécifié répond à ces critères.</summary>
      <typeparam name="T">Type de l'objet à comparer.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Predicate`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Predicate`1.BeginInvoke(`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Predicate`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Predicate`1.Invoke(`0)"></member>
    <member name="T:System.RankException">
      <summary>Exception levée lorsqu'un tableau ayant un nombre incorrect de dimensions est passé à une méthode.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RankException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.RankException" />.</summary>
    </member>
    <member name="M:System.RankException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.RankException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'erreur. </param>
    </member>
    <member name="M:System.RankException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.RankException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="innerException">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas une référence null (Nothing en Visual Basic), l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.RuntimeFieldHandle">
      <summary>Représente un champ à l'aide d'un jeton de métadonnées interne.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.Equals(System.Object)">
      <summary>Détermine si l'instance actuelle est égale à l'objet spécifié.</summary>
      <returns>true si <paramref name="obj" /> est un <see cref="T:System.RuntimeFieldHandle" /> et s'il est égal à la valeur de l'instance actuelle ; sinon false.</returns>
      <param name="obj">Objet à comparer avec l'instance en cours.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.Equals(System.RuntimeFieldHandle)">
      <summary>Détermine si l'instance actuelle est égale à l'objet <see cref="T:System.RuntimeFieldHandle" /> spécifié.</summary>
      <returns>true si la valeur de <paramref name="handle" /> est égale à la valeur de l'instance actuelle ; sinon, false.</returns>
      <param name="handle">
        <see cref="T:System.RuntimeFieldHandle" /> à comparer à l'instance en cours.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.GetHashCode">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.op_Equality(System.RuntimeFieldHandle,System.RuntimeFieldHandle)">
      <summary>Indique si deux structures <see cref="T:System.RuntimeFieldHandle" /> sont égales.</summary>
      <returns>true si <paramref name="left" /> est égal à <paramref name="right" /> ; sinon false.</returns>
      <param name="left">
        <see cref="T:System.RuntimeFieldHandle" /> à comparer à <paramref name="right" />.</param>
      <param name="right">
        <see cref="T:System.RuntimeFieldHandle" /> à comparer à <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.op_Inequality(System.RuntimeFieldHandle,System.RuntimeFieldHandle)">
      <summary>Indique si deux structures <see cref="T:System.RuntimeFieldHandle" /> ne sont pas égales.</summary>
      <returns>true si <paramref name="left" /> n'est pas égal à <paramref name="right" /> ; sinon, false.</returns>
      <param name="left">
        <see cref="T:System.RuntimeFieldHandle" /> à comparer à <paramref name="right" />.</param>
      <param name="right">
        <see cref="T:System.RuntimeFieldHandle" /> à comparer à <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.RuntimeMethodHandle">
      <summary>
        <see cref="T:System.RuntimeMethodHandle" /> est un handle vers la représentation interne des métadonnées d'une méthode.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.Equals(System.Object)">
      <summary>Indique si cette instance est égale à un objet spécifié.</summary>
      <returns>true si <paramref name="obj" /> est un <see cref="T:System.RuntimeMethodHandle" /> et s'il est égal à la valeur de cette instance ; sinon false.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> à comparer à cette instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.Equals(System.RuntimeMethodHandle)">
      <summary>Indique si cette instance est égale à un <see cref="T:System.RuntimeMethodHandle" /> spécifié.</summary>
      <returns>true si <paramref name="handle" /> est égal à la valeur de cette instance ; sinon false.</returns>
      <param name="handle">
        <see cref="T:System.RuntimeMethodHandle" /> à comparer à cette instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.op_Equality(System.RuntimeMethodHandle,System.RuntimeMethodHandle)">
      <summary>Indique si deux instances de <see cref="T:System.RuntimeMethodHandle" /> sont égales.</summary>
      <returns>true si la valeur de <paramref name="left" /> est égale à la valeur de <paramref name="right" /> en cours ; sinon, false.</returns>
      <param name="left">
        <see cref="T:System.RuntimeMethodHandle" /> à comparer à <paramref name="right" />.</param>
      <param name="right">
        <see cref="T:System.RuntimeMethodHandle" /> à comparer à <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.op_Inequality(System.RuntimeMethodHandle,System.RuntimeMethodHandle)">
      <summary>Indique si deux instances de <see cref="T:System.RuntimeMethodHandle" /> ne sont pas égales.</summary>
      <returns>true si la valeur de <paramref name="left" /> n'est pas égale à la valeur de <paramref name="right" /> en cours ; sinon, false.</returns>
      <param name="left">
        <see cref="T:System.RuntimeMethodHandle" /> à comparer à <paramref name="right" />.</param>
      <param name="right">
        <see cref="T:System.RuntimeMethodHandle" /> à comparer à <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.RuntimeTypeHandle">
      <summary>Représente un type à l'aide d'un jeton de métadonnées interne.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.Equals(System.Object)">
      <summary>Indique si l'objet spécifié est égal à la structure <see cref="T:System.RuntimeTypeHandle" /> en cours.</summary>
      <returns>true si <paramref name="obj" /> est une structure <see cref="T:System.RuntimeTypeHandle" /> et qu'il est égal à la valeur de cette instance ; sinon false.</returns>
      <param name="obj">Objet à comparer à l'instance actuelle.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.Equals(System.RuntimeTypeHandle)">
      <summary>Indique si la structure <see cref="T:System.RuntimeTypeHandle" /> spécifiée est égale à la structure <see cref="T:System.RuntimeTypeHandle" /> actuelle.</summary>
      <returns>true si la valeur de <paramref name="handle" /> est égale à la valeur de cette instance ; sinon, false.</returns>
      <param name="handle">Structure <see cref="T:System.RuntimeTypeHandle" /> à comparer à l'instance actuelle.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.GetHashCode">
      <summary>Retourne le code de hachage pour l'instance actuelle.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Equality(System.Object,System.RuntimeTypeHandle)">
      <summary>Indique si un objet et une structure <see cref="T:System.RuntimeTypeHandle" /> sont égaux.</summary>
      <returns>true si <paramref name="left" /> est une structure <see cref="T:System.RuntimeTypeHandle" /> et qu'elle est égale à <paramref name="right" /> ; sinon false.</returns>
      <param name="left">Objet à comparer à <paramref name="right" />.</param>
      <param name="right">Structure <see cref="T:System.RuntimeTypeHandle" /> à comparer à <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Equality(System.RuntimeTypeHandle,System.Object)">
      <summary>Indique si une structure <see cref="T:System.RuntimeTypeHandle" /> est égale à un objet.</summary>
      <returns>true si <paramref name="right" /> est un <see cref="T:System.RuntimeTypeHandle" /> et qu'il est égal à <paramref name="left" /> ; sinon false.</returns>
      <param name="left">Structure <see cref="T:System.RuntimeTypeHandle" /> à comparer à <paramref name="right" />.</param>
      <param name="right">Objet à comparer à <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Inequality(System.Object,System.RuntimeTypeHandle)">
      <summary>Indique si un objet et une structure <see cref="T:System.RuntimeTypeHandle" /> ne sont pas égaux.</summary>
      <returns>true si <paramref name="left" /> est un <see cref="T:System.RuntimeTypeHandle" /> et qu'il n'est pas égal à <paramref name="right" /> ; sinon false.</returns>
      <param name="left">Objet à comparer à <paramref name="right" />.</param>
      <param name="right">Structure <see cref="T:System.RuntimeTypeHandle" /> à comparer à <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Inequality(System.RuntimeTypeHandle,System.Object)">
      <summary>Indique si une structure <see cref="T:System.RuntimeTypeHandle" /> n'est pas égale à un objet.</summary>
      <returns>true si <paramref name="right" /> est une structure <see cref="T:System.RuntimeTypeHandle" /> et qu'elle n'est pas égale à <paramref name="left" /> ; sinon false.</returns>
      <param name="left">Structure <see cref="T:System.RuntimeTypeHandle" /> à comparer à <paramref name="right" />.</param>
      <param name="right">Objet à comparer à <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.SByte">
      <summary>Représente un entier 8 bits signé.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.CompareTo(System.SByte)">
      <summary>Compare cette instance à un entier 8 bits signé et retourne une indication de leurs valeurs relatives.</summary>
      <returns>Entier signé indiquant l'ordre relatif de cette instance et <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Entier 8 bits signé à comparer. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.SByte.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si cette instance équivaut à un objet spécifié.</summary>
      <returns>true si <paramref name="obj" /> est une instance de <see cref="T:System.SByte" /> et est égal à la valeur de cette instance ; sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.SByte.Equals(System.SByte)">
      <summary>Retourne une valeur indiquant si cette instance est égale à une valeur <see cref="T:System.SByte" /> spécifiée.</summary>
      <returns>true si <paramref name="obj" /> possède la même valeur que cette instance ; sinon, false.</returns>
      <param name="obj">Valeur <see cref="T:System.SByte" /> à comparer à cette instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.SByte.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.SByte.MaxValue">
      <summary>Représente la plus grande valeur possible de <see cref="T:System.SByte" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.SByte.MinValue">
      <summary>Représente la plus petite valeur possible de <see cref="T:System.SByte" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre en son équivalent entier 8 bits signé.</summary>
      <returns>Entier 8 bits signé qui est équivalent au nombre figurant dans le paramètre <paramref name="s" />.</returns>
      <param name="s">Chaîne qui représente un nombre à convertir.La chaîne est interprétée à l'aide du style <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not consist of an optional sign followed by a sequence of digits (zero through nine). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Convertit une représentation d'un nombre sous forme de chaîne dans un style spécifié en entier 8 bits signé équivalent.</summary>
      <returns>Entier 8 bits signé qui est équivalent au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir.La chaîne est interprétée à l'aide du style spécifié par <paramref name="style" />.</param>
      <param name="style">Combinaison de bits des valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format that is compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Convertit la chaîne d'un nombre dans un style et un format propre à une culture spécifiés en équivalent signé 8 bits.</summary>
      <returns>Valeur d'octet signée 8 bits équivalente au nombre spécifié dans le paramètre <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant le nombre à convertir.La chaîne est interprétée à l'aide du style spécifié par <paramref name="style" />.</param>
      <param name="style">Combinaison de bits des valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />.Si <paramref name="provider" /> est null, la culture actuelle du thread est utilisée.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.-or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format that is compliant with <paramref name="style" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.-or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String,System.IFormatProvider)">
      <summary>Convertit la représentation d'un nombre sous forme de chaîne dans un format propre à une culture spécifié en entier 8 bits signé équivalent.</summary>
      <returns>Entier 8 bits signé qui est équivalent au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne qui représente un nombre à convertir.La chaîne est interprétée à l'aide du style <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />.Si <paramref name="provider" /> est null, la culture actuelle du thread est utilisée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</summary>
      <returns>Entier signé indiquant l'ordre relatif de cette instance et <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="obj">Objet à comparer à cette instance ou null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an <see cref="T:System.SByte" />. </exception>
    </member>
    <member name="M:System.SByte.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.SByte.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true si la valeur de l'instance actuelle est différente de zéro ; sinon, false.</returns>
      <param name="provider">Ce paramètre est inutilisé.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Byte" />.</returns>
      <param name="provider">Ce paramètre est inutilisé.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Char" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative de ce type lève <see cref="T:System.InvalidCastException" />.</summary>
      <returns>AucunCette conversion n'est pas prise en charge.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Ce paramètre est inutilisé.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Double" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int16" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, inchangée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Single" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en objet de type <paramref name="type" />.</returns>
      <param name="type">
        <see cref="T:System.Type" /> dans lequel convertir cette valeur <see cref="T:System.SByte" />.</param>
      <param name="provider">Implémentation de <see cref="T:System.IFormatProvider" /> qui fournit des informations sur le format de la valeur retournée.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt16" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.SByte.ToString">
      <summary>Convertit la valeur numérique de cette instance en sa représentation équivalente sous forme de chaîne.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, avec un signe négatif si la valeur est négative et une séquence de chiffres allant de 0 à 9 sans zéros non significatifs.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.ToString(System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide des informations de format spécifiques à la culture donnée.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="provider" />.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.ToString(System.String)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente en utilisant le format spécifié.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="format" />.</returns>
      <param name="format">Chaîne de format numérique standard ou personnalisée.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.ToString(System.String,System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide du format spécifié et des informations de format spécifiques à la culture.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, telle que spécifiée par <paramref name="format" /> et <paramref name="provider" />.</returns>
      <param name="format">Chaîne de format numérique standard ou personnalisée.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte@)">
      <summary>Essaie de convertir la représentation sous forme de chaîne d'un nombre ayant un style et un format spécifique à la culture spécifiés en son équivalent <see cref="T:System.SByte" /> et retourne une valeur qui indique si la conversion a réussi.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne représentant un nombre à convertir. </param>
      <param name="style">Combinaison d'opérations de bits de valeurs d'énumération qui indique le format autorisé du paramètre <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de l'entier 8 bits signé équivalente au nombre contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, qu'il n'est pas dans un format conforme à <paramref name="style" /> ou qu'il représente un nombre inférieur à <see cref="F:System.SByte.MinValue" /> ou supérieur à <see cref="F:System.SByte.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.TryParse(System.String,System.SByte@)">
      <summary>Essaie de convertir la représentation sous forme de chaîne d'un nombre en son équivalent <see cref="T:System.SByte" /> et retourne une valeur indiquant si la conversion a réussi.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne contenant un nombre à convertir.</param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de l'entier 8 bits signé équivalente au nombre contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, n'est pas au format approprié ou représente un nombre inférieur à <see cref="F:System.SByte.MinValue" /> ou supérieur à <see cref="F:System.SByte.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Single">
      <summary>Représente un nombre à virgule flottante simple précision.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.CompareTo(System.Single)">
      <summary>Compare cette instance à un nombre à virgule flottante simple précision spécifié et retourne un entier qui indique si la valeur de cette instance est inférieure, égale ou supérieure à celle du nombre à virgule flottante simple précision spécifié.</summary>
      <returns>Nombre signé indiquant les valeurs relatives de cette instance et <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />.-or- This instance is not a number (<see cref="F:System.Single.NaN" />) and <paramref name="value" /> is a number. Zero This instance is equal to <paramref name="value" />.-or- Both this instance and <paramref name="value" /> are not a number (<see cref="F:System.Single.NaN" />), <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />. Greater than zero This instance is greater than <paramref name="value" />.-or- This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Single.NaN" />). </returns>
      <param name="value">Nombre à virgule flottante simple précision à comparer. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Single.Epsilon">
      <summary>Représente la valeur <see cref="T:System.Single" /> positive la plus petite qui est supérieure à zéro.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si cette instance équivaut à un objet spécifié.</summary>
      <returns>true si <paramref name="obj" /> est une instance de <see cref="T:System.Single" /> et est égal à la valeur de cette instance ; sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Single.Equals(System.Single)">
      <summary>Retourne une valeur indiquant si cette instance et un objet <see cref="T:System.Single" /> spécifié représentent la même valeur.</summary>
      <returns>true si <paramref name="obj" /> est égal à cette instance ; sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Single.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Single.IsInfinity(System.Single)">
      <summary>Retourne une valeur indiquant si la valeur du nombre spécifié est l'infini négatif ou positif.</summary>
      <returns>true si <paramref name="f" /> a la valeur <see cref="F:System.Single.PositiveInfinity" /> ou <see cref="F:System.Single.NegativeInfinity" /> ; sinon, false.</returns>
      <param name="f">Nombre à virgule flottante simple précision. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.IsNaN(System.Single)">
      <summary>Retourne une valeur qui indique si la valeur spécifiée n'est pas un nombre (<see cref="F:System.Single.NaN" />).</summary>
      <returns>true si la valeur de <paramref name="f" /> n'est pas un nombre (<see cref="F:System.Single.NaN" />) ; sinon, false.</returns>
      <param name="f">Nombre à virgule flottante simple précision. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.IsNegativeInfinity(System.Single)">
      <summary>Retourne une valeur indiquant si le nombre spécifié est équivalent à l'infini négatif.</summary>
      <returns>true si <paramref name="f" /> a la valeur <see cref="F:System.Single.NegativeInfinity" /> ; sinon, false.</returns>
      <param name="f">Nombre à virgule flottante simple précision. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.IsPositiveInfinity(System.Single)">
      <summary>Retourne une valeur indiquant si le nombre spécifié est équivalent à l'infini positif.</summary>
      <returns>true si <paramref name="f" /> a la valeur <see cref="F:System.Single.PositiveInfinity" /> ; sinon, false.</returns>
      <param name="f">Nombre à virgule flottante simple précision. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.MaxValue">
      <summary>Représente la plus grande valeur possible de <see cref="T:System.Single" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.MinValue">
      <summary>Représente la plus petite valeur possible de <see cref="T:System.Single" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.NaN">
      <summary>Représente une valeur autre qu'un nombre (NaN).Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.NegativeInfinity">
      <summary>Représente l'infini négatif.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.op_Equality(System.Single,System.Single)">
      <summary>Retourne une valeur qui indique si deux valeurs <see cref="T:System.Single" /> spécifiées sont égales.</summary>
      <returns>true si <paramref name="left" /> est égal à <paramref name="right" /> ; sinon, false.</returns>
      <param name="left">Première valeur à comparer.</param>
      <param name="right">Deuxième valeur à comparer.</param>
    </member>
    <member name="M:System.Single.op_GreaterThan(System.Single,System.Single)">
      <summary>Retourne une valeur qui indique si une valeur <see cref="T:System.Single" /> spécifique est supérieure à une autre valeur <see cref="T:System.Single" /> spécifique.</summary>
      <returns>true si <paramref name="left" /> est supérieur à <paramref name="right" /> ; sinon, false.</returns>
      <param name="left">Première valeur à comparer.</param>
      <param name="right">Deuxième valeur à comparer.</param>
    </member>
    <member name="M:System.Single.op_GreaterThanOrEqual(System.Single,System.Single)">
      <summary>Retourne une valeur qui indique si une valeur <see cref="T:System.Single" /> spécifique est supérieure ou égale à une autre valeur <see cref="T:System.Single" /> spécifique.</summary>
      <returns>true si <paramref name="left" /> est supérieur ou égal à <paramref name="right" /> ; sinon, false.</returns>
      <param name="left">Première valeur à comparer.</param>
      <param name="right">Deuxième valeur à comparer.</param>
    </member>
    <member name="M:System.Single.op_Inequality(System.Single,System.Single)">
      <summary>Retourne une valeur qui indique si deux valeurs <see cref="T:System.Single" /> spécifiées sont différentes.</summary>
      <returns>true si <paramref name="left" /> et <paramref name="right" /> ne sont pas égaux ; sinon, false.</returns>
      <param name="left">Première valeur à comparer.</param>
      <param name="right">Deuxième valeur à comparer.</param>
    </member>
    <member name="M:System.Single.op_LessThan(System.Single,System.Single)">
      <summary>Retourne une valeur qui indique si une valeur <see cref="T:System.Single" /> spécifique est inférieure à une autre valeur <see cref="T:System.Single" /> spécifique.</summary>
      <returns>true si <paramref name="left" /> est inférieur à <paramref name="right" /> ; sinon, false.</returns>
      <param name="left">Première valeur à comparer.</param>
      <param name="right">Deuxième valeur à comparer.</param>
    </member>
    <member name="M:System.Single.op_LessThanOrEqual(System.Single,System.Single)">
      <summary>Retourne une valeur qui indique si une valeur <see cref="T:System.Single" /> spécifique est inférieure ou égale à une autre valeur <see cref="T:System.Single" /> spécifique.</summary>
      <returns>true si <paramref name="left" /> est inférieur ou égal à <paramref name="right" /> ; sinon, false.</returns>
      <param name="left">Première valeur à comparer.</param>
      <param name="right">Deuxième valeur à comparer.</param>
    </member>
    <member name="M:System.Single.Parse(System.String)">
      <summary>Convertit la chaîne d'un nombre en nombre à virgule flottante simple précision équivalent.</summary>
      <returns>Nombre à virgule flottante simple précision équivalant à la valeur numérique ou au symbole spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Convertit la chaîne d'un nombre dans un style spécifié en nombre à virgule flottante simple précision équivalent.</summary>
      <returns>Nombre à virgule flottante en simple précision équivalant à la valeur numérique ou au symbole spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="style">Combinaison de bits de valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Float" /> combinée avec <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Convertit la chaîne d'un nombre dans un style et un format propre à la culture spécifiés en nombre à virgule flottante simple précision équivalent.</summary>
      <returns>Nombre à virgule flottante simple précision équivalant à la valeur numérique ou au symbole spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="style">Combinaison de bits de valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Float" /> combinée avec <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a numeric value. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Parse(System.String,System.IFormatProvider)">
      <summary>Convertit la chaîne d'un nombre dans un format propre à la culture spécifiée en nombre à virgule flottante simple précision équivalent.</summary>
      <returns>Nombre à virgule flottante simple précision équivalant à la valeur numérique ou au symbole spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne contenant un nombre à convertir. </param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.PositiveInfinity">
      <summary>Représente l'infini positif.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</summary>
      <returns>Entier signé indiquant l'ordre relatif de cette instance et <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Objet à comparer à cette instance ou null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Single" />. </exception>
    </member>
    <member name="M:System.Single.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Single.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true si la valeur de l'instance actuelle est différente de zéro ; sinon, false.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Byte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Cette conversion n'est pas prise en charge.Aucune valeur n'est retournée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Single.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Cette conversion n'est pas prise en charge.Aucune valeur n'est retournée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Single.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Double" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int16" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.SByte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, inchangée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <paramref name="type" />.</returns>
      <param name="type">Type dans lequel convertir cette valeur <see cref="T:System.Single" />.</param>
      <param name="provider">Objet qui fournit des informations sur le format de la valeur retournée.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt16" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Single.ToString">
      <summary>Convertit la valeur numérique de cette instance en sa représentation équivalente sous forme de chaîne.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.ToString(System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide des informations de format spécifiques à la culture donnée.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="provider" />.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.ToString(System.String)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente en utilisant le format spécifié.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="format" />.</returns>
      <param name="format">Chaîne de format numérique.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.ToString(System.String,System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide du format spécifié et des informations de format spécifiques à la culture.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, telle que spécifiée par <paramref name="format" /> et <paramref name="provider" />.</returns>
      <param name="format">Chaîne de format numérique.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
      <summary>Convertit la chaîne d'un nombre dans un style et un format propre à la culture spécifiés en nombre à virgule flottante simple précision équivalent.Une valeur de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne représentant un nombre à convertir. </param>
      <param name="style">Combinaison d'opérations de bits de valeurs d'énumération qui indique le format autorisé du paramètre <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Float" /> combinée avec <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <param name="result">Lorsque cette méthode est retournée, contient le nombre à virgule flottante simple précision équivalant à la valeur numérique ou au symbole contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, n'est pas dans un format conforme à <paramref name="style" />, représente un nombre inférieur à <see cref="F:System.Single.MinValue" /> ou supérieur à <see cref="F:System.Single.MaxValue" />, ou encore si <paramref name="style" /> n'est pas une combinaison valide de constantes énumérées <see cref="T:System.Globalization.NumberStyles" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.TryParse(System.String,System.Single@)">
      <summary>Convertit la chaîne d'un nombre en nombre à virgule flottante simple précision équivalent.Une valeur de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne représentant un nombre à convertir. </param>
      <param name="result">Lorsque cette méthode est retournée, contient le nombre à virgule flottante simple précision équivalant à la valeur numérique ou au symbole contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, n'est pas un nombre dans un format valide ou représente un nombre inférieur à <see cref="F:System.Single.MinValue" /> ou supérieur à <see cref="F:System.Single.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.STAThreadAttribute">
      <summary>Indique que le modèle de thread COM d'une application est un modèle STA (Single-Threaded Apartment). </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.STAThreadAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.STAThreadAttribute" />.</summary>
    </member>
    <member name="T:System.String">
      <summary>Représente du texte sous forme d'une série de caractères Unicode.Pour parcourir le code source de .NET Framework pour ce type, consultez la Source de référence.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.#ctor(System.Char*)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.String" /> à la valeur indiquée par un pointeur spécifié vers un tableau de caractères Unicode.</summary>
      <param name="value">Pointeur vers un tableau de caractères Unicode terminé par un caractère null. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The current process does not have read access to all the addressed characters.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> specifies an array that contains an invalid Unicode character, or <paramref name="value" /> specifies an address less than 64000.</exception>
    </member>
    <member name="M:System.String.#ctor(System.Char*,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.String" /> à la valeur indiquée par un pointeur spécifié vers un tableau de caractères Unicode, un point de départ pour le caractère dans ce tableau et une longueur.</summary>
      <param name="value">Pointeur vers un tableau de caractères Unicode. </param>
      <param name="startIndex">Position de départ dans <paramref name="value" />. </param>
      <param name="length">Nombre de caractères dans <paramref name="value" /> à utiliser. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than zero, <paramref name="value" /> + <paramref name="startIndex" /> cause a pointer overflow, or the current process does not have read access to all the addressed characters.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> specifies an array that contains an invalid Unicode character, or <paramref name="value" /> + <paramref name="startIndex" /> specifies an address less than 64000.</exception>
    </member>
    <member name="M:System.String.#ctor(System.Char,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.String" /> à la valeur indiquée par un caractère Unicode spécifié et répété un certain nombre de fois.</summary>
      <param name="c">Caractère Unicode. </param>
      <param name="count">Nombre de fois où <paramref name="c" /> se produit. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is less than zero. </exception>
    </member>
    <member name="M:System.String.#ctor(System.Char[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.String" /> à la valeur indiquée par un tableau de caractères Unicode.</summary>
      <param name="value">Tableau de caractères Unicode. </param>
    </member>
    <member name="M:System.String.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.String" /> à la valeur indiquée par un tableau de caractères Unicode, une position de départ pour le caractère dans ce tableau et une longueur.</summary>
      <param name="value">Tableau de caractères Unicode. </param>
      <param name="startIndex">Position de départ dans <paramref name="value" />. </param>
      <param name="length">Nombre de caractères dans <paramref name="value" /> à utiliser. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than zero.-or- The sum of <paramref name="startIndex" /> and <paramref name="length" /> is greater than the number of elements in <paramref name="value" />. </exception>
    </member>
    <member name="P:System.String.Chars(System.Int32)">
      <summary>Obtient l'objet <see cref="T:System.Char" /> à une position de caractère spécifiée dans l'objet <see cref="T:System.String" /> actuel.</summary>
      <returns>Objet à la position <paramref name="index" />.</returns>
      <param name="index">Position dans la chaîne actuelle. </param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> is greater than or equal to the length of this object or less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>Compare les sous-chaînes de deux objets <see cref="T:System.String" /> spécifiés et retourne un entier qui indique leur position relative dans l'ordre de tri.</summary>
      <returns>Entier signé 32 bits qui indique la relation lexicale entre les deux comparateurs.Value Condition Less than zero The substring in <paramref name="strA" /> precedes the substring in <paramref name="strB" /> in the sort order. Zero The substrings occur in the same position in the sort order, or <paramref name="length" /> is zero. Greater than zero The substring in <paramref name="strA" /> follows the substring in <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">Première chaîne à utiliser dans la comparaison. </param>
      <param name="indexA">Position de la sous-chaîne dans <paramref name="strA" />. </param>
      <param name="strB">Seconde chaîne à utiliser dans la comparaison. </param>
      <param name="indexB">Position de la sous-chaîne dans <paramref name="strB" />. </param>
      <param name="length">Nombre maximal de caractères dans les sous-chaînes à comparer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative. -or-Either <paramref name="indexA" /> or <paramref name="indexB" /> is null, and <paramref name="length" /> is greater than zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)">
      <summary>Compare les sous-chaînes de deux objets <see cref="T:System.String" /> spécifiés à l'aide des règles désignées et retourne un entier qui indique leur position relative dans l'ordre de tri. </summary>
      <returns>Entier signé 32 bits qui indique la relation lexicale entre les deux comparateurs.Value Condition Less than zero The substring in <paramref name="strA" /> precedes the substring in <paramref name="strB" /> in the sort order.Zero The substrings occur in the same position in the sort order, or the <paramref name="length" /> parameter is zero. Greater than zero The substring in <paramref name="strA" /> follllows the substring in <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">Première chaîne à utiliser dans la comparaison. </param>
      <param name="indexA">Position de la sous-chaîne dans <paramref name="strA" />. </param>
      <param name="strB">Seconde chaîne à utiliser dans la comparaison.</param>
      <param name="indexB">Position de la sous-chaîne dans <paramref name="strB" />. </param>
      <param name="length">Nombre maximal de caractères dans les sous-chaînes à comparer. </param>
      <param name="comparisonType">Une des valeurs d'énumération qui spécifie les règles à utiliser dans la comparaison. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative. -or-Either <paramref name="indexA" /> or <paramref name="indexB" /> is null, and <paramref name="length" /> is greater than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.String)">
      <summary>Compare deux objets <see cref="T:System.String" /> spécifiés et retourne un entier qui indique leur position relative dans l'ordre de tri.</summary>
      <returns>Entier signé 32 bits qui indique la relation lexicale entre les deux comparateurs.Value Condition Less than zero <paramref name="strA" /> precedes <paramref name="strB" /> in the sort order. Zero <paramref name="strA" /> occurs in the same position as <paramref name="strB" /> in the sort order. Greater than zero <paramref name="strA" /> follows <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">Première chaîne à comparer. </param>
      <param name="strB">Deuxième chaîne à comparer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.String,System.Boolean)">
      <summary>Compare deux objets <see cref="T:System.String" /> spécifiés, en ignorant ou en respectant leur casse, et retourne un entier qui indique leur position relative dans l'ordre de tri.</summary>
      <returns>Entier signé 32 bits qui indique la relation lexicale entre les deux comparateurs.Value Condition Less than zero <paramref name="strA" /> precedes <paramref name="strB" /> in the sort order. Zero <paramref name="strA" /> occurs in the same position as <paramref name="strB" /> in the sort order. Greater than zero <paramref name="strA" /> follows <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">Première chaîne à comparer. </param>
      <param name="strB">Deuxième chaîne à comparer. </param>
      <param name="ignoreCase">true pour ignorer la casse pendant la comparaison, sinon, false.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.String,System.StringComparison)">
      <summary>Compare deux objets <see cref="T:System.String" /> spécifiés à l'aide des règles désignées et retourne un entier qui indique leur position relative dans l'ordre de tri.</summary>
      <returns>Entier signé 32 bits qui indique la relation lexicale entre les deux comparateurs.Value Condition Less than zero <paramref name="strA" /> precedes <paramref name="strB" /> in the sort order. Zero <paramref name="strA" /> is in the same position as <paramref name="strB" /> in the sort order. Greater than zero <paramref name="strA" /> follows <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">Première chaîne à comparer.</param>
      <param name="strB">Deuxième chaîne à comparer. </param>
      <param name="comparisonType">Une des valeurs d'énumération qui spécifie les règles à utiliser dans la comparaison. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value. </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.StringComparison" /> is not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>Compare les sous-chaînes de deux objets <see cref="T:System.String" /> spécifiés en évaluant les valeurs numériques des objets <see cref="T:System.Char" /> correspondants de chaque sous-chaîne. </summary>
      <returns>Entier signé 32 bits qui indique la relation lexicale entre les deux comparateurs.ValueCondition Less than zero The substring in <paramref name="strA" /> is less than the substring in <paramref name="strB" />. Zero The substrings are equal, or <paramref name="length" /> is zero. Greater than zero The substring in <paramref name="strA" /> is greater than the substring in <paramref name="strB" />. </returns>
      <param name="strA">Première chaîne à utiliser dans la comparaison. </param>
      <param name="indexA">Index de départ de la sous-chaîne dans <paramref name="strA" />. </param>
      <param name="strB">Seconde chaîne à utiliser dans la comparaison. </param>
      <param name="indexB">Index de départ de la sous-chaîne dans <paramref name="strB" />. </param>
      <param name="length">Nombre maximal de caractères dans les sous-chaînes à comparer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="strA" /> is not null and <paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.-or- <paramref name="strB" /> is not null and<paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.CompareOrdinal(System.String,System.String)">
      <summary>Compare deux objets <see cref="T:System.String" /> spécifiés en évaluant les valeurs numériques des objets <see cref="T:System.Char" /> correspondants dans chaque chaîne.</summary>
      <returns>Entier qui indique la relation lexicale entre les deux comparateurs.ValueCondition Less than zero <paramref name="strA" /> is less than <paramref name="strB" />. Zero <paramref name="strA" /> and <paramref name="strB" /> are equal. Greater than zero <paramref name="strA" /> is greater than <paramref name="strB" />. </returns>
      <param name="strA">Première chaîne à comparer. </param>
      <param name="strB">Deuxième chaîne à comparer. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.CompareTo(System.String)">
      <summary>Compare cette instance avec un objet <see cref="T:System.String" /> spécifié et indique si cette instance précède, suit ou apparaît à la même position dans l'ordre de tri que la chaîne spécifiée. </summary>
      <returns>Entier signé 32 bits qui indique si cette instance précède, suit ou apparaît à la même position dans l'ordre de tri que le paramètre <paramref name="strB" />.Value Condition Less than zero This instance precedes <paramref name="strB" />. Zero This instance has the same position in the sort order as <paramref name="strB" />. Greater than zero This instance follows <paramref name="strB" />.-or- <paramref name="strB" /> is null. </returns>
      <param name="strB">Chaîne à comparer à cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Concatène les membres d'une collection <see cref="T:System.Collections.Generic.IEnumerable`1" /> construite de type <see cref="T:System.String" />.</summary>
      <returns>Chaînes concaténées dans <paramref name="values" />.</returns>
      <param name="values">Collection d'objets qui implémente <see cref="T:System.Collections.Generic.IEnumerable`1" /> et dont l'argument de type générique est <see cref="T:System.String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Concat``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Concatène les membres d'une implémentation <see cref="T:System.Collections.Generic.IEnumerable`1" />.</summary>
      <returns>Membres concaténés dans <paramref name="values" />.</returns>
      <param name="values">Objet de collection qui implémente l'interface <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <typeparam name="T">Types des membres de <paramref name="values" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Concat(System.Object)">
      <summary>Crée la représentation sous forme de chaîne d'un objet spécifié.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de <paramref name="arg0" />, ou <see cref="F:System.String.Empty" /> si <paramref name="arg0" /> est null.</returns>
      <param name="arg0">Objet à représenter, ou null. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Object,System.Object)">
      <summary>Concatène les représentations sous forme de chaîne de deux objets spécifiés.</summary>
      <returns>Représentations sous forme de chaîne concaténées des valeurs des paramètres <paramref name="arg0" /> et <paramref name="arg1" />.</returns>
      <param name="arg0">Premier objet à concaténer. </param>
      <param name="arg1">Second objet à concaténer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Object,System.Object,System.Object)">
      <summary>Concatène les représentations sous forme de chaîne de trois objets spécifiés.</summary>
      <returns>Représentations sous forme de chaîne concaténées des valeurs des paramètres <paramref name="arg0" />, <paramref name="arg1" /> et <paramref name="arg2" />.</returns>
      <param name="arg0">Premier objet à concaténer. </param>
      <param name="arg1">Second objet à concaténer. </param>
      <param name="arg2">Troisième objet à concaténer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Object[])">
      <summary>Concatène les représentations sous forme de chaîne des éléments dans un tableau <see cref="T:System.Object" /> spécifié.</summary>
      <returns>Représentations sous forme de chaînes concaténées des valeurs des éléments dans <paramref name="args" />.</returns>
      <param name="args">Tableau d'objets qui contient les éléments à concaténer. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="args" /> is null. </exception>
      <exception cref="T:System.OutOfMemoryException">Out of memory.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String,System.String)">
      <summary>Concatène deux instances spécifiées de <see cref="T:System.String" />.</summary>
      <returns>Concaténation de <paramref name="str0" /> et <paramref name="str1" />.</returns>
      <param name="str0">Première chaîne à concaténer. </param>
      <param name="str1">Seconde chaîne à concaténer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String,System.String,System.String)">
      <summary>Concatène trois instances spécifiées de <see cref="T:System.String" />.</summary>
      <returns>Concaténation de <paramref name="str0" />, <paramref name="str1" /> et <paramref name="str2" />.</returns>
      <param name="str0">Première chaîne à concaténer. </param>
      <param name="str1">Seconde chaîne à concaténer. </param>
      <param name="str2">Troisième chaîne à concaténer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String,System.String,System.String,System.String)">
      <summary>Concatène quatre instances spécifiées de <see cref="T:System.String" />.</summary>
      <returns>Concaténation de <paramref name="str0" />, <paramref name="str1" />, <paramref name="str2" /> et <paramref name="str3" />.</returns>
      <param name="str0">Première chaîne à concaténer. </param>
      <param name="str1">Seconde chaîne à concaténer. </param>
      <param name="str2">Troisième chaîne à concaténer. </param>
      <param name="str3">Quatrième chaîne à concaténer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String[])">
      <summary>Concatène les éléments d'un tableau <see cref="T:System.String" /> spécifié.</summary>
      <returns>Éléments concaténés de <paramref name="values" />.</returns>
      <param name="values">Tableau d'instances de chaîne. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
      <exception cref="T:System.OutOfMemoryException">Out of memory.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Contains(System.String)">
      <summary>Retourne une valeur qui indique si la sous-chaîne spécifiée apparaît dans cette chaîne.</summary>
      <returns>true si le paramètre <paramref name="value" /> apparaît dans cette chaîne, ou si <paramref name="value" /> est la chaîne vide ("") ; sinon, false.</returns>
      <param name="value">Chaîne à rechercher. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>Copie un nombre spécifié de caractères à partir d'une position spécifiée dans cette instance vers une position spécifiée dans un tableau de caractères Unicode.</summary>
      <param name="sourceIndex">Index du premier caractère de cette instance à copier. </param>
      <param name="destination">Tableau de caractères Unicode dans lequel les caractères de cette instance sont copiés. </param>
      <param name="destinationIndex">Index de <paramref name="destination" /> au niveau duquel commence l'opération de copie. </param>
      <param name="count">Nombre de caractères dans cette instance à copier vers <paramref name="destination" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" />, <paramref name="destinationIndex" />, or <paramref name="count" /> is negative -or- <paramref name="sourceIndex" /> does not identify a position in the current instance. -or-<paramref name="destinationIndex" /> does not identify a valid index in the <paramref name="destination" /> array. -or-<paramref name="count" /> is greater than the length of the substring from <paramref name="startIndex" /> to the end of this instance -or- <paramref name="count" /> is greater than the length of the subarray from <paramref name="destinationIndex" /> to the end of the <paramref name="destination" /> array. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.String.Empty">
      <summary>Représente la chaîne vide.Ce champ est en lecture seule.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.EndsWith(System.String)">
      <summary>Détermine si la fin de cette instance de chaîne correspond à la chaîne spécifiée.</summary>
      <returns>true si <paramref name="value" /> correspond à la fin de cette instance ; sinon, false.</returns>
      <param name="value">Chaîne à comparer à la sous-chaîne à la fin de cette instance. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.EndsWith(System.String,System.StringComparison)">
      <summary>Détermine si la fin de cette instance de chaîne correspond à la chaîne spécifiée quand elle est comparée à l'aide de l'option spécifiée.</summary>
      <returns>true si le paramètre <paramref name="value" /> correspond à la fin de cette instance ; sinon, false.</returns>
      <param name="value">Chaîne à comparer à la sous-chaîne à la fin de cette instance. </param>
      <param name="comparisonType">Une des valeurs d'énumération qui détermine le mode de comparaison de cette chaîne et <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.Equals(System.Object)">
      <summary>Détermine si cette instance et un objet spécifié, qui doit aussi être un objet <see cref="T:System.String" />, ont la même valeur.</summary>
      <returns>true si <paramref name="obj" /> est <see cref="T:System.String" /> et possède la même valeur que cette instance ; sinon, false.Si <paramref name="obj" /> est null, la méthode retourne false.</returns>
      <param name="obj">Chaîne à comparer à cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String)">
      <summary>Détermine si cette instance et un autre objet <see cref="T:System.String" /> spécifié ont la même valeur.</summary>
      <returns>true si la valeur du paramètre <paramref name="value" /> est la même que celle de cette instance ; sinon, false.Si <paramref name="value" /> est null, la méthode retourne false.</returns>
      <param name="value">Chaîne à comparer à cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String,System.String)">
      <summary>Détermine si deux objets <see cref="T:System.String" /> spécifiés ont la même valeur.</summary>
      <returns>true si la valeur de <paramref name="a" /> est égale à la valeur de <paramref name="b" /> ; sinon false.Si <paramref name="a" /> et <paramref name="b" /> ont la valeur null, la méthode retourne true.</returns>
      <param name="a">Première chaîne à comparer ou null. </param>
      <param name="b">Seconde chaîne à comparer ou null. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String,System.String,System.StringComparison)">
      <summary>Détermine si deux objets <see cref="T:System.String" /> spécifiés ont la même valeur.Un paramètre spécifie la culture, la casse et les règles de tri utilisées dans la comparaison.</summary>
      <returns>true si la valeur du paramètre <paramref name="a" /> est égale à la valeur du paramètre <paramref name="b" /> ; sinon, false.</returns>
      <param name="a">Première chaîne à comparer ou null. </param>
      <param name="b">Seconde chaîne à comparer ou null. </param>
      <param name="comparisonType">Une des valeurs d'énumération qui spécifie les règles de la comparaison. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String,System.StringComparison)">
      <summary>Détermine si cette chaîne et un objet <see cref="T:System.String" /> spécifié ont la même valeur.Un paramètre spécifie la culture, la casse et les règles de tri utilisées dans la comparaison.</summary>
      <returns>true si la valeur du paramètre <paramref name="value" /> est la même que cette chaîne ; sinon, false.</returns>
      <param name="value">Chaîne à comparer à cette instance.</param>
      <param name="comparisonType">Une des valeurs d'énumération qui spécifie le mode de comparaison des chaînes. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object)">
      <summary>Remplace le ou les éléments de mise en forme d'une chaîne spécifiée par la représentation sous forme de chaîne de l'objet correspondant.Un paramètre fournit des informations de mise en forme propres à la culture.</summary>
      <returns>Copie de <paramref name="format" /> dans laquelle le ou les éléments de mise en forme sont remplacés par la représentation sous forme de chaîne de <paramref name="arg0" />. </returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <param name="format">Chaîne de format composite. </param>
      <param name="arg0">Objet à mettre en forme. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> or <paramref name="arg0" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to one. </exception>
    </member>
    <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object)">
      <summary>Remplace les éléments de mise en forme dans une chaîne spécifiée par la représentation sous forme de chaîne de deux objets spécifiés.Un paramètre fournit des informations de mise en forme propres à la culture.</summary>
      <returns>Copie de <paramref name="format" /> dans laquelle les éléments de mise en forme sont remplacés par les représentations sous forme de chaîne de <paramref name="arg0" /> et <paramref name="arg1" />. </returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <param name="format">Chaîne de format composite. </param>
      <param name="arg0">Premier objet à mettre en forme. </param>
      <param name="arg1">Deuxième objet à mettre en forme. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />, <paramref name="arg0" />, or <paramref name="arg1" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to two. </exception>
    </member>
    <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
      <summary>Remplace les éléments de mise en forme d'une chaîne spécifiée par la représentation sous forme de chaîne de trois objets spécifiés.Un paramètre fournit des informations de mise en forme propres à la culture.</summary>
      <returns>Copie de <paramref name="format" /> dans laquelle les éléments de mise en forme ont été remplacés par les représentations sous forme de chaîne de <paramref name="arg0" />, <paramref name="arg1" /> et <paramref name="arg2" />. </returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <param name="format">Chaîne de format composite. </param>
      <param name="arg0">Premier objet à mettre en forme. </param>
      <param name="arg1">Deuxième objet à mettre en forme. </param>
      <param name="arg2">Troisième objet à mettre en forme. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />, <paramref name="arg0" />, <paramref name="arg1" />, or <paramref name="arg2" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to three. </exception>
    </member>
    <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])">
      <summary>Remplace les éléments de mise en forme d'une chaîne spécifiée par les représentations sous forme de chaîne des objets correspondants dans un tableau spécifié.Un paramètre fournit des informations de mise en forme propres à la culture.</summary>
      <returns>Copie de <paramref name="format" /> dans laquelle les éléments de mise en forme ont été remplacés par la représentation sous forme de chaîne des objets correspondants dans <paramref name="args" />.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <param name="format">Chaîne de format composite. </param>
      <param name="args">Tableau d'objets contenant aucun ou plusieurs objets à mettre en forme. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> or <paramref name="args" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to the length of the <paramref name="args" /> array. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object)">
      <summary>Remplace un ou plusieurs éléments de mise en forme d'une chaîne spécifiée par la représentation sous forme de chaîne d'un objet spécifié.</summary>
      <returns>Copie de <paramref name="format" /> dans laquelle tous les éléments de mise en forme sont remplacés par la représentation sous forme de chaîne de <paramref name="arg0" />.</returns>
      <param name="format">Chaîne de format composite. </param>
      <param name="arg0">Objet à mettre en forme. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">The format item in <paramref name="format" /> is invalid.-or- The index of a format item is not zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object,System.Object)">
      <summary>Remplace les éléments de mise en forme dans une chaîne spécifiée par la représentation sous forme de chaîne de deux objets spécifiés.</summary>
      <returns>Copie de <paramref name="format" /> dans laquelle les éléments de mise en forme sont remplacés par les représentations sous forme de chaîne de <paramref name="arg0" /> et <paramref name="arg1" />.</returns>
      <param name="format">Chaîne de format composite. </param>
      <param name="arg0">Premier objet à mettre en forme. </param>
      <param name="arg1">Deuxième objet à mettre en forme. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is not zero or one. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object,System.Object,System.Object)">
      <summary>Remplace les éléments de mise en forme d'une chaîne spécifiée par la représentation sous forme de chaîne de trois objets spécifiés.</summary>
      <returns>Copie de <paramref name="format" /> dans laquelle les éléments de mise en forme ont été remplacés par les représentations sous forme de chaîne de <paramref name="arg0" />, <paramref name="arg1" /> et <paramref name="arg2" />.</returns>
      <param name="format">Chaîne de format composite.</param>
      <param name="arg0">Premier objet à mettre en forme. </param>
      <param name="arg1">Deuxième objet à mettre en forme. </param>
      <param name="arg2">Troisième objet à mettre en forme. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than two. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object[])">
      <summary>Remplace l'élément de mise en forme d'une chaîne spécifiée par la représentation sous forme de chaîne d'un objet correspondant dans un tableau spécifié.</summary>
      <returns>Copie de <paramref name="format" /> dans laquelle les éléments de mise en forme ont été remplacés par la représentation sous forme de chaîne des objets correspondants dans <paramref name="args" />.</returns>
      <param name="format">Chaîne de format composite.</param>
      <param name="args">Tableau d'objets contenant aucun ou plusieurs objets à mettre en forme. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> or <paramref name="args" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to the length of the <paramref name="args" /> array. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.GetHashCode">
      <summary>Retourne le code de hachage pour cette chaîne.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.Char)">
      <summary>Signale l'index de base zéro de la première occurrence du caractère Unicode spécifié dans cette chaîne.</summary>
      <returns>Position d'index de base zéro de <paramref name="value" /> si ce caractère est disponible ou -1 s'il est introuvable.</returns>
      <param name="value">Caractère Unicode à rechercher. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.Char,System.Int32)">
      <summary>Signale l'index de base zéro de la première occurrence du caractère Unicode spécifié dans cette chaîne.La recherche commence à une position de caractère spécifiée.</summary>
      <returns>Position d'index de base zéro de <paramref name="value" /> si ce caractère est disponible ou -1 s'il est introuvable.</returns>
      <param name="value">Caractère Unicode à rechercher. </param>
      <param name="startIndex">Position de départ de la recherche. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than 0 (zero) or greater than the length of the string. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.Char,System.Int32,System.Int32)">
      <summary>Signale l'index de base zéro de la première occurrence du caractère spécifié dans cette instance.La recherche commence à une position de caractère spécifiée et examine un nombre spécifié de positions de caractère.</summary>
      <returns>Position d'index de base zéro de <paramref name="value" /> si ce caractère est disponible ou -1 s'il est introuvable.</returns>
      <param name="value">Caractère Unicode à rechercher. </param>
      <param name="startIndex">Position de départ de la recherche. </param>
      <param name="count">Nombre de positions de caractère à examiner. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- <paramref name="startIndex" /> is greater than the length of this string.-or-<paramref name="count" /> is greater than the length of this string minus <paramref name="startIndex" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String)">
      <summary>Signale l'index de base zéro de la première occurrence de la chaîne spécifiée dans cette instance.</summary>
      <returns>Position d'index de base zéro de <paramref name="value" /> si cette chaîne est disponible ou -1 si elle est introuvable.Si <paramref name="value" /> est <see cref="F:System.String.Empty" />, la valeur de retour est 0.</returns>
      <param name="value">Chaîne à rechercher. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32)">
      <summary>Signale l'index de base zéro de la première occurrence de la chaîne spécifiée dans cette instance.La recherche commence à une position de caractère spécifiée.</summary>
      <returns>Position d'index de base zéro de <paramref name="value" /> si cette chaîne est disponible ou -1 si elle est introuvable.Si <paramref name="value" /> est <see cref="F:System.String.Empty" />, la valeur de retour est <paramref name="startIndex" />.</returns>
      <param name="value">Chaîne à rechercher. </param>
      <param name="startIndex">Position de départ de la recherche. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than 0 (zero) or greater than the length of this string.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32,System.Int32)">
      <summary>Signale l'index de base zéro de la première occurrence de la chaîne spécifiée dans cette instance.La recherche commence à une position de caractère spécifiée et examine un nombre spécifié de positions de caractère.</summary>
      <returns>Position d'index de base zéro de <paramref name="value" /> si cette chaîne est disponible ou -1 si elle est introuvable.Si <paramref name="value" /> est <see cref="F:System.String.Empty" />, la valeur de retour est <paramref name="startIndex" />.</returns>
      <param name="value">Chaîne à rechercher. </param>
      <param name="startIndex">Position de départ de la recherche. </param>
      <param name="count">Nombre de positions de caractère à examiner. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- <paramref name="startIndex" /> is greater than the length of this string.-or-<paramref name="count" /> is greater than the length of this string minus <paramref name="startIndex" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)">
      <summary>Signale l'index de base zéro de la première occurrence de la chaîne spécifiée dans l'objet <see cref="T:System.String" /> actuel.Les paramètres spécifient le point de départ de la recherche dans la chaîne actuelle, le nombre de caractères de la chaîne dans laquelle effectuer la recherche et le type de recherche à utiliser pour la chaîne spécifiée.</summary>
      <returns>Position d'index de base zéro du paramètre <paramref name="value" /> si cette chaîne est disponible ou -1 si elle est introuvable.Si <paramref name="value" /> est <see cref="F:System.String.Empty" />, la valeur de retour est <paramref name="startIndex" />.</returns>
      <param name="value">Chaîne à rechercher. </param>
      <param name="startIndex">Position de départ de la recherche. </param>
      <param name="count">Nombre de positions de caractère à examiner. </param>
      <param name="comparisonType">L'une des valeurs d'énumération qui spécifie les règles de la recherche. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- <paramref name="startIndex" /> is greater than the length of this instance.-or-<paramref name="count" /> is greater than the length of this string minus <paramref name="startIndex" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)">
      <summary>Signale l'index de base zéro de la première occurrence de la chaîne spécifiée dans l'objet <see cref="T:System.String" /> actuel.Les paramètres spécifient la position de départ de la recherche dans la chaîne actuelle et le type de recherche à utiliser pour la chaîne spécifiée.</summary>
      <returns>Position d'index de base zéro du paramètre <paramref name="value" /> si cette chaîne est disponible ou -1 si elle est introuvable.Si <paramref name="value" /> est <see cref="F:System.String.Empty" />, la valeur de retour est <paramref name="startIndex" />.</returns>
      <param name="value">Chaîne à rechercher. </param>
      <param name="startIndex">Position de départ de la recherche. </param>
      <param name="comparisonType">L'une des valeurs d'énumération qui spécifie les règles de la recherche. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than 0 (zero) or greater than the length of this string. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.StringComparison)">
      <summary>Signale l'index de base zéro de la première occurrence de la chaîne spécifiée dans l'objet <see cref="T:System.String" /> actuel.Un paramètre spécifie le type de recherche à utiliser pour la chaîne spécifiée.</summary>
      <returns>Position d'index du paramètre <paramref name="value" /> si cette chaîne est trouvée ; sinon, -1.Si <paramref name="value" /> est <see cref="F:System.String.Empty" />, la valeur de retour est 0.</returns>
      <param name="value">Chaîne à rechercher. </param>
      <param name="comparisonType">L'une des valeurs d'énumération qui spécifie les règles de la recherche. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.IndexOfAny(System.Char[])">
      <summary>Signale l'index de base zéro de la première occurrence dans cette instance de tout caractère d'un tableau de caractères Unicode spécifié.</summary>
      <returns>Position d'index de base zéro de la première occurrence dans cette instance où un caractère quelconque dans <paramref name="anyOf" /> a été trouvé ; -1 si aucun caractère dans <paramref name="anyOf" /> n'a été trouvé.</returns>
      <param name="anyOf">Tableau de caractères Unicode contenant un ou plusieurs caractères à rechercher. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.IndexOfAny(System.Char[],System.Int32)">
      <summary>Signale l'index de base zéro de la première occurrence dans cette instance de tout caractère d'un tableau de caractères Unicode spécifié.La recherche commence à une position de caractère spécifiée.</summary>
      <returns>Position d'index de base zéro de la première occurrence dans cette instance où un caractère quelconque dans <paramref name="anyOf" /> a été trouvé ; -1 si aucun caractère dans <paramref name="anyOf" /> n'a été trouvé.</returns>
      <param name="anyOf">Tableau de caractères Unicode contenant un ou plusieurs caractères à rechercher. </param>
      <param name="startIndex">Position de départ de la recherche. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is negative.-or- <paramref name="startIndex" /> is greater than the number of characters in this instance. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.IndexOfAny(System.Char[],System.Int32,System.Int32)">
      <summary>Signale l'index de base zéro de la première occurrence dans cette instance de tout caractère d'un tableau de caractères Unicode spécifié.La recherche commence à une position de caractère spécifiée et examine un nombre spécifié de positions de caractère.</summary>
      <returns>Position d'index de base zéro de la première occurrence dans cette instance où un caractère quelconque dans <paramref name="anyOf" /> a été trouvé ; -1 si aucun caractère dans <paramref name="anyOf" /> n'a été trouvé.</returns>
      <param name="anyOf">Tableau de caractères Unicode contenant un ou plusieurs caractères à rechercher. </param>
      <param name="startIndex">Position de départ de la recherche. </param>
      <param name="count">Nombre de positions de caractère à examiner. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- <paramref name="count" /> + <paramref name="startIndex" /> is greater than the number of characters in this instance. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Insert(System.Int32,System.String)">
      <summary>Retourne une nouvelle chaîne dans laquelle une chaîne spécifiée est insérée dans cette instance à une position d'index spécifiée. </summary>
      <returns>Nouvelle chaîne qui est équivalente à cette instance, mais avec <paramref name="value" /> inséré à la position <paramref name="startIndex" />.</returns>
      <param name="startIndex">Position d'index de base zéro de l'insertion. </param>
      <param name="value">Chaîne à insérer. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is negative or greater than the length of this instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IsNullOrEmpty(System.String)">
      <summary>Indique si la chaîne spécifiée est null ou une chaîne <see cref="F:System.String.Empty" />.</summary>
      <returns>true si le paramètre <paramref name="value" /> est null ou une chaîne vide ("") ; sinon, false.</returns>
      <param name="value">Chaîne à tester. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IsNullOrWhiteSpace(System.String)">
      <summary>Indique si une chaîne spécifiée est null, vide ou se compose uniquement d'espaces blancs.</summary>
      <returns>true si le paramètre <paramref name="value" /> est null ou <see cref="F:System.String.Empty" />, ou si <paramref name="value" /> est composé exclusivement d'espaces blancs. </returns>
      <param name="value">Chaîne à tester.</param>
    </member>
    <member name="M:System.String.Join(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Concatène les membres d'une collection <see cref="T:System.Collections.Generic.IEnumerable`1" /> construite de type <see cref="T:System.String" />, en utilisant le séparateur spécifié entre chaque membre.</summary>
      <returns>Chaîne composée des membres de <paramref name="values" /> délimités par la chaîne <paramref name="separator" />.Si les <paramref name="values" /> ne possèdent aucun membre, la méthode retourne <see cref="F:System.String.Empty" />.</returns>
      <param name="separator">Chaîne à utiliser comme séparateur.<paramref name="separator" /> est inclus dans la chaîne retournée uniquement si <paramref name="values" /> contient plusieurs éléments.</param>
      <param name="values">Collection qui contient les chaînes à concaténer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Join``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>Concatène les membres d'une collection, en utilisant le séparateur spécifié entre chaque membre.</summary>
      <returns>Chaîne composée des membres de <paramref name="values" /> délimités par la chaîne <paramref name="separator" />.Si les <paramref name="values" /> ne possèdent aucun membre, la méthode retourne <see cref="F:System.String.Empty" />.</returns>
      <param name="separator">Chaîne à utiliser comme séparateur.<paramref name="separator" /> est inclus dans la chaîne retournée uniquement si <paramref name="values" /> contient plusieurs éléments.</param>
      <param name="values">Collection qui contient les objets à concaténer.</param>
      <typeparam name="T">Types des membres de <paramref name="values" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Join(System.String,System.Object[])">
      <summary>Concatène les éléments d'un tableau d'objets, en utilisant le séparateur spécifié entre chaque élément.</summary>
      <returns>Chaîne composée des éléments de <paramref name="values" /> délimités par la chaîne <paramref name="separator" />.Si <paramref name="values" /> est un tableau vide, la méthode retourne <see cref="F:System.String.Empty" />.</returns>
      <param name="separator">Chaîne à utiliser comme séparateur.<paramref name="separator" /> est inclus dans la chaîne retournée uniquement si <paramref name="values" /> contient plusieurs éléments.</param>
      <param name="values">Tableau qui contient les éléments à concaténer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Join(System.String,System.String[])">
      <summary>Concatène tous les éléments d'un tableau de chaînes, en utilisant le séparateur spécifié entre chaque élément. </summary>
      <returns>Chaîne composée des éléments de <paramref name="value" /> délimités par la chaîne <paramref name="separator" />.Si <paramref name="value" /> est un tableau vide, la méthode retourne <see cref="F:System.String.Empty" />.</returns>
      <param name="separator">Chaîne à utiliser comme séparateur.<paramref name="separator" /> est inclus dans la chaîne retournée uniquement si <paramref name="value" /> contient plusieurs éléments.</param>
      <param name="value">Tableau qui contient les éléments à concaténer. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Join(System.String,System.String[],System.Int32,System.Int32)">
      <summary>Concatène les éléments spécifiés d'un tableau de chaînes, en utilisant le séparateur spécifié entre chaque élément. </summary>
      <returns>Chaîne composée des chaînes de <paramref name="value" /> délimitées par la chaîne <paramref name="separator" />. ou<see cref="F:System.String.Empty" /> si <paramref name="count" /> est égal à zéro et que <paramref name="value" /> ne contient aucun élément, ou si <paramref name="separator" /> et tous les éléments de <paramref name="value" /> sont <see cref="F:System.String.Empty" />.</returns>
      <param name="separator">Chaîne à utiliser comme séparateur.<paramref name="separator" /> est inclus dans la chaîne retournée uniquement si <paramref name="value" /> contient plusieurs éléments.</param>
      <param name="value">Tableau qui contient les éléments à concaténer. </param>
      <param name="startIndex">Premier élément dans <paramref name="value" /> à utiliser. </param>
      <param name="count">Nombre d'éléments de <paramref name="value" /> à utiliser. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="count" /> is less than 0.-or- <paramref name="startIndex" /> plus <paramref name="count" /> is greater than the number of elements in <paramref name="value" />. </exception>
      <exception cref="T:System.OutOfMemoryException">Out of memory.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.Char)">
      <summary>Signale la position d'index de base zéro de la dernière occurrence d'un caractère Unicode spécifié dans cette instance.</summary>
      <returns>Position d'index de base zéro de <paramref name="value" /> si ce caractère est disponible ou -1 s'il est introuvable.</returns>
      <param name="value">Caractère Unicode à rechercher. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.Char,System.Int32)">
      <summary>Signale la position d'index de base zéro de la dernière occurrence d'un caractère Unicode spécifié dans cette instance.La recherche commence à une position de caractère spécifiée et se poursuit vers le début de la chaîne.</summary>
      <returns>Position d'index de base zéro de <paramref name="value" /> si ce caractère est trouvé, ou -1 s'il est introuvable ou si l'instance actuelle est égale à <see cref="F:System.String.Empty" />.</returns>
      <param name="value">Caractère Unicode à rechercher. </param>
      <param name="startIndex">Position de départ de la recherche.La recherche se poursuit à partir de <paramref name="startIndex" /> vers le début de cette instance.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than or equal to the length of this instance.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.Char,System.Int32,System.Int32)">
      <summary>Signale la position d'index de base zéro de la dernière occurrence du caractère Unicode spécifié dans une sous-chaîne de cette instance.La recherche commence à une position de caractère spécifiée et se poursuit vers le début de la chaîne pour un nombre spécifié de positions de caractères.</summary>
      <returns>Position d'index de base zéro de <paramref name="value" /> si ce caractère est trouvé, ou -1 s'il est introuvable ou si l'instance actuelle est égale à <see cref="F:System.String.Empty" />.</returns>
      <param name="value">Caractère Unicode à rechercher. </param>
      <param name="startIndex">Position de départ de la recherche.La recherche se poursuit à partir de <paramref name="startIndex" /> vers le début de cette instance.</param>
      <param name="count">Nombre de positions de caractère à examiner. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than or equal to the length of this instance.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" />
                 - <paramref name="count" /> + 1 is less than zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String)">
      <summary>Signale la position d'index de base zéro de la dernière occurrence d'une chaîne spécifiée dans cette instance.</summary>
      <returns>Position d'index de départ de base zéro de <paramref name="value" /> si cette chaîne est disponible ou -1 si elle est introuvable.Si <paramref name="value" /> est <see cref="F:System.String.Empty" />, la valeur de retour est la dernière position d'index dans cette instance.</returns>
      <param name="value">Chaîne à rechercher. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32)">
      <summary>Signale la position d'index de base zéro de la dernière occurrence d'une chaîne spécifiée dans cette instance.La recherche commence à une position de caractère spécifiée et se poursuit vers le début de la chaîne.</summary>
      <returns>Position d'index de départ de base zéro de <paramref name="value" /> si cette chaîne est trouvée, ou -1 si elle est introuvable ou si l'instance actuelle est égale à <see cref="F:System.String.Empty" />.Si <paramref name="value" /> est <see cref="F:System.String.Empty" />, la valeur de retour est la plus petite de <paramref name="startIndex" /> et la dernière position d'index dans cette instance.</returns>
      <param name="value">Chaîne à rechercher. </param>
      <param name="startIndex">Position de départ de la recherche.La recherche se poursuit à partir de <paramref name="startIndex" /> vers le début de cette instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than the length of the current instance. -or-The current instance equals <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than -1 or greater than zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32)">
      <summary>Signale la position d'index de base zéro de la dernière occurrence d'une chaîne spécifiée dans cette instance.La recherche commence à une position de caractère spécifiée et se poursuit vers le début de la chaîne pour un nombre spécifié de positions de caractères.</summary>
      <returns>Position d'index de départ de base zéro de <paramref name="value" /> si cette chaîne est trouvée, ou -1 si elle est introuvable ou si l'instance actuelle est égale à <see cref="F:System.String.Empty" />.Si <paramref name="value" /> est <see cref="F:System.String.Empty" />, la valeur de retour est la plus petite de <paramref name="startIndex" /> et la dernière position d'index dans cette instance.</returns>
      <param name="value">Chaîne à rechercher. </param>
      <param name="startIndex">Position de départ de la recherche.La recherche se poursuit à partir de <paramref name="startIndex" /> vers le début de cette instance.</param>
      <param name="count">Nombre de positions de caractère à examiner. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and  <paramref name="startIndex" /> is negative.-or- The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is greater than the length of this instance.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" />
                 - <paramref name="count" /> + 1 specifies a position that is not within this instance. -or-The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="start" /> is less than -1 or greater than zero. -or-The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="count" /> is greater than 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)">
      <summary>Signale la position d'index de base zéro de la dernière occurrence d'une chaîne spécifiée dans cette instance.La recherche commence à une position de caractère spécifiée et se poursuit vers le début de la chaîne pour le nombre spécifié de positions de caractères.Un paramètre spécifie le type de comparaison à effectuer pendant la recherche de la chaîne spécifiée.</summary>
      <returns>Position d'index de départ de base zéro du paramètre <paramref name="value" /> si cette chaîne est trouvée, ou -1 si elle est introuvable ou si l'instance actuelle est égale à <see cref="F:System.String.Empty" />.Si <paramref name="value" /> est <see cref="F:System.String.Empty" />, la valeur de retour est la plus petite de <paramref name="startIndex" /> et la dernière position d'index dans cette instance.</returns>
      <param name="value">Chaîne à rechercher. </param>
      <param name="startIndex">Position de départ de la recherche.La recherche se poursuit à partir de <paramref name="startIndex" /> vers le début de cette instance.</param>
      <param name="count">Nombre de positions de caractère à examiner. </param>
      <param name="comparisonType">L'une des valeurs d'énumération qui spécifie les règles de la recherche. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is negative.-or- The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is greater than the length of this instance.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> + 1 - <paramref name="count" /> specifies a position that is not within this instance. -or-The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="start" /> is less than -1 or greater than zero. -or-The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="count" /> is greater than 1. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)">
      <summary>Signale l'index de base zéro de la dernière occurrence d'une chaîne spécifiée dans l'objet <see cref="T:System.String" /> actuel.La recherche commence à une position de caractère spécifiée et se poursuit vers le début de la chaîne.Un paramètre spécifie le type de comparaison à effectuer pendant la recherche de la chaîne spécifiée.</summary>
      <returns>Position d'index de départ de base zéro du paramètre <paramref name="value" /> si cette chaîne est trouvée, ou -1 si elle est introuvable ou si l'instance actuelle est égale à <see cref="F:System.String.Empty" />.Si <paramref name="value" /> est <see cref="F:System.String.Empty" />, la valeur de retour est la plus petite de <paramref name="startIndex" /> et la dernière position d'index dans cette instance.</returns>
      <param name="value">Chaîne à rechercher. </param>
      <param name="startIndex">Position de départ de la recherche.La recherche se poursuit à partir de <paramref name="startIndex" /> vers le début de cette instance.</param>
      <param name="comparisonType">L'une des valeurs d'énumération qui spécifie les règles de la recherche. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than the length of the current instance. -or-The current instance equals <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than -1 or greater than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.StringComparison)">
      <summary>Signale l'index de base zéro de la dernière occurrence d'une chaîne spécifiée dans l'objet <see cref="T:System.String" /> actuel.Un paramètre spécifie le type de recherche à utiliser pour la chaîne spécifiée.</summary>
      <returns>Position d'index de départ de base zéro du paramètre <paramref name="value" /> si cette chaîne est disponible ou -1 si elle est introuvable.Si <paramref name="value" /> est <see cref="F:System.String.Empty" />, la valeur de retour est la dernière position d'index dans cette instance.</returns>
      <param name="value">Chaîne à rechercher. </param>
      <param name="comparisonType">L'une des valeurs d'énumération qui spécifie les règles de la recherche. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.LastIndexOfAny(System.Char[])">
      <summary>Signale la position d'index de base zéro de la dernière occurrence dans cette instance d'un ou plusieurs caractères spécifiés dans un tableau Unicode.</summary>
      <returns>Position d'index de la dernière occurrence dans cette instance où tout caractère dans <paramref name="anyOf" /> a été trouvé ; -1 si aucun caractère dans <paramref name="anyOf" /> n'a été trouvé.</returns>
      <param name="anyOf">Tableau de caractères Unicode contenant un ou plusieurs caractères à rechercher. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOfAny(System.Char[],System.Int32)">
      <summary>Signale la position d'index de base zéro de la dernière occurrence dans cette instance d'un ou plusieurs caractères spécifiés dans un tableau Unicode.La recherche commence à une position de caractère spécifiée et se poursuit vers le début de la chaîne.</summary>
      <returns>Position d'index de la dernière occurrence dans cette instance où tout caractère dans <paramref name="anyOf" /> a été trouvé ; -1 si aucun caractère dans <paramref name="anyOf" /> n'a été trouvé ou si l'instance actuelle est égale à <see cref="F:System.String.Empty" />.</returns>
      <param name="anyOf">Tableau de caractères Unicode contenant un ou plusieurs caractères à rechercher. </param>
      <param name="startIndex">Position de départ de la recherche.La recherche se poursuit à partir de <paramref name="startIndex" /> vers le début de cette instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> specifies a position that is not within this instance. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOfAny(System.Char[],System.Int32,System.Int32)">
      <summary>Signale la position d'index de base zéro de la dernière occurrence dans cette instance d'un ou plusieurs caractères spécifiés dans un tableau Unicode.La recherche commence à une position de caractère spécifiée et se poursuit vers le début de la chaîne pour un nombre spécifié de positions de caractères.</summary>
      <returns>Position d'index de la dernière occurrence dans cette instance où tout caractère dans <paramref name="anyOf" /> a été trouvé ; -1 si aucun caractère dans <paramref name="anyOf" /> n'a été trouvé ou si l'instance actuelle est égale à <see cref="F:System.String.Empty" />.</returns>
      <param name="anyOf">Tableau de caractères Unicode contenant un ou plusieurs caractères à rechercher. </param>
      <param name="startIndex">Position de départ de la recherche.La recherche se poursuit à partir de <paramref name="startIndex" /> vers le début de cette instance.</param>
      <param name="count">Nombre de positions de caractère à examiner. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> minus <paramref name="count" /> + 1 is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.String.Length">
      <summary>Obtient le nombre de caractères de l'objet <see cref="T:System.String" /> actuel.</summary>
      <returns>Nombre de caractères de la chaîne actuelle.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.op_Equality(System.String,System.String)">
      <summary>Détermine si deux chaînes spécifiées ont la même valeur.</summary>
      <returns>true si la valeur de <paramref name="a" /> est égale à la valeur de <paramref name="b" /> ; sinon false.</returns>
      <param name="a">Première chaîne à comparer ou null. </param>
      <param name="b">Seconde chaîne à comparer ou null. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.String.op_Inequality(System.String,System.String)">
      <summary>Détermine si deux chaînes spécifiées ont des valeurs différentes.</summary>
      <returns>true si la valeur de <paramref name="a" /> est différente de la valeur de <paramref name="b" /> ; sinon, false.</returns>
      <param name="a">Première chaîne à comparer ou null. </param>
      <param name="b">Seconde chaîne à comparer ou null. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.String.PadLeft(System.Int32)">
      <summary>Retourne une nouvelle chaîne qui aligne les caractères de cette instance à droite en les complétant par des espaces à gauche pour une longueur totale spécifiée.</summary>
      <returns>Nouvelle chaîne équivalant à cette instance, mais alignée à droite et complétée à gauche par autant de caractères que nécessaire pour créer une longueur de <paramref name="totalWidth" />.Toutefois, si <paramref name="totalWidth" /> est inférieure à la longueur de cette instance, la méthode retourne une référence à l'instance existante.Si <paramref name="totalWidth" /> est égale à la longueur de cette instance, la méthode retourne une nouvelle chaîne qui est identique à cette instance.</returns>
      <param name="totalWidth">Nombre de caractères dans la chaîne qui en résulte, égal au nombre de caractères d'origine plus tout caractère de remplissage supplémentaire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="totalWidth" /> is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.PadLeft(System.Int32,System.Char)">
      <summary>Retourne une nouvelle chaîne qui aligne les caractères de cette instance à droite en les complétant par un caractère Unicode spécifié à gauche pour une longueur totale spécifiée.</summary>
      <returns>Nouvelle chaîne équivalant à cette instance, mais alignée à droite et complétée à gauche par autant de caractères <paramref name="paddingChar" /> que nécessaire pour créer une longueur de <paramref name="totalWidth" />.Toutefois, si <paramref name="totalWidth" /> est inférieure à la longueur de cette instance, la méthode retourne une référence à l'instance existante.Si <paramref name="totalWidth" /> est égale à la longueur de cette instance, la méthode retourne une nouvelle chaîne qui est identique à cette instance.</returns>
      <param name="totalWidth">Nombre de caractères dans la chaîne qui en résulte, égal au nombre de caractères d'origine plus tout caractère de remplissage supplémentaire. </param>
      <param name="paddingChar">Caractère Unicode de remplissage. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="totalWidth" /> is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.PadRight(System.Int32)">
      <summary>Retourne une nouvelle chaîne qui aligne les caractères de cette chaîne à gauche en les complétant par des espaces à droite pour une longueur totale spécifiée.</summary>
      <returns>Nouvelle chaîne équivalant à cette instance, mais alignée à gauche et complétée à droite par autant de caractères que nécessaire pour créer une longueur de <paramref name="totalWidth" />.Toutefois, si <paramref name="totalWidth" /> est inférieure à la longueur de cette instance, la méthode retourne une référence à l'instance existante.Si <paramref name="totalWidth" /> est égale à la longueur de cette instance, la méthode retourne une nouvelle chaîne qui est identique à cette instance.</returns>
      <param name="totalWidth">Nombre de caractères dans la chaîne qui en résulte, égal au nombre de caractères d'origine plus tout caractère de remplissage supplémentaire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="totalWidth" /> is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.PadRight(System.Int32,System.Char)">
      <summary>Retourne une nouvelle chaîne qui aligne les caractères de cette chaîne à gauche en les complétant par un caractère Unicode spécifié à droite pour une longueur totale spécifiée.</summary>
      <returns>Nouvelle chaîne équivalant à cette instance, mais alignée à gauche et complétée à droite par autant de caractères <paramref name="paddingChar" /> que nécessaire pour créer une longueur de <paramref name="totalWidth" />.Toutefois, si <paramref name="totalWidth" /> est inférieure à la longueur de cette instance, la méthode retourne une référence à l'instance existante.Si <paramref name="totalWidth" /> est égale à la longueur de cette instance, la méthode retourne une nouvelle chaîne qui est identique à cette instance.</returns>
      <param name="totalWidth">Nombre de caractères dans la chaîne qui en résulte, égal au nombre de caractères d'origine plus tout caractère de remplissage supplémentaire. </param>
      <param name="paddingChar">Caractère Unicode de remplissage. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="totalWidth" /> is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Remove(System.Int32)">
      <summary>Retourne une nouvelle chaîne dans laquelle tous les caractères de l'instance actuelle ont été supprimés à partir d'une position spécifiée et jusqu'à la dernière position.</summary>
      <returns>Nouvelle chaîne équivalente à cette chaîne, à l'exception des caractères supprimés.</returns>
      <param name="startIndex">Position de base zéro où commence la suppression des caractères. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero.-or- <paramref name="startIndex" /> specifies a position that is not within this string. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Remove(System.Int32,System.Int32)">
      <summary>Retourne une nouvelle chaîne dans laquelle un nombre spécifié de caractères a été supprimé dans l'instance actuelle à partir d'une position spécifiée.</summary>
      <returns>Nouvelle chaîne équivalente à cette instance, à l'exception des caractères supprimés.</returns>
      <param name="startIndex">Position de base zéro où commence la suppression des caractères. </param>
      <param name="count">Nombre de caractères à supprimer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Either <paramref name="startIndex" /> or <paramref name="count" /> is less than zero.-or- <paramref name="startIndex" /> plus <paramref name="count" /> specify a position outside this instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Replace(System.Char,System.Char)">
      <summary>Retourne une nouvelle chaîne dans laquelle toutes les occurrences d'un caractère Unicode spécifié dans cette instance sont remplacées par un autre caractère Unicode spécifié.</summary>
      <returns>Chaîne équivalente à cette instance, sauf que toutes les instances de <paramref name="oldChar" /> sont remplacées par <paramref name="newChar" />.Si <paramref name="oldChar" /> est introuvable dans l'instance actuelle, la méthode retourne l'instance actuelle sans modification.</returns>
      <param name="oldChar">Caractère Unicode à remplacer. </param>
      <param name="newChar">Caractère Unicode permettant de remplacer toutes les occurrences de <paramref name="oldChar" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Replace(System.String,System.String)">
      <summary>Retourne une nouvelle chaîne dans laquelle toutes les occurrences d'une chaîne spécifiée dans l'instance actuelle sont remplacées par une autre chaîne spécifiée.</summary>
      <returns>Chaîne équivalente à la chaîne actuelle, sauf que toutes les instances de <paramref name="oldValue" /> sont remplacées par <paramref name="newValue" />.Si <paramref name="oldValue" /> est introuvable dans l'instance actuelle, la méthode retourne l'instance actuelle sans modification.</returns>
      <param name="oldValue">Chaîne à remplacer. </param>
      <param name="newValue">Chaîne permettant de remplacer toutes les occurrences de <paramref name="oldValue" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oldValue" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="oldValue" /> is the empty string (""). </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[])">
      <summary>Retourne un tableau de chaînes qui contient les sous-chaînes de cette instance, séparées par les éléments d'un tableau de caractères Unicode spécifié.</summary>
      <returns>Tableau dont les éléments contiennent les sous-chaînes de cette instance qui sont délimitées par un ou plusieurs caractères dans <paramref name="separator" />.Pour plus d'informations, consultez la section Remarques.</returns>
      <param name="separator">Tableau de caractères Unicode qui délimitent les sous-chaînes de cette instance, tableau vide qui ne contient pas de délimiteur, ou null. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[],System.Int32)">
      <summary>Retourne un tableau de chaînes qui contient les sous-chaînes de cette instance, séparées par les éléments d'un tableau de caractères Unicode spécifié.Un paramètre spécifie le nombre maximal de sous-chaînes à retourner.</summary>
      <returns>Tableau dont les éléments contiennent les sous-chaînes de cette instance qui sont délimitées par un ou plusieurs caractères dans <paramref name="separator" />.Pour plus d'informations, consultez la section Remarques.</returns>
      <param name="separator">Tableau de caractères Unicode qui délimitent les sous-chaînes de cette instance, tableau vide qui ne contient pas de délimiteur, ou null. </param>
      <param name="count">Nombre maximal de sous-chaînes à retourner. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[],System.Int32,System.StringSplitOptions)">
      <summary>Retourne un tableau de chaînes qui contient les sous-chaînes de cette chaîne, séparées par les éléments d'un tableau de caractères Unicode spécifié.Des paramètres spécifient le nombre maximal de sous-chaînes à retourner et s'il faut retourner les éléments vides d'un tableau.</summary>
      <returns>Tableau dont les éléments contiennent les sous-chaînes de cette chaîne qui sont délimitées par un ou plusieurs caractères dans <paramref name="separator" />.Pour plus d'informations, consultez la section Remarques.</returns>
      <param name="separator">Tableau de caractères Unicode qui délimitent les sous-chaînes de cette chaîne, tableau vide qui ne contient pas de délimiteur, ou null. </param>
      <param name="count">Nombre maximal de sous-chaînes à retourner. </param>
      <param name="options">
        <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" /> pour ignorer les éléments vides du tableau retourné ou <see cref="F:System.StringSplitOptions.None" /> pour les inclure. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[],System.StringSplitOptions)">
      <summary>Retourne un tableau de chaînes qui contient les sous-chaînes de cette chaîne, séparées par les éléments d'un tableau de caractères Unicode spécifié.Un paramètre spécifie s'il faut retourner les éléments vides d'un tableau.</summary>
      <returns>Tableau dont les éléments contiennent les sous-chaînes de cette chaîne qui sont délimitées par un ou plusieurs caractères dans <paramref name="separator" />.Pour plus d'informations, consultez la section Remarques.</returns>
      <param name="separator">Tableau de caractères Unicode qui délimitent les sous-chaînes de cette chaîne, tableau vide qui ne contient pas de délimiteur, ou null. </param>
      <param name="options">
        <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" /> pour ignorer les éléments vides du tableau retourné ou <see cref="F:System.StringSplitOptions.None" /> pour les inclure. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.String[],System.Int32,System.StringSplitOptions)">
      <summary>Retourne un tableau de chaînes qui contient les sous-chaînes de cette chaîne, séparées par les éléments d'un tableau de chaînes spécifié.Des paramètres spécifient le nombre maximal de sous-chaînes à retourner et s'il faut retourner les éléments vides d'un tableau.</summary>
      <returns>Tableau dont les éléments contiennent les sous-chaînes de cette chaîne qui sont délimitées par une ou plusieurs chaînes dans <paramref name="separator" />.Pour plus d'informations, consultez la section Remarques.</returns>
      <param name="separator">Tableau de chaînes qui délimite les sous-chaînes de cette chaîne, tableau vide qui ne contient pas de délimiteur ou null. </param>
      <param name="count">Nombre maximal de sous-chaînes à retourner. </param>
      <param name="options">
        <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" /> pour ignorer les éléments vides du tableau retourné ou <see cref="F:System.StringSplitOptions.None" /> pour les inclure. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.String[],System.StringSplitOptions)">
      <summary>Retourne un tableau de chaînes qui contient les sous-chaînes de cette chaîne, séparées par les éléments d'un tableau de chaînes spécifié.Un paramètre spécifie s'il faut retourner les éléments vides d'un tableau.</summary>
      <returns>Tableau dont les éléments contiennent les sous-chaînes de cette chaîne qui sont délimitées par une ou plusieurs chaînes dans <paramref name="separator" />.Pour plus d'informations, consultez la section Remarques.</returns>
      <param name="separator">Tableau de chaînes qui délimite les sous-chaînes de cette chaîne, tableau vide qui ne contient pas de délimiteur ou null. </param>
      <param name="options">
        <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" /> pour ignorer les éléments vides du tableau retourné ou <see cref="F:System.StringSplitOptions.None" /> pour les inclure. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.StartsWith(System.String)">
      <summary>Détermine si le début de cette instance de chaîne correspond à la chaîne spécifiée.</summary>
      <returns>true si <paramref name="value" /> correspond au début de cette instance ; sinon, false.</returns>
      <param name="value">Chaîne à comparer. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.StartsWith(System.String,System.StringComparison)">
      <summary>Détermine si le début de cette instance de chaîne correspond à la chaîne spécifiée quand elle est comparée à l'aide de l'option spécifiée.</summary>
      <returns>true si cette instance commence par <paramref name="value" /> ; sinon, false.</returns>
      <param name="value">Chaîne à comparer. </param>
      <param name="comparisonType">Une des valeurs d'énumération qui détermine le mode de comparaison de cette chaîne et <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.Substring(System.Int32)">
      <summary>Récupère une sous-chaîne de cette instance.La sous-chaîne commence à une position de caractère spécifiée et continue jusqu'à la fin de la chaîne.</summary>
      <returns>Chaîne équivalente à la sous-chaîne qui commence à <paramref name="startIndex" /> dans cette instance ou <see cref="F:System.String.Empty" /> si <paramref name="startIndex" /> est égal à la longueur de cette instance.</returns>
      <param name="startIndex">Position de caractère de départ de base zéro d'une sous-chaîne dans cette instance. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of this instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Substring(System.Int32,System.Int32)">
      <summary>Récupère une sous-chaîne de cette instance.La sous-chaîne commence à une position de caractère spécifiée et sa longueur est définie.</summary>
      <returns>Chaîne équivalente à la sous-chaîne de longueur <paramref name="length" /> qui commence à <paramref name="startIndex" /> dans cette instance ou <see cref="F:System.String.Empty" /> si <paramref name="startIndex" /> est égal à la longueur de cette instance et <paramref name="length" /> a la valeur zéro.</returns>
      <param name="startIndex">Position de caractère de départ de base zéro d'une sous-chaîne dans cette instance. </param>
      <param name="length">Nombre de caractères dans la sous-chaîne. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> plus <paramref name="length" /> indicates a position not within this instance.-or- <paramref name="startIndex" /> or <paramref name="length" /> is less than zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de l'objet <see cref="T:System.String" /> actuel. </summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> de type <see cref="T:System.Char" /> qui peut être utilisé pour itérer au sein de l'objet <see cref="T:System.String" /> actuel.</returns>
    </member>
    <member name="M:System.String.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de l'objet <see cref="T:System.String" /> actuel. </summary>
      <returns>Énumérateur qui peut être utilisé pour itérer au sein de la chaîne actuelle.</returns>
    </member>
    <member name="M:System.String.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</summary>
      <returns>Entier signé indiquant l'ordre relatif de cette instance et <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Objet à comparer à cette instance ou null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.String" />. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.String.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true si la valeur de la chaîne actuelle est <see cref="F:System.Boolean.TrueString" /> ; false si la valeur de la chaîne actuelle est <see cref="F:System.Boolean.FalseString" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.FormatException">The value of the current string is not <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.String" /> actuel.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</summary>
      <returns>Caractère à l'index 0 dans l'objet <see cref="T:System.String" /> actuel.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDateTime(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.String" /> actuel.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.String" /> actuel.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number less than <see cref="F:System.Decimal.MinValue" /> or than <see cref="F:System.Decimal.MaxValue" /> greater. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.String" /> actuel.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.String" /> actuel.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.String" /> actuel.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.String" /> actuel.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.String" /> actuel.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.String" /> actuel.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToString(System.IFormatProvider)"></member>
    <member name="M:System.String.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.String" /> actuel.</returns>
      <param name="type">Type de l'objet retourné. </param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">The value of the current <see cref="T:System.String" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.String" /> actuel.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />.</exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.String" /> actuel.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater <see cref="F:System.UInt32.MaxValue" /> or less than <see cref="F:System.UInt32.MinValue" /></exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</summary>
      <returns>Valeur convertie de l'objet <see cref="T:System.String" /> actuel.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
    </member>
    <member name="M:System.String.ToCharArray">
      <summary>Copie les caractères de cette instance vers un tableau de caractères Unicode. </summary>
      <returns>Tableau de caractères Unicode dont les éléments sont les caractères individuels de cette instance.Si cette instance est une chaîne vide, le tableau retourné est vide et sa longueur est égale à zéro.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.ToCharArray(System.Int32,System.Int32)">
      <summary>Copie les caractères d'une sous-chaîne spécifiée de cette instance vers un tableau de caractères Unicode.</summary>
      <returns>Tableau de caractères Unicode dont les éléments sont le nombre de caractères <paramref name="length" /> dans cette instance commençant à partir de la position de caractère <paramref name="startIndex" />.</returns>
      <param name="startIndex">Position de départ d'une sous-chaîne dans cette instance. </param>
      <param name="length">Longueur de la sous-chaîne dans cette instance. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than zero.-or- <paramref name="startIndex" /> plus <paramref name="length" /> is greater than the length of this instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.ToLower">
      <summary>Retourne une copie de cette chaîne convertie en minuscules.</summary>
      <returns>Chaîne en minuscules.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.ToLowerInvariant">
      <summary>Retourne une copie de cet objet <see cref="T:System.String" /> converti en minuscules à l'aide des règles de casse de la culture indifférente.</summary>
      <returns>Équivalent en minuscules de la chaîne actuelle.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.ToString">
      <summary>Retourne cette instance de <see cref="T:System.String" /> ; aucune conversion n'est effectivement effectuée.</summary>
      <returns>Chaîne actuelle.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.ToUpper">
      <summary>Retourne une copie de cette chaîne convertie en majuscules.</summary>
      <returns>Équivalent en majuscules de la chaîne actuelle.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.ToUpperInvariant">
      <summary>Retourne une copie de cet objet <see cref="T:System.String" /> converti en majuscules à l'aide des règles de casse de la culture indifférente.</summary>
      <returns>Équivalent en majuscules de la chaîne actuelle.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.Trim">
      <summary>Supprime tous les espaces blancs de début ou de fin de chaîne de l'objet <see cref="T:System.String" /> actuel.</summary>
      <returns>Chaîne restante après la suppression de tous les espaces blancs de début et de fin de la chaîne actuelle.Si aucun caractère ne peut être tronqué dans l'instance active, la méthode retourne l'instance active inchangée.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Trim(System.Char[])">
      <summary>Supprime, de l'objet <see cref="T:System.String" /> actuel, toutes les occurrences situées au début et à la fin d'un jeu de caractères spécifiés dans un tableau.</summary>
      <returns>Chaîne qui reste après la suppression de toutes les occurrences des caractères contenus dans le paramètre <paramref name="trimChars" /> du début et de la fin de la chaîne actuelle.Si <paramref name="trimChars" /> est null ou est un tableau vide, les espaces blancs sont plutôt supprimés.Si aucun caractère ne peut être tronqué dans l'instance active, la méthode retourne l'instance active inchangée.</returns>
      <param name="trimChars">Tableau de caractères Unicode à supprimer, ou null. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.TrimEnd(System.Char[])">
      <summary>Supprime, de l'objet <see cref="T:System.String" /> actuel, toutes les occurrences situées à la fin d'un jeu de caractères spécifiés dans un tableau.</summary>
      <returns>Chaîne qui reste après la suppression de toutes les occurrences des caractères contenus dans le paramètre <paramref name="trimChars" /> de la fin de la chaîne actuelle.Si <paramref name="trimChars" /> est null ou un tableau vide, ce sont les espaces blancs Unicode qui sont supprimés.Si aucun caractère ne peut être tronqué dans l'instance active, la méthode retourne l'instance active inchangée.</returns>
      <param name="trimChars">Tableau de caractères Unicode à supprimer, ou null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.TrimStart(System.Char[])">
      <summary>Supprime, de l'objet <see cref="T:System.String" /> actuel, toutes les occurrences situées au début d'un jeu de caractères spécifiés dans un tableau.</summary>
      <returns>Chaîne qui reste après la suppression de toutes les occurrences des caractères contenus dans le paramètre <paramref name="trimChars" /> du début de la chaîne actuelle.Si <paramref name="trimChars" /> est null ou est un tableau vide, les espaces blancs sont plutôt supprimés.</returns>
      <param name="trimChars">Tableau de caractères Unicode à supprimer, ou null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.StringComparison">
      <summary>Spécifie la culture, la casse et les règles de tri qui peuvent être utilisées par certaines surcharges des méthodes <see cref="M:System.String.Compare(System.String,System.String)" /> et <see cref="M:System.String.Equals(System.Object)" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.StringComparison.CurrentCulture">
      <summary>Comparez des chaînes à l'aide de règles de tri dépendantes de la culture et de la culture actuelle.</summary>
    </member>
    <member name="F:System.StringComparison.CurrentCultureIgnoreCase">
      <summary>Comparez les chaînes à l'aide de règles de tri dépendantes de la culture, de la culture actuelle, et sans tenir compte de la casse des chaînes comparées.</summary>
    </member>
    <member name="F:System.StringComparison.Ordinal">
      <summary>Comparez les chaînes à l'aide de règles de tri ordinal.</summary>
    </member>
    <member name="F:System.StringComparison.OrdinalIgnoreCase">
      <summary>Comparez les chaînes à l'aide de règles de tri ordinal sans tenir compte de la casse des chaînes comparées.</summary>
    </member>
    <member name="T:System.StringSplitOptions">
      <summary>Spécifie si les surcharges de méthode <see cref="Overload:System.String.Split" /> applicables incluent ou ignorent les sous-chaînes vides de la valeur de retour.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.StringSplitOptions.None">
      <summary>La valeur de retour inclut des éléments de tableau qui contiennent une chaîne vide</summary>
    </member>
    <member name="F:System.StringSplitOptions.RemoveEmptyEntries">
      <summary>La valeur de retour n'inclut pas les éléments de tableau qui contiennent une chaîne vide</summary>
    </member>
    <member name="T:System.ThreadStaticAttribute">
      <summary>Indique que la valeur d'un champ statique est unique pour chaque thread.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ThreadStaticAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ThreadStaticAttribute" />.</summary>
    </member>
    <member name="T:System.TimeoutException">
      <summary>Exception levée lorsque le temps alloué à un processus ou une opération a expiré.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeoutException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.TimeoutException" />.</summary>
    </member>
    <member name="M:System.TimeoutException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.TimeoutException" /> avec le message d'erreur spécifié.</summary>
      <param name="message">Message décrivant l'erreur. </param>
    </member>
    <member name="M:System.TimeoutException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.TimeoutException" /> avec le message et l'exception interne spécifiés.</summary>
      <param name="message">Message décrivant l'erreur. </param>
      <param name="innerException">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.TimeSpan">
      <summary>Représente un intervalle de temps.Pour parcourir le code source .NET Framework pour ce type, voir la Source de référence.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.TimeSpan" /> avec un nombre d'heures, de minutes et de secondes spécifié.</summary>
      <param name="hours">Nombre d'heures. </param>
      <param name="minutes">Nombre de minutes. </param>
      <param name="seconds">Nombre de secondes. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.TimeSpan" /> avec un nombre de jours, d'heures, de minutes et de secondes spécifié.</summary>
      <param name="days">Nombre de jours. </param>
      <param name="hours">Nombre d'heures. </param>
      <param name="minutes">Nombre de minutes. </param>
      <param name="seconds">Nombre de secondes. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.TimeSpan" /> avec un nombre de jours, d'heures, de minutes, de secondes et de millisecondes spécifié.</summary>
      <param name="days">Nombre de jours. </param>
      <param name="hours">Nombre d'heures. </param>
      <param name="minutes">Nombre de minutes. </param>
      <param name="seconds">Nombre de secondes. </param>
      <param name="milliseconds">Nombre de millisecondes. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int64)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.TimeSpan" /> avec le nombre de graduations spécifié.</summary>
      <param name="ticks">Période exprimée en unités de 100 nanosecondes. </param>
    </member>
    <member name="M:System.TimeSpan.Add(System.TimeSpan)">
      <summary>Retourne un nouvel objet <see cref="T:System.TimeSpan" /> dont la valeur est la somme de l'objet <see cref="T:System.TimeSpan" /> spécifié et de cette instance.</summary>
      <returns>Nouvel objet qui représente la valeur de cette instance plus la valeur de <paramref name="ts" />.</returns>
      <param name="ts">Intervalle de temps à ajouter.</param>
      <exception cref="T:System.OverflowException">The resulting <see cref="T:System.TimeSpan" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)">
      <summary>Compare deux valeurs <see cref="T:System.TimeSpan" /> et retourne un entier qui indique si la première valeur est plus courte, de même longueur, ou plus longue que la deuxième valeur.</summary>
      <returns>Une des valeurs suivantes.Valeur Description -1 <paramref name="t1" /> est plus court que <paramref name="t2" />. 0 <paramref name="t1" /> est égal à <paramref name="t2" />. 1 <paramref name="t1" /> est plus long que <paramref name="t2" />. </returns>
      <param name="t1">Premier intervalle de temps à comparer. </param>
      <param name="t2">Second intervalle de temps à comparer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.CompareTo(System.TimeSpan)">
      <summary>Compare cette instance à un objet <see cref="T:System.TimeSpan" /> spécifié et retourne un entier qui indique si cette instance est plus courte, de même longueur ou plus longue que l'objet <see cref="T:System.TimeSpan" />.</summary>
      <returns>Nombre signé indiquant les valeurs relatives de cette instance et <paramref name="value" />.Valeur Description Entier négatif Cette instance est plus courte que <paramref name="value" />. Zéro Cette instance est égale à <paramref name="value" />. Entier positif Cette instance est plus longue que <paramref name="value" />. </returns>
      <param name="value">Objet à comparer à cette instance.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Days">
      <summary>Obtient le composant jours de l'intervalle de temps représenté par la structure <see cref="T:System.TimeSpan" /> actuelle.</summary>
      <returns>Composant jour de cette instance.La valeur de retour peut être positive ou négative.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Duration">
      <summary>Retourne un nouvel objet <see cref="T:System.TimeSpan" /> dont la valeur est la valeur absolue de l'objet <see cref="T:System.TimeSpan" /> actuel.</summary>
      <returns>Nouvel objet dont la valeur est la valeur absolue de l'objet <see cref="T:System.TimeSpan" /> actuel.</returns>
      <exception cref="T:System.OverflowException">The value of this instance is <see cref="F:System.TimeSpan.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si cette instance est égale à un objet spécifié.</summary>
      <returns>true si <paramref name="value" /> est un objet <see cref="T:System.TimeSpan" /> représentant le même intervalle de temps que la structure <see cref="T:System.TimeSpan" /> actuelle, sinon, false.</returns>
      <param name="value">Objet à comparer à cette instance. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Equals(System.TimeSpan)">
      <summary>Retourne une valeur indiquant si cette instance est égale à un objet <see cref="T:System.TimeSpan" /> spécifié.</summary>
      <returns>true si <paramref name="obj" /> représente le même intervalle de temps que cette instance, sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)">
      <summary>Retourne une valeur qui indique si deux instances spécifiées de <see cref="T:System.TimeSpan" /> sont égales.</summary>
      <returns>true si les valeurs de <paramref name="t1" /> et de <paramref name="t2" /> sont égales ; sinon, false.</returns>
      <param name="t1">Premier intervalle de temps à comparer. </param>
      <param name="t2">Second intervalle de temps à comparer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromDays(System.Double)">
      <summary>Retourne un <see cref="T:System.TimeSpan" /> représentant un nombre de jours spécifié, où la spécification est précise à la milliseconde près.</summary>
      <returns>Objet qui représente une <paramref name="value" />.</returns>
      <param name="value">Nombre de jours, précis à la milliseconde près. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. -or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromHours(System.Double)">
      <summary>Retourne un <see cref="T:System.TimeSpan" /> représentant un nombre d'heures spécifié, où la spécification est précise à la milliseconde près.</summary>
      <returns>Objet qui représente une <paramref name="value" />.</returns>
      <param name="value">Nombre d'heures, précis à la milliseconde près. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. -or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromMilliseconds(System.Double)">
      <summary>Retourne un <see cref="T:System.TimeSpan" /> représentant un nombre spécifié de millisecondes.</summary>
      <returns>Objet qui représente une <paramref name="value" />.</returns>
      <param name="value">Nombre de millisecondes. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromMinutes(System.Double)">
      <summary>Retourne un <see cref="T:System.TimeSpan" /> représentant un nombre de minutes spécifié, où la spécification est précise à la milliseconde près.</summary>
      <returns>Objet qui représente une <paramref name="value" />.</returns>
      <param name="value">Nombre de minutes, précis à la milliseconde près. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromSeconds(System.Double)">
      <summary>Retourne un <see cref="T:System.TimeSpan" /> représentant un nombre de secondes spécifié, où la spécification est précise à la milliseconde près.</summary>
      <returns>Objet qui représente une <paramref name="value" />.</returns>
      <param name="value">Nombre de secondes, précis à la milliseconde près. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromTicks(System.Int64)">
      <summary>Retourne un <see cref="T:System.TimeSpan" /> représentant une durée spécifiée, où la spécification est en unités de graduations.</summary>
      <returns>Objet qui représente une <paramref name="value" />.</returns>
      <param name="value">Nombre de graduations qui représentent une durée. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.GetHashCode">
      <summary>Retourne un code de hachage pour cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Hours">
      <summary>Obtient le composant heures de l'intervalle de temps représenté par la structure <see cref="T:System.TimeSpan" /> actuelle.</summary>
      <returns>Composant heure de la structure <see cref="T:System.TimeSpan" /> actuelle.La valeur de retour est comprise entre -23 et 23.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.MaxValue">
      <summary>Représente la valeur maximale de <see cref="T:System.TimeSpan" />.Ce champ est en lecture seule.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Milliseconds">
      <summary>Obtient le composant millisecondes de l'intervalle de temps représenté par la structure <see cref="T:System.TimeSpan" /> actuelle.</summary>
      <returns>Composant milliseconde de la structure <see cref="T:System.TimeSpan" /> actuelle.La valeur de retour est comprise entre -999 et 999.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Minutes">
      <summary>Obtient le composant minutes de l'intervalle de temps représenté par la structure <see cref="T:System.TimeSpan" /> actuelle.</summary>
      <returns>Composant minute de la structure <see cref="T:System.TimeSpan" /> actuelle.La valeur de retour est comprise entre -59 et 59.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.MinValue">
      <summary>Représente la valeur minimale de <see cref="T:System.TimeSpan" />.Ce champ est en lecture seule.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Negate">
      <summary>Retourne un nouvel objet <see cref="T:System.TimeSpan" /> dont la valeur correspond à la valeur négative de cette instance.</summary>
      <returns>Nouvel objet ayant la même valeur numérique que cette instance, mais avec le signe opposé.</returns>
      <exception cref="T:System.OverflowException">The negated value of this instance cannot be represented by a <see cref="T:System.TimeSpan" />; that is, the value of this instance is <see cref="F:System.TimeSpan.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)">
      <summary>Ajoute les deux instances de <see cref="T:System.TimeSpan" /> spécifiées.</summary>
      <returns>Objet dont la valeur est égale à la somme des valeurs de <paramref name="t1" /> et <paramref name="t2" />.</returns>
      <param name="t1">Premier intervalle de temps à ajouter. </param>
      <param name="t2">Second intervalle de temps à ajouter.</param>
      <exception cref="T:System.OverflowException">The resulting <see cref="T:System.TimeSpan" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)">
      <summary>Indique si deux instances de <see cref="T:System.TimeSpan" /> sont égales.</summary>
      <returns>true si les valeurs de <paramref name="t1" /> et de <paramref name="t2" /> sont égales ; sinon, false.</returns>
      <param name="t1">Premier intervalle de temps à comparer. </param>
      <param name="t2">Second intervalle de temps à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)">
      <summary>Indique si un <see cref="T:System.TimeSpan" /> spécifié est supérieur à un autre <see cref="T:System.TimeSpan" /> spécifié.</summary>
      <returns>true si la valeur de <paramref name="t1" /> est supérieure à celle de <paramref name="t2" />, sinon, false.</returns>
      <param name="t1">Premier intervalle de temps à comparer. </param>
      <param name="t2">Second intervalle de temps à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)">
      <summary>Indique si un <see cref="T:System.TimeSpan" /> spécifié est supérieur ou égal à un autre <see cref="T:System.TimeSpan" /> spécifié.</summary>
      <returns>true si la valeur de <paramref name="t1" /> est supérieure ou égale à celle de <paramref name="t2" />, sinon, false.</returns>
      <param name="t1">Premier intervalle de temps à comparer.</param>
      <param name="t2">Second intervalle de temps à comparer.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)">
      <summary>Indique si deux instances de <see cref="T:System.TimeSpan" /> ne sont pas égales.</summary>
      <returns>true si les valeurs de <paramref name="t1" /> et de <paramref name="t2" /> ne sont pas égales, sinon, false.</returns>
      <param name="t1">Premier intervalle de temps à comparer.</param>
      <param name="t2">Second intervalle de temps à comparer.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)">
      <summary>Indique si un <see cref="T:System.TimeSpan" /> spécifié est inférieur à un autre <see cref="T:System.TimeSpan" /> spécifié.</summary>
      <returns>true si la valeur de <paramref name="t1" /> est inférieure à celle de <paramref name="t2" />, sinon, false.</returns>
      <param name="t1">Premier intervalle de temps à comparer.</param>
      <param name="t2">Second intervalle de temps à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)">
      <summary>Indique si un <see cref="T:System.TimeSpan" /> spécifié est inférieur ou égal à un autre <see cref="T:System.TimeSpan" /> spécifié.</summary>
      <returns>true si la valeur de <paramref name="t1" /> est inférieure ou égale à celle de <paramref name="t2" />, sinon, false.</returns>
      <param name="t1">Premier intervalle de temps à comparer. </param>
      <param name="t2">Second intervalle de temps à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)">
      <summary>Soustrait un <see cref="T:System.TimeSpan" /> spécifié d'un autre <see cref="T:System.TimeSpan" /> spécifié.</summary>
      <returns>Objet dont la valeur est le résultat de la valeur de <paramref name="t1" /> moins la valeur de <paramref name="t2" />.</returns>
      <param name="t1">Diminuende. </param>
      <param name="t2">Diminuteur. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_UnaryNegation(System.TimeSpan)">
      <summary>Retourne un <see cref="T:System.TimeSpan" /> dont la valeur correspond à la valeur négative de l'instance spécifiée.</summary>
      <returns>Objet ayant la même valeur numérique que cette instance, mais de signe contraire.</returns>
      <param name="t">Intervalle de temps à rendre négatif. </param>
      <exception cref="T:System.OverflowException">The negated value of this instance cannot be represented by a <see cref="T:System.TimeSpan" />; that is, the value of this instance is <see cref="F:System.TimeSpan.MinValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_UnaryPlus(System.TimeSpan)">
      <summary>Retourne l'instance spécifiée de <see cref="T:System.TimeSpan" />.</summary>
      <returns>Intervalle de temps spécifié par <paramref name="t" />.</returns>
      <param name="t">Intervalle de temps à retourner. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Parse(System.String)">
      <summary>Convertit la représentation sous forme de chaîne d'un intervalle de temps en son <see cref="T:System.TimeSpan" /> équivalent. </summary>
      <returns>Intervalle de temps qui correspond à <paramref name="s" />.</returns>
      <param name="s">Chaîne qui spécifie l'intervalle de temps à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components is outside its valid range. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Parse(System.String,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'un intervalle de temps en son <see cref="T:System.TimeSpan" /> équivalent à l'aide des informations de mise en forme spécifiées propres à la culture.</summary>
      <returns>Intervalle de temps qui correspond à <paramref name="input" />, comme indiqué par <paramref name="formatProvider" />.</returns>
      <param name="input">Chaîne qui spécifie l'intervalle de temps à convertir.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'un intervalle de temps en son <see cref="T:System.TimeSpan" /> équivalent à l'aide des informations de mise en forme spécifiées propres à la culture.Le format de la représentation sous forme de chaîne doit correspondre exactement au format spécifié.</summary>
      <returns>Intervalle de temps qui correspond à <paramref name="input" />, tel que spécifié par <paramref name="format" /> et <paramref name="formatProvider" />.</returns>
      <param name="input">Chaîne qui spécifie l'intervalle de temps à convertir.</param>
      <param name="format">Chaîne de format standard ou personnalisée qui définit le format requis pour <paramref name="input" />.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)">
      <summary>Convertit la représentation sous forme de chaîne d'un intervalle de temps en son <see cref="T:System.TimeSpan" /> équivalent à l'aide des informations de mise en forme propres à la culture et des styles spécifiés.Le format de la représentation sous forme de chaîne doit correspondre exactement au format spécifié.</summary>
      <returns>Intervalle de temps qui correspond à <paramref name="input" />, tel que spécifié par <paramref name="format" />, <paramref name="formatProvider" /> et <paramref name="styles" />.</returns>
      <param name="input">Chaîne qui spécifie l'intervalle de temps à convertir.</param>
      <param name="format">Chaîne de format standard ou personnalisée qui définit le format requis pour <paramref name="input" />.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <param name="styles">Combinaison de bits de valeurs d'énumération qui définit les éléments de style pouvant être présents dans <paramref name="input" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> is an invalid <see cref="T:System.Globalization.TimeSpanStyles" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'un intervalle de temps en son <see cref="T:System.TimeSpan" /> équivalent à l'aide du tableau de chaînes de format et des informations de mise en forme propres à la culture spécifiés.Le format de la représentation sous forme de chaîne doit correspondre exactement à l'un des formats spécifiés.</summary>
      <returns>Intervalle de temps qui correspond à <paramref name="input" />, tel que spécifié par <paramref name="formats" /> et <paramref name="formatProvider" />.</returns>
      <param name="input">Chaîne qui spécifie l'intervalle de temps à convertir.</param>
      <param name="formats">Tableau de chaînes de format standard ou personnalisées qui définit le format requis de <paramref name="input" />.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)">
      <summary>Convertit la représentation sous forme de chaîne d'un intervalle de temps en son <see cref="T:System.TimeSpan" /> équivalent à l'aide des formats, des informations de mise en forme propres à la culture et des styles spécifiés.Le format de la représentation sous forme de chaîne doit correspondre exactement à l'un des formats spécifiés.</summary>
      <returns>Intervalle de temps qui correspond à <paramref name="input" />, tel que spécifié par <paramref name="formats" />, <paramref name="formatProvider" /> et <paramref name="styles" />.</returns>
      <param name="input">Chaîne qui spécifie l'intervalle de temps à convertir.</param>
      <param name="formats">Tableau de chaînes de format standard ou personnalisées qui définit le format requis de <paramref name="input" />.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <param name="styles">Combinaison de bits de valeurs d'énumération qui définit les éléments de style pouvant être présents dans l'entrée.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> is an invalid <see cref="T:System.Globalization.TimeSpanStyles" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="P:System.TimeSpan.Seconds">
      <summary>Obtient le composant secondes de l'intervalle de temps représenté par la structure <see cref="T:System.TimeSpan" /> actuelle.</summary>
      <returns>Composant seconde de la structure <see cref="T:System.TimeSpan" /> actuelle.La valeur de retour est comprise entre -59 et 59.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Subtract(System.TimeSpan)">
      <summary>Retourne un nouvel objet <see cref="T:System.TimeSpan" /> dont la valeur est la différence entre l'objet <see cref="T:System.TimeSpan" /> spécifié et cette instance.</summary>
      <returns>Nouvel intervalle de temps dont la valeur est le résultat de la valeur de cette instance moins la valeur de <paramref name="ts" />.</returns>
      <param name="ts">Intervalle de temps à soustraire. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'instance actuelle à un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position que ce dernier dans l'ordre de tri.</summary>
      <returns>Entier signé indiquant l'ordre relatif de cette instance et <paramref name="value" />.Valeur de retour Signification Inférieure à zéro Cette instance précède <paramref name="value" /> dans l'ordre de tri.Zéro Cette instance se produit dans la même position dans l'ordre de tri que <paramref name="value" />.Supérieure à zéro Cette instance suit <paramref name="value" /> dans l'ordre de tri.ou <paramref name="value" /> a la valeur null. </returns>
      <param name="value">Objet à comparer à cette instance ou null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.TimeSpan" /> object. </exception>
    </member>
    <member name="P:System.TimeSpan.Ticks">
      <summary>Obtient le nombre de graduations représentant la valeur de la structure <see cref="T:System.TimeSpan" /> actuelle.</summary>
      <returns>Nombre de graduations figurant dans cette instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerDay">
      <summary>Représente le nombre de graduations en 1 jour.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerHour">
      <summary>Représente le nombre de graduations en 1 heure.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerMillisecond">
      <summary>Représente le nombre de graduations en 1 milliseconde.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerMinute">
      <summary>Représente le nombre de graduations en 1 minute.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerSecond">
      <summary>Représente le nombre de graduations en 1 seconde.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.ToString">
      <summary>Convertit la valeur de l'objet <see cref="T:System.TimeSpan" /> actif en sa représentation équivalente sous forme de chaîne.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de <see cref="T:System.TimeSpan" /> actuelle. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.ToString(System.String)">
      <summary>Convertit la valeur de l'objet <see cref="T:System.TimeSpan" /> actuel en sa représentation sous forme de chaîne équivalente à l'aide du format spécifié.</summary>
      <returns>Représentation sous forme de chaîne de la valeur <see cref="T:System.TimeSpan" /> actuelle au format spécifié par le paramètre <paramref name="format" />.</returns>
      <param name="format">Chaîne de format <see cref="T:System.TimeSpan" /> standard ou personnalisé.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is not recognized or is not supported.</exception>
    </member>
    <member name="M:System.TimeSpan.ToString(System.String,System.IFormatProvider)">
      <summary>Convertit la valeur de l'objet <see cref="T:System.TimeSpan" /> actuel en sa représentation sous forme de chaîne équivalente à l'aide du format et des informations de mise en forme propres à la culture spécifiés.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de <see cref="T:System.TimeSpan" /> actuelle, comme indiqué par <paramref name="format" /> et <paramref name="formatProvider" />.</returns>
      <param name="format">Chaîne de format <see cref="T:System.TimeSpan" /> standard ou personnalisé.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is not recognized or is not supported.</exception>
    </member>
    <member name="P:System.TimeSpan.TotalDays">
      <summary>Obtient la valeur de la structure <see cref="T:System.TimeSpan" /> actuelle exprimée en jours entiers et fractionnaires.</summary>
      <returns>Nombre total de jours représentés par cette instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalHours">
      <summary>Obtient la valeur de la structure <see cref="T:System.TimeSpan" /> actuelle exprimée en heures entières et fractionnaires.</summary>
      <returns>Nombre total d'heures représentées par cette instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalMilliseconds">
      <summary>Obtient la valeur de la structure <see cref="T:System.TimeSpan" /> actuelle exprimée en millisecondes entières et fractionnaires.</summary>
      <returns>Nombre total de millisecondes représentées par cette instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalMinutes">
      <summary>Obtient la valeur de la structure <see cref="T:System.TimeSpan" /> actuelle exprimée en minutes entières et fractionnaires.</summary>
      <returns>Nombre total de minutes représentées par cette instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalSeconds">
      <summary>Obtient la valeur de la structure <see cref="T:System.TimeSpan" /> actuelle exprimée en secondes entières et fractionnaires.</summary>
      <returns>Nombre total de secondes représentées par cette instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)">
      <summary>Convertit la représentation sous forme de chaîne d'un intervalle de temps en son <see cref="T:System.TimeSpan" /> équivalent à l'aide des informations de mise en forme spécifiées propres à la culture et retourne une valeur qui indique si la conversion a réussi.</summary>
      <returns>true si la conversion de <paramref name="input" /> est réussie ; sinon, false.Cette opération retourne false si le paramètre <paramref name="input" /> a la valeur null ou <see cref="F:System.String.Empty" />, a un format non valide, représente un intervalle de temps inférieur à <see cref="F:System.TimeSpan.MinValue" /> ou supérieur à <see cref="F:System.TimeSpan.MaxValue" /> ou encore possède au moins un composant « jours », « heures », « minutes » ou « secondes » en dehors de sa plage valide.</returns>
      <param name="input">Chaîne qui spécifie l'intervalle de temps à convertir.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <param name="result">Quand cette méthode est retournée, contient un objet qui représente l'intervalle de temps spécifié par <paramref name="input" />, ou <see cref="F:System.TimeSpan.Zero" /> si la conversion avait échoué.Ce paramètre est passé sans être initialisé.</param>
    </member>
    <member name="M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)">
      <summary>Convertit la représentation sous forme de chaîne d'un intervalle de temps en son <see cref="T:System.TimeSpan" /> équivalent et retourne une valeur qui indique si la conversion a réussi.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.Cette opération retourne false si le paramètre <paramref name="s" /> a la valeur null ou <see cref="F:System.String.Empty" />, a un format non valide, représente un intervalle de temps inférieur à <see cref="F:System.TimeSpan.MinValue" /> ou supérieur à <see cref="F:System.TimeSpan.MaxValue" /> ou encore possède au moins un composant « jours », « heures », « minutes » ou « secondes » en dehors de sa plage valide.</returns>
      <param name="s">Chaîne qui spécifie l'intervalle de temps à convertir.</param>
      <param name="result">Quand cette méthode est retournée, contient un objet qui représente l'intervalle de temps spécifié par <paramref name="s" />, ou <see cref="F:System.TimeSpan.Zero" /> si la conversion avait échoué.Ce paramètre est passé sans être initialisé.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)">
      <summary>Convertit la représentation sous forme de chaîne d'un intervalle de temps en son <see cref="T:System.TimeSpan" /> équivalent à l'aide du format, des informations de mise en forme propres à la culture et des styles spécifiés, et retourne une valeur qui indique si la conversion a réussi.Le format de la représentation sous forme de chaîne doit correspondre exactement au format spécifié.</summary>
      <returns>true si la conversion de <paramref name="input" /> est réussie ; sinon, false.</returns>
      <param name="input">Chaîne qui spécifie l'intervalle de temps à convertir.</param>
      <param name="format">Chaîne de format standard ou personnalisée qui définit le format requis pour <paramref name="input" />.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <param name="styles">Une ou plusieurs valeurs d'énumération qui indiquent le style d'<paramref name="input" />.</param>
      <param name="result">Quand cette méthode est retournée, contient un objet qui représente l'intervalle de temps spécifié par <paramref name="input" />, ou <see cref="F:System.TimeSpan.Zero" /> si la conversion avait échoué.Ce paramètre est passé sans être initialisé.</param>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)">
      <summary>Convertit la représentation sous forme de chaîne d'un intervalle de temps en son <see cref="T:System.TimeSpan" /> équivalent à l'aide du format et des informations de mise en forme propres à la culture spécifiés, et retourne une valeur qui indique si la conversion a réussi.Le format de la représentation sous forme de chaîne doit correspondre exactement au format spécifié.</summary>
      <returns>true si la conversion de <paramref name="input" /> est réussie ; sinon, false.</returns>
      <param name="input">Chaîne qui spécifie l'intervalle de temps à convertir.</param>
      <param name="format">Chaîne de format standard ou personnalisée qui définit le format requis pour <paramref name="input" />.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <param name="result">Quand cette méthode est retournée, contient un objet qui représente l'intervalle de temps spécifié par <paramref name="input" />, ou <see cref="F:System.TimeSpan.Zero" /> si la conversion avait échoué.Ce paramètre est passé sans être initialisé.</param>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)">
      <summary>Convertit la représentation sous forme de chaîne spécifiée d'un intervalle de temps en son <see cref="T:System.TimeSpan" /> équivalent à l'aide des formats, des informations de mise en forme propres à la culture et des styles spécifiés, et retourne une valeur qui indique si la conversion a réussi.Le format de la représentation sous forme de chaîne doit correspondre exactement à l'un des formats spécifiés.</summary>
      <returns>true si la conversion de <paramref name="input" /> est réussie ; sinon, false.</returns>
      <param name="input">Chaîne qui spécifie l'intervalle de temps à convertir.</param>
      <param name="formats">Tableau de chaînes de format standard ou personnalisées qui définit les formats acceptables d'<paramref name="input" />.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <param name="styles">Une ou plusieurs valeurs d'énumération qui indiquent le style d'<paramref name="input" />.</param>
      <param name="result">Quand cette méthode est retournée, contient un objet qui représente l'intervalle de temps spécifié par <paramref name="input" />, ou <see cref="F:System.TimeSpan.Zero" /> si la conversion avait échoué.Ce paramètre est passé sans être initialisé.</param>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)">
      <summary>Convertit la représentation sous forme de chaîne d'un intervalle de temps en son <see cref="T:System.TimeSpan" /> équivalent à l'aide des formats et des informations de mise en forme propres à la culture spécifiés, et retourne une valeur qui indique si la conversion a réussi.Le format de la représentation sous forme de chaîne doit correspondre exactement à l'un des formats spécifiés.</summary>
      <returns>true si la conversion de <paramref name="input" /> est réussie ; sinon, false.</returns>
      <param name="input">Chaîne qui spécifie l'intervalle de temps à convertir.</param>
      <param name="formats">Tableau de chaînes de format standard ou personnalisées qui définit les formats acceptables d'<paramref name="input" />.</param>
      <param name="formatProvider">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <param name="result">Quand cette méthode est retournée, contient un objet qui représente l'intervalle de temps spécifié par <paramref name="input" />, ou <see cref="F:System.TimeSpan.Zero" /> si la conversion avait échoué.Ce paramètre est passé sans être initialisé.</param>
    </member>
    <member name="F:System.TimeSpan.Zero">
      <summary>Représente la valeur zéro de <see cref="T:System.TimeSpan" />.Ce champ est en lecture seule.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.TimeZoneInfo">
      <summary>Représente un fuseau horaire dans le monde.</summary>
    </member>
    <member name="P:System.TimeZoneInfo.BaseUtcOffset">
      <summary>Obtient la différence de temps entre l'heure d'hiver du fuseau horaire actuel et le temps universel (UTC, Universal Time Coordinated).</summary>
      <returns>Objet qui indique la différence de temps entre l'heure d'hiver du fuseau horaire actuel et le temps universel coordonné.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)">
      <summary>Convertit une heure en heure d'un fuseau horaire particulier.</summary>
      <returns>Date et heure dans le fuseau horaire de destination.</returns>
      <param name="dateTime">Date et heure à convertir.   </param>
      <param name="destinationTimeZone">Fuseau horaire vers lequel convertir <paramref name="dateTime" />.</param>
      <exception cref="T:System.ArgumentException">La valeur du paramètre <paramref name="dateTime" /> représente une heure non valide.</exception>
      <exception cref="T:System.ArgumentNullException">La valeur du paramètre <paramref name="destinationTimeZone" /> est null.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)">
      <summary>Convertit une heure d'un fuseau horaire en une autre.</summary>
      <returns>Date et l'heure dans le fuseau horaire de destination correspondant au paramètre <paramref name="dateTime" /> dans le fuseau horaire source.</returns>
      <param name="dateTime">Date et heure à convertir.</param>
      <param name="sourceTimeZone">Fuseau horaire de <paramref name="dateTime" />.</param>
      <param name="destinationTimeZone">Fuseau horaire vers lequel convertir <paramref name="dateTime" />.</param>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.DateTime.Kind" /> du paramètre <paramref name="dateTime" /> a la valeur <see cref="F:System.DateTimeKind.Local" />, mais le paramètre <paramref name="sourceTimeZone" /> n'est pas égal à <see cref="F:System.DateTimeKind.Local" />.Pour plus d'informations, consultez la section Notes.ouLa propriété <see cref="P:System.DateTime.Kind" /> du paramètre <paramref name="dateTime" /> a la valeur <see cref="F:System.DateTimeKind.Utc" />, mais le paramètre <paramref name="sourceTimeZone" /> n'est pas égal à <see cref="P:System.TimeZoneInfo.Utc" />.ouLe paramètre <paramref name="dateTime" /> est une heure non valide (autrement dit, il représente une heure qui n'existe pas à cause des règles d'ajustement d'un fuseau horaire).</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="sourceTimeZone" /> est null.ouLe paramètre <paramref name="destinationTimeZone" /> est null.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)">
      <summary>Convertit une heure en heure d'un fuseau horaire particulier.</summary>
      <returns>Date et heure dans le fuseau horaire de destination.</returns>
      <param name="dateTimeOffset">Date et heure à convertir.   </param>
      <param name="destinationTimeZone">Fuseau horaire vers lequel convertir <paramref name="dateTime" />.</param>
      <exception cref="T:System.ArgumentNullException">La valeur du paramètre <paramref name="destinationTimeZone" /> est null.</exception>
    </member>
    <member name="P:System.TimeZoneInfo.DaylightName">
      <summary>Obtient le nom d'affichage pour l'heure d'été du fuseau horaire actuel.</summary>
      <returns>Nom d'affichage pour l'heure d'été du fuseau horaire.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.DisplayName">
      <summary>Obtient le nom d'affichage général qui représente le fuseau horaire.</summary>
      <returns>Nom d'affichage général du fuseau horaire.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.Equals(System.TimeZoneInfo)">
      <summary>Détermine si l'objet <see cref="T:System.TimeZoneInfo" /> en cours et un deuxième objet <see cref="T:System.TimeZoneInfo" /> sont égaux.</summary>
      <returns>true si les deux objets <see cref="T:System.TimeZoneInfo" /> sont égaux ; sinon, false.</returns>
      <param name="other">Deuxième objet à comparer avec l'objet actuel.  </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)">
      <summary>Récupère un objet <see cref="T:System.TimeZoneInfo" /> à partir du Registre selon son identificateur.</summary>
      <returns>Objet dont l'identificateur est la valeur du paramètre <paramref name="id" />.</returns>
      <param name="id">Identificateur de fuseau horaire, qui correspond à la propriété <see cref="P:System.TimeZoneInfo.Id" />.      </param>
      <exception cref="T:System.OutOfMemoryException">Le système n'a pas assez de mémoire pour conserver les informations à propos du fuseau horaire.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="id" /> est null.</exception>
      <exception cref="T:System.TimeZoneNotFoundException">L'identificateur de fuseau horaire spécifié par <paramref name="id" /> est introuvable.Cela signifie qu'une clé de Registre dont le nom correspond à <paramref name="id" /> n'existe pas, ou que la clé existe mais ne contient pas de données de fuseau horaire.</exception>
      <exception cref="T:System.Security.SecurityException">Le processus ne possède pas les autorisations requises pour lire la clé de Registre qui contient les informations de fuseau horaire.</exception>
      <exception cref="T:System.InvalidTimeZoneException">L'identificateur de fuseau horaire a été trouvé, mais les données de Registre sont endommagées.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)">
      <summary>Retourne des informations sur les dates et heures possibles auxquelles une date et heure ambiguë peut être mappée.</summary>
      <returns>Tableau d'objets qui représente des offsets de temps universel coordonné possibles auxquels une date et une heure particulières peuvent être mappées.</returns>
      <param name="dateTime">Date et heure.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateTime" /> n'est pas une heure ambiguë.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)">
      <summary>Retourne des informations sur les dates et heures possibles auxquelles une date et heure ambiguë peut être mappée.</summary>
      <returns>Tableau d'objets qui représente des offsets de temps universel coordonné possibles auxquels une date et une heure particulières peuvent être mappées.</returns>
      <param name="dateTimeOffset">Date et heure.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateTime" /> n'est pas une heure ambiguë.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetHashCode">
      <summary>Est utilisé comme fonction de hachage pour les algorithmes de hachage et les structures de données telles que les tables de hachage.</summary>
      <returns>Entier signé 32 bits qui sert de code de hachage pour cet objet <see cref="T:System.TimeZoneInfo" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetSystemTimeZones">
      <summary>Retourne une collection triée de tous les fuseaux horaires pour lesquels des informations sont disponibles sur le système local.</summary>
      <returns>Collection d'objets <see cref="T:System.TimeZoneInfo" /> en lecture seule.</returns>
      <exception cref="T:System.OutOfMemoryException">La mémoire est insuffisante pour stocker toutes les informations de fuseau horaire.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose des autorisations requises pour lire les clés de Registre qui contiennent des informations de fuseau horaire.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)">
      <summary>Calcule l'offset ou la différence entre l'heure de ce fuseau horaire et le temps universel (UTC, Universal Time Coordinated) pour une date et une heure spécifiques.</summary>
      <returns>Objet qui indique la différence d'heure entre les deux fuseaux horaires.</returns>
      <param name="dateTime">Date et heure pour lesquelles déterminer l'offset.   </param>
    </member>
    <member name="M:System.TimeZoneInfo.GetUtcOffset(System.DateTimeOffset)">
      <summary>Calcule l'offset ou la différence entre l'heure de ce fuseau horaire et le temps universel (UTC, Universal Time Coordinated) pour une date et une heure spécifiques.</summary>
      <returns>Objet qui indique la différence d'heure entre le temps universel coordonné et le fuseau horaire actuel.</returns>
      <param name="dateTimeOffset">Date et heure pour lesquelles déterminer l'offset.</param>
    </member>
    <member name="P:System.TimeZoneInfo.Id">
      <summary>Obtient l'identificateur du fuseau horaire.</summary>
      <returns>Identificateur du fuseau horaire.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)">
      <summary>Détermine si une valeur de date et d'heure particulière pour un fuseau horaire particulier est ambiguë et s'il est possible de la mapper en deux heures ou plus au temps universel (UTC, Universal Time Coordinated).</summary>
      <returns>true si le paramètre <paramref name="dateTime" /> est ambigu ; sinon, false.</returns>
      <param name="dateTime">Valeur de date et d'heure.   </param>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.DateTime.Kind" /> de la valeur <paramref name="dateTime" /> est <see cref="F:System.DateTimeKind.Local" /> et <paramref name="dateTime" /> est une heure non valide.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTimeOffset)">
      <summary>Détermine si une valeur de date et d'heure particulière pour un fuseau horaire particulier est ambiguë et s'il est possible de la mapper en deux heures ou plus au temps universel (UTC, Universal Time Coordinated).</summary>
      <returns>true si le paramètre <paramref name="dateTimeOffset" /> est ambigu dans le fuseau horaire actuel ; sinon, false.</returns>
      <param name="dateTimeOffset">Date et heure.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)">
      <summary>Indique si la date et l'heure spécifiées se trouvent dans la plage d'heures d'été pour le fuseau horaire de l'objet <see cref="T:System.TimeZoneInfo" /> en cours.</summary>
      <returns>true si le paramètre <paramref name="dateTime" /> est une heure d'été ; sinon, false.</returns>
      <param name="dateTime">Valeur de date et d'heure.   </param>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.DateTime.Kind" /> de la valeur <paramref name="dateTime" /> est <see cref="F:System.DateTimeKind.Local" /> et <paramref name="dateTime" /> est une heure non valide.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTimeOffset)">
      <summary>Indique si la date et l'heure spécifiées se trouvent dans la plage d'heures d'été pour le fuseau horaire de l'objet <see cref="T:System.TimeZoneInfo" /> en cours.</summary>
      <returns>true si le paramètre <paramref name="dateTimeOffset" /> est une heure d'été ; sinon, false.</returns>
      <param name="dateTimeOffset">Valeur de date et d'heure.</param>
    </member>
    <member name="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)">
      <summary>Indique si une valeur de date et d'heure particulière n'est pas valide.</summary>
      <returns>true si <paramref name="dateTime" /> n'est pas valide ; sinon, false.</returns>
      <param name="dateTime">Valeur de date et d'heure.   </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.TimeZoneInfo.Local">
      <summary>Obtient un objet <see cref="T:System.TimeZoneInfo" /> qui représente le fuseau horaire local.</summary>
      <returns>Objet qui représente le fuseau horaire local.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.StandardName">
      <summary>Obtient le nom complet pour l'heure d'hiver du fuseau horaire.</summary>
      <returns>Nom complet de l'heure d'hiver du fuseau horaire.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.SupportsDaylightSavingTime">
      <summary>Obtient une valeur indiquant si le fuseau horaire a des règles d'heure d'été.</summary>
      <returns>true si le fuseau horaire prend en charge l'heure d'été ; sinon, false.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.ToString">
      <summary>Renvoie le nom complet de l'objet <see cref="T:System.TimeZoneInfo" /> en cours.</summary>
      <returns>Valeur de la propriété <see cref="P:System.TimeZoneInfo.DisplayName" /> de l'objet <see cref="T:System.TimeZoneInfo" /> en cours.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.Utc">
      <summary>Obtient un objet <see cref="T:System.TimeZoneInfo" /> qui représente la zone de temps universel (UTC, Universal Time Coordinated).</summary>
      <returns>Objet qui représente la zone de temps universel coordonné.</returns>
    </member>
    <member name="T:System.Tuple">
      <summary>Fournit des méthodes statiques pour la création d'objets tuple. Pour parcourir le code source .NET Framework pour ce type, voir la Source de référence.</summary>
    </member>
    <member name="M:System.Tuple.Create``1(``0)">
      <summary>Crée un tuple à 1 composant, ou singleton.</summary>
      <returns>Tuple dont la valeur est (<paramref name="item1" />).</returns>
      <param name="item1">Valeur du seul composant du tuple.</param>
      <typeparam name="T1">Type du seul composant du tuple.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``2(``0,``1)">
      <summary>Crée un tuple à 2 composants, ou paire.</summary>
      <returns>Tuple à 2 composants dont la valeur est (<paramref name="item1" />, <paramref name="item2" />).</returns>
      <param name="item1">Valeur du premier composant du tuple.</param>
      <param name="item2">Valeur du second composant du tuple.</param>
      <typeparam name="T1">Type du premier composant du tuple.</typeparam>
      <typeparam name="T2">Type du second composant du tuple.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``3(``0,``1,``2)">
      <summary>Crée un tuple à 3 composants, ou triple.</summary>
      <returns>Tuple à 3 composants dont la valeur est (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />).</returns>
      <param name="item1">Valeur du premier composant du tuple.</param>
      <param name="item2">Valeur du second composant du tuple.</param>
      <param name="item3">Valeur du troisième composant du tuple.</param>
      <typeparam name="T1">Type du premier composant du tuple.</typeparam>
      <typeparam name="T2">Type du second composant du tuple.</typeparam>
      <typeparam name="T3">Type du troisième composant du tuple.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``4(``0,``1,``2,``3)">
      <summary>Crée un tuple à 4 composants, ou quadruple.</summary>
      <returns>Tuple à 4 composants dont la valeur est (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />).</returns>
      <param name="item1">Valeur du premier composant du tuple.</param>
      <param name="item2">Valeur du second composant du tuple.</param>
      <param name="item3">Valeur du troisième composant du tuple.</param>
      <param name="item4">Valeur du quatrième composant du tuple.</param>
      <typeparam name="T1">Type du premier composant du tuple.</typeparam>
      <typeparam name="T2">Type du second composant du tuple.</typeparam>
      <typeparam name="T3">Type du troisième composant du tuple.</typeparam>
      <typeparam name="T4">Type du quatrième composant du tuple.  </typeparam>
    </member>
    <member name="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
      <summary>Crée un tuple à 5 composants, ou quintuple.</summary>
      <returns>Tuple à 5 composants dont la valeur est (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />).</returns>
      <param name="item1">Valeur du premier composant du tuple.</param>
      <param name="item2">Valeur du second composant du tuple.</param>
      <param name="item3">Valeur du troisième composant du tuple.</param>
      <param name="item4">Valeur du quatrième composant du tuple.</param>
      <param name="item5">Valeur du cinquième composant du tuple.</param>
      <typeparam name="T1">Type du premier composant du tuple.</typeparam>
      <typeparam name="T2">Type du second composant du tuple.</typeparam>
      <typeparam name="T3">Type du troisième composant du tuple.</typeparam>
      <typeparam name="T4">Type du quatrième composant du tuple.</typeparam>
      <typeparam name="T5">Type du cinquième composant du tuple.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
      <summary>Crée un tuple à 6 composants, ou sextuple.</summary>
      <returns>Tuple à 6 composants dont la valeur est (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />).</returns>
      <param name="item1">Valeur du premier composant du tuple.</param>
      <param name="item2">Valeur du second composant du tuple.</param>
      <param name="item3">Valeur du troisième composant du tuple.</param>
      <param name="item4">Valeur du quatrième composant du tuple.</param>
      <param name="item5">Valeur du cinquième composant du tuple.</param>
      <param name="item6">Valeur du sixième composant du tuple.</param>
      <typeparam name="T1">Type du premier composant du tuple.</typeparam>
      <typeparam name="T2">Type du second composant du tuple.</typeparam>
      <typeparam name="T3">Type du troisième composant du tuple.</typeparam>
      <typeparam name="T4">Type du quatrième composant du tuple.</typeparam>
      <typeparam name="T5">Type du cinquième composant du tuple.</typeparam>
      <typeparam name="T6">Type du sixième composant du tuple.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
      <summary>Crée un tuples à 7 composants, ou septuple.</summary>
      <returns>Tuple à 7 composants dont la valeur est (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />, <paramref name="item7" />).</returns>
      <param name="item1">Valeur du premier composant du tuple.</param>
      <param name="item2">Valeur du second composant du tuple.</param>
      <param name="item3">Valeur du troisième composant du tuple.</param>
      <param name="item4">Valeur du quatrième composant du tuple.</param>
      <param name="item5">Valeur du cinquième composant du tuple.</param>
      <param name="item6">Valeur du sixième composant du tuple.</param>
      <param name="item7">Valeur du septième composant du tuple.</param>
      <typeparam name="T1">Type du premier composant du tuple.</typeparam>
      <typeparam name="T2">Type du second composant du tuple.</typeparam>
      <typeparam name="T3">Type du troisième composant du tuple.</typeparam>
      <typeparam name="T4">Type du quatrième composant du tuple.</typeparam>
      <typeparam name="T5">Type du cinquième composant du tuple.</typeparam>
      <typeparam name="T6">Type du sixième composant du tuple.</typeparam>
      <typeparam name="T7">Type du septième composant du tuple.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
      <summary>Crée un tuples à 8 composants, ou octuple.</summary>
      <returns>Tuple à 8 composants (octuple) dont la valeur est (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />, <paramref name="item7" />, <paramref name="item8" />). </returns>
      <param name="item1">Valeur du premier composant du tuple.</param>
      <param name="item2">Valeur du second composant du tuple.</param>
      <param name="item3">Valeur du troisième composant du tuple.</param>
      <param name="item4">Valeur du quatrième composant du tuple.</param>
      <param name="item5">Valeur du cinquième composant du tuple.</param>
      <param name="item6">Valeur du sixième composant du tuple.</param>
      <param name="item7">Valeur du septième composant du tuple.</param>
      <param name="item8">Valeur du huitième composant du tuple.</param>
      <typeparam name="T1">Type du premier composant du tuple.</typeparam>
      <typeparam name="T2">Type du second composant du tuple.</typeparam>
      <typeparam name="T3">Type du troisième composant du tuple.</typeparam>
      <typeparam name="T4">Type du quatrième composant du tuple.</typeparam>
      <typeparam name="T5">Type du cinquième composant du tuple.</typeparam>
      <typeparam name="T6">Type du sixième composant du tuple.</typeparam>
      <typeparam name="T7">Type du septième composant du tuple.</typeparam>
      <typeparam name="T8">Type du huitième composant du tuple.</typeparam>
    </member>
    <member name="T:System.Tuple`1">
      <summary>Représente un objet de 1 tuple, ou singleton. </summary>
      <typeparam name="T1">Type du seul composant du tuple.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Tuple`1.#ctor(`0)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Tuple`1" />.</summary>
      <param name="item1">Valeur du seul composant du tuple.</param>
    </member>
    <member name="M:System.Tuple`1.Equals(System.Object)">
      <summary>Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`1" /> actif est égal à un objet spécifié.</summary>
      <returns>true si l'instance actuelle est égale à l'objet spécifié ; sinon, false.</returns>
      <param name="obj">Objet à comparer avec cette instance.</param>
    </member>
    <member name="M:System.Tuple`1.GetHashCode">
      <summary>Retourne le code de hachage pour l'objet <see cref="T:System.Tuple`1" /> en cours.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.Tuple`1.Item1">
      <summary>Obtient la valeur du seul composant de l'objet <see cref="T:System.Tuple`1" />. </summary>
      <returns>Valeur du seul composant de l'objet <see cref="T:System.Tuple`1" /> actuel.</returns>
    </member>
    <member name="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Compare l'objet <see cref="T:System.Tuple`1" /> actif à un objet spécifié à l'aide d'un comparateur spécifié et retourne un entier qui indique si l'objet actif précède, suit ou est dans la même position que l'objet spécifié dans l'ordre de tri.</summary>
      <returns>Entier signé qui indique la position relative de cette instance et de <paramref name="other" /> dans l'ordre de tri, comme indiqué dans le tableau suivant.ValeurDescription Entier négatifCette instance précède <paramref name="other" />.ZéroCette instance et <paramref name="other" /> ont la même position dans l'ordre de tri.Entier positifCette instance suit <paramref name="other" />.</returns>
      <param name="other">Objet à comparer à l'instance actuelle.</param>
      <param name="comparer">Objet qui fournit des règles personnalisées pour la comparaison.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> n'est pas un objet <see cref="T:System.Tuple`1" />.</exception>
    </member>
    <member name="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`1" /> actuel est égal à un objet spécifié selon une méthode de comparaison spécifiée.</summary>
      <returns>true si l'instance actuelle est égale à l'objet spécifié ; sinon, false.</returns>
      <param name="other">Objet à comparer avec cette instance.</param>
      <param name="comparer">Objet qui définit la méthode à utiliser pour évaluer si les deux objets sont égaux.</param>
    </member>
    <member name="M:System.Tuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Calcule le code de hachage pour l'objet <see cref="T:System.Tuple`1" /> actuel à l'aide d'une méthode de calcul spécifiée.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <param name="comparer">Objet dont la méthode <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcule le code de hachage de l'objet <see cref="T:System.Tuple`1" /> actuel.</param>
    </member>
    <member name="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'objet <see cref="T:System.Tuple`1" /> actif avec un objet spécifié et retourne un entier qui indique si l'objet actif précède, suit ou est dans la même position que l'objet spécifié dans l'ordre de tri.</summary>
      <returns>Entier signé qui indique la position relative de cette instance et de <paramref name="obj" /> dans l'ordre de tri, comme indiqué dans le tableau suivant.ValeurDescription Entier négatifCette instance précède <paramref name="obj" />.ZéroCette instance et <paramref name="obj" /> ont la même position dans l'ordre de tri.Entier positifCette instance suit <paramref name="obj" />.</returns>
      <param name="obj">Objet à comparer à l'instance actuelle.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> n'est pas un objet <see cref="T:System.Tuple`1" />.</exception>
    </member>
    <member name="M:System.Tuple`1.ToString">
      <summary>Retourne une chaîne qui représente la valeur de cette instance <see cref="T:System.Tuple`1" />.</summary>
      <returns>Représentation sous forme de chaîne de cet objet <see cref="T:System.Tuple`1" />.</returns>
    </member>
    <member name="T:System.Tuple`2">
      <summary>Représente un objet de 2 tuples, ou paire. </summary>
      <typeparam name="T1">Type du premier composant du tuple.</typeparam>
      <typeparam name="T2">Type du second composant du tuple.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`2.#ctor(`0,`1)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Tuple`2" />.</summary>
      <param name="item1">Valeur du premier composant du tuple.</param>
      <param name="item2">Valeur du second composant du tuple.</param>
    </member>
    <member name="M:System.Tuple`2.Equals(System.Object)">
      <summary>Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`2" /> actif est égal à un objet spécifié.</summary>
      <returns>true si l'instance actuelle est égale à l'objet spécifié ; sinon, false.</returns>
      <param name="obj">Objet à comparer avec cette instance.</param>
    </member>
    <member name="M:System.Tuple`2.GetHashCode">
      <summary>Retourne le code de hachage pour l'objet <see cref="T:System.Tuple`2" /> en cours.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.Tuple`2.Item1">
      <summary>Obtient la valeur du premier composant de l'objet <see cref="T:System.Tuple`2" /> actuel.</summary>
      <returns>Valeur du premier composant de l'objet <see cref="T:System.Tuple`2" /> actuel.</returns>
    </member>
    <member name="P:System.Tuple`2.Item2">
      <summary>Obtient la valeur du deuxième composant de l'objet <see cref="T:System.Tuple`2" /> actuel.</summary>
      <returns>Valeur du deuxième composant de l'objet <see cref="T:System.Tuple`2" /> actuel.</returns>
    </member>
    <member name="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Compare l'objet <see cref="T:System.Tuple`2" /> actif à un objet spécifié à l'aide d'un comparateur spécifié et retourne un entier qui indique si l'objet actif précède, suit ou est dans la même position que l'objet spécifié dans l'ordre de tri.</summary>
      <returns>Entier signé qui indique la position relative de cette instance et de <paramref name="other" /> dans l'ordre de tri, comme indiqué dans le tableau suivant.ValeurDescription Entier négatifCette instance précède <paramref name="other" />.ZéroCette instance et <paramref name="other" /> ont la même position dans l'ordre de tri.Entier positifCette instance suit <paramref name="other" />.</returns>
      <param name="other">Objet à comparer à l'instance actuelle.</param>
      <param name="comparer">Objet qui fournit des règles personnalisées pour la comparaison.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> n'est pas un objet <see cref="T:System.Tuple`2" />.</exception>
    </member>
    <member name="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`2" /> actuel est égal à un objet spécifié selon une méthode de comparaison spécifiée.</summary>
      <returns>true si l'instance actuelle est égale à l'objet spécifié ; sinon, false.</returns>
      <param name="other">Objet à comparer avec cette instance.</param>
      <param name="comparer">Objet qui définit la méthode à utiliser pour évaluer si les deux objets sont égaux.</param>
    </member>
    <member name="M:System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Calcule le code de hachage pour l'objet <see cref="T:System.Tuple`2" /> actuel à l'aide d'une méthode de calcul spécifiée.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <param name="comparer">Objet dont la méthode <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcule le code de hachage de l'objet <see cref="T:System.Tuple`2" /> actuel.</param>
    </member>
    <member name="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'objet <see cref="T:System.Tuple`2" /> actuel à un objet spécifié et retourne un entier qui indique si l'objet actuel précède, suit ou est dans la même position que l'objet spécifié dans l'ordre de tri.</summary>
      <returns>Entier signé qui indique la position relative de cette instance et de <paramref name="obj" /> dans l'ordre de tri, comme indiqué dans le tableau suivant.ValeurDescription Entier négatifCette instance précède <paramref name="obj" />.ZéroCette instance et <paramref name="obj" /> ont la même position dans l'ordre de tri.Entier positifCette instance suit <paramref name="obj" />.</returns>
      <param name="obj">Objet à comparer à l'instance actuelle.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> n'est pas un objet <see cref="T:System.Tuple`2" />.</exception>
    </member>
    <member name="M:System.Tuple`2.ToString">
      <summary>Retourne une chaîne qui représente la valeur de cette instance <see cref="T:System.Tuple`2" />.</summary>
      <returns>Représentation sous forme de chaîne de cet objet <see cref="T:System.Tuple`2" />.</returns>
    </member>
    <member name="T:System.Tuple`3">
      <summary>Représente un objet de 3 tuples, ou triple. </summary>
      <typeparam name="T1">Type du premier composant du tuple.</typeparam>
      <typeparam name="T2">Type du second composant du tuple.</typeparam>
      <typeparam name="T3">Type du troisième composant du tuple.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`3.#ctor(`0,`1,`2)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Tuple`3" />.</summary>
      <param name="item1">Valeur du premier composant du tuple.</param>
      <param name="item2">Valeur du second composant du tuple.</param>
      <param name="item3">Valeur du troisième composant du tuple.</param>
    </member>
    <member name="M:System.Tuple`3.Equals(System.Object)">
      <summary>Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`3" /> actif est égal à un objet spécifié.</summary>
      <returns>true si l'instance actuelle est égale à l'objet spécifié ; sinon, false.</returns>
      <param name="obj">Objet à comparer avec cette instance.</param>
    </member>
    <member name="M:System.Tuple`3.GetHashCode">
      <summary>Retourne le code de hachage pour l'objet <see cref="T:System.Tuple`3" /> en cours.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.Tuple`3.Item1">
      <summary>Obtient la valeur du premier composant de l'objet <see cref="T:System.Tuple`3" /> actuel.</summary>
      <returns>Valeur du premier composant de l'objet <see cref="T:System.Tuple`3" /> actuel.</returns>
    </member>
    <member name="P:System.Tuple`3.Item2">
      <summary>Obtient la valeur du deuxième composant de l'objet <see cref="T:System.Tuple`3" /> actuel.</summary>
      <returns>Valeur du deuxième composant de l'objet <see cref="T:System.Tuple`3" /> actuel.</returns>
    </member>
    <member name="P:System.Tuple`3.Item3">
      <summary>Obtient la valeur du troisième composant de l'objet <see cref="T:System.Tuple`3" /> actuel.</summary>
      <returns>Valeur du troisième composant de l'objet <see cref="T:System.Tuple`3" /> actuel.</returns>
    </member>
    <member name="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Compare l'objet <see cref="T:System.Tuple`3" /> actif à un objet spécifié à l'aide d'un comparateur spécifié et retourne un entier qui indique si l'objet actif précède, suit ou est dans la même position que l'objet spécifié dans l'ordre de tri.</summary>
      <returns>Entier signé qui indique la position relative de cette instance et de <paramref name="other" /> dans l'ordre de tri, comme indiqué dans le tableau suivant.ValeurDescription Entier négatifCette instance précède <paramref name="other" />.ZéroCette instance et <paramref name="other" /> ont la même position dans l'ordre de tri.Entier positifCette instance suit <paramref name="other" />.</returns>
      <param name="other">Objet à comparer à l'instance actuelle.</param>
      <param name="comparer">Objet qui fournit des règles personnalisées pour la comparaison.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> n'est pas un objet <see cref="T:System.Tuple`3" />.</exception>
    </member>
    <member name="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`3" /> actuel est égal à un objet spécifié selon une méthode de comparaison spécifiée.</summary>
      <returns>true si l'instance actuelle est égale à l'objet spécifié ; sinon, false.</returns>
      <param name="other">Objet à comparer avec cette instance.</param>
      <param name="comparer">Objet qui définit la méthode à utiliser pour évaluer si les deux objets sont égaux.</param>
    </member>
    <member name="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Calcule le code de hachage pour l'objet <see cref="T:System.Tuple`3" /> actif à l'aide d'une méthode de calcul spécifiée.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <param name="comparer">Objet dont la méthode <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcule le code de hachage de l'objet <see cref="T:System.Tuple`3" /> actuel.</param>
    </member>
    <member name="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'objet <see cref="T:System.Tuple`3" /> actif à un objet spécifié et retourne un entier qui indique si l'objet actif précède, suit ou est dans la même position que l'objet spécifié dans l'ordre de tri.</summary>
      <returns>Entier signé qui indique la position relative de cette instance et de <paramref name="obj" /> dans l'ordre de tri, comme indiqué dans le tableau suivant.ValeurDescription Entier négatifCette instance précède <paramref name="obj" />.ZéroCette instance et <paramref name="obj" /> ont la même position dans l'ordre de tri.Entier positifCette instance suit <paramref name="obj" />.</returns>
      <param name="obj">Objet à comparer à l'instance actuelle.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> n'est pas un objet <see cref="T:System.Tuple`3" />.</exception>
    </member>
    <member name="M:System.Tuple`3.ToString">
      <summary>Retourne une chaîne qui représente la valeur de cette instance <see cref="T:System.Tuple`3" />.</summary>
      <returns>Représentation sous forme de chaîne de cet objet <see cref="T:System.Tuple`3" />.</returns>
    </member>
    <member name="T:System.Tuple`4">
      <summary>Représente un objet de 4 tuples, ou quadruple. </summary>
      <typeparam name="T1">Type du premier composant du tuple.</typeparam>
      <typeparam name="T2">Type du second composant du tuple.</typeparam>
      <typeparam name="T3">Type du troisième composant du tuple.</typeparam>
      <typeparam name="T4">Type du quatrième composant du tuple.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Tuple`4" />.</summary>
      <param name="item1">Valeur du premier composant du tuple.</param>
      <param name="item2">Valeur du second composant du tuple.</param>
      <param name="item3">Valeur du troisième composant du tuple.</param>
      <param name="item4">Valeur du quatrième composant du tuple.</param>
    </member>
    <member name="M:System.Tuple`4.Equals(System.Object)">
      <summary>Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`4" /> actif est égal à un objet spécifié.</summary>
      <returns>true si l'instance actuelle est égale à l'objet spécifié ; sinon, false.</returns>
      <param name="obj">Objet à comparer avec cette instance.</param>
    </member>
    <member name="M:System.Tuple`4.GetHashCode">
      <summary>Retourne le code de hachage pour l'objet <see cref="T:System.Tuple`4" /> en cours.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.Tuple`4.Item1">
      <summary>Obtient la valeur du premier composant de l'objet <see cref="T:System.Tuple`4" /> actuel.</summary>
      <returns>Valeur du premier composant de l'objet <see cref="T:System.Tuple`4" /> actuel.</returns>
    </member>
    <member name="P:System.Tuple`4.Item2">
      <summary>Obtient la valeur du deuxième composant de l'objet <see cref="T:System.Tuple`4" /> actuel.</summary>
      <returns>Valeur du deuxième composant de l'objet <see cref="T:System.Tuple`4" /> actuel.</returns>
    </member>
    <member name="P:System.Tuple`4.Item3">
      <summary>Obtient la valeur du troisième composant de l'objet <see cref="T:System.Tuple`4" /> actuel.</summary>
      <returns>Valeur du troisième composant de l'objet <see cref="T:System.Tuple`4" /> actuel.</returns>
    </member>
    <member name="P:System.Tuple`4.Item4">
      <summary>Obtient la valeur du quatrième composant de l'objet <see cref="T:System.Tuple`4" /> actuel.</summary>
      <returns>Valeur du quatrième composant de l'objet <see cref="T:System.Tuple`4" /> actuel.</returns>
    </member>
    <member name="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Compare l'objet <see cref="T:System.Tuple`4" /> actif à un objet spécifié à l'aide d'un comparateur spécifié et retourne un entier qui indique si l'objet actif précède, suit ou se trouve à la même position que l'objet spécifié dans l'ordre de tri.</summary>
      <returns>Entier signé qui indique la position relative de cette instance et de <paramref name="other" /> dans l'ordre de tri, comme indiqué dans le tableau suivant.ValeurDescription Entier négatifCette instance précède <paramref name="other" />.ZéroCette instance et <paramref name="other" /> ont la même position dans l'ordre de tri.Entier positifCette instance suit <paramref name="other" />.</returns>
      <param name="other">Objet à comparer à l'instance actuelle.</param>
      <param name="comparer">Objet qui fournit des règles personnalisées pour la comparaison.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> n'est pas un objet <see cref="T:System.Tuple`4" />.</exception>
    </member>
    <member name="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`4" /> actuel est égal à un objet spécifié selon une méthode de comparaison spécifiée.</summary>
      <returns>true si l'instance actuelle est égale à l'objet spécifié ; sinon, false. </returns>
      <param name="other">Objet à comparer avec cette instance.</param>
      <param name="comparer">Objet qui définit la méthode à utiliser pour évaluer si les deux objets sont égaux.</param>
    </member>
    <member name="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Calcule le code de hachage pour l'objet <see cref="T:System.Tuple`4" /> actif à l'aide d'une méthode de calcul spécifiée.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <param name="comparer">Objet dont la méthode <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcule le code de hachage de l'objet <see cref="T:System.Tuple`4" /> actuel.</param>
    </member>
    <member name="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'objet <see cref="T:System.Tuple`4" /> actuel à un objet spécifié et retourne un entier qui indique si l'objet actuel précède, suit ou est dans la même position que l'objet spécifié dans l'ordre de tri.</summary>
      <returns>Entier signé qui indique la position relative de cette instance et de <paramref name="obj" /> dans l'ordre de tri, comme indiqué dans le tableau suivant.ValeurDescription Entier négatifCette instance précède <paramref name="obj" />.ZéroCette instance et <paramref name="obj" /> ont la même position dans l'ordre de tri.Entier positifCette instance suit <paramref name="obj" />.</returns>
      <param name="obj">Objet à comparer à l'instance actuelle.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> n'est pas un objet <see cref="T:System.Tuple`4" />.</exception>
    </member>
    <member name="M:System.Tuple`4.ToString">
      <summary>Retourne une chaîne qui représente la valeur de cette instance <see cref="T:System.Tuple`4" />.</summary>
      <returns>Représentation sous forme de chaîne de cet objet <see cref="T:System.Tuple`4" />.</returns>
    </member>
    <member name="T:System.Tuple`5">
      <summary>Représente un objet de 5 tuples, ou quintuple. </summary>
      <typeparam name="T1">Type du premier composant du tuple.</typeparam>
      <typeparam name="T2">Type du second composant du tuple.</typeparam>
      <typeparam name="T3">Type du troisième composant du tuple.</typeparam>
      <typeparam name="T4">Type du quatrième composant du tuple.</typeparam>
      <typeparam name="T5">Type du cinquième composant du tuple.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Tuple`5" />.</summary>
      <param name="item1">Valeur du premier composant du tuple.</param>
      <param name="item2">Valeur du second composant du tuple.</param>
      <param name="item3">Valeur du troisième composant du tuple.</param>
      <param name="item4">Valeur du quatrième composant du tuple.</param>
      <param name="item5">Valeur du cinquième composant du tuple.</param>
    </member>
    <member name="M:System.Tuple`5.Equals(System.Object)">
      <summary>Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`5" /> actif est égal à un objet spécifié.</summary>
      <returns>true si l'instance actuelle est égale à l'objet spécifié ; sinon, false.</returns>
      <param name="obj">Objet à comparer avec cette instance.</param>
    </member>
    <member name="M:System.Tuple`5.GetHashCode">
      <summary>Retourne le code de hachage pour l'objet <see cref="T:System.Tuple`5" /> en cours.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.Tuple`5.Item1">
      <summary>Obtient la valeur du premier composant de l'objet <see cref="T:System.Tuple`5" /> actif.</summary>
      <returns>Valeur du premier composant de l'objet <see cref="T:System.Tuple`5" /> actif.</returns>
    </member>
    <member name="P:System.Tuple`5.Item2">
      <summary>Obtient la valeur du deuxième composant de l'objet <see cref="T:System.Tuple`5" /> actif.</summary>
      <returns>Valeur du deuxième composant de l'objet <see cref="T:System.Tuple`5" /> actuel.</returns>
    </member>
    <member name="P:System.Tuple`5.Item3">
      <summary>Obtient la valeur du troisième composant de l'objet <see cref="T:System.Tuple`5" /> actif.</summary>
      <returns>Valeur du troisième composant de l'objet <see cref="T:System.Tuple`5" /> actif.</returns>
    </member>
    <member name="P:System.Tuple`5.Item4">
      <summary>Obtient la valeur du quatrième composant de l'objet <see cref="T:System.Tuple`5" /> actif.</summary>
      <returns>Valeur du quatrième composant de l'objet <see cref="T:System.Tuple`5" /> actif.</returns>
    </member>
    <member name="P:System.Tuple`5.Item5">
      <summary>Obtient la valeur du cinquième composant de l'objet <see cref="T:System.Tuple`5" /> actif.</summary>
      <returns>Valeur du cinquième composant de l'objet <see cref="T:System.Tuple`5" /> actif.</returns>
    </member>
    <member name="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Compare l'objet <see cref="T:System.Tuple`5" /> actif à un objet spécifié à l'aide d'un comparateur spécifié et retourne un entier qui indique si l'objet actif précède, suit ou se trouve à la même position que l'objet spécifié dans l'ordre de tri.</summary>
      <returns>Entier signé qui indique la position relative de cette instance et de <paramref name="other" /> dans l'ordre de tri, comme indiqué dans le tableau suivant.ValeurDescription Entier négatifCette instance précède <paramref name="other" />.ZéroCette instance et <paramref name="other" /> ont la même position dans l'ordre de tri.Entier positifCette instance suit <paramref name="other" />.</returns>
      <param name="other">Objet à comparer à l'instance actuelle.</param>
      <param name="comparer">Objet qui fournit des règles personnalisées pour la comparaison.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> n'est pas un objet <see cref="T:System.Tuple`5" />.</exception>
    </member>
    <member name="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`5" /> actuel est égal à un objet spécifié selon une méthode de comparaison spécifiée.</summary>
      <returns>true si l'instance actuelle est égale à l'objet spécifié ; sinon, false.</returns>
      <param name="other">Objet à comparer avec cette instance.</param>
      <param name="comparer">Objet qui définit la méthode à utiliser pour évaluer si les deux objets sont égaux.</param>
    </member>
    <member name="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Calcule le code de hachage pour l'objet <see cref="T:System.Tuple`5" /> actif à l'aide d'une méthode de calcul spécifiée.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <param name="comparer">Objet dont la méthode <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcule le code de hachage de l'objet <see cref="T:System.Tuple`5" /> actuel.</param>
    </member>
    <member name="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'objet <see cref="T:System.Tuple`5" /> actuel à un objet spécifié et retourne un entier qui indique si l'objet actuel précède, suit ou est dans la même position que l'objet spécifié dans l'ordre de tri.</summary>
      <returns>Entier signé qui indique la position relative de cette instance et de <paramref name="obj" /> dans l'ordre de tri, comme indiqué dans le tableau suivant.ValeurDescription Entier négatifCette instance précède <paramref name="obj" />.ZéroCette instance et <paramref name="obj" /> ont la même position dans l'ordre de tri.Entier positifCette instance suit <paramref name="obj" />.</returns>
      <param name="obj">Objet à comparer à l'instance actuelle.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> n'est pas un objet <see cref="T:System.Tuple`5" />.</exception>
    </member>
    <member name="M:System.Tuple`5.ToString">
      <summary>Retourne une chaîne qui représente la valeur de cette instance <see cref="T:System.Tuple`5" />.</summary>
      <returns>Représentation sous forme de chaîne de cet objet <see cref="T:System.Tuple`5" />.</returns>
    </member>
    <member name="T:System.Tuple`6">
      <summary>Représente un objet de 6 tuples, ou sextuple. </summary>
      <typeparam name="T1">Type du premier composant du tuple.</typeparam>
      <typeparam name="T2">Type du second composant du tuple.</typeparam>
      <typeparam name="T3">Type du troisième composant du tuple.</typeparam>
      <typeparam name="T4">Type du quatrième composant du tuple.</typeparam>
      <typeparam name="T5">Type du cinquième composant du tuple.</typeparam>
      <typeparam name="T6">Type du sixième composant du tuple.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`6.#ctor(`0,`1,`2,`3,`4,`5)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Tuple`6" />.</summary>
      <param name="item1">Valeur du premier composant du tuple.</param>
      <param name="item2">Valeur du second composant du tuple.</param>
      <param name="item3">Valeur du troisième composant du tuple.</param>
      <param name="item4">Valeur du quatrième composant du tuple.</param>
      <param name="item5">Valeur du cinquième composant du tuple.</param>
      <param name="item6">Valeur du sixième composant du tuple.</param>
    </member>
    <member name="M:System.Tuple`6.Equals(System.Object)">
      <summary>Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`6" /> actuel est égal à un objet spécifié.</summary>
      <returns>true si l'instance actuelle est égale à l'objet spécifié ; sinon, false.</returns>
      <param name="obj">Objet à comparer avec cette instance.</param>
    </member>
    <member name="M:System.Tuple`6.GetHashCode">
      <summary>Retourne le code de hachage pour l'objet <see cref="T:System.Tuple`6" /> en cours.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.Tuple`6.Item1">
      <summary>Obtient la valeur du premier composant de l'objet <see cref="T:System.Tuple`6" /> actif.</summary>
      <returns>Valeur du premier composant de l'objet <see cref="T:System.Tuple`6" /> actuel.</returns>
    </member>
    <member name="P:System.Tuple`6.Item2">
      <summary>Obtient la valeur du deuxième composant de l'objet <see cref="T:System.Tuple`6" /> actif.</summary>
      <returns>Valeur du deuxième composant de l'objet <see cref="T:System.Tuple`6" /> actuel.</returns>
    </member>
    <member name="P:System.Tuple`6.Item3">
      <summary>Obtient la valeur du troisième composant de l'objet <see cref="T:System.Tuple`6" /> actif.</summary>
      <returns>Valeur du troisième composant de l'objet <see cref="T:System.Tuple`6" /> actif.</returns>
    </member>
    <member name="P:System.Tuple`6.Item4">
      <summary>Obtient la valeur du quatrième composant de l'objet <see cref="T:System.Tuple`6" /> actif.</summary>
      <returns>Valeur du quatrième composant de l'objet <see cref="T:System.Tuple`6" /> actuel.</returns>
    </member>
    <member name="P:System.Tuple`6.Item5">
      <summary>Obtient la valeur du cinquième composant de l'objet <see cref="T:System.Tuple`6" /> actif.</summary>
      <returns>Valeur du cinquième composant de l'objet <see cref="T:System.Tuple`6" /> actif.</returns>
    </member>
    <member name="P:System.Tuple`6.Item6">
      <summary>Obtient la valeur du sixième composant de l'objet <see cref="T:System.Tuple`6" /> actif.</summary>
      <returns>Valeur du sixième composant de l'objet <see cref="T:System.Tuple`6" /> actif.</returns>
    </member>
    <member name="M:System.Tuple`6.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Compare l'objet <see cref="T:System.Tuple`6" /> actuel à un objet spécifié à l'aide d'un comparateur spécifié et retourne un entier qui indique si l'objet actuel précède, suit ou se trouve à la même position que l'objet spécifié dans l'ordre de tri.</summary>
      <returns>Entier signé qui indique la position relative de cette instance et de <paramref name="other" /> dans l'ordre de tri, comme indiqué dans le tableau suivant.ValeurDescription Entier négatifCette instance précède <paramref name="other" />.ZéroCette instance et <paramref name="other" /> ont la même position dans l'ordre de tri.Entier positifCette instance suit <paramref name="other" />.</returns>
      <param name="other">Objet à comparer à l'instance actuelle.</param>
      <param name="comparer">Objet qui fournit des règles personnalisées pour la comparaison.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> n'est pas un objet <see cref="T:System.Tuple`6" />.</exception>
    </member>
    <member name="M:System.Tuple`6.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`6" /> actuel est égal à un objet spécifié selon une méthode de comparaison spécifiée.</summary>
      <returns>true si l'instance actuelle est égale à l'objet spécifié ; sinon, false.</returns>
      <param name="other">Objet à comparer avec cette instance.</param>
      <param name="comparer">Objet qui définit la méthode à utiliser pour évaluer si les deux objets sont égaux.</param>
    </member>
    <member name="M:System.Tuple`6.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Calcule le code de hachage pour l'objet <see cref="T:System.Tuple`6" /> actuel à l'aide d'une méthode de calcul spécifiée.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <param name="comparer">Objet dont la méthode <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcule le code de hachage de l'objet <see cref="T:System.Tuple`6" /> actuel.</param>
    </member>
    <member name="M:System.Tuple`6.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'objet <see cref="T:System.Tuple`6" /> actuel à un objet spécifié et retourne un entier qui indique si l'objet actuel précède, suit ou est dans la même position que l'objet spécifié dans l'ordre de tri.</summary>
      <returns>Entier signé qui indique la position relative de cette instance et de <paramref name="obj" /> dans l'ordre de tri, comme indiqué dans le tableau suivant.ValeurDescription Entier négatifCette instance précède <paramref name="obj" />.ZéroCette instance et <paramref name="obj" /> ont la même position dans l'ordre de tri.Entier positifCette instance suit <paramref name="obj" />.</returns>
      <param name="obj">Objet à comparer à l'instance actuelle.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> n'est pas un objet <see cref="T:System.Tuple`6" />.</exception>
    </member>
    <member name="M:System.Tuple`6.ToString">
      <summary>Retourne une chaîne qui représente la valeur de cette instance <see cref="T:System.Tuple`6" />.</summary>
      <returns>Représentation sous forme de chaîne de cet objet <see cref="T:System.Tuple`6" />.</returns>
    </member>
    <member name="T:System.Tuple`7">
      <summary>Représente un objet de 7 tuples, ou septuple. </summary>
      <typeparam name="T1">Type du premier composant du tuple.</typeparam>
      <typeparam name="T2">Type du second composant du tuple.</typeparam>
      <typeparam name="T3">Type du troisième composant du tuple.</typeparam>
      <typeparam name="T4">Type du quatrième composant du tuple.</typeparam>
      <typeparam name="T5">Type du cinquième composant du tuple.</typeparam>
      <typeparam name="T6">Type du sixième composant du tuple.</typeparam>
      <typeparam name="T7">Type du septième composant du tuple.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Tuple`7" />.</summary>
      <param name="item1">Valeur du premier composant du tuple.</param>
      <param name="item2">Valeur du second composant du tuple.</param>
      <param name="item3">Valeur du troisième composant du tuple.</param>
      <param name="item4">Valeur du quatrième composant du tuple.</param>
      <param name="item5">Valeur du cinquième composant du tuple.</param>
      <param name="item6">Valeur du sixième composant du tuple.</param>
      <param name="item7">Valeur du septième composant du tuple.</param>
    </member>
    <member name="M:System.Tuple`7.Equals(System.Object)">
      <summary>Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`7" /> actif est égal à un objet spécifié.</summary>
      <returns>true si l'instance actuelle est égale à l'objet spécifié ; sinon, false.</returns>
      <param name="obj">Objet à comparer avec cette instance.</param>
    </member>
    <member name="M:System.Tuple`7.GetHashCode">
      <summary>Retourne le code de hachage pour l'objet <see cref="T:System.Tuple`7" /> en cours.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.Tuple`7.Item1">
      <summary>Obtient la valeur du premier composant de l'objet <see cref="T:System.Tuple`7" /> actif.</summary>
      <returns>Valeur du premier composant de l'objet <see cref="T:System.Tuple`7" /> actuel.</returns>
    </member>
    <member name="P:System.Tuple`7.Item2">
      <summary>Obtient la valeur du deuxième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</summary>
      <returns>Valeur du deuxième composant de l'objet <see cref="T:System.Tuple`7" /> actuel.</returns>
    </member>
    <member name="P:System.Tuple`7.Item3">
      <summary>Obtient la valeur du troisième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</summary>
      <returns>Valeur du troisième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</returns>
    </member>
    <member name="P:System.Tuple`7.Item4">
      <summary>Obtient la valeur du quatrième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</summary>
      <returns>Valeur du quatrième composant de l'objet <see cref="T:System.Tuple`7" /> actuel.</returns>
    </member>
    <member name="P:System.Tuple`7.Item5">
      <summary>Obtient la valeur du cinquième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</summary>
      <returns>Valeur du cinquième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</returns>
    </member>
    <member name="P:System.Tuple`7.Item6">
      <summary>Obtient la valeur du sixième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</summary>
      <returns>Valeur du sixième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</returns>
    </member>
    <member name="P:System.Tuple`7.Item7">
      <summary>Obtient la valeur du septième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</summary>
      <returns>Valeur du septième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</returns>
    </member>
    <member name="M:System.Tuple`7.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Compare l'objet <see cref="T:System.Tuple`7" /> actif à un objet spécifié à l'aide d'un comparateur spécifié et retourne un entier qui indique si l'objet actif précède, suit ou est dans la même position que l'objet spécifié dans l'ordre de tri.</summary>
      <returns>Entier signé qui indique la position relative de cette instance et de <paramref name="other" /> dans l'ordre de tri, comme indiqué dans le tableau suivant.ValeurDescription Entier négatifCette instance précède <paramref name="other" />.ZéroCette instance et <paramref name="other" /> ont la même position dans l'ordre de tri.Entier positifCette instance suit <paramref name="other" />.</returns>
      <param name="other">Objet à comparer à l'instance actuelle.</param>
      <param name="comparer">Objet qui fournit des règles personnalisées pour la comparaison.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> n'est pas un objet <see cref="T:System.Tuple`7" />.</exception>
    </member>
    <member name="M:System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`7" /> actif est égal à un objet spécifié selon une méthode de comparaison spécifiée.</summary>
      <returns>true si l'instance actuelle est égale à l'objet spécifié ; sinon, false.</returns>
      <param name="other">Objet à comparer avec cette instance.</param>
      <param name="comparer">Objet qui définit la méthode à utiliser pour évaluer si les deux objets sont égaux.</param>
    </member>
    <member name="M:System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Calcule le code de hachage pour l'objet <see cref="T:System.Tuple`7" /> actif à l'aide d'une méthode de calcul spécifiée.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <param name="comparer">Objet dont la méthode <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcule le code de hachage de l'objet <see cref="T:System.Tuple`7" /> actuel.</param>
    </member>
    <member name="M:System.Tuple`7.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'objet <see cref="T:System.Tuple`7" /> actuel à un objet spécifié et retourne un entier qui indique si l'objet actuel précède, suit ou est dans la même position que l'objet spécifié dans l'ordre de tri.</summary>
      <returns>Entier signé qui indique la position relative de cette instance et de <paramref name="obj" /> dans l'ordre de tri, comme indiqué dans le tableau suivant.ValeurDescription Entier négatifCette instance précède <paramref name="obj" />.ZéroCette instance et <paramref name="obj" /> ont la même position dans l'ordre de tri.Entier positifCette instance suit <paramref name="obj" />.</returns>
      <param name="obj">Objet à comparer à l'instance actuelle.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> n'est pas un objet <see cref="T:System.Tuple`7" />.</exception>
    </member>
    <member name="M:System.Tuple`7.ToString">
      <summary>Retourne une chaîne qui représente la valeur de cette instance <see cref="T:System.Tuple`7" />.</summary>
      <returns>Représentation sous forme de chaîne de cet objet <see cref="T:System.Tuple`7" />.</returns>
    </member>
    <member name="T:System.Tuple`8">
      <summary>Représente un objet de n tuples, où n représente 8 ou un chiffre supérieur.</summary>
      <typeparam name="T1">Type du premier composant du tuple.</typeparam>
      <typeparam name="T2">Type du second composant du tuple.</typeparam>
      <typeparam name="T3">Type du troisième composant du tuple.</typeparam>
      <typeparam name="T4">Type du quatrième composant du tuple.</typeparam>
      <typeparam name="T5">Type du cinquième composant du tuple.</typeparam>
      <typeparam name="T6">Type du sixième composant du tuple.</typeparam>
      <typeparam name="T7">Type du septième composant du tuple.</typeparam>
      <typeparam name="TRest">Tout objet Tuple générique qui définit les types des composants restants du tuple.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Tuple`8" />.</summary>
      <param name="item1">Valeur du premier composant du tuple.</param>
      <param name="item2">Valeur du second composant du tuple.</param>
      <param name="item3">Valeur du troisième composant du tuple.</param>
      <param name="item4">Valeur du quatrième composant du tuple.</param>
      <param name="item5">Valeur du cinquième composant du tuple.</param>
      <param name="item6">Valeur du sixième composant du tuple.</param>
      <param name="item7">Valeur du septième composant du tuple.</param>
      <param name="rest">Tout objet Tuple générique qui contient les valeurs des composants restants du tuple.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rest" /> n'est pas un objet Tuple générique.</exception>
    </member>
    <member name="M:System.Tuple`8.Equals(System.Object)">
      <summary>Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`8" /> actuel est égal à un objet spécifié.</summary>
      <returns>true si l'instance actuelle est égale à l'objet spécifié ; sinon, false.</returns>
      <param name="obj">Objet à comparer avec cette instance.</param>
    </member>
    <member name="M:System.Tuple`8.GetHashCode">
      <summary>Calcule le code de hachage pour l'objet <see cref="T:System.Tuple`8" /> actuel.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.Tuple`8.Item1">
      <summary>Obtient la valeur du premier composant de l'objet <see cref="T:System.Tuple`8" /> actif.</summary>
      <returns>Valeur du premier composant de l'objet <see cref="T:System.Tuple`8" /> actif.</returns>
    </member>
    <member name="P:System.Tuple`8.Item2">
      <summary>Obtient la valeur du deuxième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</summary>
      <returns>Valeur du deuxième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</returns>
    </member>
    <member name="P:System.Tuple`8.Item3">
      <summary>Obtient la valeur du troisième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</summary>
      <returns>Valeur du troisième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</returns>
    </member>
    <member name="P:System.Tuple`8.Item4">
      <summary>Obtient la valeur du quatrième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</summary>
      <returns>Valeur du quatrième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</returns>
    </member>
    <member name="P:System.Tuple`8.Item5">
      <summary>Obtient la valeur du cinquième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</summary>
      <returns>Valeur du cinquième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</returns>
    </member>
    <member name="P:System.Tuple`8.Item6">
      <summary>Obtient la valeur du sixième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</summary>
      <returns>Valeur du sixième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</returns>
    </member>
    <member name="P:System.Tuple`8.Item7">
      <summary>Obtient la valeur du septième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</summary>
      <returns>Valeur du septième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</returns>
    </member>
    <member name="P:System.Tuple`8.Rest">
      <summary>Obtient les composants restants de l'objet <see cref="T:System.Tuple`8" /> actif.</summary>
      <returns>Valeur des composants restants de l'objet <see cref="T:System.Tuple`8" /> actuel.</returns>
    </member>
    <member name="M:System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Compare l'objet <see cref="T:System.Tuple`8" /> actif à un objet spécifié à l'aide d'un comparateur spécifié et retourne un entier qui indique si l'objet actif précède, suit ou se trouve à la même position que l'objet spécifié dans l'ordre de tri.</summary>
      <returns>Entier signé qui indique la position relative de cette instance et de <paramref name="other" /> dans l'ordre de tri, comme indiqué dans le tableau suivant.ValeurDescription Entier négatifCette instance précède <paramref name="other" />.ZéroCette instance et <paramref name="other" /> ont la même position dans l'ordre de tri.Entier positifCette instance suit <paramref name="other" />.</returns>
      <param name="other">Objet à comparer à l'instance actuelle.</param>
      <param name="comparer">Objet qui fournit des règles personnalisées pour la comparaison.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> n'est pas un objet <see cref="T:System.Tuple`8" />.</exception>
    </member>
    <member name="M:System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`8" /> actif est égal à un objet spécifié selon une méthode de comparaison spécifiée.</summary>
      <returns>true si l'instance actuelle est égale à l'objet spécifié ; sinon, false.</returns>
      <param name="other">Objet à comparer avec cette instance.</param>
      <param name="comparer">Objet qui définit la méthode à utiliser pour évaluer si les deux objets sont égaux.</param>
    </member>
    <member name="M:System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Calcule le code de hachage pour l'objet <see cref="T:System.Tuple`8" /> actif à l'aide d'une méthode de calcul spécifiée.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <param name="comparer">Objet dont la méthode <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcule le code de hachage de l'objet <see cref="T:System.Tuple`8" /> actuel.</param>
    </member>
    <member name="M:System.Tuple`8.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'objet <see cref="T:System.Tuple`8" /> actuel à un objet spécifié et retourne un entier qui indique si l'objet actuel précède, suit ou est dans la même position que l'objet spécifié dans l'ordre de tri.</summary>
      <returns>Entier signé qui indique la position relative de cette instance et de <paramref name="obj" /> dans l'ordre de tri, comme indiqué dans le tableau suivant.ValeurDescription Entier négatifCette instance précède <paramref name="obj" />.ZéroCette instance et <paramref name="obj" /> ont la même position dans l'ordre de tri.Entier positifCette instance suit <paramref name="obj" />.</returns>
      <param name="obj">Objet à comparer à l'instance actuelle.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> n'est pas un objet <see cref="T:System.Tuple`8" />.</exception>
    </member>
    <member name="M:System.Tuple`8.ToString">
      <summary>Retourne une chaîne qui représente la valeur de cette instance <see cref="T:System.Tuple`8" />.</summary>
      <returns>Représentation sous forme de chaîne de cet objet <see cref="T:System.Tuple`8" />.</returns>
    </member>
    <member name="T:System.Type">
      <summary>Représente les déclarations de types : types classe, types interface, types tableau, types valeur, types énumération, paramètres de type, définitions de type générique et types génériques construits ouverts ou fermés.Pour parcourir le code source de .NET Framework pour ce type, consultez la Source de référence.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.AssemblyQualifiedName">
      <summary>Obtient le nom qualifié d'assembly du type, y compris le nom de l'assembly à partir duquel l'objet <see cref="T:System.Type" /> a été chargé.</summary>
      <returns>Le nom qualifié d'assembly du <see cref="T:System.Type" />, qui inclut le nom de l'assembly à partir duquel le <see cref="T:System.Type" /> a été chargé ou null si l'instance actuelle représente un paramètre de type générique.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.DeclaringType">
      <summary>Obtient le type qui déclare le type imbriqué ou paramètre de type générique actuel.</summary>
      <returns>Objet <see cref="T:System.Type" /> représentant le type englobant, si le type actuel est un type imbriqué ; ou définition du type générique, si le type actuel est un paramètre de type d'un type générique ; ou type qui déclare la méthode générique, si le type actuel est un paramètre de type d'une méthode générique ; sinon, null.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Type.EmptyTypes">
      <summary>Représente un tableau vide du type <see cref="T:System.Type" />.Ce champ est en lecture seule.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.Equals(System.Object)">
      <summary>Détermine si le type de système sous-jacent du <see cref="T:System.Type" /> actuel est identique au type de système sous-jacent du <see cref="T:System.Object" /> spécifié.</summary>
      <returns>true si le type de système sous-jacent de <paramref name="o" /> est identique au type de système sous-jacent du <see cref="T:System.Type" /> actuel ; sinon, false.Cette méthode retourne également false si l'objet spécifié par le paramètre <paramref name="o" /> n'est pas Type.</returns>
      <param name="o">Objet dont le type de système sous-jacent doit être comparé au type de système sous-jacent du <see cref="T:System.Type" /> actuel. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.Equals(System.Type)">
      <summary>Détermine si le type de système sous-jacent du <see cref="T:System.Type" /> actuel est identique au type de système sous-jacent du <see cref="T:System.Type" /> spécifié.</summary>
      <returns>true si le type de système sous-jacent de <paramref name="o" /> est identique au type de système sous-jacent du <see cref="T:System.Type" /> actuel ; sinon, false.</returns>
      <param name="o">Objet dont le type de système sous-jacent doit être comparé au type de système sous-jacent du <see cref="T:System.Type" /> actuel. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.FullName">
      <summary>Obtient le nom qualifié complet du type, y compris son espace de noms, mais pas l'assembly. </summary>
      <returns>Nom qualifié complet du type, y compris son espace de noms, mais sans l'assembly ; ou null si l'instance actuelle représente un paramètre de type générique, un type de tableau, un type pointeur, un type byref reposant sur un paramètre de type ou un type générique qui n'est pas une définition de type générique mais contient des paramètres de type non résolus.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.GenericParameterPosition">
      <summary>Obtient la position du paramètre de type dans la liste des paramètres de type du type générique ou de la méthode qui a déclaré le paramètre, quand l'objet <see cref="T:System.Type" /> représente un paramètre de type d'un type générique ou une méthode générique.</summary>
      <returns>Position d'un paramètre de type dans la liste des paramètres de type du type générique ou de la méthode qui a défini le paramètre.La numérotation des positions commence à zéro.</returns>
      <exception cref="T:System.InvalidOperationException">The current type does not represent a type parameter.That is, <see cref="P:System.Type.IsGenericParameter" /> returns false.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.GenericTypeArguments">
      <summary>Obtient un tableau des arguments de type générique pour ce type.</summary>
      <returns>Tableau des arguments de type générique pour ce type.</returns>
    </member>
    <member name="M:System.Type.GetArrayRank">
      <summary>Obtient le nombre de dimensions dans un tableau. </summary>
      <returns>Entier comportant le nombre de dimensions figurant dans le type actuel. </returns>
      <exception cref="T:System.NotSupportedException">The functionality of this method is unsupported in the base class and must be implemented in a derived class instead. </exception>
      <exception cref="T:System.ArgumentException">The current type is not an array. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetElementType">
      <summary>En cas de substitution dans une classe dérivée, retourne le <see cref="T:System.Type" /> de l'objet englobé ou de l'objet auquel le tableau, pointeur ou type référence actuel fait référence.</summary>
      <returns>
        <see cref="T:System.Type" /> de l'objet englobé ou auquel le tableau, pointeur ou type référence actuel fait référence, ou null si le <see cref="T:System.Type" /> actuel n'est pas un tableau ou un pointeur, ou n'est pas passé par référence ou représente un type générique ou un paramètre de type dans la définition d'un type ou d'une méthode générique.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetGenericTypeDefinition">
      <summary>Retourne un objet <see cref="T:System.Type" /> qui représente une définition de type générique à partir de laquelle le type générique actuel peut être construit.</summary>
      <returns>Objet <see cref="T:System.Type" /> représentant un type générique à partir duquel le type actuel peut être construit.</returns>
      <exception cref="T:System.InvalidOperationException">The current type is not a generic type.That is, <see cref="P:System.Type.IsGenericType" /> returns false.</exception>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.Derived classes must provide an implementation.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage de cette instance.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetType(System.String)">
      <summary>Obtient le <see cref="T:System.Type" /> avec le nom spécifié, effectuant une recherche qui respecte la casse.</summary>
      <returns>Type présentant le nom spécifié, s'il est trouvé ; sinon, null.</returns>
      <param name="typeName">Nom qualifié d'assembly du type à obtenir.Consultez <see cref="P:System.Type.AssemblyQualifiedName" />.Si le type se trouve dans Mscorlib.dll ou l'assembly en cours d'exécution, il suffit de fournir le nom du type qualifié par son espace de noms.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">A class initializer is invoked and throws an exception. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="typeName" /> represents a generic type that has a pointer type, a ByRef type, or <see cref="T:System.Void" /> as one of its type arguments.-or-<paramref name="typeName" /> represents a generic type that has an incorrect number of type arguments.-or-<paramref name="typeName" /> represents a generic type, and one of its type arguments does not satisfy the constraints for the corresponding type parameter.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> represents an array of <see cref="T:System.TypedReference" />. </exception>
      <exception cref="T:System.IO.FileLoadException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.IO.IOException" />, instead.The assembly or one of its dependencies was found, but could not be loaded. </exception>
      <exception cref="T:System.BadImageFormatException">The assembly or one of its dependencies is not valid. -or-Version 2.0 or later of the common language runtime is currently loaded, and the assembly was compiled with a later version.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.GetType(System.String,System.Boolean)">
      <summary>Obtient le <see cref="T:System.Type" /> portant le nom spécifié, en effectuant une recherche respectant la casse et en spécifiant s'il faut lever une exception si le type est introuvable.</summary>
      <returns>Type portant le nom spécifié.Si le type est introuvable, le paramètre <paramref name="throwOnError" /> spécifie si null est retourné ou bien une exception est levée.Dans certains cas, une exception est levée indépendamment de la valeur de <paramref name="throwOnError" />.Consultez la section Exceptions.</returns>
      <param name="typeName">Nom qualifié d'assembly du type à obtenir.Consultez <see cref="P:System.Type.AssemblyQualifiedName" />.Si le type se trouve dans Mscorlib.dll ou l'assembly en cours d'exécution, il suffit de fournir le nom du type qualifié par son espace de noms.</param>
      <param name="throwOnError">true pour lever une exception si le type est introuvable ; false pour retourner null.false supprime également d'autres conditions d'exception, mais pas toutes.Consultez la section Exceptions.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">A class initializer is invoked and throws an exception. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="throwOnError" /> is true and the type is not found. -or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> contains invalid characters, such as an embedded tab.-or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> is an empty string.-or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> represents an array type with an invalid size. -or-<paramref name="typeName" /> represents an array of <see cref="T:System.TypedReference" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="throwOnError" /> is true and <paramref name="typeName" /> contains invalid syntax.For example, "MyType[,*,]".-or- <paramref name="typeName" /> represents a generic type that has a pointer type, a ByRef type, or <see cref="T:System.Void" /> as one of its type arguments.-or-<paramref name="typeName" /> represents a generic type that has an incorrect number of type arguments.-or-<paramref name="typeName" /> represents a generic type, and one of its type arguments does not satisfy the constraints for the corresponding type parameter.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="throwOnError" /> is true and the assembly or one of its dependencies was not found. </exception>
      <exception cref="T:System.IO.FileLoadException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.IO.IOException" />, instead.The assembly or one of its dependencies was found, but could not be loaded. </exception>
      <exception cref="T:System.BadImageFormatException">The assembly or one of its dependencies is not valid. -or-Version 2.0 or later of the common language runtime is currently loaded, and the assembly was compiled with a later version.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.GetType(System.String,System.Boolean,System.Boolean)">
      <summary>Obtient le <see cref="T:System.Type" /> portant le nom spécifié, indiquant s'il faut lever une exception si le type est introuvable et s'il faut effectuer une recherche respectant la casse. </summary>
      <returns>Type portant le nom spécifié.Si le type est introuvable, le paramètre <paramref name="throwOnError" /> spécifie si null est retourné ou bien une exception est levée.Dans certains cas, une exception est levée indépendamment de la valeur de <paramref name="throwOnError" />.Consultez la section Exceptions.</returns>
      <param name="typeName">Nom qualifié d'assembly du type à obtenir.Consultez <see cref="P:System.Type.AssemblyQualifiedName" />.Si le type se trouve dans Mscorlib.dll ou l'assembly en cours d'exécution, il suffit de fournir le nom du type qualifié par son espace de noms.</param>
      <param name="throwOnError">true pour lever une exception si le type est introuvable ; false pour retourner null. La spécification de false supprime également d'autres conditions d'exception, mais pas toutes.Consultez la section Exceptions.</param>
      <param name="ignoreCase">true pour effectuer une recherche qui ne respecte pas la casse de <paramref name="typeName" /> et false pour effectuer une recherche qui respecte la casse de <paramref name="typeName" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">A class initializer is invoked and throws an exception. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="throwOnError" /> is true and the type is not found. -or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> contains invalid characters, such as an embedded tab.-or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> is an empty string.-or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> represents an array type with an invalid size. -or-<paramref name="typeName" /> represents an array of <see cref="T:System.TypedReference" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="throwOnError" /> is true and <paramref name="typeName" /> contains invalid syntax.For example, "MyType[,*,]".-or- <paramref name="typeName" /> represents a generic type that has a pointer type, a ByRef type, or <see cref="T:System.Void" /> as one of its type arguments.-or-<paramref name="typeName" /> represents a generic type that has an incorrect number of type arguments.-or-<paramref name="typeName" /> represents a generic type, and one of its type arguments does not satisfy the constraints for the corresponding type parameter.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="throwOnError" /> is true and the assembly or one of its dependencies was not found. </exception>
      <exception cref="T:System.IO.FileLoadException">The assembly or one of its dependencies was found, but could not be loaded. </exception>
      <exception cref="T:System.BadImageFormatException">The assembly or one of its dependencies is not valid. -or-Version 2.0 or later of the common language runtime is currently loaded, and the assembly was compiled with a later version.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)">
      <summary>Obtient le type référencé par le handle de type spécifié.</summary>
      <returns>Le type référencé par le <see cref="T:System.RuntimeTypeHandle" /> spécifié, ou null si la propriété <see cref="P:System.RuntimeTypeHandle.Value" /> de <paramref name="handle" /> est null.</returns>
      <param name="handle">Objet qui fait référence au type. </param>
      <exception cref="T:System.Reflection.TargetInvocationException">A class initializer is invoked and throws an exception. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.HasElementType">
      <summary>Obtient une valeur indiquant si le <see cref="T:System.Type" /> actuel englobe ou se réfère à un autre type, c'est-à-dire si le <see cref="T:System.Type" /> actuel est un tableau ou un pointeur ou encore s'il est passé par référence.</summary>
      <returns>true si <see cref="T:System.Type" /> est un tableau ou un pointeur ou encore s'il est passé par référence ; sinon, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsArray">
      <summary>Obtient une valeur qui indique si le type est un tableau. </summary>
      <returns>true si le type actuel est un tableau ; sinon, false. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsByRef">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Type" /> est passé par référence.</summary>
      <returns>true si <see cref="T:System.Type" /> est passé par référence ; sinon, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsConstructedGenericType">
      <summary>Obtient une valeur qui indique si cet objet représente un type générique construit.Vous pouvez créer des instances d'un type générique construit.</summary>
      <returns>true si cet objet représente un type générique construit ; sinon, false.</returns>
    </member>
    <member name="P:System.Type.IsGenericParameter">
      <summary>Obtient une valeur indiquant si le <see cref="T:System.Type" /> actuel représente un paramètre de type d'une définition de type ou de méthode générique.</summary>
      <returns>true si l'objet <see cref="T:System.Type" /> représente un paramètre de type d'une définition de type générique ou de méthode générique ; sinon, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsNested">
      <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Type" /> actuel représente un type dont la définition est imbriquée dans la définition d'un autre type.</summary>
      <returns>true si le <see cref="T:System.Type" /> est imbriqué dans un autre type ; sinon, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsPointer">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Type" /> est un pointeur.</summary>
      <returns>true si <see cref="T:System.Type" /> est un pointeur ; sinon, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeArrayType">
      <summary>Retourne un objet <see cref="T:System.Type" /> qui représente un tableau unidimensionnel du type actuel, avec une limite inférieure de zéro.</summary>
      <returns>Objet <see cref="T:System.Type" /> qui représente un tableau unidimensionnel du type actuel, avec une limite inférieure de zéro.</returns>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.Derived classes must provide an implementation.</exception>
      <exception cref="T:System.TypeLoadException">The current type is <see cref="T:System.TypedReference" />.-or-The current type is a ByRef type.That is, <see cref="P:System.Type.IsByRef" /> returns true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeArrayType(System.Int32)">
      <summary>Retourne un objet <see cref="T:System.Type" /> qui représente un tableau du type actuel, avec le nombre spécifié de dimensions.</summary>
      <returns>Objet qui représente un tableau du type actuel, avec le nombre spécifié de dimensions.</returns>
      <param name="rank">Nombre de dimensions pour le tableau.Ce nombre doit être inférieur ou égal à 32.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="rank" /> is invalid.For example, 0 or negative.</exception>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.</exception>
      <exception cref="T:System.TypeLoadException">The current type is <see cref="T:System.TypedReference" />.-or-The current type is a ByRef type.That is, <see cref="P:System.Type.IsByRef" /> returns true.-or-<paramref name="rank" /> is greater than 32.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeByRefType">
      <summary>Retourne un objet <see cref="T:System.Type" /> qui représente le type actuel quand il est passé en tant que paramètre ref (paramètre ByRef en Visual Basic).</summary>
      <returns>Objet <see cref="T:System.Type" /> qui représente le type actuel quand il est passé en tant que paramètre ref (paramètre ByRef en Visual Basic).</returns>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.</exception>
      <exception cref="T:System.TypeLoadException">The current type is <see cref="T:System.TypedReference" />.-or-The current type is a ByRef type.That is, <see cref="P:System.Type.IsByRef" /> returns true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeGenericType(System.Type[])">
      <summary>Substitue les éléments d'un tableau de types aux paramètres de type de la définition du type générique actuel et retourne un objet <see cref="T:System.Type" /> qui représente le type construit résultant.</summary>
      <returns>
        <see cref="T:System.Type" /> représentant le type construit formé en substituant les éléments de <paramref name="typeArguments" /> pour les paramètres de type du type générique actuel.</returns>
      <param name="typeArguments">Tableau de types à remplacer pour les paramètres de type du type générique actuel.</param>
      <exception cref="T:System.InvalidOperationException">The current type does not represent a generic type definition.That is, <see cref="P:System.Type.IsGenericTypeDefinition" /> returns false.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeArguments" /> is null.-or- Any element of <paramref name="typeArguments" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The number of elements in <paramref name="typeArguments" /> is not the same as the number of type parameters in the current generic type definition.-or- Any element of <paramref name="typeArguments" /> does not satisfy the constraints specified for the corresponding type parameter of the current generic type. -or- <paramref name="typeArguments" /> contains an element that is a pointer type (<see cref="P:System.Type.IsPointer" /> returns true), a by-ref type (<see cref="P:System.Type.IsByRef" /> returns true), or <see cref="T:System.Void" />.</exception>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.Derived classes must provide an implementation.</exception>
    </member>
    <member name="M:System.Type.MakePointerType">
      <summary>Retourne un objet <see cref="T:System.Type" /> qui représente un pointeur vers le type actuel.</summary>
      <returns>Objet <see cref="T:System.Type" /> qui représente un pointeur vers le type actuel.</returns>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.</exception>
      <exception cref="T:System.TypeLoadException">The current type is <see cref="T:System.TypedReference" />.-or-The current type is a ByRef type.That is, <see cref="P:System.Type.IsByRef" /> returns true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Type.Missing">
      <summary>Représente une valeur manquante dans les informations <see cref="T:System.Type" />.Ce champ est en lecture seule.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.Name"></member>
    <member name="P:System.Type.Namespace">
      <summary>Obtient l'espace de noms de l'objet <see cref="T:System.Type" />.</summary>
      <returns>Espace de noms du <see cref="T:System.Type" /> ; null si l'instance actuelle n'a pas d'espace de noms ou représente un paramètre générique.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.ToString">
      <summary>Retourne String représentant le nom du Type actuel.</summary>
      <returns>
        <see cref="T:System.String" /> représentant le nom du <see cref="T:System.Type" /> actuel.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.TypeHandle">
      <summary>Obtient le handle pour le <see cref="T:System.Type" /> actuel.</summary>
      <returns>Handle pour le <see cref="T:System.Type" /> actuel.</returns>
      <exception cref="T:System.NotSupportedException">The .NET Compact Framework does not currently support this property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.TypeAccessException">
      <summary>Exception levée lorsqu'une méthode essaie d'utiliser un type auquel elle n'a pas accès.</summary>
    </member>
    <member name="M:System.TypeAccessException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.TypeAccessException" /> avec un message système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.TypeAccessException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.TypeAccessException" /> avec un message spécifié décrivant l'erreur.</summary>
      <param name="message">Message décrivant l'exception.L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
    </member>
    <member name="M:System.TypeAccessException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.TypeAccessException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message décrivant l'exception.L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
      <param name="inner">Exception ayant provoqué l'exception actuelle.Si le paramètre <paramref name="inner" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.TypeCode">
      <summary>Indique le type d'un objet.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.TypeCode.Boolean">
      <summary>Type simple représentant les valeurs booléennes de true ou false.</summary>
    </member>
    <member name="F:System.TypeCode.Byte">
      <summary>Type intégral représentant des entiers 8 bits non signés dont la valeur est comprise entre 0 et 255.</summary>
    </member>
    <member name="F:System.TypeCode.Char">
      <summary>Type intégral représentant des entiers 16 bits non signés dont la valeur est comprise entre 0 et 65 535.Le jeu de valeurs possibles pour le type <see cref="F:System.TypeCode.Char" /> correspond au jeu de caractères Unicode.</summary>
    </member>
    <member name="F:System.TypeCode.DateTime">
      <summary>Type représentant une valeur de date et d'heure.</summary>
    </member>
    <member name="F:System.TypeCode.Decimal">
      <summary>Type simple représentant des valeurs comprises entre 1.0 x 10-28 et environ 7.9 x 1028, avec 28-29 chiffres significatifs.</summary>
    </member>
    <member name="F:System.TypeCode.Double">
      <summary>Type en virgule flottante représentant des valeurs comprises entre 5.0 x 10-324 et 1.7 x 10308 environ, avec une précision de 15-16 chiffres.</summary>
    </member>
    <member name="F:System.TypeCode.Empty">
      <summary>Référence null.</summary>
    </member>
    <member name="F:System.TypeCode.Int16">
      <summary>Type intégral représentant des entiers 16 bits signés dont la valeur est comprise entre -32768 et 32767.</summary>
    </member>
    <member name="F:System.TypeCode.Int32">
      <summary>Type intégral représentant des entiers 32 bits signés dont la valeur est comprise entre -2147483648 et 2147483647.</summary>
    </member>
    <member name="F:System.TypeCode.Int64">
      <summary>Type intégral représentant des entiers 64 bits signés dont la valeur est comprise entre -9223372036854775808 et 9223372036854775807.</summary>
    </member>
    <member name="F:System.TypeCode.Object">
      <summary>Type général représentant une référence ou type valeur non explicitement représenté par un autre TypeCode.</summary>
    </member>
    <member name="F:System.TypeCode.SByte">
      <summary>Type intégral représentant des entiers 8 bits signés dont la valeur est comprise entre -128 et 127.</summary>
    </member>
    <member name="F:System.TypeCode.Single">
      <summary>Type en virgule flottante représentant des valeurs comprises entre 1.5 x 10-45 et 3.4 x 1038 environ, avec une précision de 7 chiffres.</summary>
    </member>
    <member name="F:System.TypeCode.String">
      <summary>Type classe sealed représentant des chaînes de caractères Unicode.</summary>
    </member>
    <member name="F:System.TypeCode.UInt16">
      <summary>Type intégral représentant des entiers 16 bits non signés dont la valeur est comprise entre 0 et 65 535.</summary>
    </member>
    <member name="F:System.TypeCode.UInt32">
      <summary>Type intégral représentant des entiers 32 bits non signés dont la valeur est comprise entre 0 et 4294967295.</summary>
    </member>
    <member name="F:System.TypeCode.UInt64">
      <summary>Type intégral représentant des entiers 64 bits non signés dont la valeur est comprise entre 0 et 18446744073709551615.</summary>
    </member>
    <member name="T:System.TypeInitializationException">
      <summary>Exception levée comme wrapper pour l'exception levée par l'initialiseur de classe.Cette classe ne peut pas être héritée.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.TypeInitializationException" /> avec le message d'erreur par défaut, le nom de type spécifié et une référence à l'exception interne qui est la cause première de cette exception.</summary>
      <param name="fullTypeName">Nom qualifié complet du type dont l'initialisation a échoué. </param>
      <param name="innerException">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas une référence null (Nothing en Visual Basic), l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="P:System.TypeInitializationException.TypeName">
      <summary>Obtient le nom qualifié complet du type dont l'initialisation a échoué.</summary>
      <returns>Nom qualifié complet du type dont l'initialisation a échoué.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.TypeLoadException">
      <summary>Exception levée en cas de défaillances de chargement du type.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TypeLoadException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.TypeLoadException" />.</summary>
    </member>
    <member name="M:System.TypeLoadException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.TypeLoadException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message décrivant l'erreur. </param>
    </member>
    <member name="M:System.TypeLoadException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.TypeLoadException" /> avec un message d'erreur spécifié et une référence à l'exception interne qui est à l'origine de cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="inner">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="inner" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="P:System.TypeLoadException.Message">
      <summary>Obtient le message d'erreur pour cette exception.</summary>
      <returns>Chaîne du message d'erreur.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.TypeLoadException.TypeName">
      <summary>Obtient le nom qualifié complet du type qui provoque cette exception.</summary>
      <returns>Nom qualifié complet du type.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.UInt16">
      <summary>Représente un entier non signé 16 bits.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.CompareTo(System.UInt16)">
      <summary>Compare cette instance à un entier non signé 16 bits et retourne une indication sur leurs valeurs relatives.</summary>
      <returns>Nombre signé indiquant les valeurs relatives de cette instance et <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Entier non signé à comparer. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt16.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si cette instance équivaut à un objet spécifié.</summary>
      <returns>true si <paramref name="obj" /> est une instance de <see cref="T:System.UInt16" /> et est égal à la valeur de cette instance ; sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt16.Equals(System.UInt16)">
      <summary>Retourne une valeur indiquant si cette instance est égale à une valeur <see cref="T:System.UInt16" /> spécifiée.</summary>
      <returns>true si <paramref name="obj" /> possède la même valeur que cette instance ; sinon, false.</returns>
      <param name="obj">Entier non signé 16 bits à comparer à cette instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt16.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UInt16.MaxValue">
      <summary>Représente la plus grande valeur possible de <see cref="T:System.UInt16" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UInt16.MinValue">
      <summary>Représente la plus petite valeur possible de <see cref="T:System.UInt16" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre en son équivalent entier non signé 16 bits.</summary>
      <returns>Entier non signé 16 bits équivalent au nombre contenu dans <paramref name="s" />.</returns>
      <param name="s">Chaîne qui représente le nombre à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un style spécifié en son équivalent entier non signé 16 bits.</summary>
      <returns>Entier non signé 16 bits équivalant au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne qui représente le nombre à convertir.La chaîne est interprétée à l'aide du style spécifié par le paramètre <paramref name="style" />.</param>
      <param name="style">Combinaison de bits de valeurs d'énumération qui spécifie le format autorisé de <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un style et un format propre à la culture spécifiés en son équivalent entier non signé 16 bits.</summary>
      <returns>Entier non signé 16 bits équivalant au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne qui représente le nombre à convertir.La chaîne est interprétée à l'aide du style spécifié par le paramètre <paramref name="style" />.</param>
      <param name="style">Combinaison d'opérations de bit des valeurs d'énumération qui indiquent les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un format propre à la culture spécifié en son équivalent entier non signé 16 bits.</summary>
      <returns>Entier non signé 16 bits équivalant au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne qui représente le nombre à convertir. </param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</summary>
      <returns>Entier signé indiquant l'ordre relatif de cette instance et <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Objet à comparer à cette instance ou null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.UInt16" /> object. </exception>
    </member>
    <member name="M:System.UInt16.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.UInt16.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true si la valeur de l'instance actuelle est différente de zéro ; sinon, false.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Byte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Char" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Cette conversion n'est pas prise en charge.Aucune valeur n'est retournée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Valeur actuelle de cette instance, convertie en <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valeur actuelle de cette instance, convertie en <see cref="T:System.Double" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valeur actuelle de cette instance, convertie en <see cref="T:System.Int16" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur de cette instance, convertie en <see cref="T:System.Int32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur actuelle de cette instance, convertie en <see cref="T:System.Int64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur actuelle de cette instance, convertie en <see cref="T:System.SByte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valeur actuelle de cette instance, convertie en <see cref="T:System.Single" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valeur actuelle de cette instance, convertie en <paramref name="type" />.</returns>
      <param name="type">Type dans lequel convertir cette valeur <see cref="T:System.UInt16" />.</param>
      <param name="provider">Implémentation de <see cref="T:System.IFormatProvider" /> qui fournit des informations sur le format de la valeur retournée.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Valeur actuelle de cette instance, inchangée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur actuelle de cette instance, convertie en <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur actuelle de cette instance, convertie en <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt16.ToString">
      <summary>Convertit la valeur numérique de cette instance en sa représentation équivalente sous forme de chaîne.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, constituée d'une séquence de chiffres entre 0 et 9, sans signe ni zéro non significatif.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.ToString(System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide des informations de format spécifiques à la culture donnée.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, constituée d'une séquence de chiffres entre 0 et 9, sans signe ni zéro non significatif.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.ToString(System.String)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide du format spécifié.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="format" />.</returns>
      <param name="format">Chaîne de format numérique.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.ToString(System.String,System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide du format spécifié et des informations de format spécifiques à la culture.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, telle que spécifiée par <paramref name="format" /> et <paramref name="provider" />.</returns>
      <param name="format">Chaîne de format numérique.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16@)">
      <summary>Essaie de convertir la représentation sous forme de chaîne d'un nombre dans un style et un format propre à la culture spécifiés en son équivalent entier non signé 16 bits.Une valeur de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne qui représente le nombre à convertir.La chaîne est interprétée à l'aide du style spécifié par le paramètre <paramref name="style" />.</param>
      <param name="style">Combinaison d'opérations de bits de valeurs d'énumération qui indique le format autorisé du paramètre <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de l'entier signé 16 bits équivalente au nombre contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, qu'il n'est pas dans un format conforme à <paramref name="style" /> ou qu'il représente un nombre inférieur à <see cref="F:System.UInt16.MinValue" /> ou supérieur à <see cref="F:System.UInt16.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.TryParse(System.String,System.UInt16@)">
      <summary>Tente de convertir la représentation sous forme de chaîne d'un nombre en son équivalent entier non signé 16 bits.Une valeur de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne qui représente le nombre à convertir. </param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de l'entier signé 16 bits équivalente au nombre contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, ou s'il n'est pas au format approprié.représente un nombre inférieur à <see cref="F:System.UInt16.MinValue" /> ou supérieur à <see cref="F:System.UInt16.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UInt32">
      <summary>Représente un entier non signé 32 bits.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.CompareTo(System.UInt32)">
      <summary>Compare cette instance à un entier non signé 32 bits et retourne une indication sur leurs valeurs relatives.</summary>
      <returns>Nombre signé indiquant les valeurs relatives de cette instance et <paramref name="value" />.Return value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Entier non signé à comparer. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt32.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si cette instance équivaut à un objet spécifié.</summary>
      <returns>true si <paramref name="obj" /> est une instance de <see cref="T:System.UInt32" /> et est égal à la valeur de cette instance ; sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt32.Equals(System.UInt32)">
      <summary>Retourne une valeur indiquant si cette instance équivaut à un <see cref="T:System.UInt32" /> spécifié.</summary>
      <returns>true si <paramref name="obj" /> possède la même valeur que cette instance ; sinon, false.</returns>
      <param name="obj">Valeur à comparer à cette instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt32.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UInt32.MaxValue">
      <summary>Représente la plus grande valeur possible de <see cref="T:System.UInt32" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UInt32.MinValue">
      <summary>Représente la plus petite valeur possible de <see cref="T:System.UInt32" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre en son équivalent entier non signé 32 bits.</summary>
      <returns>Entier non signé 32 bits équivalent au nombre contenu dans <paramref name="s" />.</returns>
      <param name="s">Chaîne représentant le nombre à convertir. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un style spécifié en son équivalent entier non signé 32 bits.</summary>
      <returns>Entier non signé 32 bits équivalant au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne représentant le nombre à convertir.La chaîne est interprétée à l'aide du style spécifié par le paramètre <paramref name="style" />.</param>
      <param name="style">Combinaison de bits de valeurs d'énumération qui spécifie le format autorisé de <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un style et un format propre à la culture spécifiés en son équivalent entier non signé 32 bits.</summary>
      <returns>Entier non signé 32 bits équivalant au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne représentant le nombre à convertir.La chaîne est interprétée à l'aide du style spécifié par le paramètre <paramref name="style" />.</param>
      <param name="style">Combinaison de bits de valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un format propre à la culture spécifié en son équivalent entier non signé 32 bits.</summary>
      <returns>Entier non signé 32 bits équivalant au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne qui représente le nombre à convertir. </param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct style. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</summary>
      <returns>Entier signé indiquant l'ordre relatif de cette instance et <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Objet à comparer à cette instance ou null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.UInt32" /> object. </exception>
    </member>
    <member name="M:System.UInt32.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.UInt32.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true si la valeur de l'instance actuelle est différente de zéro ; sinon, false.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Byte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Char" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Cette conversion n'est pas prise en charge.Aucune valeur n'est retournée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Double" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int16" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.SByte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Single" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <paramref name="type" />.</returns>
      <param name="type">Type dans lequel convertir cette valeur <see cref="T:System.UInt32" />.</param>
      <param name="provider">Implémentation de <see cref="T:System.IFormatProvider" /> qui fournit des informations propres à la culture sur le format de la valeur retournée.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt16" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, inchangée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt32.ToString">
      <summary>Convertit la valeur numérique de cette instance en sa représentation équivalente sous forme de chaîne.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, constituée d'une séquence de chiffres entre 0 et 9, sans signe ni zéro non significatif.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.ToString(System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide des informations de format spécifiques à la culture donnée.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, constituée d'une séquence de chiffres entre 0 et 9, sans signe ni zéro non significatif.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.ToString(System.String)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide du format spécifié.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="format" />.</returns>
      <param name="format">Chaîne de format numérique.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.ToString(System.String,System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide du format spécifié et des informations de format spécifiques à la culture.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, telle que spécifiée par <paramref name="format" /> et <paramref name="provider" />.</returns>
      <param name="format">Chaîne de format numérique.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture se rapportant à cette instance. </param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32@)">
      <summary>Essaie de convertir la représentation sous forme de chaîne d'un nombre dans un style et un format propre à la culture spécifiés en son équivalent entier non signé 32 bits.Une valeur de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne qui représente le nombre à convertir.La chaîne est interprétée à l'aide du style spécifié par le paramètre <paramref name="style" />.</param>
      <param name="style">Combinaison d'opérations de bits de valeurs d'énumération qui indique le format autorisé du paramètre <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de l'entier signé 32 bits équivalente au nombre contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, qu'il n'est pas dans un format conforme à <paramref name="style" /> ou qu'il représente un nombre inférieur à <see cref="F:System.UInt32.MinValue" /> ou supérieur à <see cref="F:System.UInt32.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.TryParse(System.String,System.UInt32@)">
      <summary>Tente de convertir la représentation sous forme de chaîne d'un nombre en son équivalent entier non signé 32 bits.Une valeur de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne qui représente le nombre à convertir. </param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de l'entier signé 32 bits équivalente au nombre contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, n'est pas au format approprié ou représente un nombre inférieur à <see cref="F:System.UInt32.MinValue" /> ou supérieur à <see cref="F:System.UInt32.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UInt64">
      <summary>Représente un entier non signé 64 bits.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.CompareTo(System.UInt64)">
      <summary>Compare cette instance à un entier non signé 64 bits et retourne une indication sur leurs valeurs relatives.</summary>
      <returns>Nombre signé indiquant les valeurs relatives de cette instance et <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Entier non signé à comparer. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt64.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si cette instance équivaut à un objet spécifié.</summary>
      <returns>true si <paramref name="obj" /> est une instance de <see cref="T:System.UInt64" /> et est égal à la valeur de cette instance ; sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt64.Equals(System.UInt64)">
      <summary>Retourne une valeur indiquant si cette instance est égale à une valeur <see cref="T:System.UInt64" /> spécifiée.</summary>
      <returns>true si <paramref name="obj" /> possède la même valeur que cette instance ; sinon, false.</returns>
      <param name="obj">Valeur <see cref="T:System.UInt64" /> à comparer à cette instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt64.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UInt64.MaxValue">
      <summary>Représente la plus grande valeur possible de <see cref="T:System.UInt64" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UInt64.MinValue">
      <summary>Représente la plus petite valeur possible de <see cref="T:System.UInt64" />.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre en son équivalent entier non signé 64 bits.</summary>
      <returns>Entier non signé 64 bits équivalent au nombre contenu dans <paramref name="s" />.</returns>
      <param name="s">Chaîne qui représente le nombre à convertir. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un style spécifié en son équivalent entier non signé 64 bits.</summary>
      <returns>Entier non signé 64 bits équivalant au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne qui représente le nombre à convertir.La chaîne est interprétée à l'aide du style spécifié par le paramètre <paramref name="style" />.</param>
      <param name="style">Combinaison de bits de valeurs d'énumération qui spécifie le format autorisé de <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un style et un format propre à la culture spécifiés en son équivalent entier non signé 64 bits.</summary>
      <returns>Entier non signé 64 bits équivalant au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne qui représente le nombre à convertir.La chaîne est interprétée à l'aide du style spécifié par le paramètre <paramref name="style" />.</param>
      <param name="style">Combinaison de bits de valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String,System.IFormatProvider)">
      <summary>Convertit la représentation sous forme de chaîne d'un nombre dans un format propre à la culture spécifié en son équivalent entier non signé 64 bits.</summary>
      <returns>Entier non signé 64 bits équivalant au nombre spécifié dans <paramref name="s" />.</returns>
      <param name="s">Chaîne qui représente le nombre à convertir. </param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not in the correct style. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</summary>
      <returns>Entier signé indiquant l'ordre relatif de cette instance et <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Objet à comparer à cette instance ou null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.UInt64" /> object. </exception>
    </member>
    <member name="M:System.UInt64.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.UInt64.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true si la valeur de l'instance actuelle est différente de zéro ; sinon, false.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Byte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Char" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Cette conversion n'est pas prise en charge.Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Cette conversion n'est pas prise en charge.Aucune valeur n'est retournée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Double" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int16" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Int64" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.SByte" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.Single" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <paramref name="type" />.</returns>
      <param name="type">Type dans lequel convertir cette valeur <see cref="T:System.UInt64" />.</param>
      <param name="provider">Implémentation de <see cref="T:System.IFormatProvider" /> qui fournit des informations sur le format de la valeur retournée.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt16" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Valeur de l'instance actuelle, inchangée.</returns>
      <param name="provider">Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.UInt64.ToString">
      <summary>Convertit la valeur numérique de cette instance en sa représentation équivalente sous forme de chaîne.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, constituée d'une séquence de chiffres entre 0 et 9, sans signe ni zéro non significatif.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.ToString(System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide des informations de format spécifiques à la culture donnée.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, constituée d'une séquence de chiffres entre 0 et 9, sans signe ni zéro non significatif.  </returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.ToString(System.String)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide du format spécifié.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="format" />.</returns>
      <param name="format">Chaîne de format numérique.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.ToString(System.String,System.IFormatProvider)">
      <summary>Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide du format spécifié et des informations de format spécifiques à la culture.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance, telle que spécifiée par <paramref name="format" /> et <paramref name="provider" />.</returns>
      <param name="format">Chaîne de format numérique.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture se rapportant à cette instance. </param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)">
      <summary>Essaie de convertir la représentation sous forme de chaîne d'un nombre dans un style et un format propre à la culture spécifiés en son équivalent entier non signé 64 bits.Une valeur de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne qui représente le nombre à convertir.La chaîne est interprétée à l'aide du style spécifié par le paramètre <paramref name="style" />.</param>
      <param name="style">Combinaison d'opérations de bits de valeurs d'énumération qui indique le format autorisé du paramètre <paramref name="s" />.Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="s" />. </param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de l'entier signé 64 bits équivalente au nombre contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, qu'il n'est pas dans un format conforme à <paramref name="style" /> ou qu'il représente un nombre inférieur à <see cref="F:System.UInt64.MinValue" /> ou supérieur à <see cref="F:System.UInt64.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.TryParse(System.String,System.UInt64@)">
      <summary>Tente de convertir la représentation sous forme de chaîne d'un nombre en son équivalent entier non signé 64 bits.Une valeur de retour indique si la conversion a réussi ou a échoué.</summary>
      <returns>true si la conversion de <paramref name="s" /> est réussie ; sinon, false.</returns>
      <param name="s">Chaîne qui représente le nombre à convertir. </param>
      <param name="result">Quand cette méthode est retournée, contient la valeur de l'entier signé 64 bits équivalente au nombre contenu dans <paramref name="s" /> si la conversion a réussi, ou zéro si elle a échoué.La conversion échoue si le paramètre <paramref name="s" /> est null ou <see cref="F:System.String.Empty" />, n'est pas au format approprié ou représente un nombre inférieur à <see cref="F:System.UInt64.MinValue" /> ou supérieur à <see cref="F:System.UInt64.MaxValue" />.Ce paramètre est passé non initialisé ; toute valeur fournie initialement dans <paramref name="result" /> sera remplacée.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UIntPtr">
      <summary>Type spécifique à la plateforme, utilisé pour représenter un pointeur ou un handle.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.#ctor(System.UInt32)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.UIntPtr" /> à l'aide du pointeur ou handle 32 bits spécifié.</summary>
      <param name="value">Pointeur ou handle contenu dans un entier non signé 32 bits. </param>
    </member>
    <member name="M:System.UIntPtr.#ctor(System.UInt64)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.UIntPtr" /> à l'aide du pointeur ou handle 64 bits spécifié.</summary>
      <param name="value">Pointeur ou handle contenu dans un entier 64 bits non signé. </param>
      <exception cref="T:System.OverflowException">Sur une plateforme 32 bits, <paramref name="value" /> est trop élevé pour être représenté en tant que <see cref="T:System.UIntPtr" />. </exception>
    </member>
    <member name="M:System.UIntPtr.#ctor(System.Void*)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.UIntPtr" /> à l'aide du pointeur spécifié vers un type non spécifié.</summary>
      <param name="value">Pointeur vers un type non spécifié. </param>
    </member>
    <member name="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
      <summary>Ajoute un offset à la valeur d'un pointeur non signé.</summary>
      <returns>Nouveau pointeur non signé qui reflète l'ajout d'un <paramref name="offset" /> au <paramref name="pointer" />.</returns>
      <param name="pointer">Pointeur non signé auquel ajouter l'offset.</param>
      <param name="offset">Offset à ajouter.</param>
    </member>
    <member name="M:System.UIntPtr.Equals(System.Object)">
      <summary>Renvoie une valeur indiquant si cette instance équivaut à un objet spécifié.</summary>
      <returns>true si <paramref name="obj" /> est une instance de <see cref="T:System.UIntPtr" /> et est égal à la valeur de cette instance ; sinon, false.</returns>
      <param name="obj">Objet à comparer à cette instance ou null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UIntPtr.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
      <summary>Ajoute un offset à la valeur d'un pointeur non signé.</summary>
      <returns>Nouveau pointeur non signé qui reflète l'ajout d'un <paramref name="offset" /> au <paramref name="pointer" />.</returns>
      <param name="pointer">Pointeur non signé auquel ajouter l'offset.</param>
      <param name="offset">Offset à ajouter.</param>
    </member>
    <member name="M:System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)">
      <summary>Détermine si deux instances spécifiées de <see cref="T:System.UIntPtr" /> sont égales.</summary>
      <returns>true si <paramref name="value1" /> est égal à <paramref name="value2" /> ; sinon, false.</returns>
      <param name="value1">Premier pointeur ou handle à comparer. </param>
      <param name="value2">Second pointeur ou handle à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UInt32)~System.UIntPtr">
      <summary>Convertit la valeur d'un entier 32 bits non signé en <see cref="T:System.UIntPtr" />.</summary>
      <returns>Nouvelle instance de <see cref="T:System.UIntPtr" /> initialisée avec <paramref name="value" />.</returns>
      <param name="value">Entier non signé 32 bits. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UInt64)~System.UIntPtr">
      <summary>Convertit la valeur d'un entier 64 bits non signé en <see cref="T:System.UIntPtr" />.</summary>
      <returns>Nouvelle instance de <see cref="T:System.UIntPtr" /> initialisée avec <paramref name="value" />.</returns>
      <param name="value">Entier non signé 64 bits. </param>
      <exception cref="T:System.OverflowException">Sur une plateforme 32 bits, <paramref name="value" /> est trop élevé pour être représenté en tant que <see cref="T:System.UIntPtr" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt64">
      <summary>Convertit la valeur du <see cref="T:System.UIntPtr" /> spécifié en entier 64 bits non signé.</summary>
      <returns>Contenu de <paramref name="value" />.</returns>
      <param name="value">Pointeur ou handle à convertir. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*">
      <summary>Convertit la valeur du <see cref="T:System.UIntPtr" /> spécifié en pointeur de type non spécifié.</summary>
      <returns>Contenu de <paramref name="value" />.</returns>
      <param name="value">Pointeur ou handle à convertir. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32">
      <summary>Convertit la valeur du <see cref="T:System.UIntPtr" /> spécifié en entier 32 bits non signé.</summary>
      <returns>Contenu de <paramref name="value" />.</returns>
      <param name="value">Pointeur ou handle à convertir. </param>
      <exception cref="T:System.OverflowException">Sur une plateforme 64 bits, <paramref name="value" /> a une valeur trop élevée pour être représenté en tant qu'entier 32 bits non signé. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr">
      <summary>Convertit le pointeur spécifié vers un type non spécifié en <see cref="T:System.UIntPtr" />.</summary>
      <returns>Nouvelle instance de <see cref="T:System.UIntPtr" /> initialisée avec <paramref name="value" />.</returns>
      <param name="value">Pointeur vers un type non spécifié. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)">
      <summary>Détermine si deux instances spécifiées de <see cref="T:System.UIntPtr" /> ne sont pas égales.</summary>
      <returns>true si <paramref name="value1" /> n'est pas égal à <paramref name="value2" /> ; sinon, false.</returns>
      <param name="value1">Premier pointeur ou handle à comparer. </param>
      <param name="value2">Second pointeur ou handle à comparer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
      <summary>Soustrait un offset de la valeur d'un pointeur non signé.</summary>
      <returns>Nouveau pointeur non signé qui reflète la soustraction d'<paramref name="offset" /> de <paramref name="pointer" />.</returns>
      <param name="pointer">Pointeur non signé auquel soustraire l'offset.</param>
      <param name="offset">Offset à soustraire.</param>
    </member>
    <member name="P:System.UIntPtr.Size">
      <summary>Obtient la taille de cette instance.</summary>
      <returns>Taille d'un pointeur ou d'un handle sur cette plateforme, mesurée en octets.Sur une plateforme 32 bits, cette propriété a la valeur 4, sur une plateforme 64 bits, elle a la valeur 8.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
      <summary>Soustrait un offset de la valeur d'un pointeur non signé.</summary>
      <returns>Nouveau pointeur non signé qui reflète la soustraction d'<paramref name="offset" /> de <paramref name="pointer" />.</returns>
      <param name="pointer">Pointeur non signé auquel soustraire l'offset.</param>
      <param name="offset">Offset à soustraire.</param>
    </member>
    <member name="M:System.UIntPtr.ToPointer">
      <summary>Convertit la valeur de cette instance en pointeur vers un type non spécifié.</summary>
      <returns>Pointeur vers <see cref="T:System.Void" /> ; c'est-à-dire pointeur vers une mémoire contenant des données de type non spécifié.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.ToString">
      <summary>Convertit la valeur numérique de cette instance en sa représentation équivalente sous forme de chaîne.</summary>
      <returns>Représentation sous forme de chaîne de la valeur de cette instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.ToUInt32">
      <summary>Convertit la valeur de cette instance en entier 32 bits non signé.</summary>
      <returns>Entier 32 bits non signé équivalant à la valeur de cette instance.</returns>
      <exception cref="T:System.OverflowException">Sur une plateforme 64 bits, cette instance a une valeur trop élevée pour être représentée en tant qu'entier non signé 32 bits. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.ToUInt64">
      <summary>Convertit la valeur de cette instance en entier 64 bits non signé.</summary>
      <returns>Entier 64 bits non signé équivalant à la valeur de cette instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UIntPtr.Zero">
      <summary>Champ en lecture seule représentant un pointeur ou un handle remis à zéro.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UnauthorizedAccessException">
      <summary>Exception levée quand le système d'exploitation refuse l'accès suite à une erreur d'E/S ou à un type d'erreur de sécurité spécifique.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UnauthorizedAccessException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.UnauthorizedAccessException" />.</summary>
    </member>
    <member name="M:System.UnauthorizedAccessException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.UnauthorizedAccessException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message décrivant l'erreur. </param>
    </member>
    <member name="M:System.UnauthorizedAccessException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.UnauthorizedAccessException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="inner">Exception ayant provoqué l'exception actuelle.Si le paramètre <paramref name="inner" /> n'est pas une référence null (Nothing en Visual Basic), l'exception actuelle est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Uri">
      <summary>Fournit une représentation objet d'un URI (Uniform Resource Identifier) et un accès simplifié aux parties de l'identificateur.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Uri" /> avec l'URI spécifié.</summary>
      <param name="uriString">URI. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> a la valeur null. </exception>
      <exception cref="T:System.UriFormatException">Dans le .NET for Windows Store apps ou bibliothèque de classes Portable, intercepter l'exception de la classe de base, <see cref="T:System.FormatException" />, à la place.<paramref name="uriString" /> est vide.ou La forme du schéma spécifié dans <paramref name="uriString" /> n'est pas correcte.Voir <see cref="M:System.Uri.CheckSchemeName(System.String)" />.ou <paramref name="uriString" /> contient trop de barres obliques.ou Le mot de passe spécifié dans <paramref name="uriString" /> n'est pas valide.ou Le nom de l'hôte spécifié dans <paramref name="uriString" /> n'est pas valide.ou Le nom du fichier spécifié dans <paramref name="uriString" /> n'est pas valide. ou Le nom de l'utilisateur spécifié dans <paramref name="uriString" /> n'est pas valide.ou Le nom de l'hôte ou de l'autorité spécifié dans <paramref name="uriString" /> ne peut pas se terminer par des barres obliques inverses.ou Le numéro de port spécifié dans <paramref name="uriString" /> n'est pas valide ou ne peut pas être analysé.ou La longueur de <paramref name="uriString" /> dépasse 65519 caractères.ou La longueur du schéma spécifiée dans <paramref name="uriString" /> dépasse 1023 caractères.ou Il y a une séquence de caractères non valide dans <paramref name="uriString" />.ou Le chemin d'accès MS-DOS spécifié dans <paramref name="uriString" /> doit commencer par c:\\.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.String,System.UriKind)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Uri" /> avec l'URI spécifié.Ce constructeur vous permet de spécifier si la chaîne d'URI est un URI relatif, un URI absolu ou si elle est indéterminée.</summary>
      <param name="uriString">Chaîne qui identifie la ressource à représenter par l'instance de <see cref="T:System.Uri" />.</param>
      <param name="uriKind">Spécifie si la chaîne d'URI est un URI relatif, un URI absolu ou si elle est indéterminée.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="uriKind" /> n'est pas valide. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> a la valeur null. </exception>
      <exception cref="T:System.UriFormatException">Dans le .NET for Windows Store apps ou bibliothèque de classes Portable, intercepter l'exception de la classe de base, <see cref="T:System.FormatException" />, à la place.<paramref name="uriString" /> contient un URI relatif et <paramref name="uriKind" /> est <see cref="F:System.UriKind.Absolute" />.ou<paramref name="uriString" /> contient un URI absolu et <paramref name="uriKind" /> est <see cref="F:System.UriKind.Relative" />.ou<paramref name="uriString" /> est vide.ou La forme du schéma spécifié dans <paramref name="uriString" /> n'est pas correcte.Voir <see cref="M:System.Uri.CheckSchemeName(System.String)" />.ou <paramref name="uriString" /> contient trop de barres obliques.ou Le mot de passe spécifié dans <paramref name="uriString" /> n'est pas valide.ou Le nom de l'hôte spécifié dans <paramref name="uriString" /> n'est pas valide.ou Le nom du fichier spécifié dans <paramref name="uriString" /> n'est pas valide. ou Le nom de l'utilisateur spécifié dans <paramref name="uriString" /> n'est pas valide.ou Le nom de l'hôte ou de l'autorité spécifié dans <paramref name="uriString" /> ne peut pas se terminer par des barres obliques inverses.ou Le numéro de port spécifié dans <paramref name="uriString" /> n'est pas valide ou ne peut pas être analysé.ou La longueur de <paramref name="uriString" /> dépasse 65519 caractères.ou La longueur du schéma spécifiée dans <paramref name="uriString" /> dépasse 1023 caractères.ou Il y a une séquence de caractères non valide dans <paramref name="uriString" />.ou Le chemin d'accès MS-DOS spécifié dans <paramref name="uriString" /> doit commencer par c:\\.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.Uri,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Uri" /> fondée sur l'URI de base et la chaîne URI relative spécifiés.</summary>
      <param name="baseUri">URI de base. </param>
      <param name="relativeUri">URI relatif à ajouter à l'identificateur de base. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="baseUri" /> n'est pas une instance de <see cref="T:System.Uri" /> absolue. </exception>
      <exception cref="T:System.UriFormatException">Dans le .NET for Windows Store apps ou bibliothèque de classes Portable, intercepter l'exception de la classe de base, <see cref="T:System.FormatException" />, à la place.L'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> est vide ou contient uniquement des espaces.ou Le schéma spécifié dans l'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> n'est pas valide.ou L'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> contient trop de barres obliques.ou Le mot de passe spécifié dans l'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> n'est pas valide.ou Le nom d'hôte spécifié dans l'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> n'est pas valide.ou Le nom de fichier spécifié dans l'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> n'est pas valide. ou Le nom d'utilisateur spécifié dans l'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> n'est pas valide.ou Le nom d'hôte ou d'autorité spécifié dans l'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> ne peut pas se terminer par des barres obliques inverses.ou Le numéro de port spécifié dans l'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> n'est pas valide ou ne peut pas être analysé.ou La longueur de l'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> dépasse 65519 caractères.ou La longueur du schéma spécifié dans l'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> dépasse 1023 caractères.ou L'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> contient une séquence de caractères non valide.ou Le chemin d'accès MS-DOS spécifié dans <paramref name="uriString" /> doit commencer par c:\\.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.Uri,System.Uri)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Uri" /> en s'appuyant sur la combinaison d'une instance de <see cref="T:System.Uri" /> de base et d'une instance de <see cref="T:System.Uri" /> relative.</summary>
      <param name="baseUri">
        <see cref="T:System.Uri" /> absolu qui est la base de la nouvelle instance de <see cref="T:System.Uri" />. </param>
      <param name="relativeUri">Instance de <see cref="T:System.Uri" /> relative qui est combinée avec <paramref name="baseUri" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseUri" /> n'est pas une instance de <see cref="T:System.Uri" /> absolue. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="baseUri" /> n'est pas une instance de <see cref="T:System.Uri" /> absolue. </exception>
      <exception cref="T:System.UriFormatException">Dans le .NET for Windows Store apps ou bibliothèque de classes Portable, intercepter l'exception de la classe de base, <see cref="T:System.FormatException" />, à la place.L'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> est vide ou contient uniquement des espaces.ou Le schéma spécifié dans l'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> n'est pas valide.ou L'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> contient trop de barres obliques.ou Le mot de passe spécifié dans l'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> n'est pas valide.ou Le nom d'hôte spécifié dans l'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> n'est pas valide.ou Le nom de fichier spécifié dans l'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> n'est pas valide. ou Le nom d'utilisateur spécifié dans l'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> n'est pas valide.ou Le nom d'hôte ou d'autorité spécifié dans l'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> ne peut pas se terminer par des barres obliques inverses.ou Le numéro de port spécifié dans l'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> n'est pas valide ou ne peut pas être analysé.ou La longueur de l'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> dépasse 65519 caractères.ou La longueur du schéma spécifié dans l'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> dépasse 1023 caractères.ou L'URI formé en combinant <paramref name="baseUri" /> et <paramref name="relativeUri" /> contient une séquence de caractères non valide.ou Le chemin d'accès MS-DOS spécifié dans <paramref name="uriString" /> doit commencer par c:\\.</exception>
    </member>
    <member name="P:System.Uri.AbsolutePath">
      <summary>Obtient le chemin d'accès absolu de l'URI.</summary>
      <returns>
        <see cref="T:System.String" /> contenant le chemin d'accès absolu à la ressource.</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.AbsoluteUri">
      <summary>Obtient l'URI absolu.</summary>
      <returns>
        <see cref="T:System.String" /> contenant l'URI complet.</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Authority">
      <summary>Obtient le nom de l'hôte DNS (Domain Name System) ou l'adresse IP et le numéro de port pour un serveur.</summary>
      <returns>
        <see cref="T:System.String" /> contenant le composant d'autorité de l'URI représenté par cette instance.</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.CheckHostName(System.String)">
      <summary>Détermine si le nom d'hôte spécifié est un nom DNS valide.</summary>
      <returns>
        <see cref="T:System.UriHostNameType" /> qui indique le type du nom d'hôte.S'il est impossible de déterminer le nom d'hôte ou si ce dernier est null ou une chaîne de longueur zéro, cette méthode retourne <see cref="F:System.UriHostNameType.Unknown" />.</returns>
      <param name="name">Nom d'hôte à valider.Il peut s'agir d'une adresse IPv4 ou IPv6 ou d'un nom d'hôte Internet.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.CheckSchemeName(System.String)">
      <summary>Détermine si le nom de schéma spécifié est valide.</summary>
      <returns>Valeur <see cref="T:System.Boolean" /> égale à true si le nom du schéma est valide ; sinon, false.</returns>
      <param name="schemeName">Nom de schéma à valider. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
      <summary>Compare les parties spécifiées de deux URI à l'aide des règles de comparaison spécifiées.</summary>
      <returns>Valeur <see cref="T:System.Int32" /> qui indique la relation lexicale entre les composants <see cref="T:System.Uri" />.ValeurSignificationInférieure à zéro<paramref name="uri1" /> est inférieur à <paramref name="uri2" />.Zéro<paramref name="uri1" /> est égal à <paramref name="uri2" />.Supérieure à zéro<paramref name="uri1" /> est supérieur à <paramref name="uri2" />.</returns>
      <param name="uri1">Première <see cref="T:System.Uri" />.</param>
      <param name="uri2">Deuxième <see cref="T:System.Uri" />.</param>
      <param name="partsToCompare">Combinaison d'opérations de bits des valeurs <see cref="T:System.UriComponents" /> qui spécifie les parties de <paramref name="uri1" /> et <paramref name="uri2" /> à comparer.</param>
      <param name="compareFormat">L'une des valeurs <see cref="T:System.UriFormat" /> qui spécifient la séquence d'échappement de caractères utilisée lors de la comparaison des composants d'URI.</param>
      <param name="comparisonType">Une des valeurs de <see cref="T:System.StringComparison" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> n'est pas une valeur <see cref="T:System.StringComparison" /> valide.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Uri.DnsSafeHost">
      <summary>Obtient un nom d'hôte sans séquence d'échappement dont l'utilisation pour la résolution DNS est sécurisée.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient la partie hôte sans séquence d'échappement de l'URI qui convient pour la résolution DNS ; ou chaîne hôte sans séquence d'échappement d'origine, si elle convient déjà pour la résolution.</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.Equals(System.Object)">
      <summary>Compare si deux instances <see cref="T:System.Uri" /> sont égales.</summary>
      <returns>Valeur <see cref="T:System.Boolean" /> égale à true si les deux instances représentent le même URI ; sinon, false.</returns>
      <param name="comparand">Instance de <see cref="T:System.Uri" /> ou URI à comparer à l'instance actuelle. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Uri.EscapeDataString(System.String)">
      <summary>Convertit une chaîne en sa représentation avec séquence d'échappement.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient la représentation avec séquence d'échappement de <paramref name="stringToEscape" />.</returns>
      <param name="stringToEscape">Chaîne à placer dans une séquence d'échappement.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToEscape" /> a la valeur null. </exception>
      <exception cref="T:System.UriFormatException">Dans le .NET for Windows Store apps ou bibliothèque de classes Portable, intercepter l'exception de la classe de base, <see cref="T:System.FormatException" />, à la place.La longueur de <paramref name="stringToEscape" /> dépasse 32766 caractères.</exception>
    </member>
    <member name="M:System.Uri.EscapeUriString(System.String)">
      <summary>Convertit une chaîne URI en sa représentation sans séquence d'échappement.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient la représentation avec séquence d'échappement de <paramref name="stringToEscape" />.</returns>
      <param name="stringToEscape">Chaîne à placer dans une séquence d'échappement.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToEscape" /> a la valeur null. </exception>
      <exception cref="T:System.UriFormatException">Dans le .NET for Windows Store apps ou bibliothèque de classes Portable, intercepter l'exception de la classe de base, <see cref="T:System.FormatException" />, à la place.La longueur de <paramref name="stringToEscape" /> dépasse 32766 caractères.</exception>
    </member>
    <member name="P:System.Uri.Fragment">
      <summary>Obtient le fragment URI avec séquence d'échappement.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient toute information relative au fragment URI.</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
      <summary>Obtient les composants spécifiés de l'instance actuelle à l'aide de la séquence d'échappement spécifiée pour les caractères spéciaux.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient les composants.</returns>
      <param name="components">Combinaison d'opérations de bits des valeurs <see cref="T:System.UriComponents" /> qui spécifie quelles parties de l'instance actuelle retourner à l'appelant.</param>
      <param name="format">L'une des valeurs <see cref="T:System.UriFormat" /> qui contrôlent la façon dont les caractères spéciaux sont placés dans une séquence d'échappement. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="uriComponents" /> n'est pas une combinaison de valeurs <see cref="T:System.UriComponents" /> valides.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Uri" /> actuel n'est pas un URI absolu.Il est impossible d'utiliser des URI relatifs avec cette méthode.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.GetHashCode">
      <summary>Obtient le code de hachage pour l'URI.</summary>
      <returns>
        <see cref="T:System.Int32" /> comportant la valeur de hachage générée pour cet URI.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Host">
      <summary>Obtient le composant hôte de cette instance.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient le nom d'hôte.Il s'agit généralement du nom de l'hôte DNS ou de l'adresse IP du serveur.</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.HostNameType">
      <summary>Obtient le type du nom d'hôte spécifié dans l'URI.</summary>
      <returns>Membre de l'énumération <see cref="T:System.UriHostNameType" />.</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IdnHost">
      <summary>Nom de domaine international conforme à la norme RFC 3490 de l'hôte, avec Punycode le cas échéant.</summary>
      <returns>Retourne le nom d'hôte, mis en forme avec Punycode conformément à la norme IDN.<see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Uri.IsAbsoluteUri">
      <summary>Obtient une valeur indiquant si l'instance <see cref="T:System.Uri" /> est absolue.</summary>
      <returns>Valeur <see cref="T:System.Boolean" /> égale à true si l'instance <see cref="T:System.Uri" /> est absolue ; sinon, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.IsBaseOf(System.Uri)">
      <summary>Détermine si l'instance de <see cref="T:System.Uri" /> actuelle est une base de l'instance de <see cref="T:System.Uri" /> spécifiée.</summary>
      <returns>true si l'instance actuelle de <see cref="T:System.Uri" /> est une base de <paramref name="uri" /> ; sinon, false.</returns>
      <param name="uri">Instance de <see cref="T:System.Uri" /> spécifiée à tester. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> a la valeur null. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsDefaultPort">
      <summary>Obtient une valeur indiquant si la valeur du port de l'URI est la valeur par défaut pour ce schéma.</summary>
      <returns>Valeur <see cref="T:System.Boolean" /> égale à true si la valeur de la propriété <see cref="P:System.Uri.Port" /> est le port par défaut de ce schéma ; sinon, false.</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsFile">
      <summary>Obtient une valeur indiquant si le <see cref="T:System.Uri" /> spécifié est un URI de fichier.</summary>
      <returns>Valeur <see cref="T:System.Boolean" /> égale à true si <see cref="T:System.Uri" /> est un URI de fichier ; sinon, false.</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsLoopback">
      <summary>Obtient une valeur indiquant si le <see cref="T:System.Uri" /> spécifié référence l'hôte local.</summary>
      <returns>Valeur <see cref="T:System.Boolean" /> égale à true si ce <see cref="T:System.Uri" /> référence l'hôte local ; sinon, false.</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsUnc">
      <summary>Obtient une valeur indiquant si le <see cref="T:System.Uri" /> spécifié est un chemin d'accès UNC (Universal Naming Convention).</summary>
      <returns>Valeur <see cref="T:System.Boolean" /> égale à true si <see cref="T:System.Uri" /> est un chemin d'accès UNC (Universal Naming Convention) ; sinon, false.</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.IsWellFormedOriginalString">
      <summary>Indique si la chaîne utilisée pour construire ce  <see cref="T:System.Uri" /> était bien formée et qu'elle ne doit pas également faire l'objet d'une séquence d'échappement.</summary>
      <returns>Valeur <see cref="T:System.Boolean" /> qui est true si la chaîne est de forme correcte ; sinon false.</returns>
    </member>
    <member name="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
      <summary>Indique si la chaîne est bien formée en essayant de construire un URI avec la chaîne et garantit que la chaîne ne doit pas également faire l'objet d'une séquence d'échappement.</summary>
      <returns>Valeur <see cref="T:System.Boolean" /> qui est true  si la chaîne est de forme correcte ; sinon false.</returns>
      <param name="uriString">Chaîne utilisée pour tenter de construire un <see cref="T:System.Uri" />.</param>
      <param name="uriKind">Type de <see cref="T:System.Uri" /> dans <paramref name="uriString" />.</param>
    </member>
    <member name="P:System.Uri.LocalPath">
      <summary>Obtient une représentation du système d'exploitation local d'un nom de fichier.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient la représentation du système d'exploitation local d'un nom de fichier.</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.MakeRelativeUri(System.Uri)">
      <summary>Détermine la différence entre deux instances de <see cref="T:System.Uri" />.</summary>
      <returns>Si le nom d'hôte et le schéma de cette instance d'URI et <paramref name="uri" /> sont identiques, cette méthode retourne un <see cref="T:System.Uri" /> relatif qui, lorsqu'il est ajouté à l'instance d'URI actuelle, donne <paramref name="uri" />.Si le nom d'hôte ou le schéma est différent, cette méthode retourne une <see cref="T:System.Uri" /> qui représente le paramètre <paramref name="uri" />.</returns>
      <param name="uri">URI à comparer à l'URI en cours.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> a la valeur null. </exception>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
    </member>
    <member name="M:System.Uri.op_Equality(System.Uri,System.Uri)">
      <summary>Détermine si deux instances <see cref="T:System.Uri" /> ont la même valeur.</summary>
      <returns>Valeur <see cref="T:System.Boolean" /> qui est true si les instances <see cref="T:System.Uri" /> sont équivalentes ; sinon, false.</returns>
      <param name="uri1">Instance de <see cref="T:System.Uri" /> à compare à <paramref name="uri2" />. </param>
      <param name="uri2">Instance de <see cref="T:System.Uri" /> à compare à <paramref name="uri1" />. </param>
      <filterpriority>3</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.op_Inequality(System.Uri,System.Uri)">
      <summary>Détermine si deux instances de <see cref="T:System.Uri" /> n'ont pas la même valeur.</summary>
      <returns>Valeur <see cref="T:System.Boolean" /> égale à true si les deux instances <see cref="T:System.Uri" /> ne sont pas égales ; sinon, false.Si l'un des deux paramètres est null, cette méthode retourne true.</returns>
      <param name="uri1">Instance de <see cref="T:System.Uri" /> à compare à <paramref name="uri2" />. </param>
      <param name="uri2">Instance de <see cref="T:System.Uri" /> à compare à <paramref name="uri1" />. </param>
      <filterpriority>3</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.OriginalString">
      <summary>Obtient la chaîne d'URI d'origine passée au constructeur <see cref="T:System.Uri" />.</summary>
      <returns>
        <see cref="T:System.String" /> contenant l'URI exact spécifié lors de la construction de cette instance ; sinon, <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.PathAndQuery">
      <summary>Obtient les propriétés <see cref="P:System.Uri.AbsolutePath" /> et <see cref="P:System.Uri.Query" /> séparées par un point d'interrogation (?).</summary>
      <returns>
        <see cref="T:System.String" /> qui contient les propriétés <see cref="P:System.Uri.AbsolutePath" /> et <see cref="P:System.Uri.Query" /> séparées par un point d'interrogatio (?).</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Port">
      <summary>Obtient le numéro de port de l'URI spécifié.</summary>
      <returns>Valeur <see cref="T:System.Int32" /> qui contient le numéro de port pour cet URI.</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Query">
      <summary>Obtient les informations de requête incluses dans l'URI spécifié.</summary>
      <returns>
        <see cref="T:System.String" /> contient les informations de requête incluses dans l'URI spécifié.</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Scheme">
      <summary>Obtient le nom de schéma de cet URI.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient le schéma pour cet URI, converti en minuscules.</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Segments">
      <summary>Obtient un tableau contenant des segments de chemin d'accès qui composent l'URI spécifié.</summary>
      <returns>Tableau <see cref="T:System.String" /> qui contient les segments de chemin d'accès qui composent l'URI spécifié.</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.ToString">
      <summary>Obtient une représentation canonique sous forme de chaîne de l'instance de <see cref="T:System.Uri" />.</summary>
      <returns>Instance de <see cref="T:System.String" /> qui contient la représentation réglementaire sans séquence d'échappement de l'instance de <see cref="T:System.Uri" />.Tous les caractères sont sans séquence d'échappement, hormis #, ? et %.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)">
      <summary>Crée <see cref="T:System.Uri" /> à l'aide de l'instance de <see cref="T:System.String" /> spécifiée et de <see cref="T:System.UriKind" />.</summary>
      <returns>Valeur <see cref="T:System.Boolean" /> égale à true si le <see cref="T:System.Uri" /> a été créé avec succès ; sinon, false.</returns>
      <param name="uriString">
        <see cref="T:System.String" /> représentant <see cref="T:System.Uri" />.</param>
      <param name="uriKind">Type d'URI.</param>
      <param name="result">Cette méthode retourne le <see cref="T:System.Uri" /> construit.</param>
    </member>
    <member name="M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)">
      <summary>Crée un <see cref="T:System.Uri" /> à l'aide des instances de <see cref="T:System.String" /> de base et relatives.</summary>
      <returns>Valeur <see cref="T:System.Boolean" /> égale à true si le <see cref="T:System.Uri" /> a été créé avec succès ; sinon, false.</returns>
      <param name="baseUri">
        <see cref="T:System.Uri" /> de base.</param>
      <param name="relativeUri">
        <see cref="T:System.Uri" /> relatif, représenté sous la forme de <see cref="T:System.String" /> à ajouter au <see cref="T:System.Uri" /> de base.</param>
      <param name="result">Cette méthode retourne un <see cref="T:System.Uri" /> construit à partir de <paramref name="baseUri" /> et de <paramref name="relativeUri" />.Ce paramètre est passé sans être initialisé.</param>
    </member>
    <member name="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
      <summary>Crée un <see cref="T:System.Uri" /> à l'aide des instances de <see cref="T:System.Uri" /> de base et relatives.</summary>
      <returns>Valeur <see cref="T:System.Boolean" /> égale à true si le <see cref="T:System.Uri" /> a été créé avec succès ; sinon, false.</returns>
      <param name="baseUri">
        <see cref="T:System.Uri" /> de base. </param>
      <param name="relativeUri">
        <see cref="T:System.Uri" /> relatif à ajouter à l'<see cref="T:System.Uri" /> de base. </param>
      <param name="result">Cette méthode retourne un <see cref="T:System.Uri" /> construit à partir de <paramref name="baseUri" /> et de <paramref name="relativeUri" />.Ce paramètre est passé sans être initialisé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" /> a la valeur null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.UnescapeDataString(System.String)">
      <summary>Convertit une chaîne en sa représentation sans séquence d'échappement.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient la représentation sans séquence d'échappement de <paramref name="stringToUnescape" />. </returns>
      <param name="stringToUnescape">Chaîne à placer hors d'une séquence d'échappement.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToUnescape" /> a la valeur null. </exception>
    </member>
    <member name="P:System.Uri.UserEscaped">
      <summary>Indique que la chaîne de l'URI a été placée intégralement dans une séquence d'échappement avant la création de l'instance de <see cref="T:System.Uri" />.</summary>
      <returns>Valeur <see cref="T:System.Boolean" /> égale à true si le paramètre <paramref name="dontEscape" /> a reçu la valeur true lors de la création de l'instance <see cref="T:System.Uri" /> ; sinon, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Uri.UserInfo">
      <summary>Obtient le nom d'utilisateur, le mot de passe et d'autres informations spécifiques à l'utilisateur associés à l'URI spécifié.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient les informations de l'utilisateur associées à l'URI.La valeur retournée ne comprend pas le caractère « @ » réservé pour délimiter la partie informations utilisateur de l'URI.</returns>
      <exception cref="T:System.InvalidOperationException">Cette instance représente un URI relatif, et cette propriété est uniquement valide pour les URI absolus. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.UriComponents">
      <summary>Spécifie les parties de <see cref="T:System.Uri" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UriComponents.AbsoluteUri">
      <summary>Données <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.UserInfo" />, <see cref="P:System.Uri.Host" />, <see cref="P:System.Uri.Port" />, <see cref="P:System.Uri.LocalPath" /><see cref="P:System.Uri.Query" /> et <see cref="P:System.Uri.Fragment" />.</summary>
    </member>
    <member name="F:System.UriComponents.Fragment">
      <summary>Données <see cref="P:System.Uri.Fragment" />.</summary>
    </member>
    <member name="F:System.UriComponents.Host">
      <summary>Données <see cref="P:System.Uri.Host" />.</summary>
    </member>
    <member name="F:System.UriComponents.HostAndPort">
      <summary>Données <see cref="P:System.Uri.Host" /> et <see cref="P:System.Uri.Port" />.Si aucune donnée de port ne se trouve dans l'URI et qu'un port par défaut a été assigné à <see cref="P:System.Uri.Scheme" />, le port par défaut est retourné.S'il n'existe aucun port par défaut, - 1 est retourné.</summary>
    </member>
    <member name="F:System.UriComponents.HttpRequestUrl">
      <summary>Données <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.Host" />, <see cref="P:System.Uri.Port" /><see cref="P:System.Uri.LocalPath" /> et <see cref="P:System.Uri.Query" />.</summary>
    </member>
    <member name="F:System.UriComponents.KeepDelimiter">
      <summary>Spécifie que le séparateur doit être inclus.</summary>
    </member>
    <member name="F:System.UriComponents.NormalizedHost">
      <summary>Forme normalisée de l'<see cref="P:System.Uri.Host" />.</summary>
    </member>
    <member name="F:System.UriComponents.Path">
      <summary>Données <see cref="P:System.Uri.LocalPath" />.</summary>
    </member>
    <member name="F:System.UriComponents.PathAndQuery">
      <summary>Données <see cref="P:System.Uri.LocalPath" /> et <see cref="P:System.Uri.Query" />.Consultez également <see cref="P:System.Uri.PathAndQuery" />.</summary>
    </member>
    <member name="F:System.UriComponents.Port">
      <summary>Données <see cref="P:System.Uri.Port" />.</summary>
    </member>
    <member name="F:System.UriComponents.Query">
      <summary>Données <see cref="P:System.Uri.Query" />.</summary>
    </member>
    <member name="F:System.UriComponents.Scheme">
      <summary>Données <see cref="P:System.Uri.Scheme" />.</summary>
    </member>
    <member name="F:System.UriComponents.SchemeAndServer">
      <summary>Données <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.Host" /> et <see cref="P:System.Uri.Port" />.</summary>
    </member>
    <member name="F:System.UriComponents.SerializationInfoString">
      <summary>Contexte <see cref="T:System.Uri" /> complet requis pour les sérialiseurs Uri.Le contexte inclut la portée IPv6.</summary>
    </member>
    <member name="F:System.UriComponents.StrongAuthority">
      <summary>Données <see cref="P:System.Uri.UserInfo" />, <see cref="P:System.Uri.Host" /> et <see cref="P:System.Uri.Port" />.Si aucune donnée de port ne se trouve dans <see cref="T:System.Uri" /> et qu'un port par défaut a été assigné à <see cref="P:System.Uri.Scheme" />, le port par défaut est retourné.S'il n'existe aucun port par défaut, - 1 est retourné.</summary>
    </member>
    <member name="F:System.UriComponents.StrongPort">
      <summary>Données <see cref="P:System.Uri.Port" />.Si aucune donnée de port ne se trouve dans <see cref="T:System.Uri" /> et qu'un port par défaut a été assigné à <see cref="P:System.Uri.Scheme" />, le port par défaut est retourné.S'il n'existe aucun port par défaut, - 1 est retourné.</summary>
    </member>
    <member name="F:System.UriComponents.UserInfo">
      <summary>Données <see cref="P:System.Uri.UserInfo" />.</summary>
    </member>
    <member name="T:System.UriFormat">
      <summary>Contrôle la façon dont les informations d'URI sont placées dans une séquence d'échappement.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UriFormat.SafeUnescaped">
      <summary>Les caractères qui ont une signification réservée dans les composants URI demandés restent dans la séquence d'échappement.Tous les autres ne sont pas placés dans une séquence d'échappement.Consultez la section Notes.</summary>
    </member>
    <member name="F:System.UriFormat.Unescaped">
      <summary>Aucune séquence d'échappement n'est effectuée.</summary>
    </member>
    <member name="F:System.UriFormat.UriEscaped">
      <summary>La séquence d'échappement est effectuée d'après les règles de la RFC 2396.</summary>
    </member>
    <member name="T:System.UriFormatException">
      <summary>Exception levée lorsqu'un identificateur URI (Uniform Resource Identifier) non valide est détecté.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UriFormatException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.UriFormatException" />.</summary>
    </member>
    <member name="M:System.UriFormatException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.UriFormatException" /> avec le message spécifié.</summary>
      <param name="textString">Chaîne du message d'erreur. </param>
    </member>
    <member name="M:System.UriFormatException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.UriFormatException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="textString">Message qui décrit l'exception.L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture du système en cours.</param>
      <param name="e">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.UriHostNameType">
      <summary>Définit les types de noms d'hôtes pour la méthode <see cref="M:System.Uri.CheckHostName(System.String)" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UriHostNameType.Basic">
      <summary>L'hôte est défini, mais le type ne peut pas être déterminé.</summary>
    </member>
    <member name="F:System.UriHostNameType.Dns">
      <summary>Le nom d'hôte est de type DNS (Domain Name System).</summary>
    </member>
    <member name="F:System.UriHostNameType.IPv4">
      <summary>Le nom de l'hôte est une adresse d'hôte de protocole IP (Internet Protocol) version 4.</summary>
    </member>
    <member name="F:System.UriHostNameType.IPv6">
      <summary>Le nom de l'hôte est une adresse d'hôte de protocole IP (Internet Protocol) version 6.</summary>
    </member>
    <member name="F:System.UriHostNameType.Unknown">
      <summary>Le type du nom d'hôte n'est pas fourni.</summary>
    </member>
    <member name="T:System.UriKind">
      <summary>Définit les types de <see cref="T:System.Uri" /> pour  <see cref="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)" /> et plusieurs méthodes <see cref="Overload:System.Uri.#ctor" />.</summary>
    </member>
    <member name="F:System.UriKind.Absolute">
      <summary>L'URI est un URI absolu.</summary>
    </member>
    <member name="F:System.UriKind.Relative">
      <summary>L'URI est un URI relatif.</summary>
    </member>
    <member name="F:System.UriKind.RelativeOrAbsolute">
      <summary>Type d'URI indéterminé.</summary>
    </member>
    <member name="T:System.ValueType">
      <summary>Fournit la classe de base pour les types valeur.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ValueType.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ValueType" />. </summary>
    </member>
    <member name="M:System.ValueType.Equals(System.Object)">
      <summary>Indique si cette instance et un objet spécifié sont égaux.</summary>
      <returns>true si <paramref name="obj" /> et cette instance sont du même type et représentent la même valeur ; sinon false. </returns>
      <param name="obj">Objet à comparer avec l'instance actuelle. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ValueType.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Entier signé 32 bits qui est le code de hachage pour cette instance.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ValueType.ToString">
      <summary>Retourne le nom de type qualifié complet de cette instance.</summary>
      <returns>
        <see cref="T:System.String" /> contenant un nom de type qualifié complet.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Version">
      <summary>Représente le numéro de version d'un assembly, d'un système d'exploitation ou du Common Language Runtime.Cette classe ne peut pas être héritée.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.#ctor(System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Version" /> à l'aide des valeurs de numéros major et minor spécifiées.</summary>
      <param name="major">Numéro de version principale. </param>
      <param name="minor">Numéro de version secondaire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="major" /> or <paramref name="minor" /> is less than zero. </exception>
    </member>
    <member name="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Version" /> à l'aide des valeurs de numéros major, minor et build spécifiées.</summary>
      <param name="major">Numéro de version principale. </param>
      <param name="minor">Numéro de version secondaire. </param>
      <param name="build">Numéro de build. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="major" />, <paramref name="minor" />, or <paramref name="build" /> is less than zero. </exception>
    </member>
    <member name="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Version" /> avec les numéros major, minor, build et revision spécifiés.</summary>
      <param name="major">Numéro de version principale. </param>
      <param name="minor">Numéro de version secondaire. </param>
      <param name="build">Numéro de build. </param>
      <param name="revision">Numéro de révision. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="major" />, <paramref name="minor" />, <paramref name="build" />, or <paramref name="revision" /> is less than zero. </exception>
    </member>
    <member name="M:System.Version.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Version" /> à l'aide de la chaîne spécifiée.</summary>
      <param name="version">Chaîne contenant les numéros major, minor, build et revision, où chaque numéro est séparé par un point (« . »). </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="version" /> has fewer than two components or more than four components. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A major, minor, build, or revision component is less than zero. </exception>
      <exception cref="T:System.FormatException">At least one component of <paramref name="version" /> does not parse to an integer. </exception>
      <exception cref="T:System.OverflowException">At least one component of <paramref name="version" /> represents a number greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="P:System.Version.Build">
      <summary>Obtient la valeur du composant build du numéro de version de l'objet <see cref="T:System.Version" /> actuel.</summary>
      <returns>Numéro de build, ou -1 si le numéro de build n'est pas défini.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.CompareTo(System.Version)">
      <summary>Compare l'objet <see cref="T:System.Version" /> actuel à un objet <see cref="T:System.Version" /> spécifié et retourne une indication de leurs valeurs relatives.</summary>
      <returns>Entier signé qui indique les valeurs relatives des deux objets, comme indiqué dans le tableau suivant.Valeur de retour Signification Inférieure à zéro L'objet <see cref="T:System.Version" /> actuel est une version avant <paramref name="value" />. Zéro L'objet <see cref="T:System.Version" /> actuel est de la même version que <paramref name="value" />. Supérieure à zéro L'objet <see cref="T:System.Version" /> actuel est d'une version ultérieure à <paramref name="value" />. ou<paramref name="value" /> a la valeur null.</returns>
      <param name="value">Objet <see cref="T:System.Version" /> à comparer à l'objet <see cref="T:System.Version" /> actuel, ou null.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si l'objet <see cref="T:System.Version" /> actuel est identique à un objet spécifié.</summary>
      <returns>true si l'objet <see cref="T:System.Version" /> actuel et <paramref name="obj" /> sont tous deux des objets <see cref="T:System.Version" /> et que chaque composant de l'objet <see cref="T:System.Version" /> actuel coïncide avec le composant de <paramref name="obj" /> correspondant ; sinon, false.</returns>
      <param name="obj">Objet à comparer à l'objet <see cref="T:System.Version" /> actuel ou null. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.Equals(System.Version)">
      <summary>Retourne une valeur indiquant si l'objet <see cref="T:System.Version" /> actuel et un objet <see cref="T:System.Version" /> spécifié représentent la même valeur.</summary>
      <returns>true si chaque composant de l'objet <see cref="T:System.Version" /> actuel coïncide avec le composant correspondant du paramètre <paramref name="obj" /> ; sinon, false.</returns>
      <param name="obj">Objet <see cref="T:System.Version" /> à comparer à l'objet <see cref="T:System.Version" /> actuel, ou null.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.GetHashCode">
      <summary>Retourne un code de hachage pour l'objet <see cref="T:System.Version" /> actuel.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Version.Major">
      <summary>Obtient la valeur du composant principal du numéro de version de l'objet <see cref="T:System.Version" /> actuel.</summary>
      <returns>Numéro de version principale.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Version.MajorRevision">
      <summary>Obtient les 16 bits de poids fort du numéro de révision.</summary>
      <returns>Entier signé 16 bits.</returns>
    </member>
    <member name="P:System.Version.Minor">
      <summary>Obtient la valeur du composant secondaire du numéro de version de l'objet <see cref="T:System.Version" /> actuel.</summary>
      <returns>Numéro de version secondaire.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Version.MinorRevision">
      <summary>Obtient les 16 bits de poids faible du numéro de révision.</summary>
      <returns>Entier signé 16 bits.</returns>
    </member>
    <member name="M:System.Version.op_Equality(System.Version,System.Version)">
      <summary>Détermine si deux objets <see cref="T:System.Version" /> spécifiés sont égaux.</summary>
      <returns>true si <paramref name="v1" /> est égal à <paramref name="v2" /> ; sinon, false.</returns>
      <param name="v1">Premier objet <see cref="T:System.Version" />. </param>
      <param name="v2">Second objet <see cref="T:System.Version" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_GreaterThan(System.Version,System.Version)">
      <summary>Détermine si le premier objet <see cref="T:System.Version" /> spécifié est supérieur au second objet <see cref="T:System.Version" /> spécifié.</summary>
      <returns>true si <paramref name="v1" /> est supérieur à <paramref name="v2" /> ; sinon, false.</returns>
      <param name="v1">Premier objet <see cref="T:System.Version" />. </param>
      <param name="v2">Second objet <see cref="T:System.Version" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
      <summary>Détermine si le premier objet <see cref="T:System.Version" /> spécifié est supérieur ou égal au second objet <see cref="T:System.Version" /> spécifié.</summary>
      <returns>true si <paramref name="v1" /> est supérieur ou égal à <paramref name="v2" /> ; sinon, false.</returns>
      <param name="v1">Premier objet <see cref="T:System.Version" />. </param>
      <param name="v2">Second objet <see cref="T:System.Version" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_Inequality(System.Version,System.Version)">
      <summary>Détermine si deux objets <see cref="T:System.Version" /> spécifiés ne sont pas identiques.</summary>
      <returns>true si <paramref name="v1" /> n'est pas égal à <paramref name="v2" /> ; sinon, false.</returns>
      <param name="v1">Premier objet <see cref="T:System.Version" />. </param>
      <param name="v2">Second objet <see cref="T:System.Version" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_LessThan(System.Version,System.Version)">
      <summary>Détermine si le premier objet <see cref="T:System.Version" /> spécifié est inférieur au second objet <see cref="T:System.Version" /> spécifié.</summary>
      <returns>true si <paramref name="v1" /> est inférieur à <paramref name="v2" /> ; sinon, false.</returns>
      <param name="v1">Premier objet <see cref="T:System.Version" />. </param>
      <param name="v2">Second objet <see cref="T:System.Version" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="v1" /> is null. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
      <summary>Détermine si le premier objet <see cref="T:System.Version" /> spécifié est inférieur ou égal au second objet <see cref="T:System.Version" />.</summary>
      <returns>true si <paramref name="v1" /> est inférieur ou égal à <paramref name="v2" /> ; sinon, false.</returns>
      <param name="v1">Premier objet <see cref="T:System.Version" />. </param>
      <param name="v2">Second objet <see cref="T:System.Version" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="v1" /> is null. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.Parse(System.String)">
      <summary>Convertit la représentation sous forme de chaîne d'un numéro de version en un objet <see cref="T:System.Version" /> équivalent.</summary>
      <returns>Objet équivalent au numéro de version spécifié dans le paramètre <paramref name="input" />.</returns>
      <param name="input">Chaîne contenant un numéro de version à convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="input" /> has fewer than two or more than four version components.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">At least one component in <paramref name="input" /> is less than zero.</exception>
      <exception cref="T:System.FormatException">At least one component in <paramref name="input" /> is not an integer.</exception>
      <exception cref="T:System.OverflowException">At least one component in <paramref name="input" /> represents a number that is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="P:System.Version.Revision">
      <summary>Obtient la valeur du composant révision du numéro de version de l'objet <see cref="T:System.Version" /> actuel.</summary>
      <returns>Numéro de révision, ou -1 si le numéro de révision n'est pas défini.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.System#IComparable#CompareTo(System.Object)">
      <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</summary>
      <returns>Entier signé indiquant l'ordre relatif de cette instance et <paramref name="value" />.Valeur de retour Signification Inférieure à zéro Cette instance précède <paramref name="value" /> dans l'ordre de tri.Zéro Cette instance se produit dans la même position dans l'ordre de tri que <paramref name="value" />.Supérieure à zéro Cette instance suit <paramref name="value" /> dans l'ordre de tri.ou <paramref name="value" /> a la valeur null. </returns>
      <param name="version">Objet à comparer à cette instance ou null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Version" /> object. </exception>
    </member>
    <member name="M:System.Version.ToString">
      <summary>Convertit la valeur de l'objet <see cref="T:System.Version" /> actuel en sa représentation <see cref="T:System.String" /> équivalente.</summary>
      <returns>Représentation <see cref="T:System.String" /> des valeurs des composants major, minor, build et revision de l'objet <see cref="T:System.Version" /> actuel, comme décrit dans le format suivant.Chaque composant est séparé par un point (« . »).Si un composant est entre crochets (« [ » et « ] »), cela signifie qu'il n'apparaîtra pas dans la valeur de retour s'il n'est pas défini :major.minor[.build[.revision]] Par exemple, si vous créez un objet <see cref="T:System.Version" /> à l'aide du constructeur Version(1,1), la chaîne retournée est « 1.1 ».Si vous créez un objet <see cref="T:System.Version" /> à l'aide du constructeur Version(1,3,4,2), la chaîne retournée est « 1.3.4.2 ».</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.ToString(System.Int32)">
      <summary>Convertit la valeur de l'objet <see cref="T:System.Version" /> actuel en sa représentation <see cref="T:System.String" /> équivalente.Un nombre spécifié indique le nombre de composants à retourner.</summary>
      <returns>Représentation <see cref="T:System.String" /> des valeurs des composants major, minor, build et revision de l'objet <see cref="T:System.Version" /> actuel, chacun étant séparé par un point (« . »).Le paramètre <paramref name="fieldCount" /> détermine le nombre de composants retournés.fieldCount Valeur de retour 0 Chaîne vide (""). 1 major 2 major.minor 3 major.minor.build 4 major.minor.build.revision Par exemple, si vous créez un objet <see cref="T:System.Version" /> à l'aide du constructeur Version(1,3,5), ToString(2) retourne « 1.3 » et ToString(4) lève une exception.</returns>
      <param name="fieldCount">Nombre de composants à retourner.<paramref name="fieldCount" /> est compris entre 0 et 4.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fieldCount" /> is less than 0, or more than 4.-or- <paramref name="fieldCount" /> is more than the number of components defined in the current <see cref="T:System.Version" /> object. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.TryParse(System.String,System.Version@)">
      <summary>Essaie de convertir la représentation sous forme de chaîne d'un numéro de version en un objet <see cref="T:System.Version" /> équivalent et retourne une valeur indiquant si la conversion a réussi.</summary>
      <returns>true si la conversion du paramètre <paramref name="input" /> a réussi ; sinon, false.</returns>
      <param name="input">Chaîne contenant un numéro de version à convertir.</param>
      <param name="result">Quand cette méthode est retournée, contient l'objet <see cref="T:System.Version" /> équivalent au numéro contenu dans <paramref name="input" />, si la conversion a réussi, ou un objet <see cref="T:System.Version" /> dont les versions principale et secondaire sont 0 si la conversion a échoué.Si <paramref name="input" /> est null ou <see cref="F:System.String.Empty" />, <paramref name="result" /> est null quand la méthode est retournée.</param>
    </member>
    <member name="T:System.Void">
      <summary>Spécifie un type de valeur de retour pour une méthode qui ne retourne pas de valeur.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.WeakReference">
      <summary>Représente une référence faible, qui référence un objet tout en autorisant toujours cet objet à être récupéré lors du garbage collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.WeakReference.#ctor(System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.WeakReference" />, référençant l'objet spécifié.</summary>
      <param name="target">Objet à suivre ou null. </param>
    </member>
    <member name="M:System.WeakReference.#ctor(System.Object,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.WeakReference" />, référençant l'objet spécifié et utilisant le suivi d'activation spécifié.</summary>
      <param name="target">Objet à suivre. </param>
      <param name="trackResurrection">Indique où le suivi de l'objet doit être arrêté.Si true, l'objet est suivi après finalisation ; si false, l'objet est suivi uniquement jusqu'à la finalisation.</param>
    </member>
    <member name="M:System.WeakReference.Finalize">
      <summary>Ignore la référence à la cible représentée par l'objet <see cref="T:System.WeakReference" /> actuel.</summary>
    </member>
    <member name="P:System.WeakReference.IsAlive">
      <summary>Obtient une indication permettant de savoir si l'objet référencé par l'objet <see cref="T:System.WeakReference" /> a été récupéré par le garbage collector.</summary>
      <returns>true si l'objet référencé par l'objet <see cref="T:System.WeakReference" /> actuel n'a pas été récupéré par le garbage collector et est toujours accessible ; sinon, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.WeakReference.Target">
      <summary>Obtient ou définit l'objet (la cible) référencé par l'objet <see cref="T:System.WeakReference" /> actuel.</summary>
      <returns>null si l'objet référencé par l'objet <see cref="T:System.WeakReference" /> actuel a été récupéré par le garbage collector ; sinon, une référence à l'objet référencé par l'objet <see cref="T:System.WeakReference" /> en cours.</returns>
      <exception cref="T:System.InvalidOperationException">La référence à l'objet cible n'est pas valide.Cette exception peut être levée en définissant cette propriété si la valeur est une référence null ou si l'objet a été finalisé pendant l'opération définie.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.WeakReference.TrackResurrection">
      <summary>Indique si un suivi est effectué pour l'objet référencé par l'objet <see cref="T:System.WeakReference" /> en cours après sa finalisation.</summary>
      <returns>true en cas de suivi de l'objet auquel l'objet <see cref="T:System.WeakReference" /> en cours fait référence après sa finalisation ou false s'il fait uniquement l'objet d'un suivi jusqu'à sa finalisation.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.WeakReference`1">
      <summary>Représente une référence faible typée, qui référence un objet tout en autorisant toujours cet objet à être récupéré par le garbage collection.</summary>
      <typeparam name="T">Type de l'objet référencé.</typeparam>
    </member>
    <member name="M:System.WeakReference`1.#ctor(`0)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.WeakReference`1" /> qui référence l'objet spécifié.</summary>
      <param name="target">Objet à référencer, ou null.</param>
    </member>
    <member name="M:System.WeakReference`1.#ctor(`0,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.WeakReference`1" /> qui référence l'objet spécifié et utilise le suivi de réactivation spécifié.</summary>
      <param name="target">Objet à référencer, ou null.</param>
      <param name="trackResurrection">true pour suivre l'objet après la finalisation ; false pour suivre l'objet uniquement jusqu'à la finalisation.</param>
    </member>
    <member name="M:System.WeakReference`1.Finalize">
      <summary>Ignore la référence à la cible représentée par l'objet <see cref="T:System.WeakReference`1" /> actif.</summary>
    </member>
    <member name="M:System.WeakReference`1.SetTarget(`0)">
      <summary>Définit l'objet cible qui est référencé par cet objet <see cref="T:System.WeakReference`1" />.</summary>
      <param name="target">Nouvel objet cible.</param>
    </member>
    <member name="M:System.WeakReference`1.TryGetTarget(`0@)">
      <summary>Tente de récupérer l'objet cible qui est référencé par l'objet <see cref="T:System.WeakReference`1" /> actif.</summary>
      <returns>true si la cible a été récupérée ; sinon, false.</returns>
      <param name="target">Lorsque cette méthode est retournée, contient l'objet cible, s'il est disponible.Ce paramètre est traité comme non initialisé.</param>
    </member>
    <member name="T:System.Collections.DictionaryEntry">
      <summary>Définit une paire clé/valeur du dictionnaire qui peut être définie ou récupérée.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.DictionaryEntry.#ctor(System.Object,System.Object)">
      <summary>Initialise une instance du type <see cref="T:System.Collections.DictionaryEntry" /> à l'aide de la clé et de la valeur spécifiées.</summary>
      <param name="key">Objet défini dans chaque paire clé/valeur. </param>
      <param name="value">Définition associée à <paramref name="key" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null et la version du .NET Framework est 1.0 ou 1.1. </exception>
    </member>
    <member name="P:System.Collections.DictionaryEntry.Key">
      <summary>Obtient ou définit la clé dans la paire clé/valeur.</summary>
      <returns>Clé dans la paire clé/valeur.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Collections.DictionaryEntry.Value">
      <summary>Obtient ou définit la valeur dans la paire clé/valeur.</summary>
      <returns>Valeur dans la paire clé/valeur.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Collections.ICollection">
      <summary>Définit la taille, les énumérateurs et les méthodes de synchronisation pour toutes les collections non génériques.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
      <summary>Copie les éléments de <see cref="T:System.Collections.ICollection" /> dans <see cref="T:System.Array" />, en commençant à un index particulier de <see cref="T:System.Array" />.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir d'<see cref="T:System.Collections.ICollection" />.<see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans <paramref name="array" /> à partir duquel la copie commence. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.ou Le nombre d'éléments dans le <see cref="T:System.Collections.ICollection" /> source est supérieur à la quantité d'espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.ouLe cast automatique du type du <see cref="T:System.Collections.ICollection" /> source en type du <paramref name="array" /> de destination est impossible.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.ICollection.Count">
      <summary>Obtient le nombre d'éléments contenus dans <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Nombre d'éléments contenus dans <see cref="T:System.Collections.ICollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.ICollection.IsSynchronized">
      <summary>Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe).</summary>
      <returns>true si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe) ; sinon false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.ICollection.SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IComparer">
      <summary>Expose une méthode qui compare deux objets.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IComparer.Compare(System.Object,System.Object)">
      <summary>Compare deux objets et retourne une valeur indiquant si le premier est inférieur, égal ou supérieur au second.</summary>
      <returns>Entier signé qui indique les valeurs relatives de <paramref name="x" /> et <paramref name="y" />, comme indiqué dans le tableau suivant.Valeur Signification Inférieur à zéro <paramref name="x" /> est inférieur à <paramref name="y" />. Zéro <paramref name="x" /> est égal à <paramref name="y" />. Supérieure à zéro <paramref name="x" /> est supérieur à <paramref name="y" />. </returns>
      <param name="x">Premier objet à comparer. </param>
      <param name="y">Second objet à comparer. </param>
      <exception cref="T:System.ArgumentException">Ni <paramref name="x" /> ni <paramref name="y" /> n'implémente l'interface <see cref="T:System.IComparable" />.ou <paramref name="x" /> et <paramref name="y" /> sont de types différents et aucun d'entre eux ne peut effectuer de comparaisons avec l'autre. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IDictionary">
      <summary>Représente une collection non générique de paires clé/valeur.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
      <summary>Ajoute un élément avec la clé et la valeur fournies à l'objet <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">
        <see cref="T:System.Object" /> à utiliser comme clé de l'élément à ajouter. </param>
      <param name="value">
        <see cref="T:System.Object" /> à utiliser comme valeur de l'élément à ajouter. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentException">Un élément avec la même clé existe déjà dans l'objet <see cref="T:System.Collections.IDictionary" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IDictionary" /> est en lecture seule.ou <see cref="T:System.Collections.IDictionary" /> est de taille fixe. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Clear">
      <summary>Supprime tous les éléments de l'objet <see cref="T:System.Collections.IDictionary" />.</summary>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.IDictionary" /> est en lecture seule. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Contains(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Collections.IDictionary" /> contient un élément avec la clé spécifiée.</summary>
      <returns>true si <see cref="T:System.Collections.IDictionary" /> contient un élément avec la clé ; sinon, false.</returns>
      <param name="key">Clé à rechercher dans l'objet <see cref="T:System.Collections.IDictionary" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.GetEnumerator">
      <summary>Retourne un objet <see cref="T:System.Collections.IDictionaryEnumerator" /> pour l'objet <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Objet <see cref="T:System.Collections.IDictionaryEnumerator" /> pour l'objet <see cref="T:System.Collections.IDictionary" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.IsFixedSize">
      <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Collections.IDictionary" /> est de taille fixe.</summary>
      <returns>true si l'objet <see cref="T:System.Collections.IDictionary" /> est de taille fixe ; sinon, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.IsReadOnly">
      <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Collections.IDictionary" /> est en lecture seule.</summary>
      <returns>true si l'objet <see cref="T:System.Collections.IDictionary" /> est en lecture seule ; sinon, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.Item(System.Object)">
      <summary>Obtient ou définit l'élément à l'aide de la clé spécifiée.</summary>
      <returns>Élément avec la clé spécifiée ou null si la clé n'existe pas.</returns>
      <param name="key">Clé de l'élément à obtenir ou définir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null. </exception>
      <exception cref="T:System.NotSupportedException">La propriété est définie et l'objet <see cref="T:System.Collections.IDictionary" /> est en lecture seule.ou La propriété est définie, <paramref name="key" /> n'existe pas dans la collection et <see cref="T:System.Collections.IDictionary" /> est de taille fixe. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.Keys">
      <summary>Obtient un objet <see cref="T:System.Collections.ICollection" /> contenant les clés de l'objet <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Objet <see cref="T:System.Collections.ICollection" /> contenant les clés de l'objet <see cref="T:System.Collections.IDictionary" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Remove(System.Object)">
      <summary>Supprime de l'objet <see cref="T:System.Collections.IDictionary" /> l'élément ayant la clé spécifiée.</summary>
      <param name="key">Clé de l'élément à supprimer. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null. </exception>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.IDictionary" /> est en lecture seule.ou <see cref="T:System.Collections.IDictionary" /> est de taille fixe. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.Values">
      <summary>Obtient un objet <see cref="T:System.Collections.ICollection" /> contenant les valeurs de l'objet <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Objet <see cref="T:System.Collections.ICollection" /> contenant les valeurs de l'objet <see cref="T:System.Collections.IDictionary" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IDictionaryEnumerator">
      <summary>Énumère les éléments d'un dictionnaire non générique.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionaryEnumerator.Entry">
      <summary>Obtient à la fois la clé et la valeur de l'entrée de dictionnaire en cours.</summary>
      <returns>
        <see cref="T:System.Collections.DictionaryEntry" /> contenant à la fois la clé et la valeur de l'entrée de dictionnaire en cours.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> est situé avant la première entrée ou après la dernière entrée du dictionnaire. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionaryEnumerator.Key">
      <summary>Obtient la clé de l'entrée de dictionnaire en cours.</summary>
      <returns>Clé de l'élément en cours de l'énumération.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> est situé avant la première entrée ou après la dernière entrée du dictionnaire. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionaryEnumerator.Value">
      <summary>Obtient la valeur de l'entrée de dictionnaire en cours.</summary>
      <returns>Valeur de l'élément en cours de l'énumération.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> est situé avant la première entrée ou après la dernière entrée du dictionnaire. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IEnumerable">
      <summary>Expose un énumérateur, qui prend en charge une itération simple sur une collection non générique.Pour parcourir le code source du .NET Framework correspondant à ce type, consultez la Source de référence.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IEnumerable.GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein d'une collection.</summary>
      <returns>Objet <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour effectuer des itérations au sein de la collection.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IEnumerator">
      <summary>Prend en charge une itération simple sur une collection non générique.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Collections.IEnumerator.Current">
      <summary>Obtient l'élément actuel dans la collection.</summary>
      <returns>Élément actuel dans la collection.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IEnumerator.MoveNext">
      <summary>Avance l'énumérateur à l'élément suivant de la collection.</summary>
      <returns>true si l'énumérateur a pu avancer jusqu'à l'élément suivant ; false si l'énumérateur a dépassé la fin de la collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IEnumerator.Reset">
      <summary>Rétablit l'énumérateur à sa position initiale, qui précède le premier élément de la collection.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IEqualityComparer">
      <summary>Définit les méthodes destinées à la prise en charge de la comparaison d'objets pour l'égalité.</summary>
    </member>
    <member name="M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)">
      <summary>Détermine si les objets spécifiés sont égaux.</summary>
      <returns>true si les objets spécifiés sont égaux ; sinon, false.</returns>
      <param name="x">Premier objet à comparer.</param>
      <param name="y">Second objet à comparer.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="x" /> et <paramref name="y" /> sont de types différents et aucun d'entre eux ne peut effectuer de comparaisons avec l'autre.</exception>
    </member>
    <member name="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)">
      <summary>Retourne un code de hachage pour l'objet spécifié.</summary>
      <returns>Code de hachage pour l'objet spécifié.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> pour lequel un code de hachage doit être retourné.</param>
      <exception cref="T:System.ArgumentNullException">Le type de <paramref name="obj" /> est un type référence et <paramref name="obj" /> est null.</exception>
    </member>
    <member name="T:System.Collections.IList">
      <summary>Représente une collection non générique d'objets accessibles séparément par index.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Add(System.Object)">
      <summary>Ajoute un élément à <see cref="T:System.Collections.IList" />.</summary>
      <returns>Position à laquelle le nouvel élément a été inséré, ou -1 pour indiquer que l'élément n'a pas été inséré dans la collection.</returns>
      <param name="value">Objet à ajouter à <see cref="T:System.Collections.IList" />. </param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> est en lecture seule.ou <see cref="T:System.Collections.IList" /> est de taille fixe. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Clear">
      <summary>Supprime tous les éléments du <see cref="T:System.Collections.IList" />.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> est en lecture seule. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Contains(System.Object)">
      <summary>Détermine si la <see cref="T:System.Collections.IList" /> contient une valeur spécifique.</summary>
      <returns>true si <see cref="T:System.Object" /> se trouve dans <see cref="T:System.Collections.IList" /> ; sinon, false.</returns>
      <param name="value">Objet à trouver dans <see cref="T:System.Collections.IList" />. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.IndexOf(System.Object)">
      <summary>Détermine l'index d'un élément spécifique de <see cref="T:System.Collections.IList" />.</summary>
      <returns>Index de <paramref name="value" /> s'il figure dans la liste ; sinon, -1.</returns>
      <param name="value">Objet à trouver dans <see cref="T:System.Collections.IList" />. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Insert(System.Int32,System.Object)">
      <summary>Insère un élément dans la <see cref="T:System.Collections.IList" /> au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro auquel <paramref name="value" /> doit être inséré. </param>
      <param name="value">Objet à insérer dans <see cref="T:System.Collections.IList" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> n'est pas un index valide dans <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> est en lecture seule.ou <see cref="T:System.Collections.IList" /> est de taille fixe. </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="value" /> est une référence null dans <see cref="T:System.Collections.IList" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IList.IsFixedSize">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Collections.IList" /> est de taille fixe.</summary>
      <returns>true si <see cref="T:System.Collections.IList" /> est de taille fixe ; sinon, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IList.IsReadOnly">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Collections.IList" /> est en lecture seule.</summary>
      <returns>true si <see cref="T:System.Collections.IList" /> est en lecture seule ; sinon, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IList.Item(System.Int32)">
      <summary>Obtient ou définit l'élément situé à l'index spécifié.</summary>
      <returns>Élément situé à l'index spécifié.</returns>
      <param name="index">Index de base zéro de l'élément à obtenir ou définir. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> n'est pas un index valide dans <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">La propriété est définie et <see cref="T:System.Collections.IList" /> est en lecture seule. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Remove(System.Object)">
      <summary>Supprime la première occurrence d'un objet spécifique de <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Objet à supprimer de <see cref="T:System.Collections.IList" />. </param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> est en lecture seule.ou <see cref="T:System.Collections.IList" /> est de taille fixe. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.RemoveAt(System.Int32)">
      <summary>Supprime l'élément <see cref="T:System.Collections.IList" /> au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro de l'élément à supprimer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> n'est pas un index valide dans <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> est en lecture seule.ou <see cref="T:System.Collections.IList" /> est de taille fixe. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IStructuralComparable">
      <summary>Prend en charge la comparaison structurelle des objets collection.</summary>
    </member>
    <member name="M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Détermine si l'objet collection actuel précède, se situe à la même position que, ou suit un autre objet dans l'ordre de tri.</summary>
      <returns>Entier qui indique la relation de l'objet collection actuel par rapport au paramètre <paramref name="other" />, comme indiqué dans le tableau suivant.Valeur de retourDescription -1L'instance actuelle précède <paramref name="other" />.0L'instance actuelle et <paramref name="other" /> sont égaux.1L'instance actuelle suit <paramref name="other" />.</returns>
      <param name="other">Objet à comparer avec l'instance actuelle.</param>
      <param name="comparer">Objet qui compare des membres de l'objet de collection actuel avec les membres correspondants de <paramref name="other" />.</param>
      <exception cref="T:System.ArgumentException">Cette instance et <paramref name="other" /> ne sont pas du même type.</exception>
    </member>
    <member name="T:System.Collections.IStructuralEquatable">
      <summary>Définit les méthodes destinées à la prise en charge de la comparaison d'objets pour l'égalité structurelle. </summary>
    </member>
    <member name="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Détermine si un objet est structurellement identique à l'instance actuelle.</summary>
      <returns>true si les deux objets sont égaux ; sinon false.</returns>
      <param name="other">Objet à comparer avec l'instance actuelle.</param>
      <param name="comparer">Un objet qui détermine si l'instance actuelle et <paramref name="other" /> sont égaux. </param>
    </member>
    <member name="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Retourne un code de hachage pour l'instance actuelle.</summary>
      <returns>Code de hachage de l'instance actuelle.</returns>
      <param name="comparer">Objet qui calcule le code de hachage de l'objet actif.</param>
    </member>
    <member name="T:System.Collections.Generic.ICollection`1">
      <summary>Définit des méthodes pour manipuler des collections génériques.</summary>
      <typeparam name="T">Type des éléments de la collection.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Add(`0)">
      <summary>Ajoute un élément à <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">Objet à ajouter à <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule.</exception>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Clear">
      <summary>Supprime tous les éléments du <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule. </exception>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Contains(`0)">
      <summary>Détermine si <see cref="T:System.Collections.Generic.ICollection`1" /> contient une valeur spécifique.</summary>
      <returns>true si <paramref name="item" /> existe dans <see cref="T:System.Collections.Generic.ICollection`1" /> ; sinon, false.</returns>
      <param name="item">Objet à trouver dans <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copie les éléments de <see cref="T:System.Collections.Generic.ICollection`1" /> dans <see cref="T:System.Array" />, en commençant à un index particulier de <see cref="T:System.Array" />.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir d'<see cref="T:System.Collections.Generic.ICollection`1" />.<see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="arrayIndex">Index de base zéro dans <paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> est inférieur à 0.</exception>
      <exception cref="T:System.ArgumentException">Le nombre d'éléments dans le <see cref="T:System.Collections.Generic.ICollection`1" /> source est supérieur à la quantité d'espace disponible entre <paramref name="arrayIndex" /> et la fin du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.Collections.Generic.ICollection`1.Count">
      <summary>Obtient le nombre d'éléments contenus dans le <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>Nombre d'éléments contenus dans <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.ICollection`1.IsReadOnly">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule.</summary>
      <returns>true si <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule ; sinon, false.</returns>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Remove(`0)">
      <summary>Supprime la première occurrence d'un objet spécifique de <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>true si <paramref name="item" /> a été correctement supprimé de <see cref="T:System.Collections.Generic.ICollection`1" /> ; sinon false.Cette méthode retourne également false si <paramref name="item" /> est introuvable dans le <see cref="T:System.Collections.Generic.ICollection`1" /> d'origine.</returns>
      <param name="item">Objet à supprimer de <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule.</exception>
    </member>
    <member name="T:System.Collections.Generic.IComparer`1">
      <summary>Définit une méthode implémentée par un type pour comparer deux objets.</summary>
      <typeparam name="T">Type des objets à comparer.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)">
      <summary>Compare deux objets et retourne une valeur indiquant si le premier est inférieur, égal ou supérieur au second.</summary>
      <returns>Entier signé qui indique les valeurs relatives de <paramref name="x" /> et <paramref name="y" />, comme indiqué dans le tableau suivant.Valeur Signification Inférieur à zéro<paramref name="x" /> est inférieur à <paramref name="y" />.Zéro<paramref name="x" /> est égal à <paramref name="y" />.Supérieure à zéro<paramref name="x" /> est supérieur à <paramref name="y" />.</returns>
      <param name="x">Premier objet à comparer.</param>
      <param name="y">Second objet à comparer.</param>
    </member>
    <member name="T:System.Collections.Generic.IDictionary`2">
      <summary>Représente une collection générique de paires clé/valeur.</summary>
      <typeparam name="TKey">Type des clés du dictionnaire.</typeparam>
      <typeparam name="TValue">Type des valeurs du dictionnaire.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
      <summary>Ajoute un élément avec la clé et la valeur fournies à <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key">Objet à utiliser comme clé de l'élément à ajouter.</param>
      <param name="value">Objet à utiliser comme valeur de l'élément à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Un élément possédant la même clé existe déjà dans <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> est en lecture seule.</exception>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
      <summary>Détermine si <see cref="T:System.Collections.Generic.IDictionary`2" /> contient un élément avec la clé spécifiée.</summary>
      <returns>true si <see cref="T:System.Collections.Generic.IDictionary`2" /> contient un élément avec la clé ; sinon, false.</returns>
      <param name="key">Clé à rechercher dans <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Collections.Generic.IDictionary`2.Item(`0)">
      <summary>Obtient ou définit l'élément à l'aide de la clé spécifiée.</summary>
      <returns>Élément correspondant à la clé spécifiée.</returns>
      <param name="key">Clé de l'élément à obtenir ou définir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">La propriété est récupérée et <paramref name="key" /> est introuvable.</exception>
      <exception cref="T:System.NotSupportedException">La propriété est définie et <see cref="T:System.Collections.Generic.IDictionary`2" /> est en lecture seule.</exception>
    </member>
    <member name="P:System.Collections.Generic.IDictionary`2.Keys">
      <summary>Obtient un <see cref="T:System.Collections.Generic.ICollection`1" /> contenant les clés de <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.ICollection`1" /> contenant les clés de l'objet qui implémente <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
      <summary>Supprime de <see cref="T:System.Collections.Generic.IDictionary`2" /> l'élément ayant la clé spécifiée.</summary>
      <returns>true si la suppression de l'élément réussit ; sinon, false.Cette méthode retourne également false si <paramref name="key" /> est introuvable dans le <see cref="T:System.Collections.Generic.IDictionary`2" /> d'origine.</returns>
      <param name="key">Clé de l'élément à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> est en lecture seule.</exception>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
      <summary>Obtient la valeur associée à la clé spécifiée.</summary>
      <returns>true si l'objet qui implémente <see cref="T:System.Collections.Generic.IDictionary`2" /> contient un élément correspondant à la clé spécifiée ; sinon, false.</returns>
      <param name="key">Clé dont la valeur doit être obtenue.</param>
      <param name="value">Lorsque cette méthode est retournée, la valeur associée à la clé spécifiée, si la clé est trouvée ; sinon, la valeur par défaut pour le type du paramètre <paramref name="value" />.Ce paramètre est passé sans être initialisé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Collections.Generic.IDictionary`2.Values">
      <summary>Obtient <see cref="T:System.Collections.Generic.ICollection`1" /> contenant les valeurs de <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.ICollection`1" /> contenant les valeurs de l'objet qui implémente <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.IEnumerable`1">
      <summary>Expose l'énumérateur, qui prend en charge une itération simple sur une collection d'un type spécifié.Pour parcourir le code source de .NET Framework pour ce type, consultez la Source de référence.</summary>
      <typeparam name="T">Type des objets à énumérer.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de la collection.</summary>
      <returns>Énumérateur permettant d'effectuer une itération au sein de la collection.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Collections.Generic.IEnumerator`1">
      <summary>Prend en charge une itération simple sur une collection générique.</summary>
      <typeparam name="T">Type des objets à énumérer.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Collections.Generic.IEnumerator`1.Current">
      <summary>Obtient l'élément de la collection situé à la position actuelle de l'énumérateur.</summary>
      <returns>Élément dans la collection à la position actuelle de l'énumérateur.</returns>
    </member>
    <member name="T:System.Collections.Generic.IEqualityComparer`1">
      <summary>Définit les méthodes destinées à la prise en charge de la comparaison d'objets pour l'égalité.</summary>
      <typeparam name="T">Type des objets à comparer.Ce paramètre de type est contravariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type moins dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)">
      <summary>Détermine si les objets spécifiés sont égaux.</summary>
      <returns>true si les objets spécifiés sont égaux ; sinon, false.</returns>
      <param name="x">Premier objet de type <paramref name="T" /> à comparer.</param>
      <param name="y">Deuxième objet de type <paramref name="T" /> à comparer.</param>
    </member>
    <member name="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)">
      <summary>Retourne un code de hachage pour l'objet spécifié.</summary>
      <returns>Code de hachage pour l'objet spécifié.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> pour lequel un code de hachage doit être retourné.</param>
      <exception cref="T:System.ArgumentNullException">Le type de <paramref name="obj" /> est un type référence et <paramref name="obj" /> est null.</exception>
    </member>
    <member name="T:System.Collections.Generic.IList`1">
      <summary>Représente une collection d'objets accessibles séparément par index.</summary>
      <typeparam name="T">Type d'éléments de la liste.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IList`1.IndexOf(`0)">
      <summary>Détermine l'index d'un élément spécifique de <see cref="T:System.Collections.Generic.IList`1" />.</summary>
      <returns>Index de <paramref name="item" /> s'il figure dans la liste ; sinon, -1.</returns>
      <param name="item">Objet à trouver dans <see cref="T:System.Collections.Generic.IList`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
      <summary>Insère un élément dans <see cref="T:System.Collections.Generic.IList`1" /> à l'index spécifié.</summary>
      <param name="index">Index de base zéro auquel <paramref name="item" /> doit être inséré.</param>
      <param name="item">Objet à insérer dans <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> n'est pas un index valide dans <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IList`1" /> est en lecture seule.</exception>
    </member>
    <member name="P:System.Collections.Generic.IList`1.Item(System.Int32)">
      <summary>Obtient ou définit l'élément situé à l'index spécifié.</summary>
      <returns>Élément situé à l'index spécifié.</returns>
      <param name="index">Index de base zéro de l'élément à obtenir ou définir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> n'est pas un index valide dans <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">La propriété est définie et <see cref="T:System.Collections.Generic.IList`1" /> est en lecture seule.</exception>
    </member>
    <member name="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
      <summary>Supprime l'élément <see cref="T:System.Collections.Generic.IList`1" /> au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro de l'élément à supprimer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> n'est pas un index valide dans <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IList`1" /> est en lecture seule.</exception>
    </member>
    <member name="T:System.Collections.Generic.IReadOnlyCollection`1">
      <summary>Représente une collection d'éléments fortement typée et en lecture seule.</summary>
      <typeparam name="T">Type des éléments.Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyCollection`1.Count">
      <summary>Obtient le nombre d'éléments de la collection.</summary>
      <returns>Nombre d'éléments de la collection. </returns>
    </member>
    <member name="T:System.Collections.Generic.IReadOnlyDictionary`2">
      <summary>Représente une collection générique en lecture seule de paires clé/valeur.</summary>
      <typeparam name="TKey">Type de clés dans le dictionnaire en lecture seule. </typeparam>
      <typeparam name="TValue">Type des valeurs dans le dictionnaire en lecture seule. </typeparam>
    </member>
    <member name="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
      <summary>Détermine si le dictionnaire en lecture seule contient un élément avec la clé spécifiée.</summary>
      <returns>true si le dictionnaire en lecture seule contient un élément qui possède la clé spécifiée ; sinon, false.</returns>
      <param name="key">Clé à rechercher.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
      <summary>Obtient l'élément avec la clé spécifiée dans le dictionnaire en lecture seule.</summary>
      <returns>Élément avec la clé spécifiée dans le dictionnaire en lecture seule.</returns>
      <param name="key">Clé à rechercher.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">La propriété est récupérée et <paramref name="key" /> est introuvable. </exception>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys">
      <summary>Obtient une collection énumérable qui contient les clés dans dictionnaire en lecture seule. </summary>
      <returns>Collection énumérable qui contient les clés dans dictionnaire en lecture seule.</returns>
    </member>
    <member name="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
      <summary>Obtient la valeur associée à la clé spécifiée.</summary>
      <returns>true si l'objet qui implémente l'interface <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> contient un élément comportant la clé spécifiée ; sinon, false.</returns>
      <param name="key">Clé à rechercher.</param>
      <param name="value">Lorsque cette méthode est retournée, la valeur associée à la clé spécifiée, si la clé est trouvée ; sinon, la valeur par défaut pour le type du paramètre <paramref name="value" />.Ce paramètre est passé sans être initialisé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyDictionary`2.Values">
      <summary>Obtient une collection énumérable qui contient les valeurs dans dictionnaire en lecture seule.</summary>
      <returns>Collection énumérable qui contient les valeurs dans dictionnaire en lecture seule.</returns>
    </member>
    <member name="T:System.Collections.Generic.IReadOnlyList`1">
      <summary>Représente une collection en lecture seule d'éléments accessibles par index. </summary>
      <typeparam name="T">Type d'éléments contenus dans la liste en lecture seule. Ce paramètre de type est covariant. Autrement dit, vous pouvez utiliser le type que vous avez spécifié ou tout type plus dérivé. Pour plus d'informations sur la covariance et la contravariance, consultez Covariance et contravariance dans les génériques.</typeparam>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)">
      <summary>Obtient l'élément à l'index spécifié dans la liste en lecture seule.</summary>
      <returns>Élément à l'index spécifié dans la liste en lecture seule.</returns>
      <param name="index">Index de base zéro de l'élément à obtenir. </param>
    </member>
    <member name="T:System.Collections.Generic.ISet`1">
      <summary>Fournit l'interface de base pour l'abstraction des ensembles.</summary>
      <typeparam name="T">Type des éléments de l'ensemble.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.Add(`0)">
      <summary>Ajoute un élément à l'ensemble actuel et retourne une valeur qui indique si l'ajout a réussi. </summary>
      <returns>true si l'élément est ajouté à l'ensemble ; false si l'élément figure déjà dans l'ensemble.</returns>
      <param name="item">Élément à ajouter à l'ensemble.</param>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Supprime de l'ensemble actuel tous les éléments de la collection spécifiée.</summary>
      <param name="other">Collection d'éléments à supprimer de l'ensemble.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifie l'ensemble actuel pour qu'il contienne uniquement les éléments qui figurent également dans une collection spécifiée.</summary>
      <param name="other">Collection à comparer à l'ensemble actuel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Détermine si l'ensemble actuel est un sous-ensemble (strict) approprié d'une collection spécifiée.</summary>
      <returns>true si l'ensemble actuel est un sous-ensemble correct de <paramref name="other" /> ; sinon, false.</returns>
      <param name="other">Collection à comparer à l'ensemble actuel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Détermine si l'ensemble actuel est un sur-ensemble de propriété (strict) approprié d'une collection spécifiée.</summary>
      <returns>true si l'ensemble actuel est un super-ensemble correct de <paramref name="other" /> ; sinon, false.</returns>
      <param name="other">Collection à comparer à l'ensemble actuel. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Détermine si un ensemble est un sous-ensemble d'une collection spécifiée.</summary>
      <returns>true si l'ensemble actuel est un sous-ensemble de <paramref name="other" /> ; sinon, false.</returns>
      <param name="other">Collection à comparer à l'ensemble actuel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Détermine si l'ensemble actuel est un super-ensemble d'une collection spécifiée.</summary>
      <returns>true si l'ensemble actuel est un super-ensemble de <paramref name="other" /> ; sinon, false.</returns>
      <param name="other">Collection à comparer à l'ensemble actuel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
      <summary>Détermine si l'ensemble actuel recoupe la collection spécifiée.</summary>
      <returns>true si l'ensemble actuel et <paramref name="other" /> partagent au moins un élément commun ; sinon, false.</returns>
      <param name="other">Collection à comparer à l'ensemble actuel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
      <summary>Détermine si l'ensemble actuel et la collection spécifiée contiennent les mêmes éléments.</summary>
      <returns>true si l'ensemble actuel est égal à <paramref name="other" /> ; sinon, false.</returns>
      <param name="other">Collection à comparer à l'ensemble actuel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifie l'ensemble actuel afin qu'il contienne uniquement les éléments présents dans l'ensemble actuel ou dans la collection spécifiée, mais pas dans les deux à la fois. </summary>
      <param name="other">Collection à comparer à l'ensemble actuel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifie l'ensemble actuel pour qu'il contienne tous les éléments présents dans l'ensemble actuel, dans la collection spécifiée ou dans les deux.</summary>
      <param name="other">Collection à comparer à l'ensemble actuel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Collections.Generic.KeyNotFoundException">
      <summary>Exception levée si la clé spécifiée pour accéder à un élément dans une collection ne correspond à aucune clé de la collection.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.KeyNotFoundException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.KeyNotFoundException" /> à l'aide des valeurs par défaut des propriétés.</summary>
    </member>
    <member name="M:System.Collections.Generic.KeyNotFoundException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.KeyNotFoundException" /> avec le message d'erreur spécifié.</summary>
      <param name="message">Message décrivant l'erreur.</param>
    </member>
    <member name="M:System.Collections.Generic.KeyNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.KeyNotFoundException" /> avec le message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception.</param>
      <param name="innerException">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Collections.Generic.KeyValuePair`2">
      <summary>Définit une paire clé/valeur qui peut être définie ou récupérée.</summary>
      <typeparam name="TKey">Type de la clé.</typeparam>
      <typeparam name="TValue">Type de la valeur.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Collections.Generic.KeyValuePair`2" /> avec la valeur et la clé spécifiées.</summary>
      <param name="key">Objet défini dans chaque paire clé/valeur.</param>
      <param name="value">Définition associée à <paramref name="key" />.</param>
    </member>
    <member name="P:System.Collections.Generic.KeyValuePair`2.Key">
      <summary>Obtient la clé de la paire clé/valeur.</summary>
      <returns>
        <paramref name="TKey" /> qui est la clé de <see cref="T:System.Collections.Generic.KeyValuePair`2" />. </returns>
    </member>
    <member name="M:System.Collections.Generic.KeyValuePair`2.ToString">
      <summary>Retourne une représentation sous forme de chaîne du <see cref="T:System.Collections.Generic.KeyValuePair`2" />, à l'aide des représentations sous forme de chaîne de la clé et de la valeur.</summary>
      <returns>Représentation sous forme de chaîne de <see cref="T:System.Collections.Generic.KeyValuePair`2" /> qui inclut les représentations sous forme de chaîne de la clé et de la valeur.</returns>
    </member>
    <member name="P:System.Collections.Generic.KeyValuePair`2.Value">
      <summary>Obtient la valeur de la paire clé/valeur.</summary>
      <returns>
        <paramref name="TValue" /> qui est la valeur de <see cref="T:System.Collections.Generic.KeyValuePair`2" />. </returns>
    </member>
    <member name="T:System.Collections.ObjectModel.Collection`1">
      <summary>Fournit la classe de base pour une collection générique.</summary>
      <typeparam name="T">Type d'éléments de la collection.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.ObjectModel.Collection`1" /> qui est vide.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.ObjectModel.Collection`1" /> en tant que wrapper de la liste spécifiée.</summary>
      <param name="list">Liste incluse dans un wrapper par la nouvelle collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
      <summary>Ajoute un objet à la fin de <see cref="T:System.Collections.ObjectModel.Collection`1" />. </summary>
      <param name="item">Objet à ajouter à la fin de <see cref="T:System.Collections.ObjectModel.Collection`1" />.La valeur peut être null pour les types référence.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Clear">
      <summary>Supprime tous les éléments de <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.ClearItems">
      <summary>Supprime tous les éléments de <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
      <summary>Détermine si un élément est dans <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>true si <paramref name="item" /> existe dans <see cref="T:System.Collections.ObjectModel.Collection`1" /> ; sinon, false.</returns>
      <param name="item">Objet à trouver dans <see cref="T:System.Collections.ObjectModel.Collection`1" />.La valeur peut être null pour les types référence.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
      <summary>Copie l'ensemble du <see cref="T:System.Collections.ObjectModel.Collection`1" /> vers un <see cref="T:System.Array" /> unidimensionnel compatible, en commençant à l'index spécifié du tableau cible.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.ObjectModel.Collection`1" />.<see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans <paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">Le nombre d'éléments dans le <see cref="T:System.Collections.ObjectModel.Collection`1" /> source est supérieur à la quantité d'espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.Count">
      <summary>Obtient le nombre d'éléments réellement contenus dans <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>Nombre d'éléments réellement contenus dans <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> pour <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
      <summary>Recherche l'objet spécifié et retourne l'index de base zéro de la première occurrence dans l'ensemble du <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>Index de base zéro de la première occurrence de <paramref name="item" /> dans l'ensemble du <see cref="T:System.Collections.ObjectModel.Collection`1" />, s'il existe ; sinon, -1.</returns>
      <param name="item">Objet à trouver dans <see cref="T:System.Collections.Generic.List`1" />.La valeur peut être null pour les types référence.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
      <summary>Insère un élément dans <see cref="T:System.Collections.ObjectModel.Collection`1" /> à l'index spécifié.</summary>
      <param name="index">Index de base zéro auquel <paramref name="item" /> doit être inséré.</param>
      <param name="item">Objet à insérer.La valeur peut être null pour les types référence.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.ou<paramref name="index" /> est supérieur à <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
      <summary>Insère un élément dans <see cref="T:System.Collections.ObjectModel.Collection`1" /> à l'index spécifié.</summary>
      <param name="index">Index de base zéro auquel <paramref name="item" /> doit être inséré.</param>
      <param name="item">Objet à insérer.La valeur peut être null pour les types référence.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.ou<paramref name="index" /> est supérieur à <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
      <summary>Obtient ou définit l'élément situé à l'index spécifié.</summary>
      <returns>Élément situé à l'index spécifié.</returns>
      <param name="index">Index de base zéro de l'élément à obtenir ou définir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.ou<paramref name="index" /> est supérieur ou égal à <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />. </exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.Items">
      <summary>Obtient un wrapper <see cref="T:System.Collections.Generic.IList`1" /> autour de <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>Wrapper <see cref="T:System.Collections.Generic.IList`1" /> autour de <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
      <summary>Supprime la première occurrence d'un objet spécifique de <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>true si la suppression de <paramref name="item" /> est réussie ; sinon, false.  Cette méthode retourne également false si <paramref name="item" /> est introuvable dans le <see cref="T:System.Collections.ObjectModel.Collection`1" /> d'origine.</returns>
      <param name="item">Objet à supprimer de <see cref="T:System.Collections.ObjectModel.Collection`1" />.La valeur peut être null pour les types référence.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
      <summary>Supprime l'élément au niveau de l'index spécifié de <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <param name="index">Index de base zéro de l'élément à supprimer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.ou<paramref name="index" /> est supérieur ou égal à <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
      <summary>Supprime l'élément au niveau de l'index spécifié de <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <param name="index">Index de base zéro de l'élément à supprimer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.ou<paramref name="index" /> est supérieur ou égal à <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
      <summary>Remplace l'élément au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro de l'élément à remplacer.</param>
      <param name="item">Nouvelle valeur de l'élément à l'index spécifié.La valeur peut être null pour les types référence.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.ou<paramref name="index" /> est supérieur à <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule.</summary>
      <returns>true si <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule ; sinon, false.  Dans l'implémentation par défaut de <see cref="T:System.Collections.ObjectModel.Collection`1" />, cette propriété retourne toujours false.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copie les éléments de <see cref="T:System.Collections.ICollection" /> dans <see cref="T:System.Array" />, en commençant à un index particulier de <see cref="T:System.Array" />.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir d'<see cref="T:System.Collections.ICollection" />.<see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans <paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.ou<paramref name="array" /> n'a pas d'indexation de base zéro.ouLe nombre d'éléments dans le <see cref="T:System.Collections.ICollection" /> source est supérieur à la quantité d'espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.ouLe cast automatique du type du <see cref="T:System.Collections.ICollection" /> source en type du <paramref name="array" /> de destination est impossible.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe).</summary>
      <returns>true si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe) ; sinon false.  Dans l'implémentation par défaut de <see cref="T:System.Collections.ObjectModel.Collection`1" />, cette propriété retourne toujours false.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.  Dans l'implémentation par défaut de <see cref="T:System.Collections.ObjectModel.Collection`1" />, cette propriété retourne toujours l'instance actuelle.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein d'une collection.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer la collection.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)">
      <summary>Ajoute un élément à <see cref="T:System.Collections.IList" />.</summary>
      <returns>Position à laquelle le nouvel élément est inséré.</returns>
      <param name="value">
        <see cref="T:System.Object" /> à ajouter à <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> a un type qui ne peut pas être assigné à <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Détermine si la <see cref="T:System.Collections.IList" /> contient une valeur spécifique.</summary>
      <returns>true si <see cref="T:System.Object" /> se trouve dans <see cref="T:System.Collections.IList" /> ; sinon, false.</returns>
      <param name="value">
        <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> a un type qui ne peut pas être assigné à <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Détermine l'index d'un élément spécifique de <see cref="T:System.Collections.IList" />.</summary>
      <returns>Index de <paramref name="value" /> s'il figure dans la liste ; sinon, -1.</returns>
      <param name="value">
        <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> a un type qui ne peut pas être assigné à <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Insère un élément dans <see cref="T:System.Collections.IList" /> à l'index spécifié.</summary>
      <param name="index">Index de base zéro auquel <paramref name="value" /> doit être inséré.</param>
      <param name="value">
        <see cref="T:System.Object" /> à insérer dans <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> n'est pas un index valide dans <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> a un type qui ne peut pas être assigné à <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Collections.IList" /> est de taille fixe.</summary>
      <returns>true si <see cref="T:System.Collections.IList" /> est de taille fixe ; sinon, false.  Dans l'implémentation par défaut de <see cref="T:System.Collections.ObjectModel.Collection`1" />, cette propriété retourne toujours false.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Collections.IList" /> est en lecture seule.</summary>
      <returns>true si <see cref="T:System.Collections.IList" /> est en lecture seule ; sinon, false.  Dans l'implémentation par défaut de <see cref="T:System.Collections.ObjectModel.Collection`1" />, cette propriété retourne toujours false.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Obtient ou définit l'élément situé à l'index spécifié.</summary>
      <returns>Élément situé à l'index spécifié.</returns>
      <param name="index">Index de base zéro de l'élément à obtenir ou définir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> n'est pas un index valide dans <see cref="T:System.Collections.IList" />.</exception>
      <exception cref="T:System.ArgumentException">La propriété est définie et <paramref name="value" /> a un type qui ne peut pas être assigné à <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Supprime la première occurrence d'un objet spécifique de <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à supprimer de <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> a un type qui ne peut pas être assigné à <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
      <summary>Fournit la classe de base pour une collection en lecture seule générique.</summary>
      <typeparam name="T">Type des éléments de la collection.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> qui est un wrapper en lecture seule autour de la liste spécifiée.</summary>
      <param name="list">Liste à inclure dans un wrapper.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> is null.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)">
      <summary>Détermine si un élément est dans <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</summary>
      <returns>true si <paramref name="value" /> existe dans <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> ; sinon, false.</returns>
      <param name="value">Objet à trouver dans <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.La valeur peut être null pour les types référence.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copie l'ensemble de l'objet <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> vers un objet <see cref="T:System.Array" /> unidimensionnel compatible, en commençant à l'index spécifié du tableau cible.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.<see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count">
      <summary>Obtient le nombre d'éléments contenus dans l'instance <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</summary>
      <returns>Nombre d'éléments contenus dans l'instance <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> pour <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)">
      <summary>Recherche l'objet spécifié et retourne l'index de base zéro de la première occurrence dans l'ensemble du <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</summary>
      <returns>Index de base zéro de la première occurrence de <paramref name="item" /> dans l'ensemble du <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, s'il existe ; sinon, -1.</returns>
      <param name="value">Objet à trouver dans <see cref="T:System.Collections.Generic.List`1" />.La valeur peut être null pour les types référence.</param>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
      <summary>Obtient l'élément au niveau de l'index spécifié.</summary>
      <returns>Élément à l'index spécifié.</returns>
      <param name="index">Index de base zéro de l'élément à obtenir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count" />. </exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items">
      <summary>Retourne le <see cref="T:System.Collections.Generic.IList`1" /> que <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> inclut dans un wrapper.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IList`1" /> que <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> inclut dans un wrapper.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Ajoute un élément à <see cref="T:System.Collections.Generic.ICollection`1" />.Cette implémentation lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Objet à ajouter à <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Supprime tous les éléments de <see cref="T:System.Collections.Generic.ICollection`1" />.Cette implémentation lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule.</summary>
      <returns>true si <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule ; sinon, false.Dans l'implémentation par défaut de <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, cette propriété retourne toujours true.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Supprime la première occurrence d'un objet spécifique de <see cref="T:System.Collections.Generic.ICollection`1" />.Cette implémentation lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <returns>true si <paramref name="value" /> a été correctement supprimé de <see cref="T:System.Collections.Generic.ICollection`1" /> ; sinon false.</returns>
      <param name="value">Objet à supprimer de <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>Insère un élément dans la <see cref="T:System.Collections.Generic.IList`1" /> au niveau de l'index spécifié.Cette implémentation lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Index de base zéro auquel <paramref name="value" /> doit être inséré.</param>
      <param name="value">Objet à insérer dans <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>Obtient l'élément au niveau de l'index spécifié.<see cref="T:System.NotSupportedException" /> se produit si vous essayez de définir l'élément à l'index spécifié.</summary>
      <returns>Élément à l'index spécifié.</returns>
      <param name="index">Index de base zéro de l'élément à obtenir.</param>
      <exception cref="T:System.NotSupportedException">Always thrown if the property is set.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>Supprime l'élément <see cref="T:System.Collections.Generic.IList`1" /> au niveau de l'index spécifié.Cette implémentation lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Index de base zéro de l'élément à supprimer.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copie les éléments de <see cref="T:System.Collections.ICollection" /> dans <see cref="T:System.Array" />, à partir d'un index particulier de <see cref="T:System.Array" />.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.ICollection" />.<see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-<paramref name="array" /> does not have zero-based indexing.-or-The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.-or-The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe).</summary>
      <returns>true si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe) ; sinon false.Dans l'implémentation par défaut de <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, cette propriété retourne toujours false.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.Dans l'implémentation par défaut de <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, cette propriété retourne toujours l'instance actuelle.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein d'une collection.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer la collection.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>Ajoute un élément à <see cref="T:System.Collections.IList" />.Cette implémentation lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Position à laquelle le nouvel élément est inséré.</returns>
      <param name="value">
        <see cref="T:System.Object" /> à ajouter dans <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear">
      <summary>Supprime tous les éléments de <see cref="T:System.Collections.IList" />.Cette implémentation lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Détermine si <see cref="T:System.Collections.IList" /> contient une valeur spécifique.</summary>
      <returns>true si <see cref="T:System.Object" /> se trouve dans <see cref="T:System.Collections.IList" /> ; sinon, false.</returns>
      <param name="value">
        <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not of the type specified for the generic type parameter <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Détermine l'index d'un élément spécifique de <see cref="T:System.Collections.IList" />.</summary>
      <returns>Index de <paramref name="value" /> s'il figure dans la liste ; sinon, -1.</returns>
      <param name="value">
        <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not of the type specified for the generic type parameter <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Insère un élément dans la <see cref="T:System.Collections.IList" /> au niveau de l'index spécifié.Cette implémentation lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Index de base zéro auquel <paramref name="value" /> doit être inséré.</param>
      <param name="value">
        <see cref="T:System.Object" /> à insérer dans <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Collections.IList" /> est de taille fixe.</summary>
      <returns>true si <see cref="T:System.Collections.IList" /> est de taille fixe ; sinon, false.Dans l'implémentation par défaut de <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, cette propriété retourne toujours true.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Collections.IList" /> est en lecture seule.</summary>
      <returns>true si <see cref="T:System.Collections.IList" /> est en lecture seule ; sinon, false.Dans l'implémentation par défaut de <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, cette propriété retourne toujours true.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Obtient l'élément au niveau de l'index spécifié.<see cref="T:System.NotSupportedException" /> se produit si vous essayez de définir l'élément à l'index spécifié.</summary>
      <returns>Élément à l'index spécifié.</returns>
      <param name="index">Index de base zéro de l'élément à obtenir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">Always thrown if the property is set.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Supprime la première occurrence d'un objet spécifique de <see cref="T:System.Collections.IList" />.Cette implémentation lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à supprimer de <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Supprime l'élément <see cref="T:System.Collections.IList" /> au niveau de l'index spécifié.Cette implémentation lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Index de base zéro de l'élément à supprimer.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="T:System.ComponentModel.DefaultValueAttribute">
      <summary>Spécifie la valeur par défaut d'une propriété.</summary>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> avec une valeur <see cref="T:System.Boolean" />.</summary>
      <param name="value">
        <see cref="T:System.Boolean" /> qui représente la valeur par défaut. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Byte)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> avec un entier 8 bits non signé.</summary>
      <param name="value">Valeur par défaut de type entier 8 bits non signé. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Char)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> avec un caractère Unicode.</summary>
      <param name="value">Valeur par défaut de type caractère Unicode. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Double)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> avec un nombre à virgule flottante double précision.</summary>
      <param name="value">Nombre à virgule flottante double précision qui est la valeur par défaut. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int16)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> avec un entier 16 bits signé.</summary>
      <param name="value">Valeur par défaut de type entier 16 bits signé. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> avec un entier 32 bits signé.</summary>
      <param name="value">Valeur par défaut de type entier 32 bits signé. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int64)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> avec un entier 64 bits signé.</summary>
      <param name="value">Valeur par défaut de type entier 64 bits signé. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> représentant la valeur par défaut. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Single)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> avec un nombre à virgule flottante simple précision.</summary>
      <param name="value">Nombre à virgule flottante simple précision qui est la valeur par défaut. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> avec un <see cref="T:System.String" />.</summary>
      <param name="value">Valeur par défaut <see cref="T:System.String" />. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Type,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DefaultValueAttribute" />, en convertissant la valeur spécifiée en type spécifié et en utilisant une culture dite indifférente comme contexte de traduction.</summary>
      <param name="type">
        <see cref="T:System.Type" /> qui représente le type dans lequel la valeur doit être convertie. </param>
      <param name="value">
        <see cref="T:System.String" /> qui peut être converti vers le type à l'aide de <see cref="T:System.ComponentModel.TypeConverter" /> pour le type et la culture Anglais (États-Unis). </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si la valeur de l'objet donné est égale au <see cref="T:System.ComponentModel.DefaultValueAttribute" /> actuel.</summary>
      <returns>true si la valeur de l'objet donné est égale à celle de la valeur actuelle ; sinon, false.</returns>
      <param name="obj">Objet dont l'égalité des valeurs doit être vérifiée. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.GetHashCode"></member>
    <member name="P:System.ComponentModel.DefaultValueAttribute.Value">
      <summary>Obtient la valeur par défaut de la propriété à laquelle cet attribut est lié.</summary>
      <returns>
        <see cref="T:System.Object" /> qui représente la valeur par défaut de la propriété à laquelle cet attribut est lié.</returns>
    </member>
    <member name="T:System.ComponentModel.EditorBrowsableAttribute">
      <summary>Spécifie qu'une propriété ou méthode est affichable dans un éditeur.Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.#ctor(System.ComponentModel.EditorBrowsableState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.EditorBrowsableAttribute" /> avec un <see cref="T:System.ComponentModel.EditorBrowsableState" />.</summary>
      <param name="state">
        <see cref="T:System.ComponentModel.EditorBrowsableState" /> auquel affecter <see cref="P:System.ComponentModel.EditorBrowsableAttribute.State" />. </param>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si la valeur de l'objet donné est égale au <see cref="T:System.ComponentModel.EditorBrowsableAttribute" /> en cours.</summary>
      <returns>true si la valeur de l'objet donné est égale à celle de la valeur actuelle ; sinon, false.</returns>
      <param name="obj">Objet dont l'égalité des valeurs doit être vérifiée. </param>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.GetHashCode"></member>
    <member name="P:System.ComponentModel.EditorBrowsableAttribute.State">
      <summary>Obtient l'état de possibilité d'exploration de la propriété ou de la méthode.</summary>
      <returns>
        <see cref="T:System.ComponentModel.EditorBrowsableState" /> qui représente l'état de possibilité d'exploration de la propriété ou de la méthode.</returns>
    </member>
    <member name="T:System.ComponentModel.EditorBrowsableState">
      <summary>Spécifie la possibilité d'exploration d'une propriété ou d'une méthode dans un éditeur.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Advanced">
      <summary>La propriété ou la méthode est une fonctionnalité que seuls les utilisateurs expérimentés doivent voir.Un éditeur peut afficher ou masquer de telles propriétés.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Always">
      <summary>La propriété ou la méthode peut toujours être explorée dans un éditeur.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Never">
      <summary>La propriété ou la méthode ne peut jamais être explorée dans un éditeur.</summary>
    </member>
    <member name="T:System.Diagnostics.ConditionalAttribute">
      <summary>Indique aux compilateurs qu'un appel ou un attribut de méthode doit être ignoré, sauf si un symbole de compilation conditionnelle spécifié est défini.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Diagnostics.ConditionalAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.ConditionalAttribute" />.</summary>
      <param name="conditionString">Chaîne qui spécifie le symbole de compilation conditionnelle respectant la casse et associé à l'attribut. </param>
    </member>
    <member name="P:System.Diagnostics.ConditionalAttribute.ConditionString">
      <summary>Obtient le symbole de compilation conditionnelle associé à l'attribut <see cref="T:System.Diagnostics.ConditionalAttribute" />.</summary>
      <returns>Chaîne qui spécifie le symbole de compilation conditionnelle respectant la casse et associé à l'attribut <see cref="T:System.Diagnostics.ConditionalAttribute" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.DebuggableAttribute">
      <summary>Modifie la génération de code pour le débogage juste-à-temps (JIT) du runtime.Cette classe ne peut pas être héritée.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Diagnostics.DebuggableAttribute.DebuggingModes)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.DebuggableAttribute" />, à l'aide des modes de débogage spécifiés pour le compilateur juste-à-temps (JIT). </summary>
      <param name="modes">Combinaison d'opérations de bits des valeurs <see cref="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" /> spécifiant le mode de débogage du compilateur JIT.</param>
    </member>
    <member name="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
      <summary>Spécifie le mode de débogage pour le compilateur juste-à-temps (JIT).</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default">
      <summary>Fait en sorte que le compilateur JIT utilise son comportement par défaut, notamment l'activation des optimisations, la désactivation de la prise en charge de la fonctionnalité Modifier &amp; Continuer et l'utilisation de points de séquence de magasin de symboles s'ils existent.Dans .NET Framework version 2.0, les informations de suivi JIT, l'offset MSIL par rapport à l'offset code natif au sein d'une méthode, sont toujours générées.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations">
      <summary>Désactivez les optimisations exécutées par le compilateur pour réduire la taille de votre fichier de sortie et le rendre plus rapide et plus efficace.Les optimisations entraînent une réorganisation du code dans le fichier de sortie, ce qui peut compliquer le débogage.En général, l'optimisation doit être désactivée au cours du débogage.Dans les versions 2.0 ou ultérieures, combinez cette valeur avec Default (Default | DisableOptimizations) pour activer le suivi JIT et désactiver les optimisations.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.EnableEditAndContinue">
      <summary>Activez Modifier &amp; continuer.Ce mode vous permet d'apporter des modifications à votre code source pendant que votre programme est en mode arrêt.La possibilité de modifier et de continuer dépend du compilateur.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints">
      <summary>Utilisez les points de séquence MSIL implicites, pas les points de séquence de la base de données du programme (PDB).En général, les informations sur les symboles comportent au moins un offset MSIL pour chaque ligne source.Lorsque le compilateur juste-à-temps (JIT) est sur le point de compiler une méthode, il sollicite la liste des offsets MSIL à conserver auprès des services de profil.Ces offsets MSIL sont appelés des points de séquence.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.None">
      <summary>Dans le .NET Framework version 2.0, les informations de suivi JIT sont toujours générées, et cet indicateur a le même effet que <see cref="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default" />, à la différence que la propriété <see cref="P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled" /> a la valeur false, ce qui n'a aucune signification dans la version 2.0.</summary>
    </member>
    <member name="T:System.Globalization.DateTimeStyles">
      <summary>Définit les options de mise en forme qui personnalisent l'analyse de chaîne pour plusieurs méthodes d'analyse de date et d'heure.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AdjustToUniversal">
      <summary>La date et l'heure sont retournées en heure UTC (Temps universel coordonné).Si la chaîne d'entrée désigne une heure locale par le biais d'un spécificateur de fuseau horaire ou de <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" />, la date et l'heure sont converties de l'heure locale en heure UTC.Si la chaîne d'entrée désigne une heure UTC par le biais d'un spécificateur de fuseau horaire ou de <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />, aucune conversion n'est effectuée.Si la chaîne d'entrée ne désigne pas une heure locale ou une heure UTC, aucune conversion n'est effectuée et la propriété <see cref="P:System.DateTime.Kind" /> résultante est <see cref="F:System.DateTimeKind.Unspecified" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowInnerWhite">
      <summary>Les caractères d'espaces blancs supplémentaires au milieu de la chaîne doivent être ignorés pendant l'analyse, sauf si ceux-ci sont présents dans les modèles de format <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowLeadingWhite">
      <summary>Les espaces blancs de début doivent être ignorés pendant l'analyse, sauf si ceux-ci sont présents dans les modèles de format <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowTrailingWhite">
      <summary>Les espaces blancs de fin doivent être ignorés pendant l'analyse, sauf si ceux-ci sont présents dans les modèles de format <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowWhiteSpaces">
      <summary>Les caractères d'espaces blancs supplémentaires à n'importe quel endroit de la chaîne doivent être ignorés pendant l'analyse, sauf si ceux-ci sont présents dans les modèles de format <see cref="T:System.Globalization.DateTimeFormatInfo" />.Cette valeur est une combinaison des valeurs <see cref="F:System.Globalization.DateTimeStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.DateTimeStyles.AllowTrailingWhite" /> et <see cref="F:System.Globalization.DateTimeStyles.AllowInnerWhite" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AssumeLocal">
      <summary>Si aucun fuseau horaire n'est spécifié dans la chaîne analysée, la chaîne est supposée désigner une heure locale. </summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AssumeUniversal">
      <summary>Si aucun fuseau horaire n'est spécifié dans la chaîne analysée, la chaîne est supposée désigner une heure UTC. </summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault">
      <summary>Si la chaîne analysée contient uniquement l'heure et non la date, les méthodes d'analyse supposent la date grégorienne avec année = 1, mois = 1 et jour = 1.Si cette valeur n'est pas utilisée, la date actuelle est supposée.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.None">
      <summary>Les options de mise en forme par défaut doivent être utilisées.Cette valeur représente le style par défaut pour les méthodes <see cref="M:System.DateTime.Parse(System.String)" />, <see cref="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)" />et <see cref="M:System.DateTime.TryParse(System.String,System.DateTime@)" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.RoundtripKind">
      <summary>Le champ <see cref="T:System.DateTimeKind" /> d'une date est conservé lorsqu'un objet <see cref="T:System.DateTime" /> est converti en chaîne et à l'aide du spécificateur de format "o" ou "r" et que celle-ci est ensuite reconvertie en objet <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="T:System.Globalization.NumberStyles">
      <summary>Détermine les styles autorisés dans les arguments de chaîne numérique passés aux méthodes Parse et TryParse des types numériques intégraux et à virgule flottante.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowCurrencySymbol">
      <summary>Indique que la chaîne numérique peut contenir un symbole monétaire.Les symboles monétaires valides sont déterminés par la propriété <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowDecimalPoint">
      <summary>Indique que la chaîne numérique peut avoir une virgule décimale.Si la valeur <see cref="T:System.Globalization.NumberStyles" /> inclut l'indicateur <see cref="F:System.Globalization.NumberStyles.AllowCurrencySymbol" /> et que la chaîne analysée inclut un symbole monétaire, le caractère de séparation décimale est déterminé par la propriété <see cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />.Sinon, le caractère de séparateur décimal est déterminé par la propriété <see cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowExponent">
      <summary>Indique que la chaîne numérique peut être écrite en notation exponentielle.L'indicateur <see cref="F:System.Globalization.NumberStyles.AllowExponent" /> permet à la chaîne analysée de contenir un exposant qui commence par le caractère "E" ou "e" et d'être suivie par un positif facultatif ou un signe négatif et un entier.En d'autres termes, il analyse avec succès des chaînes au format nnnExx, nnnE+xx et nnnE-xx.Il n'autorise pas un séparateur décimal ou un signe dans la mantisse ; pour autoriser ces éléments dans la chaîne à analyser, utilisez les indicateurs <see cref="F:System.Globalization.NumberStyles.AllowDecimalPoint" /> et <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" />, ou utilisez un style composite qui inclut ces indicateurs individuels.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowHexSpecifier">
      <summary>Indique que la chaîne numérique représente une valeur hexadécimale.Les valeurs hexadécimales valides incluent les chiffres 0-9 et les chiffres hexadécimaux A-F et a-f.Les chaînes qui sont analysées à l'aide de ce style ne peuvent pas avoir le préfixe « 0x » ou « &amp;h ».Une chaîne qui est analysée avec le style <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> sera toujours interprétée comme une valeur hexadécimale.Les seuls indicateurs pouvant être combinés avec <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> sont <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" /> et <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" />.L'énumération <see cref="T:System.Globalization.NumberStyles" /> inclut un style composite, <see cref="F:System.Globalization.NumberStyles.HexNumber" />, qui est composé de ces trois indicateurs.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowLeadingSign">
      <summary>Indique que la chaîne numérique peut avoir un signe de début.Les caractères de signe de début valides sont déterminés par les propriétés <see cref="P:System.Globalization.NumberFormatInfo.PositiveSign" /> et <see cref="P:System.Globalization.NumberFormatInfo.NegativeSign" />.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowLeadingWhite">
      <summary>Indique que des espaces blancs de début peuvent être présents dans la chaîne analysée.Les espaces valides ont les valeurs Unicode U+0009, U+000A, U+000B, U+000C, U+000D et U+0020.Notez qu'il s'agit d'un sous-ensemble des caractères pour lesquels la méthode <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> retourne true.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowParentheses">
      <summary>Indique que la chaîne numérique peut avoir une paire de parenthèses englobant le nombre.Les parenthèses indiquent que la chaîne à analyser représente une nombre négatif.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowThousands">
      <summary>Indique que la chaîne numérique peut avoir des séparateurs de groupes, tels que des symboles qui séparent les centaines des milliers.Si la valeur <see cref="T:System.Globalization.NumberStyles" /> inclut l'indicateur <see cref="F:System.Globalization.NumberStyles.AllowCurrencySymbol" /> et que la chaîne à analyser inclut un symbole monétaire, le caractère de séparation des groupes valide est déterminé par la propriété <see cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />, et le nombre de chiffres dans chaque groupe est déterminé par la propriété <see cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />.Sinon, le caractères de séparation de groupes valides est déterminé par la propriété <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />, et le nombre de chiffres dans chaque groupe est déterminé par la propriété <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowTrailingSign">
      <summary>Indique que la chaîne numérique peut avoir un signe de fin.Les caractères de signe de fin valides sont déterminés par les propriétés <see cref="P:System.Globalization.NumberFormatInfo.PositiveSign" /> et <see cref="P:System.Globalization.NumberFormatInfo.NegativeSign" />.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowTrailingWhite">
      <summary>Indique que des espaces blancs de fin peuvent être présents dans la chaîne analysée.Les espaces valides ont les valeurs Unicode U+0009, U+000A, U+000B, U+000C, U+000D et U+0020.Notez qu'il s'agit d'un sous-ensemble des caractères pour lesquels la méthode <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> retourne true.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Any">
      <summary>Indique que tous les styles, à l'exception de <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />, sont utilisés.Il s'agit d'un style de nombre composite.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Currency">
      <summary>Indique que tous les styles, à l'exception de <see cref="F:System.Globalization.NumberStyles.AllowExponent" /> et <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />, sont utilisés.Il s'agit d'un style de nombre composite.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Float">
      <summary>Indique que les styles <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" />, <see cref="F:System.Globalization.NumberStyles.AllowDecimalPoint" /> et <see cref="F:System.Globalization.NumberStyles.AllowExponent" /> sont utilisés.Il s'agit d'un style de nombre composite.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.HexNumber">
      <summary>Indique que les styles <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" /> et <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> sont utilisés.Il s'agit d'un style de nombre composite.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Integer">
      <summary>Indique que les styles <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" /> et <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" /> sont utilisés.Il s'agit d'un style de nombre composite.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.None">
      <summary>Indique qu'aucun élément de style, tel que l'espace blanc de début ou de fin, les séparateurs de milliers ou un séparateur décimal, ne peut être présent dans la chaîne analysée.La chaîne à analyser doit uniquement être constituée de chiffres intégraux décimaux.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Number">
      <summary>Indique que les styles <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingSign" />, <see cref="F:System.Globalization.NumberStyles.AllowDecimalPoint" /> et <see cref="F:System.Globalization.NumberStyles.AllowThousands" /> sont utilisés.Il s'agit d'un style de nombre composite.</summary>
    </member>
    <member name="T:System.Globalization.TimeSpanStyles">
      <summary>Définit les options de mise en forme qui personnalisent l'analyse de chaîne pour les méthodes <see cref="Overload:System.TimeSpan.ParseExact" /> et <see cref="Overload:System.TimeSpan.TryParseExact" />.</summary>
    </member>
    <member name="F:System.Globalization.TimeSpanStyles.AssumeNegative">
      <summary>Indique que l'entrée est toujours interprétée comme un intervalle de temps négatif.</summary>
    </member>
    <member name="F:System.Globalization.TimeSpanStyles.None">
      <summary>Indique que l'entrée est interprétée comme un intervalle de temps négatif uniquement si un signe négatif est présent.</summary>
    </member>
    <member name="T:System.IO.DirectoryNotFoundException">
      <summary>Exception qui est levée lorsqu'une partie d'un fichier ou d'un répertoire est introuvable.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.DirectoryNotFoundException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.DirectoryNotFoundException" /> dont la chaîne de message correspond à un message fourni par le système et HRESULT équivaut à COR_E_DIRECTORYNOTFOUND.</summary>
    </member>
    <member name="M:System.IO.DirectoryNotFoundException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.DirectoryNotFoundException" /> dont la chaîne de message correspond à <paramref name="message" /> et HRESULT équivaut à COR_E_DIRECTORYNOTFOUND.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'erreur.Le contenu du <paramref name="message" /> doit être compréhensible pour les utilisateurs.L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture du système en cours.</param>
    </member>
    <member name="M:System.IO.DirectoryNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.DirectoryNotFoundException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="innerException">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.IO.FileLoadException">
      <summary>Exception qui est levée lorsqu'un assembly managé est trouvé mais ne peut pas être chargé.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.FileLoadException" />, en affectant à la propriété <see cref="P:System.Exception.Message" /> un message généré par le système qui décrit l'erreur, tel que “ impossible de charger le fichier spécifié ”. Ce message prend en considération la culture du système en cours.</summary>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.FileLoadException" /> avec le message d'erreur spécifié.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'erreur.Le contenu du <paramref name="message" /> doit être compréhensible pour les utilisateurs.L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture du système en cours.</param>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.FileLoadException" /> avec un message d'erreur spécifié et une référence à l'exception interne qui est à l'origine de cette exception.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'erreur.Le contenu du <paramref name="message" /> doit être compréhensible pour les utilisateurs.L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture du système en cours.</param>
      <param name="inner">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="inner" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.FileLoadException" /> avec un message d'erreur spécifié et le nom du fichier qui n'a pas pu être chargé.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'erreur.Le contenu du <paramref name="message" /> doit être compréhensible pour les utilisateurs.L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture du système en cours.</param>
      <param name="fileName">
        <see cref="T:System.String" /> qui contient le nom du fichier qui n'a pas pu être chargé. </param>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.FileLoadException" /> avec un message d'erreur spécifié, le nom du fichier qui n'a pas pu être chargé, et une référence à l'exception interne qui est la cause de cette exception.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'erreur.Le contenu du <paramref name="message" /> doit être compréhensible pour les utilisateurs.L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture du système en cours.</param>
      <param name="fileName">
        <see cref="T:System.String" /> qui contient le nom du fichier qui n'a pas pu être chargé. </param>
      <param name="inner">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="inner" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="P:System.IO.FileLoadException.FileName">
      <summary>Obtient le nom du fichier ayant provoqué cette exception.</summary>
      <returns>
        <see cref="T:System.String" /> contenant le nom du fichier où se trouve l'image non valide, ou une référence null si aucun nom de fichier n'a été passé au constructeur pour l'instance actuelle.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.FileLoadException.Message">
      <summary>Obtient le message d'erreur et le nom du fichier ayant provoqué cette exception.</summary>
      <returns>Chaîne contenant le message d'erreur et le nom du fichier ayant provoqué cette exception.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.FileLoadException.ToString">
      <summary>Retourne le nom qualifié complet de l'exception en cours, et éventuellement le message d'erreur, le nom de l'exception interne et la trace de la pile.</summary>
      <returns>Chaîne contenant le nom qualifié complet de l'exception, et éventuellement le message d'erreur, le nom de l'exception interne et la trace de la pile, suivant le constructeur <see cref="T:System.IO.FileLoadException" /> utilisé.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.IO.FileNotFoundException">
      <summary>Exception levée lors d'une tentative d'accès à un fichier qui n'existe pas sur le disque, échoue.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.FileNotFoundException" /> dont la chaîne de message correspond à un message fourni par le système et HRESULT équivaut à COR_E_FILENOTFOUND.</summary>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.FileNotFoundException" /> dont la chaîne de message correspond à <paramref name="message" /> et HRESULT équivaut à COR_E_FILENOTFOUND.</summary>
      <param name="message">Description de l'erreur.Le contenu du <paramref name="message" /> doit être compréhensible pour les utilisateurs.L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture du système en cours.</param>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.FileNotFoundException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Description de l'erreur.Le contenu du <paramref name="message" /> doit être compréhensible pour les utilisateurs.L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture du système en cours.</param>
      <param name="innerException">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.FileNotFoundException" /> dont la chaîne de message est égale à <paramref name="message" />, en spécifiant le nom du fichier introuvable, et HRESULT équivaut à COR_E_FILENOTFOUND.</summary>
      <param name="message">Description de l'erreur.Le contenu du <paramref name="message" /> doit être compréhensible pour les utilisateurs.L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture du système en cours.</param>
      <param name="fileName">Nom complet du fichier comportant l'image non valide. </param>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor(System.String,System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.FileNotFoundException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="fileName">Nom complet du fichier comportant l'image non valide. </param>
      <param name="innerException">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="P:System.IO.FileNotFoundException.FileName">
      <summary>Obtient le nom du fichier qui est introuvable.</summary>
      <returns>Nom du fichier, ou null si aucun nom de fichier n'a été passé au constructeur pour cette instance.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.FileNotFoundException.Message">
      <summary>Obtient le message d'erreur expliquant la raison de l'exception.</summary>
      <returns>Message d'erreur.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.FileNotFoundException.ToString">
      <summary>Retourne le nom qualifié complet de cette exception et éventuellement le message d'erreur, le nom de l'exception interne et la trace de la pile.</summary>
      <returns>Nom qualifié complet de cette exception, et éventuellement le message d'erreur, le nom de l'exception interne et la trace de la pile.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.IO.IOException">
      <summary>Exception levée lorsqu'une erreur d'E/S se produit.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IO.IOException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.IOException" /> dont la chaîne de message est égale à la chaîne vide (""), HRESULT à COR_E_IO et son exception interne est définie comme une référence null.</summary>
    </member>
    <member name="M:System.IO.IOException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.IOException" /> dont la chaîne de message est égale à <paramref name="message" />, HRESULT à COR_E_IO et son exception interne à null.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'erreur.Le contenu du <paramref name="message" /> doit être compréhensible pour les utilisateurs.L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture du système en cours.</param>
    </member>
    <member name="M:System.IO.IOException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.IOException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="innerException">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="M:System.IO.IOException.#ctor(System.String,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.IOException" /> dont la chaîne de message est égale à <paramref name="message" /> et HRESULT est défini par l'utilisateur.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'erreur.Le contenu du <paramref name="message" /> doit être compréhensible pour les utilisateurs.L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture du système en cours.</param>
      <param name="hresult">Un entier identifiant l'erreur qui s'est produit. </param>
    </member>
    <member name="T:System.IO.PathTooLongException">
      <summary>Exception levée lorsqu'un nom de chemin d'accès ou de fichier est plus long que la longueur maximale définie par le système.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.PathTooLongException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.PathTooLongException" /> dont le HRESULT est égal à COR_E_PATHTOOLONG.</summary>
    </member>
    <member name="M:System.IO.PathTooLongException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.PathTooLongException" /> dont la chaîne de message correspond à <paramref name="message" /> et HRESULT équivaut à COR_E_PATHTOOLONG.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'erreur.Le contenu du <paramref name="message" /> doit être compréhensible pour les utilisateurs.L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture du système en cours.</param>
    </member>
    <member name="M:System.IO.PathTooLongException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.PathTooLongException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'erreur.Le contenu du <paramref name="message" /> doit être compréhensible pour les utilisateurs.L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture du système en cours.</param>
      <param name="innerException">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Reflection.AssemblyCompanyAttribute">
      <summary>Définit un attribut personnalisé de nom de société pour un manifeste d'assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyCompanyAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.AssemblyCompanyAttribute" />.</summary>
      <param name="company">Informations relatives au nom de la société. </param>
    </member>
    <member name="P:System.Reflection.AssemblyCompanyAttribute.Company">
      <summary>Obtient les informations relatives au nom de la société.</summary>
      <returns>Chaîne contenant le nom de la société.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyConfigurationAttribute">
      <summary>Spécifie la configuration de build, telle que version commerciale ou version debug, d'un assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyConfigurationAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.AssemblyConfigurationAttribute" />.</summary>
      <param name="configuration">Configuration de l'assembly. </param>
    </member>
    <member name="P:System.Reflection.AssemblyConfigurationAttribute.Configuration">
      <summary>Obtient des informations se rapportant à la configuration de l'assembly.</summary>
      <returns>Chaîne qui contient les informations se rapportant à la configuration de l'assembly.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyCopyrightAttribute">
      <summary>Définit un attribut personnalisé de copyright pour un manifeste d'assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyCopyrightAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.AssemblyCopyrightAttribute" />.</summary>
      <param name="copyright">Informations de copyright. </param>
    </member>
    <member name="P:System.Reflection.AssemblyCopyrightAttribute.Copyright">
      <summary>Obtient les informations de copyright.</summary>
      <returns>Chaîne contenant les informations de copyright.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyCultureAttribute">
      <summary>Spécifie la culture prise en charge par l'assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyCultureAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.AssemblyCultureAttribute" /> avec la culture prise en charge par l'assembly avec attributs.</summary>
      <param name="culture">Culture prise en charge par l'assembly avec attributs. </param>
    </member>
    <member name="P:System.Reflection.AssemblyCultureAttribute.Culture">
      <summary>Obtient la culture prise en charge par l'assembly avec attributs.</summary>
      <returns>Chaîne contenant le nom de la culture prise en charge.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyDefaultAliasAttribute">
      <summary>Définit un alias par défaut convivial pour un manifeste d'assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyDefaultAliasAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.AssemblyDefaultAliasAttribute" />.</summary>
      <param name="defaultAlias">Informations se rapportant à l'alias par défaut de l'assembly. </param>
    </member>
    <member name="P:System.Reflection.AssemblyDefaultAliasAttribute.DefaultAlias">
      <summary>Obtient les informations relatives à l'alias par défaut.</summary>
      <returns>Chaîne qui contient les informations se rapportant à l'alias par défaut.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyDelaySignAttribute">
      <summary>Spécifie que l'assembly n'est pas complètement signé lors de sa création.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyDelaySignAttribute.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.AssemblyDelaySignAttribute" />.</summary>
      <param name="delaySign">true si la fonctionnalité représentée par cet attribut est activée ; sinon, false. </param>
    </member>
    <member name="P:System.Reflection.AssemblyDelaySignAttribute.DelaySign">
      <summary>Obtient une valeur indiquant l'état de l'attribut.</summary>
      <returns>true si cet assembly a été généré avec une signature différée ; sinon false.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyDescriptionAttribute">
      <summary>Fournit une description pour un assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyDescriptionAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.AssemblyDescriptionAttribute" />.</summary>
      <param name="description">Description de l'assembly. </param>
    </member>
    <member name="P:System.Reflection.AssemblyDescriptionAttribute.Description">
      <summary>Obtient des informations se rapportant à la description de l'assembly.</summary>
      <returns>Chaîne contenant la description de l'assembly.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyFileVersionAttribute">
      <summary>Ordonne à un compilateur d'utiliser un numéro de version déterminé pour la ressource de la version du fichier Win32.La version du fichier Win32 ne doit pas nécessairement être identique au numéro de version de l'assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyFileVersionAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.AssemblyFileVersionAttribute" />, en spécifiant la version du fichier.</summary>
      <param name="version">Version du fichier. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> a la valeur null. </exception>
    </member>
    <member name="P:System.Reflection.AssemblyFileVersionAttribute.Version">
      <summary>Obtient le nom de la ressource de la version du fichier Win32.</summary>
      <returns>Chaîne contenant le nom de la ressource de la version du fichier</returns>
    </member>
    <member name="T:System.Reflection.AssemblyFlagsAttribute">
      <summary>Spécifie une combinaison d'opérations de bits d'indicateurs <see cref="T:System.Reflection.AssemblyNameFlags" /> pour un assembly, en décrivant les options du compilateur juste-à-temps (JIT), la possibilité de rediriger l'assembly et l'existence d'une clé publique complète ou sous forme de jeton.Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> avec la combinaison spécifiée d'indicateurs <see cref="T:System.Reflection.AssemblyNameFlags" />.</summary>
      <param name="assemblyFlags">Combinaison d'opérations de bits d'indicateurs <see cref="T:System.Reflection.AssemblyNameFlags" /> représentant les options du compilateur juste-à-temps (JIT), sa longévité, la possibilité de rediriger un assembly et l'existence d'une clé publique complète ou sous forme de jeton.</param>
    </member>
    <member name="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
      <summary>Obtient une valeur entière qui représente la combinaison d'indicateurs <see cref="T:System.Reflection.AssemblyNameFlags" /> spécifiée au moment de la création de cette instance de l'attribut.</summary>
      <returns>Valeur entière représentant une combinaison d'opérations de bits d'indicateurs <see cref="T:System.Reflection.AssemblyNameFlags" />.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyInformationalVersionAttribute">
      <summary>Définit les informations supplémentaires sur la version pour un manifeste d'assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyInformationalVersionAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.AssemblyInformationalVersionAttribute" />.</summary>
      <param name="informationalVersion">Informations de version de l'assembly. </param>
    </member>
    <member name="P:System.Reflection.AssemblyInformationalVersionAttribute.InformationalVersion">
      <summary>Obtient les informations de version.</summary>
      <returns>Chaîne contenant les informations sur la version.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyKeyFileAttribute">
      <summary>Spécifie le nom d'un fichier contenant la paire de clés utilisée pour générer un nom fort.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyKeyFileAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe AssemblyKeyFileAttribute avec le nom du fichier contenant la paire de clés utilisée pour générer un nom fort pour l'assembly avec attributs.</summary>
      <param name="keyFile">Nom du fichier contenant la paire de clés. </param>
    </member>
    <member name="P:System.Reflection.AssemblyKeyFileAttribute.KeyFile">
      <summary>Obtient le nom du fichier contenant la paire de clés utilisée pour générer un nom fort pour l'assembly avec attributs.</summary>
      <returns>Chaîne contenant le nom du fichier qui contient la paire de clés.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyKeyNameAttribute">
      <summary>Spécifie le nom d'un conteneur de clé dans le fournisseur de services de chiffrement contenant la paire de clés utilisées pour générer un nom fort.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyKeyNameAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.AssemblyKeyNameAttribute" /> avec le nom du conteneur contenant la paire de clés utilisées pour générer un nom fort pour l'assembly avec attributs.</summary>
      <param name="keyName">Nom du conteneur contenant la paire de clés. </param>
    </member>
    <member name="P:System.Reflection.AssemblyKeyNameAttribute.KeyName">
      <summary>Obtient le nom du conteneur comprenant la paire de clés utilisées pour générer un nom fort pour l'assembly avec attributs.</summary>
      <returns>Chaîne contenant le nom du conteneur qui comprend la paire de clés appropriées.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyMetadataAttribute">
      <summary>Définit une paire de métadonnées clé/valeur pour l'assembly décoré.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyMetadataAttribute.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.AssemblyMetadataAttribute" /> à l'aide de la clé et de la valeur de métadonnées spécifiées.</summary>
      <param name="key">Clé de métadonnées</param>
      <param name="value">Valeur des métadonnées.</param>
    </member>
    <member name="P:System.Reflection.AssemblyMetadataAttribute.Key">
      <summary>Obtient la clé des métadonnées.</summary>
      <returns>Clé de métadonnées</returns>
    </member>
    <member name="P:System.Reflection.AssemblyMetadataAttribute.Value">
      <summary>Obtient la valeur de métadonnées.</summary>
      <returns>Valeur des métadonnées.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyNameFlags">
      <summary>Fournit des informations sur une référence <see cref="T:System.Reflection.Assembly" />.</summary>
    </member>
    <member name="F:System.Reflection.AssemblyNameFlags.None">
      <summary>Spécifie qu'aucun indicateur n'est en vigueur.</summary>
    </member>
    <member name="F:System.Reflection.AssemblyNameFlags.PublicKey">
      <summary>Spécifie qu'une clé publique est formée à partir de la clé publique complète et non à partir du jeton de clé publique.</summary>
    </member>
    <member name="F:System.Reflection.AssemblyNameFlags.Retargetable">
      <summary>Spécifie que l'assembly peut être reciblé au moment de l'exécution vers un assembly d'un éditeur différent.Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="T:System.Reflection.AssemblyProductAttribute">
      <summary>Définit un attribut personnalisé de nom de produit pour un manifeste d'assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyProductAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.AssemblyProductAttribute" />.</summary>
      <param name="product">Informations relatives au nom du produit. </param>
    </member>
    <member name="P:System.Reflection.AssemblyProductAttribute.Product">
      <summary>Obtient les informations relatives au nom du produit.</summary>
      <returns>Chaîne contenant le nom du produit.</returns>
    </member>
    <member name="T:System.Reflection.AssemblySignatureKeyAttribute">
      <summary>Assure la migration d'une clé de nom fort plus ancienne et plus simple vers une plus grande clé avec un algorithme de hachage plus fort.</summary>
    </member>
    <member name="M:System.Reflection.AssemblySignatureKeyAttribute.#ctor(System.String,System.String)">
      <summary>Crée une instance de la classe <see cref="T:System.Reflection.AssemblySignatureKeyAttribute" /> en utilisant la clé publique et la contre-signature spécifiées.</summary>
      <param name="publicKey">Clé publique ou clé d'identité.</param>
      <param name="countersignature">Contre-signature, qui est la clé de signature de la clé de nom fort.</param>
    </member>
    <member name="P:System.Reflection.AssemblySignatureKeyAttribute.Countersignature">
      <summary>Obtient la contre-signature pour le nom fort de cet assembly.</summary>
      <returns>Contre-signature pour cette clé de signature.</returns>
    </member>
    <member name="P:System.Reflection.AssemblySignatureKeyAttribute.PublicKey">
      <summary>Obtient la clé publique pour le nom fort utilisé pour signer l'assembly.</summary>
      <returns>Clé publique de cet assembly.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyTitleAttribute">
      <summary>Spécifie la description d'un assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyTitleAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.AssemblyTitleAttribute" />.</summary>
      <param name="title">Titre de l'assembly. </param>
    </member>
    <member name="P:System.Reflection.AssemblyTitleAttribute.Title">
      <summary>Obtient des informations relatives au titre de l'assembly.</summary>
      <returns>Titre de l'assembly. </returns>
    </member>
    <member name="T:System.Reflection.AssemblyTrademarkAttribute">
      <summary>Définit un attribut personnalisé de marque pour un manifeste d'assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyTrademarkAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.AssemblyTrademarkAttribute" />.</summary>
      <param name="trademark">Informations relatives à la marque. </param>
    </member>
    <member name="P:System.Reflection.AssemblyTrademarkAttribute.Trademark">
      <summary>Obtient les informations relatives à la marque.</summary>
      <returns>String contenant les informations relatives à la marque.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyVersionAttribute">
      <summary>Spécifie la version de l'assembly avec attributs.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe AssemblyVersionAttribute avec le numéro de version de l'assembly avec attributs.</summary>
      <param name="version">Numéro de version de l'assembly avec attributs. </param>
    </member>
    <member name="P:System.Reflection.AssemblyVersionAttribute.Version">
      <summary>Obtient le numéro de version de l'assembly avec attributs.</summary>
      <returns>Chaîne contenant le numéro de version de l'assembly.</returns>
    </member>
    <member name="T:System.Reflection.DefaultMemberAttribute">
      <summary>Définit le membre d'un type qui est le membre par défaut utilisé par <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. </summary>
    </member>
    <member name="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.DefaultMemberAttribute" />.</summary>
      <param name="memberName">String contenant le nom du membre à appeler.Il peut s'agir d'un constructeur, d'une méthode, d'une propriété ou d'un champ.Un attribut d'appel approprié doit être spécifié quand le membre est appelé.Il est possible de spécifier le membre par défaut d'une classe en passant un String vide en tant que nom du membre.Le membre par défaut d'un type est marqué avec l'attribut personnalisé DefaultMemberAttribute ou il est marqué dans COM, de la manière habituelle. </param>
    </member>
    <member name="P:System.Reflection.DefaultMemberAttribute.MemberName">
      <summary>Obtient le nom à partir de l'attribut.</summary>
      <returns>Chaîne représentant le nom du membre.</returns>
    </member>
    <member name="T:System.Reflection.ProcessorArchitecture">
      <summary>Identifie le processeur et les bits par mot de la plateforme ciblée par un fichier exécutable.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.Amd64">
      <summary>Processeur AMD 64 bits uniquement.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.Arm">
      <summary>Processeur ARM.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.IA64">
      <summary>Processeur Intel 64 bits uniquement.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.MSIL">
      <summary>Neutre en ce qui concerne le processeur et les bits par mot.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.None">
      <summary>Combinaison inconnue ou non spécifiée de processeur et de bits par mot.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.X86">
      <summary>Processeur Intel 32 bits, natif ou dans l'environnement Windows on Windows sur une plateforme 64 bits (WOW64).</summary>
    </member>
    <member name="T:System.Runtime.GCLargeObjectHeapCompactionMode">
      <summary>[Pris en charge dans le .NET Framework 4.5.1 et versions ultérieures] Indique si le garbage collection de blocage suivant compacte le tas d'objets volumineux (LOH). </summary>
    </member>
    <member name="F:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce">
      <summary>Le tas d'objets volumineux (LOH) sera compacté pendant le prochain garbage collection de blocage de génération 2. </summary>
    </member>
    <member name="F:System.Runtime.GCLargeObjectHeapCompactionMode.Default">
      <summary>Le tas d'objets volumineux (LOH) n'est pas compacté.</summary>
    </member>
    <member name="T:System.Runtime.GCLatencyMode">
      <summary>Ajuste l'heure que le garbage collector impose dans votre application.   </summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.Batch">
      <summary>Désactive l'accès concurrentiel de garbage collection et libère des objets dans un appel de lot.C'est le mode le plus importun.</summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.Interactive">
      <summary>Active l'accès concurrentiel de garbage collection et libère des objets pendant que l'application s'exécute.C'est le mode par défaut pour le garbage collection sur une station de travail qui est moins importun que <see cref="F:System.Runtime.GCLatencyMode.Batch" />.Il équilibre la réactivité avec le débit.</summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.LowLatency">
      <summary>Active le garbage collection qui est plus conservateur pour libérer des objets.Les collections complètes se produisent uniquement si le système subit une sollicitation importante de la mémoire alors que les collections de génération 0 et génération 1 peuvent avoir lieu plus fréquemment.</summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.SustainedLowLatency">
      <summary>Active le garbage collection qui essaie de réduire la latence sur une période étendue.Le garbage collector tente d'exécuter uniquement les collections génération 0, génération 1 et génération 2.Des garbage collections de blocage complets peuvent encore se produire si le système est sollicité par la mémoire.</summary>
    </member>
    <member name="T:System.Runtime.GCSettings">
      <summary>Spécifie les paramètres de garbage collection pour le processus en cours. </summary>
    </member>
    <member name="P:System.Runtime.GCSettings.IsServerGC">
      <summary>Obtient une valeur qui indique si le garbage collection du serveur est activé.</summary>
      <returns>true si le garbage collection du serveur est activé ; sinon, false.</returns>
    </member>
    <member name="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
      <summary>[Pris en charge dans le .NET Framework 4.5.1 et versions ultérieures] Obtient ou définit une valeur indiquant si un garbage collection de blocage compacte le tas d'objets volumineux (LOH). </summary>
      <returns>L'une des valeurs d'énumération indiquant si un garbage collection de blocage complet compacte le tas d'objets volumineux (LOH). </returns>
    </member>
    <member name="P:System.Runtime.GCSettings.LatencyMode">
      <summary>Obtient ou définit le mode de latence en cours pour le garbage collection.</summary>
      <returns>Une des valeurs d'énumération qui spécifie le mode de latence. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Le <see cref="P:System.Runtime.GCSettings.LatencyMode" /> propriété est définie sur une valeur non valide. ouLe <see cref="P:System.Runtime.GCSettings.LatencyMode" /> propriété ne peut pas être définie sur <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" />. </exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute">
      <summary>Spécifie le nom de la propriété qui accède au champ avec attributs.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe AccessedThroughPropertyAttribute avec le nom de la propriété utilisée pour accéder au champ avec attributs.</summary>
      <param name="propertyName">Nom de la propriété utilisée pour accéder au champ avec attributs. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.PropertyName">
      <summary>Obtient le nom de la propriété utilisée pour accéder au champ avec attributs.</summary>
      <returns>Nom de la propriété utilisée pour accéder au champ avec attributs.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.AsyncStateMachineAttribute">
      <summary>Indique si une méthode est repérée par le modificateur Async (Visual Basic) ou async (référence C#).</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncStateMachineAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.AsyncStateMachineAttribute" />.</summary>
      <param name="stateMachineType">Objet de type du type de machine à états sous-jacent utilisé pour implémenter une méthode de machine à états.</param>
    </member>
    <member name="T:System.Runtime.CompilerServices.CallerFilePathAttribute">
      <summary>Permet d'obtenir le chemin d'accès complet du fichier source qui contient l'appelant.C'est le chemin d'accès au fichier au moment de la compilation.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CallerFilePathAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.CallerFilePathAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.CallerLineNumberAttribute">
      <summary>Permet d'obtenir le numéro de ligne dans le fichier source auquel la méthode est appelée.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CallerLineNumberAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.CallerMemberNameAttribute">
      <summary>Vous permet d'obtenir la méthode ou le nom de propriété de l'appelant pour la méthode.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CallerMemberNameAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.CompilationRelaxationsAttribute">
      <summary>Contrôle la rigueur du code généré par le compilateur juste-à-temps (JIT) du Common Language Runtime.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CompilationRelaxationsAttribute.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.CompilationRelaxationsAttribute" /> avec les relâchements de compilation spécifiés.</summary>
      <param name="relaxations">Relâchements de compilation. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.CompilationRelaxationsAttribute.CompilationRelaxations">
      <summary>Obtient les relâchements de compilation spécifiés lors de la construction de l'objet actuel.</summary>
      <returns>Relâchements de compilation spécifiés lors de la construction de l'objet actuel.Utilisez l'énumération <see cref="T:System.Runtime.CompilerServices.CompilationRelaxations" /> avec la propriété <see cref="P:System.Runtime.CompilerServices.CompilationRelaxationsAttribute.CompilationRelaxations" />.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.CompilerGeneratedAttribute">
      <summary>Distingue un élément généré par le compilateur d'un élément généré par l'utilisateur.Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CompilerGeneratedAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.CompilerGeneratedAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
      <summary>Permet aux compilateurs d'attacher dynamiquement des champs objet aux objets managés.</summary>
      <typeparam name="TKey">Type référence auquel le champ est attaché. </typeparam>
      <typeparam name="TValue">Type du champ.Il doit s'agir d'un type référence.</typeparam>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
      <summary>Ajoute une clé à la table.</summary>
      <param name="key">Clé à ajouter.<paramref name="key" /> représente l'objet auquel la propriété est jointe.</param>
      <param name="value">Valeur de la propriété de la clé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> existe déjà.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Finalize">
      <summary>Garantit que les ressources sont libérées et autres opérations de nettoyage sont effectuées lorsque le garbage collector libère le <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> objet. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
      <summary>Effectue une recherche atomique de la clé spécifiée dans la table et retourne la valeur correspondante.Si la clé n'existe pas dans la table, la méthode appelle le constructeur par défaut de la classe qui représente la valeur de la table pour créer une valeur liée à la clé spécifiée.</summary>
      <returns>Valeur qui correspond à <paramref name="key" />, si <paramref name="key" /> existe déjà dans la table ; sinon, nouvelle valeur créée par le constructeur par défaut de la classe définie par le paramètre de type générique <paramref name="TValue" />.</returns>
      <param name="key">Clé à rechercher.<paramref name="key" /> représente l'objet auquel la propriété est jointe.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
      <exception cref="T:System.MissingMethodException">Dans les .NET pour applications Windows Store  ou la Bibliothèque de classes portable, intercepte l'exception de classe de base, <see cref="T:System.MissingMemberException" />, sinon.La classe qui représente la valeur de la table ne définit pas de constructeur par défaut.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)">
      <summary>Effectue une recherche atomique de la clé spécifiée dans la table et retourne la valeur correspondante.Si la clé n'existe pas dans la table, la méthode appelle une méthode de rappel pour créer une valeur liée à la clé spécifiée.</summary>
      <returns>Valeur attachée à <paramref name="key" />, si <paramref name="key" /> existe déjà dans la table ; sinon, nouvelle valeur retournée par le délégué <paramref name="createValueCallback" />.</returns>
      <param name="key">Clé à rechercher.<paramref name="key" /> représente l'objet auquel la propriété est jointe.</param>
      <param name="createValueCallback">Délégué d'une méthode qui peut créer une valeur pour le <paramref name="key" /> donné.Il comporte un paramètre unique de type <paramref name="TKey" /> et retourne une valeur de type <paramref name="TValue" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ou <paramref name="createValueCallback" /> est null.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
      <summary>Supprime une clé et sa valeur de la table.</summary>
      <returns>true si la recherche et la suppression de la clé réussissent ; sinon, false.</returns>
      <param name="key">Clé à supprimer. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
      <summary>Obtient la valeur de la clé spécifiée.</summary>
      <returns>true si la valeur <paramref name="key" /> est trouvée, sinon false.</returns>
      <param name="key">Clé qui représente un objet avec une propriété jointe.</param>
      <param name="value">Lorsque cette méthode est retournée, contient la valeur de la propriété jointe.Si <paramref name="key" /> est introuvable, <paramref name="value" /> contient la valeur par défaut.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback">
      <summary>Représente une méthode qui crée une valeur non définie par défaut à ajouter dans le cadre d'une paire clé-valeur à un objet <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback.BeginInvoke(`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback.Invoke(`0)"></member>
    <member name="T:System.Runtime.CompilerServices.CustomConstantAttribute">
      <summary>Définit une valeur constante qu'un compilateur peut rendre persistante pour un champ ou un paramètre de méthode.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CustomConstantAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.CustomConstantAttribute" />. </summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.CustomConstantAttribute.Value">
      <summary>Obtient la valeur constante stockée par cet attribut.</summary>
      <returns>Valeur constante stockée par cet attribut.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.DateTimeConstantAttribute">
      <summary>Rend persistant une constante <see cref="T:System.DateTime" /> sur 8 octets pour un champ ou un paramètre.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.DateTimeConstantAttribute.#ctor(System.Int64)">
      <summary>Initialise une nouvelle instance de la classe DateTimeConstantAttribute avec le nombre de graduations de 100 nanosecondes qui représentent la date et l'heure de cette instance.</summary>
      <param name="ticks">Nombre de graduations de 100 nanosecondes qui représentent la date et l'heure de cette instance. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.DateTimeConstantAttribute.Value">
      <summary>Obtient le nombre de graduations de 100 nanosecondes qui représentent la date et l'heure de cette instance.</summary>
      <returns>Nombre de graduations de 100 nanosecondes qui représentent la date et l'heure de cette instance.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.DecimalConstantAttribute">
      <summary>Stocke la valeur d'une constante <see cref="T:System.Decimal" /> dans les métadonnées.Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.Int32,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.DecimalConstantAttribute" /> avec des valeurs entières signées spécifiées. </summary>
      <param name="scale">Facteur d'échelle (puissance 10) qui indique le nombre de chiffres placés à droite du séparateur décimal.Les valeurs autorisées sont comprises entre 0 et 28 (inclus).</param>
      <param name="sign">Une valeur égale à 0 indique une valeur positive, tandis que la valeur 1 indique une valeur négative.</param>
      <param name="hi">32 bits de poids fort de <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" /> 96 bits.</param>
      <param name="mid">32 bits de poids moyen de <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" /> 96 bits.</param>
      <param name="low">32 bits de poids faible de <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" /> 96 bits.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.DecimalConstantAttribute" /> avec des valeurs entières non signées spécifiées.</summary>
      <param name="scale">Facteur d'échelle (puissance 10) qui indique le nombre de chiffres placés à droite du séparateur décimal.Les valeurs autorisées sont comprises entre 0 et 28 (inclus).</param>
      <param name="sign">Une valeur égale à 0 indique une valeur positive, tandis que la valeur 1 indique une valeur négative. </param>
      <param name="hi">32 bits de poids fort de <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" /> 96 bits. </param>
      <param name="mid">32 bits de poids moyen de <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" /> 96 bits. </param>
      <param name="low">32 bits de poids faible de <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" /> 96 bits. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scale" /> &gt; 28. </exception>
    </member>
    <member name="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value">
      <summary>Obtient la constante décimale stockée dans cet attribut.</summary>
      <returns>Constante décimale stockée dans cet attribut.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.DisablePrivateReflectionAttribute">
      <summary>Indique que tous les membres privés contenues dans les types d'un assembly ne sont pas disponibles à la réflexion. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.DisablePrivateReflectionAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la <see cref="T:System.Runtime.CompilerServices.DisablePrivateReflectionAttribute" /> classe. </summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.ExtensionAttribute">
      <summary>Indique qu'une méthode est une méthode d'extension ou qu'une classe ou un assembly contient des méthodes d'extension.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ExtensionAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.ExtensionAttribute" />. </summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.FixedBufferAttribute">
      <summary>Indique qu'un champ doit être traité comme contenant un nombre fixe d'éléments du type primitif spécifié.Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.FixedBufferAttribute.#ctor(System.Type,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.FixedBufferAttribute" />. </summary>
      <param name="elementType">Type des éléments contenus dans la mémoire tampon.</param>
      <param name="length">Nombre d'éléments contenus dans la mémoire tampon.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.FixedBufferAttribute.ElementType">
      <summary>Obtient le type des éléments contenus dans la mémoire tampon fixe. </summary>
      <returns>Type des éléments.</returns>
    </member>
    <member name="P:System.Runtime.CompilerServices.FixedBufferAttribute.Length">
      <summary>Obtient le nombre d'éléments contenus dans la mémoire tampon fixe. </summary>
      <returns>Nombre d'éléments contenus dans la mémoire tampon fixe.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.FormattableStringFactory">
      <summary>Fournit une méthode statique pour créer un objet <see cref="T:System.FormattableString" /> à partir d'une chaîne de format composite et de ses arguments. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.FormattableStringFactory.Create(System.String,System.Object[])">
      <summary>Crée une instance de <see cref="T:System.FormattableString" /> à partir d'une chaîne de format composite et de ses arguments. </summary>
      <returns>Objet qui représente la chaîne de format composite et ses arguments. </returns>
      <param name="format">Chaîne de format composite. </param>
      <param name="arguments">Les arguments dont les représentations sous forme de chaîne doivent être insérées dans la chaîne de résultat. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> a la valeur null. ou<paramref name="arguments" /> a la valeur null. </exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.IndexerNameAttribute">
      <summary>Indique le nom sous lequel un indexeur est connu dans des langages de programmation qui ne prennent pas directement en charge les indexeurs.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IndexerNameAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.IndexerNameAttribute" />.</summary>
      <param name="indexerName">Nom de l'indexeur tel que présenté à d'autres langages. </param>
    </member>
    <member name="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
      <summary>Indique que les types habituellement visibles uniquement dans l'assembly actuel sont également visibles dans un assembly spécifié.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> à l'aide du nom de l'assembly friend spécifié. </summary>
      <param name="assemblyName">Nom d'un assembly friend.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
      <summary>Obtient le nom de l'assembly friend dans lequel tous les types et membres de type marqués avec le mot clé internal doivent être visibles. </summary>
      <returns>Chaîne représentant le nom de l'assembly friend.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.IsConst">
      <summary>Indique que le type modifié a un modificateur const.Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.IStrongBox">
      <summary>Définit une propriété pour accéder à la valeur à laquelle un objet fait référence.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.CompilerServices.IStrongBox.Value">
      <summary>Obtient ou définit la valeur à laquelle un objet fait référence.</summary>
      <returns>Valeur à laquelle l'objet fait référence.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.IsVolatile">
      <summary>Marque un champ comme volatile.Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
      <summary>Indique si une méthode en Visual Basic est marquée avec le modificateur Iterator.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IteratorStateMachineAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute" />.</summary>
      <param name="stateMachineType">Objet de type du type de machine à états sous-jacent utilisé pour implémenter une méthode de machine à états.</param>
    </member>
    <member name="T:System.Runtime.CompilerServices.MethodImplAttribute">
      <summary>Spécifie les détails d'implémentation d'une méthode.Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.MethodImplAttribute.#ctor(System.Runtime.CompilerServices.MethodImplOptions)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.MethodImplAttribute" /> avec la valeur <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" /> spécifiée.</summary>
      <param name="methodImplOptions">Valeur <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" /> qui spécifie les propriétés de la méthode avec attributs. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.MethodImplAttribute.Value">
      <summary>Obtient la valeur <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" /> qui décrit la méthode avec attributs.</summary>
      <returns>Valeur <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" /> décrivant la méthode avec attributs.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.MethodImplOptions">
      <summary>Définit les détails d'implémentation d'une méthode.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining">
      <summary>La méthode doit être « inline », si possible.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.NoInlining">
      <summary>La méthode ne peut pas être « inline ».La fonctionnalité inline est une optimisation par laquelle un appel de méthode est remplacé par le corps de la méthode.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.NoOptimization">
      <summary>La méthode n'est pas optimisée par le compilateur juste-à-temps ou par la génération de code natif (consultez Ngen.exe) lors du débogage des problèmes de génération de code potentiels.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.PreserveSig">
      <summary>La signature de la méthode est exportée exactement telle que déclarée.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.ReferenceAssemblyAttribute">
      <summary>Identifie un assembly en tant qu'assembly de référence, qui contient des métadonnées mais pas de code exécutable.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ReferenceAssemblyAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.ReferenceAssemblyAttribute" />. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ReferenceAssemblyAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.ReferenceAssemblyAttribute" /> en utilisant la description spécifiée. </summary>
      <param name="description">Description de l'assembly de référence. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.ReferenceAssemblyAttribute.Description">
      <summary>Obtient la description de l'assembly de référence.</summary>
      <returns>Description de l'assembly de référence.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
      <summary>Spécifie s'il faut encapsuler les exceptions qui ne dérivent pas de la classe <see cref="T:System.Exception" /> avec un objet <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" />.Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" />. </summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.WrapNonExceptionThrows">
      <summary>Obtient ou définit une valeur qui indique s'il faut encapsuler les exceptions qui ne dérivent pas de la classe <see cref="T:System.Exception" /> avec un objet <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" />.</summary>
      <returns>true si les exceptions qui ne dérivent pas de la classe <see cref="T:System.Exception" /> doivent apparaître encapsulées avec un objet <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" />; sinon, false.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.RuntimeHelpers">
      <summary>Fournit un ensemble de propriétés et de méthodes statiques pour assurer la prise en charge des compilateurs.Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.EnsureSufficientExecutionStack">
      <summary>Garantit que l'espace de pile restant est suffisant pour exécuter la fonction .NET Framework moyenne.</summary>
      <exception cref="T:System.InsufficientExecutionStackException">L'espace de pile disponible est insuffisant pour exécuter la fonction .NET Framework moyenne.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(System.Object)">
      <summary>Sert de fonction de hachage pour un objet particulier et convient à une utilisation dans les algorithmes et les structures de données qui utilisent les codes de hachage, comme une table de hachage.</summary>
      <returns>Code de hachage pour l'objet identifié par le paramètre <paramref name="o" />.</returns>
      <param name="o">Objet pour lequel récupérer le code de hachage. </param>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.GetObjectValue(System.Object)">
      <summary>Convertit un type valeur.</summary>
      <returns>Copie convertie de <paramref name="obj" /> s'il s'agit d'une classe de valeur ; sinon, <paramref name="obj" /> lui-même.</returns>
      <param name="obj">Type valeur à convertir. </param>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.InitializeArray(System.Array,System.RuntimeFieldHandle)">
      <summary>Fournit un moyen rapide d'initialiser un tableau à partir de données stockées dans un module.</summary>
      <param name="array">Tableau à initialiser. </param>
      <param name="fldHandle">Handle de champ qui spécifie l'emplacement des données utilisées pour l'initialisation du tableau. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.RuntimeHelpers.OffsetToStringData">
      <summary>Obtient l'offset, en octets, jusqu'aux données figurant dans la chaîne donnée.</summary>
      <returns>Offset, en octets, à partir du début de l'objet <see cref="T:System.String" /> jusqu'au premier caractère de la chaîne.</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(System.RuntimeTypeHandle)">
      <summary>Exécute une méthode de constructeur de classe spécifiée.</summary>
      <param name="type">Handle de type qui spécifie la méthode de constructeur de classe à exécuter. </param>
      <exception cref="T:System.TypeInitializationException">L'initialiseur de classe lève une exception. </exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.StateMachineAttribute">
      <summary>Permet de déterminer si une méthode est une méthode de machine à états.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.StateMachineAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.StateMachineAttribute" />.</summary>
      <param name="stateMachineType">Objet de type pour le type sous-jacent de machine à états sous-jacent qui a été généré par le compilateur pour implémenter la méthode de machine à états.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.StateMachineAttribute.StateMachineType">
      <summary>Retourne l'objet de type pour le type de machine à états sous-jacent qui a été généré par le compilateur pour implémenter la méthode de machine à états.</summary>
      <returns>Obtient l'objet de type pour le type sous-jacent de machine à états sous-jacent qui a été généré par le compilateur pour implémenter la méthode de machine à états.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.StrongBox`1">
      <summary>Contient une référence à une valeur.</summary>
      <typeparam name="T">Type de la valeur à laquelle <see cref="T:System.Runtime.CompilerServices.StrongBox`1" /> fait référence.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.CompilerServices.StrongBox`1.#ctor">
      <summary>Initialise un nouveau StrongBox qui peut recevoir une valeur en cas d'utilisation dans un appel de référence.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.StrongBox`1.#ctor(`0)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.StrongBox`1" /> à l'aide de la valeur fournie. </summary>
      <param name="value">Valeur à laquelle <see cref="T:System.Runtime.CompilerServices.StrongBox`1" /> fera référence.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.CompilerServices.StrongBox`1.System#Runtime#CompilerServices#IStrongBox#Value">
      <summary>Obtient ou définit la valeur à laquelle <see cref="T:System.Runtime.CompilerServices.StrongBox`1" /> fait référence.</summary>
      <returns>Valeur à laquelle <see cref="T:System.Runtime.CompilerServices.StrongBox`1" /> fait référence.</returns>
    </member>
    <member name="F:System.Runtime.CompilerServices.StrongBox`1.Value">
      <summary>Représente la valeur à laquelle <see cref="T:System.Runtime.CompilerServices.StrongBox`1" /> fait référence.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.TypeForwardedFromAttribute">
      <summary>Spécifie un <see cref="T:System.Type" /> source dans un autre assembly. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.TypeForwardedFromAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.TypeForwardedFromAttribute" />. </summary>
      <param name="assemblyFullName">
        <see cref="T:System.Type" /> source dans un autre assembly. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFullName" /> est null ou vide.</exception>
    </member>
    <member name="P:System.Runtime.CompilerServices.TypeForwardedFromAttribute.AssemblyFullName">
      <summary>Obtient le nom qualifié de l'assembly du type source.</summary>
      <returns>Nom qualifié de l'assembly du type source.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.TypeForwardedToAttribute">
      <summary>Spécifie un <see cref="T:System.Type" /> de destination dans un autre assembly. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.TypeForwardedToAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.TypeForwardedToAttribute" /> en spécifiant un <see cref="T:System.Type" /> de destination. </summary>
      <param name="destination">
        <see cref="T:System.Type" /> de destination dans un autre assembly.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.TypeForwardedToAttribute.Destination">
      <summary>Obtient le <see cref="T:System.Type" /> de destination dans un autre assembly.</summary>
      <returns>
        <see cref="T:System.Type" /> de destination dans un autre assembly.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.UnsafeValueTypeAttribute">
      <summary>Spécifie qu'un type contient un tableau non managé susceptible de déborder.Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.UnsafeValueTypeAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.UnsafeValueTypeAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo">
      <summary>Représente une exception dont l'état est capturé à un certain point du code. </summary>
    </member>
    <member name="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
      <summary>Crée un objet <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /> qui représente l'exception spécifiée au point actuel dans le code. </summary>
      <returns>Objet qui représente l'exception spécifiée au point actuel dans le code. </returns>
      <param name="source">Exception dont l'état est capturé et qui est représentée par l'objet retourné. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> a la valeur null. </exception>
    </member>
    <member name="P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException">
      <summary>Obtient l'exception qui est représentée par l'instance actuelle. </summary>
      <returns>Exception qui est représentée par l'instance actuelle. </returns>
    </member>
    <member name="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw">
      <summary>Lève l'exception qui est représentée par l'objet <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /> actuel, après avoir restauré l'état qui a été enregistré lorsque l'exception a été capturée. </summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CharSet">
      <summary>Dicte le jeu de caractères utilisé par les chaînes marshalées.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CharSet.Ansi">
      <summary>Les chaînes sont marshalées sous forme de chaînes de caractères à plusieurs octets.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CharSet.Unicode">
      <summary>Les chaînes sont marshalées sous forme de caractères Unicode de 2 octets.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComVisibleAttribute">
      <summary>Contrôle l'accessibilité à COM d'un type ou membre managé individuel ou de tous les types d'un assembly.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComVisibleAttribute.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe ComVisibleAttribute.</summary>
      <param name="visibility">true pour indiquer que le type est visible par COM ; sinon false.La valeur par défaut est true.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComVisibleAttribute.Value">
      <summary>Obtient une valeur indiquant si le type est visible par COM.</summary>
      <returns>true si le type est visible ; sinon false.La valeur par défaut est true.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.FieldOffsetAttribute">
      <summary>Indique la position physique des champs dans la représentation non managée d'une classe ou d'une structure.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.FieldOffsetAttribute.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.InteropServices.FieldOffsetAttribute" /> avec l'offset entre le début de la structure et celui du champ.</summary>
      <param name="offset">Offset, en octets, du début de la structure au début du champ. </param>
    </member>
    <member name="P:System.Runtime.InteropServices.FieldOffsetAttribute.Value">
      <summary>Obtient l'offset du début de la structure au début du champ.</summary>
      <returns>Offset du début de la structure au début du champ.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.LayoutKind">
      <summary>Contrôle la disposition d'un objet lorsqu'il est exporté dans du code non managé.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.LayoutKind.Auto">
      <summary>Le runtime sélectionne automatiquement une disposition appropriée pour les membres d'un objet en mémoire non managée.Les objets définis avec ce membre d'énumération ne peuvent être exposés en dehors du code managé.Une telle tentative génère une exception.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.LayoutKind.Explicit">
      <summary>La position précise de chaque membre d'un objet dans la mémoire non managée est explicitement contrôlée, en fonction du paramètre du champ <see cref="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack" />.Chaque membre doit utiliser <see cref="T:System.Runtime.InteropServices.FieldOffsetAttribute" /> pour indiquer la position de ce champ dans le type.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.LayoutKind.Sequential">
      <summary>Les membres de l'objet sont disposés séquentiellement, en respectant l'ordre dans lequel ils apparaissent lors de l'exportation dans la mémoire non managée.Les membres sont disposés selon la compression spécifiée dans <see cref="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack" /> et peuvent être non contigus.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.OutAttribute">
      <summary>Indique que les données doivent être marshalées de l'appelé vers l'appelant.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.OutAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.InteropServices.OutAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.StructLayoutAttribute">
      <summary>Vous permet de contrôler la disposition physique des champs de données d'une classe ou d'une structure en mémoire.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> avec le membre de l'énumération <see cref="T:System.Runtime.InteropServices.LayoutKind" /> spécifié.</summary>
      <param name="layoutKind">L'une des valeurs d'énumération qui spécifie le mode de disposition de la classe ou de la structure. </param>
    </member>
    <member name="F:System.Runtime.InteropServices.StructLayoutAttribute.CharSet">
      <summary>Indique si les champs de données de type chaîne de la classe doivent être marshalés en tant que LPWSTR ou LPSTR par défaut.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack">
      <summary>Contrôle l'alignement des champs de données d'une classe ou d'une structure en mémoire.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.StructLayoutAttribute.Size">
      <summary>Indique la taille absolue de la classe ou la structure.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.StructLayoutAttribute.Value">
      <summary>Obtient la valeur <see cref="T:System.Runtime.InteropServices.LayoutKind" /> qui spécifie la façon dont la classe ou la structure est disposée.</summary>
      <returns>L'une des valeurs d'énumération qui spécifie le mode de disposition de la classe ou de la structure.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.TargetFrameworkAttribute">
      <summary>Identifie la version du .NET Framework sur laquelle un assembly particulier a été compilé.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.TargetFrameworkAttribute.#ctor(System.String)">
      <summary>Initialise une instance de la classe <see cref="T:System.Runtime.Versioning.TargetFrameworkAttribute" /> en spécifiant la version du .NET Framework sur laquelle un assembly a été généré.</summary>
      <param name="frameworkName">Version du .NET Framework sur laquelle l'assembly a été généré.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="frameworkName" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName">
      <summary>Obtient le nom complet de la version du .NET Framework sur laquelle un assembly a été généré.</summary>
      <returns>Nom complet de la version du .NET Framework.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName">
      <summary>Obtient le nom de la version du .NET Framework sur laquelle un assembly particulier a été compilé.</summary>
      <returns>Nom de la version du .NET Framework avec laquelle l'assembly a été compilé.</returns>
    </member>
    <member name="T:System.Security.AllowPartiallyTrustedCallersAttribute">
      <summary>Autorise un assembly à être appelé par du code de niveau de confiance partiel.Sans cette déclaration, seuls des appelants entièrement fiables sont en mesure d'utiliser de tels assemblys.Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.AllowPartiallyTrustedCallersAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" />. </summary>
    </member>
    <member name="T:System.Security.SecurityCriticalAttribute">
      <summary>Spécifie qu'un code ou un assembly exécute des opérations critiques de sécurité.</summary>
    </member>
    <member name="M:System.Security.SecurityCriticalAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.SecurityCriticalAttribute" />. </summary>
    </member>
    <member name="T:System.Security.SecurityException">
      <summary>Exception levée lorsqu'une erreur de sécurité est détectée.</summary>
    </member>
    <member name="M:System.Security.SecurityException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.SecurityException" /> avec des propriétés par défaut.</summary>
    </member>
    <member name="M:System.Security.SecurityException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.SecurityException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
    </member>
    <member name="M:System.Security.SecurityException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.SecurityException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="inner">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="inner" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="M:System.Security.SecurityException.ToString">
      <summary>Retourne une représentation du <see cref="T:System.Security.SecurityException" /> en cours.</summary>
      <returns>Représentation sous forme de chaîne du <see cref="T:System.Security.SecurityException" /> actuel.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.Security.SecuritySafeCriticalAttribute">
      <summary>Identifie les types ou les membres comme étant critiques de sécurité et accessibles sans risque par du code transparent.</summary>
    </member>
    <member name="M:System.Security.SecuritySafeCriticalAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.SecuritySafeCriticalAttribute" />. </summary>
    </member>
    <member name="T:System.Security.SecurityTransparentAttribute">
      <summary>Spécifie qu'un assembly ne peut pas provoquer une élévation de privilège. </summary>
    </member>
    <member name="M:System.Security.SecurityTransparentAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.SecurityTransparentAttribute" />. </summary>
    </member>
    <member name="T:System.Security.VerificationException">
      <summary>Exception qui est levée lorsque la stratégie de sécurité nécessite que du code soit de type sécurisé et que le processus de vérification est incapable de vérifier que le code est de type sécurisé.</summary>
    </member>
    <member name="M:System.Security.VerificationException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.VerificationException" /> avec des propriétés par défaut.</summary>
    </member>
    <member name="M:System.Security.VerificationException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.VerificationException" /> avec un message d'explications.</summary>
      <param name="message">Message indiquant la raison pour laquelle l'exception s'est produite. </param>
    </member>
    <member name="M:System.Security.VerificationException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.VerificationException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception. </param>
      <param name="innerException">Exception qui constitue la cause de l'exception actuelle.Si le paramètre <paramref name="innerException" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Text.StringBuilder">
      <summary>Représente une chaîne de caractères mutable.Cette classe ne peut pas être héritée.Pour parcourir le code source de .NET Framework pour ce type, consultez la Source de référence.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.StringBuilder" />.</summary>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.StringBuilder" /> à l'aide de la capacité spécifiée.</summary>
      <param name="capacity">Taille de départ suggérée de cette instance. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> est inférieur à zéro. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.StringBuilder" /> qui commence avec une capacité spécifiée et peut croître jusqu'à un maximum spécifié.</summary>
      <param name="capacity">Taille de départ suggérée de <see cref="T:System.Text.StringBuilder" />. </param>
      <param name="maxCapacity">Nombre maximal de caractères que la chaîne en cours peut contenir. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxCapacity" /> est inférieur à un, <paramref name="capacity" /> est inférieur à zéro ou <paramref name="capacity" /> est supérieur à <paramref name="maxCapacity" />. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.StringBuilder" /> à l'aide de la chaîne spécifiée.</summary>
      <param name="value">Chaîne utilisée pour initialiser la valeur de l'instance.Si <paramref name="value" /> est null, le nouveau <see cref="T:System.Text.StringBuilder" /> contient la chaîne vide (il contient <see cref="F:System.String.Empty" />).</param>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.StringBuilder" /> avec la chaîne et la capacité spécifiées.</summary>
      <param name="value">Chaîne utilisée pour initialiser la valeur de l'instance.Si <paramref name="value" /> est null, le nouveau <see cref="T:System.Text.StringBuilder" /> contient la chaîne vide (il contient <see cref="F:System.String.Empty" />).</param>
      <param name="capacity">Taille de départ suggérée de <see cref="T:System.Text.StringBuilder" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> est inférieur à zéro. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.StringBuilder" /> à partir de la sous-chaîne et de la capacité spécifiées.</summary>
      <param name="value">Chaîne contenant la sous-chaîne utilisée pour initialiser la valeur de l'instance.Si <paramref name="value" /> est null, le nouveau <see cref="T:System.Text.StringBuilder" /> contient la chaîne vide (il contient <see cref="F:System.String.Empty" />).</param>
      <param name="startIndex">Position au sein de <paramref name="value" /> où commence la sous-chaîne. </param>
      <param name="length">Nombre de caractères dans la sous-chaîne. </param>
      <param name="capacity">Taille de départ suggérée de <see cref="T:System.Text.StringBuilder" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> est inférieur à zéro.ou <paramref name="startIndex" /> plus <paramref name="length" /> ne correspond pas à une position dans <paramref name="value" />. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Boolean)">
      <summary>Ajoute à cette instance la représentation sous forme de chaîne d'une valeur booléenne spécifiée.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Valeur booléenne à ajouter. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Byte)">
      <summary>Ajoute à cette instance la représentation sous forme de chaîne d'un entier 8 bits non signé spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Valeur à ajouter. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char)">
      <summary>Ajoute à cette instance la représentation sous forme de chaîne d'un caractère Unicode spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Caractère Unicode à ajouter. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
      <summary>Ajoute un tableau de caractères Unicode commençant à une adresse spécifiée à cette instance. </summary>
      <returns>Référence à cette instance après l'opération d'ajout. </returns>
      <param name="value">Pointeur vers un tableau de caractères. </param>
      <param name="valueCount">Le nombre de caractères dans le tableau. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="valueCount" /> est inférieur à zéro. ouUne augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="value" />est un pointeur null. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
      <summary>Ajoute à cette instance un nombre spécifié de copies de la représentation sous forme de chaîne d'un caractère Unicode.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Caractère à ajouter. </param>
      <param name="repeatCount">Nombre d'ajouts de <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="repeatCount" /> est inférieur à zéro.ou Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <exception cref="T:System.OutOfMemoryException">Mémoire insuffisante.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char[])">
      <summary>Ajoute à cette instance la représentation sous forme de chaîne des caractères Unicode d'un tableau spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Tableau de caractères à ajouter. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
      <summary>Ajoute à cette instance la représentation sous forme de chaîne d'un sous-tableau spécifié de caractères Unicode.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Tableau de caractères. </param>
      <param name="startIndex">Position de départ dans <paramref name="value" />. </param>
      <param name="charCount">Nombre de caractères à ajouter. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> est null et <paramref name="startIndex" /> comme <paramref name="charCount" /> sont différents de zéro. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charCount" /> est inférieur à zéro.ou <paramref name="startIndex" /> est inférieur à zéro.ou <paramref name="startIndex" /> + <paramref name="charCount" /> est supérieur à la longueur de <paramref name="value" />.ou Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Decimal)">
      <summary>Ajoute à cette instance la représentation sous forme de chaîne d'un nombre décimal spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Valeur à ajouter. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Double)">
      <summary>Ajoute à cette instance la représentation sous forme de chaîne d'un nombre à virgule flottante double précision spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Valeur à ajouter. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Int16)">
      <summary>Ajoute à cette instance la représentation sous forme de chaîne d'un entier 16 bits signé spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Valeur à ajouter. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Int32)">
      <summary>Ajoute à cette instance la représentation sous forme de chaîne d'un entier 32 bits signé spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Valeur à ajouter. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Int64)">
      <summary>Ajoute à cette instance la représentation sous forme de chaîne d'un entier 64 bits signé spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Valeur à ajouter. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Object)">
      <summary>Ajoute à cette instance la représentation sous forme de chaîne d'un objet spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Objet à ajouter. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.SByte)">
      <summary>Ajoute à cette instance la représentation sous forme de chaîne d'un entier 8 bits signé spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Valeur à ajouter. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Single)">
      <summary>Ajoute à cette instance la représentation sous forme de chaîne d'un nombre à virgule flottante simple précision spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Valeur à ajouter. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.String)">
      <summary>Ajoute à cette instance une copie de la chaîne spécifiée.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Chaîne à ajouter. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
      <summary>Ajoute à cette instance une copie d'une sous-chaîne spécifiée.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Chaîne qui contient la sous-chaîne à ajouter. </param>
      <param name="startIndex">Position de départ de la sous-chaîne dans <paramref name="value" />. </param>
      <param name="count">Nombre de caractères de <paramref name="value" /> à ajouter. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> est null et <paramref name="startIndex" /> comme <paramref name="count" /> sont différents de zéro. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> est inférieur à zéro.ou <paramref name="startIndex" /> est inférieur à zéro.ou <paramref name="startIndex" /> + <paramref name="count" /> est supérieur à la longueur de <paramref name="value" />.ou Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.UInt16)">
      <summary>Ajoute à cette instance la représentation sous forme de chaîne d'un entier 16 bits non signé spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Valeur à ajouter. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.UInt32)">
      <summary>Ajoute à cette instance la représentation sous forme de chaîne d'un entier 32 bits non signé spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Valeur à ajouter. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.UInt64)">
      <summary>Ajoute à cette instance la représentation sous forme de chaîne d'un entier 64 bits non signé spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Valeur à ajouter. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
      <summary>Ajoute à cette instance la chaîne retournée par le traitement d'une chaîne de format composite, qui contient un nombre supérieur ou égal à zéro d'éléments de mise en forme.Chaque élément de format est remplacé par la représentation sous forme de chaîne d'un argument unique à l'aide d'un fournisseur de format spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.Après l'opération d'ajout, cette instance contient les données qui existaient avant l'opération, suivie d'une copie de <paramref name="format" /> format dans lequel toute spécification est remplacée par la représentation sous forme de chaîne de <paramref name="arg0" />.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <param name="format">Chaîne de format composite (consultez la section Notes). </param>
      <param name="arg0">Objet à mettre en forme. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> a la valeur null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> n'est pas valide. ouL'index d'un élément de format est inférieur à 0 (zéro), ou supérieur ou égal à un (1). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la chaîne développée dépasserait <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
      <summary>Ajoute à cette instance la chaîne retournée par le traitement d'une chaîne de format composite, qui contient un nombre supérieur ou égal à zéro d'éléments de mise en forme.Chaque élément de format est remplacé par la représentation sous forme de chaîne d'un des deux arguments à l'aide d'un fournisseur de format spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.Après l'opération d'ajout, cette instance contient les données ayant existé avant l'opération, suffixées par une copie de <paramref name="format" /> où la spécification de format est remplacée par la représentation sous forme de chaîne de l'argument objet correspondant.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <param name="format">Chaîne de format composite (consultez la section Notes). </param>
      <param name="arg0">Premier objet à mettre en forme. </param>
      <param name="arg1">Deuxième objet à mettre en forme. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> a la valeur null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> n'est pas valide. ouL'index d'un élément de format est inférieur à 0 (zéro), ou supérieur ou égal à 2 (deux). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la chaîne développée dépasserait <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
      <summary>Ajoute à cette instance la chaîne retournée par le traitement d'une chaîne de format composite, qui contient un nombre supérieur ou égal à zéro d'éléments de mise en forme.Chaque élément de format est remplacé par la représentation sous forme de chaîne d'un des trois arguments à l'aide d'un fournisseur de format spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.Après l'opération d'ajout, cette instance contient les données ayant existé avant l'opération, suffixées par une copie de <paramref name="format" /> où la spécification de format est remplacée par la représentation sous forme de chaîne de l'argument objet correspondant.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <param name="format">Chaîne de format composite (consultez la section Notes). </param>
      <param name="arg0">Premier objet à mettre en forme. </param>
      <param name="arg1">Deuxième objet à mettre en forme. </param>
      <param name="arg2">Troisième objet à mettre en forme. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> a la valeur null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> n'est pas valide. ouL'index d'un élément de format est inférieur à 0 (zéro), ou supérieur ou égal à 3 (trois). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la chaîne développée dépasserait <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
      <summary>Ajoute à cette instance la chaîne retournée par le traitement d'une chaîne de format composite, qui contient un nombre supérieur ou égal à zéro d'éléments de mise en forme.Chaque élément de mise en forme est remplacé par la représentation sous forme de chaîne d'un argument correspondant dans un tableau de paramètres à l'aide d'un fournisseur de format spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.Après l'opération d'ajout, cette instance contient les données ayant existé avant l'opération, suffixées par une copie de <paramref name="format" /> où la spécification de format est remplacée par la représentation sous forme de chaîne de l'argument objet correspondant.</returns>
      <param name="provider">Objet qui fournit des informations de mise en forme propres à la culture. </param>
      <param name="format">Chaîne de format composite (consultez la section Notes). </param>
      <param name="args">Tableau d'objets à mettre en forme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> a la valeur null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> n'est pas valide. ouL'index d'un élément de mise en forme est inférieur à 0 (zéro), ou supérieur ou égal à la longueur du tableau <paramref name="args" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la chaîne développée dépasserait <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
      <summary>Ajoute à cette instance la chaîne retournée par le traitement d'une chaîne de format composite, qui contient un nombre supérieur ou égal à zéro d'éléments de mise en forme.Chaque élément de format est remplacé par la représentation sous forme de chaîne d'un argument unique.</summary>
      <returns>Référence à cette instance après l'ajout de <paramref name="format" />.Chaque élément de format dans <paramref name="format" /> est remplacé par la représentation sous forme de chaîne de <paramref name="arg0" />.</returns>
      <param name="format">Chaîne de format composite (consultez la section Notes). </param>
      <param name="arg0">Objet à mettre en forme. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> a la valeur null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> n'est pas valide. ouL'index d'un élément de mise en forme est inférieur à 0 (zéro), ou supérieur ou égal à 1.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la chaîne développée dépasserait <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
      <summary>Ajoute à cette instance la chaîne retournée par le traitement d'une chaîne de format composite, qui contient un nombre supérieur ou égal à zéro d'éléments de mise en forme.Chaque élément de format est remplacé par la représentation sous forme de chaîne de l'un des deux arguments possibles.</summary>
      <returns>Référence à cette instance après l'ajout de <paramref name="format" />.Chaque élément de mise en forme de <paramref name="format" /> est remplacé par la représentation sous forme de chaîne de l'argument objet correspondant.</returns>
      <param name="format">Chaîne de format composite (consultez la section Notes). </param>
      <param name="arg0">Premier objet à mettre en forme. </param>
      <param name="arg1">Deuxième objet à mettre en forme. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> a la valeur null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> n'est pas valide.ouL'index d'un élément de mise en forme est inférieur à 0 (zéro), ou supérieur ou égal à 2. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la chaîne développée dépasserait <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
      <summary>Ajoute à cette instance la chaîne retournée par le traitement d'une chaîne de format composite, qui contient un nombre supérieur ou égal à zéro d'éléments de mise en forme.Chaque élément de format est remplacé par la représentation sous forme de chaîne de l'un des trois arguments possibles.</summary>
      <returns>Référence à cette instance après l'ajout de <paramref name="format" />.Chaque élément de mise en forme de <paramref name="format" /> est remplacé par la représentation sous forme de chaîne de l'argument objet correspondant.</returns>
      <param name="format">Chaîne de format composite (consultez la section Notes). </param>
      <param name="arg0">Premier objet à mettre en forme. </param>
      <param name="arg1">Deuxième objet à mettre en forme. </param>
      <param name="arg2">Troisième objet à mettre en forme. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> a la valeur null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> n'est pas valide.ouL'index d'un élément de mise en forme est inférieur à 0 (zéro), ou supérieur ou égal à 3.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la chaîne développée dépasserait <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
      <summary>Ajoute à cette instance la chaîne retournée par le traitement d'une chaîne de format composite, qui contient un nombre supérieur ou égal à zéro d'éléments de mise en forme.Chaque élément de mise en forme est remplacé par la représentation sous forme de chaîne d'un argument correspondant dans un tableau de paramètres.</summary>
      <returns>Référence à cette instance après l'ajout de <paramref name="format" />.Chaque élément de mise en forme de <paramref name="format" /> est remplacé par la représentation sous forme de chaîne de l'argument objet correspondant.</returns>
      <param name="format">Chaîne de format composite (consultez la section Notes). </param>
      <param name="args">Tableau d'objets à mettre en forme. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> ou <paramref name="args" /> est null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> n'est pas valide. ouL'index d'un élément de mise en forme est inférieur à 0 (zéro), ou supérieur ou égal à la longueur du tableau <paramref name="args" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la chaîne développée dépasserait <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendLine">
      <summary>Ajoute la marque de fin de ligne par défaut à la fin de l'objet <see cref="T:System.Text.StringBuilder" /> en cours.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendLine(System.String)">
      <summary>Ajoute une copie de la chaîne spécifiée suivie de la marque de fin de ligne par défaut à la fin de l'objet <see cref="T:System.Text.StringBuilder" /> actif.</summary>
      <returns>Référence à cette instance après l'opération d'ajout.</returns>
      <param name="value">Chaîne à ajouter. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.Capacity">
      <summary>Obtient ou définit le nombre maximal de caractères que peut contenir la mémoire allouée par l'instance actuelle.</summary>
      <returns>Nombre maximal de caractères que peut contenir la mémoire allouée par l'instance actuelle.Sa valeur peut être comprise <see cref="P:System.Text.StringBuilder.Length" /> à <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée pour une opération ensembliste est inférieure à la longueur actuelle de cette instance.ou La valeur spécifiée pour une opération ensembliste est supérieure à la capacité maximale. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.Chars(System.Int32)">
      <summary>Obtient ou définit le caractère situé à la position de caractère spécifiée dans cette instance.</summary>
      <returns>Caractère Unicode à la position <paramref name="index" />.</returns>
      <param name="index">Position du caractère. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est en dehors des limites de cette instance lors de la définition d'un caractère. </exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> est en dehors des limites de cette instance lors de l'obtention d'un caractère. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Clear">
      <summary>Supprime tous les caractères de l'instance <see cref="T:System.Text.StringBuilder" /> actuelle.</summary>
      <returns>Objet dont la <see cref="P:System.Text.StringBuilder.Length" /> est de 0 (zéro).</returns>
    </member>
    <member name="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>Copie les caractères d'un segment spécifié de cette instance vers un segment spécifié d'un tableau <see cref="T:System.Char" /> de destination.</summary>
      <param name="sourceIndex">Position de départ dans cette instance à partir de laquelle les caractères sont copiés.L'index est de base zéro.</param>
      <param name="destination">Tableau vers lequel les caractères sont copiés.</param>
      <param name="destinationIndex">Position de départ dans <paramref name="destination" /> où les caractères sont copiés.L'index est de base zéro.</param>
      <param name="count">Nombre de caractères à copier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" />, <paramref name="destinationIndex" /> ou <paramref name="count" /> est inférieur à zéro.ou<paramref name="sourceIndex" /> est supérieur à la longueur de cette instance.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceIndex" /> + <paramref name="count" /> est supérieur à la longueur de cette instance.ou<paramref name="destinationIndex" /> + <paramref name="count" /> est supérieur à la longueur de <paramref name="destination" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
      <summary>Garantit que la capacité de cette instance de <see cref="T:System.Text.StringBuilder" /> est au moins égale à la valeur spécifiée.</summary>
      <returns>Nouvelle capacité de cette instance.</returns>
      <param name="capacity">Capacité minimale à garantir. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> est inférieur à zéro.ou Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
      <summary>Retourne une valeur indiquant si cette instance équivaut à un objet spécifié.</summary>
      <returns>true si cette instance et <paramref name="sb" /> ont des valeurs de chaîne, de <see cref="P:System.Text.StringBuilder.Capacity" /> et de <see cref="P:System.Text.StringBuilder.MaxCapacity" /> égales ; sinon, false.</returns>
      <param name="sb">Objet à comparer à cette instance ou null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
      <summary>Insère dans cette instance, à la position de caractère spécifiée, la représentation sous forme de chaîne d'une valeur booléenne.</summary>
      <returns>Référence à cette instance après l'opération d'insertion.</returns>
      <param name="index">Position dans cette instance où commence l'insertion. </param>
      <param name="value">Valeur à insérer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la longueur de cette instance.</exception>
      <exception cref="T:System.OutOfMemoryException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
      <summary>Insère dans cette instance, à la position de caractère spécifiée, la représentation sous forme de chaîne d'un entier non signé de 8 bits spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'insertion.</returns>
      <param name="index">Position dans cette instance où commence l'insertion. </param>
      <param name="value">Valeur à insérer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la longueur de cette instance. </exception>
      <exception cref="T:System.OutOfMemoryException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
      <summary>Insère dans cette instance, à la position de caractère spécifiée, la représentation sous forme de chaîne d'un caractère Unicode spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'insertion.</returns>
      <param name="index">Position dans cette instance où commence l'insertion. </param>
      <param name="value">Valeur à insérer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la longueur de cette instance.ou Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
      <summary>Insère dans cette instance, à la position de caractère spécifiée, la représentation sous forme de chaîne d'un tableau de caractères Unicode spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'insertion.</returns>
      <param name="index">Position dans cette instance où commence l'insertion. </param>
      <param name="value">Tableau de caractères à insérer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la longueur de cette instance.ou Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>Insère dans cette instance, à la position de caractère spécifiée, la représentation sous forme de chaîne d'un sous-tableau de caractères Unicode spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'insertion.</returns>
      <param name="index">Position dans cette instance où commence l'insertion. </param>
      <param name="value">Tableau de caractères. </param>
      <param name="startIndex">Index de départ dans <paramref name="value" />. </param>
      <param name="charCount">Nombre de caractères à insérer. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> est null et <paramref name="startIndex" /> comme <paramref name="charCount" /> sont différents de zéro. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />, <paramref name="startIndex" /> ou <paramref name="charCount" /> est inférieur à zéro.ou <paramref name="index" /> est supérieur à la longueur de cette instance.ou <paramref name="startIndex" /> plus <paramref name="charCount" /> ne correspond pas à une position dans <paramref name="value" />.ou Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
      <summary>Insère dans cette instance, à la position de caractère spécifiée, la représentation sous forme de chaîne d'un nombre décimal.</summary>
      <returns>Référence à cette instance après l'opération d'insertion.</returns>
      <param name="index">Position dans cette instance où commence l'insertion. </param>
      <param name="value">Valeur à insérer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la longueur de cette instance. </exception>
      <exception cref="T:System.OutOfMemoryException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
      <summary>Insère dans cette instance, à la position de caractère spécifiée, la représentation sous forme de chaîne d'un nombre à virgule flottante double précision.</summary>
      <returns>Référence à cette instance après l'opération d'insertion.</returns>
      <param name="index">Position dans cette instance où commence l'insertion. </param>
      <param name="value">Valeur à insérer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la longueur de cette instance. </exception>
      <exception cref="T:System.OutOfMemoryException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
      <summary>Insère dans cette instance, à la position de caractère spécifiée, la représentation sous forme de chaîne d'un entier signé 16 bits spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'insertion.</returns>
      <param name="index">Position dans cette instance où commence l'insertion. </param>
      <param name="value">Valeur à insérer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la longueur de cette instance. </exception>
      <exception cref="T:System.OutOfMemoryException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
      <summary>Insère dans cette instance, à la position de caractère spécifiée, la représentation sous forme de chaîne d'un entier signé 32 bits spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'insertion.</returns>
      <param name="index">Position dans cette instance où commence l'insertion. </param>
      <param name="value">Valeur à insérer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la longueur de cette instance. </exception>
      <exception cref="T:System.OutOfMemoryException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
      <summary>Insère dans cette instance, à la position de caractère spécifiée, la représentation sous forme de chaîne d'un entier signé de 64 bits.</summary>
      <returns>Référence à cette instance après l'opération d'insertion.</returns>
      <param name="index">Position dans cette instance où commence l'insertion. </param>
      <param name="value">Valeur à insérer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la longueur de cette instance. </exception>
      <exception cref="T:System.OutOfMemoryException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
      <summary>Insère dans cette instance, à la position de caractère spécifiée, la représentation sous forme de chaîne d'un objet.</summary>
      <returns>Référence à cette instance après l'opération d'insertion.</returns>
      <param name="index">Position dans cette instance où commence l'insertion. </param>
      <param name="value">Objet à insérer ou null. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la longueur de cette instance. </exception>
      <exception cref="T:System.OutOfMemoryException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
      <summary>Insère dans cette instance, à la position de caractère spécifiée, la représentation sous forme de chaîne d'un entier signé 8 bits spécifié.</summary>
      <returns>Référence à cette instance après l'opération d'insertion.</returns>
      <param name="index">Position dans cette instance où commence l'insertion. </param>
      <param name="value">Valeur à insérer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la longueur de cette instance. </exception>
      <exception cref="T:System.OutOfMemoryException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
      <summary>Insère dans cette instance, à la position de caractère spécifiée, la représentation sous forme de chaîne d'un nombre à virgule flottante simple précision.</summary>
      <returns>Référence à cette instance après l'opération d'insertion.</returns>
      <param name="index">Position dans cette instance où commence l'insertion. </param>
      <param name="value">Valeur à insérer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la longueur de cette instance. </exception>
      <exception cref="T:System.OutOfMemoryException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
      <summary>Insère une chaîne dans cette instance, à la position de caractère spécifiée.</summary>
      <returns>Référence à cette instance après l'opération d'insertion.</returns>
      <param name="index">Position dans cette instance où commence l'insertion. </param>
      <param name="value">Chaîne à insérer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la longueur en cours de cette instance. ouLa longueur en cours de l'objet <see cref="T:System.Text.StringBuilder" /> plus la longueur de <paramref name="value" /> dépasse <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
      <summary>Insère dans cette instance une ou plusieurs copies d'une chaîne spécifiée, à la position de caractère spécifiée.</summary>
      <returns>Référence à cette instance après l'opération d'insertion.</returns>
      <param name="index">Position dans cette instance où commence l'insertion. </param>
      <param name="value">Chaîne à insérer. </param>
      <param name="count">Nombre d'insertions de <paramref name="value" /> à effectuer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la longueur en cours de cette instance.ou <paramref name="count" /> est inférieur à zéro. </exception>
      <exception cref="T:System.OutOfMemoryException">La longueur en cours de l'objet <see cref="T:System.Text.StringBuilder" /> plus la longueur de <paramref name="value" /> multipliée par <paramref name="count" /> dépasse <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
      <summary>Insère dans cette instance, à la position de caractère spécifiée, la représentation sous forme de chaîne d'un entier non signé 16 bits.</summary>
      <returns>Référence à cette instance après l'opération d'insertion.</returns>
      <param name="index">Position dans cette instance où commence l'insertion. </param>
      <param name="value">Valeur à insérer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la longueur de cette instance. </exception>
      <exception cref="T:System.OutOfMemoryException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
      <summary>Insère dans cette instance, à la position de caractère spécifiée, la représentation sous forme de chaîne d'un entier non signé 32 bits.</summary>
      <returns>Référence à cette instance après l'opération d'insertion.</returns>
      <param name="index">Position dans cette instance où commence l'insertion. </param>
      <param name="value">Valeur à insérer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la longueur de cette instance. </exception>
      <exception cref="T:System.OutOfMemoryException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
      <summary>Insère dans cette instance, à la position de caractère spécifiée, la représentation sous forme de chaîne d'un entier non signé 64 bits.</summary>
      <returns>Référence à cette instance après l'opération d'insertion.</returns>
      <param name="index">Position dans cette instance où commence l'insertion. </param>
      <param name="value">Valeur à insérer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro ou supérieur à la longueur de cette instance. </exception>
      <exception cref="T:System.OutOfMemoryException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.Length">
      <summary>Obtient ou définit la longueur de l'objet <see cref="T:System.Text.StringBuilder" /> actuel.</summary>
      <returns>Longueur de cette instance.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée pour une opération ensembliste est inférieure à zéro ou supérieure à <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.MaxCapacity">
      <summary>Obtient la capacité maximale de cette instance.</summary>
      <returns>Nombre maximal de caractères que cette instance peut contenir.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
      <summary>Supprime de cette instance la plage de caractères spécifiée.</summary>
      <returns>Référence à cette instance après l'opération de suppression.</returns>
      <param name="startIndex">Position de base zéro dans cette instance où commence la suppression. </param>
      <param name="length">Nombre de caractères à supprimer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="startIndex" /> ou <paramref name="length" /> est inférieur à zéro ou que <paramref name="startIndex" /> + <paramref name="length" /> est supérieur à la longueur de cette instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
      <summary>Remplace toutes les occurrences d'un caractère spécifié dans cette instance par un autre caractère spécifié.</summary>
      <returns>Référence à cette instance après le remplacement de <paramref name="oldChar" /> par <paramref name="newChar" />.</returns>
      <param name="oldChar">Caractère à remplacer. </param>
      <param name="newChar">Caractère qui remplace <paramref name="oldChar" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
      <summary>Remplace toutes les occurrences d'un caractère spécifié dans une sous-chaîne de cette instance par un autre caractère spécifié.</summary>
      <returns>Référence à cette instance avec <paramref name="oldChar" /> remplacé par <paramref name="newChar" /> dans la plage comprise entre <paramref name="startIndex" /> et <paramref name="startIndex" /> + <paramref name="count" /> -1.</returns>
      <param name="oldChar">Caractère à remplacer. </param>
      <param name="newChar">Caractère qui remplace <paramref name="oldChar" />. </param>
      <param name="startIndex">Position dans cette instance où commence la sous-chaîne. </param>
      <param name="count">Longueur de la sous-chaîne. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> + <paramref name="count" /> est supérieur à la longueur de la valeur de cette instance.ou <paramref name="startIndex" /> ou <paramref name="count" /> est inférieur à zéro. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.String,System.String)">
      <summary>Remplace toutes les occurrences d'une chaîne spécifiée dans cette instance par une autre chaîne spécifiée.</summary>
      <returns>Référence à cette instance après remplacement de toutes les instances de <paramref name="oldValue" /> par <paramref name="newValue" />.</returns>
      <param name="oldValue">Chaîne à remplacer. </param>
      <param name="newValue">Chaîne qui remplace <paramref name="oldValue" /> ou null. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oldValue" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentException">La longueur de <paramref name="oldValue" /> est égale à zéro. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary>Remplace toutes les occurrences d'une chaîne spécifiée dans une sous-chaîne de cette instance par une autre chaîne spécifiée.</summary>
      <returns>Référence à cette instance avec toutes les instances de <paramref name="oldValue" /> remplacées par <paramref name="newValue" /> dans la plage comprise entre <paramref name="startIndex" /> et <paramref name="startIndex" /> + <paramref name="count" /> -1.</returns>
      <param name="oldValue">Chaîne à remplacer. </param>
      <param name="newValue">Chaîne qui remplace <paramref name="oldValue" /> ou null. </param>
      <param name="startIndex">Position dans cette instance où commence la sous-chaîne. </param>
      <param name="count">Longueur de la sous-chaîne. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oldValue" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentException">La longueur de <paramref name="oldValue" /> est égale à zéro. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> ou <paramref name="count" /> est inférieur à zéro.ou <paramref name="startIndex" /> plus <paramref name="count" /> indique la position d'un caractère qui n'est pas dans l'instance.ou Une augmentation de la valeur de cette instance entraînerait un dépassement de <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.ToString">
      <summary>Convertit la valeur de cette instance en <see cref="T:System.String" />.</summary>
      <returns>Chaîne dont la valeur est identique à celle de cette instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
      <summary>Convertit la valeur d'une sous-chaîne de cette instance en <see cref="T:System.String" />.</summary>
      <returns>Chaîne dont la valeur est identique à la sous-chaîne spécifiée de cette instance.</returns>
      <param name="startIndex">Position de départ de la sous-chaîne dans cette instance. </param>
      <param name="length">Longueur de la sous-chaîne. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> ou <paramref name="length" /> est inférieur à zéro.ou La somme de <paramref name="startIndex" /> et <paramref name="length" /> est supérieure à la longueur de l'instance actuelle. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Threading.LazyThreadSafetyMode">
      <summary>Spécifie la manière dont une instance <see cref="T:System.Lazy`1" /> synchronise l'accès entre plusieurs threads.</summary>
    </member>
    <member name="F:System.Threading.LazyThreadSafetyMode.ExecutionAndPublication">
      <summary>Des verrous sont utilisés pour s'assurer qu'un seul thread puisse initialiser une instance <see cref="T:System.Lazy`1" /> de façon thread-safe.Si la méthode d'initialisation (ou le constructeur par défaut, en l'absence de méthode d'initialisation) utilise des verrous en interne, des interblocages peuvent se produire.Si vous utilisez un constructeur <see cref="T:System.Lazy`1" /> qui spécifie une méthode d'initialisation (paramètre <paramref name="valueFactory" />), et si cette méthode d'initialisation lève une exception (ou ne parvient pas à gérer une exception) la première fois que vous appelez la propriété <see cref="P:System.Lazy`1.Value" />, l'exception est mise en cache et à nouveau levée sur les appels suivants à la propriété <see cref="P:System.Lazy`1.Value" />.Si vous utilisez un constructeur <see cref="T:System.Lazy`1" /> qui ne spécifie pas une méthode d'initialisation, les exceptions qui sont levées par le constructeur par défaut pour <paramref name="T" /> ne sont pas mises en cache.Dans ce cas, un appel ultérieur à la propriété <see cref="P:System.Lazy`1.Value" /> peut initialiser avec succès l'instance de <see cref="T:System.Lazy`1" />.Si la méthode d'initialisation accède de manière récursive à la propriété <see cref="P:System.Lazy`1.Value" /> de l'instance <see cref="T:System.Lazy`1" />, une exception <see cref="T:System.InvalidOperationException" /> est levée.</summary>
    </member>
    <member name="F:System.Threading.LazyThreadSafetyMode.None">
      <summary>L'instance <see cref="T:System.Lazy`1" /> n'est pas thread-safe ; si plusieurs threads y accèdent, son comportement est indéfini.Utilisez ce mode uniquement lorsque des performances élevées sont requises et que vous avez la garantie que l'instance <see cref="T:System.Lazy`1" /> n'est jamais initialisée par plusieurs threads.Si vous utilisez un constructeur <see cref="T:System.Lazy`1" /> qui spécifie une méthode d'initialisation (paramètre <paramref name="valueFactory" />), et si cette méthode d'initialisation lève une exception (ou ne parvient pas à gérer une exception) la première fois que vous appelez la propriété <see cref="P:System.Lazy`1.Value" />, l'exception est mise en cache et à nouveau levée sur les appels suivants à la propriété <see cref="P:System.Lazy`1.Value" />.Si vous utilisez un constructeur <see cref="T:System.Lazy`1" /> qui ne spécifie pas une méthode d'initialisation, les exceptions qui sont levées par le constructeur par défaut pour <paramref name="T" /> ne sont pas mises en cache.Dans ce cas, un appel ultérieur à la propriété <see cref="P:System.Lazy`1.Value" /> peut initialiser avec succès l'instance de <see cref="T:System.Lazy`1" />.Si la méthode d'initialisation accède de manière récursive à la propriété <see cref="P:System.Lazy`1.Value" /> de l'instance <see cref="T:System.Lazy`1" />, une exception <see cref="T:System.InvalidOperationException" /> est levée.</summary>
    </member>
    <member name="F:System.Threading.LazyThreadSafetyMode.PublicationOnly">
      <summary>Lorsque plusieurs threads tentent d'initialiser une instance <see cref="T:System.Lazy`1" /> simultanément, tous les threads sont autorisés à exécuter la méthode d'initialisation (ou le constructeur par défaut, en l'absence de méthode d'initialisation).Le premier thread qui termine l'initialisation définit la valeur de l'instance <see cref="T:System.Lazy`1" />.Cette valeur est retournée aux autres threads qui exécutaient simultanément la méthode d'initialisation, sauf si la méthode d'initialisation lève des exceptions sur ces threads.Les instances de <paramref name="T" /> créées par les threads en concurrence sont ignorées.Si la méthode d'initialisation lève une exception sur un thread, cette exception est propagée hors de la propriété <see cref="P:System.Lazy`1.Value" /> sur ce thread.L'exception n'est pas mise en cache.La valeur de la propriété <see cref="P:System.Lazy`1.IsValueCreated" /> reste false, et les appels suivants à la propriété <see cref="P:System.Lazy`1.Value" /> (par le thread sur lequel l'exception a été levée ou par d'autres threads) entraînent la réexécution de la méthode d'initialisation.Si la méthode d'initialisation accède de manière récursive à la propriété <see cref="P:System.Lazy`1.Value" /> de l'instance <see cref="T:System.Lazy`1" />, aucune exception n'est levée.</summary>
    </member>
    <member name="T:System.Threading.Timeout">
      <summary>Contient les constantes qui spécifient des intervalles de délai d'attente infinis.Cette classe ne peut pas être héritée.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Threading.Timeout.Infinite">
      <summary>Constante utilisée pour spécifier une période d'attente infinie (pour les méthodes de thread qui acceptent un paramètre de <see cref="T:System.Int32" />). </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Threading.Timeout.InfiniteTimeSpan">
      <summary>Constante utilisée pour spécifier une période d'attente infinie (pour les méthodes qui acceptent un paramètre de <see cref="T:System.TimeSpan" />).</summary>
    </member>
    <member name="T:System.Threading.WaitHandle">
      <summary>Encapsule les objets spécifiques au système d'exploitation qui attendent un accès exclusif aux ressources partagées.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Threading.WaitHandle" />.</summary>
    </member>
    <member name="M:System.Threading.WaitHandle.Dispose">
      <summary>Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Threading.WaitHandle" />.</summary>
    </member>
    <member name="M:System.Threading.WaitHandle.Dispose(System.Boolean)">
      <summary>En cas de substitution dans une classe dérivée, libère les ressources non managées utilisées par <see cref="T:System.Threading.WaitHandle" /> et libère éventuellement les ressources managées.</summary>
      <param name="explicitDisposing">true pour libérer les ressources managées et non managées ; false pour ne libérer que les ressources non managées. </param>
    </member>
    <member name="F:System.Threading.WaitHandle.InvalidHandle">
      <summary>Représente un handle du système d'exploitation natif non valide.Ce champ est en lecture seule.</summary>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])">
      <summary>Attend que tous les éléments du tableau spécifié reçoivent un signal.</summary>
      <returns>true quand tous les éléments de <paramref name="waitHandles" /> ont reçu un signal ; sinon, la méthode ne retourne jamais.</returns>
      <param name="waitHandles">Tableau WaitHandle qui contient les objets que l'instance actuelle attendra.Ce tableau ne peut pas contenir plusieurs références au même objet.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array are null. -or-<paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</exception>
      <exception cref="T:System.DuplicateWaitObjectException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.The <paramref name="waitHandles" /> array contains elements that are duplicates. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.-or- The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element. </exception>
      <exception cref="T:System.ApplicationException">
        <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait terminated because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)">
      <summary>Attend que tous les éléments du tableau spécifié reçoivent un signal, en utilisant une valeur <see cref="T:System.Int32" /> pour spécifier l'intervalle de temps.</summary>
      <returns>true quand tous les éléments de <paramref name="waitHandles" /> ont reçu un signal ; sinon, false.</returns>
      <param name="waitHandles">Tableau WaitHandle qui contient les objets que l'instance actuelle attendra.Ce tableau ne peut pas contenir plusieurs références au même objet (doublons).</param>
      <param name="millisecondsTimeout">Nombre de millisecondes à attendre, ou <see cref="F:System.Threading.Timeout.Infinite" /> (-1) pour un délai d'attente infini. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or- One or more of the objects in the <paramref name="waitHandles" /> array is null. -or-<paramref name="waitHandles" /> is an array with no elements. </exception>
      <exception cref="T:System.DuplicateWaitObjectException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.The <paramref name="waitHandles" /> array contains elements that are duplicates. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.-or- The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)">
      <summary>Attend que tous les éléments du tableau spécifié reçoivent un signal, en utilisant une valeur <see cref="T:System.TimeSpan" /> pour spécifier l'intervalle de temps.</summary>
      <returns>true quand tous les éléments de <paramref name="waitHandles" /> ont reçu un signal ; sinon, false.</returns>
      <param name="waitHandles">Tableau WaitHandle qui contient les objets que l'instance actuelle attendra.Ce tableau ne peut pas contenir plusieurs références au même objet.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> qui représente le nombre de millisecondes à attendre ou <see cref="T:System.TimeSpan" /> qui représente -1 milliseconde, pour attendre indéfiniment. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null. -or- One or more of the objects in the <paramref name="waitHandles" /> array is null. -or-<paramref name="waitHandles" /> is an array with no elements. </exception>
      <exception cref="T:System.DuplicateWaitObjectException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.The <paramref name="waitHandles" /> array contains elements that are duplicates. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.-or- The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out. -or-<paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait terminated because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])">
      <summary>Attend que l'un des éléments du tableau spécifié reçoive un signal.</summary>
      <returns>Index du tableau de l'objet ayant respecté l'attente.</returns>
      <param name="waitHandles">Tableau WaitHandle qui contient les objets que l'instance actuelle attendra. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array is null. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits. </exception>
      <exception cref="T:System.ApplicationException">
        <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later. </exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)">
      <summary>Attend que l'un des éléments du tableau spécifié reçoive un signal, en utilisant un entier signé 32 bits pour spécifier l'intervalle de temps.</summary>
      <returns>Index de tableau de l'objet ayant respecté l'attente ou <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> si aucun objet n'a respecté l'attente et qu'un intervalle de temps équivalent à <paramref name="millisecondsTimeout" /> s'est écoulé.</returns>
      <param name="waitHandles">Tableau WaitHandle qui contient les objets que l'instance actuelle attendra. </param>
      <param name="millisecondsTimeout">Nombre de millisecondes à attendre, ou <see cref="F:System.Threading.Timeout.Infinite" /> (-1) pour un délai d'attente infini. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array is null. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="waitHandles" /> is an array with no elements. </exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)">
      <summary>Attend que l'un des éléments du tableau spécifié reçoive un signal, en utilisant une valeur <see cref="T:System.TimeSpan" /> pour spécifier l'intervalle de temps.</summary>
      <returns>Index de tableau de l'objet ayant respecté l'attente ou <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> si aucun objet n'a respecté l'attente et qu'un intervalle de temps équivalent à <paramref name="timeout" /> s'est écoulé.</returns>
      <param name="waitHandles">Tableau WaitHandle qui contient les objets que l'instance actuelle attendra. </param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> qui représente le nombre de millisecondes à attendre ou <see cref="T:System.TimeSpan" /> qui représente -1 milliseconde de seconde, pour attendre indéfiniment. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array is null. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out. -or-<paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="waitHandles" /> is an array with no elements. </exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitOne">
      <summary>Bloque le thread actuel jusqu'à ce que le <see cref="T:System.Threading.WaitHandle" /> actuel reçoive un signal.</summary>
      <returns>true si l'instance actuelle reçoit un signal.Si l'instance actuelle ne reçoit jamais de signal, <see cref="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" /> ne retourne jamais.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitOne(System.Int32)">
      <summary>Bloque le thread actuel jusqu'à ce que le <see cref="T:System.Threading.WaitHandle" /> actuel reçoive un signal, en utilisant un entier signé 32 bits pour spécifier l'intervalle de temps.</summary>
      <returns>true si l'instance actuelle reçoit un signal ; sinon, false.</returns>
      <param name="millisecondsTimeout">Nombre de millisecondes à attendre, ou <see cref="F:System.Threading.Timeout.Infinite" /> (-1) pour un délai d'attente infini. </param>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)">
      <summary>Bloque le thread actuel jusqu'à ce que l'instance actuelle reçoive un signal, en utilisant une valeur <see cref="T:System.TimeSpan" /> pour spécifier l'intervalle de temps.</summary>
      <returns>true si l'instance actuelle reçoit un signal ; sinon, false.</returns>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> qui représente le nombre de millisecondes à attendre ou <see cref="T:System.TimeSpan" /> qui représente -1 milliseconde de seconde, pour attendre indéfiniment. </param>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.-or-<paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="F:System.Threading.WaitHandle.WaitTimeout">
      <summary>Indique que le délai fixé pour une opération <see cref="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" /> a été dépassé sans qu'aucun des handles d'attente n'ait été signalé.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
  </members>
</doc>