<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime</name>
  </assembly>
  <members>
    <member name="T:System.Action">
      <summary>Incapsula un metodo che non presenta parametri e non restituisce alcun valore.</summary>
    </member>
    <member name="M:System.Action.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action.BeginInvoke(System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action.Invoke"></member>
    <member name="T:System.Action`1">
      <summary>Incapsula un metodo che presenta un singolo parametro e non restituisce alcun valore.Per esaminare il codice sorgente di .NET Framework per questo tipo, vedere Origine riferimento.</summary>
      <typeparam name="T">Tipo del parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Action`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`1.BeginInvoke(`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`1.Invoke(`0)"></member>
    <member name="T:System.Action`10">
      <summary>Incapsula un metodo che presenta 10 parametri e non restituisce alcun valore.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T9">Tipo del nono parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T10">Tipo del decimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`10.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`10.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`10.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`10.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)"></member>
    <member name="T:System.Action`11">
      <summary>Incapsula un metodo che presenta 11 parametri e non restituisce alcun valore.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T9">Tipo del nono parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T10">Tipo del decimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T11">Tipo dell'undicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`11.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`11.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`11.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`11.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)"></member>
    <member name="T:System.Action`12">
      <summary>Incapsula un metodo che presenta 12 parametri e non restituisce alcun valore.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T9">Tipo del nono parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T10">Tipo del decimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T11">Tipo dell'undicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T12">Tipo del dodicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`12.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`12.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`12.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`12.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)"></member>
    <member name="T:System.Action`13">
      <summary>Incapsula un metodo che presenta 13 parametri e non restituisce alcun valore.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T9">Tipo del nono parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T10">Tipo del decimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T11">Tipo dell'undicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T12">Tipo del dodicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T13">Tipo del tredicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`13.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`13.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`13.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`13.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)"></member>
    <member name="T:System.Action`14">
      <summary>Incapsula un metodo che presenta 14 parametri e non restituisce alcun valore.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T9">Tipo del nono parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T10">Tipo del decimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T11">Tipo dell'undicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T12">Tipo del dodicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T13">Tipo del tredicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T14">Tipo del quattordicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`14.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`14.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`14.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`14.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)"></member>
    <member name="T:System.Action`15">
      <summary>Incapsula un metodo che presenta 15 parametri e non restituisce alcun valore.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T9">Tipo del nono parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T10">Tipo del decimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T11">Tipo dell'undicesimo parametro del metodo incapsulato da questo delegato. </typeparam>
      <typeparam name="T12">Tipo del dodicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T13">Tipo del tredicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T14">Tipo del quattordicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T15">Tipo del quindicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`15.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`15.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`15.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`15.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)"></member>
    <member name="T:System.Action`16">
      <summary>Incapsula un metodo che presenta 16 parametri e non restituisce alcun valore.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T9">Tipo del nono parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T10">Tipo del decimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T11">Tipo dell'undicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T12">Tipo del dodicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T13">Tipo del tredicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T14">Tipo del quattordicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T15">Tipo del quindicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T16">Tipo del sedicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`16.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`16.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`16.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`16.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)"></member>
    <member name="T:System.Action`2">
      <summary>Incapsula un metodo che dispone di due parametri e non restituisce un valore.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`2.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`2.BeginInvoke(`0,`1,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`2.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`2.Invoke(`0,`1)"></member>
    <member name="T:System.Action`3">
      <summary>Incapsula un metodo che presenta tre parametri e non restituisce alcun valore.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`3.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`3.BeginInvoke(`0,`1,`2,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`3.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`3.Invoke(`0,`1,`2)"></member>
    <member name="T:System.Action`4">
      <summary>Incapsula un metodo che dispone di quattro parametri e non restituisce un valore.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`4.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`4.BeginInvoke(`0,`1,`2,`3,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`4.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`4.Invoke(`0,`1,`2,`3)"></member>
    <member name="T:System.Action`5">
      <summary>Incapsula un metodo che presenta cinque parametri e non restituisce alcun valore.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`5.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`5.BeginInvoke(`0,`1,`2,`3,`4,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`5.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`5.Invoke(`0,`1,`2,`3,`4)"></member>
    <member name="T:System.Action`6">
      <summary>Incapsula un metodo che dispone di sei parametri e non restituisce alcun valore.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`6.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`6.BeginInvoke(`0,`1,`2,`3,`4,`5,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`6.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`6.Invoke(`0,`1,`2,`3,`4,`5)"></member>
    <member name="T:System.Action`7">
      <summary>Incapsula un metodo che dispone di sette parametri e non restituisce alcun valore.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`7.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`7.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`7.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`7.Invoke(`0,`1,`2,`3,`4,`5,`6)"></member>
    <member name="T:System.Action`8">
      <summary>Incapsula un metodo che dispone di otto parametri e non restituisce alcun valore.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo parametro del metodo incapsulato da questo delegato.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`8.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`8.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`8.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`8.Invoke(`0,`1,`2,`3,`4,`5,`6,`7)"></member>
    <member name="T:System.Action`9">
      <summary>Incapsula un metodo che presenta nove parametri e non restituisce alcun valore.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T9">Tipo del nono parametro del metodo incapsulato da questo delegato.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`9.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`9.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`9.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`9.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8)"></member>
    <member name="T:System.Activator">
      <summary>Contiene metodi per creare tipi di oggetti, localmente o in remoto, oppure per ottenere riferimenti a oggetti remoti esistenti.La classe non può essere ereditata.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Activator.CreateInstance``1">
      <summary>Crea un'istanza del tipo designato dal parametro del tipo generico specificato, usando il costruttore senza parametri.</summary>
      <returns>Riferimento all'oggetto di recente creazione.</returns>
      <typeparam name="T">Tipo da creare.</typeparam>
      <exception cref="T:System.MissingMethodException">Nel .NET for Windows Store apps o libreria di classi portabile, intercettare l'eccezione della classe di base, <see cref="T:System.MissingMemberException" />, al contrario.Il tipo specificato per <paramref name="T" /> non ha un costruttore senza parametri. </exception>
    </member>
    <member name="M:System.Activator.CreateInstance(System.Type)">
      <summary>Crea un'istanza del tipo specificato usando il costruttore predefinito di tale tipo.</summary>
      <returns>Riferimento all'oggetto di recente creazione.</returns>
      <param name="type">Tipo di oggetto da creare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> è null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> non è un oggetto RuntimeType. -oppure-<paramref name="type" /> è un tipo generico aperto (ovvero, la proprietà <see cref="P:System.Type.ContainsGenericParameters" /> restituisce true).</exception>
      <exception cref="T:System.NotSupportedException">Impossibile per <paramref name="type" /> essere un <see cref="T:System.Reflection.Emit.TypeBuilder" />.-oppure- La creazione di tipi <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> e <see cref="T:System.RuntimeArgumentHandle" /> o di matrici di tali tipi non è supportata.-oppure-L'assembly che contiene <paramref name="type" /> è un assembly dinamico creato con <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">Il costruttore chiamato genera un'eccezione. </exception>
      <exception cref="T:System.MethodAccessException">Nel .NET for Windows Store apps o libreria di classi portabile, intercettare l'eccezione della classe di base, <see cref="T:System.MemberAccessException" />, al contrario.Il chiamante non è autorizzato a chiamare questo costruttore. </exception>
      <exception cref="T:System.MemberAccessException">Impossibile creare un'istanza di una classe astratta, oppure il membro è stato chiamato con un meccanismo di associazione tardiva. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Il tipo COM non è stato ottenuto mediante <see cref="Overload:System.Type.GetTypeFromProgID" /> o <see cref="Overload:System.Type.GetTypeFromCLSID" />. </exception>
      <exception cref="T:System.MissingMethodException">Nel .NET for Windows Store apps o libreria di classi portabile, intercettare l'eccezione della classe di base, <see cref="T:System.MissingMemberException" />, al contrario.Nessun costruttore pubblico corrispondente trovato. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
        <paramref name="type" /> è un oggetto COM ma l'identificatore di classe utilizzato per ottenere il tipo non è valido oppure la classe identificata non è registrata. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="type" /> non è un tipo valido. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.CreateInstance(System.Type,System.Object[])">
      <summary>Crea un'istanza del tipo specificato usando il costruttore più adatto ai parametri specificati.</summary>
      <returns>Riferimento all'oggetto di recente creazione.</returns>
      <param name="type">Tipo di oggetto da creare. </param>
      <param name="args">Matrice di argomenti che corrisponde ai parametri del costruttore da chiamare in quanto a numero, ordine e tipo.Se <paramref name="args" /> è una matrice vuota oppure null, viene chiamato il costruttore che non accetta parametri, ovvero il costruttore predefinito.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> è null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> non è un oggetto RuntimeType. -oppure-<paramref name="type" /> è un tipo generico aperto (ovvero, la proprietà <see cref="P:System.Type.ContainsGenericParameters" /> restituisce true).</exception>
      <exception cref="T:System.NotSupportedException">Impossibile per <paramref name="type" /> essere un <see cref="T:System.Reflection.Emit.TypeBuilder" />.-oppure- La creazione di tipi <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> e <see cref="T:System.RuntimeArgumentHandle" /> o di matrici di tali tipi non è supportata. -oppure-L'assembly che contiene <paramref name="type" /> è un assembly dinamico creato con <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.-oppure-Il costruttore che maggiormente corrisponde a <paramref name="args" /> presenta gli argomenti varargs. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">Il costruttore chiamato genera un'eccezione. </exception>
      <exception cref="T:System.MethodAccessException">Nel .NET for Windows Store apps o libreria di classi portabile, intercettare l'eccezione della classe di base, <see cref="T:System.MemberAccessException" />, al contrario.Il chiamante non è autorizzato a chiamare questo costruttore. </exception>
      <exception cref="T:System.MemberAccessException">Impossibile creare un'istanza di una classe astratta, oppure il membro è stato chiamato con un meccanismo di associazione tardiva. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Il tipo COM non è stato ottenuto mediante <see cref="Overload:System.Type.GetTypeFromProgID" /> o <see cref="Overload:System.Type.GetTypeFromCLSID" />. </exception>
      <exception cref="T:System.MissingMethodException">Nel .NET for Windows Store apps o libreria di classi portabile, intercettare l'eccezione della classe di base, <see cref="T:System.MissingMemberException" />, al contrario.Nessun costruttore pubblico corrispondente trovato. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
        <paramref name="type" /> è un oggetto COM ma l'identificatore di classe utilizzato per ottenere il tipo non è valido oppure la classe identificata non è registrata. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="type" /> non è un tipo valido. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, RemotingConfiguration" />
      </PermissionSet>
    </member>
    <member name="T:System.ArgumentException">
      <summary>L'eccezione generata quando uno degli argomenti forniti a un metodo non è valido.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ArgumentException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ArgumentException" />.</summary>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ArgumentException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione. </param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ArgumentException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione. </param>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente.Se il parametro <paramref name="innerException" /> non è un riferimento Null, l'eccezione corrente verrà generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ArgumentException" /> con un messaggio di errore specificato e il nome del parametro che genera questa eccezione.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione. </param>
      <param name="paramName">Nome del parametro che è la causa dell'eccezione corrente. </param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String,System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ArgumentException" /> con un messaggio di errore specificato, il nome del parametro e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione. </param>
      <param name="paramName">Nome del parametro che è la causa dell'eccezione corrente. </param>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente.Se il parametro <paramref name="innerException" /> non è un riferimento Null, l'eccezione corrente verrà generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="P:System.ArgumentException.Message">
      <summary>Ottiene il messaggio di errore e il nome del parametro o, se non è stato impostato alcun nome di parametro, soltanto il messaggio di errore.</summary>
      <returns>Stringa di testo che descrive i dettagli dell'eccezione.Il valore della proprietà corrente ha una delle due seguenti forme:Condizione Valore <paramref name="paramName" /> è un riferimento Null (Nothing in Visual Basic) o di lunghezza zero. Stringa <paramref name="message" /> passata al costruttore. <paramref name="paramName" /> non è un riferimento Null (Nothing in Visual Basic) e ha una lunghezza maggiore di zero. Stringa <paramref name="message" /> accodata con il nome del parametro non valido. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ArgumentException.ParamName">
      <summary>Ottiene il nome del parametro che ha causato questa eccezione.</summary>
      <returns>Nome del parametro.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.ArgumentNullException">
      <summary>Eccezione generata quando viene passato un riferimento Null (Nothing in Visual Basic) a un metodo che non lo accetta come argomento valido. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgumentNullException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ArgumentNullException" />.</summary>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ArgumentNullException" /> con il nome del parametro che causa l'eccezione.</summary>
      <param name="paramName">Nome del parametro che ha causato l'eccezione. </param>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ArgumentNullException" /> con un messaggio di errore e l'eccezione che ha causato l'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicata la causa dell'eccezione </param>
      <param name="innerException">Eccezione causa dell'eccezione corrente o riferimento Null (Nothing in Visual Basic) se non viene specificata alcuna eccezione interna. </param>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.String,System.String)">
      <summary>Inizializza un'istanza della classe <see cref="T:System.ArgumentNullException" /> con un messaggio di errore specificato e il nome del parametro che causa l'eccezione corrente.</summary>
      <param name="paramName">Nome del parametro che ha causato l'eccezione. </param>
      <param name="message">Messaggio in cui viene descritto l'errore. </param>
    </member>
    <member name="T:System.ArgumentOutOfRangeException">
      <summary>Eccezione generata quando il valore di un argomento non è compreso nell'intervallo consentito di valori definiti dal metodo richiamato.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ArgumentOutOfRangeException" />.</summary>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ArgumentOutOfRangeException" /> con il nome del parametro che causa l'eccezione.</summary>
      <param name="paramName">Nome del parametro che ha causato l'eccezione. </param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ArgumentOutOfRangeException" /> con un messaggio di errore e l'eccezione che ha causato l'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicata la causa dell'eccezione </param>
      <param name="innerException">Eccezione causa dell'eccezione corrente o riferimento null (Nothing in Visual Basic) se non viene specificata alcuna eccezione interna. </param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ArgumentOutOfRangeException" /> con il nome del parametro, il valore dell'argomento e un messaggio di errore specificato.</summary>
      <param name="paramName">Nome del parametro che ha causato l'eccezione. </param>
      <param name="actualValue">Il valore dell'argomento che causa l'eccezione. </param>
      <param name="message">Messaggio in cui viene descritto l'errore. </param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ArgumentOutOfRangeException" /> con il nome del parametro che causa l'eccezione e un messaggio di errore specificato.</summary>
      <param name="paramName">Nome del parametro che ha causato l'eccezione. </param>
      <param name="message">Messaggio in cui viene descritto l'errore. </param>
    </member>
    <member name="P:System.ArgumentOutOfRangeException.ActualValue">
      <summary>Ottiene il valore dell'argomento che causa l'eccezione.</summary>
      <returns>Object che contiene il valore del parametro che ha causato l'oggetto <see cref="T:System.Exception" /> corrente.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ArgumentOutOfRangeException.Message">
      <summary>Ottiene il messaggio di errore e la rappresentazione in forma di stringa del valore dell'argomento non valido, oppure solo del messaggio di errore se il valore dell'argomento è null.</summary>
      <returns>Il testo del messaggio per l'eccezione.Il valore della proprietà corrente richiede uno dei due formati che seguono:Condizione Valore La proprietà <paramref name="actualValue" /> è null. Stringa <paramref name="message" /> passata al costruttore. La proprietà <paramref name="actualValue" /> non è null. La stringa di <paramref name="message" /> accodata con la rappresentazione in forma di stringa del valore dell'argomento non valido. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ArithmeticException">
      <summary>L'eccezione generata per segnalare errori in un'operazione aritmetica, di cast o di conversione.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArithmeticException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ArithmeticException" />.</summary>
    </member>
    <member name="M:System.ArithmeticException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ArithmeticException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore. </param>
    </member>
    <member name="M:System.ArithmeticException.#ctor(System.String,System.Exception)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.ArithmeticException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="innerException">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="innerException" /> non è un riferimento null, l'eccezione corrente verrà generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.Array">
      <summary>Fornisce metodi per creare, manipolare, ordinare ed eseguire ricerche all'interno di matrici, diventando così la classe base per tutte le matrici in Common Language Runtime.Per esaminare il codice sorgente di .NET Framework per questo tipo, vedere Origine riferimento.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object)">
      <summary>Effettua la ricerca di un valore in un intervallo di elementi di una matrice unidimensionale e ordinata, usando l'interfaccia <see cref="T:System.IComparable" /> implementata da ogni elemento della matrice e dal valore specificato.</summary>
      <returns>Indice di <paramref name="value" /> specificato nell'oggetto <paramref name="array" /> specificato, se <paramref name="value" /> è stato trovato.Se <paramref name="value" /> non viene trovato e <paramref name="value" /> è minore di uno o più elementi di <paramref name="array" />, un numero negativo che corrisponde al complemento bit per bit dell'indice del primo elemento maggiore di <paramref name="value" />.Se <paramref name="value" /> non viene trovato e <paramref name="value" /> è maggiore di qualsiasi elemento di <paramref name="array" />, un numero negativo che corrisponde al complemento bit per bit dell'indice dell'ultimo elemento + 1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale ordinato in cui effettuare la ricerca.</param>
      <param name="index">Indice iniziale dell'intervallo in cui eseguire la ricerca.</param>
      <param name="length">Lunghezza dell'intervallo in cui eseguire la ricerca.</param>
      <param name="value">Oggetto da cercare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> è multidimensionale.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore del limite inferiore di <paramref name="array" />.-oppure-<paramref name="length" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="length" /> non specificano un intervallo valido in <paramref name="array" />.-oppure-<paramref name="value" /> è di un tipo non compatibile con gli elementi di <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il valore specificato nel parametro <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IComparable" /> e durante la ricerca viene rilevato un elemento che non implementa l'interfaccia <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
      <summary>Mediante l'interfaccia <see cref="T:System.Collections.IComparer" /> specificata, effettua una ricerca di un valore in un intervallo di elementi di una matrice unidimensionale e ordinata.</summary>
      <returns>Indice di <paramref name="value" /> specificato nell'oggetto <paramref name="array" /> specificato, se <paramref name="value" /> è stato trovato.Se <paramref name="value" /> non viene trovato e <paramref name="value" /> è minore di uno o più elementi di <paramref name="array" />, un numero negativo che corrisponde al complemento bit per bit dell'indice del primo elemento maggiore di <paramref name="value" />.Se <paramref name="value" /> non viene trovato e <paramref name="value" /> è maggiore di qualsiasi elemento di <paramref name="array" />, un numero negativo che corrisponde al complemento bit per bit dell'indice dell'ultimo elemento + 1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale ordinato in cui effettuare la ricerca.</param>
      <param name="index">Indice iniziale dell'intervallo in cui eseguire la ricerca.</param>
      <param name="length">Lunghezza dell'intervallo in cui eseguire la ricerca.</param>
      <param name="value">Oggetto da cercare.</param>
      <param name="comparer">Implementazione <see cref="T:System.Collections.IComparer" /> da usare quando si confrontano gli elementi.-oppure- null per usare l'implementazione <see cref="T:System.IComparable" /> di ciascun elemento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> è multidimensionale.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore del limite inferiore di <paramref name="array" />.-oppure-<paramref name="length" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="length" /> non specificano un intervallo valido in <paramref name="array" />.-oppure-<paramref name="comparer" /> è null, e <paramref name="value" /> è di un tipo non compatibile con gli elementi di <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il valore specificato nel parametro <paramref name="comparer" /> è null, il parametro <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IComparable" /> e durante la ricerca viene rilevato un elemento che non implementa l'interfaccia <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Object)">
      <summary>Effettua una ricerca in un'intera matrice unidimensionale ordinata per un elemento specifico, usando l'interfaccia <see cref="T:System.IComparable" /> implementata da ogni elemento della matrice e dall'oggetto specificato.</summary>
      <returns>Indice di <paramref name="value" /> specificato nell'oggetto <paramref name="array" /> specificato, se <paramref name="value" /> è stato trovato.Se <paramref name="value" /> non viene trovato e <paramref name="value" /> è minore di uno o più elementi di <paramref name="array" />, un numero negativo che corrisponde al complemento bit per bit dell'indice del primo elemento maggiore di <paramref name="value" />.Se <paramref name="value" /> non viene trovato e <paramref name="value" /> è maggiore di qualsiasi elemento di <paramref name="array" />, un numero negativo che corrisponde al complemento bit per bit dell'indice dell'ultimo elemento + 1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale ordinato in cui effettuare la ricerca.</param>
      <param name="value">Oggetto da cercare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> è multidimensionale.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> è di un tipo non compatibile con gli elementi di <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il valore specificato nel parametro <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IComparable" /> e durante la ricerca viene rilevato un elemento che non implementa l'interfaccia <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Object,System.Collections.IComparer)">
      <summary>Mediante l'interfaccia <see cref="T:System.Collections.IComparer" /> specificata, effettua la ricerca di un valore all'interno di una matrice unidimensionale e ordinata.</summary>
      <returns>Indice di <paramref name="value" /> specificato nell'oggetto <paramref name="array" /> specificato, se <paramref name="value" /> è stato trovato.Se <paramref name="value" /> non viene trovato e <paramref name="value" /> è minore di uno o più elementi di <paramref name="array" />, un numero negativo che corrisponde al complemento bit per bit dell'indice del primo elemento maggiore di <paramref name="value" />.Se <paramref name="value" /> non viene trovato e <paramref name="value" /> è maggiore di qualsiasi elemento di <paramref name="array" />, un numero negativo che corrisponde al complemento bit per bit dell'indice dell'ultimo elemento + 1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale ordinato in cui effettuare la ricerca.</param>
      <param name="value">Oggetto da cercare.</param>
      <param name="comparer">Implementazione <see cref="T:System.Collections.IComparer" /> da usare quando si confrontano gli elementi.-oppure- null per usare l'implementazione <see cref="T:System.IComparable" /> di ciascun elemento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> è multidimensionale.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparer" /> è null, e <paramref name="value" /> è di un tipo non compatibile con gli elementi di <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il valore specificato nel parametro <paramref name="comparer" /> è null, il parametro <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IComparable" /> e durante la ricerca viene rilevato un elemento che non implementa l'interfaccia <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0)">
      <summary>Effettua la ricerca di un valore in un intervallo di elementi di una matrice unidimensionale e ordinata, usando l'interfaccia generica <see cref="T:System.IComparable`1" /> implementata da ogni elemento dell'oggetto <see cref="T:System.Array" /> e dal valore specificato.</summary>
      <returns>Indice di <paramref name="value" /> specificato nell'oggetto <paramref name="array" /> specificato, se <paramref name="value" /> è stato trovato.Se <paramref name="value" /> non viene trovato e <paramref name="value" /> è minore di uno o più elementi di <paramref name="array" />, un numero negativo che corrisponde al complemento bit per bit dell'indice del primo elemento maggiore di <paramref name="value" />.Se <paramref name="value" /> non viene trovato e <paramref name="value" /> è maggiore di qualsiasi elemento di <paramref name="array" />, un numero negativo che corrisponde al complemento bit per bit dell'indice dell'ultimo elemento + 1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> ordinato, unidimensionale e in base zero in cui effettuare la ricerca. </param>
      <param name="index">Indice iniziale dell'intervallo in cui eseguire la ricerca.</param>
      <param name="length">Lunghezza dell'intervallo in cui eseguire la ricerca.</param>
      <param name="value">Oggetto da cercare.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore del limite inferiore di <paramref name="array" />.-oppure-<paramref name="length" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="length" /> non specificano un intervallo valido in <paramref name="array" />.-oppure-<paramref name="value" /> è di un tipo non compatibile con gli elementi di <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="T" /> non implementa l'interfaccia generica <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
      <summary>Mediante l'interfaccia generica <see cref="T:System.Collections.Generic.IComparer`1" /> specificata, effettua una ricerca di un valore in un intervallo di elementi di una matrice unidimensionale e ordinata.</summary>
      <returns>Indice di <paramref name="value" /> specificato nell'oggetto <paramref name="array" /> specificato, se <paramref name="value" /> è stato trovato.Se <paramref name="value" /> non viene trovato e <paramref name="value" /> è minore di uno o più elementi di <paramref name="array" />, un numero negativo che corrisponde al complemento bit per bit dell'indice del primo elemento maggiore di <paramref name="value" />.Se <paramref name="value" /> non viene trovato e <paramref name="value" /> è maggiore di qualsiasi elemento di <paramref name="array" />, un numero negativo che corrisponde al complemento bit per bit dell'indice dell'ultimo elemento + 1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> ordinato, unidimensionale e in base zero in cui effettuare la ricerca. </param>
      <param name="index">Indice iniziale dell'intervallo in cui eseguire la ricerca.</param>
      <param name="length">Lunghezza dell'intervallo in cui eseguire la ricerca.</param>
      <param name="value">Oggetto da cercare.</param>
      <param name="comparer">Implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> da usare quando si confrontano gli elementi.-oppure- null per usare l'implementazione <see cref="T:System.IComparable`1" /> di ciascun elemento.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore del limite inferiore di <paramref name="array" />.-oppure-<paramref name="length" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="length" /> non specificano un intervallo valido in <paramref name="array" />.-oppure-<paramref name="comparer" /> è null, e <paramref name="value" /> è di un tipo non compatibile con gli elementi di <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> è null e <paramref name="T" /> non implementa l'interfaccia generica <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],``0)">
      <summary>Effettua una ricerca in un'intera matrice unidimensionale ordinata per un elemento specifico, usando l'interfaccia generica <see cref="T:System.IComparable`1" /> implementata da ogni elemento di <see cref="T:System.Array" /> e dall'oggetto specificato.</summary>
      <returns>Indice di <paramref name="value" /> specificato nell'oggetto <paramref name="array" /> specificato, se <paramref name="value" /> è stato trovato.Se <paramref name="value" /> non viene trovato e <paramref name="value" /> è minore di uno o più elementi di <paramref name="array" />, un numero negativo che corrisponde al complemento bit per bit dell'indice del primo elemento maggiore di <paramref name="value" />.Se <paramref name="value" /> non viene trovato e <paramref name="value" /> è maggiore di qualsiasi elemento di <paramref name="array" />, un numero negativo che corrisponde al complemento bit per bit dell'indice dell'ultimo elemento + 1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> ordinato, unidimensionale e in base zero in cui effettuare la ricerca. </param>
      <param name="value">Oggetto da cercare.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="T" /> non implementa l'interfaccia generica <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],``0,System.Collections.Generic.IComparer{``0})">
      <summary>Mediante l'interfaccia generica <see cref="T:System.Collections.Generic.IComparer`1" /> specificata, effettua la ricerca di un valore all'interno di una matrice unidimensionale e ordinata.</summary>
      <returns>Indice di <paramref name="value" /> specificato nell'oggetto <paramref name="array" /> specificato, se <paramref name="value" /> è stato trovato.Se <paramref name="value" /> non viene trovato e <paramref name="value" /> è minore di uno o più elementi di <paramref name="array" />, un numero negativo che corrisponde al complemento bit per bit dell'indice del primo elemento maggiore di <paramref name="value" />.Se <paramref name="value" /> non viene trovato e <paramref name="value" /> è maggiore di qualsiasi elemento di <paramref name="array" />, un numero negativo che corrisponde al complemento bit per bit dell'indice dell'ultimo elemento + 1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> ordinato, unidimensionale e in base zero in cui effettuare la ricerca.  </param>
      <param name="value">Oggetto da cercare.</param>
      <param name="comparer">Implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> da usare quando si confrontano gli elementi.-oppure- null per usare l'implementazione <see cref="T:System.IComparable`1" /> di ciascun elemento.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparer" /> è null, e <paramref name="value" /> è di un tipo non compatibile con gli elementi di <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> è null e <paramref name="T" /> non implementa l'interfaccia generica <see cref="T:System.IComparable`1" /></exception>
    </member>
    <member name="M:System.Array.Clear(System.Array,System.Int32,System.Int32)">
      <summary>Imposta un intervallo di elementi in una matrice sul valore predefinito di ogni tipo di elemento.</summary>
      <param name="array">Matrice i cui elementi devono essere cancellati.</param>
      <param name="index">Indice iniziale dell'intervallo di elementi da cancellare.</param>
      <param name="length">Numero di elementi da cancellare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> è minore del limite inferiore di <paramref name="array" />.-oppure-<paramref name="length" /> è minore di zero.-oppure-La somma di <paramref name="index" /> e <paramref name="length" /> è maggiore della dimensione di <paramref name="array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Clone">
      <summary>Crea una copia superficiale di <see cref="T:System.Array" />.</summary>
      <returns>Copia superficiale di <see cref="T:System.Array" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Copia un intervallo di elementi da un oggetto <see cref="T:System.Array" /> a partire dall'indice di origine specificato e lo incolla in un altro oggetto <see cref="T:System.Array" /> a partire dall'indice di destinazione specificato.Garantisce che tutte le modifiche vengano annullate se la copia non riesce completamente.</summary>
      <param name="sourceArray">Oggetto <see cref="T:System.Array" /> contenente i dati da copiare.</param>
      <param name="sourceIndex">Intero a 32 bit che rappresenta l'indice in <paramref name="sourceArray" /> da cui avviare la copia.</param>
      <param name="destinationArray">Oggetto <see cref="T:System.Array" /> che riceve i dati.</param>
      <param name="destinationIndex">Intero a 32 bit che rappresenta l'indice in <paramref name="destinationArray" /> da cui avviare la memorizzazione.</param>
      <param name="length">Intero a 32 bit che rappresenta il numero di elementi da copiare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" /> è null.-oppure-<paramref name="destinationArray" /> è null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="sourceArray" /> e <paramref name="destinationArray" /> hanno intervalli diversi.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">Il tipo della matrice di origine <paramref name="sourceArray" /> non è lo stesso e non è derivato dal tipo della matrice di destinazione <paramref name="destinationArray" />.</exception>
      <exception cref="T:System.InvalidCastException">Non è possibile eseguire il cast di almeno un elemento in <paramref name="sourceArray" /> al tipo di <paramref name="destinationArray" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" /> è minore del limite inferiore della prima dimensione di <paramref name="sourceArray" />.-oppure-<paramref name="destinationIndex" /> è minore del limite inferiore della prima dimensione di <paramref name="destinationArray" />.-oppure-<paramref name="length" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="length" /> è maggiore del numero di elementi compresi tra <paramref name="sourceIndex" /> e la fine di <paramref name="sourceArray" />.-oppure-<paramref name="length" /> è maggiore del numero di elementi compresi tra <paramref name="destinationIndex" /> e la fine di <paramref name="destinationArray" />.</exception>
    </member>
    <member name="M:System.Array.Copy(System.Array,System.Array,System.Int32)">
      <summary>Copia un intervallo di elementi da un oggetto <see cref="T:System.Array" /> a partire dal primo elemento e lo incolla in un altro oggetto <see cref="T:System.Array" /> a partire dal primo elemento.La lunghezza viene specificata come intero a 32 bit.</summary>
      <param name="sourceArray">Oggetto <see cref="T:System.Array" /> contenente i dati da copiare.</param>
      <param name="destinationArray">Oggetto <see cref="T:System.Array" /> che riceve i dati.</param>
      <param name="length">Intero a 32 bit che rappresenta il numero di elementi da copiare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" /> è null.-oppure-<paramref name="destinationArray" /> è null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="sourceArray" /> e <paramref name="destinationArray" /> hanno intervalli diversi.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">
        <paramref name="sourceArray" /> e <paramref name="destinationArray" /> sono di tipi incompatibili.</exception>
      <exception cref="T:System.InvalidCastException">Non è possibile eseguire il cast di almeno un elemento in <paramref name="sourceArray" /> al tipo di <paramref name="destinationArray" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="length" /> è maggiore del numero di elementi in <paramref name="sourceArray" />.-oppure-<paramref name="length" /> è maggiore del numero di elementi in <paramref name="destinationArray" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Copia un intervallo di elementi da un oggetto <see cref="T:System.Array" /> a partire dall'indice di origine specificato e lo incolla in un altro oggetto <see cref="T:System.Array" /> a partire dall'indice di destinazione specificato.La lunghezza e gli indici vengono specificati come interi a 32 bit.</summary>
      <param name="sourceArray">Oggetto <see cref="T:System.Array" /> contenente i dati da copiare.</param>
      <param name="sourceIndex">Intero a 32 bit che rappresenta l'indice in <paramref name="sourceArray" /> da cui avviare la copia.</param>
      <param name="destinationArray">Oggetto <see cref="T:System.Array" /> che riceve i dati.</param>
      <param name="destinationIndex">Intero a 32 bit che rappresenta l'indice in <paramref name="destinationArray" /> da cui avviare la memorizzazione.</param>
      <param name="length">Intero a 32 bit che rappresenta il numero di elementi da copiare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" /> è null.-oppure-<paramref name="destinationArray" /> è null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="sourceArray" /> e <paramref name="destinationArray" /> hanno intervalli diversi.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">
        <paramref name="sourceArray" /> e <paramref name="destinationArray" /> sono di tipi incompatibili.</exception>
      <exception cref="T:System.InvalidCastException">Non è possibile eseguire il cast di almeno un elemento in <paramref name="sourceArray" /> al tipo di <paramref name="destinationArray" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" /> è minore del limite inferiore della prima dimensione di <paramref name="sourceArray" />.-oppure-<paramref name="destinationIndex" /> è minore del limite inferiore della prima dimensione di <paramref name="destinationArray" />.-oppure-<paramref name="length" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="length" /> è maggiore del numero di elementi compresi tra <paramref name="sourceIndex" /> e la fine di <paramref name="sourceArray" />.-oppure-<paramref name="length" /> è maggiore del numero di elementi compresi tra <paramref name="destinationIndex" /> e la fine di <paramref name="destinationArray" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CopyTo(System.Array,System.Int32)">
      <summary>Copia tutti gli elementi dell'attuale matrice unidimensionale nella matrice unidimensionale specificata a partire dall'indice della matrice di destinazione indicato.L'indice viene specificato come intero a 32 bit.</summary>
      <param name="array">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dalla matrice corrente.</param>
      <param name="index">Intero a 32 bit che rappresenta l'indice in <paramref name="array" /> da cui avviare la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore del limite inferiore di <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.-oppure-Il numero degli elementi nella matrice di origine è maggiore del numero di elementi disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">Non è possibile eseguire automaticamente il cast del tipo dell'oggetto <see cref="T:System.Array" /> di origine al tipo del parametro <paramref name="array" /> di destinazione.</exception>
      <exception cref="T:System.RankException">La matrice di origine è multidimensionale.</exception>
      <exception cref="T:System.InvalidCastException">Non è possibile eseguire il cast di almeno un elemento nell'oggetto <see cref="T:System.Array" /> di origine al tipo di <paramref name="array" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32)">
      <summary>Crea un oggetto <see cref="T:System.Array" /> unidimensionale dell'oggetto <see cref="T:System.Type" /> e della lunghezza specificati, con indice in base zero.</summary>
      <returns>Nuovo oggetto <see cref="T:System.Array" /> unidimensionale dell'oggetto <see cref="T:System.Type" /> specificato con la lunghezza specificata, con indice in base zero.</returns>
      <param name="elementType">
        <see cref="T:System.Type" /> dell'oggetto <see cref="T:System.Array" /> da creare.</param>
      <param name="length">Dimensione dell'oggetto <see cref="T:System.Array" /> da creare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementType" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementType" /> non è un oggetto <see cref="T:System.Type" /> valido.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" /> non è supportato.Per esempio, il tipo <see cref="T:System.Void" /> non è supportato.-oppure-<paramref name="elementType" /> è un tipo generico aperto.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> è minore di zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32[])">
      <summary>Crea un oggetto <see cref="T:System.Array" /> multidimensionale dell'oggetto <see cref="T:System.Type" /> specificato e delle lunghezze della dimensione, con indice in base zero.Le lunghezze delle dimensioni vengono specificate in una matrice di interi a 32 bit.</summary>
      <returns>Nuovo oggetto <see cref="T:System.Array" /> multidimensionale dell'oggetto <see cref="T:System.Type" /> specificato con lunghezza indicata per ogni dimensione, usando l'indice in base zero.</returns>
      <param name="elementType">
        <see cref="T:System.Type" /> dell'oggetto <see cref="T:System.Array" /> da creare.</param>
      <param name="lengths">Matrice di interi a 32 bit che rappresentano le grandezze di ciascuna dimensione dell'oggetto <see cref="T:System.Array" /> da creare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementType" /> è null.-oppure-<paramref name="lengths" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementType" /> non è un oggetto <see cref="T:System.Type" /> valido.-oppure-La matrice <paramref name="lengths" /> contiene meno di un elemento.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" /> non è supportato.Per esempio, il tipo <see cref="T:System.Void" /> non è supportato.-oppure-<paramref name="elementType" /> è un tipo generico aperto.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Ogni valore in <paramref name="lengths" /> è minore di zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32[],System.Int32[])">
      <summary>Crea un oggetto <see cref="T:System.Array" /> multidimensionale dell'oggetto <see cref="T:System.Type" /> e delle lunghezze di dimensioni specificati, con i limiti inferiori specificati.</summary>
      <returns>Crea un oggetto <see cref="T:System.Array" /> multidimensionale dell'oggetto <see cref="T:System.Type" /> specificato con la lunghezza e il limite inferiore specificati per ogni dimensione.</returns>
      <param name="elementType">
        <see cref="T:System.Type" /> dell'oggetto <see cref="T:System.Array" /> da creare.</param>
      <param name="lengths">Matrice unidimensionale che contiene le misure di ciascuna dimensione dell'oggetto <see cref="T:System.Array" /> da creare.</param>
      <param name="lowerBounds">Matrice unidimensionale che contiene il limite inferiore (indice iniziale) di ogni dimensione dell'oggetto <see cref="T:System.Array" /> da creare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementType" /> è null.-oppure-<paramref name="lengths" /> è null.-oppure-<paramref name="lowerBounds" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementType" /> non è un oggetto <see cref="T:System.Type" /> valido.-oppure-La matrice <paramref name="lengths" /> contiene meno di un elemento.-oppure-Le matrici <paramref name="lengths" /> e <paramref name="lowerBounds" /> non contengono lo stesso numero di elementi.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" /> non è supportato.Per esempio, il tipo <see cref="T:System.Void" /> non è supportato.-oppure-<paramref name="elementType" /> è un tipo generico aperto.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Ogni valore in <paramref name="lengths" /> è minore di zero.-oppure-Uno dei valori contenuti nel parametro <paramref name="lowerBounds" /> è tanto grande che la somma del limite inferiore e della lunghezza di una dimensione risulta essere maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Empty``1">
      <summary>Restituisce una matrice vuota.</summary>
      <returns>Restituisce un oggetto <see cref="T:System.Array" /> vuoto.</returns>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
    </member>
    <member name="M:System.Array.Exists``1(``0[],System.Predicate{``0})">
      <summary>Determina se la matrice indicata contiene elementi che soddisfano le condizioni definite nel predicato specificato.</summary>
      <returns>true se l'oggetto <paramref name="array" /> contiene uno o più elementi che soddisfano le condizioni definite dal predicato specificato; in caso contrario, false.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale e in base zero in cui effettuare la ricerca.</param>
      <param name="match">Oggetto <see cref="T:System.Predicate`1" /> che definisce le condizioni degli elementi da cercare.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.-oppure-<paramref name="match" /> è null.</exception>
    </member>
    <member name="M:System.Array.Find``1(``0[],System.Predicate{``0})">
      <summary>Cerca un elemento che soddisfi le condizioni definite nel predicato specificato e restituisce la prima occorrenza all'interno dell'intero oggetto <see cref="T:System.Array" />.</summary>
      <returns>Primo elemento che soddisfa le condizioni definite dal predicato specificato, se trovato; altrimenti viene restituito il valore predefinito del tipo <paramref name="T" />.</returns>
      <param name="array">Matrice unidimensionale e in base zero in cui effettuare la ricerca.</param>
      <param name="match">Predicato che definisce le condizioni dell'elemento da cercare.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.-oppure-<paramref name="match" /> è null.</exception>
    </member>
    <member name="M:System.Array.FindAll``1(``0[],System.Predicate{``0})">
      <summary>Recupera tutti gli elementi che soddisfano le condizioni definite nel predicato specificato.</summary>
      <returns>Oggetto <see cref="T:System.Array" /> contenente tutti gli elementi che soddisfano le condizioni definite nel predicato specificato, se trovati; in caso contrario, verrà restituito un oggetto <see cref="T:System.Array" /> vuoto.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale e in base zero in cui effettuare la ricerca.</param>
      <param name="match">Oggetto <see cref="T:System.Predicate`1" /> che definisce le condizioni degli elementi da cercare.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.-oppure-<paramref name="match" /> è null.</exception>
    </member>
    <member name="M:System.Array.FindIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})">
      <summary>Cerca un elemento che soddisfi le condizioni definite dal predicato specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'intervallo di elementi nell'oggetto <see cref="T:System.Array" /> che inizia dall'indice specificato e contiene il numero indicato di elementi.</summary>
      <returns>Indice in base zero della prima occorrenza di un elemento che corrisponde alle condizioni definite da <paramref name="match" />, se presente; in caso contrario, –1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale e in base zero in cui effettuare la ricerca.</param>
      <param name="startIndex">Indice iniziale in base zero della ricerca.</param>
      <param name="count">Numero di elementi nella sezione in cui effettuare la ricerca.</param>
      <param name="match">Oggetto <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.-oppure-<paramref name="match" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non rientra nell'intervallo di indici validi per <paramref name="array" />.-oppure-<paramref name="count" /> è minore di zero.-oppure-<paramref name="startIndex" /> e <paramref name="count" /> non specificano una sezione valida in <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.FindIndex``1(``0[],System.Int32,System.Predicate{``0})">
      <summary>Cerca un elemento che soddisfi le condizioni definite dal predicato specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'intervallo di elementi nell'oggetto <see cref="T:System.Array" /> compreso tra l'indice specificato e l'ultimo elemento.</summary>
      <returns>Indice in base zero della prima occorrenza di un elemento che corrisponde alle condizioni definite da <paramref name="match" />, se presente; in caso contrario, –1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale e in base zero in cui effettuare la ricerca.</param>
      <param name="startIndex">Indice iniziale in base zero della ricerca.</param>
      <param name="match">Oggetto <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.-oppure-<paramref name="match" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non rientra nell'intervallo di indici validi per <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.FindIndex``1(``0[],System.Predicate{``0})">
      <summary>Cerca un elemento che corrisponda alle condizioni definite dal predicato specificato e restituisce l'indice in base zero della prima occorrenza all'interno di <see cref="T:System.Array" />.</summary>
      <returns>Indice in base zero della prima occorrenza di un elemento che corrisponde alle condizioni definite da <paramref name="match" />, se presente; in caso contrario, –1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale e in base zero in cui effettuare la ricerca.</param>
      <param name="match">Oggetto <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.-oppure-<paramref name="match" /> è null.</exception>
    </member>
    <member name="M:System.Array.FindLast``1(``0[],System.Predicate{``0})">
      <summary>Cerca un elemento che soddisfi le condizioni definite nel predicato specificato e restituisce l'ultima occorrenza all'interno dell'intero oggetto <see cref="T:System.Array" />.</summary>
      <returns>Ultimo elemento che soddisfa le condizioni definite dal predicato specificato, se trovato; altrimenti viene restituito il valore predefinito del tipo <paramref name="T" />.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale e in base zero in cui effettuare la ricerca.</param>
      <param name="match">Oggetto <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.-oppure-<paramref name="match" /> è null.</exception>
    </member>
    <member name="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})">
      <summary>Cerca un elemento che soddisfi le condizioni definite dal predicato specificato e restituisce l'indice in base zero dell'ultima occorrenza all'interno dell'intervallo di elementi in <see cref="T:System.Array" /> che contiene il numero indicato di elementi e termina in corrispondenza dell'indice specificato.</summary>
      <returns>Indice in base zero dell'ultima occorrenza di un elemento che corrisponde alle condizioni definite in <paramref name="match" />, se presente; in caso contrario, –1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale e in base zero in cui effettuare la ricerca.</param>
      <param name="startIndex">Indice iniziale in base zero della ricerca all'indietro.</param>
      <param name="count">Numero di elementi nella sezione in cui effettuare la ricerca.</param>
      <param name="match">Oggetto <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.-oppure-<paramref name="match" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non rientra nell'intervallo di indici validi per <paramref name="array" />.-oppure-<paramref name="count" /> è minore di zero.-oppure-<paramref name="startIndex" /> e <paramref name="count" /> non specificano una sezione valida in <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Predicate{``0})">
      <summary>Cerca un elemento che soddisfi le condizioni definite dal predicato specificato e restituisce l'indice in base zero dell'ultima occorrenza all'interno dell'intervallo di elementi in <see cref="T:System.Array" /> compreso tra il primo elemento e l'indice specificato.</summary>
      <returns>Indice in base zero dell'ultima occorrenza di un elemento che corrisponde alle condizioni definite in <paramref name="match" />, se presente; in caso contrario, –1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale e in base zero in cui effettuare la ricerca.</param>
      <param name="startIndex">Indice iniziale in base zero della ricerca all'indietro.</param>
      <param name="match">Oggetto <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.-oppure-<paramref name="match" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non rientra nell'intervallo di indici validi per <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.FindLastIndex``1(``0[],System.Predicate{``0})">
      <summary>Cerca un elemento che soddisfi le condizioni definite dal predicato specificato e restituisce l'indice in base zero dell'ultima occorrenza all'interno dell'intero oggetto <see cref="T:System.Array" />.</summary>
      <returns>Indice in base zero dell'ultima occorrenza di un elemento che corrisponde alle condizioni definite in <paramref name="match" />, se presente; in caso contrario, –1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale e in base zero in cui effettuare la ricerca.</param>
      <param name="match">Oggetto <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.-oppure-<paramref name="match" /> è null.</exception>
    </member>
    <member name="M:System.Array.GetEnumerator">
      <summary>Restituisce <see cref="T:System.Collections.IEnumerator" /> per <see cref="T:System.Array" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> per l'oggetto <see cref="T:System.Array" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.GetLength(System.Int32)">
      <summary>Ottiene un intero a 32 bit che rappresenta il numero di elementi nella dimensione specificata di <see cref="T:System.Array" />.</summary>
      <returns>Intero a 32 bit che rappresenta il numero di elementi nella dimensione specificata.</returns>
      <param name="dimension">Dimensione in base zero di <see cref="T:System.Array" /> di cui è necessario determinare la lunghezza.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="dimension" /> è minore di zero.-oppure-<paramref name="dimension" /> è uguale a o maggiore di <see cref="P:System.Array.Rank" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.GetLowerBound(System.Int32)">
      <summary>Ottiene l'indice del primo elemento della dimensione specificata nella matrice.</summary>
      <returns>Indice del primo elemento della dimensione specificata nella matrice.</returns>
      <param name="dimension">Dimensione in base zero della matrice di cui è necessario determinare l'indice iniziale.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="dimension" /> è minore di zero.-oppure-<paramref name="dimension" /> è uguale a o maggiore di <see cref="P:System.Array.Rank" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.GetUpperBound(System.Int32)">
      <summary>Ottiene l'indice dell'ultimo elemento della dimensione specificata nella matrice.</summary>
      <returns>Indice dell'ultimo elemento della dimensione specificata nella matrice oppure -1 se la dimensione specificata è vuota. </returns>
      <param name="dimension">Dimensione in base zero della matrice di cui è necessario determinare il limite superiore.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="dimension" /> è minore di zero.-oppure-<paramref name="dimension" /> è uguale a o maggiore di <see cref="P:System.Array.Rank" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.GetValue(System.Int32)">
      <summary>Ottiene il valore in corrispondenza della posizione specificata nell'oggetto <see cref="T:System.Array" /> unidimensionale.L'indice viene specificato come intero a 32 bit.</summary>
      <returns>Il valore in corrispondenza della posizione specificata nell'oggetto <see cref="T:System.Array" /> unidimensionale.</returns>
      <param name="index">Intero a 32 bit che rappresenta la posizione dell'elemento <see cref="T:System.Array" /> da ottenere.</param>
      <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.Array" /> corrente non ha esattamente una dimensione.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> non è compreso nell'intervallo di indici validi per l'oggetto <see cref="T:System.Array" /> corrente.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.GetValue(System.Int32[])">
      <summary>Ottiene il valore in corrispondenza della posizione specificata nell'oggetto <see cref="T:System.Array" /> multidimensionale.Gli indici vengono specificati come una matrice di interi a 32 bit.</summary>
      <returns>Valore in corrispondenza della posizione specificata nell'oggetto <see cref="T:System.Array" /> multidimensionale.</returns>
      <param name="indices">Matrice unidimensionale di interi a 32 bit che rappresentano gli indici che specificano la posizione dell'elemento <see cref="T:System.Array" /> da ottenere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="indices" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Il numero di dimensioni nell'oggetto <see cref="T:System.Array" /> corrente non è uguale al numero di elementi in <paramref name="indices" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Ogni elemento in <paramref name="indices" /> non è compreso nell'intervallo di indici validi per la dimensione corrispondente dell'oggetto <see cref="T:System.Array" /> corrente.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf(System.Array,System.Object)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice della prima ricorrenza all'interno di una matrice unidimensionale. </summary>
      <returns>Indice della prima occorrenza di <paramref name="value" /> nell'oggetto <paramref name="array" />, se trovato; in caso contrario, verrà restituito il limite inferiore della matrice meno 1.</returns>
      <param name="array">Matrice unidimensionale da cercare.</param>
      <param name="value">Oggetto da individuare in <paramref name="array" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> è multidimensionale.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf(System.Array,System.Object,System.Int32)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice della prima occorrenza in un intervallo di elementi di una matrice unidimensionale.L'intervallo si estende da un indice specificato fino alla fine della matrice.</summary>
      <returns>Indice della prima occorrenza di <paramref name="value" />, se trovato, all'interno degli elementi nell'oggetto <paramref name="array" /> che si estende da <paramref name="startIndex" /> fino all'ultimo elemento; in caso contrario verrà restituito il limite inferiore della matrice meno 1.</returns>
      <param name="array">Matrice unidimensionale da cercare.</param>
      <param name="value">Oggetto da individuare in <paramref name="array" />.</param>
      <param name="startIndex">Indice iniziale della ricerca.0 (zero) è valido in una matrice vuota.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non rientra nell'intervallo di indici validi per <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> è multidimensionale.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf(System.Array,System.Object,System.Int32,System.Int32)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice della prima occorrenza in un intervallo di elementi di una matrice unidimensionale.L'intervallo si estende da un indice specificato per un numero specificato di elementi.</summary>
      <returns>Indice della prima occorrenza di <paramref name="value" />, se trovato, nell'oggetto <paramref name="array" /> dall'indice <paramref name="startIndex" /> a <paramref name="startIndex" /> + <paramref name="count" /> - 1; in caso contrario, verrà restituito il limite inferiore della matrice -1.</returns>
      <param name="array">Matrice unidimensionale da cercare.</param>
      <param name="value">Oggetto da individuare in <paramref name="array" />.</param>
      <param name="startIndex">Indice iniziale della ricerca.0 (zero) è valido in una matrice vuota.</param>
      <param name="count">Numero di elementi in cui eseguire la ricerca.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non rientra nell'intervallo di indici validi per <paramref name="array" />.-oppure-<paramref name="count" /> è minore di zero.-oppure-<paramref name="startIndex" /> e <paramref name="count" /> non specificano una sezione valida in <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> è multidimensionale.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf``1(``0[],``0)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice della prima ricorrenza all'interno di una matrice unidimensionale.</summary>
      <returns>Indice in base zero della prima occorrenza di <paramref name="value" /> all'interno dell'intero oggetto <paramref name="array" />, se presente; in caso contrario, -1.</returns>
      <param name="array">Matrice unidimensionale e in base zero in cui effettuare la ricerca.</param>
      <param name="value">Oggetto da individuare in <paramref name="array" />.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
    </member>
    <member name="M:System.Array.IndexOf``1(``0[],``0,System.Int32)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice della prima occorrenza in un intervallo di elementi di una matrice unidimensionale.L'intervallo si estende da un indice specificato fino alla fine della matrice.</summary>
      <returns>Indice in base zero della prima occorrenza del valore indicato nel parametro <paramref name="value" /> all'interno dell'intervallo di elementi della matrice <paramref name="array" /> compreso tra l'indice <paramref name="startIndex" /> e l'ultimo elemento, se trovato; in caso contrario, -1.</returns>
      <param name="array">Matrice unidimensionale e in base zero in cui effettuare la ricerca.</param>
      <param name="value">Oggetto da individuare in <paramref name="array" />.</param>
      <param name="startIndex">Indice iniziale in base zero della ricerca.0 (zero) è valido in una matrice vuota.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non rientra nell'intervallo di indici validi per <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.IndexOf``1(``0[],``0,System.Int32,System.Int32)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice della prima occorrenza in un intervallo di elementi di una matrice unidimensionale.L'intervallo si estende da un indice specificato per un numero specificato di elementi.</summary>
      <returns>Indice in base zero della prima occorrenza del valore indicato nel parametro <paramref name="value" /> all'interno dell'intervallo di elementi della matrice <paramref name="array" /> che inizia dall'indice <paramref name="startIndex" /> e contiene il numero di elementi specificato nel parametro <paramref name="count" />, se trovato; in caso contrario, -1.</returns>
      <param name="array">Matrice unidimensionale e in base zero in cui effettuare la ricerca.</param>
      <param name="value">Oggetto da individuare in <paramref name="array" />.</param>
      <param name="startIndex">Indice iniziale in base zero della ricerca.0 (zero) è valido in una matrice vuota.</param>
      <param name="count">Numero di elementi nella sezione in cui effettuare la ricerca.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non rientra nell'intervallo di indici validi per <paramref name="array" />.-oppure-<paramref name="count" /> è minore di zero.-oppure-<paramref name="startIndex" /> e <paramref name="count" /> non specificano una sezione valida in <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.Initialize">
      <summary>Inizializza ogni elemento del tipo valore <see cref="T:System.Array" /> tramite chiamate al costruttore predefinito del tipo valore.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf(System.Array,System.Object)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice dell'ultima ricorrenza all'interno dell'oggetto <see cref="T:System.Array" /> unidimensionale intero.</summary>
      <returns>Indice dell'ultima occorrenza del valore indicato nel parametro <paramref name="value" /> all'interno dell'intera matrice <paramref name="array" />, se trovato; in caso contrario, verrà restituito il limite inferiore della matrice meno 1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale di cui effettuare la ricerca.</param>
      <param name="value">Oggetto da individuare in <paramref name="array" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> è multidimensionale.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice dell'ultima occorrenza all'interno dell'intervallo di elementi dell'oggetto <see cref="T:System.Array" /> unidimensionale compreso tra il primo elemento e l'indice specificato.</summary>
      <returns>Indice della prima occorrenza del valore indicato nel parametro <paramref name="value" /> all'interno dell'intervallo di elementi della matrice <paramref name="array" /> compreso tra il primo elemento e l'indice <paramref name="startIndex" />, se trovato; in caso contrario, verrà restituito il limite inferiore della matrice meno 1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale di cui effettuare la ricerca.</param>
      <param name="value">Oggetto da individuare in <paramref name="array" />.</param>
      <param name="startIndex">Indice iniziale della ricerca all'indietro.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non rientra nell'intervallo di indici validi per <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> è multidimensionale.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32,System.Int32)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice dell'ultima occorrenza all'interno dell'intervallo di elementi dell'oggetto <see cref="T:System.Array" /> unidimensionale che contiene il numero specificato di elementi e termina in corrispondenza dell'indice specificato.</summary>
      <returns>Indice dell'ultima occorrenza del valore indicato nel parametro <paramref name="value" /> all'interno dell'intervallo di elementi della matrice <paramref name="array" /> che contiene il numero di elementi specificato nel parametro <paramref name="count" /> e termina in corrispondenza dell'indice <paramref name="startIndex" />, se trovato; in caso contrario, verrà restituito il limite inferiore della matrice meno 1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale di cui effettuare la ricerca.</param>
      <param name="value">Oggetto da individuare in <paramref name="array" />.</param>
      <param name="startIndex">Indice iniziale della ricerca all'indietro.</param>
      <param name="count">Numero di elementi nella sezione in cui effettuare la ricerca.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non rientra nell'intervallo di indici validi per <paramref name="array" />.-oppure-<paramref name="count" /> è minore di zero.-oppure-<paramref name="startIndex" /> e <paramref name="count" /> non specificano una sezione valida in <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> è multidimensionale.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf``1(``0[],``0)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice dell'ultima occorrenza all'interno dell'intera classe <see cref="T:System.Array" />.</summary>
      <returns>Indice in base zero dell'ultima occorrenza del valore indicato nel parametro <paramref name="value" /> all'interno dell'intera matrice <paramref name="array" />, se trovato; in caso contrario, -1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale e in base zero in cui effettuare la ricerca.</param>
      <param name="value">Oggetto da individuare in <paramref name="array" />.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
    </member>
    <member name="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice dell'ultima occorrenza all'interno dell'intervallo di elementi dell'oggetto <see cref="T:System.Array" /> compreso tra il primo elemento e l'indice specificato.</summary>
      <returns>Indice in base zero dell'ultima occorrenza del valore indicato nel parametro <paramref name="value" /> all'interno dell'intervallo di elementi della matrice <paramref name="array" /> compreso tra il primo elemento e l'indice <paramref name="startIndex" />, se trovato; in caso contrario, -1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale e in base zero in cui effettuare la ricerca.</param>
      <param name="value">Oggetto da individuare in <paramref name="array" />.</param>
      <param name="startIndex">Indice iniziale in base zero della ricerca all'indietro.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non rientra nell'intervallo di indici validi per <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32,System.Int32)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice dell'ultima occorrenza all'interno dell'intervallo di elementi dell'oggetto <see cref="T:System.Array" /> che contiene il numero specificato di elementi e termina in corrispondenza dell'indice specificato.</summary>
      <returns>Indice in base zero dell'ultima occorrenza del valore indicato nel parametro <paramref name="value" /> all'interno dell'intervallo di elementi della matrice <paramref name="array" /> che contiene il numero di elementi specificato nel parametro <paramref name="count" /> e termina in corrispondenza dell'indice <paramref name="startIndex" />, se trovato; in caso contrario, -1.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale e in base zero in cui effettuare la ricerca.</param>
      <param name="value">Oggetto da individuare in <paramref name="array" />.</param>
      <param name="startIndex">Indice iniziale in base zero della ricerca all'indietro.</param>
      <param name="count">Numero di elementi nella sezione in cui effettuare la ricerca.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non rientra nell'intervallo di indici validi per <paramref name="array" />.-oppure-<paramref name="count" /> è minore di zero.-oppure-<paramref name="startIndex" /> e <paramref name="count" /> non specificano una sezione valida in <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Array.Length">
      <summary>Ottiene un intero a 32 bit che rappresenta il numero totale di elementi in tutte le dimensioni di <see cref="T:System.Array" />.</summary>
      <returns>Intero a 32 bit che rappresenta il numero totale di elementi in tutte le dimensioni dell'oggetto <see cref="T:System.Array" />; zero se non esistono elementi nella matrice.</returns>
      <exception cref="T:System.OverflowException">La matrice è multidimensionale e contiene più di <see cref="F:System.Int32.MaxValue" /> elementi.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Array.Rank">
      <summary>Ottiene la classificazione (numero di dimensioni) dell'oggetto <see cref="T:System.Array" />.Ad esempio, una matrice unidimensionale restituisce 1, una matrice bidimensionale restituisce 2 e così via.</summary>
      <returns>Classificazione (numero di dimensioni) dell'oggetto <see cref="T:System.Array" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Resize``1(``0[]@,System.Int32)">
      <summary>Modifica il numero di elementi di una matrice unidimensionale in una nuova dimensione specificata.</summary>
      <param name="array">Matrice in base zero unidimensionale da ridimensionare oppure null per creare una nuova matrice della dimensione specificata.</param>
      <param name="newSize">Dimensione della nuova matrice.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="newSize" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Array.Reverse(System.Array)">
      <summary>Inverte la sequenza degli elementi nell'intero oggetto <see cref="T:System.Array" /> unidimensionale.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale da invertire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null. </exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> è multidimensionale. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Reverse(System.Array,System.Int32,System.Int32)">
      <summary>Inverte la sequenza degli elementi in un intervallo di elementi dell'oggetto <see cref="T:System.Array" /> unidimensionale.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale da invertire.</param>
      <param name="index">Indice iniziale della sezione da invertire.</param>
      <param name="length">Numero di elementi nella sezione da invertire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> è multidimensionale.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore del limite inferiore di <paramref name="array" />.-oppure-<paramref name="length" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="length" /> non specificano un intervallo valido in <paramref name="array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.SetValue(System.Object,System.Int32)">
      <summary>Imposta una valore sull'elemento in corrispondenza della posizione specificata nell'oggetto <see cref="T:System.Array" /> unidimensionale.L'indice viene specificato come intero a 32 bit.</summary>
      <param name="value">Nuovo valore per l'elemento specificato.</param>
      <param name="index">Intero a 32 bit che rappresenta la posizione dell'elemento <see cref="T:System.Array" /> da impostare.</param>
      <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.Array" /> corrente non ha esattamente una dimensione.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non può essere impostato sul tipo di elemento della <see cref="T:System.Array" /> corrente.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> non è compreso nell'intervallo di indici validi per l'oggetto <see cref="T:System.Array" /> corrente.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.SetValue(System.Object,System.Int32[])">
      <summary>Imposta un valore sull'elemento in corrispondenza della posizione specificata nell'oggetto <see cref="T:System.Array" /> multidimensionale.Gli indici vengono specificati come una matrice di interi a 32 bit.</summary>
      <param name="value">Nuovo valore per l'elemento specificato.</param>
      <param name="indices">Matrice unidimensionale di interi a 32 bit che rappresentano gli indici che specificano la posizione dell'elemento da impostare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="indices" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Il numero di dimensioni nell'oggetto <see cref="T:System.Array" /> corrente non è uguale al numero di elementi in <paramref name="indices" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non può essere impostato sul tipo di elemento della <see cref="T:System.Array" /> corrente.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Ogni elemento in <paramref name="indices" /> non è compreso nell'intervallo di indici validi per la dimensione corrispondente dell'oggetto <see cref="T:System.Array" /> corrente.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array)">
      <summary>Ordina gli elementi di un'intera matrice <see cref="T:System.Array" /> unidimensionale usando l'implementazione dell'interfaccia <see cref="T:System.IComparable" /> di ogni elemento dell'oggetto <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale da ordinare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> è multidimensionale.</exception>
      <exception cref="T:System.InvalidOperationException">Uno o più elementi in <paramref name="array" /> non implementano l'interfaccia <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array)">
      <summary>Ordina una coppia di oggetti <see cref="T:System.Array" /> unidimensionali (uno contenente le chiavi e l'altro contenente gli elementi corrispondenti) in base alle chiavi del primo oggetto <see cref="T:System.Array" /> usando l'implementazione dell'interfaccia <see cref="T:System.IComparable" /> di ogni chiave.</summary>
      <param name="keys">Oggetto <see cref="T:System.Array" /> unidimensionale che contiene le chiavi da ordinare.</param>
      <param name="items">Oggetto <see cref="T:System.Array" /> unidimensionale contenente gli elementi che corrispondono a ogni chiave nell'oggetto <see cref="T:System.Array" /><paramref name="keys" />.-oppure-null per ordinare solo l'oggetto <see cref="T:System.Array" /><paramref name="keys" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> è null.</exception>
      <exception cref="T:System.RankException">L'elemento <paramref name="keys" /><see cref="T:System.Array" /> è multidimensionale.-oppure-L'elemento <paramref name="items" /><see cref="T:System.Array" /> è multidimensionale.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> non è null e la lunghezza di <paramref name="keys" /> è maggiore della lunghezza di <paramref name="items" />.</exception>
      <exception cref="T:System.InvalidOperationException">Uno o più elementi in <paramref name="keys" /><see cref="T:System.Array" /> non implementano l'interfaccia <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array,System.Collections.IComparer)">
      <summary>Ordina una coppia di oggetti <see cref="T:System.Array" /> unidimensionali (uno contenente le chiavi e l'altro contenente gli elementi corrispondenti) in base alle chiavi del primo oggetto <see cref="T:System.Array" /> usando l'interfaccia <see cref="T:System.Collections.IComparer" /> specificata.</summary>
      <param name="keys">Oggetto <see cref="T:System.Array" /> unidimensionale che contiene le chiavi da ordinare.</param>
      <param name="items">Oggetto <see cref="T:System.Array" /> unidimensionale contenente gli elementi che corrispondono a ogni chiave nell'oggetto <see cref="T:System.Array" /><paramref name="keys" />.-oppure-null per ordinare solo l'oggetto <see cref="T:System.Array" /><paramref name="keys" />.</param>
      <param name="comparer">Implementazione <see cref="T:System.Collections.IComparer" /> da usare quando si confrontano gli elementi.-oppure-null per usare l'implementazione <see cref="T:System.IComparable" /> di ciascun elemento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> è null.</exception>
      <exception cref="T:System.RankException">L'elemento <paramref name="keys" /><see cref="T:System.Array" /> è multidimensionale.-oppure-L'elemento <paramref name="items" /><see cref="T:System.Array" /> è multidimensionale.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> non è null e la lunghezza di <paramref name="keys" /> è maggiore della lunghezza di <paramref name="items" />. -oppure-L'implementazione di <paramref name="comparer" /> ha causato un errore durante l'ordinamento.Ad esempio, <paramref name="comparer" /> potrebbe non restituire 0 quando si confronta un elemento con se stesso.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> è null e uno o più elementi in <paramref name="keys" /><see cref="T:System.Array" /> non implementano l'interfaccia <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32)">
      <summary>Ordina un intervallo di elementi in una coppia di oggetti <see cref="T:System.Array" /> unidimensionali (uno contenente le chiavi e l'altro contenente gli elementi corrispondenti) in base alle chiavi nel primo oggetto <see cref="T:System.Array" /> usando l'implementazione <see cref="T:System.IComparable" /> di ogni chiave.</summary>
      <param name="keys">Oggetto <see cref="T:System.Array" /> unidimensionale che contiene le chiavi da ordinare.</param>
      <param name="items">Oggetto <see cref="T:System.Array" /> unidimensionale contenente gli elementi che corrispondono a ogni chiave nell'oggetto <see cref="T:System.Array" /><paramref name="keys" />.-oppure-null per ordinare solo l'oggetto <see cref="T:System.Array" /><paramref name="keys" />.</param>
      <param name="index">Indice iniziale dell'intervallo da ordinare.</param>
      <param name="length">Numero di elementi nell'intervallo da ordinare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> è null.</exception>
      <exception cref="T:System.RankException">L'elemento <paramref name="keys" /><see cref="T:System.Array" /> è multidimensionale.-oppure-L'elemento <paramref name="items" /><see cref="T:System.Array" /> è multidimensionale.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore del limite inferiore di <paramref name="keys" />.-oppure-<paramref name="length" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> non è null e la lunghezza di <paramref name="keys" /> è maggiore della lunghezza di <paramref name="items" />.-oppure-<paramref name="index" /> e <paramref name="length" /> non specificano un intervallo valido in <paramref name="keys" /><see cref="T:System.Array" />.-oppure-<paramref name="items" /> non è null e <paramref name="index" /> e <paramref name="length" /> non specificano un intervallo valido in <paramref name="items" /><see cref="T:System.Array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Uno o più elementi in <paramref name="keys" /><see cref="T:System.Array" /> non implementano l'interfaccia <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32,System.Collections.IComparer)">
      <summary>Ordina un intervallo di elementi in una coppia di oggetti <see cref="T:System.Array" /> unidimensionali (uno contenente le chiavi e l'altro contenente gli elementi corrispondenti) in base alle chiavi nel primo oggetto <see cref="T:System.Array" /> usando l'interfaccia <see cref="T:System.Collections.IComparer" /> specificata.</summary>
      <param name="keys">Oggetto <see cref="T:System.Array" /> unidimensionale che contiene le chiavi da ordinare.</param>
      <param name="items">Oggetto <see cref="T:System.Array" /> unidimensionale contenente gli elementi che corrispondono a ogni chiave nell'oggetto <see cref="T:System.Array" /><paramref name="keys" />.-oppure-null per ordinare solo l'oggetto <see cref="T:System.Array" /><paramref name="keys" />.</param>
      <param name="index">Indice iniziale dell'intervallo da ordinare.</param>
      <param name="length">Numero di elementi nell'intervallo da ordinare.</param>
      <param name="comparer">Implementazione <see cref="T:System.Collections.IComparer" /> da usare quando si confrontano gli elementi.-oppure-null per usare l'implementazione <see cref="T:System.IComparable" /> di ciascun elemento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> è null.</exception>
      <exception cref="T:System.RankException">L'elemento <paramref name="keys" /><see cref="T:System.Array" /> è multidimensionale.-oppure-L'elemento <paramref name="items" /><see cref="T:System.Array" /> è multidimensionale.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore del limite inferiore di <paramref name="keys" />.-oppure-<paramref name="length" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> non è null, e il limite inferiore di <paramref name="keys" /> non corrisponde al limite inferiore di <paramref name="items" />.-oppure-<paramref name="items" /> non è null e la lunghezza di <paramref name="keys" /> è maggiore della lunghezza di <paramref name="items" />.-oppure-<paramref name="index" /> e <paramref name="length" /> non specificano un intervallo valido in <paramref name="keys" /><see cref="T:System.Array" />.-oppure-<paramref name="items" /> non è null e <paramref name="index" /> e <paramref name="length" /> non specificano un intervallo valido in <paramref name="items" /><see cref="T:System.Array" />. -oppure-L'implementazione di <paramref name="comparer" /> ha causato un errore durante l'ordinamento.Ad esempio, <paramref name="comparer" /> potrebbe non restituire 0 quando si confronta un elemento con se stesso.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> è null e uno o più elementi in <paramref name="keys" /><see cref="T:System.Array" /> non implementano l'interfaccia <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Collections.IComparer)">
      <summary>Ordina gli elementi in un oggetto <see cref="T:System.Array" /> unidimensionale usando l'interfaccia <see cref="T:System.Collections.IComparer" /> specificata.</summary>
      <param name="array">Matrice unidimensionale da ordinare.</param>
      <param name="comparer">Implementazione da usare quando si confrontano elementi.-oppure-null per usare l'implementazione <see cref="T:System.IComparable" /> di ciascun elemento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> è multidimensionale.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> è null e uno o più elementi in <paramref name="array" /> non implementano l'interfaccia <see cref="T:System.IComparable" />.</exception>
      <exception cref="T:System.ArgumentException">L'implementazione di <paramref name="comparer" /> ha causato un errore durante l'ordinamento.Ad esempio, <paramref name="comparer" /> potrebbe non restituire 0 quando si confronta un elemento con se stesso.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Int32,System.Int32)">
      <summary>Ordina un intervallo di elementi di un oggetto <see cref="T:System.Array" /> unidimensionale usando l'implementazione <see cref="T:System.IComparable" /> di ogni elemento dell'oggetto <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale da ordinare.</param>
      <param name="index">Indice iniziale dell'intervallo da ordinare.</param>
      <param name="length">Numero di elementi nell'intervallo da ordinare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> è multidimensionale.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore del limite inferiore di <paramref name="array" />.-oppure-<paramref name="length" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="length" /> non specificano un intervallo valido in <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Uno o più elementi in <paramref name="array" /> non implementano l'interfaccia <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Int32,System.Int32,System.Collections.IComparer)">
      <summary>Ordina un intervallo di elementi di un oggetto <see cref="T:System.Array" /> unidimensionale usando l'interfaccia <see cref="T:System.Collections.IComparer" /> specificata.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale da ordinare.</param>
      <param name="index">Indice iniziale dell'intervallo da ordinare.</param>
      <param name="length">Numero di elementi nell'intervallo da ordinare.</param>
      <param name="comparer">Implementazione <see cref="T:System.Collections.IComparer" /> da usare quando si confrontano gli elementi.-oppure-null per usare l'implementazione <see cref="T:System.IComparable" /> di ciascun elemento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> è multidimensionale.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore del limite inferiore di <paramref name="array" />.-oppure-<paramref name="length" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="length" /> non specificano un intervallo valido in <paramref name="array" />. -oppure-L'implementazione di <paramref name="comparer" /> ha causato un errore durante l'ordinamento.Ad esempio, <paramref name="comparer" /> potrebbe non restituire 0 quando si confronta un elemento con se stesso.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> è null e uno o più elementi in <paramref name="array" /> non implementano l'interfaccia <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort``1(``0[])">
      <summary>Ordina gli elementi di un intero oggetto <see cref="T:System.Array" /> usando l'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> di ogni elemento dell'oggetto <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale e in base zero da ordinare.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">Uno o più elementi della matrice <paramref name="array" /> non implementano l'interfaccia generica <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Collections.Generic.IComparer{``0})">
      <summary>Ordina gli elementi di un oggetto <see cref="T:System.Array" /> usando l'interfaccia generica <see cref="T:System.Collections.Generic.IComparer`1" /> specificata.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale e in base zero da ordinare.</param>
      <param name="comparer">Implementazione dell'interfaccia generica <see cref="T:System.Collections.Generic.IComparer`1" /> da usare per il confronto fra gli elementi oppure null per usare l'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> di ciascun elemento.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> è null e uno o più elementi nella matrice <paramref name="array" /> non implementano l'interfaccia generica <see cref="T:System.IComparable`1" />.</exception>
      <exception cref="T:System.ArgumentException">L'implementazione di <paramref name="comparer" /> ha causato un errore durante l'ordinamento.Ad esempio, <paramref name="comparer" /> potrebbe non restituire 0 quando si confronta un elemento con se stesso.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Comparison{``0})">
      <summary>Ordina gli elementi di un oggetto <see cref="T:System.Array" /> usando l'interfaccia <see cref="T:System.Comparison`1" /> specificata.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale e in base zero da ordinare</param>
      <param name="comparison">Oggetto <see cref="T:System.Comparison`1" /> da usare quando si confrontano gli elementi.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.-oppure-<paramref name="comparison" /> è null.</exception>
      <exception cref="T:System.ArgumentException">L'implementazione di <paramref name="comparison" /> ha causato un errore durante l'ordinamento.Ad esempio, <paramref name="comparison" /> potrebbe non restituire 0 quando si confronta un elemento con se stesso.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Int32,System.Int32)">
      <summary>Ordina un intervallo di elementi di un oggetto <see cref="T:System.Array" /> usando l'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> di ogni elemento dell'oggetto <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale e in base zero da ordinare</param>
      <param name="index">Indice iniziale dell'intervallo da ordinare.</param>
      <param name="length">Numero di elementi nell'intervallo da ordinare.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore del limite inferiore di <paramref name="array" />.-oppure-<paramref name="length" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="length" /> non specificano un intervallo valido in <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Uno o più elementi della matrice <paramref name="array" /> non implementano l'interfaccia generica <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})">
      <summary>Ordina un intervallo di elementi di un oggetto <see cref="T:System.Array" /> usando l'interfaccia generica <see cref="T:System.Collections.Generic.IComparer`1" /> specificata.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale e in base zero da ordinare.</param>
      <param name="index">Indice iniziale dell'intervallo da ordinare.</param>
      <param name="length">Numero di elementi nell'intervallo da ordinare.</param>
      <param name="comparer">Implementazione dell'interfaccia generica <see cref="T:System.Collections.Generic.IComparer`1" /> da usare per il confronto fra gli elementi oppure null per usare l'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> di ciascun elemento.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore del limite inferiore di <paramref name="array" />.-oppure-<paramref name="length" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="length" /> non specificano un intervallo valido in <paramref name="array" />. -oppure-L'implementazione di <paramref name="comparer" /> ha causato un errore durante l'ordinamento.Ad esempio, <paramref name="comparer" /> potrebbe non restituire 0 quando si confronta un elemento con se stesso.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> è null e uno o più elementi nella matrice <paramref name="array" /> non implementano l'interfaccia generica <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[])">
      <summary>Ordina una coppia di oggetti <see cref="T:System.Array" /> (uno contenente le chiavi e l'altro contenente gli elementi corrispondenti) in base alle chiavi del primo oggetto <see cref="T:System.Array" /> usando l'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> di ogni chiave.</summary>
      <param name="keys">Oggetto <see cref="T:System.Array" /> unidimensionale in base zero che contiene le chiavi da ordinare. </param>
      <param name="items">Oggetto <see cref="T:System.Array" /> unidimensionale in base zero che contiene gli elementi che corrispondono alle chiavi indicate in <paramref name="keys" />; oppure null per ordinare solo <paramref name="keys" />.</param>
      <typeparam name="TKey">Tipo degli elementi della matrice delle chiavi.</typeparam>
      <typeparam name="TValue">Tipo degli elementi della matrice degli elementi.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> non è null, e il limite inferiore di <paramref name="keys" /> non corrisponde al limite inferiore di <paramref name="items" />.-oppure-<paramref name="items" /> non è null e la lunghezza di <paramref name="keys" /> è maggiore della lunghezza di <paramref name="items" />.</exception>
      <exception cref="T:System.InvalidOperationException">Uno o più elementi in <paramref name="keys" /><see cref="T:System.Array" /> non implementano l'interfaccia generica <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[],System.Collections.Generic.IComparer{``0})">
      <summary>Ordina una coppia di oggetti <see cref="T:System.Array" /> (uno contenente le chiavi e l'altro contenente gli elementi corrispondenti) in base alle chiavi nel primo oggetto <see cref="T:System.Array" /> usando l'interfaccia generica <see cref="T:System.Collections.Generic.IComparer`1" /> specificata.</summary>
      <param name="keys">Oggetto <see cref="T:System.Array" /> unidimensionale in base zero che contiene le chiavi da ordinare. </param>
      <param name="items">Oggetto <see cref="T:System.Array" /> unidimensionale in base zero che contiene gli elementi che corrispondono alle chiavi indicate in <paramref name="keys" />; oppure null per ordinare solo <paramref name="keys" />.</param>
      <param name="comparer">Implementazione dell'interfaccia generica <see cref="T:System.Collections.Generic.IComparer`1" /> da usare per il confronto fra gli elementi oppure null per usare l'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> di ciascun elemento.</param>
      <typeparam name="TKey">Tipo degli elementi della matrice delle chiavi.</typeparam>
      <typeparam name="TValue">Tipo degli elementi della matrice degli elementi.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> non è null, e il limite inferiore di <paramref name="keys" /> non corrisponde al limite inferiore di <paramref name="items" />.-oppure-<paramref name="items" /> non è null e la lunghezza di <paramref name="keys" /> è maggiore della lunghezza di <paramref name="items" />.-oppure-L'implementazione di <paramref name="comparer" /> ha causato un errore durante l'ordinamento.Ad esempio, <paramref name="comparer" /> potrebbe non restituire 0 quando si confronta un elemento con se stesso.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> is null e uno o più elementi in <paramref name="keys" /><see cref="T:System.Array" /> non implementano l'interfaccia generica <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32)">
      <summary>Ordina un intervallo di elementi in una coppia di oggetti <see cref="T:System.Array" /> (uno contenente le chiavi e l'altro contenente gli elementi corrispondenti) in base alle chiavi nel primo oggetto <see cref="T:System.Array" /> usando l'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> di ciascuna chiave.</summary>
      <param name="keys">Oggetto <see cref="T:System.Array" /> unidimensionale in base zero che contiene le chiavi da ordinare. </param>
      <param name="items">Oggetto <see cref="T:System.Array" /> unidimensionale in base zero che contiene gli elementi che corrispondono alle chiavi indicate in <paramref name="keys" />; oppure null per ordinare solo <paramref name="keys" />.</param>
      <param name="index">Indice iniziale dell'intervallo da ordinare.</param>
      <param name="length">Numero di elementi nell'intervallo da ordinare.</param>
      <typeparam name="TKey">Tipo degli elementi della matrice delle chiavi.</typeparam>
      <typeparam name="TValue">Tipo degli elementi della matrice degli elementi.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore del limite inferiore di <paramref name="keys" />.-oppure-<paramref name="length" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> non è null, e il limite inferiore di <paramref name="keys" /> non corrisponde al limite inferiore di <paramref name="items" />.-oppure-<paramref name="items" /> non è null e la lunghezza di <paramref name="keys" /> è maggiore della lunghezza di <paramref name="items" />.-oppure-<paramref name="index" /> e <paramref name="length" /> non specificano un intervallo valido in <paramref name="keys" /><see cref="T:System.Array" />.-oppure-<paramref name="items" /> non è null e <paramref name="index" /> e <paramref name="length" /> non specificano un intervallo valido in <paramref name="items" /><see cref="T:System.Array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Uno o più elementi in <paramref name="keys" /><see cref="T:System.Array" /> non implementano l'interfaccia generica <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})">
      <summary>Ordina un intervallo di elementi in una coppia di oggetti <see cref="T:System.Array" /> (uno contenente le chiavi e l'altro contenente gli elementi corrispondenti) in base alle chiavi nel primo oggetto <see cref="T:System.Array" /> usando l'interfaccia generica <see cref="T:System.Collections.Generic.IComparer`1" /> specificata.</summary>
      <param name="keys">Oggetto <see cref="T:System.Array" /> unidimensionale in base zero che contiene le chiavi da ordinare. </param>
      <param name="items">Oggetto <see cref="T:System.Array" /> unidimensionale in base zero che contiene gli elementi che corrispondono alle chiavi indicate in <paramref name="keys" />; oppure null per ordinare solo <paramref name="keys" />.</param>
      <param name="index">Indice iniziale dell'intervallo da ordinare.</param>
      <param name="length">Numero di elementi nell'intervallo da ordinare.</param>
      <param name="comparer">Implementazione dell'interfaccia generica <see cref="T:System.Collections.Generic.IComparer`1" /> da usare per il confronto fra gli elementi oppure null per usare l'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> di ciascun elemento.</param>
      <typeparam name="TKey">Tipo degli elementi della matrice delle chiavi.</typeparam>
      <typeparam name="TValue">Tipo degli elementi della matrice degli elementi.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore del limite inferiore di <paramref name="keys" />.-oppure-<paramref name="length" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> non è null, e il limite inferiore di <paramref name="keys" /> non corrisponde al limite inferiore di <paramref name="items" />.-oppure-<paramref name="items" /> non è null e la lunghezza di <paramref name="keys" /> è maggiore della lunghezza di <paramref name="items" />.-oppure-<paramref name="index" /> e <paramref name="length" /> non specificano un intervallo valido in <paramref name="keys" /><see cref="T:System.Array" />.-oppure-<paramref name="items" /> non è null e <paramref name="index" /> e <paramref name="length" /> non specificano un intervallo valido in <paramref name="items" /><see cref="T:System.Array" />. -oppure-L'implementazione di <paramref name="comparer" /> ha causato un errore durante l'ordinamento.Ad esempio, <paramref name="comparer" /> potrebbe non restituire 0 quando si confronta un elemento con se stesso.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> is null e uno o più elementi in <paramref name="keys" /><see cref="T:System.Array" /> non implementano l'interfaccia generica <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="P:System.Array.System#Collections#ICollection#Count">
      <summary>Ottiene il numero di elementi contenuti in <see cref="T:System.Array" />.</summary>
      <returns>Numero di elementi contenuti nella raccolta.</returns>
    </member>
    <member name="P:System.Array.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Array" /> è sincronizzato (thread-safe).</summary>
      <returns>true se l'accesso a <see cref="T:System.Array" /> è sincronizzato (thread-safe); in caso contrario, false.</returns>
    </member>
    <member name="P:System.Array.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Array" />.</summary>
      <returns>Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Array" />.</returns>
    </member>
    <member name="M:System.Array.System#Collections#IList#Add(System.Object)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />. </summary>
      <returns>L'aggiunta di valori alla matrice non è supportata.Non vengono restituiti valori.</returns>
      <param name="value">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">L'oggetto <see cref="T:System.Collections.IList" /> è di dimensioni fisse.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#Clear">
      <summary>Rimuove tutti gli elementi da <see cref="T:System.Collections.IList" />.</summary>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.IList" /> è di sola lettura.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#Contains(System.Object)">
      <summary>Determina se un elemento è incluso in <see cref="T:System.Collections.IList" />.</summary>
      <returns>true se <paramref name="value" /> è presente in <see cref="T:System.Collections.IList" />; in caso contrario, false.</returns>
      <param name="value">Oggetto da individuare nell'elenco corrente.L'elemento da individuare può essere null per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Array.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determina l'indice di un elemento specifico in <see cref="T:System.Collections.IList" />.</summary>
      <returns>Indice di value, se presente nell'elenco; in caso contrario, -1.</returns>
      <param name="value">Oggetto da individuare nell'elenco corrente.</param>
    </member>
    <member name="M:System.Array.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserisce un elemento in <see cref="T:System.Collections.IList" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in cui <paramref name="value" /> dovrebbe essere inserito.</param>
      <param name="value">Oggetto da inserire.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.IList" /> è di sola lettura.-oppure- L'oggetto <see cref="T:System.Collections.IList" /> è di dimensioni fisse. </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="value" /> è un riferimento null nell'interfaccia <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="P:System.Array.System#Collections#IList#IsFixedSize">
      <summary>Ottiene un valore che indica se le dimensioni dell'oggetto <see cref="T:System.Array" /> sono fisse.</summary>
      <returns>true se <see cref="T:System.Array" /> è di dimensioni fisse; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Array.System#Collections#IList#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Array" /> è di sola lettura.</summary>
      <returns>true se <see cref="T:System.Array" /> è di sola lettura; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Array.System#Collections#IList#Item(System.Int32)">
      <summary>Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
      <param name="index">Indice dell'elemento da ottenere o impostare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.-oppure-<paramref name="index" /> è uguale a o maggiore di <see cref="P:System.Collections.ICollection.Count" />.</exception>
      <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.Array" /> corrente non ha esattamente una dimensione.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#Remove(System.Object)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Oggetto da rimuovere da <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.IList" /> è di sola lettura.-oppure- L'oggetto <see cref="T:System.Collections.IList" /> è di dimensioni fisse. </exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Rimuove l'elemento <see cref="T:System.Collections.IList" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">non è un indice valido in <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.IList" /> è di sola lettura.-oppure- L'oggetto <see cref="T:System.Collections.IList" /> è di dimensioni fisse.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Determina se l'oggetto raccolta corrente precede, è nella stessa posizione o segue un altro oggetto nell'ordinamento.</summary>
      <returns>Intero che indica la relazione tra l'oggetto raccolta corrente e other, come illustrato nella tabella seguente.Valore restituitoDescrizione-1L'istanza corrente precede <paramref name="other" />.0L'istanza corrente è uguale a <paramref name="other" />.1L'istanza corrente segue <paramref name="other" />.</returns>
      <param name="other">Oggetto da confrontare con l'istanza corrente.</param>
      <param name="comparer">Oggetto che confronta l'oggetto corrente e <paramref name="other" />.</param>
    </member>
    <member name="M:System.Array.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Determina se un oggetto è uguale all'istanza corrente.</summary>
      <returns>true se i due oggetti sono uguali; in caso contrario, false.</returns>
      <param name="other">Oggetto da confrontare con l'istanza corrente.</param>
      <param name="comparer">Oggetto che determina se l'istanza corrente e <paramref name="other" /> sono uguali. </param>
    </member>
    <member name="M:System.Array.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Restituisce un codice hash per l'istanza corrente.</summary>
      <returns>Codice hash per l'istanza corrente.</returns>
      <param name="comparer">Oggetto che calcola il codice hash dell'oggetto corrente.</param>
    </member>
    <member name="M:System.Array.TrueForAll``1(``0[],System.Predicate{``0})">
      <summary>Determina se ogni elemento della matrice soddisfa le condizioni definite dal predicato specificato.</summary>
      <returns>true se ogni elemento della matrice <paramref name="array" /> soddisfa le condizioni definite dal predicato specificato; in caso contrario, false.Se la matrice non contiene elementi, il valore restituito è true.</returns>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale e in base zero per cui verificare se le condizioni sono soddisfatte.</param>
      <param name="match">Predicato che definisce le condizioni da verificare negli elementi.</param>
      <typeparam name="T">Tipo degli elementi della matrice.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.-oppure-<paramref name="match" /> è null.</exception>
    </member>
    <member name="T:System.ArraySegment`1">
      <summary>Delimita una sezione di una matrice unidimensionale.</summary>
      <typeparam name="T">Tipo di elementi contenuti nel segmento di matrice.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArraySegment`1.#ctor(`0[])">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.ArraySegment`1" /> che delimita tutti gli elementi nella matrice specificata.</summary>
      <param name="array">Matrice di cui eseguire il wrapping.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
    </member>
    <member name="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.ArraySegment`1" /> che delimita l'intervallo di elementi specificato nella matrice specificata.</summary>
      <param name="array">Matrice contenente l'intervallo di elementi da delimitare.</param>
      <param name="offset">Indice in base zero del primo elemento nell'intervallo.</param>
      <param name="count">Numero di elementi nell'intervallo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> e <paramref name="count" /> non specificano un intervallo valido in <paramref name="array" />.</exception>
    </member>
    <member name="P:System.ArraySegment`1.Array">
      <summary>Ottiene la matrice originale contenente l'intervallo di elementi delimitati dal segmento di matrice.</summary>
      <returns>Matrice originale passata al costruttore contenente l'intervallo delimitato dall'oggetto <see cref="T:System.ArraySegment`1" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ArraySegment`1.Count">
      <summary>Ottiene il numero di elementi nell'intervallo delimitato dal segmento di matrice.</summary>
      <returns>Numero di elementi nell'intervallo delimitato dall'oggetto <see cref="T:System.ArraySegment`1" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
      <summary>Determina se la struttura <see cref="T:System.ArraySegment`1" /> specificata è uguale all'istanza corrente.</summary>
      <returns>true se la struttura <see cref="T:System.ArraySegment`1" /> specificata è uguale all'istanza corrente; in caso contrario false.</returns>
      <param name="obj">Struttura da confrontare con l'istanza corrente.</param>
    </member>
    <member name="M:System.ArraySegment`1.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'istanza corrente.</summary>
      <returns>true se l'oggetto specificato è una struttura <see cref="T:System.ArraySegment`1" /> ed è uguale all'istanza corrente; in caso contrario false.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza corrente.</param>
    </member>
    <member name="M:System.ArraySegment`1.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza corrente.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="P:System.ArraySegment`1.Offset">
      <summary>Ottiene la posizione del primo elemento nell'intervallo delimitato dal segmento di matrice, relativa all'inizio della matrice originale.</summary>
      <returns>Posizione del primo elemento nell'intervallo delimitato dall'oggetto <see cref="T:System.ArraySegment`1" />, relativa all'inizio della matrice originale.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
      <summary>Indica se due strutture <see cref="T:System.ArraySegment`1" /> sono uguali.</summary>
      <returns>true se <paramref name="a" /> è uguale a <paramref name="b" />; in caso contrario, false.</returns>
      <param name="a">Struttura  a sinistra dell'operatore di uguaglianza.</param>
      <param name="b">Struttura a destra dell'operatore di uguaglianza.</param>
    </member>
    <member name="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
      <summary>Indica se due strutture <see cref="T:System.ArraySegment`1" /> non sono uguali.</summary>
      <returns>true se <paramref name="a" /> non è uguale a <paramref name="b" />; in caso contrario, false.</returns>
      <param name="a">Struttura a sinistra dell'operatore di disuguaglianza.</param>
      <param name="b">Struttura a destra dell'operatore di disuguaglianza.</param>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Aggiunge un elemento al segmento di matrice.</summary>
      <param name="item">L'oggetto da aggiungere al segmento di matrice.</param>
      <exception cref="T:System.NotSupportedException">Il segmento di matrice è di sola lettura.</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Rimuove tutti gli elementi dal segmento di matrice.</summary>
      <exception cref="T:System.NotSupportedException">Il segmento di matrice è di sola lettura. </exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Contains(`0)">
      <summary>Stabilisce se il segmento di matrice contiene un valore specifico.</summary>
      <returns>true se <paramref name="item" /> è presente nel segmento di matrice; in caso contrario, false.</returns>
      <param name="item">Oggetto da individuare nel segmento di matrice.</param>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)">
      <summary>Copia gli elementi del segmento di matrice in una matrice, iniziando dall'indice di matrice specificato.</summary>
      <param name="array">Matrice unidimensionale di tipo che costituisce la destinazione degli elementi copiati dal segmento di matrice.La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.-oppure-Il numero degli elementi nel segmento di matrice di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.-oppure-Il tipo <paramref name="T" /> non può essere sottoposto automaticamente a cast sul tipo della <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ottiene un valore che indica se il segmento di matrice è di sola lettura.</summary>
      <returns>true se il segmento di matrice è di sola lettura; in caso contrario, false.</returns>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Consente di rimuovere la prima occorrenza di un oggetto specifico dal segmento di matrice.</summary>
      <returns>true se <paramref name="item" /> è stato rimosso correttamente dal segmento di matrice; in caso contrario, false.Questo metodo restituisce false anche se l'oggetto <paramref name="item" /> non viene trovato nel segmento della matrice.</returns>
      <param name="item">L'oggetto da rimuovere dal segmento di matrice.</param>
      <exception cref="T:System.NotSupportedException">Il segmento di matrice è di sola lettura.</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere il segmento di matrice.</summary>
      <returns>Enumeratore utilizzabile per scorrere gli elementi del segmento di matrice.</returns>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IList{T}#IndexOf(`0)">
      <summary>Consente di determinare l'indice di un elemento specifico nel segmento di matrice.</summary>
      <returns>Indice di <paramref name="item" />, se presente nell'elenco; in caso contrario, -1.</returns>
      <param name="item">Oggetto da individuare nel segmento di matrice.</param>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>Consente di inserire un elemento nel segmento di matrice in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero nel quale <paramref name="item" /> deve essere inserito.</param>
      <param name="item">Oggetto da inserire nel segmento di matrice.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è un indice valido nel segmento di matrice.</exception>
      <exception cref="T:System.NotSupportedException">Il segmento di matrice è di sola lettura.</exception>
    </member>
    <member name="P:System.ArraySegment`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
      <param name="index">Indice in base zero dell'elemento da ottenere o impostare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.ArraySegment`1" />.</exception>
      <exception cref="T:System.NotSupportedException">La proprietà è impostata e il segmento di matrice è in sola lettura.</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>Rimuove il segmento di matrice dalla raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è un indice valido nel segmento di matrice.</exception>
      <exception cref="T:System.NotSupportedException">Il segmento di matrice è di sola lettura.</exception>
    </member>
    <member name="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList{T}#Item(System.Int32)">
      <summary>Ottiene l'elemento in corrispondenza dell'indice specificato del segmento di matrice.</summary>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
      <param name="index">Indice in base zero dell'elemento da ottenere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.ArraySegment`1" />.</exception>
      <exception cref="T:System.NotSupportedException">La proprietà è impostata.</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere un segmento di matrice.</summary>
      <returns>Enumeratore utilizzabile per scorrere gli elementi del segmento di matrice.</returns>
    </member>
    <member name="T:System.ArrayTypeMismatchException">
      <summary>L'eccezione che viene generata quando si tenta di archiviare un elemento di tipo non corretto all'interno di una matrice. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ArrayTypeMismatchException" />.</summary>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ArrayTypeMismatchException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore. </param>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor(System.String,System.Exception)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.ArrayTypeMismatchException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="innerException">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="innerException" /> non è un riferimento null, l'eccezione corrente verrà generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.AsyncCallback">
      <summary>Fa riferimento a un metodo da chiamare quando viene completata un'operazione asincrona corrispondente.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AsyncCallback.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.AsyncCallback.BeginInvoke(System.IAsyncResult,System.AsyncCallback,System.Object)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AsyncCallback.EndInvoke(System.IAsyncResult)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AsyncCallback.Invoke(System.IAsyncResult)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Attribute">
      <summary>Rappresenta la classe base per gli attributi personalizzati.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Attribute" />.</summary>
    </member>
    <member name="M:System.Attribute.Equals(System.Object)">
      <summary>Restituisce un valore che indica se l'istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="obj" /> è uguale al tipo e al valore di questa istanza. In caso contrario, false.</returns>
      <param name="obj">Oggetto <see cref="T:System.Object" /> da confrontare con questa istanza o null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Attribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.AttributeTargets">
      <summary>Specifica gli elementi dell'applicazione sui quali è valido applicare un attributo.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.AttributeTargets.All">
      <summary>Attributo applicabile a tutti gli elementi dell'applicazione.</summary>
    </member>
    <member name="F:System.AttributeTargets.Assembly">
      <summary>Attributo applicabile a un assembly.</summary>
    </member>
    <member name="F:System.AttributeTargets.Class">
      <summary>Attributo applicabile a una classe.</summary>
    </member>
    <member name="F:System.AttributeTargets.Constructor">
      <summary>Attributo applicabile a un costruttore.</summary>
    </member>
    <member name="F:System.AttributeTargets.Delegate">
      <summary>Attributo applicabile a un delegato.</summary>
    </member>
    <member name="F:System.AttributeTargets.Enum">
      <summary>Attributo applicabile a un'enumerazione.</summary>
    </member>
    <member name="F:System.AttributeTargets.Event">
      <summary>Attributo applicabile a un evento.</summary>
    </member>
    <member name="F:System.AttributeTargets.Field">
      <summary>Attributo applicabile a un campo.</summary>
    </member>
    <member name="F:System.AttributeTargets.GenericParameter">
      <summary>Attributo applicabile a un parametro generico.</summary>
    </member>
    <member name="F:System.AttributeTargets.Interface">
      <summary>Attributo applicabile a un'interfaccia.</summary>
    </member>
    <member name="F:System.AttributeTargets.Method">
      <summary>Attributo applicabile a un metodo.</summary>
    </member>
    <member name="F:System.AttributeTargets.Module">
      <summary>Attributo applicabile a un modulo.</summary>
    </member>
    <member name="F:System.AttributeTargets.Parameter">
      <summary>Attributo applicabile a un parametro.</summary>
    </member>
    <member name="F:System.AttributeTargets.Property">
      <summary>Attributo applicabile a una proprietà.</summary>
    </member>
    <member name="F:System.AttributeTargets.ReturnValue">
      <summary>Attributo applicabile a un valore restituito.</summary>
    </member>
    <member name="F:System.AttributeTargets.Struct">
      <summary>Attributo applicabile a una struttura, ovvero a un tipo valore.</summary>
    </member>
    <member name="T:System.AttributeUsageAttribute">
      <summary>Specifica l'uso di un’altra classe di attributi.La classe non può essere ereditata.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.AttributeUsageAttribute" /> con l'elenco specificato di <see cref="T:System.AttributeTargets" />, il valore <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> e il valore <see cref="P:System.AttributeUsageAttribute.Inherited" />.</summary>
      <param name="validOn">Gruppo di valori uniti utilizzando un'operazione OR bit per bit per indicare quali elementi del programma sono validi. </param>
    </member>
    <member name="P:System.AttributeUsageAttribute.AllowMultiple">
      <summary>Ottiene o imposta un valore booleano che indica se è possibile specificare una o più istanze dell'attributo indicato per un singolo elemento di programma.</summary>
      <returns>true se è possibile specificare più di un'istanza; in caso contrario, false.Il valore predefinito è false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AttributeUsageAttribute.Inherited">
      <summary>Ottiene o imposta un valore booleano che indica se l'attributo indicato può essere ereditato dalle classi derivate e dai membri di override.</summary>
      <returns>true se l'attributo può essere ereditato dalle classi derivate e dai membri di override; in caso contrario, false.Il valore predefinito è true.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AttributeUsageAttribute.ValidOn">
      <summary>Recupera un insieme di valori tramite l'identificazione degli elementi di programma cui può essere applicato l'attributo indicato.</summary>
      <returns>Uno o più valori <see cref="T:System.AttributeTargets" />.Il valore predefinito è All.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.BadImageFormatException">
      <summary>L'eccezione generata quando l'immagine del file di una libreria di collegamento dinamico (DLL, Dynamic Link Library) o di un programma eseguibile non è valida. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.BadImageFormatException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.BadImageFormatException" />.</summary>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.BadImageFormatException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore. </param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.BadImageFormatException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione. </param>
      <param name="inner">Eccezione che ha determinato l'eccezione corrente.Se il parametro <paramref name="inner" /> non è un riferimento Null, l'eccezione corrente verrà generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.BadImageFormatException" /> con il messaggio di errore e il nome del file specificati.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore. </param>
      <param name="fileName">Nome completo del file con l'immagine non valida. </param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.BadImageFormatException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione. </param>
      <param name="fileName">Nome completo del file con l'immagine non valida. </param>
      <param name="inner">Eccezione che ha determinato l'eccezione corrente.Se il parametro <paramref name="inner" /> non è null, l'eccezione corrente viene generata in un blocco catch in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="P:System.BadImageFormatException.FileName">
      <summary>Ottiene il nome del file che ha causato questa eccezione.</summary>
      <returns>Nome del file con l'immagine non valida oppure un riferimento Null se nessun nome di file è stato passato al costruttore per l'istanza corrente.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.BadImageFormatException.Message">
      <summary>Ottiene il messaggio di errore e il nome del file che ha causato questa eccezione.</summary>
      <returns>Stringa che contiene il messaggio di errore e il nome del file che ha causato questa eccezione.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.BadImageFormatException.ToString">
      <summary>Restituisce il nome completo di questa eccezione ed eventualmente il messaggio di errore, il nome dell'eccezione interna e l'analisi dello stack.</summary>
      <returns>Stringa contenente il nome completo di questa eccezione ed eventualmente il messaggio di errore, il nome dell'eccezione interna e l'analisi dello stack.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.Boolean">
      <summary>Rappresenta un valore booleano (true o false).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.CompareTo(System.Boolean)">
      <summary>Confronta questa istanza con un oggetto <see cref="T:System.Boolean" /> specificato e restituisce un intero che indica la relazione reciproca.</summary>
      <returns>Intero con segno che indica i valori relativi dell'istanza e <paramref name="value" />.Valore restituito Condizione Minore di zero Questa istanza è false e <paramref name="value" /> è true. Zero Questa istanza e <paramref name="value" /> sono uguali (entrambe sono true o false). Maggiore di zero Questa istanza è true e <paramref name="value" /> è false. </returns>
      <param name="value">Oggetto <see cref="T:System.Boolean" /> da confrontare con l'istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.Equals(System.Boolean)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto <see cref="T:System.Boolean" /> specificato.</summary>
      <returns>true se <paramref name="obj" /> ha lo stesso valore di questa istanza; in caso contrario, false.</returns>
      <param name="obj">Valore <see cref="T:System.Boolean" /> da confrontare con questa istanza.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="obj" /> è <see cref="T:System.Boolean" /> e ha lo stesso valore di questa istanza. In caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Boolean.FalseString">
      <summary>Rappresenta un valore booleano false sotto forma di stringa.Questo campo è di sola lettura.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.Boolean" /> corrente.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.Parse(System.String)">
      <summary>Converte la rappresentazione di stringa specificata di un valore logico nell'oggetto <see cref="T:System.Boolean" /> equivalente, o genera un'eccezione se la stringa non è uguale al valore di <see cref="F:System.Boolean.TrueString" /> o <see cref="F:System.Boolean.FalseString" />.</summary>
      <returns>true se <paramref name="value" /> è uguale al valore del campo <see cref="F:System.Boolean.TrueString" />; false se <paramref name="value" /> è uguale al valore del campo <see cref="F:System.Boolean.FalseString" />.</returns>
      <param name="value">Stringa contenente il valore da convertire. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è uguale al valore del campo <see cref="F:System.Boolean.TrueString" /> o <see cref="F:System.Boolean.FalseString" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
      <returns>Intero con segno che indica l'ordine relativo dell'istanza e di <paramref name="obj" />.Valore restituito Condizione Minore di zero Questa istanza è false e <paramref name="obj" /> è true. Zero Questa istanza e <paramref name="obj" /> sono uguali (entrambe sono true o false). Maggiore di zero Questa istanza è true e <paramref name="obj" /> è false.-oppure- <paramref name="obj" /> è null. </returns>
      <param name="obj">Oggetto da confrontare con questa istanza o null.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true o false.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>1 se il valore dell'istanza è true; in caso contrario, 0. </returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Questa conversione non è supportata.Non vengono restituiti valori.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">Si tenta di convertire un valore <see cref="T:System.Boolean" /> in un valore <see cref="T:System.Char" />.Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Questa conversione non è supportata.Non vengono restituiti valori.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">Si tenta di convertire un valore <see cref="T:System.Boolean" /> in un valore <see cref="T:System.DateTime" />.Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</summary>
      <returns>1 se l'istanza è true; in caso contrario, 0.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</summary>
      <returns>1 se l'istanza è true; in caso contrario, 0.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>1 se l'istanza è true; in caso contrario, 0.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>1 se l'istanza è true; in caso contrario, 0.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>1 se l'istanza è true; in caso contrario, 0.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>1 se l'istanza è true; in caso contrario, 0.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</summary>
      <returns>1 se l'istanza è true; in caso contrario, 0.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToString(System.IFormatProvider)"></member>
    <member name="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Oggetto del tipo specificato, il cui valore è equivalente al valore di questo oggetto Boolean.</returns>
      <param name="type">Tipo desiderato. </param>
      <param name="provider">Implementazione <see cref="T:System.IFormatProvider" /> che fornisce informazioni specifiche delle impostazioni cultura sul formato del valore restituito.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> è null. </exception>
      <exception cref="T:System.InvalidCastException">La conversione del tipo richiesta non è supportata. </exception>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>1 se l'istanza è true; in caso contrario, 0.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>1 se l'istanza è true; in caso contrario, 0.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>1 se l'istanza è true; in caso contrario, 0.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Boolean.ToString">
      <summary>Converte il valore dell'istanza corrente nella rappresentazione di stringa equivalente ("True" o "False").</summary>
      <returns>
        <see cref="F:System.Boolean.TrueString" /> se il valore di questa istanza è true oppure <see cref="F:System.Boolean.FalseString" /> se il valore di questa istanza è false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Boolean.TrueString">
      <summary>Rappresenta un valore booleano true sotto forma di stringa.Questo campo è di sola lettura.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.TryParse(System.String,System.Boolean@)">
      <summary>Prova a convertire la rappresentazione di stringa specificata di un valore logico nell'oggetto <see cref="T:System.Boolean" /> equivalente.Un valore restituito indica se la conversione è riuscita o meno.</summary>
      <returns>true se <paramref name="value" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="value">Stringa contenente il valore da convertire. </param>
      <param name="result">Quando questo metodo viene restituito, in caso di conversione riuscita, contiene true se <paramref name="value" /> è uguale a <see cref="F:System.Boolean.TrueString" /> o false se <paramref name="value" /> è uguale a <see cref="F:System.Boolean.FalseString" />.In caso di conversione non riuscita, contiene false.La conversione non riesce se <paramref name="value" /> è null o non è uguale al valore del campo <see cref="F:System.Boolean.TrueString" /> o <see cref="F:System.Boolean.FalseString" />.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Buffer">
      <summary>Modifica matrici di tipi primitivi.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Buffer.BlockCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Copia un numero specifico di byte da una matrice di origine, a partire da un offset particolare, in una matrice di destinazione a partire da un offset particolare.</summary>
      <param name="src">Il buffer di origine. </param>
      <param name="srcOffset">Offset dei byte in base zero in <paramref name="src" />. </param>
      <param name="dst">Il buffer di destinazione. </param>
      <param name="dstOffset">Offset dei byte in base zero in <paramref name="dst" />. </param>
      <param name="count">Il numero di byte da copiare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="src" /> o <paramref name="dst" /> è null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="src" /> o <paramref name="dst" /> non è una matrice di tipi primitivi.-oppure- Il numero di byte in <paramref name="src" /> è minore di <paramref name="srcOffset" /> più <paramref name="count" />.-oppure- Il numero di byte in <paramref name="dst" /> è minore di <paramref name="dstOffset" /> più <paramref name="count" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="srcOffset" />, <paramref name="dstOffset" /> o <paramref name="count" /> è minore di 0. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Buffer.ByteLength(System.Array)">
      <summary>Restituisce il numero di byte nella matrice specificata.</summary>
      <returns>Il numero di byte nella matrice.</returns>
      <param name="array">Una matrice. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> non è un primitivo. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="array" /> è superiore a 2 gigabyte (GB).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Buffer.GetByte(System.Array,System.Int32)">
      <summary>Recupera il byte in una posizione specificata in una determinata matrice.</summary>
      <returns>Restituisce il byte <paramref name="index" /> nella matrice.</returns>
      <param name="array">Una matrice. </param>
      <param name="index">Una posizione nella matrice. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> non è un primitivo. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è negativo o maggiore della lunghezza di <paramref name="array" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="array" /> è superiore a 2 gigabyte (GB).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Buffer.MemoryCopy(System.Void*,System.Void*,System.Int64,System.Int64)">
      <summary>Copia un numero di byte specificato come valore long integer da un indirizzo all'altro in memoria. </summary>
      <param name="source">Indirizzo dei byte da copiare. </param>
      <param name="destination">Indirizzo di destinazione. </param>
      <param name="destinationSizeInBytes">Numero di byte disponibili nel blocco di memoria di destinazione. </param>
      <param name="sourceBytesToCopy">Il numero di byte da copiare.  </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceBytesToCopy" /> è maggiore di <paramref name="destinationSizeInBytes" />. </exception>
    </member>
    <member name="M:System.Buffer.MemoryCopy(System.Void*,System.Void*,System.UInt64,System.UInt64)">
      <summary>Copia un numero di byte specificato come valore long integer senza segno da un indirizzo all'altro in memoria. </summary>
      <param name="source">Indirizzo dei byte da copiare. </param>
      <param name="destination">Indirizzo di destinazione. </param>
      <param name="destinationSizeInBytes">Numero di byte disponibili nel blocco di memoria di destinazione. </param>
      <param name="sourceBytesToCopy">Il numero di byte da copiare.   </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceBytesToCopy" /> è maggiore di <paramref name="destinationSizeInBytes" />. </exception>
    </member>
    <member name="M:System.Buffer.SetByte(System.Array,System.Int32,System.Byte)">
      <summary>Assegna un valore specificato a un byte in una particolare posizione in una determinata matrice.</summary>
      <param name="array">Una matrice. </param>
      <param name="index">Una posizione nella matrice. </param>
      <param name="value">Un valore da assegnare. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> non è un primitivo. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è negativo o maggiore della lunghezza di <paramref name="array" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="array" /> è superiore a 2 gigabyte (GB).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Byte">
      <summary>Rappresenta un numero intero senza segno a 8 bit.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.CompareTo(System.Byte)">
      <summary>Confronta questa istanza con un intero senza segno a 8 bit specificato e restituisce un'indicazione dei valori relativi.</summary>
      <returns>Intero con segno che indica l'ordine relativo dell'istanza e di <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Intero senza segno a 8 bit da confrontare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.Equals(System.Byte)">
      <summary>Restituisce un valore che indica se l'istanza e un oggetto <see cref="T:System.Byte" /> specificato rappresentano lo stesso valore.</summary>
      <returns>true se <paramref name="obj" /> è uguale all'istanza; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="obj" /> è un'istanza di <see cref="T:System.Byte" /> ed è uguale al valore dell'istanza; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza o null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.Byte" /> corrente.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Byte.MaxValue">
      <summary>Rappresenta il valore massimo possibile di <see cref="T:System.Byte" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Byte.MinValue">
      <summary>Rappresenta il valore minimo possibile di un oggetto <see cref="T:System.Byte" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String)">
      <summary>Converte la rappresentazione di stringa di un numero nell'oggetto <see cref="T:System.Byte" /> equivalente.</summary>
      <returns>Valore di byte equivalente al numero contenuto in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire.Per interpretare la stringa, viene usato lo stile <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato nell'oggetto <see cref="T:System.Byte" /> equivalente.</summary>
      <returns>Valore di byte equivalente al numero contenuto in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire.La stringa viene interpreta usando lo stile specificato da <paramref name="style" />.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato e un formato specifico delle impostazioni cultura indicato nell'oggetto <see cref="T:System.Byte" /> equivalente.</summary>
      <returns>Valore di byte equivalente al numero contenuto in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire.La stringa viene interpreta usando lo stile specificato da <paramref name="style" />.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto che fornisce informazioni specifiche delle impostazioni cultura relative al formato di <paramref name="s" />.Se <paramref name="provider" /> è null, verranno usate le impostazioni cultura correnti del thread.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in un formato specifico delle impostazioni cultura indicato nell'oggetto <see cref="T:System.Byte" /> equivalente.</summary>
      <returns>Valore di byte equivalente al numero contenuto in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire.Per interpretare la stringa, viene usato lo stile <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di analisi specifiche delle impostazioni cultura relative a <paramref name="s" />.Se <paramref name="provider" /> è null, verranno usate le impostazioni cultura correnti del thread.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
      <returns>Intero con segno che indica l'ordine relativo dell'istanza e di <paramref name="value" />.Return value Description Less than zero This instance precedes <paramref name="value" /> in the sort order. Zero This instance occurs in the same position as <paramref name="value" /> in the sort order. Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Oggetto da confrontare con questa istanza o null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Byte" />. </exception>
    </member>
    <member name="M:System.Byte.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true se il valore dell'istanza corrente non è uguale a zero; in caso contrario, false.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, invariato.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Char" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Questa conversione non è supportata.Non vengono restituiti valori.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Double" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int16" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.SByte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Single" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <paramref name="type" />.</returns>
      <param name="type">Tipo nel quale convertire questo valore <see cref="T:System.Byte" />. </param>
      <param name="provider">Implementazione <see cref="T:System.IFormatProvider" /> che fornisce informazioni sul formato del valore restituito.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null. </exception>
      <exception cref="T:System.InvalidCastException">The requested type conversion is not supported. </exception>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt16" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Byte.ToString">
      <summary>Converte il valore dell'oggetto <see cref="T:System.Byte" /> corrente nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa del valore di questo oggetto, composto da una sequenza di cifre comprese tra 0 e 9 senza zeri iniziali.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.ToString(System.IFormatProvider)">
      <summary>Converte il valore numerico dell'oggetto <see cref="T:System.Byte" /> corrente nella rappresentazione di stringa equivalente, usando le informazioni specificate relative alla formattazione delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore di questo oggetto nel formato specificato dal parametro <paramref name="provider" />.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.ToString(System.String)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.Byte" /> corrente nella rappresentazione di stringa equivalente, usando il formato specificato.</summary>
      <returns>Rappresentazione di stringa dell'oggetto <see cref="T:System.Byte" /> corrente, formattato come specificato dal parametro <paramref name="format" />.</returns>
      <param name="format">Stringa di formato numerico.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> includes an unsupported specifier.Supported format specifiers are listed in the Remarks section.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.ToString(System.String,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.Byte" /> corrente nella rappresentazione di stringa equivalente, usando il formato specificato e le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa dell'oggetto <see cref="T:System.Byte" /> corrente, formattato come specificato dai parametri <paramref name="format" /> e <paramref name="provider" />.</returns>
      <param name="format">Stringa di formato numerico standard o personalizzato.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> includes an unsupported specifier.Supported format specifiers are listed in the Remarks section.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.TryParse(System.String,System.Byte@)">
      <summary>Prova a convertire la rappresentazione di stringa di un numero nell'oggetto <see cref="T:System.Byte" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false. </returns>
      <param name="s">Stringa contenente un numero da convertire.Per interpretare la stringa, viene usato lo stile <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="result">Quando questo metodo restituisce un risultato, contiene il valore di <see cref="T:System.Byte" /> equivalente al numero contenuto in <paramref name="s" /> se la conversione riesce oppure zero se la conversione non riesce.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato e un formato specifico delle impostazioni cultura indicato nell'oggetto <see cref="T:System.Byte" /> equivalente.Un valore restituito indica se la conversione è riuscita o meno.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa contenente un numero da convertire.La stringa viene interpreta usando lo stile specificato da <paramref name="style" />.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />.Se <paramref name="provider" /> è null, verranno usate le impostazioni cultura correnti del thread.</param>
      <param name="result">Quando questo metodo viene restituito, contiene il valore intero senza segno a 8 bit equivalente al numero contenuto in <paramref name="s" />, se la conversione riesce oppure zero se la conversione non riesce.La conversione non riesce se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" />, non è in formato corretto o rappresenta un numero minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Char">
      <summary>Rappresenta un carattere come unità di codice UTF-16.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.CompareTo(System.Char)">
      <summary>Confronta questa istanza con un oggetto <see cref="T:System.Char" /> specificato e indica se l'istanza precede, segue o viene visualizzata nella stessa posizione dell'oggetto <see cref="T:System.Char" /> specificato all'interno dell'ordinamento.</summary>
      <returns>Numero con segno che indica la posizione dell'istanza nell'ordinamento in relazione al parametro <paramref name="value" />.Valore restituito Descrizione Minore di zero Questa istanza precede <paramref name="value" />. Zero Questa istanza si trova nella stessa posizione di <paramref name="value" /> nell'ordinamento. Maggiore di zero L'istanza segue <paramref name="value" />. </returns>
      <param name="value">Oggetto <see cref="T:System.Char" /> da confrontare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.ConvertFromUtf32(System.Int32)">
      <summary>Converte il punto di codice Unicode specificato in una stringa codificata UTF-16.</summary>
      <returns>Stringa costituita da un unico oggetto <see cref="T:System.Char" /> o da una coppia di surrogati di oggetti <see cref="T:System.Char" /> equivalente al punto di codice specificato dal parametro <paramref name="utf32" />.</returns>
      <param name="utf32">Punto di codice Unicode a 21 bit. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="utf32" /> non è un punto di codice valido a 21 bit compreso tra U+0 e U+10FFFF, escluso l'intervallo della coppia di surrogati compreso tra U+D800 e U+DFFF. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
      <summary>Converte il valore di una coppia di surrogati codificata UTF-16 in un punto di codice Unicode.</summary>
      <returns>Punto di codice Unicode a 21 bit rappresentato dai parametri <paramref name="highSurrogate" /> e <paramref name="lowSurrogate" />.</returns>
      <param name="highSurrogate">Unità di codice surrogato alto, ovvero un'unità di codice compreso tra U+D800 e U+DBFF. </param>
      <param name="lowSurrogate">Unità di codice surrogato basso, ovvero un'unità di codice compreso tra U+DC00 e U+DFFF. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="highSurrogate" /> non è compreso tra U+D800 e U+DBFF, o <paramref name="lowSurrogate" /> non è compreso tra U+DC00 e U+DFFF. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ConvertToUtf32(System.String,System.Int32)">
      <summary>In corrispondenza della posizione specificata all'interno di una stringa, converte il valore di un carattere o di una coppia di surrogati con codifica UTF-16 in un punto di codice Unicode.</summary>
      <returns>Punto di codice Unicode a 21 bit rappresentato dal carattere o dalla coppia di surrogati in corrispondenza della posizione indicata dal parametro <paramref name="s" /> specificato nel parametro <paramref name="index" />.</returns>
      <param name="s">Stringa che contiene un carattere o una coppia di surrogati. </param>
      <param name="index">Posizione di indice del carattere o della coppia di surrogati all'interno del parametro <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è una posizione all'interno di <paramref name="s" />. </exception>
      <exception cref="T:System.ArgumentException">La posizione di indice specificata contiene una coppia di surrogati in cui il primo carattere non è un surrogato alto valido oppure il secondo carattere non è un surrogato basso valido. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.Equals(System.Char)">
      <summary>Restituisce un valore che indica se questa istanza è uguale all'oggetto <see cref="T:System.Char" /> specificato.</summary>
      <returns>true se il parametro <paramref name="obj" /> è uguale al valore di questa istanza; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="obj" /> è un'istanza di <see cref="T:System.Char" /> ed è uguale al valore dell'istanza; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza o null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.GetNumericValue(System.Char)">
      <summary>Converte il carattere numerico Unicode specificato in un numero a virgola mobile a precisione doppia.</summary>
      <returns>Il valore numerico di <paramref name="c" /> se tale carattere rappresenta un numero; in caso contrario, -1,0.</returns>
      <param name="c">Carattere Unicode da convertire. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.GetNumericValue(System.String,System.Int32)">
      <summary>Converte il carattere numerico Unicode nella posizione specificata di una determinata stringa in un numero a virgola mobile a precisione doppia.</summary>
      <returns>Valore numerico del carattere alla posizione <paramref name="index" /> in <paramref name="s" /> se tale carattere rappresenta un numero; in caso contrario, -1.</returns>
      <param name="s">Oggetto <see cref="T:System.String" />. </param>
      <param name="index">Posizione del carattere in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore dell'ultima posizione in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsControl(System.Char)">
      <summary>Indica se il carattere Unicode specificato è stato categorizzato come carattere di controllo.</summary>
      <returns>true se <paramref name="c" /> è un carattere di controllo; in caso contrario, false.</returns>
      <param name="c">Carattere Unicode da valutare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsControl(System.String,System.Int32)">
      <summary>Indica se il carattere in corrispondenza della posizione specificata in una determinata stringa è stato categorizzato come carattere di controllo.</summary>
      <returns>true se il carattere alla posizione <paramref name="index" /> in <paramref name="s" /> è un carattere di controllo; in caso contrario, false.</returns>
      <param name="s">Stringa. </param>
      <param name="index">Posizione del carattere da valutare in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore dell'ultima posizione in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsDigit(System.Char)">
      <summary>Indica se il carattere Unicode specificato è stato categorizzato come cifra decimale.</summary>
      <returns>true se <paramref name="c" /> è una cifra decimale; in caso contrario, false.</returns>
      <param name="c">Carattere Unicode da valutare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsDigit(System.String,System.Int32)">
      <summary>Indica se il carattere in corrispondenza della posizione specificata in una determinata stringa è stato categorizzato come cifra decimale.</summary>
      <returns>true se il carattere alla posizione <paramref name="index" /> in <paramref name="s" /> è una cifra decimale; in caso contrario, false.</returns>
      <param name="s">Stringa. </param>
      <param name="index">Posizione del carattere da valutare in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore dell'ultima posizione in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsHighSurrogate(System.Char)">
      <summary>Indica se l'oggetto <see cref="T:System.Char" /> specificato è un surrogato alto.</summary>
      <returns>true se il valore numerico del parametro <paramref name="c" /> è compreso tra U+D800 e U+DBFF; in caso contrario, false.</returns>
      <param name="c">Carattere Unicode da valutare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
      <summary>Indica se l'oggetto <see cref="T:System.Char" /> in corrispondenza della posizione specificata all'interno di una stringa è un surrogato alto.</summary>
      <returns>true se il valore numerico del carattere specificato contenuto nel parametro <paramref name="s" /> è compreso tra U+D800 e U+DBFF; in caso contrario, false.</returns>
      <param name="s">Stringa. </param>
      <param name="index">Posizione del carattere da valutare in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è una posizione all'interno di <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetter(System.Char)">
      <summary>Indica se il carattere Unicode specificato è stato categorizzato come lettera Unicode. </summary>
      <returns>true se <paramref name="c" /> è una lettera; in caso contrario, false.</returns>
      <param name="c">Carattere Unicode da valutare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetter(System.String,System.Int32)">
      <summary>Indica se il carattere in corrispondenza della posizione specificata in una determinata stringa è stato categorizzato come lettera Unicode.</summary>
      <returns>true se il carattere alla posizione <paramref name="index" /> in <paramref name="s" /> è una lettera; in caso contrario, false.</returns>
      <param name="s">Stringa. </param>
      <param name="index">Posizione del carattere da valutare in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore dell'ultima posizione in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetterOrDigit(System.Char)">
      <summary>Indica se il carattere Unicode specificato è stato categorizzato come lettera o cifra decimale.</summary>
      <returns>true se <paramref name="c" /> è una lettera o una cifra decimale; in caso contrario, false.</returns>
      <param name="c">Carattere Unicode da valutare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetterOrDigit(System.String,System.Int32)">
      <summary>Indica se il carattere in corrispondenza della posizione specificata in una determinata stringa è stato categorizzato come lettera o cifra decimale.</summary>
      <returns>true se il carattere alla posizione <paramref name="index" /> in <paramref name="s" /> è una lettera o una cifra decimale; in caso contrario, false.</returns>
      <param name="s">Stringa. </param>
      <param name="index">Posizione del carattere da valutare in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore dell'ultima posizione in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLower(System.Char)">
      <summary>Indica se il carattere Unicode specificato è stato categorizzato come lettera minuscola.</summary>
      <returns>true se <paramref name="c" /> è una lettera minuscola; in caso contrario, false.</returns>
      <param name="c">Carattere Unicode da valutare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLower(System.String,System.Int32)">
      <summary>Indica se il carattere in corrispondenza della posizione specificata in una determinata stringa è stato categorizzato come lettera minuscola.</summary>
      <returns>true se il carattere alla posizione <paramref name="index" /> in <paramref name="s" /> è una lettera minuscola; in caso contrario, false.</returns>
      <param name="s">Stringa. </param>
      <param name="index">Posizione del carattere da valutare in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore dell'ultima posizione in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLowSurrogate(System.Char)">
      <summary>Indica se l'oggetto <see cref="T:System.Char" /> specificato è un surrogato basso.</summary>
      <returns>true se il valore numerico del parametro <paramref name="c" /> è compreso tra U+DC00 e U+DFFF; in caso contrario, false.</returns>
      <param name="c">Carattere da valutare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
      <summary>Indica se l'oggetto <see cref="T:System.Char" /> in corrispondenza della posizione specificata all'interno di una stringa è un surrogato basso.</summary>
      <returns>true se il valore numerico del carattere specificato contenuto nel parametro <paramref name="s" /> è compreso tra U+DC00 e U+DFFF; in caso contrario, false.</returns>
      <param name="s">Stringa. </param>
      <param name="index">Posizione del carattere da valutare in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è una posizione all'interno di <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsNumber(System.Char)">
      <summary>Indica se il carattere Unicode specificato è stato categorizzato come numero.</summary>
      <returns>true se <paramref name="c" /> è un numero; in caso contrario, false.</returns>
      <param name="c">Carattere Unicode da valutare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsNumber(System.String,System.Int32)">
      <summary>Indica se il carattere in corrispondenza della posizione specificata in una determinata stringa è stato categorizzato come numero.</summary>
      <returns>true se il carattere alla posizione <paramref name="index" /> in <paramref name="s" /> è un numero; in caso contrario, false.</returns>
      <param name="s">Stringa. </param>
      <param name="index">Posizione del carattere da valutare in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore dell'ultima posizione in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsPunctuation(System.Char)">
      <summary>Indica se il carattere Unicode specificato è stato categorizzato come segno di punteggiatura.</summary>
      <returns>true se <paramref name="c" /> è un segno di punteggiatura; in caso contrario, false.</returns>
      <param name="c">Carattere Unicode da valutare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsPunctuation(System.String,System.Int32)">
      <summary>Indica se il carattere in corrispondenza della posizione specificata in una determinata stringa è stato categorizzato come segno di punteggiatura.</summary>
      <returns>true se il carattere alla posizione <paramref name="index" /> in <paramref name="s" /> è un segno di punteggiatura; in caso contrario, false.</returns>
      <param name="s">Stringa. </param>
      <param name="index">Posizione del carattere da valutare in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore dell'ultima posizione in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSeparator(System.Char)">
      <summary>Indica se il carattere Unicode specificato è stato categorizzato come carattere separatore.</summary>
      <returns>true se <paramref name="c" /> è un carattere separatore; in caso contrario, false.</returns>
      <param name="c">Carattere Unicode da valutare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSeparator(System.String,System.Int32)">
      <summary>Indica se il carattere in corrispondenza della posizione specificata in una determinata stringa è stato categorizzato come carattere separatore.</summary>
      <returns>true se il carattere alla posizione <paramref name="index" /> in <paramref name="s" /> è un carattere separatore; in caso contrario, false.</returns>
      <param name="s">Stringa. </param>
      <param name="index">Posizione del carattere da valutare in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore dell'ultima posizione in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogate(System.Char)">
      <summary>Indica se il carattere specificato dispone di un'unità di codice surrogato.</summary>
      <returns>true se <paramref name="c" /> è un surrogato alto o un surrogato basso; in caso contrario, false.</returns>
      <param name="c">Carattere Unicode da valutare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogate(System.String,System.Int32)">
      <summary>Indica se il carattere in corrispondenza della posizione specificata in una determinata stringa dispone di un'unità di codice surrogato.</summary>
      <returns>true se il carattere in corrispondenza della posizione <paramref name="index" /> in <paramref name="s" /> è un surrogato alto o un surrogato basso; in caso contrario, false.</returns>
      <param name="s">Stringa. </param>
      <param name="index">Posizione del carattere da valutare in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore dell'ultima posizione in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogatePair(System.Char,System.Char)">
      <summary>Indica se i due oggetti <see cref="T:System.Char" /> specificati formano una coppia di surrogati.</summary>
      <returns>true se il valore numerico del parametro <paramref name="highSurrogate" /> è compreso tra U+D800 e U+DBFF e il valore numerico del parametro <paramref name="lowSurrogate" /> è compreso tra U+DC00 e U+DFFF; in caso contrario, false.</returns>
      <param name="highSurrogate">Carattere da valutare come surrogato alto di una coppia di surrogati. </param>
      <param name="lowSurrogate">Carattere da valutare come surrogato basso di una coppia di surrogati. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
      <summary>Indica se due oggetti <see cref="T:System.Char" /> adiacenti in corrispondenza di una posizione specificata all'interno di una stringa formano una coppia di surrogati.</summary>
      <returns>true se il parametro <paramref name="s" /> contiene caratteri adiacenti nelle posizioni <paramref name="index" /> e <paramref name="index" /> + 1, il valore numerico del carattere nella posizione <paramref name="index" /> è compreso tra U+D800 e U+DBFF e il valore numerico del carattere nella posizione <paramref name="index" />+1 è compreso tra U+DC00 e U+DFFF; in caso contrario, false.</returns>
      <param name="s">Stringa. </param>
      <param name="index">Posizione iniziale della coppia di caratteri da valutare all'interno di <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è una posizione all'interno di <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSymbol(System.Char)">
      <summary>Indica se il carattere Unicode specificato è stato categorizzato come carattere simbolo.</summary>
      <returns>true se <paramref name="c" /> è un carattere simbolo; in caso contrario, false.</returns>
      <param name="c">Carattere Unicode da valutare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSymbol(System.String,System.Int32)">
      <summary>Indica se il carattere in corrispondenza della posizione specificata in una determinata stringa è stato categorizzato come carattere simbolo.</summary>
      <returns>true se il carattere alla posizione <paramref name="index" /> in <paramref name="s" /> è un carattere simbolo; in caso contrario, false.</returns>
      <param name="s">Stringa. </param>
      <param name="index">Posizione del carattere da valutare in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore dell'ultima posizione in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsUpper(System.Char)">
      <summary>Indica se il carattere Unicode specificato è stato categorizzato come lettera maiuscola.</summary>
      <returns>true se <paramref name="c" /> è una lettera maiuscola; in caso contrario, false.</returns>
      <param name="c">Carattere Unicode da valutare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsUpper(System.String,System.Int32)">
      <summary>Indica se il carattere in corrispondenza della posizione specificata in una determinata stringa è stato categorizzato come lettera maiuscola.</summary>
      <returns>true se il carattere alla posizione <paramref name="index" /> in <paramref name="s" /> è una lettera maiuscola; in caso contrario, false.</returns>
      <param name="s">Stringa. </param>
      <param name="index">Posizione del carattere da valutare in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore dell'ultima posizione in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsWhiteSpace(System.Char)">
      <summary>Indica se il carattere Unicode specificato è stato categorizzato come spazio.</summary>
      <returns>true se <paramref name="c" /> è uno spazio; in caso contrario, false.</returns>
      <param name="c">Carattere Unicode da valutare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
      <summary>Indica se il carattere in corrispondenza della posizione specificata in una determinata stringa è stato categorizzato come spazio.</summary>
      <returns>true se il carattere alla posizione <paramref name="index" /> in <paramref name="s" /> è uno spazio; in caso contrario, false.</returns>
      <param name="s">Stringa. </param>
      <param name="index">Posizione del carattere da valutare in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore dell'ultima posizione in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Char.MaxValue">
      <summary>Rappresenta il valore massimo possibile di <see cref="T:System.Char" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Char.MinValue">
      <summary>Rappresenta il valore minimo possibile di un oggetto <see cref="T:System.Char" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.Parse(System.String)">
      <summary>Converte il valore della stringa specificata nell'equivalente carattere Unicode.</summary>
      <returns>Carattere Unicode equivalente all'unico carattere in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un solo carattere oppure null. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.FormatException">La lunghezza di <paramref name="s" /> non è 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
      <returns>Intero con segno che indica la posizione di questa istanza nell'ordinamento in relazione al parametro <paramref name="value" />.Valore restituito Descrizione Minore di zero Questa istanza precede <paramref name="value" /> nell'ordinamento. Zero Questa istanza si trova nella stessa posizione di <paramref name="value" /> nell'ordinamento. Maggiore di zero Questa istanza segue <paramref name="value" /> nei criteri di ordinamento.-oppure- <paramref name="value" /> è null. </returns>
      <param name="value">Oggetto da confrontare con questa istanza o null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> non è un oggetto <see cref="T:System.Char" />. </exception>
    </member>
    <member name="M:System.Char.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Nota   Questa conversione non è supportata.Qualsiasi tentativo di eseguire tale operazione genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Questa conversione non è supportata.Non vengono restituiti valori.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.Char" /> corrente.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</summary>
      <returns>Valore dell'oggetto <see cref="T:System.Char" /> corrente invariato.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Nota   Questa conversione non è supportata.Qualsiasi tentativo di eseguire tale operazione genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Non vengono restituiti valori.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Nota   Questa conversione non è supportata.Qualsiasi tentativo di eseguire tale operazione genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Non vengono restituiti valori.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Nota   Questa conversione non è supportata.Qualsiasi tentativo di eseguire tale operazione genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Non vengono restituiti valori.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary> Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.Char" /> corrente.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.Char" /> corrente.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary> Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.Char" /> corrente.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary> Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.Char" /> corrente.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Nota   Questa conversione non è supportata.Qualsiasi tentativo di eseguire tale operazione genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Non vengono restituiti valori.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToString(System.IFormatProvider)"></member>
    <member name="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</summary>
      <returns>Oggetto del tipo specificato.</returns>
      <param name="type">Oggetto <see cref="T:System.Type" />. </param>
      <param name="provider">Oggetto <see cref="T:System.IFormatProvider" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> è null.</exception>
      <exception cref="T:System.InvalidCastException">Non è possibile convertire il valore dell'oggetto <see cref="T:System.Char" /> corrente nel tipo specificato dal parametro <paramref name="type" />. </exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.Char" /> corrente.</returns>
      <param name="provider">Oggetto <see cref="T:System.IFormatProvider" />.Specificare null, in quanto il parametro <paramref name="provider" /> viene ignorato.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.Char" /> corrente.</returns>
      <param name="provider">Oggetto <see cref="T:System.IFormatProvider" />.Specificare null, in quanto il parametro <paramref name="provider" /> viene ignorato.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.Char" /> corrente.</returns>
      <param name="provider">Oggetto <see cref="T:System.IFormatProvider" />.Specificare null, in quanto il parametro <paramref name="provider" /> viene ignorato.</param>
    </member>
    <member name="M:System.Char.ToLower(System.Char)">
      <summary>Converte il valore di un carattere Unicode nell'equivalente carattere minuscolo.</summary>
      <returns>Equivalente minuscolo di <paramref name="c" /> o, se <paramref name="c" /> è già un carattere minuscolo o non alfabetico, valore non modificato di <paramref name="c" />.</returns>
      <param name="c">Carattere Unicode da convertire. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToLowerInvariant(System.Char)">
      <summary>Converte il valore di un carattere Unicode nell'equivalente carattere minuscolo mediante le regole relative all'utilizzo di maiuscole e minuscole delle impostazioni cultura invarianti.</summary>
      <returns>Equivalente minuscolo del parametro <paramref name="c" /> o, se <paramref name="c" /> è già un carattere minuscolo o non alfabetico, valore non modificato di <paramref name="c" />.</returns>
      <param name="c">Carattere Unicode da convertire. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToString">
      <summary>Converte il valore dell'istanza corrente nell'equivalente rappresentazione di stringa.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToString(System.Char)">
      <summary>Converte il carattere Unicode specificato nell'equivalente rappresentazione di stringa.</summary>
      <returns>Rappresentazione di stringa del valore di <paramref name="c" />.</returns>
      <param name="c">Carattere Unicode da convertire. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToUpper(System.Char)">
      <summary>Converte il valore di un carattere Unicode nell'equivalente carattere maiuscolo.</summary>
      <returns>Equivalente maiuscolo del parametro <paramref name="c" /> o, se <paramref name="c" /> è già un carattere maiuscolo, non alfabetico o per cui non esiste equivalente maiuscolo, valore non modificato di <paramref name="c" />.</returns>
      <param name="c">Carattere Unicode da convertire. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToUpperInvariant(System.Char)">
      <summary>Converte il valore di un carattere Unicode nell'equivalente carattere maiuscolo mediante le regole relative all'utilizzo di maiuscole e minuscole delle impostazioni cultura invarianti.</summary>
      <returns>Equivalente maiuscolo del parametro <paramref name="c" /> o, se <paramref name="c" /> è già un carattere maiuscolo o non alfabetico, valore non modificato di <paramref name="c" />.</returns>
      <param name="c">Carattere Unicode da convertire. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.TryParse(System.String,System.Char@)">
      <summary>Converte il valore della stringa specificata nell'equivalente carattere Unicode.Un codice restituito indica se la conversione ha avuto esito positivo o negativo.</summary>
      <returns>true se il parametro <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa contenente un solo carattere oppure null. </param>
      <param name="result">Quando questo metodo viene restituito, contiene un carattere Unicode equivalente all'unico carattere contenuto nel parametro <paramref name="s" />; in caso contrario, il risultato contiene un valore non definito.La conversione non viene eseguita se il parametro <paramref name="s" /> è null o se la lunghezza di <paramref name="s" /> non è 1.Questo parametro viene passato non inizializzato.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.CLSCompliantAttribute">
      <summary>Indica se un elemento di programma è conforme a CLS (Common Language Specification).La classe non può essere ereditata.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.CLSCompliantAttribute.#ctor(System.Boolean)">
      <summary>Inizializza un'istanza della classe <see cref="T:System.CLSCompliantAttribute" /> con un valore Boolean che definisce se l'elemento di programma indicato è conforme a CLS.</summary>
      <param name="isCompliant">true se è conforme a CLS; in caso contrario false. </param>
    </member>
    <member name="P:System.CLSCompliantAttribute.IsCompliant">
      <summary>Ottiene il valore Boolean che definisce se l'elemento di programma indicato è conforme a CLS.</summary>
      <returns>true se l'elemento di programma è conforme a CLS; in caso contrario false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Comparison`1">
      <summary>Rappresenta il metodo che confronta due oggetti dello stesso tipo.</summary>
      <typeparam name="T">Tipo di oggetti da confrontare.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Comparison`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Comparison`1.BeginInvoke(`0,`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Comparison`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Comparison`1.Invoke(`0,`0)"></member>
    <member name="T:System.DateTime">
      <summary>Rappresenta un istante di tempo, in genere espresso come data e ora del giorno. Per esaminare il codice sorgente di .NET Framework per questo tipo, vedere il Reference Source.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTime" /> su anno, mese e giorno specificati.</summary>
      <param name="year">Anno (da 1 a 9999). </param>
      <param name="month">Mese (da 1 a 12). </param>
      <param name="day">Giorno (da 1 al numero di giorni in <paramref name="month" />). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> è minore di 1 o maggiore di 9999.-oppure- <paramref name="month" /> è minore di 1 o maggiore di 12.-oppure- <paramref name="day" /> è minore di 1 o maggiore del numero di giorni in <paramref name="month" />. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTime" /> su anno, mese, giorno, ora, minuto e secondo specificati.</summary>
      <param name="year">Anno (da 1 a 9999). </param>
      <param name="month">Mese (da 1 a 12). </param>
      <param name="day">Giorno (da 1 al numero di giorni in <paramref name="month" />). </param>
      <param name="hour">Ore (da 0 a 23). </param>
      <param name="minute">Minuti (da 0 a 59). </param>
      <param name="second">Secondi (da 0 a 59). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> è minore di 1 o maggiore di 9999. -oppure- <paramref name="month" /> è minore di 1 o maggiore di 12. -oppure- <paramref name="day" /> è minore di 1 o maggiore del numero di giorni in <paramref name="month" />.-oppure- <paramref name="hour" /> è minore di 0 o maggiore di 23. -oppure- <paramref name="minute" /> è minore di 0 o maggiore di 59. -oppure- <paramref name="second" /> è minore di 0 o maggiore di 59. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTime" /> su anno, mese, giorno, ora, minuto, secondo e ora UTC (Coordinated Universal Time) oppure ora locale specificati.</summary>
      <param name="year">Anno (da 1 a 9999). </param>
      <param name="month">Mese (da 1 a 12). </param>
      <param name="day">Giorno (da 1 al numero di giorni in <paramref name="month" />). </param>
      <param name="hour">Ore (da 0 a 23). </param>
      <param name="minute">Minuti (da 0 a 59). </param>
      <param name="second">Secondi (da 0 a 59). </param>
      <param name="kind">Uno dei valori di enumerazione che indica se <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" /> e <paramref name="second" /> specificano un'ora locale, un'ora UTC (Coordinated Universal Time) o nessuna delle due.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> è minore di 1 o maggiore di 9999. -oppure- <paramref name="month" /> è minore di 1 o maggiore di 12. -oppure- <paramref name="day" /> è minore di 1 o maggiore del numero di giorni in <paramref name="month" />.-oppure- <paramref name="hour" /> è minore di 0 o maggiore di 23. -oppure- <paramref name="minute" /> è minore di 0 o maggiore di 59. -oppure- <paramref name="second" /> è minore di 0 o maggiore di 59. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="kind" /> non è uno dei valori di <see cref="T:System.DateTimeKind" />.</exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTime" /> su anno, mese, giorno, ora, minuto, secondo e millisecondo specificati.</summary>
      <param name="year">Anno (da 1 a 9999). </param>
      <param name="month">Mese (da 1 a 12). </param>
      <param name="day">Giorno (da 1 al numero di giorni in <paramref name="month" />). </param>
      <param name="hour">Ore (da 0 a 23). </param>
      <param name="minute">Minuti (da 0 a 59). </param>
      <param name="second">Secondi (da 0 a 59). </param>
      <param name="millisecond">Millisecondi (da 0 a 999). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> è minore di 1 o maggiore di 9999.-oppure- <paramref name="month" /> è minore di 1 o maggiore di 12.-oppure- <paramref name="day" /> è minore di 1 o maggiore del numero di giorni in <paramref name="month" />.-oppure- <paramref name="hour" /> è minore di 0 o maggiore di 23.-oppure- <paramref name="minute" /> è minore di 0 o maggiore di 59.-oppure- <paramref name="second" /> è minore di 0 o maggiore di 59.-oppure- <paramref name="millisecond" /> è minore di 0 o maggiore di 999. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTime" /> su anno, mese, giorno, ora, minuto, secondo, millisecondo e ora UTC (Coordinated Universal Time) oppure ora locale specificati.</summary>
      <param name="year">Anno (da 1 a 9999). </param>
      <param name="month">Mese (da 1 a 12). </param>
      <param name="day">Giorno (da 1 al numero di giorni in <paramref name="month" />). </param>
      <param name="hour">Ore (da 0 a 23). </param>
      <param name="minute">Minuti (da 0 a 59). </param>
      <param name="second">Secondi (da 0 a 59). </param>
      <param name="millisecond">Millisecondi (da 0 a 999). </param>
      <param name="kind">Uno dei valori di enumerazione che indica se <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" /> e <paramref name="millisecond" /> specificano un'ora locale, un'ora UTC (Coordinated Universal Time) o nessuna delle due.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> è minore di 1 o maggiore di 9999.-oppure- <paramref name="month" /> è minore di 1 o maggiore di 12.-oppure- <paramref name="day" /> è minore di 1 o maggiore del numero di giorni in <paramref name="month" />.-oppure- <paramref name="hour" /> è minore di 0 o maggiore di 23.-oppure- <paramref name="minute" /> è minore di 0 o maggiore di 59.-oppure- <paramref name="second" /> è minore di 0 o maggiore di 59.-oppure- <paramref name="millisecond" /> è minore di 0 o maggiore di 999. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="kind" /> non è uno dei valori di <see cref="T:System.DateTimeKind" />.</exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int64)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTime" /> su un numero di tick specificato.</summary>
      <param name="ticks">Data e ora espresse come numero di intervalli da 100 nanosecondi trascorsi dalle ore 00.00.00.000 del 01 gennaio 0001 nel calendario gregoriano. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ticks" /> è minore di <see cref="F:System.DateTime.MinValue" /> o maggiore di <see cref="F:System.DateTime.MaxValue" />. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int64,System.DateTimeKind)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTime" /> su un numero specificato di tick e sull'ora UTC (Coordinated Universal Time) oppure sull'ora locale.</summary>
      <param name="ticks">Data e ora espresse come numero di intervalli da 100 nanosecondi trascorsi dalle ore 00.00.00.000 del 01 gennaio 0001 nel calendario gregoriano. </param>
      <param name="kind">Uno dei valori di enumerazione che indica se <paramref name="ticks" /> specifica un'ora locale, un'ora UTC (Coordinated Universal Time) o nessuna delle due.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ticks" /> è minore di <see cref="F:System.DateTime.MinValue" /> o maggiore di <see cref="F:System.DateTime.MaxValue" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="kind" /> non è uno dei valori di <see cref="T:System.DateTimeKind" />.</exception>
    </member>
    <member name="M:System.DateTime.Add(System.TimeSpan)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTime" /> che aggiunge il valore dell'oggetto <see cref="T:System.TimeSpan" /> specificato al valore di questa istanza.</summary>
      <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'istanza e dell'intervallo di tempo rappresentato da <paramref name="value" />.</returns>
      <param name="value">Intervallo di tempo positivo o negativo. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'oggetto <see cref="T:System.DateTime" /> risultante è minore di <see cref="F:System.DateTime.MinValue" /> o maggiore di <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddDays(System.Double)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTime" /> che aggiunge il numero specificato di giorni al valore di questa istanza.</summary>
      <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'istanza e del numero di giorni rappresentato da <paramref name="value" />.</returns>
      <param name="value">Numero di giorni interi e frazionari.Il parametro <paramref name="value" /> può essere negativo o positivo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'oggetto <see cref="T:System.DateTime" /> risultante è minore di <see cref="F:System.DateTime.MinValue" /> o maggiore di <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddHours(System.Double)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTime" /> che aggiunge il numero specificato di ore al valore di questa istanza.</summary>
      <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'istanza e del numero di ore rappresentato da <paramref name="value" />.</returns>
      <param name="value">Numero di ore intere e frazionarie.Il parametro <paramref name="value" /> può essere negativo o positivo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'oggetto <see cref="T:System.DateTime" /> risultante è minore di <see cref="F:System.DateTime.MinValue" /> o maggiore di <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddMilliseconds(System.Double)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTime" /> che aggiunge il numero specificato di millisecondi al valore di questa istanza.</summary>
      <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'istanza e del numero di millisecondi rappresentato da <paramref name="value" />.</returns>
      <param name="value">Numero di millisecondi interi e frazionari.Il parametro <paramref name="value" /> può essere negativo o positivo.Il valore viene arrotondato all'intero più vicino.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'oggetto <see cref="T:System.DateTime" /> risultante è minore di <see cref="F:System.DateTime.MinValue" /> o maggiore di <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddMinutes(System.Double)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTime" /> che aggiunge il numero specificato di minuti al valore di questa istanza.</summary>
      <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'istanza e del numero di minuti rappresentato da <paramref name="value" />.</returns>
      <param name="value">Numero di minuti interi e frazionari.Il parametro <paramref name="value" /> può essere negativo o positivo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'oggetto <see cref="T:System.DateTime" /> risultante è minore di <see cref="F:System.DateTime.MinValue" /> o maggiore di <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddMonths(System.Int32)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTime" /> che aggiunge il numero specificato di mesi al valore di questa istanza.</summary>
      <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'istanza e <paramref name="months" />.</returns>
      <param name="months">Numero di mesi.Il parametro <paramref name="months" /> può essere negativo o positivo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'oggetto <see cref="T:System.DateTime" /> risultante è minore di <see cref="F:System.DateTime.MinValue" /> o maggiore di <see cref="F:System.DateTime.MaxValue" />.-oppure- <paramref name="months" /> è minore di -120.000 o maggiore di 120.000. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddSeconds(System.Double)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTime" /> che aggiunge il numero specificato di secondi al valore di questa istanza.</summary>
      <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'istanza e del numero di secondi rappresentato da <paramref name="value" />.</returns>
      <param name="value">Numero di secondi interi e frazionari.Il parametro <paramref name="value" /> può essere negativo o positivo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'oggetto <see cref="T:System.DateTime" /> risultante è minore di <see cref="F:System.DateTime.MinValue" /> o maggiore di <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddTicks(System.Int64)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTime" /> che aggiunge il numero specificato di tick al valore di questa istanza.</summary>
      <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'istanza e dell'ora rappresentata da <paramref name="value" />.</returns>
      <param name="value">Numero di tick di 100 nanosecondi.Il parametro <paramref name="value" /> può essere positivo o negativo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'oggetto <see cref="T:System.DateTime" /> risultante è minore di <see cref="F:System.DateTime.MinValue" /> o maggiore di <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddYears(System.Int32)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTime" /> che aggiunge il numero specificato di anni al valore di questa istanza.</summary>
      <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'istanza e del numero di anni rappresentato da <paramref name="value" />.</returns>
      <param name="value">Numero di anni.Il parametro <paramref name="value" /> può essere negativo o positivo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> o l'oggetto <see cref="T:System.DateTime" /> risultante è minore di <see cref="F:System.DateTime.MinValue" /> o maggiore di <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Compare(System.DateTime,System.DateTime)">
      <summary>Confronta due istanze di <see cref="T:System.DateTime" /> e restituisce un intero che indica se la prima istanza è precedente, uguale o successiva alla seconda istanza.</summary>
      <returns>Numero con segno che indica i valori relativi di <paramref name="t1" /> e <paramref name="t2" />.Tipo di valore Condizione Minore di zero <paramref name="t1" /> è precedente a <paramref name="t2" />. Zero <paramref name="t1" /> è uguale a <paramref name="t2" />. Maggiore di zero <paramref name="t1" /> è successivo a <paramref name="t2" />. </returns>
      <param name="t1">Primo oggetto da confrontare. </param>
      <param name="t2">Secondo oggetto da confrontare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.CompareTo(System.DateTime)">
      <summary>Confronta il valore di questa istanza con un valore <see cref="T:System.DateTime" /> specificato e restituisce un intero che indica se l'istanza è precedente, uguale o successiva al valore <see cref="T:System.DateTime" /> specificato.</summary>
      <returns>Numero con segno che indica i valori relativi di questa istanza e il parametro <paramref name="value" />.Valore Descrizione Minore di zero Questa istanza è precedente al parametro <paramref name="value" />. Zero Questa istanza è uguale al parametro <paramref name="value" />. Maggiore di zero Questa istanza è successiva al parametro <paramref name="value" />. </returns>
      <param name="value">Oggetto da confrontare con l'istanza corrente della classe. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Date">
      <summary>Ottiene il componente di data dell'istanza.</summary>
      <returns>Nuovo oggetto con la medesima data dell'istanza e il valore dell'ora impostato sulla mezzanotte (00.00.00).</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Day">
      <summary>Ottiene il giorno del mese rappresentato dall'istanza.</summary>
      <returns>Componente che indica il giorno, espresso mediante un valore compreso tra 1 e 31.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.DayOfWeek">
      <summary>Ottiene il giorno della settimana rappresentato dall'istanza.</summary>
      <returns>Costante enumerata che indica il giorno della settimana del valore <see cref="T:System.DateTime" />. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.DayOfYear">
      <summary>Ottiene il giorno dell'anno rappresentato dall'istanza.</summary>
      <returns>Giorno dell'anno, espresso mediante un valore compreso fra 1 e 366.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.DaysInMonth(System.Int32,System.Int32)">
      <summary>Restituisce il numero di giorni nel mese e anno specificati.</summary>
      <returns>Numero di giorni in <paramref name="month" /> per il parametro <paramref name="year" /> specificato.Se ad esempio <paramref name="month" /> risulta uguale a 2 per febbraio, il valore restituito sarà 28 o 29 a seconda che <paramref name="year" /> sia o meno bisestile.</returns>
      <param name="year">Anno. </param>
      <param name="month">Mese (un numero compreso fra 1 e 12). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="month" /> è minore di 1 o maggiore di 12.-oppure-<paramref name="year" /> è minore di 1 o maggiore di 9999.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Equals(System.DateTime)">
      <summary>Restituisce un valore che indica se il valore di questa istanza è uguale al valore dell'istanza di <see cref="T:System.DateTime" /> specificata.</summary>
      <returns>true se il parametro <paramref name="value" /> è uguale al valore di questa istanza; in caso contrario, false.</returns>
      <param name="value">Oggetto da confrontare con questa istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Equals(System.DateTime,System.DateTime)">
      <summary>Restituisce un valore che indica se due istanze di <see cref="T:System.DateTime" /> presentano lo stesso valore di data e ora.</summary>
      <returns>true se i due valori sono uguali; in caso contrario, false.</returns>
      <param name="t1">Primo oggetto da confrontare. </param>
      <param name="t2">Secondo oggetto da confrontare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="value" /> è un'istanza di <see cref="T:System.DateTime" /> ed è uguale al valore dell'istanza; in caso contrario, false.</returns>
      <param name="value">Oggetto da confrontare con questa istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.FromBinary(System.Int64)">
      <summary>Deserializza un valore binario a 64 bit e ricrea un oggetto originale <see cref="T:System.DateTime" /> serializzato.</summary>
      <returns>Oggetto equivalente all'oggetto <see cref="T:System.DateTime" /> che è stato serializzato dal metodo <see cref="M:System.DateTime.ToBinary" />.</returns>
      <param name="dateData">Intero con segno a 64 bit che codifica la proprietà <see cref="P:System.DateTime.Kind" /> in un campo a 2 bit e la proprietà <see cref="P:System.DateTime.Ticks" /> in un campo a 62 bit. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateData" /> è minore di <see cref="F:System.DateTime.MinValue" /> o maggiore di <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.FromFileTime(System.Int64)">
      <summary>Converte l'ora specificata di un file di Windows in un'ora locale equivalente.</summary>
      <returns>Oggetto che rappresenta l'ora locale equivalente della data e dell'ora rappresentate dal parametro <paramref name="fileTime" />.</returns>
      <param name="fileTime">Ora di un file di Windows espressa in tick. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="fileTime" /> è minore di 0 o rappresenta un'ora maggiore di <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.FromFileTimeUtc(System.Int64)">
      <summary>Converte l'ora di un file di Windows specificata in un'ora UTC equivalente.</summary>
      <returns>Oggetto che rappresenta l'ora UTC equivalente della data e dell'ora rappresentate dal parametro <paramref name="fileTime" />.</returns>
      <param name="fileTime">Ora di un file di Windows espressa in tick. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="fileTime" /> è minore di 0 o rappresenta un'ora maggiore di <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats">
      <summary>Converte il valore dell'istanza in tutte le rappresentazioni di stringa supportate dagli identificatori di formato di data e ora standard.</summary>
      <returns>Matrice di stringhe in cui ciascun elemento è la rappresentazione del valore dell'istanza formattato con uno degli identificatori di formato di data e ora standard.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.Char)">
      <summary>Converte il valore dell'istanza in tutte le rappresentazioni di stringa supportate dall'identificatore di formato di data e ora standard specificato.</summary>
      <returns>Matrice di stringhe in cui ciascun elemento è la rappresentazione del valore dell'istanza formattato con l'identificatore di formato di data e ora standard in <paramref name="format" />.</returns>
      <param name="format">Stringa di formato di data e ora standard (vedere le osservazioni). </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è un carattere identificatore del formato di data e ora standard valido.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)">
      <summary>Converte il valore dell'istanza in tutte le rappresentazioni di stringa supportate dall'identificatore di formato di data e ora standard e dalle informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Matrice di stringhe in cui ciascun elemento è la rappresentazione del valore dell'istanza formattato con uno degli identificatori di formato di data e ora standard.</returns>
      <param name="format">Stringa di formato di data e ora (vedere le osservazioni). </param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente all'istanza. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è un carattere identificatore del formato di data e ora standard valido.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.IFormatProvider)">
      <summary>Converte il valore dell'istanza in tutte le rappresentazioni di stringa supportate dagli identificatori di formato di data e ora standard e dalle informazioni di formattazione relative alle impostazioni cultura specificate.</summary>
      <returns>Matrice di stringhe in cui ciascun elemento è la rappresentazione del valore dell'istanza formattato con uno degli identificatori di formato di data e ora standard.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente all'istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Hour">
      <summary>Ottiene il componente di ora della data rappresentata dall'istanza.</summary>
      <returns>Componente che indica l'ora, espresso mediante un valore compreso tra 0 e 23.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.IsDaylightSavingTime">
      <summary>Indica se l'istanza dell'oggetto <see cref="T:System.DateTime" /> è compresa nell'intervallo l'ora legale del fuso orario corrente.</summary>
      <returns>true se il valore della proprietà <see cref="P:System.DateTime.Kind" /> è <see cref="F:System.DateTimeKind.Local" /> o <see cref="F:System.DateTimeKind.Unspecified" /> e il valore di questa istanza di <see cref="T:System.DateTime" /> è compreso nell'intervallo relativo all'ora legale per il fuso orario corrente; false se <see cref="P:System.DateTime.Kind" /> è <see cref="F:System.DateTimeKind.Utc" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.IsLeapYear(System.Int32)">
      <summary>Restituisce un'indicazione che informa se l'anno specificato è bisestile.</summary>
      <returns>true se <paramref name="year" /> è bisestile, in caso contrario, false.</returns>
      <param name="year">Anno di 4 cifre. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> è minore di 1 o maggiore di 9999.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Kind">
      <summary>Ottiene un valore che indica se l'ora rappresentata dall'istanza si basa sull'ora locale, sull'ora UTC (Coordinated Universal Time) o su nessuna delle due.</summary>
      <returns>Uno dei valori di enumerazione che indica ciò che l'ora corrente rappresenta.Il valore predefinito è <see cref="F:System.DateTimeKind.Unspecified" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.DateTime.MaxValue">
      <summary>Rappresenta il valore massimo possibile di <see cref="T:System.DateTime" />.Questo campo è di sola lettura.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Millisecond">
      <summary>Ottiene il componente di millisecondi della data rappresentata dall'istanza.</summary>
      <returns>Componente che indica i millisecondi, espresso mediante un valore compreso tra 0 e 999.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Minute">
      <summary>Ottiene il componente di minuti della data rappresentata dall'istanza.</summary>
      <returns>Componente che indica i minuti, espresso mediante un valore compreso tra 0 e 59.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.DateTime.MinValue">
      <summary>Rappresenta il valore più piccolo possibile di <see cref="T:System.DateTime" />.Questo campo è di sola lettura.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Month">
      <summary>Ottiene il componente di mese della data rappresentata dall'istanza.</summary>
      <returns>Componente che indica il mese, espresso mediante un valore compreso tra 1 e 12.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Now">
      <summary>Ottiene un oggetto <see cref="T:System.DateTime" /> impostato su data e ora correnti sul computer, espresso come ora locale.</summary>
      <returns>Oggetto il cui valore corrisponde alla data e all'ora locali correnti.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Addition(System.DateTime,System.TimeSpan)">
      <summary>Aggiunge un determinato intervallo di tempo a una data e a un'ora specificate, producendo una data e un'ora nuove.</summary>
      <returns>Oggetto che è la somma dei valori di <paramref name="d" /> e <paramref name="t" />.</returns>
      <param name="d">Valore di data e ora da aggiungere. </param>
      <param name="t">Intervallo di tempo da aggiungere. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'oggetto <see cref="T:System.DateTime" /> risultante è minore di <see cref="F:System.DateTime.MinValue" /> o maggiore di <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Equality(System.DateTime,System.DateTime)">
      <summary>Determina se due istanze specificate dell'oggetto <see cref="T:System.DateTime" /> sono uguali.</summary>
      <returns>true se <paramref name="d1" /> e <paramref name="d2" /> rappresentano le medesime data e ora, in caso contrario, false.</returns>
      <param name="d1">Primo oggetto da confrontare. </param>
      <param name="d2">Secondo oggetto da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)">
      <summary>Determina se un <see cref="T:System.DateTime" /> specificato è successivo a un altro <see cref="T:System.DateTime" /> specificato.</summary>
      <returns>true se <paramref name="t1" /> è successivo a <paramref name="t2" />; in caso contrario, false.</returns>
      <param name="t1">Primo oggetto da confrontare. </param>
      <param name="t2">Secondo oggetto da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)">
      <summary>Determina se un oggetto <see cref="T:System.DateTime" /> specificato rappresenta una data e ora uguali o successive a un altro oggetto <see cref="T:System.DateTime" /> specificato.</summary>
      <returns>true se <paramref name="t1" /> è uguale o successivo a <paramref name="t2" />; in caso contrario, false.</returns>
      <param name="t1">Primo oggetto da confrontare. </param>
      <param name="t2">Secondo oggetto da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Inequality(System.DateTime,System.DateTime)">
      <summary>Determina se due istanze specificate dell'oggetto <see cref="T:System.DateTime" /> non sono uguali.</summary>
      <returns>true se <paramref name="d1" /> e <paramref name="d2" /> non rappresentano le medesime data e ora, in caso contrario, false.</returns>
      <param name="d1">Primo oggetto da confrontare. </param>
      <param name="d2">Secondo oggetto da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_LessThan(System.DateTime,System.DateTime)">
      <summary>Determina se un oggetto <see cref="T:System.DateTime" /> specificato è precedente a un altro oggetto <see cref="T:System.DateTime" /> specificato.</summary>
      <returns>true se <paramref name="t1" /> è precedente a <paramref name="t2" />; in caso contrario, false.</returns>
      <param name="t1">Primo oggetto da confrontare. </param>
      <param name="t2">Secondo oggetto da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)">
      <summary>Determina se un oggetto <see cref="T:System.DateTime" /> specificato rappresenta una data e ora uguali o precedenti a un altro oggetto <see cref="T:System.DateTime" /> specificato.</summary>
      <returns>true se <paramref name="t1" /> è uguale o successivo a <paramref name="t2" />; in caso contrario, false.</returns>
      <param name="t1">Primo oggetto da confrontare. </param>
      <param name="t2">Secondo oggetto da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Subtraction(System.DateTime,System.DateTime)">
      <summary>Sottrae una data e un'ora specificate da un'altra data e un'altra ora specificate e restituisce un intervallo di tempo.</summary>
      <returns>Intervallo di tempo tra <paramref name="d1" /> e <paramref name="d2" />, ovvero <paramref name="d1" /> meno <paramref name="d2" />.</returns>
      <param name="d1">Valore data e ora da cui sottrarre (minuendo). </param>
      <param name="d2">Valore data e ora da cui sottrarre (sottraendo). </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)">
      <summary>Sottrae un intervallo di tempo specificato da una data e un'ora specificate e restituisce una data e un'ora nuove.</summary>
      <returns>Oggetto il cui valore è il valore di <paramref name="d" /> meno il valore di <paramref name="t" />.</returns>
      <param name="d">Valore di data e ora da cui sottrarre. </param>
      <param name="t">Intervallo di tempo da sottrarre. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'oggetto <see cref="T:System.DateTime" /> risultante è minore di <see cref="F:System.DateTime.MinValue" /> o maggiore di <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.Parse(System.String)">
      <summary>Converte la rappresentazione di stringa di una data e di un'ora nell'equivalente <see cref="T:System.DateTime" />.</summary>
      <returns>Oggetto equivalente alla data e all'ora contenute in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente una data e un'ora da convertire. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> non contiene una rappresentazione in forma di stringa valida di una data e di un'ora. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Parse(System.String,System.IFormatProvider)">
      <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nel relativo <see cref="T:System.DateTime" /> equivalente usando le informazioni sul formato relative alle impostazioni cultura specificate.</summary>
      <returns>Oggetto equivalente alla data e all'ora contenute in <paramref name="s" />, come specificato da <paramref name="provider" />.</returns>
      <param name="s">Stringa contenente una data e un'ora da convertire. </param>
      <param name="provider">Oggetto che fornisce informazioni sul formato di <paramref name="s" /> specifiche delle impostazioni cultura. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> non contiene una rappresentazione in forma di stringa valida di una data e di un'ora. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Converte una rappresentazione di stringa di una data e di un'ora nell'oggetto <see cref="T:System.DateTime" /> equivalente usando le informazioni sul formato specifiche delle impostazioni cultura e lo stile di formattazione specificati.</summary>
      <returns>Oggetto equivalente alla data e all'ora contenute in <paramref name="s" />, come specificato da <paramref name="provider" /> e <paramref name="styles" />.</returns>
      <param name="s">Stringa contenente una data e un'ora da convertire. </param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <param name="styles">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" /> per la corretta esecuzione dell'operazione di analisi e che definisce come interpretare la data analizzata in relazione al fuso orario o alla data correnti.Un valore tipico da specificare è <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> non contiene una rappresentazione in forma di stringa valida di una data e di un'ora. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> contiene una combinazione non valida di valori <see cref="T:System.Globalization.DateTimeStyles" />,quale ad esempio la combinazione costituita dai campi <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> e <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)">
      <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nel relativo oggetto <see cref="T:System.DateTime" /> equivalente usando il formato specificato e le informazioni sul formato relative alle impostazioni cultura specificate.Il formato della rappresentazione di stringa deve corrispondere esattamente al formato specificato.</summary>
      <returns>Oggetto equivalente alla data e all'ora contenute in <paramref name="s" />, come specificato da <paramref name="format" /> e <paramref name="provider" />.</returns>
      <param name="s">Stringa contenente una data e un'ora da convertire. </param>
      <param name="format">Identificatore di formato che definisce il formato richiesto di <paramref name="s" />.Per altre informazioni, vedere la sezione Osservazioni.</param>
      <param name="provider">Oggetto che fornisce informazioni sul formato di <paramref name="s" /> specifiche delle impostazioni cultura. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> o <paramref name="format" /> è null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> o <paramref name="format" /> è una stringa vuota. -oppure- <paramref name="s" /> non contiene una data e un'ora che corrispondano al criterio specificato in <paramref name="format" />. -oppure-Il componente relativo alle ore e l'identificatore di AM/PM in <paramref name="s" /> non concordano.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nell'oggetto <see cref="T:System.DateTime" /> equivalente usando il formato, le informazioni sul formato specifiche delle impostazioni cultura e lo stile specificati.Il formato della rappresentazione di stringa deve corrispondere esattamente al formato specificato; in caso contrario, verrà generata un'eccezione.</summary>
      <returns>Oggetto equivalente alla data e all'ora contenute in <paramref name="s" />, come specificato da <paramref name="format" />, <paramref name="provider" /> e <paramref name="style" />.</returns>
      <param name="s">Stringa contenente data e ora da convertire. </param>
      <param name="format">Identificatore di formato che definisce il formato richiesto di <paramref name="s" />.Per altre informazioni, vedere la sezione Osservazioni.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che fornisce informazioni aggiuntive su <paramref name="s" />, sugli elementi di stile che possono essere presenti in <paramref name="s" /> o sulla conversione da <paramref name="s" /> a un valore <see cref="T:System.DateTime" />.Un valore tipico da specificare è <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> o <paramref name="format" /> è null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> o <paramref name="format" /> è una stringa vuota. -oppure- <paramref name="s" /> non contiene una data e un'ora che corrispondano al criterio specificato in <paramref name="format" />. -oppure-Il componente relativo alle ore e l'identificatore di AM/PM in <paramref name="s" /> non concordano.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> contiene una combinazione non valida di valori <see cref="T:System.Globalization.DateTimeStyles" />,quale ad esempio la combinazione costituita dai campi <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> e <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nell'oggetto <see cref="T:System.DateTime" /> equivalente usando la matrice di formati, le informazioni sul formato specifiche delle impostazioni cultura e lo stile specificati.Il formato della rappresentazione di stringa deve corrispondere esattamente ad almeno uno dei formati specificati; in caso contrario, verrà generata un'eccezione.</summary>
      <returns>Oggetto equivalente alla data e all'ora contenute in <paramref name="s" />, come specificato da <paramref name="formats" />, <paramref name="provider" /> e <paramref name="style" />.</returns>
      <param name="s">Stringa contenente una data e un'ora da convertire. </param>
      <param name="formats">Matrice di formati consentiti di <paramref name="s" />.Per altre informazioni, vedere la sezione Osservazioni.</param>
      <param name="provider">Oggetto che fornisce informazioni sul formato di <paramref name="s" /> specifiche delle impostazioni cultura. </param>
      <param name="style">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> o <paramref name="formats" /> è null. </exception>
      <exception cref="T:System.FormatException">Il parametro <paramref name="s" /> è una stringa vuota. -oppure- un elemento del parametro <paramref name="formats" /> è una stringa vuota. -oppure- <paramref name="s" /> non contiene data e ora che corrispondano agli elementi di <paramref name="formats" />. -oppure-Il componente relativo alle ore e l'identificatore di AM/PM in <paramref name="s" /> non concordano.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> contiene una combinazione non valida di valori <see cref="T:System.Globalization.DateTimeStyles" />,quale ad esempio la combinazione costituita dai campi <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> e <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Second">
      <summary>Ottiene il componente di secondi della data rappresentata dall'istanza.</summary>
      <returns>Componente che indica i secondi, espresso mediante un valore compreso tra 0 e 59.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)">
      <summary>Crea un nuovo oggetto <see cref="T:System.DateTime" /> che ha lo stesso numero di tick dell'oggetto <see cref="T:System.DateTime" /> specificato, ma viene definito come ora locale, ora UTC (Coordinated Universal Time) o nessuna delle due, a seconda di quanto indicato nel valore di <see cref="T:System.DateTimeKind" /> specificato.</summary>
      <returns>Nuovo oggetto che ha lo stesso numero di tick dell'oggetto rappresentato dal parametro <paramref name="value" /> e il valore di <see cref="T:System.DateTimeKind" /> specificato nel parametro <paramref name="kind" />. </returns>
      <param name="value">Data e ora. </param>
      <param name="kind">Uno dei valori di enumerazione che indica se il nuovo oggetto rappresenta un'ora locale, un'ora UTC o nessuna delle due.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Subtract(System.DateTime)">
      <summary>Sottrae la data e l'ora specificate dall'istanza.</summary>
      <returns>Intervallo di tempo uguale alla data e all'ora rappresentate dall'istanza dalle quali sono state sottratte la data e l'ora rappresentate da <paramref name="value" />.</returns>
      <param name="value">Valore di data e ora da sottrarre. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il risultato è minore di <see cref="F:System.DateTime.MinValue" /> o maggiore di <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Subtract(System.TimeSpan)">
      <summary>Sottrae la durata specificata dall'istanza.</summary>
      <returns>Oggetto uguale alla data e all'ora rappresentate dall'istanza dalle quali è stato sottratto l'intervallo di tempo rappresentato da <paramref name="value" />.</returns>
      <param name="value">Intervallo di tempo da sottrarre. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il risultato è minore di <see cref="F:System.DateTime.MinValue" /> o maggiore di <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se questa istanza precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
      <returns>Numero con segno che indica l'ordine relativo di questa istanza e di <paramref name="value" />.Valore Descrizione Minore di zero Questa istanza precede <paramref name="value" /> nell'ordinamento. Zero Questa istanza si trova nella stessa posizione di <paramref name="value" /> nell'ordinamento. Maggiore di zero Questa istanza segue <paramref name="value" /> all'interno dell'ordinamento o <paramref name="value" /> è null. </returns>
      <param name="value">Oggetto da confrontare con questa istanza o null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> non è un oggetto <see cref="T:System.DateTime" />. </exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Il valore restituito per questo membro non è usato.</returns>
      <param name="provider">Oggetto che implementa l'interfaccia <see cref="T:System.IFormatProvider" />.Questo parametro non viene usato; specificare null.</param>
      <exception cref="T:System.InvalidCastException">In tutti i casi.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Il valore restituito per questo membro non è usato.</returns>
      <param name="provider">Oggetto che implementa l'interfaccia <see cref="T:System.IFormatProvider" />.Questo parametro non viene usato; specificare null.</param>
      <exception cref="T:System.InvalidCastException">In tutti i casi.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Il valore restituito per questo membro non è usato.</returns>
      <param name="provider">Oggetto che implementa l'interfaccia <see cref="T:System.IFormatProvider" />.Questo parametro non viene usato; specificare null.</param>
      <exception cref="T:System.InvalidCastException">In tutti i casi.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Restituisce l'attuale oggetto <see cref="T:System.DateTime" />.</summary>
      <returns>Oggetto corrente.</returns>
      <param name="provider">Oggetto che implementa l'interfaccia <see cref="T:System.IFormatProvider" />.Questo parametro non viene usato; specificare null.</param>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Il valore restituito per questo membro non è usato.</returns>
      <param name="provider">Oggetto che implementa l'interfaccia <see cref="T:System.IFormatProvider" />.Questo parametro non viene usato; specificare null.</param>
      <exception cref="T:System.InvalidCastException">In tutti i casi.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Il valore restituito per questo membro non è usato.</returns>
      <param name="provider">Oggetto che implementa l'interfaccia <see cref="T:System.IFormatProvider" />.Questo parametro non viene usato; specificare null.</param>
      <exception cref="T:System.InvalidCastException">In tutti i casi.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Il valore restituito per questo membro non è usato.</returns>
      <param name="provider">Oggetto che implementa l'interfaccia <see cref="T:System.IFormatProvider" />.Questo parametro non viene usato; specificare null.</param>
      <exception cref="T:System.InvalidCastException">In tutti i casi.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Il valore restituito per questo membro non è usato.</returns>
      <param name="provider">Oggetto che implementa l'interfaccia <see cref="T:System.IFormatProvider" />.Questo parametro non viene usato; specificare null.</param>
      <exception cref="T:System.InvalidCastException">In tutti i casi.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Il valore restituito per questo membro non è usato.</returns>
      <param name="provider">Oggetto che implementa l'interfaccia <see cref="T:System.IFormatProvider" />.Questo parametro non viene usato; specificare null.</param>
      <exception cref="T:System.InvalidCastException">In tutti i casi.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Il valore restituito per questo membro non è usato.</returns>
      <param name="provider">Oggetto che implementa l'interfaccia <see cref="T:System.IFormatProvider" />.Questo parametro non viene usato; specificare null.</param>
      <exception cref="T:System.InvalidCastException">In tutti i casi.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Il valore restituito per questo membro non è usato.</returns>
      <param name="provider">Oggetto che implementa l'interfaccia <see cref="T:System.IFormatProvider" />.Questo parametro non viene usato; specificare null.</param>
      <exception cref="T:System.InvalidCastException">In tutti i casi. </exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Converte l'oggetto <see cref="T:System.DateTime" /> corrente in un oggetto di un tipo specificato.</summary>
      <returns>Oggetto del tipo specificato dal parametro <paramref name="type" />, con un valore equivalente all'oggetto <see cref="T:System.DateTime" /> corrente.</returns>
      <param name="type">Tipo desiderato. </param>
      <param name="provider">Oggetto che implementa l'interfaccia <see cref="T:System.IFormatProvider" />.Questo parametro non viene usato; specificare null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> è null. </exception>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata per il tipo <see cref="T:System.DateTime" />.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Il valore restituito per questo membro non è usato.</returns>
      <param name="provider">Oggetto che implementa l'interfaccia <see cref="T:System.IFormatProvider" />.Questo parametro non viene usato; specificare null.</param>
      <exception cref="T:System.InvalidCastException">In tutti i casi.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Il valore restituito per questo membro non è usato.</returns>
      <param name="provider">Oggetto che implementa l'interfaccia <see cref="T:System.IFormatProvider" />.Questo parametro non viene usato; specificare null.</param>
      <exception cref="T:System.InvalidCastException">In tutti i casi.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Il valore restituito per questo membro non è usato.</returns>
      <param name="provider">Oggetto che implementa l'interfaccia <see cref="T:System.IFormatProvider" />.Questo parametro non viene usato; specificare null.</param>
      <exception cref="T:System.InvalidCastException">In tutti i casi.</exception>
    </member>
    <member name="P:System.DateTime.Ticks">
      <summary>Ottiene il numero di tick che rappresentano data e ora dell'istanza.</summary>
      <returns>Numero di tick che rappresentano data e ora dell'istanza.Valore è compreso tra DateTime.MinValue.Ticks e DateTime.MaxValue.Ticks.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.TimeOfDay">
      <summary>Ottiene l'ora del giorno per l'istanza.</summary>
      <returns>Intervallo di tempo che rappresenta la frazione del giorno trascorsa a partire dalla mezzanotte.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToBinary">
      <summary>Serializza l'oggetto <see cref="T:System.DateTime" /> corrente in un valore binario a 64 bit che può essere quindi usato per ricreare l'oggetto <see cref="T:System.DateTime" />.</summary>
      <returns>Intero con segno a 64 bit che codifica le proprietà <see cref="P:System.DateTime.Kind" /> e <see cref="P:System.DateTime.Ticks" />. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Today">
      <summary>Ottiene la data corrente.</summary>
      <returns>Oggetto che è impostato sulla data corrente, con il componente ora impostato su 00.00.00.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToFileTime">
      <summary>Converte il valore dell'oggetto <see cref="T:System.DateTime" /> corrente in un'ora di un file di Windows.</summary>
      <returns>Valore dell'oggetto <see cref="T:System.DateTime" /> corrente espresso come un'ora di un file di Windows.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">L'ora del file risultante rappresenterebbe una data e un'ora prima delle 0.00 UTC del 1° gennaio 1601E.V.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToFileTimeUtc">
      <summary>Converte il valore dell'oggetto <see cref="T:System.DateTime" /> corrente in un'ora di un file di Windows.</summary>
      <returns>Valore dell'oggetto <see cref="T:System.DateTime" /> corrente espresso come un'ora di un file di Windows.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">L'ora del file risultante rappresenterebbe una data e un'ora prima delle 0.00 UTC del 1° gennaio 1601E.V.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToLocalTime">
      <summary>Converte il valore dell'oggetto <see cref="T:System.DateTime" /> corrente in un'ora locale.</summary>
      <returns>Oggetto la cui proprietà <see cref="P:System.DateTime.Kind" /> è <see cref="F:System.DateTimeKind.Local" /> e il cui valore è l'ora locale equivalente al valore dell'oggetto corrente <see cref="T:System.DateTime" /> oppure <see cref="F:System.DateTime.MaxValue" /> se il valore convertito è troppo grande per essere rappresentato da un oggetto <see cref="T:System.DateTime" /> oppure <see cref="F:System.DateTime.MinValue" /> se il valore convertito è troppo piccolo per essere rappresentato come un oggetto <see cref="T:System.DateTime" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString">
      <summary>Converte il valore dell'oggetto <see cref="T:System.DateTime" /> corrente nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa del valore dell'oggetto <see cref="T:System.DateTime" /> corrente.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La data e l'ora sono esterni all'intervallo di date supportato dal calendario utilizzato dalle impostazioni cultura correnti. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString(System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.DateTime" /> corrente nella rappresentazione di stringa equivalente, usando le informazioni sul formato relative alle impostazioni cultura specificate.</summary>
      <returns>Rappresentazione di stringa del valore dell'oggetto <see cref="T:System.DateTime" /> corrente, come specificato da <paramref name="provider" />.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">La data e l'ora non sono comprese nell'intervallo di date supportato dal calendario utilizzato da <paramref name="provider" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString(System.String)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.DateTime" /> corrente nella rappresentazione di stringa equivalente, usando il formato specificato.</summary>
      <returns>Rappresentazione di stringa del valore dell'oggetto <see cref="T:System.DateTime" /> corrente, come specificato da <paramref name="format" />.</returns>
      <param name="format">Stringa di formato di data e ora standard o personalizzato (vedere la sezione Note). </param>
      <exception cref="T:System.FormatException">La lunghezza di <paramref name="format" /> è 1, che non è uno dei caratteri dell'indicatore di formato definiti per <see cref="T:System.Globalization.DateTimeFormatInfo" />.-oppure- <paramref name="format" /> non contiene un criterio di formato personalizzato valido. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La data e l'ora sono esterni all'intervallo di date supportato dal calendario utilizzato dalle impostazioni cultura correnti.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString(System.String,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.DateTime" /> corrente nella rappresentazione di stringa equivalente, usando il formato specificato e le informazioni sul formato specifiche delle impostazioni cultura indicate.</summary>
      <returns>Rappresentazione di stringa del valore dell'oggetto <see cref="T:System.DateTime" /> corrente, specificata dai parametri <paramref name="format" /> e <paramref name="provider" />.</returns>
      <param name="format">Stringa di formato di data e ora standard o personalizzato. </param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <exception cref="T:System.FormatException">La lunghezza di <paramref name="format" /> è 1, che non è uno dei caratteri dell'indicatore di formato definiti per <see cref="T:System.Globalization.DateTimeFormatInfo" />.-oppure- <paramref name="format" /> non contiene un criterio di formato personalizzato valido. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La data e l'ora non sono comprese nell'intervallo di date supportato dal calendario utilizzato da <paramref name="provider" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToUniversalTime">
      <summary>Converte il valore dell'oggetto <see cref="T:System.DateTime" /> corrente nell'ora UTC (Coordinated Universal Time).</summary>
      <returns>Oggetto la cui proprietà <see cref="P:System.DateTime.Kind" /> è <see cref="F:System.DateTimeKind.Utc" /> e il cui valore è l'ora UTC equivalente al valore dell'oggetto <see cref="T:System.DateTime" /> corrente oppure <see cref="F:System.DateTime.MaxValue" /> se il valore convertito è troppo grande per essere rappresentato da un oggetto <see cref="T:System.DateTime" /> oppure <see cref="F:System.DateTime.MinValue" /> se il valore convertito è troppo piccolo per essere rappresentato da un oggetto <see cref="T:System.DateTime" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParse(System.String,System.DateTime@)">
      <summary>Converte la rappresentazione di stringa specificata di una data e di un'ora nell'equivalente <see cref="T:System.DateTime" /> e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <returns>true se il parametro <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa contenente data e ora da convertire. </param>
      <param name="result">Quando questo metodo viene restituito, contiene il valore <see cref="T:System.DateTime" /> equivalente alla data e all'ora contenute nel parametro <paramref name="s" />, se la conversione riesce; in caso contrario, viene restituito <see cref="F:System.DateTime.MinValue" />.La conversione non riesce se il parametro <paramref name="s" /> è null, è una stringa vuota ("") o non contiene una rappresentazione di stringa di una data e di un'ora valida.Questo parametro viene passato non inizializzato.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nell'equivalente <see cref="T:System.DateTime" /> usando le informazioni sul formato specifico delle impostazioni cultura e lo stile di formattazione specifici, quindi restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <returns>true se il parametro <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa contenente data e ora da convertire. </param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <param name="styles">Combinazione bit per bit dei valori di enumerazione che definisce il modo di interpretare la data analizzata in relazione al fuso orario o alla data corrente.Un valore tipico da specificare è <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <param name="result">Quando questo metodo viene restituito, contiene il valore <see cref="T:System.DateTime" /> equivalente alla data e all'ora contenute nel parametro <paramref name="s" />, se la conversione riesce; in caso contrario, viene restituito <see cref="F:System.DateTime.MinValue" />.La conversione non riesce se il parametro <paramref name="s" /> è null, è una stringa vuota ("") o non contiene una rappresentazione di stringa di una data e di un'ora valida.Questo parametro viene passato non inizializzato.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> non è un valore di <see cref="T:System.Globalization.DateTimeStyles" /> valido.-oppure-il parametro <paramref name="styles" /> contiene una combinazione non valida di valori dell'oggetto <see cref="T:System.Globalization.DateTimeStyles" />, quale ad esempio la coppia <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> e <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="provider" /> rappresenta impostazioni cultura non associate ad alcun paese e non può essere utilizzato in un'operazione di analisi.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nell'oggetto <see cref="T:System.DateTime" /> equivalente usando il formato, le informazioni sul formato specifiche delle impostazioni cultura e lo stile specificati.Il formato della rappresentazione di stringa deve corrispondere esattamente al formato specificato.Il metodo restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa contenente data e ora da convertire. </param>
      <param name="format">Formato necessario di <paramref name="s" />.Per altre informazioni, vedere la sezione Osservazioni.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <param name="style">Combinazione bit per bit di uno o più valori di enumerazione che indicano il formato consentito di <paramref name="s" />. </param>
      <param name="result">Quando questo metodo viene restituito, contiene il valore <see cref="T:System.DateTime" /> equivalente alla data e all'ora contenute nel parametro <paramref name="s" />, se la conversione riesce; in caso contrario, viene restituito <see cref="F:System.DateTime.MinValue" />.La conversione non riesce se il parametro <paramref name="s" /> o il parametro <paramref name="format" /> è null, è una stringa vuota o non contiene un valore di data e ora corrispondente al criterio specificato nel parametro <paramref name="format" />.Questo parametro viene passato non inizializzato.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> non è un valore di <see cref="T:System.Globalization.DateTimeStyles" /> valido.-oppure-il parametro <paramref name="styles" /> contiene una combinazione non valida di valori dell'oggetto <see cref="T:System.Globalization.DateTimeStyles" />, quale ad esempio la coppia <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> e <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nell'oggetto <see cref="T:System.DateTime" /> equivalente usando la matrice di formati, le informazioni sul formato specifiche delle impostazioni cultura e lo stile specificati.Il formato della rappresentazione di stringa deve corrispondere esattamente ad almeno uno dei formati specificati.Il metodo restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <returns>true se il parametro <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa contenente una data e un'ora da convertire. </param>
      <param name="formats">Matrice di formati consentiti di <paramref name="s" />.Per altre informazioni, vedere la sezione Osservazioni.</param>
      <param name="provider">Oggetto che fornisce informazioni sul formato di <paramref name="s" /> specifiche delle impostazioni cultura. </param>
      <param name="style">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <param name="result">Quando questo metodo viene restituito, contiene il valore <see cref="T:System.DateTime" /> equivalente alla data e all'ora contenute nel parametro <paramref name="s" />, se la conversione riesce; in caso contrario, viene restituito <see cref="F:System.DateTime.MinValue" />.La conversione non riesce se il parametro <paramref name="s" /> o il parametro <paramref name="formats" /> è null, il parametro <paramref name="s" /> o un elemento del parametro <paramref name="formats" /> è una stringa vuota o il formato di <paramref name="s" /> non è uguale a quello specificato da almeno uno dei modelli di formato indicati nel parametro <paramref name="formats" />.Questo parametro viene passato non inizializzato.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> non è un valore di <see cref="T:System.Globalization.DateTimeStyles" /> valido.-oppure-il parametro <paramref name="styles" /> contiene una combinazione non valida di valori dell'oggetto <see cref="T:System.Globalization.DateTimeStyles" />, quale ad esempio la coppia <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> e <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.UtcNow">
      <summary>Ottiene un oggetto <see cref="T:System.DateTime" /> impostato su data e ora correnti sul computer, espresso come ora UTC (Coordinated Universal Time).</summary>
      <returns>Oggetto il cui valore corrisponde alla data e all'ora UTC correnti.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Year">
      <summary>Ottiene il componente dell'anno della data rappresentata dall'istanza.</summary>
      <returns>Anno, compreso fra 1 e 9999.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.DateTimeKind">
      <summary>Specifica se un oggetto <see cref="T:System.DateTime" /> rappresenta un'ora locale, un'ora UTC (Coordinated Universal Time) o nessuna delle due.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.DateTimeKind.Local">
      <summary>L'ora rappresentata è quella locale.</summary>
    </member>
    <member name="F:System.DateTimeKind.Unspecified">
      <summary>L'ora rappresentata non è specificata come ora locale o come ora UTC (Coordinated Universal Time).</summary>
    </member>
    <member name="F:System.DateTimeKind.Utc">
      <summary>L'ora rappresentata è quella UTC.</summary>
    </member>
    <member name="T:System.DateTimeOffset">
      <summary>Rappresenta una data e un'ora, in genere espresse come data e ora del giorno rispetto all'ora UTC (Coordinated Universal Time).</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.DateTime)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTimeOffset" /> usando il valore <see cref="T:System.DateTime" /> specificato.</summary>
      <param name="dateTime">Data e ora.   </param>
      <exception cref="T:System.ArgumentOutOfRangeException">La data e l'ora UTC (Coordinated Universal Time) risultanti dall'applicazione dell'offset sono precedenti rispetto a <see cref="F:System.DateTimeOffset.MinValue" />.-oppure-La data e l'ora UTC risultanti dall'applicazione dell'offset sono successive rispetto a <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTimeOffset" /> usando il valore e l'offset della struttura <see cref="T:System.DateTime" /> specificati.</summary>
      <param name="dateTime">Data e ora.   </param>
      <param name="offset">Offset dell'ora rispetto all'ora UTC (Coordinated Universal Time).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateTime.Kind" /> è uguale a <see cref="F:System.DateTimeKind.Utc" /> e <paramref name="offset" /> è diverso da zero.-oppure-<paramref name="dateTime.Kind" /> è uguale a <see cref="F:System.DateTimeKind.Local" /> e <paramref name="offset" /> è diverso dall'offset del fuso orario locale del sistema.-oppure-<paramref name="offset" /> non è specificato in minuti interi.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> è minore di -14 ore o maggiore di 14 ore.-oppure-<see cref="P:System.DateTimeOffset.UtcDateTime" /> è minore di <see cref="F:System.DateTimeOffset.MinValue" /> o maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />. </exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTimeOffset" /> usando l'anno, il mese, il giorno, l'ora, il minuto, il secondo, il millisecondo e l'offset specificati.</summary>
      <param name="year">Anno (da 1 a 9999).</param>
      <param name="month">Mese (da 1 a 12).</param>
      <param name="day">Giorno (da 1 al numero di giorni in <paramref name="month" />).</param>
      <param name="hour">Ore (da 0 a 23).   </param>
      <param name="minute">Minuti (da 0 a 59).</param>
      <param name="second">Secondi (da 0 a 59).</param>
      <param name="millisecond">Millisecondi (da 0 a 999).</param>
      <param name="offset">Offset dell'ora rispetto all'ora UTC (Coordinated Universal Time).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> non rappresenta minuti interi.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> è minore di 1 o maggiore di 9999.-oppure-<paramref name="month" /> è minore di 1 o maggiore di 12.-oppure-<paramref name="day" /> è minore di 1 o maggiore del numero di giorni in <paramref name="month" />.-oppure-<paramref name="hour" /> è minore di zero o maggiore di 23.-oppure-<paramref name="minute" /> è minore di 0 o maggiore di 59.-oppure-<paramref name="second" /> è minore di 0 o maggiore di 59.-oppure-<paramref name="millisecond" /> è minore di 0 o maggiore di 999.-oppure-<paramref name="offset" /> è minore di -14 o maggiore di 14.-oppure-La proprietà <see cref="P:System.DateTimeOffset.UtcDateTime" /> è precedente rispetto a <see cref="F:System.DateTimeOffset.MinValue" /> o successiva rispetto a <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTimeOffset" /> usando l'anno, il mese, il giorno, l'ora, il minuto, il secondo e l'offset specificati.</summary>
      <param name="year">Anno (da 1 a 9999).</param>
      <param name="month">Mese (da 1 a 12).</param>
      <param name="day">Giorno (da 1 al numero di giorni in <paramref name="month" />).</param>
      <param name="hour">Ore (da 0 a 23).   </param>
      <param name="minute">Minuti (da 0 a 59).</param>
      <param name="second">Secondi (da 0 a 59).</param>
      <param name="offset">Offset dell'ora rispetto all'ora UTC (Coordinated Universal Time).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> non rappresenta minuti interi.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> è minore di 1 o maggiore di 9999.-oppure-<paramref name="month" /> è minore di 1 o maggiore di 12.-oppure-<paramref name="day" /> è minore di 1 o maggiore del numero di giorni in <paramref name="month" />.-oppure-<paramref name="hour" /> è minore di zero o maggiore di 23.-oppure-<paramref name="minute" /> è minore di 0 o maggiore di 59.-oppure-<paramref name="second" /> è minore di 0 o maggiore di 59.-oppure-<paramref name="offset" /> è minore di -14 ore o maggiore di 14 ore.-oppure-La proprietà <see cref="P:System.DateTimeOffset.UtcDateTime" /> è precedente rispetto a <see cref="F:System.DateTimeOffset.MinValue" /> o successiva rispetto a <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTimeOffset" /> usando il numero di tick e l'offset specificati.</summary>
      <param name="ticks">Data e ora espresse come numero di intervalli da 100 nanosecondi trascorsi dalle ore 12.00.00, mezzanotte del 1 gennaio 0001.</param>
      <param name="offset">Offset dell'ora rispetto all'ora UTC (Coordinated Universal Time).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> non è specificato in minuti interi.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La proprietà <see cref="P:System.DateTimeOffset.UtcDateTime" /> è precedente rispetto a <see cref="F:System.DateTimeOffset.MinValue" /> o successiva rispetto a <see cref="F:System.DateTimeOffset.MaxValue" />.-oppure-<paramref name="ticks" /> è minore di DateTimeOffset.MinValue.Ticks o maggiore di DateTimeOffset.MaxValue.Ticks.-oppure-<paramref name="Offset" /> è minore di -14 ore o maggiore di 14 ore.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Add(System.TimeSpan)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTimeOffset" /> che aggiunge un intervallo di tempo specificato al valore dell'istanza.</summary>
      <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente e dell'intervallo di tempo rappresentato da <paramref name="timeSpan" />.</returns>
      <param name="timeSpan">Oggetto <see cref="T:System.TimeSpan" /> che rappresenta un intervallo di tempo positivo o negativo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.-oppure- Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddDays(System.Double)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTimeOffset" /> che aggiunge un numero specificato di giorni interi e frazionari al valore dell'istanza.</summary>
      <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente e del numero di giorni rappresentato da <paramref name="days" />.</returns>
      <param name="days">Numero di giorni interi e frazionari.Il numero può essere positivo o negativo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.-oppure- Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddHours(System.Double)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTimeOffset" /> che aggiunge un numero specificato di ore intere e frazionarie al valore dell'istanza.</summary>
      <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente e del numero di ore rappresentato da <paramref name="hours" />.</returns>
      <param name="hours">Numero di ore intere e frazionarie.Il numero può essere positivo o negativo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.-oppure- Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddMilliseconds(System.Double)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTimeOffset" /> che aggiunge il numero specificato di millisecondi al valore di questa istanza.</summary>
      <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente e del numero di millisecondi interi rappresentato da <paramref name="milliseconds" />.</returns>
      <param name="milliseconds">Numero di millisecondi interi e frazionari.Il numero può essere positivo o negativo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.-oppure- Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddMinutes(System.Double)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTimeOffset" /> che aggiunge un numero specificato di minuti interi e frazionari al valore dell'istanza.</summary>
      <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente e del numero di minuti rappresentato da <paramref name="minutes" />.</returns>
      <param name="minutes">Numero di minuti interi e frazionari.Il numero può essere positivo o negativo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.-oppure- Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddMonths(System.Int32)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTimeOffset" /> che aggiunge il numero specificato di mesi al valore di questa istanza.</summary>
      <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente e del numero di mesi rappresentato da <paramref name="months" />.</returns>
      <param name="months">Numero di mesi interi.Il numero può essere positivo o negativo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.-oppure- Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddSeconds(System.Double)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTimeOffset" /> che aggiunge un numero specificato di secondi interi e frazionari al valore dell'istanza.</summary>
      <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente e del numero di secondi rappresentato da <paramref name="seconds" />.</returns>
      <param name="seconds">Numero di secondi interi e frazionari.Il numero può essere positivo o negativo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.-oppure- Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddTicks(System.Int64)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTimeOffset" /> che aggiunge il numero specificato di tick al valore di questa istanza.</summary>
      <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente e del numero di tick rappresentato da <paramref name="ticks" />.</returns>
      <param name="ticks">Numero di tick di 100 nanosecondi.Il numero può essere positivo o negativo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.-oppure- Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddYears(System.Int32)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTimeOffset" /> che aggiunge il numero specificato di anni al valore di questa istanza.</summary>
      <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente e del numero di anni rappresentato da <paramref name="years" />.</returns>
      <param name="years">Numero di anni.Il numero può essere positivo o negativo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.-oppure- Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Confronta due oggetti <see cref="T:System.DateTimeOffset" /> e indica se il primo è precedente, uguale o successivo al secondo.</summary>
      <returns>Intero con segno che indica se il valore del parametro <paramref name="first" /> è precedente, successivo o uguale al valore del parametro <paramref name="second" />, come illustrato nella tabella seguente.Valore restituitoSignificatoMinore di zero<paramref name="first" /> è precedente a <paramref name="second" />.Zero<paramref name="first" /> è uguale a <paramref name="second" />.Maggiore di zero<paramref name="first" /> è successivo a <paramref name="second" />.</returns>
      <param name="first">Primo oggetto da confrontare.</param>
      <param name="second">Secondo oggetto da confrontare.</param>
    </member>
    <member name="M:System.DateTimeOffset.CompareTo(System.DateTimeOffset)">
      <summary>Confronta l'oggetto <see cref="T:System.DateTimeOffset" /> corrente con un oggetto <see cref="T:System.DateTimeOffset" /> specificato e indica se l'oggetto corrente è precedente, uguale o successivo rispetto al secondo oggetto <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Intero con segno che indica la relazione tra l'oggetto <see cref="T:System.DateTimeOffset" /> corrente e il parametro <paramref name="other" />, come illustrato nella tabella seguente.Valore restituitoDescrizioneMinore di zeroL‎'oggetto <see cref="T:System.DateTimeOffset" /> corrente è precedente rispetto al parametro <paramref name="other" />.ZeroL'oggetto <see cref="T:System.DateTimeOffset" /> corrente è uguale rispetto al parametro <paramref name="other" />.Maggiore di zero.L‎'oggetto <see cref="T:System.DateTimeOffset" /> corrente è successivo rispetto al parametro <paramref name="other" />.</returns>
      <param name="other">Oggetto da confrontare con l'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</param>
    </member>
    <member name="P:System.DateTimeOffset.Date">
      <summary>Ottiene un valore <see cref="T:System.DateTime" /> che rappresenta il componente relativo alla data dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
      <returns>Valore <see cref="T:System.DateTime" /> che rappresenta il componente relativo alla data dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</returns>
    </member>
    <member name="P:System.DateTimeOffset.DateTime">
      <summary>Ottiene un valore <see cref="T:System.DateTime" /> che rappresenta la data e l'ora dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
      <returns>Data e ora dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Day">
      <summary>Ottiene il giorno del mese rappresentato dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
      <returns>Componente relativo al giorno dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, espresso come valore compreso tra 1 e 31.</returns>
    </member>
    <member name="P:System.DateTimeOffset.DayOfWeek">
      <summary>Ottiene il giorno della settimana rappresentato dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
      <returns>Uno dei valori di enumerazione che indica il giorno della settimana dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</returns>
    </member>
    <member name="P:System.DateTimeOffset.DayOfYear">
      <summary>Ottiene il giorno dell'anno rappresentato dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
      <returns>Giorno dell'anno dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, espresso come valore compreso tra 1 e 366.</returns>
    </member>
    <member name="M:System.DateTimeOffset.Equals(System.DateTimeOffset)">
      <summary>Determina se l'oggetto <see cref="T:System.DateTimeOffset" /> corrente rappresenta la stessa data e ora dell'oggetto <see cref="T:System.DateTimeOffset" /> specificato.</summary>
      <returns>true se entrambi gli oggetti <see cref="T:System.DateTimeOffset" /> presentano lo stesso valore <see cref="P:System.DateTimeOffset.UtcDateTime" />; in caso contrario, false.</returns>
      <param name="other">Oggetto da confrontare con l'oggetto <see cref="T:System.DateTimeOffset" /> corrente.   </param>
    </member>
    <member name="M:System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Determina se due oggetti <see cref="T:System.DateTimeOffset" /> specificati rappresentano la stessa data e ora.</summary>
      <returns>true se i due oggetti <see cref="T:System.DateTimeOffset" /> presentano lo stesso valore <see cref="P:System.DateTimeOffset.UtcDateTime" />; in caso contrario, false.</returns>
      <param name="first">Primo oggetto da confrontare.</param>
      <param name="second">Secondo oggetto da confrontare.</param>
    </member>
    <member name="M:System.DateTimeOffset.Equals(System.Object)">
      <summary>Determina se un oggetto <see cref="T:System.DateTimeOffset" /> rappresenta la stessa data e ora di un oggetto specificato.</summary>
      <returns>true se il parametro <paramref name="obj" /> è un oggetto <see cref="T:System.DateTimeOffset" /> che rappresenta la stessa data e ora dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</param>
    </member>
    <member name="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)">
      <summary>Determina se l'oggetto <see cref="T:System.DateTimeOffset" /> corrente rappresenta la stessa ora e ha lo stesso offset di un oggetto <see cref="T:System.DateTimeOffset" /> specificato.</summary>
      <returns>true se l'oggetto <see cref="T:System.DateTimeOffset" /> corrente e il parametro <paramref name="other" /> presentano lo stesso valore di data e ora e lo stesso valore <see cref="P:System.DateTimeOffset.Offset" />; in caso contrario, false.</returns>
      <param name="other">Oggetto da confrontare con l'oggetto <see cref="T:System.DateTimeOffset" /> corrente. </param>
    </member>
    <member name="M:System.DateTimeOffset.FromFileTime(System.Int64)">
      <summary>Converte l'ora specificata di un file di Windows in un'ora locale equivalente.</summary>
      <returns>Oggetto che rappresenta la data e l'ora di <paramref name="fileTime" /> con l'offset impostato sull'offset dell'ora locale.</returns>
      <param name="fileTime">Ora di un file di Windows espressa in tick.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="filetime" /> è minore di zero.-oppure-<paramref name="filetime" /> è maggiore di DateTimeOffset.MaxValue.Ticks.</exception>
    </member>
    <member name="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)">
      <summary>Converte un orario Unix espresso come numero di millisecondi trascorsi da 1970-01-01T00:00:00Z in un valore <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Valore di data e ora che rappresenta lo stesso momento in orario Unix. </returns>
      <param name="milliseconds">Orario Unix espresso come numero di millisecondi trascorsi da 1970-01-01T00:00:00Z (1 gennaio 1970 alle 00:00 UTC).Per gli orari Unix antecedenti a questa data, il valore è negativo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="milliseconds" /> è minore di -62.135.596.800.000. -oppure-<paramref name="milliseconds" /> è maggiore di 253.402.300.799.999. </exception>
    </member>
    <member name="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)">
      <summary>Converte un orario Unix espresso come numero di secondi trascorsi da 1970-01-01T00:00:00Z in un valore <see cref="T:System.DateTimeOffset" />. </summary>
      <returns>Valore di data e ora che rappresenta lo stesso momento in orario Unix. </returns>
      <param name="seconds">Orario Unix espresso come numero di secondi trascorsi da 1970-01-01T00:00:00Z (1 gennaio 1970 alle 00:00 UTC).Per gli orari Unix antecedenti a questa data, il valore è negativo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="seconds" /> è minore di -62.135.596.800. -oppure-<paramref name="seconds" /> è maggiore di 253.402.300.799. </exception>
    </member>
    <member name="M:System.DateTimeOffset.GetHashCode">
      <summary>Restituisce il codice hash per l'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Hour">
      <summary>Ottiene il componente relativo alle ore dell'ora rappresentata dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
      <returns>Componente relativo alle ore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.Questa proprietà usa il formato 24 ore; il valore varia da 0 a 23.</returns>
    </member>
    <member name="P:System.DateTimeOffset.LocalDateTime">
      <summary>Ottiene un valore <see cref="T:System.DateTime" /> che rappresenta la data e l'ora locali dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
      <returns>Data e ora locali dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</returns>
    </member>
    <member name="F:System.DateTimeOffset.MaxValue">
      <summary>Rappresenta il valore massimo possibile di <see cref="T:System.DateTimeOffset" />.Questo campo è di sola lettura.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="F:System.DateTime.MaxValue" /> non rientra nell'intervallo del calendario predefinito delle impostazioni cultura correnti o specificate.</exception>
    </member>
    <member name="P:System.DateTimeOffset.Millisecond">
      <summary>Ottiene il componente relativo ai millisecondi dell'ora rappresentata dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
      <returns>Componente relativo ai millisecondi dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, espresso come numero intero compreso tra 0 e 999.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Minute">
      <summary>Ottiene il componente relativo ai minuti dell'ora rappresentata dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
      <returns>Componente relativo ai minuti dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, espresso come numero intero compreso tra 0 e 59.</returns>
    </member>
    <member name="F:System.DateTimeOffset.MinValue">
      <summary>Rappresenta il valore <see cref="T:System.DateTimeOffset" /> minimo possibile.Questo campo è di sola lettura.</summary>
    </member>
    <member name="P:System.DateTimeOffset.Month">
      <summary>Ottiene il componente relativo al mese della data rappresentata dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
      <returns>Componente relativo al mese dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, espresso come numero intero compreso tra 1 e 12.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Now">
      <summary>Ottiene un oggetto <see cref="T:System.DateTimeOffset" /> impostato sulla data e sull'ora correnti del computer, con l'offset impostato sull'offset dell'ora locale rispetto all'ora UTC (Coordinated Universal Time).</summary>
      <returns>Oggetto <see cref="T:System.DateTimeOffset" /> in cui la data e l'ora locali corrispondono all'ora locale corrente e per il quale l'offset è l'offset del fuso orario locale rispetto all'ora UTC (Coordinated Universal Time).</returns>
    </member>
    <member name="P:System.DateTimeOffset.Offset">
      <summary>Ottiene l'offset dell'ora rispetto all'ora UTC (Coordinated Universal Time). </summary>
      <returns>Differenza tra il valore dell'ora dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente e l'ora UTC (Coordinated Universal Time).</returns>
    </member>
    <member name="M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)">
      <summary>Aggiunge un intervallo di tempo specificato a un oggetto <see cref="T:System.DateTimeOffset" /> che ha una data e un'ora specificate e crea un oggetto <see cref="T:System.DateTimeOffset" /> con una data e ora nuove.</summary>
      <returns>Oggetto il cui valore è la somma dei valori <paramref name="dateTimeTz" /> e <paramref name="timeSpan" />.</returns>
      <param name="dateTimeOffset">Oggetto a cui aggiungere l'intervallo di tempo.</param>
      <param name="timeSpan">Intervallo di tempo da aggiungere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.-oppure- Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Determina se due oggetti <see cref="T:System.DateTimeOffset" /> specificati rappresentano la stessa data e ora.</summary>
      <returns>true se entrambi gli oggetti <see cref="T:System.DateTimeOffset" /> presentano lo stesso valore <see cref="P:System.DateTimeOffset.UtcDateTime" />; in caso contrario, false.</returns>
      <param name="left">Primo oggetto da confrontare.</param>
      <param name="right">Secondo oggetto da confrontare.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Determina se un oggetto <see cref="T:System.DateTimeOffset" /> specificato è maggiore (o successivo) rispetto a un secondo oggetto <see cref="T:System.DateTimeOffset" /> specificato.</summary>
      <returns>true se il valore <see cref="P:System.DateTimeOffset.UtcDateTime" /> dell'operando <paramref name="left" /> è successivo rispetto al valore <see cref="P:System.DateTimeOffset.UtcDateTime" /> dell'operando <paramref name="right" />; in caso contrario, false.</returns>
      <param name="left">Primo oggetto da confrontare.</param>
      <param name="right">Secondo oggetto da confrontare.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Determina se un oggetto <see cref="T:System.DateTimeOffset" /> specificato è maggiore di oppure uguale a un secondo oggetto <see cref="T:System.DateTimeOffset" /> specificato.</summary>
      <returns>true se il valore <see cref="P:System.DateTimeOffset.UtcDateTime" /> dell'operando <paramref name="left" /> è uguale o successivo rispetto al valore <see cref="P:System.DateTimeOffset.UtcDateTime" /> dell'operando <paramref name="right" />; in caso contrario, false.</returns>
      <param name="left">Primo oggetto da confrontare.</param>
      <param name="right">Secondo oggetto da confrontare.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset">
      <summary>Definisce una conversione implicita di un oggetto <see cref="T:System.DateTime" /> in un oggetto <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Oggetto convertito.</returns>
      <param name="dateTime">Oggetto da convertire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">La data e l'ora UTC (Coordinated Universal Time) risultanti dall'applicazione dell'offset sono precedenti rispetto a <see cref="F:System.DateTimeOffset.MinValue" />.-oppure-La data e l'ora UTC risultanti dall'applicazione dell'offset sono successive rispetto a <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Determina se due oggetti <see cref="T:System.DateTimeOffset" /> specificati si riferiscono a date e ore diverse.</summary>
      <returns>true se gli operandi <paramref name="left" /> e <paramref name="right" /> non presentano lo stesso valore <see cref="P:System.DateTimeOffset.UtcDateTime" />; in caso contrario, false.</returns>
      <param name="left">Primo oggetto da confrontare.</param>
      <param name="right">Secondo oggetto da confrontare.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Determina se un oggetto <see cref="T:System.DateTimeOffset" /> specificato è minore di un secondo oggetto <see cref="T:System.DateTimeOffset" /> specificato.</summary>
      <returns>true se il valore <see cref="P:System.DateTimeOffset.UtcDateTime" /> di <paramref name="left" /> è precedente rispetto al valore <see cref="P:System.DateTimeOffset.UtcDateTime" /> di <paramref name="right" />; in caso contrario, false.</returns>
      <param name="left">Primo oggetto da confrontare.</param>
      <param name="right">Secondo oggetto da confrontare.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Determina se un oggetto <see cref="T:System.DateTimeOffset" /> specificato è minore di un secondo oggetto <see cref="T:System.DateTimeOffset" /> specificato.</summary>
      <returns>true se il valore <see cref="P:System.DateTimeOffset.UtcDateTime" /> di <paramref name="left" /> è precedente rispetto al valore <see cref="P:System.DateTimeOffset.UtcDateTime" /> di <paramref name="right" />; in caso contrario, false.</returns>
      <param name="left">Primo oggetto da confrontare.</param>
      <param name="right">Secondo oggetto da confrontare.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Sottrae uno oggetto <see cref="T:System.DateTimeOffset" /> da un altro oggetto e genera un intervallo di tempo.</summary>
      <returns>Oggetto che rappresenta la differenza tra <paramref name="left" /> e <paramref name="right" />.</returns>
      <param name="left">Minuendo.   </param>
      <param name="right">Sottraendo.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)">
      <summary>Sottrae un determinato intervallo di tempo da una data e un'ora specificate, generando una data e un'ora nuove.</summary>
      <returns>Oggetto uguale al valore di <paramref name="dateTimeOffset" /> meno <paramref name="timeSpan" />.</returns>
      <param name="dateTimeOffset">Oggetto data e ora da cui sottrarre un valore.</param>
      <param name="timeSpan">Intervallo di tempo da sottrarre.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" /> o maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Parse(System.String)">
      <summary>Converte la rappresentazione specificata in forma di stringa di una data, di un'ora e di un offset nel relativo oggetto <see cref="T:System.DateTimeOffset" /> equivalente.</summary>
      <returns>Oggetto equivalente alla data e all'ora contenute in <paramref name="input" />.</returns>
      <param name="input">Stringa contenente una data e un'ora da convertire.</param>
      <exception cref="T:System.ArgumentException">L'offset è maggiore di 14 ore o minore di -14 ore.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non contiene una rappresentazione in forma di stringa valida di una data e di un'ora.-oppure-<paramref name="input" /> contiene la rappresentazione in forma di stringa di un valore di offset senza una data o un'ora.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider)">
      <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nel relativo <see cref="T:System.DateTimeOffset" /> equivalente usando le informazioni sul formato relative alle impostazioni cultura specificate.</summary>
      <returns>Oggetto equivalente alla data e all'ora contenute in <paramref name="input" />, come specificato da <paramref name="formatProvider" />.</returns>
      <param name="input">Stringa contenente una data e un'ora da convertire.   </param>
      <param name="formatProvider">Oggetto che fornisce informazioni sul formato specifiche delle impostazioni cultura relative a <paramref name="input" />.</param>
      <exception cref="T:System.ArgumentException">L'offset è maggiore di 14 ore o minore di -14 ore.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non contiene una rappresentazione in forma di stringa valida di una data e di un'ora.-oppure-<paramref name="input" /> contiene la rappresentazione in forma di stringa di un valore di offset senza una data o un'ora.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nell'oggetto <see cref="T:System.DateTimeOffset" /> equivalente usando le informazioni sul formato relative alle impostazioni cultura e lo stile di formattazione specificati.</summary>
      <returns>Oggetto equivalente alla data e all'ora contenute in <paramref name="input" /> come specificato da <paramref name="formatProvider" /> e <paramref name="styles" />.</returns>
      <param name="input">Stringa contenente una data e un'ora da convertire.   </param>
      <param name="formatProvider">Oggetto che fornisce informazioni sul formato specifiche delle impostazioni cultura relative a <paramref name="input" />.</param>
      <param name="styles">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="input" />.Un valore tipico da specificare è <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentException">L'offset è maggiore di 14 ore o minore di -14 ore.-oppure-<paramref name="styles" /> non è un valore di <see cref="T:System.Globalization.DateTimeStyles" /> valido.-oppure-<paramref name="styles" /> include un valore <see cref="T:System.Globalization.DateTimeStyles" /> non supportato.-oppure-<paramref name="styles" /> include valori <see cref="T:System.Globalization.DateTimeStyles" /> che non possono essere utilizzati insieme.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non contiene una rappresentazione in forma di stringa valida di una data e di un'ora.-oppure-<paramref name="input" /> contiene la rappresentazione in forma di stringa di un valore di offset senza una data o un'ora.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)">
      <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nel relativo oggetto <see cref="T:System.DateTimeOffset" /> equivalente usando il formato specificato e le informazioni sul formato relative alle impostazioni cultura specificate.Il formato della rappresentazione di stringa deve corrispondere esattamente al formato specificato.</summary>
      <returns>Oggetto equivalente alla data e all'ora contenute in <paramref name="input" /> come specificato da <paramref name="format" /> e <paramref name="formatProvider" />.</returns>
      <param name="input">Stringa contenente una data e un'ora da convertire.</param>
      <param name="format">Identificatore di formato che definisce il formato previsto di <paramref name="input" />.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="input" />.</param>
      <exception cref="T:System.ArgumentException">L'offset è maggiore di 14 ore o minore di -14 ore.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="format" /> è null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> è una stringa vuota ("").-oppure-<paramref name="input" /> non contiene una rappresentazione in forma di stringa valida di una data e di un'ora.-oppure-<paramref name="format" /> è una stringa vuota.-oppure-Il componente relativo alle ore e l'identificatore di AM/PM in <paramref name="input" /> non concordano.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nell'oggetto <see cref="T:System.DateTimeOffset" /> equivalente usando il formato, le informazioni sul formato specifiche delle impostazioni cultura e lo stile specificati.Il formato della rappresentazione di stringa deve corrispondere esattamente al formato specificato.</summary>
      <returns>Oggetto equivalente alla data e all'ora contenute nel parametro <paramref name="input" />, come specificato dai parametri <paramref name="format" />, <paramref name="formatProvider" /> e <paramref name="styles" />.</returns>
      <param name="input">Stringa contenente una data e un'ora da convertire.</param>
      <param name="format">Identificatore di formato che definisce il formato previsto di <paramref name="input" />.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="input" />.</param>
      <param name="styles">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="input" />.</param>
      <exception cref="T:System.ArgumentException">L'offset è maggiore di 14 ore o minore di -14 ore.-oppure-Il parametro <paramref name="styles" /> include un valore non supportato.-oppure-Il parametro <paramref name="styles" /> contiene valori <see cref="T:System.Globalization.DateTimeStyles" /> che non possono essere utilizzati insieme.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="format" /> è null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> è una stringa vuota ("").-oppure-<paramref name="input" /> non contiene una rappresentazione in forma di stringa valida di una data e di un'ora.-oppure-<paramref name="format" /> è una stringa vuota.-oppure-Il componente relativo alle ore e l'identificatore di AM/PM in <paramref name="input" /> non concordano. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Converte la rappresentazione di stringa specificata di una data e di un'ora nel relativo oggetto <see cref="T:System.DateTimeOffset" /> equivalente usando i formati, le informazioni sul formato specifiche delle impostazioni cultura e lo stile specificati.Il formato della rappresentazione di stringa deve corrispondere esattamente a uno dei formati specificati.</summary>
      <returns>Oggetto equivalente alla data e all'ora contenute nel parametro <paramref name="input" />, come specificato dai parametri <paramref name="formats" />, <paramref name="formatProvider" /> e <paramref name="styles" />.</returns>
      <param name="input">Stringa contenente una data e un'ora da convertire.</param>
      <param name="formats">Matrice di identificatori di formato che definiscono i formati previsti di <paramref name="input" />.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="input" />.</param>
      <param name="styles">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="input" />.</param>
      <exception cref="T:System.ArgumentException">L'offset è maggiore di 14 ore o minore di -14 ore.-oppure-Il parametro <paramref name="styles" /> include un valore non supportato.-oppure-Il parametro <paramref name="styles" /> contiene valori <see cref="T:System.Globalization.DateTimeStyles" /> che non possono essere utilizzati insieme.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> è una stringa vuota ("").-oppure-<paramref name="input" /> non contiene una rappresentazione in forma di stringa valida di una data e di un'ora.-oppure-Nessun elemento di <paramref name="formats" /> contiene un identificatore di formato valido.-oppure-Il componente relativo alle ore e l'identificatore di AM/PM in <paramref name="input" /> non concordano. </exception>
    </member>
    <member name="P:System.DateTimeOffset.Second">
      <summary>Ottiene il componente relativo ai secondi dell'ora rappresentata dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
      <returns>Componente relativo ai secondi dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, espresso come numero intero compreso tra 0 e 59.</returns>
    </member>
    <member name="M:System.DateTimeOffset.Subtract(System.DateTimeOffset)">
      <summary>Sottrae un valore <see cref="T:System.DateTimeOffset" /> che rappresenta una data e un'ora specifiche dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
      <returns>Oggetto che specifica l'intervallo tra i due oggetti <see cref="T:System.DateTimeOffset" />.</returns>
      <param name="value">Oggetto che rappresenta il valore da sottrarre. </param>
    </member>
    <member name="M:System.DateTimeOffset.Subtract(System.TimeSpan)">
      <summary>Sottrae un intervallo di tempo specificato dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
      <returns>Oggetto che equivale alla data e all'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente, meno l'intervallo di tempo rappresentato da <paramref name="value" />.</returns>
      <param name="value">Intervallo di tempo da sottrarre.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.-oppure- Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta il valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente con un altro oggetto dello stesso tipo.</summary>
      <returns>Intero con segno a 32-bit che indica se l'oggetto <see cref="T:System.DateTimeOffset" /> corrente è minore di, uguale a o maggiore di <paramref name="obj" />.I valori restituiti del metodo vengono interpretati nel modo indicato di seguito:Valore restituitoDescrizioneMinore di zeroL‎'oggetto <see cref="T:System.DateTimeOffset" /> corrente è minore di (precedente a) <paramref name="obj" />.ZeroL'oggetto <see cref="T:System.DateTimeOffset" /> corrente è uguale a (stessa data e ora di) <paramref name="obj" />.Maggiore di zeroL‎'oggetto <see cref="T:System.DateTimeOffset" /> corrente è maggiore di (successivo a) <paramref name="obj" />.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</param>
    </member>
    <member name="P:System.DateTimeOffset.Ticks">
      <summary>Ottiene il numero di tick che rappresentano la data e l'ora dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente nell'ora dell'orologio.</summary>
      <returns>Numero di tick nell'ora dell'orologio dell'oggetto <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="P:System.DateTimeOffset.TimeOfDay">
      <summary>Ottiene l'ora del giorno per l'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
      <returns>Intervallo di tempo della data corrente trascorso a partire da mezzanotte.</returns>
    </member>
    <member name="M:System.DateTimeOffset.ToFileTime">
      <summary>Converte il valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente in un'ora di un file di Windows.</summary>
      <returns>Valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente espresso come un'ora di un file di Windows.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">L'ora del file risultante rappresenterebbe una data e un'ora precedenti rispetto alla mezzanotte del 1 gennaio 1601 C.E.UTC (Coordinated Universal Time).</exception>
    </member>
    <member name="M:System.DateTimeOffset.ToLocalTime">
      <summary>Converte l'oggetto <see cref="T:System.DateTimeOffset" /> corrente in un oggetto <see cref="T:System.DateTimeOffset" /> che rappresenta l'ora locale.</summary>
      <returns>Oggetto che rappresenta la data e l'ora dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente convertite nell'ora locale.</returns>
    </member>
    <member name="M:System.DateTimeOffset.ToOffset(System.TimeSpan)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente nella data e nell'ora specificate da un valore di offset.</summary>
      <returns>Oggetto uguale all'oggetto <see cref="T:System.DateTimeOffset" /> originale (vale a dire i cui metodi <see cref="M:System.DateTimeOffset.ToUniversalTime" /> restituiscono date e ore identiche) ma la cui proprietà <see cref="P:System.DateTimeOffset.Offset" /> è impostata su <paramref name="offset" />.</returns>
      <param name="offset">Offset nel quale convertire il valore <see cref="T:System.DateTimeOffset" />.   </param>
      <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.DateTimeOffset" /> risultante ha un valore <see cref="P:System.DateTimeOffset.DateTime" /> precedente rispetto a <see cref="F:System.DateTimeOffset.MinValue" />.-oppure-L'oggetto <see cref="T:System.DateTimeOffset" /> risultante ha un valore <see cref="P:System.DateTimeOffset.DateTime" /> successivo rispetto a <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> è minore di -14 ore.-oppure-<paramref name="offset" /> è maggiore di 14 ore.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString">
      <summary>Converte il valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa di un oggetto <see cref="T:System.DateTimeOffset" /> che include l'offset aggiunto alla fine della stringa.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La data e l'ora sono esterni all'intervallo di date supportato dal calendario utilizzato dalle impostazioni cultura correnti. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString(System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente nella rappresentazione di stringa equivalente, usando le informazioni di formattazione specifiche delle impostazioni cultura definite.</summary>
      <returns>Rappresentazione di stringa del valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, come specificato da <paramref name="formatProvider" />.</returns>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La data e l'ora non sono comprese nell'intervallo di date supportato dal calendario utilizzato da <paramref name="formatProvider" />. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString(System.String)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente nella rappresentazione di stringa equivalente, usando il formato specificato.</summary>
      <returns>Rappresentazione di stringa del valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, come specificato da <paramref name="format" />.</returns>
      <param name="format">Stringa di formato.</param>
      <exception cref="T:System.FormatException">La lunghezza di <paramref name="format" /> è uno e non si tratta di uno dei caratteri dell'indicatore di formato standard definiti per <see cref="T:System.Globalization.DateTimeFormatInfo" />. -oppure-<paramref name="format" /> non contiene un criterio di formato personalizzato valido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La data e l'ora sono esterni all'intervallo di date supportato dal calendario utilizzato dalle impostazioni cultura correnti. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente nella rappresentazione di stringa equivalente, usando il formato specificato e le informazioni sul formato specifiche delle impostazioni cultura indicate.</summary>
      <returns>Rappresentazione di stringa del valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, come specificato da <paramref name="format" /> e <paramref name="provider" />.</returns>
      <param name="format">Stringa di formato.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <exception cref="T:System.FormatException">La lunghezza di <paramref name="format" /> è uno e non si tratta di uno dei caratteri dell'indicatore di formato standard definiti per <see cref="T:System.Globalization.DateTimeFormatInfo" />.-oppure-<paramref name="format" /> non contiene un criterio di formato personalizzato valido. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La data e l'ora non sono comprese nell'intervallo di date supportato dal calendario utilizzato da <paramref name="formatProvider" />. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ToUniversalTime">
      <summary>Converte l'oggetto <see cref="T:System.DateTimeOffset" /> corrente in un valore <see cref="T:System.DateTimeOffset" /> che rappresenta l'ora UTC (Coordinated Universal Time).</summary>
      <returns>Oggetto che rappresenta la data e l'ora dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente convertite nell'ora UTC (Coordinated Universal Time).</returns>
    </member>
    <member name="M:System.DateTimeOffset.ToUnixTimeMilliseconds">
      <summary>Restituisce il numero di millisecondi trascorsi da 1970-01-01T00:00:00Z. </summary>
      <returns>Numero di millisecondi trascorsi da 1970-01-01T00:00:00Z. </returns>
    </member>
    <member name="M:System.DateTimeOffset.ToUnixTimeSeconds">
      <summary>Restituisce il numero di secondi trascorsi da 1970-01-01T00:00:00Z. </summary>
      <returns>Numero di secondi trascorsi da 1970-01-01T00:00:00Z. </returns>
    </member>
    <member name="M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)">
      <summary>Prova a convertire una rappresentazione di stringa di una data e di un'ora nel relativo oggetto <see cref="T:System.DateTimeOffset" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <returns>true se il parametro <paramref name="input" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="input">Stringa contenente una data e un'ora da convertire.</param>
      <param name="result">Quando questo metodo viene restituito, contiene l'oggetto <see cref="T:System.DateTimeOffset" /> equivalente alla data e all'ora di <paramref name="input" /> se la conversione ha esito positivo oppure <see cref="F:System.DateTimeOffset.MinValue" />, in caso contrario.La conversione ha esito negativo se il parametro <paramref name="input" /> è null o non contiene una rappresentazione di data e ora in formato di stringa valida.Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
      <summary>Prova a convertire una rappresentazione di stringa di una data e di un'ora nel relativo oggetto <see cref="T:System.DateTimeOffset" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <returns>true se il parametro <paramref name="input" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="input">Stringa contenente una data e un'ora da convertire.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relative a <paramref name="input" />.</param>
      <param name="styles">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="input" />. </param>
      <param name="result">Quando il metodo restituisce il risultato, questo contiene il valore <see cref="T:System.DateTimeOffset" /> equivalente alla data e all'ora del parametro <paramref name="input" /> se la conversione ha esito positivo oppure <see cref="F:System.DateTimeOffset.MinValue" />, in caso contrario.La conversione ha esito negativo se il parametro <paramref name="input" /> è null o non contiene una rappresentazione di data e ora in formato di stringa valida.Questo parametro viene passato non inizializzato.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> include un valore <see cref="T:System.Globalization.DateTimeStyles" /> non definito.-oppure-<see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> non è supportato.-oppure-<paramref name="styles" /> include valori <see cref="T:System.Globalization.DateTimeStyles" /> che si escludono a vicenda.</exception>
    </member>
    <member name="M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
      <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nell'oggetto <see cref="T:System.DateTimeOffset" /> equivalente usando il formato, le informazioni sul formato specifiche delle impostazioni cultura e lo stile specificati.Il formato della rappresentazione di stringa deve corrispondere esattamente al formato specificato.</summary>
      <returns>true se il parametro <paramref name="input" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="input">Stringa contenente una data e un'ora da convertire.</param>
      <param name="format">Identificatore di formato che definisce il formato richiesto di <paramref name="input" />.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="input" />.</param>
      <param name="styles">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di input.Un valore tipico da specificare è None.</param>
      <param name="result">Quando questo metodo viene restituito, contiene l'oggetto <see cref="T:System.DateTimeOffset" /> equivalente alla data e all'ora di <paramref name="input" /> se la conversione ha esito positivo oppure <see cref="F:System.DateTimeOffset.MinValue" />, in caso contrario.La conversione ha esito negativo se il parametro <paramref name="input" /> è null o non contiene una rappresentazione di data e ora in formato di stringa valida nel formato previsto definito da <paramref name="format" /> e <paramref name="provider" />.Questo parametro viene passato non inizializzato.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> include un valore <see cref="T:System.Globalization.DateTimeStyles" /> non definito.-oppure-<see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> non è supportato.-oppure-<paramref name="styles" /> include valori <see cref="T:System.Globalization.DateTimeStyles" /> che si escludono a vicenda.</exception>
    </member>
    <member name="M:System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
      <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nell'oggetto <see cref="T:System.DateTimeOffset" /> equivalente usando la matrice di formati, le informazioni sul formato specifiche delle impostazioni cultura e lo stile specificati.Il formato della rappresentazione di stringa deve corrispondere esattamente a uno dei formati specificati.</summary>
      <returns>true se il parametro <paramref name="input" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="input">Stringa contenente una data e un'ora da convertire.</param>
      <param name="formats">Matrice che definisce i formati previsti di <paramref name="input" />.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="input" />.</param>
      <param name="styles">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di input.Un valore tipico da specificare è None.</param>
      <param name="result">Quando questo metodo viene restituito, contiene l'oggetto <see cref="T:System.DateTimeOffset" /> equivalente alla data e all'ora di <paramref name="input" /> se la conversione ha esito positivo oppure <see cref="F:System.DateTimeOffset.MinValue" />, in caso contrario.La conversione non riesce se <paramref name="input" /> non contiene una rappresentazione di data e ora in formato di stringa valida nel formato previsto oppure non contiene il formato di data e ora previsto definito da <paramref name="format" /> oppure se <paramref name="formats" /> è null.Questo parametro viene passato non inizializzato.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> include un valore <see cref="T:System.Globalization.DateTimeStyles" /> non definito.-oppure-<see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> non è supportato.-oppure-<paramref name="styles" /> include valori <see cref="T:System.Globalization.DateTimeStyles" /> che si escludono a vicenda.</exception>
    </member>
    <member name="P:System.DateTimeOffset.UtcDateTime">
      <summary>Ottiene un valore <see cref="T:System.DateTime" /> che rappresenta la data e l'ora UTC (Coordinated Universal Time) dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
      <returns>Data e ora UTC (Coordinated Universal Time) dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</returns>
    </member>
    <member name="P:System.DateTimeOffset.UtcNow">
      <summary>Ottiene un oggetto <see cref="T:System.DateTimeOffset" /> in cui la data e l'ora sono impostate sulla data e sull'ora UTC (Coordinated Universal Time) correnti e il cui offset è <see cref="F:System.TimeSpan.Zero" />.</summary>
      <returns>Oggetto la cui data e ora corrispondono all'ora UTC (Coordinated Universal Time) corrente e il cui offset è <see cref="F:System.TimeSpan.Zero" />.</returns>
    </member>
    <member name="P:System.DateTimeOffset.UtcTicks">
      <summary>Ottiene il numero di tick che rappresenta la data e l'ora dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente nell'ora UTC (Coordinated Universal Time).</summary>
      <returns>Numero di tick nell'ora UTC (Coordinated Universal Time) dell'oggetto <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Year">
      <summary>Ottiene il componente relativo all'anno della data rappresentata dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
      <returns>Componente relativo all'anno dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, espresso come numero intero compreso tra 0 e 9999.</returns>
    </member>
    <member name="T:System.DayOfWeek">
      <summary>Specifica il giorno della settimana.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.DayOfWeek.Friday">
      <summary>Indica il venerdì.</summary>
    </member>
    <member name="F:System.DayOfWeek.Monday">
      <summary>Indica il lunedì.</summary>
    </member>
    <member name="F:System.DayOfWeek.Saturday">
      <summary>Indica il sabato.</summary>
    </member>
    <member name="F:System.DayOfWeek.Sunday">
      <summary>Indica la domenica.</summary>
    </member>
    <member name="F:System.DayOfWeek.Thursday">
      <summary>Indica il giovedì.</summary>
    </member>
    <member name="F:System.DayOfWeek.Tuesday">
      <summary>Indica il martedì.</summary>
    </member>
    <member name="F:System.DayOfWeek.Wednesday">
      <summary>Indica il mercoledì.</summary>
    </member>
    <member name="T:System.Decimal">
      <summary>Rappresenta un numero decimale.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.#ctor(System.Double)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Decimal" /> sul valore del numero a virgola mobile a precisione doppia specificato.</summary>
      <param name="value">Valore da rappresentare come <see cref="T:System.Decimal" />. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.-or- <paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Decimal" /> sul valore dell'intero con segno a 32 bit specificato.</summary>
      <param name="value">Valore da rappresentare come <see cref="T:System.Decimal" />. </param>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Decimal" /> dai parametri che specificano le parti costitutive dell'istanza.</summary>
      <param name="lo">32 bit bassi di un intero a 96 bit. </param>
      <param name="mid">32 bit medi di un intero a 96 bit. </param>
      <param name="hi">32 bit alti di un intero a 96 bit. </param>
      <param name="isNegative">true per indicare un numero negativo; false per indicare un numero positivo. </param>
      <param name="scale">Potenza di 10 compresa tra 0 e 28. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scale" /> is greater than 28. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32[])">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Decimal" /> su un valore decimale rappresentato in formato binario e contenuto nella matrice specificata.</summary>
      <param name="bits">Matrice di interi con segno a 32 bit che contiene una rappresentazione di un valore decimale. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bits" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The length of the <paramref name="bits" /> is not 4.-or- The representation of the decimal value in <paramref name="bits" /> is not valid. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int64)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Decimal" /> sul valore dell'intero con segno a 64 bit specificato.</summary>
      <param name="value">Valore da rappresentare come <see cref="T:System.Decimal" />. </param>
    </member>
    <member name="M:System.Decimal.#ctor(System.Single)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Decimal" /> sul valore del numero a virgola mobile a precisione singola specificato.</summary>
      <param name="value">Valore da rappresentare come <see cref="T:System.Decimal" />. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.-or- <paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.UInt32)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Decimal" /> sul valore dell'intero senza segno a 32 bit specificato.</summary>
      <param name="value">Valore da rappresentare come <see cref="T:System.Decimal" />. </param>
    </member>
    <member name="M:System.Decimal.#ctor(System.UInt64)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Decimal" /> sul valore dell'intero senza segno a 64 bit specificato.</summary>
      <param name="value">Valore da rappresentare come <see cref="T:System.Decimal" />. </param>
    </member>
    <member name="M:System.Decimal.Add(System.Decimal,System.Decimal)">
      <summary>Aggiunge due valori <see cref="T:System.Decimal" /> specificati.</summary>
      <returns>Somma di <paramref name="d1" /> e <paramref name="d2" />.</returns>
      <param name="d1">Primo valore da sommare. </param>
      <param name="d2">Secondo valore da sommare. </param>
      <exception cref="T:System.OverflowException">The sum of <paramref name="d1" /> and <paramref name="d2" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Ceiling(System.Decimal)">
      <summary>Restituisce il valore integrale minimo maggiore o uguale al numero decimale specificato.</summary>
      <returns>Valore intero minimo maggiore o uguale al parametro <paramref name="d" />.Si noti che questo metodo restituisce <see cref="T:System.Decimal" /> anziché un tipo integrale.</returns>
      <param name="d">Numero decimale. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
      <summary>Confronta due valori <see cref="T:System.Decimal" /> specificati.</summary>
      <returns>Numero con segno che indica i valori relativi di <paramref name="d1" /> e <paramref name="d2" />.Return value Meaning Less than zero <paramref name="d1" /> is less than <paramref name="d2" />. Zero <paramref name="d1" /> and <paramref name="d2" /> are equal. Greater than zero <paramref name="d1" /> is greater than <paramref name="d2" />. </returns>
      <param name="d1">Primo valore da confrontare. </param>
      <param name="d2">Secondo valore da confrontare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.CompareTo(System.Decimal)">
      <summary>Confronta l'istanza con un oggetto <see cref="T:System.Decimal" /> specificato e restituisce un confronto dei valori relativi.</summary>
      <returns>Numero con segno che indica i valori relativi di questa istanza e di <paramref name="value" />.Return value Meaning Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Oggetto da confrontare con questa istanza.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
      <summary>Divide due valori <see cref="T:System.Decimal" /> specificati.</summary>
      <returns>Risultato della divisione di <paramref name="d1" /> in base a <paramref name="d2" />.</returns>
      <param name="d1">Dividendo. </param>
      <param name="d2">Divisore. </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value (that is, the quotient) is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Equals(System.Decimal)">
      <summary>Restituisce un valore che indica se l'istanza e un oggetto <see cref="T:System.Decimal" /> specificato rappresentano lo stesso valore.</summary>
      <returns>true se <paramref name="value" /> è uguale all'istanza; in caso contrario, false.</returns>
      <param name="value">Oggetto da confrontare con questa istanza.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.Equals(System.Decimal,System.Decimal)">
      <summary>Restituisce un valore che indica se due istanze di <see cref="T:System.Decimal" /> rappresentano lo stesso valore.</summary>
      <returns>true se <paramref name="d1" /> e <paramref name="d2" /> sono uguali; in caso contrario, false.</returns>
      <param name="d1">Primo valore da confrontare. </param>
      <param name="d2">Secondo valore da confrontare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Equals(System.Object)">
      <summary>Restituisce un valore che indica se due istanze di <see cref="T:System.Object" /> rappresentano lo stesso tipo e valore.</summary>
      <returns>true se <paramref name="value" /> è un oggetto <see cref="T:System.Decimal" /> ed è uguale all'istanza; in caso contrario, false.</returns>
      <param name="value">Oggetto da confrontare con questa istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.Floor(System.Decimal)">
      <summary>Arrotonda il numero <see cref="T:System.Decimal" /> specificato all'intero più vicino che tende a un numero infinito negativo.</summary>
      <returns>Se <paramref name="d" /> ha una parte frazionaria, il numero intero successivo <see cref="T:System.Decimal" /> che tende a un numero infinito negativo minore di <paramref name="d" />.-oppure- Se <paramref name="d" /> non ha una parte frazionaria, <paramref name="d" /> verrà restituito invariato.Si noti che il metodo restituisce un valore intero del tipo <see cref="T:System.Decimal" />.</returns>
      <param name="d">Il valore da arrotondare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.GetBits(System.Decimal)">
      <summary>Converte il valore dell'istanza specificata di <see cref="T:System.Decimal" /> nella rappresentazione binaria equivalente.</summary>
      <returns>Matrice di intero con segno a 32 bit con quattro elementi che contengono la rappresentazione binaria di <paramref name="d" />.</returns>
      <param name="d">Valore da convertire. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Decimal.MaxValue">
      <summary>Rappresenta il valore massimo possibile di <see cref="T:System.Decimal" />.Questo campo è costante e di sola lettura.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.MinusOne">
      <summary>Rappresenta il numero uno negativo (-1).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.MinValue">
      <summary>Rappresenta il valore più piccolo possibile di <see cref="T:System.Decimal" />.Questo campo è costante e di sola lettura.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
      <summary>Moltiplica due valori <see cref="T:System.Decimal" /> specificati.</summary>
      <returns>Risultato della moltiplicazione tra <paramref name="d1" /> e <paramref name="d2" />.</returns>
      <param name="d1">Moltiplicando. </param>
      <param name="d2">Moltiplicatore. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Negate(System.Decimal)">
      <summary>Restituisce il risultato della moltiplicazione del valore <see cref="T:System.Decimal" /> specificato per il valore uno negativo.</summary>
      <returns>Numero decimale con il valore di <paramref name="d" />, ma di segno opposto.-oppure- Zero, se <paramref name="d" /> è zero.</returns>
      <param name="d">Valore da negare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.One">
      <summary>Rappresenta il numero uno (1).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
      <summary>Aggiunge due valori <see cref="T:System.Decimal" /> specificati.</summary>
      <returns>Risultato della somma di <paramref name="d1" /> e <paramref name="d2" />.</returns>
      <param name="d1">Primo valore da sommare. </param>
      <param name="d2">Secondo valore da sommare. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Decrement(System.Decimal)">
      <summary>Decrementa l'operando <see cref="T:System.Decimal" /> di uno.</summary>
      <returns>Valore di <paramref name="d" /> decrementato di 1.</returns>
      <param name="d">Valore da decrementare. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
      <summary>Divide due valori <see cref="T:System.Decimal" /> specificati.</summary>
      <returns>Risultato della divisione di <paramref name="d1" /> in base a <paramref name="d2" />.</returns>
      <param name="d1">Dividendo. </param>
      <param name="d2">Divisore. </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
      <summary>Restituisce un valore che indica se due valori <see cref="T:System.Decimal" /> sono uguali.</summary>
      <returns>true se <paramref name="d1" /> e <paramref name="d2" /> sono uguali; in caso contrario, false.</returns>
      <param name="d1">Primo valore da confrontare. </param>
      <param name="d2">Secondo valore da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Decimal" /> in un intero con segno a 8 bit.</summary>
      <returns>Intero con segno a 8 bit che rappresenta l'oggetto <see cref="T:System.Decimal" /> convertito.</returns>
      <param name="value">Valore da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Decimal" /> in un intero con segno a 64 bit.</summary>
      <returns>Intero con segno a 64 bit che rappresenta l'oggetto <see cref="T:System.Decimal" /> convertito.</returns>
      <param name="value">Valore da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
      <summary>Definisce una conversione esplicita di un <see cref="T:System.Decimal" /> in un intero senza segno a 16 bit.</summary>
      <returns>Intero senza segno a 16 bit che rappresenta l'oggetto <see cref="T:System.Decimal" /> convertito.</returns>
      <param name="value">Valore da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
      <summary>Definisce una conversione esplicita di un <see cref="T:System.Decimal" /> in un intero senza segno a 64 bit.</summary>
      <returns>Intero senza segno a 64 bit che rappresenta l'oggetto <see cref="T:System.Decimal" /> convertito.</returns>
      <param name="value">Valore da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
      <summary>Definisce una conversione esplicita di un <see cref="T:System.Decimal" /> in un intero senza segno a 32 bit.</summary>
      <returns>Intero senza segno a 32 bit che rappresenta l'oggetto <see cref="T:System.Decimal" /> convertito.</returns>
      <param name="value">Valore da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is negative or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Decimal" /> in un intero con segno a 32 bit.</summary>
      <returns>Intero con segno a 32 bit che rappresenta l'oggetto <see cref="T:System.Decimal" /> convertito.</returns>
      <param name="value">Valore da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Decimal" /> in un carattere Unicode.</summary>
      <returns>Carattere Unicode che rappresenta l'oggetto <see cref="T:System.Decimal" /> convertito.</returns>
      <param name="value">Valore da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Decimal" /> in un intero senza segno a 8 bit.</summary>
      <returns>Intero senza segno a 8 bit che rappresenta l'oggetto <see cref="T:System.Decimal" /> convertito.</returns>
      <param name="value">Valore da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
      <summary>Definisce una conversione esplicita di un numero a virgola mobile a precisione singola in un oggetto <see cref="T:System.Decimal" />.</summary>
      <returns>Numero a virgola mobile a precisione singola che rappresenta l'oggetto <see cref="T:System.Decimal" /> convertito.</returns>
      <param name="value">Valore da convertire. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Decimal" /> in un intero con segno a 16 bit.</summary>
      <returns>Intero con segno a 16 bit che rappresenta l'oggetto <see cref="T:System.Decimal" /> convertito.</returns>
      <param name="value">Valore da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Decimal" /> in un numero a virgola mobile a precisione doppia in un numero a virgola mobile.</summary>
      <returns>Numero a virgola mobile a precisione doppia che rappresenta l'oggetto <see cref="T:System.Decimal" /> convertito.</returns>
      <param name="value">Valore da convertire. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
      <summary>Definisce una conversione esplicita di un numero a virgola mobile a precisione doppia in un oggetto <see cref="T:System.Decimal" />.</summary>
      <returns>Numero a virgola mobile a precisione doppia convertito.</returns>
      <param name="value">Numero a virgola mobile e con precisione doppia da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.-or- <paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
      <summary>Definisce una conversione esplicita di un numero a virgola mobile a precisione singola in un oggetto <see cref="T:System.Decimal" />.</summary>
      <returns>Numero a virgola mobile a precisione singola da convertito.</returns>
      <param name="value">Numero a virgola mobile e con precisione singola da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.-or- <paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Decimal" /> specificato è maggiore di un altro oggetto <see cref="T:System.Decimal" /> specificato.</summary>
      <returns>true se <paramref name="d1" /> è maggiore di <paramref name="d2" />; in caso contrario, false.</returns>
      <param name="d1">Primo valore da confrontare. </param>
      <param name="d2">Secondo valore da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Decimal" /> specificato è maggiore o uguale a un altro <see cref="T:System.Decimal" /> specificato.</summary>
      <returns>true se <paramref name="d1" /> è maggiore o uguale a <paramref name="d2" />; in caso contrario, false.</returns>
      <param name="d1">Primo valore da confrontare. </param>
      <param name="d2">Secondo valore da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
      <summary>Definisce una conversione esplicita di un intero senza segno a 8 bit in un oggetto <see cref="T:System.Decimal" />.</summary>
      <returns>Intero senza segno a 8 bit convertito.</returns>
      <param name="value">Intero senza segno a 8 bit da convertire. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
      <summary>Definisce una conversione esplicita di un carattere Unicode in un oggetto <see cref="T:System.Decimal" />.</summary>
      <returns>Carattere Unicode convertito.</returns>
      <param name="value">Carattere Unicode da convertire. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
      <summary>Definisce una conversione esplicita di un intero con segno a 16 bit in un valore <see cref="T:System.Decimal" />.</summary>
      <returns>Intero con segno a 16 bit convertito.</returns>
      <param name="value">Intero con segno a 16 bit da convertire. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
      <summary>Definisce una conversione esplicita di un intero con segno a 32 bit in un valore <see cref="T:System.Decimal" />.</summary>
      <returns>Intero con segno a 32 bit convertito.</returns>
      <param name="value">Intero con segno a 32 bit da convertire. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
      <summary>Definisce una conversione esplicita di un intero con segno a 64 bit in un valore <see cref="T:System.Decimal" />.</summary>
      <returns>Intero con segno a 64 bit convertito.</returns>
      <param name="value">Intero con segno a 64 bit da convertire. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
      <summary>Definisce una conversione esplicita di un intero con segno a 8 bit in un oggetto <see cref="T:System.Decimal" />.</summary>
      <returns>Intero con segno a 8 bit convertito.</returns>
      <param name="value">Intero con segno a 8 bit da convertire. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
      <summary>Definisce una conversione esplicita di un intero senza segno a 16 bit in un valore <see cref="T:System.Decimal" />.</summary>
      <returns>Intero senza segno a 16 bit convertito.</returns>
      <param name="value">Intero senza segno a 16 bit da convertire. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
      <summary>Definisce una conversione esplicita di un intero senza segno a 32 bit in un valore <see cref="T:System.Decimal" />.</summary>
      <returns>Intero senza segno a 32 bit convertito.</returns>
      <param name="value">Intero senza segno a 32 bit da convertire. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
      <summary>Definisce una conversione esplicita di un intero senza segno a 64 bit in un valore <see cref="T:System.Decimal" />.</summary>
      <returns>Intero senza segno a 64 bit convertito.</returns>
      <param name="value">Intero senza segno a 64 bit da convertire. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Increment(System.Decimal)">
      <summary>Incrementa l'operando <see cref="T:System.Decimal" /> di 1.</summary>
      <returns>Valore di <paramref name="d" /> incrementato di 1.</returns>
      <param name="d">Valore da incrementare. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
      <summary>Restituisce un valore che indica se due oggetti <see cref="T:System.Decimal" /> hanno valori diversi.</summary>
      <returns>true se <paramref name="d1" /> e <paramref name="d2" /> non sono uguali; in caso contrario, false.</returns>
      <param name="d1">Primo valore da confrontare. </param>
      <param name="d2">Secondo valore da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Decimal" /> specificato è minore di un altro oggetto <see cref="T:System.Decimal" /> specificato.</summary>
      <returns>true se <paramref name="d1" /> è minore di <paramref name="d2" />; in caso contrario, false.</returns>
      <param name="d1">Primo valore da confrontare. </param>
      <param name="d2">Secondo valore da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Decimal" /> specificato è minore o uguale a un altro oggetto <see cref="T:System.Decimal" /> specificato.</summary>
      <returns>true se <paramref name="d1" /> è minore o uguale a <paramref name="d2" />; in caso contrario, false.</returns>
      <param name="d1">Primo valore da confrontare. </param>
      <param name="d2">Secondo valore da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
      <summary>Restituisce il resto della divisione di due valori <see cref="T:System.Decimal" /> specificati.</summary>
      <returns>Resto risultante dalla divisione di <paramref name="d1" /> per <paramref name="d2" />.</returns>
      <param name="d1">Dividendo. </param>
      <param name="d2">Divisore. </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
      <summary>Moltiplica due valori <see cref="T:System.Decimal" /> specificati.</summary>
      <returns>Risultato della moltiplicazione di <paramref name="d1" /> per <paramref name="d2" />.</returns>
      <param name="d1">Primo valore da moltiplicare. </param>
      <param name="d2">Secondo valore da moltiplicare. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
      <summary>Sottrae due valori <see cref="T:System.Decimal" /> specificati.</summary>
      <returns>Risultato della sottrazione di <paramref name="d2" /> da <paramref name="d1" />.</returns>
      <param name="d1">Minuendo. </param>
      <param name="d2">Sottraendo. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_UnaryNegation(System.Decimal)">
      <summary>Rende negativo il valore dell'operando <see cref="T:System.Decimal" /> specificato.</summary>
      <returns>Risultato di <paramref name="d" /> moltiplicato per il valore uno negativo (-1).</returns>
      <param name="d">Valore da negare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_UnaryPlus(System.Decimal)">
      <summary>Restituisce il valore dell'operando <see cref="T:System.Decimal" /> (il segno dell'operando è invariato).</summary>
      <returns>Valore dell'operando, <paramref name="d" />.</returns>
      <param name="d">L'operando da restituire.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String)">
      <summary>Converte la rappresentazione di stringa di un numero nell'oggetto <see cref="T:System.Decimal" /> equivalente.</summary>
      <returns>Equivalente del numero contenuto in <paramref name="s" />.</returns>
      <param name="s">Rappresentazione di stringa del numero da convertire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato nell'oggetto <see cref="T:System.Decimal" /> equivalente.</summary>
      <returns>Il numero <see cref="T:System.Decimal" /> equivalente al numero contenuto in <paramref name="s" /> come specificato da <paramref name="style" />.</returns>
      <param name="s">Rappresentazione di stringa del numero da convertire. </param>
      <param name="style">Combinazione bit per bit di valori <see cref="T:System.Globalization.NumberStyles" /> che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Number" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero nell'oggetto <see cref="T:System.Decimal" /> equivalente usando lo stile specificato e il formato specifico delle impostazioni cultura.</summary>
      <returns>Numero <see cref="T:System.Decimal" /> equivalente al numero contenuto in <paramref name="s" /> specificato da <paramref name="style" /> e <paramref name="provider" />.</returns>
      <param name="s">Rappresentazione di stringa del numero da convertire. </param>
      <param name="style">Combinazione bit per bit di valori <see cref="T:System.Globalization.NumberStyles" /> che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Number" />.</param>
      <param name="provider">Oggetto <see cref="T:System.IFormatProvider" /> che fornisce informazioni specifiche delle impostazioni cultura relative al formato di <paramref name="s" />. </param>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero nell'oggetto equivalente <see cref="T:System.Decimal" /> usando le informazioni di formato specifiche delle impostazioni cultura selezionate.</summary>
      <returns>Il numero <see cref="T:System.Decimal" /> equivalente al numero contenuto in <paramref name="s" /> come specificato da <paramref name="provider" />.</returns>
      <param name="s">Rappresentazione di stringa del numero da convertire. </param>
      <param name="provider">Oggetto <see cref="T:System.IFormatProvider" /> che fornisce informazioni di analisi specifiche delle impostazioni cultura relative a <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
      <summary>Calcola il resto dopo aver diviso due valori <see cref="T:System.Decimal" />.</summary>
      <returns>Resto risultante dalla divisione di <paramref name="d1" /> per <paramref name="d2" />.</returns>
      <param name="d1">Dividendo. </param>
      <param name="d2">Divisore. </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
      <summary>Sottrae il valore <see cref="T:System.Decimal" /> specificato da un altro valore.</summary>
      <returns>Risultato della sottrazione di <paramref name="d2" /> da <paramref name="d1" />.</returns>
      <param name="d1">Minuendo. </param>
      <param name="d2">Sottraendo. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
      <returns>Intero con segno che indica l'ordine relativo dell'istanza e di <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Oggetto da confrontare con l'istanza o null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Decimal" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</summary>
      <returns>true se il valore dell'istanza corrente non è uguale a zero; in caso contrario, false.</returns>
      <param name="provider">Questo parametro viene ignorato. </param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Byte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Nessuno.Questa conversione non è supportata.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Nessuno.Questa conversione non è supportata.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</summary>
      <returns>Valore dell'istanza corrente, invariato.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Double" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int16" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int32" />.</returns>
      <param name="provider">Il parametro viene ignorato.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.SByte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Single" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</summary>
      <returns>Valore dell'istanza corrente, convertito in <paramref name="type" />.</returns>
      <param name="type">Tipo nel quale convertire il valore di questa istanza di <see cref="T:System.Decimal" />. </param>
      <param name="provider">Implementazione <see cref="T:System.IFormatProvider" /> che fornisce informazioni specifiche delle impostazioni cultura sul formato del valore restituito.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null. </exception>
      <exception cref="T:System.InvalidCastException">The requested type conversion is not supported. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt16" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.ToByte(System.Decimal)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.Decimal" /> specificato nell'intero senza segno a 8 bit equivalente.</summary>
      <returns>Intero senza segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <param name="value">Numero decimale da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToDouble(System.Decimal)">
      <summary>Converte il valore del numero <see cref="T:System.Decimal" /> specificato nel numero a virgola mobile a precisione doppia equivalente.</summary>
      <returns>Numero a virgola mobile e con precisione doppia equivalente a <paramref name="d" />.</returns>
      <param name="d">Numero decimale da convertire. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToInt16(System.Decimal)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.Decimal" /> specificato nell'intero con segno a 16 bit equivalente.</summary>
      <returns>Intero con segno a 16 bit equivalente a <paramref name="value" />.</returns>
      <param name="value">Numero decimale da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToInt32(System.Decimal)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.Decimal" /> specificato nell'intero con segno a 32 bit equivalente.</summary>
      <returns>Intero con segno a 32 bit equivalente al valore di <paramref name="d" />.</returns>
      <param name="d">Numero decimale da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToInt64(System.Decimal)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.Decimal" /> specificato nell'intero con segno a 64 bit equivalente.</summary>
      <returns>Intero con segno a 64 bit equivalente al valore di <paramref name="d" />.</returns>
      <param name="d">Numero decimale da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToSByte(System.Decimal)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.Decimal" /> specificato nell'intero con segno a 8 bit equivalente.</summary>
      <returns>Intero con segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <param name="value">Numero decimale da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToSingle(System.Decimal)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.Decimal" /> specificato nel numero a virgola mobile a precisione singola equivalente.</summary>
      <returns>Numero a virgola mobile a precisione singola equivalente al valore di <paramref name="d" />.</returns>
      <param name="d">Numero decimale da convertire. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente.</summary>
      <returns>Stringa che rappresenta il valore di questa istanza.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString(System.IFormatProvider)">
      <summary>Converte il valore numerico di questa istanza nella rappresentazione di stringa equivalente usando le informazioni di formato specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="provider" />.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString(System.String)">
      <summary>Converte il valore numerico di questa istanza nell'equivalente rappresentazione di stringa usando il formato specificato.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="format" />.</returns>
      <param name="format">Stringa di formato numerico standard o personalizzato (vedere la sezione Osservazioni).</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente usando il formato specificato e le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza corrente, in base a quanto specificato da <paramref name="format" /> e <paramref name="provider" />.</returns>
      <param name="format">Stringa di formato numerico (vedere la sezione Osservazioni).</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToUInt16(System.Decimal)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.Decimal" /> specificato nell'intero senza segno a 16 bit equivalente.</summary>
      <returns>Intero senza segno a 16 bit equivalente al valore di <paramref name="value" />.</returns>
      <param name="value">Numero decimale da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToUInt32(System.Decimal)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.Decimal" /> specificato nell'intero senza segno a 32 bit equivalente.</summary>
      <returns>Intero senza segno a 32 bit equivalente al valore di <paramref name="d" />.</returns>
      <param name="d">Numero decimale da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is negative or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToUInt64(System.Decimal)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.Decimal" /> specificato nell'intero senza segno a 64 bit equivalente.</summary>
      <returns>Intero senza segno a 64 bit equivalente al valore di <paramref name="d" />.</returns>
      <param name="d">Numero decimale da convertire. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Truncate(System.Decimal)">
      <summary>Restituisce le cifre integrali dell'oggetto <see cref="T:System.Decimal" /> specificato; qualsiasi cifra frazionaria viene ignorata.</summary>
      <returns>Risultato di <paramref name="d" /> arrotondato verso lo zero, al numero intero più vicino.</returns>
      <param name="d">Il numero decimale da troncare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.TryParse(System.String,System.Decimal@)">
      <summary>Converte la rappresentazione di stringa di un numero nell'oggetto <see cref="T:System.Decimal" /> equivalente.Un valore restituito indica se la conversione è riuscita o meno.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Rappresentazione di stringa del numero da convertire.</param>
      <param name="result">Quando questo metodo restituisce un risultato, contiene il numero <see cref="T:System.Decimal" /> che è equivalente al valore numerico contenuto in <paramref name="s" />, se la conversione è stata eseguita correttamente oppure è uguale a zero se la conversione non è riuscita.La conversione non viene eseguita se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" />, non è un numero in formato valido o rappresenta un numero minore di <see cref="F:System.Decimal.MinValue" /> o maggiore di <see cref="F:System.Decimal.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
      <summary>Converte la rappresentazione di stringa di un numero nell'oggetto <see cref="T:System.Decimal" /> equivalente usando lo stile specificato e il formato specifico delle impostazioni cultura.Un valore restituito indica se la conversione è riuscita o meno.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Rappresentazione di stringa del numero da convertire.</param>
      <param name="style">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Number" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di analisi specifiche delle impostazioni cultura relative a <paramref name="s" />. </param>
      <param name="result">Quando questo metodo restituisce un risultato, contiene il numero <see cref="T:System.Decimal" /> che è equivalente al valore numerico contenuto in <paramref name="s" />, se la conversione è stata eseguita correttamente oppure è uguale a zero se la conversione non è riuscita.La conversione non riesce se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" /> non presenta un formato conforme a <paramref name="style" /> o rappresenta un numero minore di <see cref="F:System.Decimal.MinValue" /> o maggiore di <see cref="F:System.Decimal.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.Zero">
      <summary>Rappresenta il numero zero (0).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Delegate">
      <summary>Rappresenta un delegato, ossia la struttura di dati che fa riferimento a un metodo static o a un'istanza di classe e un metodo di istanza di quella classe.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.Combine(System.Delegate,System.Delegate)">
      <summary>Esegue la concatenazione degli elenchi chiamate di due delegati.</summary>
      <returns>Nuovo delegato con un elenco chiamate in cui vengono concatenati gli elenchi chiamate di <paramref name="a" /> e <paramref name="b" /> (in quell'ordine).Restituisce <paramref name="a" /> se <paramref name="b" /> è null, restituisce <paramref name="b" /> se <paramref name="a" /> è un riferimento Null e restituisce un riferimento Null se <paramref name="a" /> e <paramref name="b" /> sono entrambi riferimenti Null.</returns>
      <param name="a">Delegato il cui elenco chiamate viene considerato per primo. </param>
      <param name="b">Delegato il cui elenco chiamate viene considerato per ultimo. </param>
      <exception cref="T:System.ArgumentException">Both <paramref name="a" /> and <paramref name="b" /> are not null, and <paramref name="a" /> and <paramref name="b" /> are not instances of the same delegate type. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.Combine(System.Delegate[])">
      <summary>Esegue la concatenazione degli elenchi chiamate di una matrice di delegati.</summary>
      <returns>Nuovo delegato con un elenco chiamate in cui vengono concatenati gli elenchi chiamate dei delegati nella matrice <paramref name="delegates" />.Restituisce null se <paramref name="delegates" /> è null, se <paramref name="delegates" /> contiene zero elementi o se ogni voce in <paramref name="delegates" /> è null.</returns>
      <param name="delegates">Matrice di delegati da combinare. </param>
      <exception cref="T:System.ArgumentException">Not all the non-null entries in <paramref name="delegates" /> are instances of the same delegate type. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.DynamicInvoke(System.Object[])">
      <summary>Richiama dinamicamente, ovvero ad associazione tardiva, il metodo rappresentato dal delegato corrente.</summary>
      <returns>Oggetto restituito dal metodo rappresentato dal delegato.</returns>
      <param name="args">Una matrice di oggetti che sono argomenti da passare al metodo rappresentato dal delegato corrente.-oppure- null, qualora il metodo rappresentato dal delegato corrente non richieda argomenti. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private).-or- The number, order, or type of parameters listed in <paramref name="args" /> is invalid. </exception>
      <exception cref="T:System.ArgumentException">The method represented by the delegate is invoked on an object or a class that does not support it. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The method represented by the delegate is an instance method and the target object is null.-or- One of the encapsulated methods throws an exception. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato e il delegato corrente sono dello stesso tipo e condividono gli stessi metodi e destinazioni e lo stesso elenco chiamate.</summary>
      <returns>true se l'oggetto indicato nel parametro <paramref name="obj" /> e il delegato corrente condividono gli stessi metodi, destinazioni e lo stesso elenco chiamate; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con il delegato corrente. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private). </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.GetHashCode">
      <summary>Restituisce il codice hash per il delegato.</summary>
      <returns>Codice hash per il delegato.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.GetInvocationList">
      <summary>Restituisce l'elenco chiamate del delegato.</summary>
      <returns>Matrice di delegati che rappresentano l'elenco chiamate del delegato corrente.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.op_Equality(System.Delegate,System.Delegate)">
      <summary>Determina se i delegati specificati sono uguali.</summary>
      <returns>true se <paramref name="d1" /> è uguale a <paramref name="d2" />; in caso contrario, false.</returns>
      <param name="d1">Primo delegato da confrontare. </param>
      <param name="d2">Secondo delegato da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Delegate.op_Inequality(System.Delegate,System.Delegate)">
      <summary>Determina se i delegati specificati non sono uguali.</summary>
      <returns>true se <paramref name="d1" /> non è uguale a <paramref name="d2" />; in caso contrario, false.</returns>
      <param name="d1">Primo delegato da confrontare. </param>
      <param name="d2">Secondo delegato da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Delegate.Remove(System.Delegate,System.Delegate)">
      <summary>Rimuove l'ultima occorrenza dell'elenco chiamate di un delegato dall'elenco chiamate di un altro delegato.</summary>
      <returns>Nuovo delegato con un elenco chiamate formato partendo dall'elenco chiamate di <paramref name="source" /> e rimuovendo l'ultima occorrenza dell'elenco chiamate di <paramref name="value" />, se l'elenco chiamate di <paramref name="value" /> si trova all'interno dell'elenco chiamate di <paramref name="source" />.Restituisce <paramref name="source" /> se <paramref name="value" /> è null o se l'elenco chiamate di <paramref name="value" /> non viene trovato all'interno dell'elenco chiamate di <paramref name="source" />.Restituisce un riferimento Null se l'elenco chiamate di <paramref name="value" /> è uguale all'elenco chiamate di <paramref name="source" /> o se <paramref name="source" /> è un riferimento Null.</returns>
      <param name="source">Delegato dal quale rimuovere l'elenco chiamate di <paramref name="value" />. </param>
      <param name="value">Delegato che fornisce l'elenco chiamate da rimuovere dall'elenco chiamate di <paramref name="source" />. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private). </exception>
      <exception cref="T:System.ArgumentException">The delegate types do not match.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.RemoveAll(System.Delegate,System.Delegate)">
      <summary>Rimuove tutte le occorrenze dell'elenco chiamate di un delegato dall'elenco chiamate di un altro delegato.</summary>
      <returns>Nuovo delegato con un elenco chiamate formato partendo dall'elenco chiamate di <paramref name="source" /> e rimuovendo tutte le occorrenze dell'elenco chiamate di <paramref name="value" />, se l'elenco chiamate di <paramref name="value" /> si trova all'interno dell'elenco chiamate di <paramref name="source" />.Restituisce <paramref name="source" /> se <paramref name="value" /> è null o se l'elenco chiamate di <paramref name="value" /> non viene trovato all'interno dell'elenco chiamate di <paramref name="source" />.Restituisce un riferimento Null se l'elenco chiamate di <paramref name="value" /> è uguale all'elenco chiamate di <paramref name="source" />, se <paramref name="source" /> contiene solo una serie di elenchi chiamate uguali all'elenco chiamate di <paramref name="value" /> o se <paramref name="source" /> è un riferimento Null.</returns>
      <param name="source">Delegato dal quale rimuovere l'elenco chiamate di <paramref name="value" />. </param>
      <param name="value">Delegato che fornisce l'elenco chiamate da rimuovere dall'elenco chiamate di <paramref name="source" />. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private). </exception>
      <exception cref="T:System.ArgumentException">The delegate types do not match.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Delegate.Target">
      <summary>Ottiene l'istanza di classe sulla quale il metodo di istanza viene richiamato dal delegato corrente.</summary>
      <returns>Oggetto sul quale il metodo di istanza viene richiamato dal delegato corrente, se il delegato rappresenta un metodo di istanza; null se il delegato rappresenta un metodo statico.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.DivideByZeroException">
      <summary>L'eccezione generata quando si tenta di dividere un valore integrale o decimale per zero.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DivideByZeroException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.DivideByZeroException" />.</summary>
    </member>
    <member name="M:System.DivideByZeroException.#ctor(System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.DivideByZeroException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore. </param>
    </member>
    <member name="M:System.DivideByZeroException.#ctor(System.String,System.Exception)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.DivideByZeroException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="innerException">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="innerException" /> non è null, l'eccezione corrente viene generata in un blocco catch in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Double">
      <summary>Rappresenta un numero a virgola mobile a precisione doppia.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.CompareTo(System.Double)">
      <summary>Confronta questa istanza con un numero a virgola mobile e precisione doppia specificato e restituisce un intero che indica se il valore di questa istanza è minore, uguale o maggiore del valore del numero a virgola mobile e precisione doppia specificato.</summary>
      <returns>Numero con segno che indica i valori relativi di questa istanza e di <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />.-or- This instance is not a number (<see cref="F:System.Double.NaN" />) and <paramref name="value" /> is a number. Zero This instance is equal to <paramref name="value" />.-or- Both this instance and <paramref name="value" /> are not a number (<see cref="F:System.Double.NaN" />), <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />. Greater than zero This instance is greater than <paramref name="value" />.-or- This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Double.NaN" />). </returns>
      <param name="value">Numero a virgola mobile a precisione doppia da confrontare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Double.Epsilon">
      <summary>Rappresenta il valore <see cref="T:System.Double" /> positivo più piccolo maggiore di zero.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Equals(System.Double)">
      <summary>Restituisce un valore che indica se l'istanza e un oggetto <see cref="T:System.Double" /> specificato rappresentano lo stesso valore.</summary>
      <returns>true se <paramref name="obj" /> è uguale all'istanza; in caso contrario, false.</returns>
      <param name="obj">Oggetto <see cref="T:System.Double" /> da confrontare con l'istanza.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="obj" /> è un'istanza di <see cref="T:System.Double" /> ed è uguale al valore dell'istanza; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.IsInfinity(System.Double)">
      <summary>Restituisce un valore che indica se il numero specificato restituisce l'infinito negativo o positivo </summary>
      <returns>true se <paramref name="d" /> restituisce <see cref="F:System.Double.PositiveInfinity" /> o <see cref="F:System.Double.NegativeInfinity" />; in caso contrario, false.</returns>
      <param name="d">Numero a virgola mobile a precisione doppia. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.IsNaN(System.Double)">
      <summary>Restituisce un valore che indica se il valore specificato non è un numero (<see cref="F:System.Double.NaN" />).</summary>
      <returns>true se <paramref name="d" /> viene valutato in <see cref="F:System.Double.NaN" />; in caso contrario, false.</returns>
      <param name="d">Numero a virgola mobile a precisione doppia. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.IsNegativeInfinity(System.Double)">
      <summary>Restituisce un valore che indica se il numero specificato restituisce l'infinito negativo.</summary>
      <returns>true se <paramref name="d" /> viene valutato in <see cref="F:System.Double.NegativeInfinity" />; in caso contrario, false.</returns>
      <param name="d">Numero a virgola mobile a precisione doppia. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.IsPositiveInfinity(System.Double)">
      <summary>Restituisce un valore che indica se il numero specificato restituisce l'infinito positivo.</summary>
      <returns>true se <paramref name="d" /> viene valutato in <see cref="F:System.Double.PositiveInfinity" />; in caso contrario, false.</returns>
      <param name="d">Numero a virgola mobile a precisione doppia. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.MaxValue">
      <summary>Rappresenta il valore massimo possibile di <see cref="T:System.Double" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.MinValue">
      <summary>Rappresenta il valore minimo possibile di un oggetto <see cref="T:System.Double" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.NaN">
      <summary>Rappresenta un valore che non è un numero (NaN).Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.NegativeInfinity">
      <summary>Rappresenta l'infinito negativo.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.op_Equality(System.Double,System.Double)">
      <summary>Restituisce un valore che indica se due valori <see cref="T:System.Double" /> specificati sono uguali.</summary>
      <returns>true se <paramref name="left" /> e <paramref name="right" /> sono uguali; in caso contrario, false.</returns>
      <param name="left">Primo valore da confrontare. </param>
      <param name="right">Secondo valore da confrontare.</param>
    </member>
    <member name="M:System.Double.op_GreaterThan(System.Double,System.Double)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Double" />specificato è maggiore di un altro valore <see cref="T:System.Double" /> specificato.</summary>
      <returns>true se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, false.</returns>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
    </member>
    <member name="M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Double" /> specificato è maggiore o uguale a un altro valore <see cref="T:System.Double" /> specificato.</summary>
      <returns>true se <paramref name="left" /> è maggiore o uguale a <paramref name="right" />; in caso contrario, false.</returns>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
    </member>
    <member name="M:System.Double.op_Inequality(System.Double,System.Double)">
      <summary>Restituisce un valore che indica se due valori <see cref="T:System.Double" /> specificati non sono uguali.</summary>
      <returns>true se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, false.</returns>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
    </member>
    <member name="M:System.Double.op_LessThan(System.Double,System.Double)">
      <summary>Restituisce un valore che indica se il valore <see cref="T:System.Double" /> specificato è minore o uguale a un altro valore <see cref="T:System.Double" /> specificato.</summary>
      <returns>true se <paramref name="left" /> è minore di <paramref name="right" />; in caso contrario, false.</returns>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
    </member>
    <member name="M:System.Double.op_LessThanOrEqual(System.Double,System.Double)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Double" /> specificato è minore o uguale a un altro valore <see cref="T:System.Double" /> specificato.</summary>
      <returns>true se <paramref name="left" /> è minore o uguale a <paramref name="right" />; in caso contrario, false.</returns>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
    </member>
    <member name="M:System.Double.Parse(System.String)">
      <summary>Converte la rappresentazione di stringa di un numero nel rispettivo numero a virgola mobile e precisione doppia equivalente.</summary>
      <returns>Numero a virgola mobile a precisione doppia equivalente al valore numerico o al simbolo specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato nel rispettivo numero a virgola mobile e precisione doppia equivalente.</summary>
      <returns>Numero a virgola mobile a precisione doppia equivalente al valore numerico o al simbolo specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è una combinazione di <see cref="F:System.Globalization.NumberStyles.Float" /> e <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato e in un formato specifico delle impostazioni cultura nel numero a virgola mobile e precisione doppia equivalente.</summary>
      <returns>Numero a virgola mobile a precisione doppia equivalente al valore numerico o al simbolo specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Float" /> combinato con <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a numeric value. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Parse(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in un determinato formato specifico delle impostazioni cultura nel numero a virgola mobile e doppia precisione equivalente.</summary>
      <returns>Numero a virgola mobile a precisione doppia equivalente al valore numerico o al simbolo specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.PositiveInfinity">
      <summary>Rappresenta l'infinito positivo.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
      <returns>Intero con segno che indica l'ordine relativo dell'istanza e di <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Oggetto da confrontare con questa istanza o null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Double" />. </exception>
    </member>
    <member name="M:System.Double.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true se il valore dell'istanza corrente non è uguale a zero; in caso contrario, false.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Byte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Questa conversione non è supportata.Non vengono restituiti valori.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Questa conversione non è supportata.Non vengono restituiti valori.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, invariato.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int16" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.SByte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Single" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <paramref name="type" />.</returns>
      <param name="type">Tipo nel quale convertire questo valore <see cref="T:System.Double" />.</param>
      <param name="provider">Implementazione <see cref="T:System.IFormatProvider" /> che fornisce informazioni specifiche delle impostazioni cultura sul formato del valore restituito.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt16" />.</returns>
      <param name="provider">Questo parametro viene ignorato. </param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.   </param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Double.ToString">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.ToString(System.IFormatProvider)">
      <summary>Converte il valore numerico di questa istanza nella rappresentazione di stringa equivalente usando le informazioni di formato specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="provider" />.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.ToString(System.String)">
      <summary>Converte il valore numerico di questa istanza nell'equivalente rappresentazione di stringa usando il formato specificato.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="format" />.</returns>
      <param name="format">Stringa di formato numerico.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.ToString(System.String,System.IFormatProvider)">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente usando il formato specificato e le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza corrente, in base a quanto specificato da <paramref name="format" /> e <paramref name="provider" />.</returns>
      <param name="format">Stringa di formato numerico.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.TryParse(System.String,System.Double@)">
      <summary>Converte la rappresentazione di stringa di un numero nel rispettivo numero a virgola mobile e precisione doppia equivalente.Un valore restituito indica se la conversione è riuscita o meno.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="result">Al momento della restituzione, questo metodo contiene il numero a virgola mobile a precisione doppia equivalente al parametro <paramref name="s" />, se la conversione ha esito positivo oppure zero se la conversione non riesce.La conversione non viene eseguita se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" />, non è un numero in formato valido o rappresenta un numero minore di <see cref="F:System.Double.MinValue" /> o maggiore di <see cref="F:System.Double.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato e in un formato specifico delle impostazioni cultura nel numero a virgola mobile e precisione doppia equivalente.Un valore restituito indica se la conversione è riuscita o meno.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="style">Combinazione bit per bit dei valori <see cref="T:System.Globalization.NumberStyles" /> che indicano il formato consentito di <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Float" /> combinato con <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <param name="provider">Oggetto <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura relative a <paramref name="s" />. </param>
      <param name="result">Quando questo metodo viene restituito, contiene il numero a virgola mobile a precisione doppia equivalente al valore numerico o al simbolo contenuto in <paramref name="s" />, se la conversione ha esito positivo oppure zero se la conversione non riesce.La conversione non viene eseguita se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" />, non presenta un formato conforme a <paramref name="style" />, rappresenta un numero minore di <see cref="F:System.SByte.MinValue" /> o maggiore di <see cref="F:System.SByte.MaxValue" /> o se <paramref name="style" /> non è una combinazione valida di costanti enumerate dell'oggetto <see cref="T:System.Globalization.NumberStyles" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Enum">
      <summary>Si tratta della classe base per le enumerazioni.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Enum" />. </summary>
    </member>
    <member name="M:System.Enum.CompareTo(System.Object)">
      <summary>Confronta questa istanza con un oggetto specificato e restituisce un'indicazione dei valori relativi.</summary>
      <returns>Numero con segno che indica i valori relativi di questa istanza e <paramref name="target" />.Valore Significato Minore di zero Il valore dell'istanza è minore del valore di <paramref name="target" />. Zero Il valore di questa istanza è uguale al valore di <paramref name="target" />. Maggiore di zero Il valore di questa istanza è maggiore del valore di <paramref name="target" />.-oppure- <paramref name="target" /> è null. </returns>
      <param name="target">Oggetto da confrontare o null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> and this instance are not the same type. </exception>
      <exception cref="T:System.InvalidOperationException">This instance is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="obj" /> è un valore di enumerazione dello stesso tipo e con lo stesso valore sottostante dell'istanza; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza o null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.Format(System.Type,System.Object,System.String)">
      <summary>Converte il valore specificato di un determinato tipo enumerato nella rappresentazione di stringa equivalente, secondo il formato specificato.</summary>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
      <param name="enumType">Tipo di enumerazione del valore da convertire. </param>
      <param name="value">Valore da convertire. </param>
      <param name="format">Formato di output da usare </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="enumType" />, <paramref name="value" />, or <paramref name="format" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" /> type.-or- The <paramref name="value" /> is from an enumeration that differs in type from <paramref name="enumType" />.-or- The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />. </exception>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter contains an invalid value. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="format" /> equals "X", but the enumeration type is unknown.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetHashCode">
      <summary>Viene restituito il codice hash per il valore dell'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.GetName(System.Type,System.Object)">
      <summary>Restituisce il nome della costante nell'enumerazione del valore specificato.</summary>
      <returns>Stringa contenente il nome della costante enumerata in <paramref name="enumType" />, il cui valore è <paramref name="value" />, oppure null se tale costante non viene rilevata.</returns>
      <param name="enumType">Tipo di enumerazione. </param>
      <param name="value">Valore di una particolare costante enumerata in base al relativo tipo sottostante. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is neither of type <paramref name="enumType" /> nor does it have the same underlying type as <paramref name="enumType" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetNames(System.Type)">
      <summary>Restituisce una matrice dei nomi delle costanti in una enumerazione specificata.</summary>
      <returns>Matrice di stringa dei nomi delle costanti in <paramref name="enumType" />. </returns>
      <param name="enumType">Tipo di enumerazione. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetUnderlyingType(System.Type)">
      <summary>Restituisce il tipo sottostante dell'enumerazione specificata.</summary>
      <returns>Tipo sottostante di <paramref name="enumType" />.</returns>
      <param name="enumType">Enumerazione il cui tipo sottostante verrà recuperato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetValues(System.Type)">
      <summary>Restituisce una matrice dei valori delle costanti in una enumerazione specificata.</summary>
      <returns>Matrice contenente i valori delle costanti in <paramref name="enumType" />. </returns>
      <param name="enumType">Tipo di enumerazione. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />. </exception>
      <exception cref="T:System.InvalidOperationException">The method is invoked by reflection in a reflection-only context, -or-<paramref name="enumType" /> is a type from an assembly loaded in a reflection-only context.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.HasFlag(System.Enum)">
      <summary>Determina se uno o più campi di bit vengono impostati nell'istanza corrente.</summary>
      <returns>true se il campo di bit o i campi di bit impostati in <paramref name="flag" /> vengono impostati anche nell'istanza corrente; in caso contrario, false.</returns>
      <param name="flag">Valore di enumerazione.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> is a different type than the current instance.</exception>
    </member>
    <member name="M:System.Enum.IsDefined(System.Type,System.Object)">
      <summary>Indica l'eventuale presenza di una costante di valore specificato in una determinata enumerazione.</summary>
      <returns>true se una costante in <paramref name="enumType" /> ha un valore uguale a <paramref name="value" />; in caso contrario, false.</returns>
      <param name="enumType">Tipo di enumerazione. </param>
      <param name="value">Valore o nome di una costante in <paramref name="enumType" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an Enum.-or- The type of <paramref name="value" /> is an enumeration, but it is not an enumeration of type <paramref name="enumType" />.-or- The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />, or <see cref="T:System.String" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.Parse(System.Type,System.String)">
      <summary>Converte la rappresentazione di stringa del nome o del valore numerico di una o più costanti enumerate in un oggetto enumerato equivalente.</summary>
      <returns>Oggetto di tipo <paramref name="enumType" /> il cui valore è rappresentato da <paramref name="value" />.</returns>
      <param name="enumType">Tipo di enumerazione. </param>
      <param name="value">Stringa contenente il nome o il valore da convertire. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is either an empty string or only contains white space.-or- <paramref name="value" /> is a name, but not one of the named constants defined for the enumeration. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
      <summary>Converte la rappresentazione di stringa del nome o del valore numerico di una o più costanti enumerate in un oggetto enumerato equivalente.Un parametro specifica se l'operazione verrà eseguita senza distinzione tra maiuscole e minuscole.</summary>
      <returns>Oggetto di tipo <paramref name="enumType" /> il cui valore è rappresentato da <paramref name="value" />.</returns>
      <param name="enumType">Tipo di enumerazione. </param>
      <param name="value">Stringa contenente il nome o il valore da convertire. </param>
      <param name="ignoreCase">true per ignorare la distinzione tra maiuscole e minuscole; in caso contrario, false. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is either an empty string ("") or only contains white space.-or- <paramref name="value" /> is a name, but not one of the named constants defined for the enumeration. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Converte il valore corrente in un valore booleano basato sul tipo sottostante.</summary>
      <returns>Questo membro genera sempre un'eccezione.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Converte il valore corrente in un intero senza segno a 8 bit basato sul tipo sottostante.</summary>
      <returns>Valore convertito.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Converte il valore corrente in un carattere Unicode basato sul tipo sottostante.</summary>
      <returns>Questo membro genera sempre un'eccezione.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Converte il valore corrente in un oggetto <see cref="T:System.DateTime" /> basato sul tipo sottostante.</summary>
      <returns>Questo membro genera sempre un'eccezione.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Converte il valore corrente in un oggetto <see cref="T:System.Decimal" /> basato sul tipo sottostante.</summary>
      <returns>Questo membro genera sempre un'eccezione.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Converte il valore corrente in un numero a virgola mobile e precisione doppia basato sul tipo sottostante.</summary>
      <returns>Questo membro genera sempre un'eccezione.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Converte il valore corrente in un intero con segno a 16 bit basato sul tipo sottostante.</summary>
      <returns>Valore convertito.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Converte il valore corrente in un intero con segno a 32 bit basato sul tipo sottostante.</summary>
      <returns>Valore convertito.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Converte il valore corrente in un intero con segno a 64 bit basato sul tipo sottostante.</summary>
      <returns>Valore convertito.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Converte il valore corrente in un intero con segno a 8 bit basato sul tipo sottostante.</summary>
      <returns>Valore convertito.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Converte il valore corrente in un numero a virgola mobile e con precisione singola in base al tipo sottostante.</summary>
      <returns>Questo membro genera sempre un'eccezione.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToString(System.IFormatProvider)">
      <summary>Converte il valore corrente in una stringa basata sul tipo sottostante.</summary>
      <returns>Valore convertito.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Converte il valore corrente in un tipo specificato basato sul tipo sottostante.</summary>
      <returns>Valore convertito.</returns>
      <param name="type">Tipo in cui eseguire la conversione. </param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Converte il valore corrente in un intero senza segno a 16 bit basato sul tipo sottostante.</summary>
      <returns>Valore convertito.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Converte il valore corrente in un intero senza segno a 32 bit basato sul tipo sottostante.</summary>
      <returns>Valore convertito.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Converte il valore corrente in un intero senza segno a 64 bit basato sul tipo sottostante.</summary>
      <returns>Valore convertito.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
    </member>
    <member name="M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Questo overload del metodo è obsoleto; usare <see cref="M:System.Enum.ToString(System.String)" />.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="format" />.</returns>
      <param name="format">Specifica di formato.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> does not contain a valid format specification. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="format" /> equals "X", but the enumeration type is unknown.</exception>
    </member>
    <member name="M:System.Enum.ToObject(System.Type,System.Object)">
      <summary>Converte l'oggetto specificato con un valore intero in un membro di enumerazione.</summary>
      <returns>Oggetto di enumerazione il cui valore è <paramref name="value" />.</returns>
      <param name="enumType">Tipo di enumerazione da restituire. </param>
      <param name="value">Valore da convertire in un membro di enumerazione. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.ToString">
      <summary>Converte il valore dell'istanza corrente nell'equivalente rappresentazione di stringa.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.ToString(System.String)">
      <summary>Converte il valore dell'istanza corrente nella rappresentazione di stringa equivalente, usando il formato specificato.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="format" />.</returns>
      <param name="format">Stringa di formato. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> contains an invalid specification. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="format" /> equals "X", but the enumeration type is unknown.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
      <summary>Converte la rappresentazione di stringa del nome o del valore numerico di una o più costanti enumerate in un oggetto enumerato equivalente.Un parametro specifica se l'operazione verrà eseguita con distinzione tra maiuscole e minuscole.Il valore restituito indica se la conversione è riuscita.</summary>
      <returns>true se il parametro <paramref name="value" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="value">Rappresentazione di stringa del nome di enumerazione o del valore sottostante da convertire.</param>
      <param name="ignoreCase">true per ignorare la distinzione tra maiuscole e minuscole, false per non ignorarla.</param>
      <param name="result">Quando questo metodo viene restituito, <paramref name="result" /> contiene un oggetto di tipo <paramref name="TEnum" /> il cui valore è rappresentato da <paramref name="value" /> se l'operazione di analisi viene eseguita correttamente.Se l'operazione di analisi non riesce, <paramref name="result" /> contiene il valore predefinito del tipo sottostante di <paramref name="TEnum" />.Si noti che questo valore non deve essere un membro dell'enumerazione di <paramref name="TEnum" />.Questo parametro viene passato non inizializzato.</param>
      <typeparam name="TEnum">Tipo di enumerazione nel quale convertire <paramref name="value" />.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="TEnum" /> is not an enumeration type.</exception>
    </member>
    <member name="M:System.Enum.TryParse``1(System.String,``0@)">
      <summary>Converte la rappresentazione di stringa del nome o del valore numerico di una o più costanti enumerate in un oggetto enumerato equivalente.Il valore restituito indica se la conversione è riuscita.</summary>
      <returns>true se il parametro <paramref name="value" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="value">Rappresentazione di stringa del nome di enumerazione o del valore sottostante da convertire.</param>
      <param name="result">Quando questo metodo viene restituito, <paramref name="result" /> contiene un oggetto di tipo <paramref name="TEnum" /> il cui valore è rappresentato da <paramref name="value" /> se l'operazione di analisi viene eseguita correttamente.Se l'operazione di analisi non riesce, <paramref name="result" /> contiene il valore predefinito del tipo sottostante di <paramref name="TEnum" />.Si noti che questo valore non deve essere un membro dell'enumerazione di <paramref name="TEnum" />.Questo parametro viene passato non inizializzato.</param>
      <typeparam name="TEnum">Tipo di enumerazione nel quale convertire <paramref name="value" />.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="TEnum" /> is not an enumeration type.</exception>
    </member>
    <member name="T:System.EventArgs">
      <summary>Rappresenta la classe base per le classi che contengono dati di evento e fornisce un valore da utilizzare per gli eventi che non includono dati di evento. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.EventArgs.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.EventArgs" />.</summary>
    </member>
    <member name="F:System.EventArgs.Empty">
      <summary>Fornisce un valore da utilizzare con eventi che non dispongono di dati.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.EventHandler">
      <summary>Rappresenta il metodo di gestione dell'evento che non dispone di dati dell'evento.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.EventHandler.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.EventHandler.BeginInvoke(System.Object,System.EventArgs,System.AsyncCallback,System.Object)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.EventHandler.EndInvoke(System.IAsyncResult)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.EventHandler.Invoke(System.Object,System.EventArgs)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.EventHandler`1">
      <summary>Rappresenta il metodo di gestione dell'evento che dispone di dati dell'evento. </summary>
      <typeparam name="TEventArgs">Tipo dei dati generati dall'evento.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.EventHandler`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.EventHandler`1.BeginInvoke(System.Object,`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.EventHandler`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.EventHandler`1.Invoke(System.Object,`0)"></member>
    <member name="T:System.Exception">
      <summary>Rappresenta gli errori che si verificano durante l'esecuzione dell'applicazione.Per esaminare il codice sorgente di .NET Framework per questo tipo, vedere Origine riferimento.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Exception.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Exception" />.</summary>
    </member>
    <member name="M:System.Exception.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Exception" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore. </param>
    </member>
    <member name="M:System.Exception.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Exception" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione. </param>
      <param name="innerException">Eccezione causa dell'eccezione corrente o riferimento Null (Nothing in Visual Basic) se non viene specificata alcuna eccezione interna. </param>
    </member>
    <member name="P:System.Exception.Data">
      <summary>Ottiene una raccolta di coppie chiave-valore che fornisce informazioni aggiuntive definite dall'utente relative all'eccezione.</summary>
      <returns>Oggetto che implementa l'interfaccia <see cref="T:System.Collections.IDictionary" /> e contiene una raccolta di coppie chiave/valore definite dall'utente.Il valore predefinito è una raccolta vuota.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Exception.GetBaseException">
      <summary>Quando ne viene eseguito l'override in una classe derivata, restituisce l'<see cref="T:System.Exception" /> che è la causa radice di una o più eccezioni successive.</summary>
      <returns>Eccezione generata per prima in una catena di eccezioni.Se la proprietà <see cref="P:System.Exception.InnerException" /> dell'eccezione corrente è un riferimento Null (Nothing in Visual Basic), restituisce l'eccezione corrente.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Exception.HelpLink">
      <summary>Ottiene o imposta un collegamento al file della Guida associato all'eccezione.</summary>
      <returns>URN (Uniform Resource Name) o URL (Uniform Resource Locator).</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Exception.HResult">
      <summary>Ottiene o imposta HRESULT, un valore numerico codificato che viene assegnato a un'eccezione specifica.</summary>
      <returns>Valore HRESULT.</returns>
    </member>
    <member name="P:System.Exception.InnerException">
      <summary>Ottiene l'istanza di <see cref="T:System.Exception" /> che ha causato l'eccezione corrente.</summary>
      <returns>Oggetto che descrive l'errore che ha causato l'eccezione corrente.La proprietà <see cref="P:System.Exception.InnerException" /> restituisce lo stesso valore passato al costruttore <see cref="M:System.Exception.#ctor(System.String,System.Exception)" />, oppure null se il valore dell'eccezione interna non è stato fornito al costruttore.Questa proprietà è di sola lettura.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Exception.Message">
      <summary>Ottiene un messaggio che descrive l'eccezione corrente.</summary>
      <returns>Messaggio di errore che spiega il motivo dell'eccezione o una stringa vuota ("").</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Exception.Source">
      <summary>Ottiene o imposta il nome dell'oggetto o dell'applicazione che ha generato l'errore.</summary>
      <returns>Nome dell'oggetto che ha generato l'errore.</returns>
      <exception cref="T:System.ArgumentException">The object must be a runtime <see cref="N:System.Reflection" /> object</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Exception.StackTrace">
      <summary>Ottiene una rappresentazione di stringa dei frame immediati nello stack di chiamate.</summary>
      <returns>Stringa in cui vengono descritti i frame immediati dello stack di chiamate.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Exception.ToString">
      <summary>Crea e restituisce una rappresentazione di stringa dell'eccezione corrente.</summary>
      <returns>Una rappresentazione di stringa dell'eccezione corrente.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.FieldAccessException">
      <summary>Eccezione generata quando si esegue un tentativo non valido di accedere a un campo privato o protetto all'interno di una classe.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.FieldAccessException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.FieldAccessException" />.</summary>
    </member>
    <member name="M:System.FieldAccessException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.FieldAccessException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione</param>
    </member>
    <member name="M:System.FieldAccessException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.FieldAccessException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione</param>
      <param name="inner">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="inner" /> non è null, l'eccezione corrente verrà generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.FlagsAttribute">
      <summary>Indica che un'enumerazione può essere gestita come un campo di bit, ovvero un insieme di flag.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.FlagsAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.FlagsAttribute" />.</summary>
    </member>
    <member name="T:System.FormatException">
      <summary>Eccezione generata quando il formato di un argomento non è valido oppure quando il formato di una stringa di formato composta non è corretto. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.FormatException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.FormatException" />.</summary>
    </member>
    <member name="M:System.FormatException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.FormatException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore. </param>
    </member>
    <member name="M:System.FormatException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.FormatException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione. </param>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente.Se il parametro <paramref name="innerException" /> non è un riferimento Null (Nothing in Visual Basic), l'eccezione corrente viene generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.FormattableString">
      <summary>Rappresenta una stringa di formato composito, unitamente agli argomenti da formattare. </summary>
    </member>
    <member name="M:System.FormattableString.#ctor">
      <summary>Crea una nuova istanza della classe <see cref="T:System.FormattableString" />. </summary>
    </member>
    <member name="P:System.FormattableString.ArgumentCount">
      <summary>Ottiene il numero di argomenti da formattare. </summary>
      <returns>Numero di argomenti da formattare. </returns>
    </member>
    <member name="P:System.FormattableString.Format">
      <summary>Restituisce la stringa di formato composito. </summary>
      <returns>Stringa di formato composito. </returns>
    </member>
    <member name="M:System.FormattableString.GetArgument(System.Int32)">
      <summary>Restituisce l'argomento in corrispondenza della posizione di indice specificata. </summary>
      <returns>Argomento. </returns>
      <param name="index">Indice dell'argomento.Il valore può essere compreso tra zero e uno meno il valore di <see cref="P:System.FormattableString.ArgumentCount" />.</param>
    </member>
    <member name="M:System.FormattableString.GetArguments">
      <summary>Restituisce una matrice di oggetti che contiene uno o più oggetti da formattare. </summary>
      <returns>Matrice di oggetti che contiene uno o più oggetti da formattare. </returns>
    </member>
    <member name="M:System.FormattableString.Invariant(System.FormattableString)">
      <summary>Restituisce una stringa di risultato in cui gli argomenti vengono formattati attenendosi alle convenzioni di impostazioni cultura non associate a una lingua specifica. </summary>
      <returns>Stringa risultante dalla formattazione dell'istanza corrente con le convenzioni delle impostazioni cultura non associate a una lingua specifica. </returns>
      <param name="formattable">Oggetto da convertire in una stringa di risultato. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="formattable" /> è null. </exception>
    </member>
    <member name="M:System.FormattableString.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Restituisce la stringa risultante dalla formattazione della stringa di formato con i relativi argomenti attenendosi alle convenzioni di formattazione delle impostazioni cultura specificate. </summary>
      <returns>Stringa formattata attenendosi alle convenzioni del parametro <paramref name="formatProvider" />. </returns>
      <param name="ignored">Stringa.Questo argomento viene ignorato.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
    </member>
    <member name="M:System.FormattableString.ToString">
      <summary>Restituisce la stringa risultante dalla formattazione della stringa di formato composito con i relativi argomenti attenendosi alle convenzioni di formattazione delle impostazioni cultura correnti. </summary>
      <returns>Stringa di risultato formattata attenendosi alle convenzioni di impostazioni cultura correnti. </returns>
    </member>
    <member name="M:System.FormattableString.ToString(System.IFormatProvider)">
      <summary>Restituisce la stringa risultante dalla formattazione della stringa di formato composito con i relativi argomenti attenendosi alle convenzioni di formattazione delle impostazioni cultura specificate. </summary>
      <returns>Stringa di risultato formattata attenendosi alle convenzioni di <paramref name="formatProvider" />. </returns>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
    </member>
    <member name="T:System.Func`1">
      <summary>Incapsula un metodo che non dispone di parametri e restituisce un valore del tipo specificato dal parametro <paramref name="TResult" />.</summary>
      <typeparam name="TResult">Tipo del valore restituito del metodo incapsulato da questo delegato.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Func`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`1.BeginInvoke(System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`1.Invoke"></member>
    <member name="T:System.Func`10">
      <summary>Incapsula un metodo che dispone di nove parametri e restituisce un valore del tipo specificato dal parametro <paramref name="TResult" />.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T9">Tipo del nono parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito del metodo incapsulato da questo delegato.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`10.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`10.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`10.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`10.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8)"></member>
    <member name="T:System.Func`11">
      <summary>Incapsula un metodo che presenta 10 parametri e restituisce un valore del tipo specificato dal parametro <paramref name="TResult" />.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T9">Tipo del nono parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T10">Tipo del decimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito del metodo incapsulato da questo delegato.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`11.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`11.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`11.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`11.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)"></member>
    <member name="T:System.Func`12">
      <summary>Incapsula un metodo che presenta 11 parametri e restituisce un valore del tipo specificato dal parametro <paramref name="TResult" />.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T9">Tipo del nono parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T10">Tipo del decimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T11">Tipo dell'undicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito del metodo incapsulato da questo delegato.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`12.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`12.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`12.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`12.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)"></member>
    <member name="T:System.Func`13">
      <summary>Incapsula un metodo che presenta 12 parametri e restituisce un valore del tipo specificato dal parametro <paramref name="TResult" />.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T9">Tipo del nono parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T10">Tipo del decimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T11">Tipo dell'undicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T12">Tipo del dodicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito del metodo incapsulato da questo delegato.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`13.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`13.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`13.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`13.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)"></member>
    <member name="T:System.Func`14">
      <summary>Incapsula un metodo che presenta 13 parametri e restituisce un valore del tipo specificato dal parametro <paramref name="TResult" />.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T9">Tipo del nono parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T10">Tipo del decimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T11">Tipo dell'undicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T12">Tipo del dodicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T13">Tipo del tredicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito del metodo incapsulato da questo delegato.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`14.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`14.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`14.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`14.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)"></member>
    <member name="T:System.Func`15">
      <summary>Incapsula un metodo che presenta 14 parametri e restituisce un valore del tipo specificato dal parametro <paramref name="TResult" />.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T9">Tipo del nono parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T10">Tipo del decimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T11">Tipo dell'undicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T12">Tipo del dodicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T13">Tipo del tredicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T14">Tipo del quattordicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito del metodo incapsulato da questo delegato.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`15.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`15.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`15.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`15.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)"></member>
    <member name="T:System.Func`16">
      <summary>Incapsula un metodo che presenta 15 parametri e restituisce un valore del tipo specificato dal parametro <paramref name="TResult" />.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T9">Tipo del nono parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T10">Tipo del decimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T11">Tipo dell'undicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T12">Tipo del dodicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T13">Tipo del tredicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T14">Tipo del quattordicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T15">Tipo del quindicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito del metodo incapsulato da questo delegato.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`16.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`16.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`16.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`16.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)"></member>
    <member name="T:System.Func`17">
      <summary>Incapsula un metodo che presenta 16 parametri e restituisce un valore del tipo specificato dal parametro <paramref name="TResult" />.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T9">Tipo del nono parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T10">Tipo del decimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T11">Tipo dell'undicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T12">Tipo del dodicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T13">Tipo del tredicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T14">Tipo del quattordicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T15">Tipo del quindicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T16">Tipo del sedicesimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito del metodo incapsulato da questo delegato.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`17.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`17.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`17.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`17.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)"></member>
    <member name="T:System.Func`2">
      <summary>Incapsula un metodo che dispone di un parametro e restituisce un valore del tipo specificato dal parametro <paramref name="TResult" />.Per esaminare il codice sorgente di .NET Framework per questo tipo, vedere Origine riferimento.</summary>
      <typeparam name="T">Tipo del parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito del metodo incapsulato da questo delegato.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`2.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`2.BeginInvoke(`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`2.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`2.Invoke(`0)"></member>
    <member name="T:System.Func`3">
      <summary>Incapsula un metodo che dispone di due parametri e restituisce un valore del tipo specificato dal parametro <paramref name="TResult" />.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito del metodo incapsulato da questo delegato.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`3.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`3.BeginInvoke(`0,`1,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`3.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`3.Invoke(`0,`1)"></member>
    <member name="T:System.Func`4">
      <summary>Incapsula un metodo che dispone di tre parametri e restituisce un valore del tipo specificato dal parametro <paramref name="TResult" />.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito del metodo incapsulato da questo delegato.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`4.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`4.BeginInvoke(`0,`1,`2,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`4.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`4.Invoke(`0,`1,`2)"></member>
    <member name="T:System.Func`5">
      <summary>Incapsula un metodo che dispone di quattro parametri e restituisce un valore del tipo specificato dal parametro <paramref name="TResult" />.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito del metodo incapsulato da questo delegato.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`5.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`5.BeginInvoke(`0,`1,`2,`3,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`5.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`5.Invoke(`0,`1,`2,`3)"></member>
    <member name="T:System.Func`6">
      <summary>Incapsula un metodo che dispone di cinque parametri e restituisce un valore del tipo specificato dal parametro <paramref name="TResult" />.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito del metodo incapsulato da questo delegato.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`6.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`6.BeginInvoke(`0,`1,`2,`3,`4,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`6.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`6.Invoke(`0,`1,`2,`3,`4)"></member>
    <member name="T:System.Func`7">
      <summary>Incapsula un metodo che presenta sei parametri e restituisce un valore del tipo specificato dal parametro <paramref name="TResult" />.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito del metodo incapsulato da questo delegato.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`7.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`7.BeginInvoke(`0,`1,`2,`3,`4,`5,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`7.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`7.Invoke(`0,`1,`2,`3,`4,`5)"></member>
    <member name="T:System.Func`8">
      <summary>Incapsula un metodo che presenta sette parametri e restituisce un valore del tipo specificato dal parametro <paramref name="TResult" />.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito del metodo incapsulato da questo delegato.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`8.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`8.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`8.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`8.Invoke(`0,`1,`2,`3,`4,`5,`6)"></member>
    <member name="T:System.Func`9">
      <summary>Incapsula un metodo che dispone di otto parametri e restituisce un valore del tipo specificato dal parametro <paramref name="TResult" />.</summary>
      <typeparam name="T1">Tipo del primo parametro del metodo incapsulato da questo delegato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <typeparam name="T2">Tipo del secondo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T3">Tipo del terzo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T4">Tipo del quarto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T5">Tipo del quinto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T6">Tipo del sesto parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T7">Tipo del settimo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo parametro del metodo incapsulato da questo delegato.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito del metodo incapsulato da questo delegato.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`9.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`9.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`9.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`9.Invoke(`0,`1,`2,`3,`4,`5,`6,`7)"></member>
    <member name="T:System.GC">
      <summary>Controlla il Garbage Collector di sistema, un servizio che recupera automaticamente la memoria inutilizzata.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.GC.AddMemoryPressure(System.Int64)">
      <summary>Informa il runtime di un'allocazione di una grande quantità di memoria non gestita di cui tenere conto durante la pianificazione della procedura di Garbage Collection.</summary>
      <param name="bytesAllocated">Quantità incrementale di memoria non gestita che è stata allocata. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bytesAllocated" /> è minore o uguale a 0.-oppure-Su un computer a 32 bit, <paramref name="bytesAllocated" /> è maggiore di <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.GC.Collect">
      <summary>Forza un'operazione immediata di Garbage Collection di tutte le generazioni. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.Collect(System.Int32)">
      <summary>Forza un immediato Garbage Collection a partire dalla generazione 0 fino a una determinata generazione.</summary>
      <param name="generation">Numero della generazione meno recente da sottoporre a Garbage Collection. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" /> non è valido. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.Collect(System.Int32,System.GCCollectionMode)">
      <summary>Forza un'operazione di Garbage Collection dalla generazione 0 a una generazione specificata, in un momento specificato dal valore di <see cref="T:System.GCCollectionMode" />.</summary>
      <param name="generation">Numero della generazione meno recente da sottoporre a Garbage Collection. </param>
      <param name="mode">Valore di enumerazione che specifica se l'operazione di Garbage Collection è forzata (<see cref="F:System.GCCollectionMode.Default" /> o <see cref="F:System.GCCollectionMode.Forced" />) o ottimizzata (<see cref="F:System.GCCollectionMode.Optimized" />). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" /> non è valido.-oppure-<paramref name="mode" /> non è uno dei valori di <see cref="T:System.GCCollectionMode" />.</exception>
    </member>
    <member name="M:System.GC.Collect(System.Int32,System.GCCollectionMode,System.Boolean)">
      <summary>Forza un'operazione di Garbage Collection dalla generazione 0 fino a una determinata generazione, in un momento specificato dal valore di <see cref="T:System.GCCollectionMode" />, con un valore che specifica se la raccolta deve essere bloccante.</summary>
      <param name="generation">Numero della generazione meno recente da sottoporre a Garbage Collection. </param>
      <param name="mode">Valore di enumerazione che specifica se l'operazione di Garbage Collection è forzata (<see cref="F:System.GCCollectionMode.Default" /> o <see cref="F:System.GCCollectionMode.Forced" />) o ottimizzata (<see cref="F:System.GCCollectionMode.Optimized" />). </param>
      <param name="blocking">true per eseguire una procedura di Garbage Collection; false per eseguire una procedura di Garbage Collection in background, se possibile.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" /> non è valido.-oppure-<paramref name="mode" /> non è uno dei valori di <see cref="T:System.GCCollectionMode" />.</exception>
    </member>
    <member name="M:System.GC.CollectionCount(System.Int32)">
      <summary>Restituisce il numero di volte che è stata effettuata la procedura di Garbage Collection per la generazione specificata di oggetti.</summary>
      <returns>Numero di esecuzioni del Garbage Collection per la generazione specificata dall'avvio del processo.</returns>
      <param name="generation">Generazione di oggetti per la quale viene determinato il conteggio delle operazioni di Garbage Collection. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" /> è minore di 0. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.GetGeneration(System.Object)">
      <summary>Restituisce il numero corrente di generazione dell'oggetto specificato.</summary>
      <returns>Numero corrente di generazione di <paramref name="obj" />.</returns>
      <param name="obj">Oggetto per cui vengono recuperate le informazioni sulla generazione. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.GetTotalMemory(System.Boolean)">
      <summary>Recupera il numero di byte correntemente considerati allocabili.Un parametro indica se questo metodo può attendere un breve intervallo prima di restituire un risultato per consentire l'esecuzione della procedura di Garbage Collection e la finalizzazione degli oggetti.</summary>
      <returns>Numero che rappresenta la migliore approssimazione disponibile del numero di byte correntemente allocati nella memoria gestita.</returns>
      <param name="forceFullCollection">true per indicare che questo metodo può attendere l'esecuzione dell'operazione di Garbage Collection prima di restituire un risultato; in caso contrario, false.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.KeepAlive(System.Object)">
      <summary>Fa riferimento all'oggetto specificato, rendendolo inadatto per il Garbage Collection dall'inizio della routine corrente fino al momento in cui viene chiamato il metodo.</summary>
      <param name="obj">Oggetto a cui fare riferimento. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.GC.MaxGeneration">
      <summary>Ottiene il numero massimo di generazioni supportate correntemente dal sistema.</summary>
      <returns>Valore compreso tra zero e il numero massimo di generazioni supportate.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.RemoveMemoryPressure(System.Int64)">
      <summary>Informa il runtime che è stata rilasciata memoria non gestita di cui non occorre più tenere conto durante la pianificazione della procedura di Garbage Collection.</summary>
      <param name="bytesAllocated">Quantità di memoria non gestita che è stata rilasciata. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bytesAllocated" /> è minore o uguale a 0. -oppure- Su un computer a 32 bit, <paramref name="bytesAllocated" /> è maggiore di <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.GC.ReRegisterForFinalize(System.Object)">
      <summary>Richiede che il sistema chiami il finalizzatore per l'oggetto specificato, per il quale è stato precedentemente chiamato il metodo <see cref="M:System.GC.SuppressFinalize(System.Object)" />.</summary>
      <param name="obj">Oggetto per cui è necessario chiamare un finalizzatore. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> è null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.SuppressFinalize(System.Object)">
      <summary>Richiede che Common Language Runtime non chiami il finalizzatore per l'oggetto specificato. </summary>
      <param name="obj">Oggetto di cui non è necessario eseguire il finalizzatore. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> è null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.WaitForPendingFinalizers">
      <summary>Sospende il thread corrente fino a quando la coda di finalizzatori non sarà stata svuotata dal thread che la elabora.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.GCCollectionMode">
      <summary>Specifica il comportamento di un Garbage Collection forzato.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.GCCollectionMode.Default">
      <summary>Impostazione predefinita di questa enumerazione che è attualmente <see cref="F:System.GCCollectionMode.Forced" />. </summary>
    </member>
    <member name="F:System.GCCollectionMode.Forced">
      <summary>Forza il Garbage Collection affinché venga eseguito immediatamente.</summary>
    </member>
    <member name="F:System.GCCollectionMode.Optimized">
      <summary>Consente al Garbage Collector di determinare se questo è il momento migliore per recuperare gli oggetti. </summary>
    </member>
    <member name="T:System.Guid">
      <summary>Rappresenta un identificatore univoco globale (GUID).Per esaminare il codice sorgente .NET Framework per questo tipo, vedere Origine riferimento.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.#ctor(System.Byte[])">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Guid" /> con la matrice di byte specificata.</summary>
      <param name="b">Matrice di byte a 16 elementi contenente i valori con cui inizializzare il GUID. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="b" /> è null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="b" /> non ha una lunghezza di 16 byte. </exception>
    </member>
    <member name="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Guid" /> usando gli interi e i byte specificati.</summary>
      <param name="a">Primi 4 byte del GUID. </param>
      <param name="b">I 2 byte successivi del GUID. </param>
      <param name="c">I 2 byte successivi del GUID. </param>
      <param name="d">Byte successivo del GUID. </param>
      <param name="e">Byte successivo del GUID. </param>
      <param name="f">Byte successivo del GUID. </param>
      <param name="g">Byte successivo del GUID. </param>
      <param name="h">Byte successivo del GUID. </param>
      <param name="i">Byte successivo del GUID. </param>
      <param name="j">Byte successivo del GUID. </param>
      <param name="k">Byte successivo del GUID. </param>
    </member>
    <member name="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Guid" /> usando gli interi e la matrice di byte specificati.</summary>
      <param name="a">Primi 4 byte del GUID. </param>
      <param name="b">I 2 byte successivi del GUID. </param>
      <param name="c">I 2 byte successivi del GUID. </param>
      <param name="d">Gli 8 byte rimanenti del GUID. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> è null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="d" /> non ha una lunghezza di 8 byte. </exception>
    </member>
    <member name="M:System.Guid.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Guid" /> con il valore rappresentato dalla stringa specificata.</summary>
      <param name="g">Stringa contenente un GUID in uno dei seguenti formati ("d" rappresenta una cifra esadecimale, senza distinzione tra maiuscole e minuscole): 32 cifre contigue: dddddddddddddddddddddddddddddddd -oppure- Gruppi di 8, 4, 4, 4 e 12 cifre, separati da trattini.L'intero GUID può eventualmente essere racchiuso tra parentesi tonde o graffe:dddddddd-dddd-dddd-dddd-dddddddddddd -oppure- {dddddddd-dddd-dddd-dddd-dddddddddddd} -oppure- (dddddddd-dddd-dddd-dddd-dddddddddddd) -oppure- Gruppi di 8, 4 e 4 cifre e un sottoinsieme di 8 gruppi di 2 cifre, ciascun gruppo con il prefisso "0x" o "0X" e separato da virgole.Sia l'intero GUID che il sottoinsieme sono racchiusi tra parentesi graffe:{0xdddddddd, 0xdddd, 0xdddd,{0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd}} Le parentesi, le virgole e i prefissi "0x" sono obbligatori.Tutti gli spazi eventualmente incorporati vengono ignorati.Gli zeri iniziali di un gruppo vengono ignorati.Le cifre visualizzate in un gruppo rappresentano il numero massimo di cifre significative che il gruppo può contenere.È possibile specificare un numero di cifre compreso tra 1 e il numero di cifre visualizzate per un gruppo.Tali cifre vengono considerate come le cifre di base del gruppo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> è null. </exception>
      <exception cref="T:System.FormatException">Il formato di <paramref name="g" /> non è valido. </exception>
      <exception cref="T:System.OverflowException">Il formato di <paramref name="g" /> non è valido. </exception>
    </member>
    <member name="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Guid" /> usando gli interi senza segno e i byte specificati.</summary>
      <param name="a">Primi 4 byte del GUID. </param>
      <param name="b">I 2 byte successivi del GUID. </param>
      <param name="c">I 2 byte successivi del GUID. </param>
      <param name="d">Byte successivo del GUID. </param>
      <param name="e">Byte successivo del GUID. </param>
      <param name="f">Byte successivo del GUID. </param>
      <param name="g">Byte successivo del GUID. </param>
      <param name="h">Byte successivo del GUID. </param>
      <param name="i">Byte successivo del GUID. </param>
      <param name="j">Byte successivo del GUID. </param>
      <param name="k">Byte successivo del GUID. </param>
    </member>
    <member name="M:System.Guid.CompareTo(System.Guid)">
      <summary>Confronta questa istanza con un oggetto <see cref="T:System.Guid" /> specificato e restituisce un'indicazione dei valori relativi.</summary>
      <returns>Numero con segno che indica i valori relativi di questa istanza e di <paramref name="value" />.Valore restituito Descrizione Intero negativo L'istanza è minore di <paramref name="value" />. Zero L'istanza è uguale a <paramref name="value" />. Intero positivo L'istanza è maggiore di <paramref name="value" />. </returns>
      <param name="value">Oggetto da confrontare con questa istanza.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Guid.Empty">
      <summary>Istanza di sola lettura della struttura <see cref="T:System.Guid" />, i cui valori sono tutti pari a zero.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.Equals(System.Guid)">
      <summary>Restituisce un valore che indica se l'istanza e un oggetto <see cref="T:System.Guid" /> specificato rappresentano lo stesso valore.</summary>
      <returns>true se <paramref name="g" /> è uguale all'istanza; in caso contrario, false.</returns>
      <param name="g">Oggetto da confrontare con questa istanza.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="o" /> è un <see cref="T:System.Guid" /> con lo stesso valore di questa istanza; in caso contrario, false.</returns>
      <param name="o">Oggetto da confrontare con questa istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.GetHashCode">
      <summary>Restituisce il codice hash relativo a questa istanza.</summary>
      <returns>Codice hash per l'istanza.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.NewGuid">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Guid" />.</summary>
      <returns>Nuovo oggetto GUID.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.op_Equality(System.Guid,System.Guid)">
      <summary>Indica se i valori di due oggetti <see cref="T:System.Guid" /> specificati sono uguali.</summary>
      <returns>true se <paramref name="a" /> e <paramref name="b" /> sono uguali; in caso contrario, false.</returns>
      <param name="a">Primo oggetto da confrontare. </param>
      <param name="b">Secondo oggetto da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Guid.op_Inequality(System.Guid,System.Guid)">
      <summary>Indica se i valori di due oggetti <see cref="T:System.Guid" /> specificati non sono uguali.</summary>
      <returns>true se <paramref name="a" /> e <paramref name="b" /> non sono uguali; in caso contrario, false.</returns>
      <param name="a">Primo oggetto da confrontare. </param>
      <param name="b">Secondo oggetto da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Guid.Parse(System.String)">
      <summary>Converte la rappresentazione di stringa di un GUID nella struttura <see cref="T:System.Guid" /> equivalente.</summary>
      <returns>Struttura che contiene il valore analizzato.</returns>
      <param name="input">Stringa da convertire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non è in un formato riconosciuto.</exception>
    </member>
    <member name="M:System.Guid.ParseExact(System.String,System.String)">
      <summary>Converte la rappresentazione di stringa di un GUID nella struttura <see cref="T:System.Guid" /> equivalente, purché la stringa sia nel formato specificato.</summary>
      <returns>Struttura che contiene il valore analizzato.</returns>
      <param name="input">GUID da convertire.</param>
      <param name="format">Uno dei seguenti identificatori, che indica il formato esatto da usare durante l'interpretazione di <paramref name="input" />: "N", "D", "B", "P" o "X".</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="format" /> è null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" />non è nel formato specificato da <paramref name="format" />.</exception>
    </member>
    <member name="M:System.Guid.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta questa istanza con un oggetto specificato e restituisce un'indicazione dei valori relativi. </summary>
      <returns>Numero con segno che indica i valori relativi di questa istanza e di <paramref name="value" />.Valore restituito Descrizione Intero negativo L'istanza è minore di <paramref name="value" />. Zero L'istanza è uguale a <paramref name="value" />. Intero positivo L'istanza è maggiore di <paramref name="value" /> oppure <paramref name="value" /> è null. </returns>
      <param name="value">Oggetto da confrontare o null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> non è un oggetto <see cref="T:System.Guid" />. </exception>
    </member>
    <member name="M:System.Guid.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Restituisce una rappresentazione di stringa del valore di questa istanza, in base all'identificatore di formato specificato.</summary>
      <returns>Valore dell'oggetto <see cref="T:System.Guid" />, rappresentato come una serie di cifre esadecimali minuscole nel formato specificato.</returns>
      <param name="format">Identificatore di formato singolo che indica le modalità di formattazione del valore dell'oggetto <see cref="T:System.Guid" />.Il parametro <paramref name="format" /> può essere "N", "D", "B", "P" o "X".Se <paramref name="format" /> è null o una stringa vuota (""), viene usato "D".</param>
      <param name="provider">(Riservato) Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <exception cref="T:System.FormatException">Il valore di <paramref name="format" /> non è null né una stringa vuota ("") né alcuno dei seguenti identificatori di formato singoli, ovvero "N", "D", "B", "P" o "X"</exception>
    </member>
    <member name="M:System.Guid.ToByteArray">
      <summary>Restituisce una matrice di byte a 16 elementi che contiene il valore di questa istanza.</summary>
      <returns>Matrice di byte a 16 elementi.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.ToString">
      <summary>Restituisce una rappresentazione di stringa del valore di questa istanza nel formato del Registro di sistema.</summary>
      <returns>Valore di questo oggetto <see cref="T:System.Guid" />, formattato usando l'identificatore di formato "D" come indicato di seguito: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx dove il valore del GUID è rappresentato da una serie di cifre esadecimali minuscole disposte in gruppi di 8, 4, 4, 4 e 12 cifre separati da trattini.Un esempio di valore restituito è "382c74c3-721d-4f34-80e5-57657b6cbc27".Per convertire le cifre esadecimali dalla a alla f in maiuscolo, chiamare il metodo <see cref="M:System.String.ToUpper" /> sulla stringa restituita.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.ToString(System.String)">
      <summary>Restituisce una rappresentazione di stringa del valore di questa istanza <see cref="T:System.Guid" />, in base all'identificatore di formato specificato.</summary>
      <returns>Valore dell'oggetto <see cref="T:System.Guid" />, rappresentato come una serie di cifre esadecimali minuscole nel formato specificato. </returns>
      <param name="format">Identificatore di formato singolo che indica le modalità di formattazione di <see cref="T:System.Guid" />.Il parametro <paramref name="format" /> può essere "N", "D", "B", "P" o "X".Se <paramref name="format" /> è null o una stringa vuota (""), viene usato "D".</param>
      <exception cref="T:System.FormatException">Il valore di <paramref name="format" /> non è null, una stringa vuota (""), "N", "D", "B", "P" o "X". </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.TryParse(System.String,System.Guid@)">
      <summary>Converte la rappresentazione di stringa di un GUID nella struttura <see cref="T:System.Guid" /> equivalente. </summary>
      <returns>true se l'operazione di analisi ha avuto esito positivo; in caso contrario, false.</returns>
      <param name="input">GUID da convertire.</param>
      <param name="result">Struttura che conterrà il valore analizzato.Se il metodo restituisce true, <paramref name="result" /> contiene un oggetto <see cref="T:System.Guid" /> valido.Se il metodo restituisce false, <paramref name="result" /> è uguale a <see cref="F:System.Guid.Empty" />.</param>
    </member>
    <member name="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
      <summary>Converte la rappresentazione di stringa di un GUID nella struttura <see cref="T:System.Guid" /> equivalente, purché la stringa sia nel formato specificato.</summary>
      <returns>true se l'operazione di analisi ha avuto esito positivo; in caso contrario, false.</returns>
      <param name="input">GUID da convertire.</param>
      <param name="format">Uno dei seguenti identificatori, che indica il formato esatto da usare durante l'interpretazione di <paramref name="input" />: "N", "D", "B", "P" o "X".</param>
      <param name="result">Struttura che conterrà il valore analizzato.Se il metodo restituisce true, <paramref name="result" /> contiene un oggetto <see cref="T:System.Guid" /> valido.Se il metodo restituisce false, <paramref name="result" /> è uguale a <see cref="F:System.Guid.Empty" />.</param>
    </member>
    <member name="T:System.IAsyncResult">
      <summary>Rappresenta lo stato di un'operazione asincrona. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.AsyncState">
      <summary>Ottiene un oggetto definito dall'utente qualificato per un'operazione asincrona o contenente informazioni relative a un'operazione asincrona.</summary>
      <returns>Oggetto definito dall'utente qualificato per un'operazione asincrona o contenente informazioni relative a un'operazione asincrona.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.AsyncWaitHandle">
      <summary>Ottiene un <see cref="T:System.Threading.WaitHandle" />, utilizzato per attendere il completamento di un'operazione asincrona.</summary>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> utilizzato per attendere il completamento di un'operazione asincrona.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.CompletedSynchronously">
      <summary>Ottiene un valore che indica il completamento in modo sincrono di un'operazione asincrona.</summary>
      <returns>true se l'operazione asincrona è stata completata in modo sincrono, in caso contrario false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.IsCompleted">
      <summary>Ottiene un valore che indica l'eventuale completamento dell'operazione asincrona.</summary>
      <returns>true se l'operazione viene completata, in caso contrario false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IComparable">
      <summary>Definisce un metodo di confronto specifico del tipo generalizzato che viene implementato da una classe o da un tipo di valore per ordinare le relative istanze.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IComparable.CompareTo(System.Object)">
      <summary>Confronta l'istanza corrente a un altro oggetto dello stesso tipo e restituisce un Integer che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
      <returns>Valore che indica l'ordine relativo degli oggetti confrontati.Il valore restituito ha i seguenti significati:Valore Significato Minore di zero Questa istanza precede <paramref name="obj" /> nei criteri di ordinamento. Zero Questa istanza si presenta nella stessa posizione di <paramref name="obj" /> all'interno dell'ordinamento. Maggiore di zero Questa istanza segue <paramref name="obj" /> nei criteri di ordinamento. </returns>
      <param name="obj">Oggetto da confrontare con l'istanza. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> non ha lo stesso tipo di questa istanza. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IComparable`1">
      <summary>Definisce un metodo di confronto generalizzato che viene implementato da un tipo di valore o da una classe per creare un metodo di confronto specifico del tipo per l'ordinamento delle istanze.</summary>
      <typeparam name="T">Tipo di oggetto da confrontare. Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IComparable`1.CompareTo(`0)">
      <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento. </summary>
      <returns>Valore che indica l'ordine relativo degli oggetti confrontati.Il valore restituito ha i seguenti significati:Valore Significato Minore di zero Questa istanza precede <paramref name="other" /> nell'ordinamento.  Zero Questa istanza si presenta nella stessa posizione di <paramref name="other" /> all'interno dell'ordinamento. Maggiore di zero Questa istanza segue <paramref name="other" /> nei criteri di ordinamento. </returns>
      <param name="other">Oggetto da confrontare con l'istanza. </param>
    </member>
    <member name="T:System.IConvertible">
      <summary>Definisce i metodi per convertire il valore del riferimento o il tipo di valore di implementazione in un tipo Common Language Runtime con un valore equivalente.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.GetTypeCode">
      <summary>Restituisce l'oggetto <see cref="T:System.TypeCode" /> per questa istanza.</summary>
      <returns>Costante enumerata che rappresenta l'oggetto <see cref="T:System.TypeCode" /> della classe o del tipo di valore che implementa questa interfaccia.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToBoolean(System.IFormatProvider)">
      <summary>Converte il valore di questa istanza in un valore Boolean equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Valore Boolean equivalente al valore di questa istanza.</returns>
      <param name="provider">Implementazione dell'interfaccia <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToByte(System.IFormatProvider)">
      <summary>Converte il valore di questa istanza in un valore intero senza segno a 8 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Valore intero senza segno a 8 bit equivalente al valore di questa istanza.</returns>
      <param name="provider">Implementazione dell'interfaccia <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToChar(System.IFormatProvider)">
      <summary>Converte il valore di questa istanza in un carattere Unicode equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Carattere Unicode equivalente al valore di questa istanza.</returns>
      <param name="provider">Implementazione dell'interfaccia <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToDateTime(System.IFormatProvider)">
      <summary>Converte il valore di questa istanza in un oggetto <see cref="T:System.DateTime" /> equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Istanza di <see cref="T:System.DateTime" /> equivalente al valore di questa istanza.</returns>
      <param name="provider">Implementazione dell'interfaccia <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToDecimal(System.IFormatProvider)">
      <summary>Converte il valore di questa istanza in un numero <see cref="T:System.Decimal" /> equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Numero <see cref="T:System.Decimal" /> equivalente al valore di questa istanza.</returns>
      <param name="provider">Implementazione dell'interfaccia <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToDouble(System.IFormatProvider)">
      <summary>Converte il valore di questa istanza in un numero in virgola mobile e precisione doppia mediante le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Numero in virgola mobile e precisione doppia equivalente al valore di questa istanza.</returns>
      <param name="provider">Implementazione dell'interfaccia <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToInt16(System.IFormatProvider)">
      <summary>Converte il valore di questa istanza in un valore intero con segno a 16 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Valore intero con segno a 16 bit equivalente al valore di questa istanza.</returns>
      <param name="provider">Implementazione dell'interfaccia <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToInt32(System.IFormatProvider)">
      <summary>Converte il valore di questa istanza in un valore intero con segno a 32 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Valore intero con segno a 32 bit equivalente al valore di questa istanza.</returns>
      <param name="provider">Implementazione dell'interfaccia <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToInt64(System.IFormatProvider)">
      <summary>Converte il valore di questa istanza in un valore intero con segno a 64 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Valore intero con segno a 64 bit equivalente al valore di questa istanza.</returns>
      <param name="provider">Implementazione dell'interfaccia <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToSByte(System.IFormatProvider)">
      <summary>Converte il valore di questa istanza in un valore intero con segno a 8 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Valore intero con segno a 8 bit equivalente al valore di questa istanza.</returns>
      <param name="provider">Implementazione dell'interfaccia <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToSingle(System.IFormatProvider)">
      <summary>Converte il valore di questa istanza in un numero in virgola mobile e precisione singola mediante le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Numero in virgola mobile e precisione singola equivalente al valore di questa istanza.</returns>
      <param name="provider">Implementazione dell'interfaccia <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToString(System.IFormatProvider)">
      <summary>Converte il valore di questa istanza in un oggetto <see cref="T:System.String" /> equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Istanza di <see cref="T:System.String" /> equivalente al valore di questa istanza.</returns>
      <param name="provider">Implementazione dell'interfaccia <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)">
      <summary>Converte il valore di questa istanza in un oggetto <see cref="T:System.Object" /> con attributo <see cref="T:System.Type" /> specificato dal valore equivalente, mediante le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Istanza di <see cref="T:System.Object" /> di tipo <paramref name="conversionType" /> il cui valore è equivalente al valore di questa istanza.</returns>
      <param name="conversionType">Oggetto <see cref="T:System.Type" /> nel quale viene convertito il valore di questa istanza. </param>
      <param name="provider">Implementazione dell'interfaccia <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToUInt16(System.IFormatProvider)">
      <summary>Converte il valore di questa istanza in un valore intero senza segno a 16 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Valore intero senza segno a 16 bit equivalente al valore di questa istanza.</returns>
      <param name="provider">Implementazione dell'interfaccia <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToUInt32(System.IFormatProvider)">
      <summary>Converte il valore di questa istanza in un valore intero senza segno a 32 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Valore intero senza segno a 32 bit equivalente al valore di questa istanza.</returns>
      <param name="provider">Implementazione dell'interfaccia <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToUInt64(System.IFormatProvider)">
      <summary>Converte il valore di questa istanza in un valore intero senza segno a 64 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Valore intero senza segno a 64 bit equivalente al valore di questa istanza.</returns>
      <param name="provider">Implementazione dell'interfaccia <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ICustomFormatter">
      <summary>Definisce un metodo che supporta la formattazione personalizzata del valore di un oggetto.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
      <summary>Converte il valore di un oggetto specificato in una rappresentazione in forma di stringa equivalente utilizzando il formato e le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione in forma di stringa del valore di <paramref name="arg" />, formattato come specificato dai parametri <paramref name="format" /> e <paramref name="formatProvider" />.</returns>
      <param name="format">Stringa di formato contenente specifiche di formato. </param>
      <param name="arg">Oggetto da formattare. </param>
      <param name="formatProvider">Oggetto che fornisce informazioni sul formato relative all'istanza corrente. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IDisposable">
      <summary>Offre un meccanismo per il rilascio delle risorse non gestite.Per esaminare il codice sorgente di .NET Framework per questo tipo, vedere Origine riferimento.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IDisposable.Dispose">
      <summary>Esegue attività definite dall'applicazione, come rilasciare o reimpostare risorse non gestite.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IEquatable`1">
      <summary>Definisce un metodo generalizzato che viene implementato da un tipo di valore o da una classe per creare un metodo specifico del tipo per determinare l'uguaglianza fra istanze.</summary>
      <typeparam name="T">Tipo di oggetti da confrontare.</typeparam>
    </member>
    <member name="M:System.IEquatable`1.Equals(`0)">
      <summary>Indica se l'oggetto corrente è uguale a un altro oggetto dello stesso tipo.</summary>
      <returns>true se l'oggetto corrente è uguale al parametro <paramref name="other" />; in caso contrario, false.</returns>
      <param name="other">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="T:System.IFormatProvider">
      <summary>Offre un meccanismo per recuperare un oggetto di controllo della formattazione.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IFormatProvider.GetFormat(System.Type)">
      <summary>Restituisce un oggetto che fornisce servizi di formattazione per il tipo specificato.</summary>
      <returns>Istanza dell'oggetto specificato da <paramref name="formatType" />, se l'implementazione di <see cref="T:System.IFormatProvider" /> è in grado di fornire quel tipo di oggetto; in caso contrario, null.</returns>
      <param name="formatType">Oggetto in cui si specifica il tipo di oggetto Format da restituire. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.IFormattable">
      <summary>Fornisce la funzionalità per formattare il valore di un oggetto in una rappresentazione in formato di stringa.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
      <summary>Formatta il valore dell'istanza corrente utilizzando il formato specificato.</summary>
      <returns>Valore dell'istanza corrente nel formato specificato.</returns>
      <param name="format">Formato da utilizzare- oppure - Riferimento Null (Nothing in Visual Basic) per utilizzare il formato definito per il tipo di implementazione di <see cref="T:System.IFormattable" />. </param>
      <param name="formatProvider">Provider da utilizzare per formattare il valore.- oppure - Riferimento Null (Nothing in Visual Basic) per ottenere le informazioni sul formato numerico dalle impostazioni locali correnti del sistema operativo. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IndexOutOfRangeException">
      <summary>Eccezione generata quando si cerca di accedere a un elemento di una matrice con un indice che non rientra nei limiti della matrice. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IndexOutOfRangeException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IndexOutOfRangeException" />.</summary>
    </member>
    <member name="M:System.IndexOutOfRangeException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IndexOutOfRangeException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore. </param>
    </member>
    <member name="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IndexOutOfRangeException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione. </param>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente.Se il parametro <paramref name="innerException" /> non è un riferimento Null (Nothing in Visual Basic), l'eccezione corrente viene generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.InsufficientExecutionStackException">
      <summary>Eccezione generata quando lo stack di esecuzione disponibile è insufficiente per consentire l'esecuzione della maggior parte dei metodi.</summary>
    </member>
    <member name="M:System.InsufficientExecutionStackException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.InsufficientExecutionStackException" />. </summary>
    </member>
    <member name="M:System.InsufficientExecutionStackException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.InsufficientExecutionStackException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
    </member>
    <member name="M:System.InsufficientExecutionStackException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.InsufficientExecutionStackException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="innerException">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="inner" /> non è null, l'eccezione corrente verrà generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.Int16">
      <summary>Rappresenta un intero con segno a 16 bit.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.CompareTo(System.Int16)">
      <summary>Confronta questa istanza con un intero con segno a 16 bit specificato e restituisce un intero che indica se il valore di questa istanza è minore, uguale o maggiore rispetto a quello dell'intero con segno a 16 bit.</summary>
      <returns>Numero con segno che indica i valori relativi di questa istanza e di <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Intero da confrontare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.Equals(System.Int16)">
      <summary>Restituisce un valore che indica se l'istanza è uguale a un valore <see cref="T:System.Int16" /> specificato.</summary>
      <returns>true se <paramref name="obj" /> ha lo stesso valore di questa istanza; in caso contrario, false.</returns>
      <param name="obj">Valore <see cref="T:System.Int16" /> da confrontare con questa istanza.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="obj" /> è un'istanza di <see cref="T:System.Int16" /> ed è uguale al valore dell'istanza; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Int16.MaxValue">
      <summary>Rappresenta il valore massimo possibile di un oggetto <see cref="T:System.Int16" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Int16.MinValue">
      <summary>Rappresenta il valore più piccolo possibile di <see cref="T:System.Int16" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String)">
      <summary>Converte la rappresentazione di stringa di un numero nell'equivalente intero con segno a 16 bit.</summary>
      <returns>Intero con segno a 16 bit equivalente al numero contenuto in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato nell'equivalente intero con segno a 16 bit.</summary>
      <returns>Intero con segno a 16 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. -or-<paramref name="s" /> includes non-zero fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato e in un formato specifico delle impostazioni cultura nell'equivalente intero con segno a 16 bit.</summary>
      <returns>Intero con segno a 16 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura relative a <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. -or-<paramref name="s" /> includes non-zero fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in un formato specifico delle impostazioni cultura nell'equivalente intero con segno a 16 bit.</summary>
      <returns>Intero con segno a 16 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="provider">Oggetto <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura relative a <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
      <returns>Intero con segno che indica l'ordine relativo dell'istanza e di <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Oggetto da confrontare con questa istanza o null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Int16" />. </exception>
    </member>
    <member name="M:System.Int16.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Int16.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true se il valore dell'istanza corrente non è uguale a zero; in caso contrario, false.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Byte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Char" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Questa conversione non è supportata.Non vengono restituiti valori.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Double" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, invariato.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.SByte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Single" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <paramref name="type" />.</returns>
      <param name="type">Tipo nel quale convertire questo valore <see cref="T:System.Int16" />.</param>
      <param name="provider">Implementazione <see cref="T:System.IFormatProvider" /> che fornisce informazioni sul formato del valore restituito.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, invariato.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int16.ToString">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente.</summary>
      <returns>La rappresentazione di stringa del valore di questa istanza, composta dal segno meno (se il valore è negativo) e da una sequenza di cifre comprese tra 0 e 9 senza zeri iniziali.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.ToString(System.IFormatProvider)">
      <summary>Converte il valore numerico di questa istanza nella rappresentazione di stringa equivalente usando le informazioni di formato specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="provider" />.</returns>
      <param name="provider">Oggetto <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura selezionate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.ToString(System.String)">
      <summary>Converte il valore numerico di questa istanza nell'equivalente rappresentazione di stringa usando il formato specificato.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="format" />.</returns>
      <param name="format">Stringa di formato numerico.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.ToString(System.String,System.IFormatProvider)">
      <summary>Consente di convertire il valore numerico dell'istanza corrente nella rappresentazione di stringa equivalente usando il formato specificato e le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza corrente, in base a quanto specificato da <paramref name="format" /> e <paramref name="provider" />.</returns>
      <param name="format">Stringa di formato numerico.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato e in un formato specifico delle impostazioni cultura nell'equivalente intero con segno a 16 bit.Un valore restituito indica se la conversione è riuscita o meno.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa contenente un numero da convertire.La stringa viene interpreta usando lo stile specificato da <paramref name="style" />.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <param name="result">Quando questo metodo viene restituito, contiene l'intero con segno a 16 bit equivalente al numero contenuto in <paramref name="s" />, se la conversione riesce oppure zero se la conversione non riesce.La conversione non riesce se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" /> non presenta un formato conforme a <paramref name="style" /> o rappresenta un numero minore di <see cref="F:System.Int16.MinValue" /> o maggiore di <see cref="F:System.Int16.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.TryParse(System.String,System.Int16@)">
      <summary>Converte la rappresentazione di stringa di un numero nell'equivalente intero con segno a 16 bit.Un valore restituito indica se la conversione è riuscita o meno.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="result">Quando questo metodo viene restituito, contiene l'intero con segno a 16 bit equivalente al numero contenuto in <paramref name="s" />, se la conversione riesce oppure zero se la conversione non riesce.La conversione non riesce se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" />, non è in formato corretto o rappresenta un numero minore di <see cref="F:System.Int16.MinValue" /> o maggiore di <see cref="F:System.Int16.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Int32">
      <summary>Rappresenta un intero con segno a 32 bit.Per esaminare il codice sorgente di .NET Framework per questo tipo, vedere Origine riferimento.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.CompareTo(System.Int32)">
      <summary>Confronta questa istanza con un intero con segno a 32 bit specificato e restituisce un'indicazione dei valori relativi.</summary>
      <returns>Numero con segno che indica i valori relativi di questa istanza e di <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Intero da confrontare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.Equals(System.Int32)">
      <summary>Restituisce un valore che indica se l'istanza è uguale a un valore <see cref="T:System.Int32" /> specificato. </summary>
      <returns>true se <paramref name="obj" /> ha lo stesso valore di questa istanza; in caso contrario, false.</returns>
      <param name="obj">Valore <see cref="T:System.Int32" /> da confrontare con questa istanza.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="obj" /> è un'istanza di <see cref="T:System.Int32" /> ed è uguale al valore dell'istanza; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Int32.MaxValue">
      <summary>Rappresenta il valore massimo possibile di un oggetto <see cref="T:System.Int32" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Int32.MinValue">
      <summary>Rappresenta il valore più piccolo possibile di <see cref="T:System.Int32" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String)">
      <summary>Converte la rappresentazione di stringa di un numero nell'equivalente intero con segno a 32 bit.</summary>
      <returns>Intero con segno a 32 bit equivalente al numero contenuto in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato nell'equivalente intero con segno a 32 bit.</summary>
      <returns>Intero con segno a 32 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato e in un formato specifico delle impostazioni cultura nell'equivalente intero con segno a 32 bit.</summary>
      <returns>Intero con segno a 32 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto che fornisce informazioni specifiche delle impostazioni cultura relative al formato di <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in un formato specifico delle impostazioni cultura nell'equivalente intero con segno a 32 bit.</summary>
      <returns>Intero con segno a 32 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
      <returns>Intero con segno che indica l'ordine relativo dell'istanza e di <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Oggetto da confrontare con questa istanza o null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an <see cref="T:System.Int32" />. </exception>
    </member>
    <member name="M:System.Int32.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true se il valore dell'istanza corrente non è uguale a zero; in caso contrario, false.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Byte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Char" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Questa conversione non è supportata.Non vengono restituiti valori.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Double" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int16" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, invariato.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.SByte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Single" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <paramref name="type" />.</returns>
      <param name="type">Tipo nel quale convertire questo valore <see cref="T:System.Int32" />.</param>
      <param name="provider">Oggetto che fornisce informazioni sul formato del valore restituito.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt16" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int32.ToString">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, composta da un segno negativo (se il valore è negativo) e una sequenza di cifre comprese tra 0 e 9 senza zeri iniziali.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.ToString(System.IFormatProvider)">
      <summary>Converte il valore numerico di questa istanza nella rappresentazione di stringa equivalente usando le informazioni di formato specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="provider" />.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.ToString(System.String)">
      <summary>Converte il valore numerico di questa istanza nell'equivalente rappresentazione di stringa usando il formato specificato.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="format" />.</returns>
      <param name="format">Stringa di formato numerico standard o personalizzato.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.ToString(System.String,System.IFormatProvider)">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente usando il formato specificato e le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza corrente, in base a quanto specificato da <paramref name="format" /> e <paramref name="provider" />.</returns>
      <param name="format">Stringa di formato numerico standard o personalizzato.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato e in un formato specifico delle impostazioni cultura nell'equivalente intero con segno a 32 bit.Un valore restituito indica se la conversione è riuscita.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa contenente un numero da convertire.La stringa viene interpreta usando lo stile specificato da <paramref name="style" />.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <param name="result">Quando questo metodo viene restituito, contiene l'intero con segno a 32 bit equivalente al numero contenuto in <paramref name="s" />, se la conversione riesce oppure zero se la conversione non riesce.La conversione non riesce se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" /> non presenta un formato conforme a <paramref name="style" /> o rappresenta un numero minore di <see cref="F:System.Int32.MinValue" /> o maggiore di <see cref="F:System.Int32.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.TryParse(System.String,System.Int32@)">
      <summary>Converte la rappresentazione di stringa di un numero nell'equivalente intero con segno a 32 bit.Un valore restituito indica se la conversione è riuscita.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="result">Quando questo metodo viene restituito, contiene l'intero con segno a 32 bit equivalente al numero contenuto in <paramref name="s" />, se la conversione riesce oppure zero se la conversione non riesce.La conversione non riesce se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" />, non è in formato corretto o rappresenta un numero minore di <see cref="F:System.Int32.MinValue" /> o maggiore di <see cref="F:System.Int32.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Int64">
      <summary>Rappresenta un intero con segno a 64 bit.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.CompareTo(System.Int64)">
      <summary>Confronta questa istanza con un intero con segno a 64 bit specificato e restituisce un'indicazione dei valori relativi.</summary>
      <returns>Numero con segno che indica i valori relativi di questa istanza e di <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Intero da confrontare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.Equals(System.Int64)">
      <summary>Restituisce un valore che indica se l'istanza è uguale a un valore <see cref="T:System.Int64" /> specificato.</summary>
      <returns>true se <paramref name="obj" /> ha lo stesso valore di questa istanza; in caso contrario, false.</returns>
      <param name="obj">Valore <see cref="T:System.Int64" /> da confrontare con questa istanza.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="obj" /> è un'istanza di <see cref="T:System.Int64" /> ed è uguale al valore dell'istanza; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Int64.MaxValue">
      <summary>Rappresenta il valore massimo possibile di un oggetto Int64.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Int64.MinValue">
      <summary>Rappresenta il valore minimo possibile di Int64.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String)">
      <summary>Converte la rappresentazione di stringa di un numero nell'equivalente intero con segno a 64 bit.</summary>
      <returns>Intero con segno a 64 bit equivalente al numero contenuto in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato nell'equivalente intero con segno a 64 bit.</summary>
      <returns>Intero con segno a 64 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="style">Combinazione bit per bit dei valori <see cref="T:System.Globalization.NumberStyles" /> che indicano il formato consentito di <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.-or-<paramref name="style" /> supports fractional digits but <paramref name="s" /> includes non-zero fractional digits. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato e in un formato specifico delle impostazioni cultura nell'equivalente intero con segno a 64 bit.</summary>
      <returns>Intero con segno a 64 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura relative a <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. -or-<paramref name="style" /> supports fractional digits, but <paramref name="s" /> includes non-zero fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in un formato specifico delle impostazioni cultura nell'equivalente intero con segno a 64 bit.</summary>
      <returns>Intero con segno a 64 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
      <returns>Intero con segno che indica l'ordine relativo dell'istanza e di <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Oggetto da confrontare con questa istanza o null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an <see cref="T:System.Int64" />. </exception>
    </member>
    <member name="M:System.Int64.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Int64.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true se il valore dell'istanza corrente non è uguale a zero; in caso contrario, false.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Byte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Char" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Questa conversione non è supportata.Non vengono restituiti valori.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Double" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int16" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, invariato.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.SByte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Single" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <paramref name="type" />.</returns>
      <param name="type">Tipo nel quale convertire questo valore <see cref="T:System.Int64" />.</param>
      <param name="provider">Implementazione <see cref="T:System.IFormatProvider" /> che fornisce informazioni sul formato del valore restituito.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt16" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Int64.ToString">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente.</summary>
      <returns>La rappresentazione di stringa del valore di questa istanza, composta dal segno meno (se il valore è negativo) e da una sequenza di cifre comprese tra 0 e 9 senza zeri iniziali.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.ToString(System.IFormatProvider)">
      <summary>Converte il valore numerico di questa istanza nella rappresentazione di stringa equivalente usando le informazioni di formato specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="provider" />.</returns>
      <param name="provider">Oggetto <see cref="T:System.IFormatProvider" /> che fornisce informazioni di formattazione specifiche delle impostazioni cultura selezionate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.ToString(System.String)">
      <summary>Converte il valore numerico di questa istanza nell'equivalente rappresentazione di stringa usando il formato specificato.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="format" />.</returns>
      <param name="format">Stringa di formato numerico.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.ToString(System.String,System.IFormatProvider)">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente usando il formato specificato e le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza corrente, in base a quanto specificato da <paramref name="format" /> e <paramref name="provider" />.</returns>
      <param name="format">Stringa di formato numerico.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente all'istanza. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato e in un formato specifico delle impostazioni cultura nell'equivalente intero con segno a 64 bit.Un valore restituito indica se la conversione è riuscita o meno.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa contenente un numero da convertire.La stringa viene interpreta usando lo stile specificato da <paramref name="style" />.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <param name="result">Quando questo metodo viene restituito, contiene l'intero con segno a 64 bit equivalente al numero contenuto in <paramref name="s" />, se la conversione riesce oppure zero se la conversione non riesce.La conversione non riesce se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" /> non presenta un formato conforme a <paramref name="style" /> o rappresenta un numero minore di <see cref="F:System.Int64.MinValue" /> o maggiore di <see cref="F:System.Int64.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.TryParse(System.String,System.Int64@)">
      <summary>Converte la rappresentazione di stringa di un numero nell'equivalente intero con segno a 64 bit.Un valore restituito indica se la conversione è riuscita o meno.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="result">Quando questo metodo viene restituito, contiene l'intero con segno a 64 bit equivalente al numero contenuto in <paramref name="s" />, se la conversione riesce oppure zero se la conversione non riesce.La conversione non riesce se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" />, non è in formato corretto o rappresenta un numero minore di <see cref="F:System.Int64.MinValue" /> o maggiore di <see cref="F:System.Int64.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.IntPtr">
      <summary>Tipo specifico per la piattaforma utilizzato per rappresentare un puntatore o un handle.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.IntPtr" /> utilizzando il puntatore o handle a 32 bit specificato.</summary>
      <param name="value">Puntatore o handle contenuto in un intero con segno a 32 bit. </param>
    </member>
    <member name="M:System.IntPtr.#ctor(System.Int64)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.IntPtr" /> utilizzando il puntatore a 64 bit specificato.</summary>
      <param name="value">Puntatore o handle contenuto in un intero con segno a 64 bit. </param>
      <exception cref="T:System.OverflowException">Su una piattaforma a 32 bit <paramref name="value" /> è troppo grande o troppo piccolo per essere rappresentato come <see cref="T:System.IntPtr" />. </exception>
    </member>
    <member name="M:System.IntPtr.#ctor(System.Void*)">
      <summary>Consente di inizializzare una nuova istanza di <see cref="T:System.IntPtr" /> utilizzando il puntatore specificato a un tipo non specificato.</summary>
      <param name="value">Puntatore a un tipo non specificato. </param>
    </member>
    <member name="M:System.IntPtr.Add(System.IntPtr,System.Int32)">
      <summary>Aggiunge un offset al valore di un puntatore.</summary>
      <returns>Nuovo puntatore che riflette l'aggiunta di <paramref name="offset" /> a <paramref name="pointer" />.</returns>
      <param name="pointer">Puntatore a cui aggiungere l'offset.</param>
      <param name="offset">Offset da aggiungere.</param>
    </member>
    <member name="M:System.IntPtr.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="obj" /> è un'istanza di <see cref="T:System.IntPtr" /> ed è uguale al valore dell'istanza, in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza o null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IntPtr.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)">
      <summary>Aggiunge un offset al valore di un puntatore.</summary>
      <returns>Nuovo puntatore che riflette l'aggiunta di <paramref name="offset" /> a <paramref name="pointer" />.</returns>
      <param name="pointer">Puntatore a cui aggiungere l'offset.</param>
      <param name="offset">Offset da aggiungere.</param>
    </member>
    <member name="M:System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)">
      <summary>Determina se due istanze specificate di <see cref="T:System.IntPtr" /> sono uguali.</summary>
      <returns>true se <paramref name="value1" /> è uguale a <paramref name="value2" />, in caso contrario false.</returns>
      <param name="value1">Primo puntatore o handle da confrontare.</param>
      <param name="value2">Secondo puntatore o handle da confrontare.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.Int32)~System.IntPtr">
      <summary>Converte il valore di un intero con segno a 32 bit in un tipo <see cref="T:System.IntPtr" />.</summary>
      <returns>Nuova istanza di <see cref="T:System.IntPtr" /> inizializzata per <paramref name="value" />.</returns>
      <param name="value">Intero con segno a 32 bit. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.Int64)~System.IntPtr">
      <summary>Converte il valore di un intero con segno a 64 bit in un tipo <see cref="T:System.IntPtr" />.</summary>
      <returns>Nuova istanza di <see cref="T:System.IntPtr" /> inizializzata per <paramref name="value" />.</returns>
      <param name="value">Signed Integer a 64 bit. </param>
      <exception cref="T:System.OverflowException">Su una piattaforma a 32 bit, <paramref name="value" /> è troppo grande per rappresentare un tipo <see cref="T:System.IntPtr" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int64">
      <summary>Converte il valore dell'oggetto <see cref="T:System.IntPtr" /> specificato in un intero con segno a 64 bit.</summary>
      <returns>Contenuto di <paramref name="value" />.</returns>
      <param name="value">Puntatore o handle da convertire.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Void*">
      <summary>Consente di convertire il valore dell'oggetto <see cref="T:System.IntPtr" /> specificato in un puntatore a un tipo non specificato.</summary>
      <returns>Contenuto di <paramref name="value" />.</returns>
      <param name="value">Puntatore o handle da convertire. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int32">
      <summary>Converte il valore dell'oggetto <see cref="T:System.IntPtr" /> specificato in un intero con segno a 32 bit.</summary>
      <returns>Contenuto di <paramref name="value" />.</returns>
      <param name="value">Puntatore o handle da convertire.</param>
      <exception cref="T:System.OverflowException">Su una piattaforma a 64 bit il valore di <paramref name="value" /> è troppo grande per essere rappresentato come intero con segno a 32 bit. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.Void*)~System.IntPtr">
      <summary>Converte il puntatore specificato per un tipo non specificato in un oggetto <see cref="T:System.IntPtr" />.</summary>
      <returns>Nuova istanza di <see cref="T:System.IntPtr" /> inizializzata per <paramref name="value" />.</returns>
      <param name="value">Puntatore a un tipo non specificato. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)">
      <summary>Determina se due istanze specificate di <see cref="T:System.IntPtr" /> non sono uguali.</summary>
      <returns>true se <paramref name="value1" /> non è uguale a <paramref name="value2" />, in caso contrario false.</returns>
      <param name="value1">Primo puntatore o handle da confrontare. </param>
      <param name="value2">Secondo puntatore o handle da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)">
      <summary>Sottrae un offset dal valore di un puntatore.</summary>
      <returns>Nuovo puntatore che riflette la sottrazione di <paramref name="offset" /> da <paramref name="pointer" />.</returns>
      <param name="pointer">Puntatore da cui sottrarre l'offset.</param>
      <param name="offset">Offset da sottrarre.</param>
    </member>
    <member name="P:System.IntPtr.Size">
      <summary>Ottiene la dimensione dell'istanza.</summary>
      <returns>Dimensione in byte di un puntatore o handle nel processo in uso.Il valore della proprietà è 4 su un processo a 32 bit e 8 su un processo a 64 bit.È possibile definire il tipo di processo impostando l'opzione di /platform quando si compila il codice con i compilatori C# e Visual Basic.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.Subtract(System.IntPtr,System.Int32)">
      <summary>Sottrae un offset dal valore di un puntatore.</summary>
      <returns>Nuovo puntatore che riflette la sottrazione di <paramref name="offset" /> da <paramref name="pointer" />.</returns>
      <param name="pointer">Puntatore da cui sottrarre l'offset.</param>
      <param name="offset">Offset da sottrarre.</param>
    </member>
    <member name="M:System.IntPtr.ToInt32">
      <summary>Converte il valore dell'istanza in un intero con segno a 32 bit.</summary>
      <returns>Intero con segno a 32 bit uguale al valore dell'istanza.</returns>
      <exception cref="T:System.OverflowException">Su una piattaforma a 64 bit il valore dell'istanza è troppo grande o troppo piccolo per essere rappresentato come intero con segno a 32 bit. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToInt64">
      <summary>Converte il valore dell'istanza in un intero con segno a 64 bit.</summary>
      <returns>Intero con segno a 64 bit uguale al valore dell'istanza.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToPointer">
      <summary>Converte il valore dell'istanza in un puntatore per un tipo non specificato.</summary>
      <returns>Puntatore per l'oggetto <see cref="T:System.Void" />, ovvero puntatore per una memoria contenente dati di un tipo non specificato.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToString">
      <summary>Converte il valore numerico dell'oggetto <see cref="T:System.IntPtr" /> corrente nella rappresentazione in forma di stringa equivalente.</summary>
      <returns>Rappresentazione in forma di stringa del valore dell'istanza.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToString(System.String)">
      <summary>Converte il valore numerico dell'oggetto <see cref="T:System.IntPtr" /> corrente nella rappresentazione in forma di stringa equivalente.</summary>
      <returns>Rappresentazione in forma di stringa del valore dell'oggetto <see cref="T:System.IntPtr" /> corrente.</returns>
      <param name="format">Specifica di formato che determina la modalità di conversione dell'oggetto <see cref="T:System.IntPtr" /> corrente. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.IntPtr.Zero">
      <summary>Campo in sola lettura che rappresenta un puntatore o un handle inizializzato a zero.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.InvalidCastException">
      <summary>Eccezione generata a seguito di una conversione esplicita o un cast non valido.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.InvalidCastException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.InvalidCastException" />.</summary>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.InvalidCastException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore. </param>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.InvalidCastException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="innerException">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="innerException" /> non è null, l'eccezione corrente viene generata in un blocco catch in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.InvalidCastException" /> con un messaggio e il codice di errore specificati.</summary>
      <param name="message">Messaggio che indica il motivo per il quale è stata generata l'eccezione.</param>
      <param name="errorCode">Valore del codice di errore (HRESULT) associato all'eccezione.</param>
    </member>
    <member name="T:System.InvalidOperationException">
      <summary>Eccezione generata quando una chiamata a un metodo non è valida per lo stato corrente dell'oggetto.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.InvalidOperationException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="M:System.InvalidOperationException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.InvalidOperationException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore. </param>
    </member>
    <member name="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.InvalidOperationException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione. </param>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente.Se il parametro <paramref name="innerException" /> non è un riferimento Null (Nothing in Visual Basic), l'eccezione corrente viene generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.InvalidProgramException">
      <summary>Eccezione generata quando un programma contiene MSIL (Microsoft intermediate language) o metadati non validi.In genere segnala la presenza di un bug nel compilatore con cui è stato generato il programma.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.InvalidProgramException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.InvalidProgramException" /> con proprietà predefinite.</summary>
    </member>
    <member name="M:System.InvalidProgramException.#ctor(System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.InvalidProgramException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
    </member>
    <member name="M:System.InvalidProgramException.#ctor(System.String,System.Exception)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.InvalidProgramException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="inner">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="inner" /> non è un riferimento null (Nothing in Visual Basic), l'eccezione corrente viene generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.InvalidTimeZoneException">
      <summary>Eccezione generata quando le informazioni sul fuso orario non sono valide.</summary>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.InvalidTimeZoneException" /> con un messaggio fornito dal sistema.</summary>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.InvalidTimeZoneException" /> con la stringa del messaggio specificato.</summary>
      <param name="message">Stringa nella quale è descritta l'eccezione.</param>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.InvalidTimeZoneException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Stringa nella quale è descritta l'eccezione.    </param>
      <param name="innerException">Eccezione causa dell'eccezione corrente.  </param>
    </member>
    <member name="T:System.IObservable`1">
      <summary>Definisce un provider per la notifica basata su push.</summary>
      <typeparam name="T">Oggetto che fornisce informazioni di notifica.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
    </member>
    <member name="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
      <summary>Notifica al provider che un osservatore deve ricevere notifiche.</summary>
      <returns>Riferimento a un'interfaccia che consente agli osservatori di non ricevere più notifiche prima che il provider abbia ne abbia completato l'invio.</returns>
      <param name="observer">Oggetto che deve ricevere notifiche.</param>
    </member>
    <member name="T:System.IObserver`1">
      <summary>Fornisce un meccanismo per ricevere notifiche basate su push.</summary>
      <typeparam name="T">Oggetto che fornisce informazioni di notifica.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
    </member>
    <member name="M:System.IObserver`1.OnCompleted">
      <summary>Notifica all'osservatore che il provider ha completato l'invio di notifiche basate su push.</summary>
    </member>
    <member name="M:System.IObserver`1.OnError(System.Exception)">
      <summary>Notifica all'osservatore che il provider ha riscontrato una condizione di errore.</summary>
      <param name="error">Oggetto che fornisce informazioni aggiuntive su un errore.</param>
    </member>
    <member name="M:System.IObserver`1.OnNext(`0)">
      <summary>Fornisce all'osservatore nuovi dati.</summary>
      <param name="value">Informazioni di notifica correnti.</param>
    </member>
    <member name="T:System.IProgress`1">
      <summary>Definisce un provider per gli aggiornamenti di stato.</summary>
      <typeparam name="T">Tipo di valore di aggiornamento dello stato.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
    </member>
    <member name="M:System.IProgress`1.Report(`0)">
      <summary>Segnala un aggiornamento dello stato.</summary>
      <param name="value">Valore del progresso aggiornato.</param>
    </member>
    <member name="T:System.Lazy`1">
      <summary>Fornisce supporto per l'inizializzazione differita.</summary>
      <typeparam name="T">Tipo di oggetto inizializzato in modalità differita.</typeparam>
    </member>
    <member name="M:System.Lazy`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Lazy`1" />.Quando si verifica l'inizializzazione differita, viene utilizzato il costruttore predefinito del tipo di destinazione.</summary>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Lazy`1" />.Quando si verifica l'inizializzazione differita, vengono utilizzati il costruttore predefinito del tipo di destinazione e la modalità di inizializzazione specificata.</summary>
      <param name="isThreadSafe">true per far sì che l'istanza sia utilizzabile contemporaneamente da più thread; false per far sì che l'istanza sia utilizzabile da un solo thread alla volta. </param>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Lazy`1" />.Quando si verifica l'inizializzazione differita, viene utilizzata la funzione di inizializzazione specificata.</summary>
      <param name="valueFactory">Delegato richiamato per produrre il valore inizializzato in modalità differita quando necessario.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="valueFactory" /> è null. </exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0},System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Lazy`1" />.Quando si verifica l'inizializzazione differita, vengono utilizzate la funzione di inizializzazione e la modalità di inizializzazione specificate.</summary>
      <param name="valueFactory">Delegato richiamato per produrre il valore inizializzato in modalità differita quando necessario.</param>
      <param name="isThreadSafe">true per far sì che l'istanza sia utilizzabile contemporaneamente da più thread; false per far sì che l'istanza sia utilizzabile da un solo thread alla volta.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="valueFactory" /> è null. </exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0},System.Threading.LazyThreadSafetyMode)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Lazy`1" /> che utilizza la funzione di inizializzazione e la modalità di thread safety specificate.</summary>
      <param name="valueFactory">Delegato richiamato per produrre il valore inizializzato in modalità differita quando necessario.</param>
      <param name="mode">Uno dei valori di enumerazione che specifica la modalità di thread safety. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> contiene un valore non valido. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="valueFactory" /> è null. </exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Threading.LazyThreadSafetyMode)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Lazy`1" /> che utilizza il costruttore predefinito di <paramref name="T" /> e la modalità di thread safety specificata.</summary>
      <param name="mode">Uno dei valori di enumerazione che specifica la modalità di thread safety. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> contiene un valore non valido. </exception>
    </member>
    <member name="P:System.Lazy`1.IsValueCreated">
      <summary>Ottiene un valore che indica se per questa istanza di <see cref="T:System.Lazy`1" /> è stato creato un valore.</summary>
      <returns>true se per questa istanza di <see cref="T:System.Lazy`1" /> è stato creato un valore; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Lazy`1.ToString">
      <summary>Crea e restituisce una rappresentazione di stringa della proprietà <see cref="P:System.Lazy`1.Value" /> per questa istanza.</summary>
      <returns>Risultato della chiamata al metodo <see cref="M:System.Object.ToString" /> sulla proprietà <see cref="P:System.Lazy`1.Value" /> per questa istanza, se il valore è stato creato (ossia se la proprietà <see cref="P:System.Lazy`1.IsValueCreated" /> restituisce true).In caso contrario, una stinga che indica che il valore non è stato creato.</returns>
      <exception cref="T:System.NullReferenceException">La proprietà <see cref="P:System.Lazy`1.Value" /> è null.</exception>
    </member>
    <member name="P:System.Lazy`1.Value">
      <summary>Ottiene il valore inizializzato in modalità differita dell'istanza di <see cref="T:System.Lazy`1" /> corrente.</summary>
      <returns>Valore inizializzato in modalità differita dell'istanza di <see cref="T:System.Lazy`1" /> corrente.</returns>
      <exception cref="T:System.MemberAccessException">L'istanza <see cref="T:System.Lazy`1" /> viene inizializzata per l'utilizzo del costruttore predefinito del tipo che viene inizializzato in modalità differita e non si dispone delle autorizzazioni di accesso al costruttore. </exception>
      <exception cref="T:System.MissingMemberException">L'istanza <see cref="T:System.Lazy`1" /> viene inizializzata per l'utilizzo del costruttore predefinito del tipo che viene inizializzato in modalità differita e tale tipo non dispone di un costruttore pubblico senza parametri. </exception>
      <exception cref="T:System.InvalidOperationException">La funzione di inizializzazione tenta di accedere alla proprietà <see cref="P:System.Lazy`1.Value" /> su questa istanza. </exception>
    </member>
    <member name="T:System.Lazy`2">
      <summary>Fornisce un riferimento indiretto lazy a un oggetto e ai relativi metadati associati per l'utilizzo da parte di Managed Extensibility Framework.</summary>
      <typeparam name="T">Tipo di oggetto a cui si fa riferimento.</typeparam>
      <typeparam name="TMetadata">Tipo di metadati.</typeparam>
    </member>
    <member name="M:System.Lazy`2.#ctor(System.Func{`0},`1)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Lazy`2" /> con i metadati specificati che utilizza la funzione specificata per ottenere l'oggetto a cui si fa riferimento.</summary>
      <param name="valueFactory">Funzione che restituisce l'oggetto a cui si fa riferimento.</param>
      <param name="metadata">Metadati associati all'oggetto a cui si fa riferimento.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Lazy`2" /> con i metadati e il valore di thread safety specificati che utilizza la funzione specificata per ottenere l'oggetto a cui si fa riferimento.</summary>
      <param name="valueFactory">Funzione che restituisce l'oggetto a cui si fa riferimento.</param>
      <param name="metadata">Metadati associati all'oggetto a cui si fa riferimento.</param>
      <param name="isThreadSafe">Indica se l'oggetto <see cref="T:System.Lazy`2" /> creato sarà thread-safe.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Lazy`2" /> con la modalità di sincronizzazione di thread e metadati specificata che utilizza la funzione specificata per ottenere l'oggetto a cui si fa riferimento.</summary>
      <param name="valueFactory">Funzione che restituisce l'oggetto a cui si fa riferimento</param>
      <param name="metadata">Metadati associati all'oggetto a cui si fa riferimento.</param>
      <param name="mode">Modalità di sincronizzazione thread</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(`1)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Lazy`2" /> con i metadati specificati.</summary>
      <param name="metadata">Metadati associati all'oggetto a cui si fa riferimento.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(`1,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Lazy`2" /> con i metadati e il valore di thread safety specificati.</summary>
      <param name="metadata">Metadati associati all'oggetto a cui si fa riferimento.</param>
      <param name="isThreadSafe">Indica se l'oggetto <see cref="T:System.Lazy`2" /> creato sarà thread-safe.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Lazy`2" /> con la modalità di sincronizzazione di thread e metadati specificata.</summary>
      <param name="metadata">Metadati associati all'oggetto a cui si fa riferimento.</param>
      <param name="mode">Modalità di sincronizzazione thread.</param>
    </member>
    <member name="P:System.Lazy`2.Metadata">
      <summary>Ottiene i metadati associati all'oggetto a cui si fa riferimento.</summary>
      <returns>Metadati associati all'oggetto a cui si fa riferimento.</returns>
    </member>
    <member name="T:System.MemberAccessException">
      <summary>Eccezione che viene generata quando un tentativo di accedere a un membro della classe non ha esito positivo.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MemberAccessException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.MemberAccessException" />.</summary>
    </member>
    <member name="M:System.MemberAccessException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.MemberAccessException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore. </param>
    </member>
    <member name="M:System.MemberAccessException.#ctor(System.String,System.Exception)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.MemberAccessException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="inner">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="inner" /> non è un riferimento null (Nothing in Visual Basic), l'eccezione corrente viene generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.MethodAccessException">
      <summary>Eccezione generata quando si verifica un tentativo non valido di accesso a un metodo, ad esempio l'accesso a un metodo privato da codice parzialmente attendibile.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MethodAccessException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.MethodAccessException" />, impostando la proprietà <see cref="P:System.Exception.Message" /> della nuova istanza su un messaggio fornito dal sistema in cui viene descritto l'errore, ad esempio "Tentativo di accedere al metodo non riuscito". Il messaggio viene visualizzato nelle impostazioni cultura correnti del sistema.</summary>
    </member>
    <member name="M:System.MethodAccessException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.MethodAccessException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore. </param>
    </member>
    <member name="M:System.MethodAccessException.#ctor(System.String,System.Exception)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.MethodAccessException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="inner">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="inner" /> non è un riferimento null (Nothing in Visual Basic), l'eccezione corrente viene generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.MissingFieldException">
      <summary>Eccezione generata quando si verifica un tentativo di accesso dinamico a un campo non esistente.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MissingFieldException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.MissingFieldException" />.</summary>
    </member>
    <member name="M:System.MissingFieldException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.MissingFieldException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore. </param>
    </member>
    <member name="M:System.MissingFieldException.#ctor(System.String,System.Exception)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.MissingFieldException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="inner">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="inner" /> non è un riferimento null (Nothing in Visual Basic), l'eccezione corrente viene generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="P:System.MissingFieldException.Message">
      <summary>Recupera la stringa che mostra la firma del campo mancante, il nome della classe e il nome del campo.Questa proprietà è in sola lettura.</summary>
      <returns>La stringa del messaggio di errore</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.MissingMemberException">
      <summary>Eccezione generata quando si verifica un tentativo di accesso dinamico a un membro di una classe non esistente.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MissingMemberException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.MissingMemberException" />.</summary>
    </member>
    <member name="M:System.MissingMemberException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.MissingMemberException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore. </param>
    </member>
    <member name="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.MissingMemberException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa radice dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="inner">Istanza di <see cref="T:System.Exception" /> che è la causa dell'eccezione Exception corrente.Se <paramref name="inner" /> non è un riferimento null (Nothing in Visual Basic), l'eccezione Exception corrente è generata in un blocco catch che gestisce <paramref name="inner" />.</param>
    </member>
    <member name="P:System.MissingMemberException.Message">
      <summary>Recupera la stringa che mostra il nome della classe, il nome del membro e la firma del membro mancante.</summary>
      <returns>La stringa del messaggio di errore</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.MissingMethodException">
      <summary>Eccezione generata quando si verifica un tentativo di accesso dinamico a un metodo non esistente.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MissingMethodException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.MissingMethodException" />.</summary>
    </member>
    <member name="M:System.MissingMethodException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.MissingMethodException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore. </param>
    </member>
    <member name="M:System.MissingMethodException.#ctor(System.String,System.Exception)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.MissingMethodException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="inner">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="inner" /> non è un riferimento null (Nothing in Visual Basic), l'eccezione corrente viene generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="P:System.MissingMethodException.Message">
      <summary>Recupera la stringa che mostra il nome della classe, il nome del metodo e la firma del metodo mancante.Questa proprietà è in sola lettura.</summary>
      <returns>La stringa del messaggio di errore</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.MTAThreadAttribute">
      <summary>Indica che il modello di threading COM per un'applicazione è con multithreading apartment (MTA). </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.MTAThreadAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.MTAThreadAttribute" />.</summary>
    </member>
    <member name="T:System.MulticastDelegate">
      <summary>Rappresenta un delegato multicast, ossia un delegato che può avere più di un elemento nell'elenco chiamate.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.Equals(System.Object)">
      <summary>Determina se questo delegato multicast e l'oggetto specificato sono uguali.</summary>
      <returns>true se <paramref name="obj" /> e l'istanza corrente dispongono dello stesso elenco chiamate; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza. </param>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.GetInvocationList">
      <summary>Restituisce l'elenco chiamate di questo delegato multicast, in ordine di chiamata.</summary>
      <returns>Matrice di delegati i cui elenchi chiamate corrispondono collettivamente all'elenco chiamate di questa istanza.</returns>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.op_Equality(System.MulticastDelegate,System.MulticastDelegate)">
      <summary>Determina se due oggetti <see cref="T:System.MulticastDelegate" /> sono uguali.</summary>
      <returns>true se <paramref name="d1" /> e <paramref name="d2" /> dispongono dello stesso elenco chiamate; in caso contrario, false.</returns>
      <param name="d1">Operando sinistro. </param>
      <param name="d2">Operando destro. </param>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.op_Inequality(System.MulticastDelegate,System.MulticastDelegate)">
      <summary>Determina se due oggetti <see cref="T:System.MulticastDelegate" /> non sono uguali.</summary>
      <returns>true se <paramref name="d1" /> e <paramref name="d2" /> non dispongono degli stessi elenchi chiamate. In caso contrario false.</returns>
      <param name="d1">Operando sinistro. </param>
      <param name="d2">Operando destro. </param>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.NotImplementedException">
      <summary>Eccezione generata quando un'operazione o un metodo richiesto non viene implementato.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.NotImplementedException.#ctor">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.NotImplementedException" /> con le proprietà predefinite.</summary>
    </member>
    <member name="M:System.NotImplementedException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.NotImplementedException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
    </member>
    <member name="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.NotImplementedException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="inner">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="inner" /> non è null, l'eccezione corrente verrà generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.NotSupportedException">
      <summary>Eccezione generata quando un metodo chiamato non è supportato oppure quando viene effettuato un tentativo di leggere, cercare o scrivere in un flusso che non supporta la funzionalità richiamata.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.NotSupportedException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.NotSupportedException" />, impostando la proprietà <see cref="P:System.Exception.Message" /> della nuova istanza su un messaggio fornito dal sistema in cui viene descritto l'errore.Il messaggio viene visualizzato nelle impostazioni cultura correnti del sistema.</summary>
    </member>
    <member name="M:System.NotSupportedException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.NotSupportedException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore.Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile.È necessario che il chiamante del costruttore assicuri che la stringa sia stata localizzata per le impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.NotSupportedException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="innerException">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="innerException" /> non è un riferimento null, l'eccezione corrente verrà generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.Nullable">
      <summary>Supporta un tipo di valore a cui può essere assegnato null.La classe non può essere ereditata.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable.Compare``1(System.Nullable{``0},System.Nullable{``0})">
      <summary>Confronta i valori relativi di due oggetti <see cref="T:System.Nullable`1" />.</summary>
      <returns>Integer che indica i valori relativi dei parametri <paramref name="n1" /> e <paramref name="n2" />.Valore restituitoDescrizioneMinore di zeroLa proprietà <see cref="P:System.Nullable`1.HasValue" /> per <paramref name="n1" /> è false e la proprietà <see cref="P:System.Nullable`1.HasValue" /> per <paramref name="n2" /> è true.In alternativaLe proprietà <see cref="P:System.Nullable`1.HasValue" /> per <paramref name="n1" /> e <paramref name="n2" /> sono true e il valore della proprietà <see cref="P:System.Nullable`1.Value" /> per <paramref name="n1" /> è minore del valore della proprietà <see cref="P:System.Nullable`1.Value" /> per <paramref name="n2" />.ZeroLe proprietà <see cref="P:System.Nullable`1.HasValue" /> per <paramref name="n1" /> e <paramref name="n2" /> sono false.In alternativaLe proprietà <see cref="P:System.Nullable`1.HasValue" /> per <paramref name="n1" /> e <paramref name="n2" /> sono true e il valore della proprietà <see cref="P:System.Nullable`1.Value" /> per <paramref name="n1" /> è uguale al valore della proprietà <see cref="P:System.Nullable`1.Value" /> per <paramref name="n2" />.Maggiore di zeroLa proprietà <see cref="P:System.Nullable`1.HasValue" /> per <paramref name="n1" /> è true e la proprietà <see cref="P:System.Nullable`1.HasValue" /> per <paramref name="n2" /> è false.In alternativaLe proprietà <see cref="P:System.Nullable`1.HasValue" /> per <paramref name="n1" /> e <paramref name="n2" /> sono true e il valore della proprietà <see cref="P:System.Nullable`1.Value" /> per <paramref name="n1" /> è maggiore del valore della proprietà <see cref="P:System.Nullable`1.Value" /> per <paramref name="n2" />.</returns>
      <param name="n1">Un oggetto <see cref="T:System.Nullable`1" />.</param>
      <param name="n2">Un oggetto <see cref="T:System.Nullable`1" />.</param>
      <typeparam name="T">Tipo di valore sottostante dei parametri <paramref name="n1" /> e <paramref name="n2" />.</typeparam>
    </member>
    <member name="M:System.Nullable.Equals``1(System.Nullable{``0},System.Nullable{``0})">
      <summary>Indica se due oggetti <see cref="T:System.Nullable`1" /> specificati sono uguali.</summary>
      <returns>true se il parametro <paramref name="n1" /> è uguale al parametro <paramref name="n2" />. In caso contrario, false. Il valore restituito dipende dalle proprietà <see cref="P:System.Nullable`1.HasValue" /> e <see cref="P:System.Nullable`1.Value" /> dei due parametri confrontati.Valore restituitoDescrizionetrueLe proprietà <see cref="P:System.Nullable`1.HasValue" /> per <paramref name="n1" /> e <paramref name="n2" /> sono false. In alternativaLe proprietà <see cref="P:System.Nullable`1.HasValue" /> per <paramref name="n1" /> e <paramref name="n2" /> sono true e le proprietà <see cref="P:System.Nullable`1.Value" /> dei parametri sono uguali.falseLa proprietà <see cref="P:System.Nullable`1.HasValue" /> è true per un parametro e false per l'altro.In alternativaLe proprietà <see cref="P:System.Nullable`1.HasValue" /> per <paramref name="n1" /> e <paramref name="n2" /> sono true e le proprietà <see cref="P:System.Nullable`1.Value" /> dei parametri non sono uguali.</returns>
      <param name="n1">Un oggetto <see cref="T:System.Nullable`1" />.</param>
      <param name="n2">Un oggetto <see cref="T:System.Nullable`1" />.</param>
      <typeparam name="T">Tipo di valore sottostante dei parametri <paramref name="n1" /> e <paramref name="n2" />.</typeparam>
    </member>
    <member name="M:System.Nullable.GetUnderlyingType(System.Type)">
      <summary>Restituisce l'argomento di tipo sottostante del tipo nullable specificato.</summary>
      <returns>Argomento di tipo del parametro <paramref name="nullableType" />, se il parametro <paramref name="nullableType" /> è un tipo nullable generico chiuso. In caso contrario, null. </returns>
      <param name="nullableType">Oggetto <see cref="T:System.Type" /> che descrive un tipo nullable generico chiuso. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nullableType" /> è null.</exception>
    </member>
    <member name="T:System.Nullable`1">
      <summary>Rappresenta un tipo di valore a cui può essere assegnato null.</summary>
      <typeparam name="T">Tipo di valore sottostante del tipo generico <see cref="T:System.Nullable`1" />.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable`1.#ctor(`0)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Nullable`1" /> in base al valore specificato. </summary>
      <param name="value">Tipo di valore.</param>
    </member>
    <member name="M:System.Nullable`1.Equals(System.Object)">
      <summary>Indica se l'oggetto <see cref="T:System.Nullable`1" /> corrente è uguale a un oggetto specificato.</summary>
      <returns>true se il parametro <paramref name="other" /> è uguale all'oggetto <see cref="T:System.Nullable`1" /> corrente; in caso contrario, false. Questa tabella descrive la definizione dell'uguaglianza per i valori confrontati: Valore restituitoDescrizionetrueLa proprietà <see cref="P:System.Nullable`1.HasValue" /> è false e il parametro <paramref name="other" /> è null.Due valori null sono uguali per definizione.-oppure-La proprietà <see cref="P:System.Nullable`1.HasValue" /> è true e il valore restituito dalla proprietà <see cref="P:System.Nullable`1.Value" /> è uguale al parametro <paramref name="other" />.falseLa proprietà <see cref="P:System.Nullable`1.HasValue" /> per la struttura <see cref="T:System.Nullable`1" /> corrente è true e il parametro <paramref name="other" /> è null.-oppure-La proprietà <see cref="P:System.Nullable`1.HasValue" /> per la struttura <see cref="T:System.Nullable`1" /> corrente è false e il parametro <paramref name="other" /> non è null.-oppure-La proprietà <see cref="P:System.Nullable`1.HasValue" /> per la struttura <see cref="T:System.Nullable`1" /> corrente è true e il valore restituito dalla proprietà <see cref="P:System.Nullable`1.Value" /> non è uguale al parametro <paramref name="other" />.</returns>
      <param name="other">Oggetto.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable`1.GetHashCode">
      <summary>Recupera il codice hash dell'oggetto restituito dalla proprietà <see cref="P:System.Nullable`1.Value" />.</summary>
      <returns>Codice hash dell'oggetto restituito dalla proprietà <see cref="P:System.Nullable`1.Value" /> se la proprietà <see cref="P:System.Nullable`1.HasValue" /> è true oppure zero se la proprietà <see cref="P:System.Nullable`1.HasValue" /> è false. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable`1.GetValueOrDefault">
      <summary>Recupera il valore dell'oggetto <see cref="T:System.Nullable`1" /> corrente o il valore predefinito dell'oggetto.</summary>
      <returns>Valore della proprietà <see cref="P:System.Nullable`1.Value" /> se la proprietà <see cref="P:System.Nullable`1.HasValue" /> è true; in caso contrario, valore predefinito dell'oggetto <see cref="T:System.Nullable`1" /> corrente.Il tipo del valore predefinito è l'argomento di tipo dell'oggetto <see cref="T:System.Nullable`1" /> corrente e il valore del valore predefinito è costituito esclusivamente da zeri binari.</returns>
    </member>
    <member name="M:System.Nullable`1.GetValueOrDefault(`0)">
      <summary>Recupera il valore dell'oggetto <see cref="T:System.Nullable`1" /> corrente o il valore predefinito specificato.</summary>
      <returns>Valore della proprietà <see cref="P:System.Nullable`1.Value" /> se la proprietà <see cref="P:System.Nullable`1.HasValue" /> è true; in caso contrario, parametro <paramref name="defaultValue" />.</returns>
      <param name="defaultValue">Valore da restituire se la proprietà <see cref="P:System.Nullable`1.HasValue" /> è false.</param>
    </member>
    <member name="P:System.Nullable`1.HasValue">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Nullable`1" /> corrente presenta un valore valido per il proprio tipo sottostante. </summary>
      <returns>true se l'oggetto <see cref="T:System.Nullable`1" /> corrente presenta un valore; false se l'oggetto <see cref="T:System.Nullable`1" /> corrente non presenta alcun valore.</returns>
    </member>
    <member name="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
      <summary>Definisce una conversione esplicita di un valore <see cref="T:System.Nullable`1" /> in un numero complesso. </summary>
      <returns>Valore della proprietà <see cref="P:System.Nullable`1.Value" /> per il parametro <paramref name="value" />.</returns>
      <param name="value">Valore nullable.</param>
    </member>
    <member name="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
      <summary>Crea un nuovo oggetto <see cref="T:System.Nullable`1" /> inizializzato su un valore specificato. </summary>
      <returns>Oggetto <see cref="T:System.Nullable`1" /> la cui proprietà <see cref="P:System.Nullable`1.Value" /> è inizializzata con il parametro <paramref name="value" />.</returns>
      <param name="value">Tipo di valore.</param>
    </member>
    <member name="M:System.Nullable`1.ToString">
      <summary>Restituisce la rappresentazione testo del valore dell'oggetto <see cref="T:System.Nullable`1" /> corrente.</summary>
      <returns>Rappresentazione testo del valore dell'oggetto <see cref="T:System.Nullable`1" /> corrente se la proprietà <see cref="P:System.Nullable`1.HasValue" /> è true oppure una stringa vuota ("") se la proprietà <see cref="P:System.Nullable`1.HasValue" /> è false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Nullable`1.Value">
      <summary>Ottiene il valore dell'oggetto corrente <see cref="T:System.Nullable`1" /> se allo stesso oggetto è stato assegnato un valore sottostante valido.</summary>
      <returns>Valore dell'oggetto <see cref="T:System.Nullable`1" /> corrente se la proprietà <see cref="P:System.Nullable`1.HasValue" /> è true.Se la proprietà <see cref="P:System.Nullable`1.HasValue" /> è false, viene generata un'eccezione.</returns>
      <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Nullable`1.HasValue" /> è false.</exception>
    </member>
    <member name="T:System.NullReferenceException">
      <summary>Eccezione generata quando viene effettuato un tentativo di dereferenziare un oggetto Null.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.NullReferenceException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.NullReferenceException" />, impostando la proprietà <see cref="P:System.Exception.Message" /> della nuova istanza su un messaggio fornito dal sistema in cui viene descritto l'errore, indicando ad esempio che è stato usato un valore Null dove era prevista un'istanza di un oggetto. Questo messaggio prende in considerazione le impostazioni cultura correnti del sistema.</summary>
    </member>
    <member name="M:System.NullReferenceException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.NullReferenceException" /> con un messaggio di errore specificato.</summary>
      <param name="message">
        <see cref="T:System.String" /> che descrive l'errore.Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile.Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.NullReferenceException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.NullReferenceException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione. </param>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente.Se il parametro <paramref name="innerException" /> non è null, l'eccezione corrente viene generata in un blocco catch in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Object">
      <summary>Supporta tutte classi della gerarchia di classi .NET Framework e fornisce servizi di basso livello alle classi derivate.Questa è la principale classe base di tutte le classi di .NET Framework e rappresenta la radice della gerarchia dei tipi.Per esaminare il codice sorgente di .NET Framework per questo tipo, vedere Origine riferimento.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Object.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Object" />.</summary>
    </member>
    <member name="M:System.Object.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.Equals(System.Object,System.Object)">
      <summary>Determina se le istanze dell'oggetto specificate sono considerate uguali.</summary>
      <returns>true se gli oggetti sono considerati uguali; in caso contrario, false.Se entrambi i parametri <paramref name="objA" /> e <paramref name="objB" /> sono Null, il metodo restituisce true.</returns>
      <param name="objA">Primo oggetto da confrontare. </param>
      <param name="objB">Secondo oggetto da confrontare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.Finalize">
      <summary>Consente a un oggetto di effettuare un tentativo di liberare risorse ed eseguire altre operazioni di pulizia prima che venga recuperato da Garbage Collection.</summary>
    </member>
    <member name="M:System.Object.GetHashCode">
      <summary>Funge da funzione hash predefinita. </summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.MemberwiseClone">
      <summary>Crea una copia superficiale dell'oggetto <see cref="T:System.Object" /> corrente.</summary>
      <returns>Copia superficiale dei riferimenti dell'oggetto <see cref="T:System.Object" /> corrente.</returns>
    </member>
    <member name="M:System.Object.ReferenceEquals(System.Object,System.Object)">
      <summary>Determina se le istanze di <see cref="T:System.Object" /> specificate rappresentano la stessa istanza.</summary>
      <returns>true se <paramref name="objA" /> è la stessa istanza di <paramref name="objB" /> oppure se entrambe sono Null; in caso contrario, false.</returns>
      <param name="objA">Primo oggetto da confrontare. </param>
      <param name="objB">Secondo oggetto da confrontare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ObjectDisposedException">
      <summary>Eccezione generata durante l'esecuzione di un'operazione su un oggetto eliminato.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ObjectDisposedException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ObjectDisposedException" /> con una stringa contenente il nome dell'oggetto eliminato.</summary>
      <param name="objectName">Stringa contenente il nome dell'oggetto eliminato. </param>
    </member>
    <member name="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ObjectDisposedException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente.Se <paramref name="innerException" /> non è null, l'eccezione corrente viene generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ObjectDisposedException" /> con il nome dell'oggetto e il messaggio specificati.</summary>
      <param name="objectName">Nome dell'oggetto eliminato </param>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione. </param>
    </member>
    <member name="P:System.ObjectDisposedException.Message">
      <summary>Ottiene il messaggio nel quale è descritto l'errore.</summary>
      <returns>Stringa che descrive l'errore.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ObjectDisposedException.ObjectName">
      <summary>Ottiene il nome dell'oggetto eliminato.</summary>
      <returns>Stringa contenente il nome dell'oggetto eliminato.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.ObsoleteAttribute">
      <summary>Contrassegna gli elementi del programma che non vengono più utilizzati.La classe non può essere ereditata.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ObsoleteAttribute.#ctor">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.ObsoleteAttribute" /> con le proprietà predefinite.</summary>
    </member>
    <member name="M:System.ObsoleteAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ObsoleteAttribute" /> con un messaggio alternativo specificato.</summary>
      <param name="message">Stringa di testo che descrive le soluzioni alternative. </param>
    </member>
    <member name="M:System.ObsoleteAttribute.#ctor(System.String,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ObsoleteAttribute" /> con un messaggio alternativo e un valore Boolean che indica se l'utilizzo dell'elemento obsoleto viene considerato un errore.</summary>
      <param name="message">Stringa di testo che descrive le soluzioni alternative. </param>
      <param name="error">Valore Boolean che indica se l'utilizzo dell'elemento obsoleto viene considerato un errore. </param>
    </member>
    <member name="P:System.ObsoleteAttribute.IsError">
      <summary>Ottiene un valore che indica se il compilatore considererà l'utilizzo dell'elemento del programma obsoleto come errore.</summary>
      <returns>true se l'utilizzo dell'elemento obsoleto è considerato un errore. In caso contrario false.Il valore predefinito è false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ObsoleteAttribute.Message">
      <summary>Ottiene il messaggio alternativo, inclusa una descrizione degli elementi di programma alternativi.</summary>
      <returns>Stringa di testo della soluzione alternativa.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.OutOfMemoryException">
      <summary>Eccezione generata quando non vi è memoria sufficiente per continuare l'esecuzione di un programma.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.OutOfMemoryException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.OutOfMemoryException" />.</summary>
    </member>
    <member name="M:System.OutOfMemoryException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.OutOfMemoryException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore. </param>
    </member>
    <member name="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.OutOfMemoryException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione. </param>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente.Se il parametro <paramref name="innerException" /> non è un riferimento null (Nothing in Visual Basic), l'eccezione corrente viene generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.OverflowException">
      <summary>Eccezione avviata quando un'operazione aritmetica, di cast o di conversione in un contesto verificato ha come risultato un overflow.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.OverflowException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.OverflowException" />.</summary>
    </member>
    <member name="M:System.OverflowException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.OverflowException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore. </param>
    </member>
    <member name="M:System.OverflowException.#ctor(System.String,System.Exception)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.OverflowException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="innerException">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="innerException" /> non è un riferimento null, Nothing in Visual Basic, l'eccezione corrente viene generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.ParamArrayAttribute">
      <summary>Indica che un metodo consentirà di utilizzare un numero variabile di argomenti nella relativa chiamata.La classe non può essere ereditata.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ParamArrayAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ParamArrayAttribute" /> con le proprietà predefinite.</summary>
    </member>
    <member name="T:System.PlatformNotSupportedException">
      <summary>Eccezione generata quando una funzionalità non è supportata su una particolare piattaforma.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.PlatformNotSupportedException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.PlatformNotSupportedException" /> con proprietà predefinite.</summary>
    </member>
    <member name="M:System.PlatformNotSupportedException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.PlatformNotSupportedException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio che spiega il motivo dell'eccezione. </param>
    </member>
    <member name="M:System.PlatformNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.PlatformNotSupportedException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="inner">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="inner" /> non è null, l'eccezione corrente verrà generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.Predicate`1">
      <summary>Rappresenta il metodo che definisce un insieme di criteri e determina se l'oggetto specificato soddisfa tali criteri.</summary>
      <typeparam name="T">Tipo di oggetto da confrontare.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Predicate`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Predicate`1.BeginInvoke(`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Predicate`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Predicate`1.Invoke(`0)"></member>
    <member name="T:System.RankException">
      <summary>Eccezione generata quando una matrice con il numero errato di dimensioni viene passata a un metodo.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RankException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.RankException" />.</summary>
    </member>
    <member name="M:System.RankException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.RankException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore. </param>
    </member>
    <member name="M:System.RankException.#ctor(System.String,System.Exception)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.RankException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="innerException">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="innerException" /> non è un riferimento null, Nothing in Visual Basic, l'eccezione corrente viene generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.RuntimeFieldHandle">
      <summary>Rappresenta un campo in cui viene utilizzato un token di metadati interno.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.Equals(System.Object)">
      <summary>Indica se l'istanza corrente è uguale all'oggetto specificato.</summary>
      <returns>true se <paramref name="obj" /> è un oggetto <see cref="T:System.RuntimeFieldHandle" /> e uguale al valore dell'istanza corrente. In caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza corrente.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.Equals(System.RuntimeFieldHandle)">
      <summary>Indica se l'istanza corrente è uguale all'oggetto <see cref="T:System.RuntimeFieldHandle" /> specificato.</summary>
      <returns>true se il valore di <paramref name="handle" /> è uguale al valore dell'istanza corrente. In caso contrario, false.</returns>
      <param name="handle">
        <see cref="T:System.RuntimeFieldHandle" /> da confrontare con l'istanza corrente.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.GetHashCode">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.op_Equality(System.RuntimeFieldHandle,System.RuntimeFieldHandle)">
      <summary>Indica se due strutture <see cref="T:System.RuntimeFieldHandle" /> sono uguali.</summary>
      <returns>true se <paramref name="left" /> è uguale a <paramref name="right" />, in caso contrario, false.</returns>
      <param name="left">Oggetto <see cref="T:System.RuntimeFieldHandle" /> da confrontare con <paramref name="right" />.</param>
      <param name="right">Oggetto <see cref="T:System.RuntimeFieldHandle" /> da confrontare con <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.op_Inequality(System.RuntimeFieldHandle,System.RuntimeFieldHandle)">
      <summary>Indica se due strutture <see cref="T:System.RuntimeFieldHandle" /> non sono uguali.</summary>
      <returns>true se <paramref name="left" /> non è uguale a <paramref name="right" />; in caso contrario, false.</returns>
      <param name="left">Oggetto <see cref="T:System.RuntimeFieldHandle" /> da confrontare con <paramref name="right" />.</param>
      <param name="right">Oggetto <see cref="T:System.RuntimeFieldHandle" /> da confrontare con <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.RuntimeMethodHandle">
      <summary>L'oggetto <see cref="T:System.RuntimeMethodHandle" /> è un handle per la rappresentazione dei metadati interni di un metodo.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.Equals(System.Object)">
      <summary>Indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="obj" /> è un oggetto <see cref="T:System.RuntimeMethodHandle" /> e uguale al valore di questa istanza. In caso contrario, false.</returns>
      <param name="obj">Oggetto <see cref="T:System.Object" /> da confrontare a questa istanza.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.Equals(System.RuntimeMethodHandle)">
      <summary>Indica se questa istanza è uguale a un oggetto <see cref="T:System.RuntimeMethodHandle" /> specificato.</summary>
      <returns>true se <paramref name="handle" /> è uguale al valore di questa istanza. In caso contrario, false.</returns>
      <param name="handle">Oggetto <see cref="T:System.RuntimeMethodHandle" /> da confrontare a questa istanza.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.op_Equality(System.RuntimeMethodHandle,System.RuntimeMethodHandle)">
      <summary>Indica se le due istanze dell'oggetto <see cref="T:System.RuntimeMethodHandle" /> sono uguali.</summary>
      <returns>true se il valore di <paramref name="left" /> è uguale al valore di <paramref name="right" />. In caso contrario, false.</returns>
      <param name="left">Oggetto <see cref="T:System.RuntimeMethodHandle" /> da confrontare a <paramref name="right" />.</param>
      <param name="right">Oggetto <see cref="T:System.RuntimeMethodHandle" /> da confrontare con <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.op_Inequality(System.RuntimeMethodHandle,System.RuntimeMethodHandle)">
      <summary>Indica se le due istanze dell'oggetto <see cref="T:System.RuntimeMethodHandle" /> non sono uguali.</summary>
      <returns>true se il valore di <paramref name="left" /> non è uguale al valore di <paramref name="right" />. In caso contrario, false.</returns>
      <param name="left">Oggetto <see cref="T:System.RuntimeMethodHandle" /> da confrontare a <paramref name="right" />.</param>
      <param name="right">Oggetto <see cref="T:System.RuntimeMethodHandle" /> da confrontare con <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.RuntimeTypeHandle">
      <summary>Rappresenta un tipo in cui viene utilizzato un token di metadati interno.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.Equals(System.Object)">
      <summary>Indica se l'oggetto specificato è uguale alla struttura <see cref="T:System.RuntimeTypeHandle" /> corrente.</summary>
      <returns>true se <paramref name="obj" /> è una struttura <see cref="T:System.RuntimeTypeHandle" /> ed è uguale al valore di questa istanza; in caso contrario false.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza corrente.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.Equals(System.RuntimeTypeHandle)">
      <summary>Indica se la struttura <see cref="T:System.RuntimeTypeHandle" /> specificata è uguale alla struttura <see cref="T:System.RuntimeTypeHandle" /> corrente.</summary>
      <returns>true se il valore di <paramref name="handle" /> è uguale al valore di questa istanza; in caso contrario false.</returns>
      <param name="handle">Struttura <see cref="T:System.RuntimeTypeHandle" /> da confrontare con l'istanza corrente.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza corrente.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Equality(System.Object,System.RuntimeTypeHandle)">
      <summary>Indica se un oggetto e una struttura <see cref="T:System.RuntimeTypeHandle" /> sono uguali.</summary>
      <returns>true se <paramref name="left" /> è una struttura <see cref="T:System.RuntimeTypeHandle" /> ed è uguale a <paramref name="right" />; in caso contrario false.</returns>
      <param name="left">Oggetto da confrontare con <paramref name="right" />.</param>
      <param name="right">Struttura <see cref="T:System.RuntimeTypeHandle" /> da confrontare a <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Equality(System.RuntimeTypeHandle,System.Object)">
      <summary>Indica se una struttura <see cref="T:System.RuntimeTypeHandle" /> è uguale a un oggetto.</summary>
      <returns>true se <paramref name="right" /> è un oggetto <see cref="T:System.RuntimeTypeHandle" /> ed è uguale a <paramref name="left" />; in caso contrario false.</returns>
      <param name="left">Struttura <see cref="T:System.RuntimeTypeHandle" /> da confrontare a <paramref name="right" />.</param>
      <param name="right">Oggetto da confrontare con <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Inequality(System.Object,System.RuntimeTypeHandle)">
      <summary>Indica se un oggetto e una struttura <see cref="T:System.RuntimeTypeHandle" /> non sono uguali.</summary>
      <returns>true se <paramref name="left" /> è un oggetto <see cref="T:System.RuntimeTypeHandle" /> e non è uguale a <paramref name="right" />; in caso contrario false.</returns>
      <param name="left">Oggetto da confrontare con <paramref name="right" />.</param>
      <param name="right">Struttura <see cref="T:System.RuntimeTypeHandle" /> da confrontare a <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Inequality(System.RuntimeTypeHandle,System.Object)">
      <summary>Indica se una struttura <see cref="T:System.RuntimeTypeHandle" /> non è uguale a un oggetto.</summary>
      <returns>true se <paramref name="right" /> è una struttura <see cref="T:System.RuntimeTypeHandle" /> e non è uguale a <paramref name="left" />; in caso contrario false.</returns>
      <param name="left">Struttura <see cref="T:System.RuntimeTypeHandle" /> da confrontare a <paramref name="right" />.</param>
      <param name="right">Oggetto da confrontare con <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.SByte">
      <summary>Rappresenta un intero con segno a 8 bit.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.CompareTo(System.SByte)">
      <summary>Confronta questa istanza con un intero con segno a 8 bit specificato e restituisce un'indicazione dei valori relativi.</summary>
      <returns>Intero con segno che indica l'ordine relativo dell'istanza e di <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Intero con segno a 8 bit da confrontare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.SByte.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="obj" /> è un'istanza di <see cref="T:System.SByte" /> ed è uguale al valore dell'istanza; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.SByte.Equals(System.SByte)">
      <summary>Restituisce un valore che indica se l'istanza è uguale a un valore <see cref="T:System.SByte" /> specificato.</summary>
      <returns>true se <paramref name="obj" /> ha lo stesso valore di questa istanza; in caso contrario, false.</returns>
      <param name="obj">Valore <see cref="T:System.SByte" /> da confrontare con questa istanza.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.SByte.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.SByte.MaxValue">
      <summary>Rappresenta il valore massimo possibile di <see cref="T:System.SByte" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.SByte.MinValue">
      <summary>Rappresenta il valore più piccolo possibile di <see cref="T:System.SByte" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String)">
      <summary>Converte la rappresentazione di stringa di un numero nell'equivalente intero con segno a 8 bit.</summary>
      <returns>Intero con segno a 8 bit equivalente al numero specificato nel parametro <paramref name="s" />.</returns>
      <param name="s">Stringa che rappresenta un numero da convertire.Per interpretare la stringa, viene usato lo stile <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not consist of an optional sign followed by a sequence of digits (zero through nine). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato nell'equivalente intero con segno a 8 bit.</summary>
      <returns>Intero con segno a 8 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire.La stringa viene interpreta usando lo stile specificato da <paramref name="style" />.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format that is compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converte la rappresentazione in forma di stringa di un numero disponibile in uno stile precisato e in un formato specifico delle impostazioni cultura nell'equivalente intero con segno a 8 bit.</summary>
      <returns>Valore di byte con segno a 8 bit equivalente al numero specificato nel parametro <paramref name="s" />.</returns>
      <param name="s">Stringa contenente il numero da convertire.Per interpretare la stringa, viene usato lo stile specificato da <paramref name="style" />.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />.Se <paramref name="provider" /> è null, verranno usate le impostazioni cultura correnti del thread.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.-or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format that is compliant with <paramref name="style" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.-or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in un formato specifico delle impostazioni cultura nell'equivalente intero con segno a 8 bit.</summary>
      <returns>Intero con segno a 8 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa che rappresenta un numero da convertire.Per interpretare la stringa, viene usato lo stile <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />.Se <paramref name="provider" /> è null, verranno usate le impostazioni cultura correnti del thread.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
      <returns>Intero con segno che indica l'ordine relativo dell'istanza e di <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="obj">Oggetto da confrontare con questa istanza o null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an <see cref="T:System.SByte" />. </exception>
    </member>
    <member name="M:System.SByte.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.SByte.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true se il valore dell'istanza corrente non è uguale a zero; in caso contrario, false.</returns>
      <param name="provider">Questo parametro è inutilizzato.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Byte" />.</returns>
      <param name="provider">Questo parametro è inutilizzato.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Char" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Qualsiasi tentativo di eseguire tale operazione genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Nessuno.Questa conversione non è supportata.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Questo parametro è inutilizzato.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Double" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int16" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, invariato.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Single" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in un oggetto di tipo <paramref name="type" />.</returns>
      <param name="type">Oggetto <see cref="T:System.Type" /> nel quale convertire questo valore <see cref="T:System.SByte" />.</param>
      <param name="provider">Implementazione di <see cref="T:System.IFormatProvider" /> che fornisce informazioni sul formato del valore restituito.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt16" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.SByte.ToString">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, composta da un segno negativo (se il valore è negativo) e una sequenza di cifre comprese tra 0 e 9 senza zeri iniziali.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.ToString(System.IFormatProvider)">
      <summary>Converte il valore numerico di questa istanza nella rappresentazione di stringa equivalente usando le informazioni di formato specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="provider" />.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.ToString(System.String)">
      <summary>Converte il valore numerico di questa istanza nell'equivalente rappresentazione di stringa usando il formato specificato.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="format" />.</returns>
      <param name="format">Stringa di formato numerico standard o personalizzato.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.ToString(System.String,System.IFormatProvider)">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente usando il formato specificato e le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza corrente, in base a quanto specificato da <paramref name="format" /> e <paramref name="provider" />.</returns>
      <param name="format">Stringa di formato numerico standard o personalizzato.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte@)">
      <summary>Prova a convertire la rappresentazione di stringa di un numero in uno stile specificato e un formato specifico delle impostazioni cultura indicato nell'oggetto <see cref="T:System.SByte" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa che rappresenta un numero da convertire. </param>
      <param name="style">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <param name="result">Quando questo metodo viene restituito, contiene l'intero con segno a 8 bit equivalente al numero contenuto in <paramref name="s" />, se la conversione riesce oppure zero se la conversione non riesce.La conversione non riesce se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" /> non presenta un formato conforme a <paramref name="style" /> o rappresenta un numero minore di <see cref="F:System.SByte.MinValue" /> o maggiore di <see cref="F:System.SByte.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.TryParse(System.String,System.SByte@)">
      <summary>Prova a convertire la rappresentazione di stringa di un numero nell'oggetto <see cref="T:System.SByte" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa contenente un numero da convertire.</param>
      <param name="result">Quando questo metodo viene restituito, contiene il valore intero con segno a 8 bit equivalente al numero contenuto in <paramref name="s" /> se la conversione riesce oppure zero se la conversione non riesce.La conversione non riesce se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" />, non è in formato corretto o rappresenta un numero minore di <see cref="F:System.SByte.MinValue" /> o maggiore di <see cref="F:System.SByte.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Single">
      <summary>Rappresenta un numero a virgola mobile a precisione singola.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.CompareTo(System.Single)">
      <summary>Confronta questa istanza con un numero a virgola mobile a precisione singola specificato e restituisce un intero che indica se il valore di questa istanza è minore, uguale o maggiore del valore del numero a virgola mobile a precisione singola specificato.</summary>
      <returns>Numero con segno che indica i valori relativi di questa istanza e di <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />.-or- This instance is not a number (<see cref="F:System.Single.NaN" />) and <paramref name="value" /> is a number. Zero This instance is equal to <paramref name="value" />.-or- Both this instance and <paramref name="value" /> are not a number (<see cref="F:System.Single.NaN" />), <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />. Greater than zero This instance is greater than <paramref name="value" />.-or- This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Single.NaN" />). </returns>
      <param name="value">Numero a virgola mobile a precisione singola da confrontare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Single.Epsilon">
      <summary>Rappresenta il valore <see cref="T:System.Single" /> positivo più piccolo maggiore di zero.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="obj" /> è un'istanza di <see cref="T:System.Single" /> ed è uguale al valore dell'istanza; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Single.Equals(System.Single)">
      <summary>Restituisce un valore che indica se l'istanza e un oggetto <see cref="T:System.Single" /> specificato rappresentano lo stesso valore.</summary>
      <returns>true se <paramref name="obj" /> è uguale all'istanza; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Single.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Single.IsInfinity(System.Single)">
      <summary>Restituisce un valore che indica se il numero specificato restituisce l'infinito negativo o positivo.</summary>
      <returns>true se <paramref name="f" /> restituisce <see cref="F:System.Single.PositiveInfinity" /> o <see cref="F:System.Single.NegativeInfinity" />; in caso contrario, false.</returns>
      <param name="f">Numero a virgola mobile e con precisione singola. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.IsNaN(System.Single)">
      <summary>Restituisce un valore che indica se il valore specificato non è un numero (<see cref="F:System.Single.NaN" />).</summary>
      <returns>true se <paramref name="f" /> restituisce un valore non numerico (<see cref="F:System.Single.NaN" />); in caso contrario, false.</returns>
      <param name="f">Numero a virgola mobile e con precisione singola. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.IsNegativeInfinity(System.Single)">
      <summary>Restituisce un valore che indica se il numero specificato restituisce l'infinito negativo.</summary>
      <returns>true se <paramref name="f" /> viene valutato in <see cref="F:System.Single.NegativeInfinity" />; in caso contrario, false.</returns>
      <param name="f">Numero a virgola mobile e con precisione singola. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.IsPositiveInfinity(System.Single)">
      <summary>Restituisce un valore che indica se il numero specificato restituisce l'infinito positivo.</summary>
      <returns>true se <paramref name="f" /> viene valutato in <see cref="F:System.Single.PositiveInfinity" />; in caso contrario, false.</returns>
      <param name="f">Numero a virgola mobile e con precisione singola. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.MaxValue">
      <summary>Rappresenta il valore massimo possibile di <see cref="T:System.Single" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.MinValue">
      <summary>Rappresenta il valore più piccolo possibile di <see cref="T:System.Single" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.NaN">
      <summary>Rappresenta un valore non numerico (NaN).Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.NegativeInfinity">
      <summary>Rappresenta l'infinito negativo.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.op_Equality(System.Single,System.Single)">
      <summary>Restituisce un valore che indica se due valori <see cref="T:System.Single" /> specificati sono uguali.</summary>
      <returns>true se <paramref name="left" /> e <paramref name="right" /> sono uguali; in caso contrario, false.</returns>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
    </member>
    <member name="M:System.Single.op_GreaterThan(System.Single,System.Single)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Single" />specificato è maggiore di un altro valore <see cref="T:System.Single" /> specificato.</summary>
      <returns>true se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, false.</returns>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
    </member>
    <member name="M:System.Single.op_GreaterThanOrEqual(System.Single,System.Single)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Single" /> specificato è maggiore o uguale a un altro valore <see cref="T:System.Single" /> specificato.</summary>
      <returns>true se <paramref name="left" /> è maggiore o uguale a <paramref name="right" />; in caso contrario, false.</returns>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
    </member>
    <member name="M:System.Single.op_Inequality(System.Single,System.Single)">
      <summary>Restituisce un valore che indica se due valori <see cref="T:System.Single" /> specificati non sono uguali.</summary>
      <returns>true se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, false.</returns>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
    </member>
    <member name="M:System.Single.op_LessThan(System.Single,System.Single)">
      <summary>Restituisce un valore che indica se il valore <see cref="T:System.Single" /> specificato è minore o uguale a un altro valore <see cref="T:System.Single" /> specificato.</summary>
      <returns>true se <paramref name="left" /> è minore di <paramref name="right" />; in caso contrario, false.</returns>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
    </member>
    <member name="M:System.Single.op_LessThanOrEqual(System.Single,System.Single)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Single" /> specificato è minore o uguale a un altro valore <see cref="T:System.Single" /> specificato.</summary>
      <returns>true se <paramref name="left" /> è minore o uguale a <paramref name="right" />; in caso contrario, false.</returns>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
    </member>
    <member name="M:System.Single.Parse(System.String)">
      <summary>Converte la rappresentazione di stringa di un numero nel numero a virgola mobile a precisione singola equivalente.</summary>
      <returns>Numero a virgola mobile a precisione singola equivalente al valore numerico o al simbolo specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato nel rispettivo numero a virgola mobile a precisione singola equivalente.</summary>
      <returns>Numero a virgola mobile a precisione singola equivalente al valore numerico o al simbolo specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Float" /> combinato con <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato e in un formato specifico delle impostazioni cultura nel numero a virgola mobile a precisione singola equivalente.</summary>
      <returns>Numero a virgola mobile a precisione singola equivalente al valore numerico o al simbolo specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Float" /> combinato con <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a numeric value. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Parse(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in un determinato formato specifico delle impostazioni cultura nel numero a virgola mobile a precisione singola equivalente.</summary>
      <returns>Numero a virgola mobile a precisione singola equivalente al valore numerico o al simbolo specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa contenente un numero da convertire. </param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.PositiveInfinity">
      <summary>Rappresenta l'infinito positivo.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
      <returns>Intero con segno che indica l'ordine relativo dell'istanza e di <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Oggetto da confrontare con questa istanza o null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Single" />. </exception>
    </member>
    <member name="M:System.Single.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Single.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true se il valore dell'istanza corrente non è uguale a zero; in caso contrario, false.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Byte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Questa conversione non è supportata.Non vengono restituiti valori.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Single.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Questa conversione non è supportata.Non vengono restituiti valori.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Single.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Double" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int16" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.SByte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, invariato.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <paramref name="type" />.</returns>
      <param name="type">Tipo nel quale convertire questo valore <see cref="T:System.Single" />.</param>
      <param name="provider">Oggetto che fornisce informazioni sul formato del valore restituito.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt16" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.Single.ToString">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.ToString(System.IFormatProvider)">
      <summary>Converte il valore numerico di questa istanza nella rappresentazione di stringa equivalente usando le informazioni di formato specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="provider" />.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.ToString(System.String)">
      <summary>Converte il valore numerico di questa istanza nell'equivalente rappresentazione di stringa usando il formato specificato.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="format" />.</returns>
      <param name="format">Stringa di formato numerico.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.ToString(System.String,System.IFormatProvider)">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente usando il formato specificato e le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza corrente, in base a quanto specificato da <paramref name="format" /> e <paramref name="provider" />.</returns>
      <param name="format">Stringa di formato numerico.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato e in un formato specifico delle impostazioni cultura nel numero a virgola mobile a precisione singola equivalente.Un valore restituito indica se la conversione è riuscita o meno.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa che rappresenta un numero da convertire. </param>
      <param name="style">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Float" /> combinato con <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <param name="result">Quando questo metodo viene restituito, contiene il numero a virgola mobile a precisione singola equivalente al valore numerico o al simbolo contenuto in <paramref name="s" />, se la conversione ha esito positivo oppure zero se la conversione non riesce.La conversione non viene eseguita se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" />, non presenta un formato conforme a <paramref name="style" />, rappresenta un numero minore di <see cref="F:System.Single.MinValue" /> o maggiore di <see cref="F:System.Single.MaxValue" /> o se <paramref name="style" /> non è una combinazione valida di costanti enumerate dell'oggetto <see cref="T:System.Globalization.NumberStyles" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.TryParse(System.String,System.Single@)">
      <summary>Converte la rappresentazione di stringa di un numero nel numero a virgola mobile a precisione singola equivalente.Un valore restituito indica se la conversione è riuscita o meno.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa che rappresenta un numero da convertire. </param>
      <param name="result">Quando questo metodo viene restituito, contiene il numero a virgola mobile a precisione singola equivalente al valore numerico o al simbolo contenuto in <paramref name="s" />, se la conversione ha esito positivo oppure zero se la conversione non riesce.La conversione non viene eseguita se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" />, non è un numero in formato valido o rappresenta un numero minore di <see cref="F:System.Single.MinValue" /> o maggiore di <see cref="F:System.Single.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.STAThreadAttribute">
      <summary>Indica che il modello di threading COM predefinito per un'applicazione è di tipo apartment con thread singolo (STA, Single-Threaded Apartment). </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.STAThreadAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.STAThreadAttribute" />.</summary>
    </member>
    <member name="T:System.String">
      <summary>Rappresenta il testo come una serie di caratteri Unicode.Per esaminare il codice sorgente di .NET Framework per questo tipo, vedere Origine riferimento.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.#ctor(System.Char*)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.String" /> sul valore indicato da uno specifico puntatore a una matrice di caratteri Unicode.</summary>
      <param name="value">Puntatore a una matrice con terminazione Null di caratteri Unicode. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The current process does not have read access to all the addressed characters.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> specifies an array that contains an invalid Unicode character, or <paramref name="value" /> specifies an address less than 64000.</exception>
    </member>
    <member name="M:System.String.#ctor(System.Char*,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.String" /> sul valore indicato da uno specifico puntatore a una matrice di caratteri Unicode, da una posizione iniziale del carattere all'interno di tale matrice e da una lunghezza.</summary>
      <param name="value">Puntatore a una matrice di caratteri Unicode. </param>
      <param name="startIndex">Posizione iniziale all'interno di <paramref name="value" />. </param>
      <param name="length">Numero di caratteri in <paramref name="value" /> da usare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than zero, <paramref name="value" /> + <paramref name="startIndex" /> cause a pointer overflow, or the current process does not have read access to all the addressed characters.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> specifies an array that contains an invalid Unicode character, or <paramref name="value" /> + <paramref name="startIndex" /> specifies an address less than 64000.</exception>
    </member>
    <member name="M:System.String.#ctor(System.Char,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.String" /> sul valore indicato da uno specifico carattere Unicode ripetuto un numero precisato di volte.</summary>
      <param name="c">Carattere Unicode. </param>
      <param name="count">Numero di volte in cui si presenta il parametro <paramref name="c" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is less than zero. </exception>
    </member>
    <member name="M:System.String.#ctor(System.Char[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.String" /> sul valore indicato da una matrice di caratteri Unicode.</summary>
      <param name="value">Matrice di caratteri Unicode. </param>
    </member>
    <member name="M:System.String.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.String" /> sul valore indicato da una matrice di caratteri Unicode, da una posizione iniziale del carattere all'interno di tale matrice e da una lunghezza.</summary>
      <param name="value">Matrice di caratteri Unicode. </param>
      <param name="startIndex">Posizione iniziale all'interno di <paramref name="value" />. </param>
      <param name="length">Numero di caratteri in <paramref name="value" /> da usare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than zero.-or- The sum of <paramref name="startIndex" /> and <paramref name="length" /> is greater than the number of elements in <paramref name="value" />. </exception>
    </member>
    <member name="P:System.String.Chars(System.Int32)">
      <summary>Ottiene l'oggetto <see cref="T:System.Char" /> in una posizione specificata dell'oggetto <see cref="T:System.String" /> corrente.</summary>
      <returns>Oggetto in corrispondenza della posizione <paramref name="index" />.</returns>
      <param name="index">Posizione nella stringa corrente. </param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> is greater than or equal to the length of this object or less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>Confronta le sottostringhe di due oggetti <see cref="T:System.String" /> specificati e restituisce un intero che indica la relativa posizione nell'ordinamento.</summary>
      <returns>Intero con segno a 32 bit che indica la relazione lessicale tra i due termini del confronto.Value Condition Less than zero The substring in <paramref name="strA" /> precedes the substring in <paramref name="strB" /> in the sort order. Zero The substrings occur in the same position in the sort order, or <paramref name="length" /> is zero. Greater than zero The substring in <paramref name="strA" /> follows the substring in <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">Prima stringa da usare nel confronto. </param>
      <param name="indexA">Posizione della sottostringa all'interno di <paramref name="strA" />. </param>
      <param name="strB">Seconda stringa da usare nel confronto. </param>
      <param name="indexB">Posizione della sottostringa all'interno di <paramref name="strB" />. </param>
      <param name="length">Numero massimo di caratteri contenuti nelle sottostringhe da confrontare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative. -or-Either <paramref name="indexA" /> or <paramref name="indexB" /> is null, and <paramref name="length" /> is greater than zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)">
      <summary>Confronta sottostringhe di due oggetti <see cref="T:System.String" /> specificati usando le regole specificate e restituisce un intero che ne indica la posizione relativa nell'ordinamento. </summary>
      <returns>Intero con segno a 32 bit che indica la relazione lessicale tra i due termini di confronto.Value Condition Less than zero The substring in <paramref name="strA" /> precedes the substring in <paramref name="strB" /> in the sort order.Zero The substrings occur in the same position in the sort order, or the <paramref name="length" /> parameter is zero. Greater than zero The substring in <paramref name="strA" /> follllows the substring in <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">Prima stringa da usare nel confronto. </param>
      <param name="indexA">Posizione della sottostringa all'interno di <paramref name="strA" />. </param>
      <param name="strB">Seconda stringa da usare nel confronto.</param>
      <param name="indexB">Posizione della sottostringa all'interno di <paramref name="strB" />. </param>
      <param name="length">Numero massimo di caratteri contenuti nelle sottostringhe da confrontare. </param>
      <param name="comparisonType">Uno dei valori di enumerazione che specifica le regole da usare per il confronto. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative. -or-Either <paramref name="indexA" /> or <paramref name="indexB" /> is null, and <paramref name="length" /> is greater than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.String)">
      <summary>Confronta due oggetti <see cref="T:System.String" /> specificati e restituisce un intero che ne indica la posizione relativa nell'ordinamento.</summary>
      <returns>Intero con segno a 32 bit che indica la relazione lessicale tra i due termini di confronto.Value Condition Less than zero <paramref name="strA" /> precedes <paramref name="strB" /> in the sort order. Zero <paramref name="strA" /> occurs in the same position as <paramref name="strB" /> in the sort order. Greater than zero <paramref name="strA" /> follows <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">Prima stringa da confrontare. </param>
      <param name="strB">Seconda stringa da confrontare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.String,System.Boolean)">
      <summary>Confronta due oggetti <see cref="T:System.String" /> specificati, ignorando o rispettando la distinzione tra maiuscole e minuscole, e restituisce un intero che ne indica la posizione relativa nell'ordinamento.</summary>
      <returns>Intero con segno a 32 bit che indica la relazione lessicale tra i due termini di confronto.Value Condition Less than zero <paramref name="strA" /> precedes <paramref name="strB" /> in the sort order. Zero <paramref name="strA" /> occurs in the same position as <paramref name="strB" /> in the sort order. Greater than zero <paramref name="strA" /> follows <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">Prima stringa da confrontare. </param>
      <param name="strB">Seconda stringa da confrontare. </param>
      <param name="ignoreCase">true per ignorare la distinzione tra maiuscole e minuscole durante il confronto; in caso contrario, false.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.String,System.StringComparison)">
      <summary>Confronta due oggetti <see cref="T:System.String" /> specificati usando le regole specificate e restituisce un intero che ne indica la posizione relativa nell'ordinamento.</summary>
      <returns>Intero con segno a 32 bit che indica la relazione lessicale tra i due termini di confronto.Value Condition Less than zero <paramref name="strA" /> precedes <paramref name="strB" /> in the sort order. Zero <paramref name="strA" /> is in the same position as <paramref name="strB" /> in the sort order. Greater than zero <paramref name="strA" /> follows <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">Prima stringa da confrontare.</param>
      <param name="strB">Seconda stringa da confrontare. </param>
      <param name="comparisonType">Uno dei valori di enumerazione che specifica le regole da usare per il confronto. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value. </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.StringComparison" /> is not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>Effettua il confronto fra sottostringhe di due determinati oggetti <see cref="T:System.String" /> in base all'analisi dei valori numerici dei corrispondenti oggetti <see cref="T:System.Char" /> in ogni sottostringa. </summary>
      <returns>Intero con segno a 32 bit che indica la relazione lessicale tra i due termini di confronto.ValueCondition Less than zero The substring in <paramref name="strA" /> is less than the substring in <paramref name="strB" />. Zero The substrings are equal, or <paramref name="length" /> is zero. Greater than zero The substring in <paramref name="strA" /> is greater than the substring in <paramref name="strB" />. </returns>
      <param name="strA">Prima stringa da usare nel confronto. </param>
      <param name="indexA">Indice iniziale della sottostringa di <paramref name="strA" />. </param>
      <param name="strB">Seconda stringa da usare nel confronto. </param>
      <param name="indexB">Indice iniziale della sottostringa di <paramref name="strB" />. </param>
      <param name="length">Numero massimo di caratteri contenuti nelle sottostringhe da confrontare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="strA" /> is not null and <paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.-or- <paramref name="strB" /> is not null and<paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.CompareOrdinal(System.String,System.String)">
      <summary>Confronta due oggetti <see cref="T:System.String" /> specificati in base all'analisi dei valori numerici dei corrispondenti oggetti <see cref="T:System.Char" /> in ogni stringa.</summary>
      <returns>Intero che indica la relazione lessicale tra i due termini di confronto.ValueCondition Less than zero <paramref name="strA" /> is less than <paramref name="strB" />. Zero <paramref name="strA" /> and <paramref name="strB" /> are equal. Greater than zero <paramref name="strA" /> is greater than <paramref name="strB" />. </returns>
      <param name="strA">Prima stringa da confrontare. </param>
      <param name="strB">Seconda stringa da confrontare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.CompareTo(System.String)">
      <summary>Confronta questa istanza con un oggetto <see cref="T:System.String" /> specificato e indica se questa istanza precede, segue o si trova nella stessa posizione della stringa specificata all'interno dei criteri di ordinamento. </summary>
      <returns>Intero con segno a 32 bit che indica se questa istanza precede, segue o si trova nella stessa posizione del parametro <paramref name="strB" /> nell'ordinamento.Value Condition Less than zero This instance precedes <paramref name="strB" />. Zero This instance has the same position in the sort order as <paramref name="strB" />. Greater than zero This instance follows <paramref name="strB" />.-or- <paramref name="strB" /> is null. </returns>
      <param name="strB">Stringa da confrontare con questa istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Concatena i membri di una raccolta <see cref="T:System.Collections.Generic.IEnumerable`1" /> costruita di tipo <see cref="T:System.String" />.</summary>
      <returns> Stringhe concatenate in <paramref name="values" />.</returns>
      <param name="values">Oggetto Collection che implementa <see cref="T:System.Collections.Generic.IEnumerable`1" /> e il cui argomento di tipo generico è <see cref="T:System.String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Concat``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Concatena i membri di un'implementazione di <see cref="T:System.Collections.Generic.IEnumerable`1" />.</summary>
      <returns>Membri concatenati in <paramref name="values" />.</returns>
      <param name="values">Oggetto Collection che implementa l'interfaccia <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <typeparam name="T">Tipo dei membri di <paramref name="values" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Concat(System.Object)">
      <summary>Crea la rappresentazione di stringa di un oggetto specificato.</summary>
      <returns>Rappresentazione di stringa del valore di <paramref name="arg0" /> oppure <see cref="F:System.String.Empty" /> se <paramref name="arg0" /> è null.</returns>
      <param name="arg0">Oggetto da rappresentare oppure null. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Object,System.Object)">
      <summary>Concatena le rappresentazioni di stringa di due oggetti specificati.</summary>
      <returns>Rappresentazioni di stringa concatenate dei valori di <paramref name="arg0" /> e <paramref name="arg1" />.</returns>
      <param name="arg0">Primo oggetto da concatenare. </param>
      <param name="arg1">Secondo oggetto da concatenare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Object,System.Object,System.Object)">
      <summary>Concatena le rappresentazioni di stringa di tre oggetti specificati.</summary>
      <returns>Rappresentazioni di stringa concatenate dei valori di <paramref name="arg0" />, <paramref name="arg1" /> e <paramref name="arg2" />.</returns>
      <param name="arg0">Primo oggetto da concatenare. </param>
      <param name="arg1">Secondo oggetto da concatenare. </param>
      <param name="arg2">Terzo oggetto da concatenare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Object[])">
      <summary>Concatena le rappresentazioni di stringa degli elementi in una matrice <see cref="T:System.Object" /> specificata.</summary>
      <returns>Rappresentazioni di stringa concatenate dei valori degli elementi di <paramref name="args" />.</returns>
      <param name="args">Matrice di oggetti contenente gli elementi da concatenare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="args" /> is null. </exception>
      <exception cref="T:System.OutOfMemoryException">Out of memory.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String,System.String)">
      <summary>Concatena due istanze specificate della classe <see cref="T:System.String" />.</summary>
      <returns>Concatenazione dei parametri <paramref name="str0" /> e <paramref name="str1" />.</returns>
      <param name="str0">Prima stringa da concatenare. </param>
      <param name="str1">Seconda stringa da concatenare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String,System.String,System.String)">
      <summary>Concatena tre istanze specificate della classe <see cref="T:System.String" />.</summary>
      <returns>Concatenazione dei parametri <paramref name="str0" />, <paramref name="str1" /> e <paramref name="str2" />.</returns>
      <param name="str0">Prima stringa da concatenare. </param>
      <param name="str1">Seconda stringa da concatenare. </param>
      <param name="str2">Terza stringa da concatenare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String,System.String,System.String,System.String)">
      <summary>Concatena quattro istanze specificate della classe <see cref="T:System.String" />.</summary>
      <returns>Concatenazione dei parametri <paramref name="str0" />, <paramref name="str1" />, <paramref name="str2" /> e <paramref name="str3" />.</returns>
      <param name="str0">Prima stringa da concatenare. </param>
      <param name="str1">Seconda stringa da concatenare. </param>
      <param name="str2">Terza stringa da concatenare. </param>
      <param name="str3">Quarta stringa da concatenare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String[])">
      <summary>Concatena gli elementi di una matrice di oggetti <see cref="T:System.String" /> specificati.</summary>
      <returns>Elementi concatenati del parametro <paramref name="values" />.</returns>
      <param name="values">Matrice di istanze di stringa. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
      <exception cref="T:System.OutOfMemoryException">Out of memory.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Contains(System.String)">
      <summary>Restituisce un valore che indica se una sottostringa specificata è presente all'interno della stringa.</summary>
      <returns>true se il parametro <paramref name="value" /> è presente all'interno della stringa o se il parametro <paramref name="value" /> è la stringa vuota (""); in caso contrario, false.</returns>
      <param name="value">Stringa da cercare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>Copia un numero definito di caratteri da una posizione specificata in questa istanza in una posizione specificata in una matrice di caratteri Unicode.</summary>
      <param name="sourceIndex">Indice del primo carattere nell'istanza da copiare. </param>
      <param name="destination">Matrice di caratteri Unicode in cui vengono copiati i caratteri di questa istanza. </param>
      <param name="destinationIndex">Indice nel parametro <paramref name="destination" /> in corrispondenza del quale inizia l'operazione di copia. </param>
      <param name="count">Numero di caratteri dell'istanza da copiare in <paramref name="destination" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" />, <paramref name="destinationIndex" />, or <paramref name="count" /> is negative -or- <paramref name="sourceIndex" /> does not identify a position in the current instance. -or-<paramref name="destinationIndex" /> does not identify a valid index in the <paramref name="destination" /> array. -or-<paramref name="count" /> is greater than the length of the substring from <paramref name="startIndex" /> to the end of this instance -or- <paramref name="count" /> is greater than the length of the subarray from <paramref name="destinationIndex" /> to the end of the <paramref name="destination" /> array. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.String.Empty">
      <summary>Rappresenta la stringa vuota.Questo campo è di sola lettura.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.EndsWith(System.String)">
      <summary>Determina se la fine di questa istanza di stringa corrisponde alla stringa specificata.</summary>
      <returns>true se <paramref name="value" /> corrisponde alla fine di questa istanza; in caso contrario, false.</returns>
      <param name="value">Stringa da confrontare con la sottostringa alla fine di questa istanza. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.EndsWith(System.String,System.StringComparison)">
      <summary>Determina se la fine di questa istanza di stringa corrisponde alla stringa specificata se confrontata mediante l'opzione di confronto specificata.</summary>
      <returns>true se il parametro <paramref name="value" /> corrisponde alla fine di questa stringa; in caso contrario, false.</returns>
      <param name="value">Stringa da confrontare con la sottostringa alla fine di questa istanza. </param>
      <param name="comparisonType">Uno dei valori di enumerazione che determina la modalità di confronto fra questa stringa e <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.Equals(System.Object)">
      <summary>Determina se questa istanza e un oggetto specificato, che deve essere anche un oggetto <see cref="T:System.String" />, hanno lo stesso valore.</summary>
      <returns>true se il parametro <paramref name="obj" /> è un oggetto <see cref="T:System.String" /> e il relativo valore corrisponde a quello di questa istanza; in caso contrario, false.Se <paramref name="obj" /> è null, il metodo restituisce false.</returns>
      <param name="obj">Stringa da confrontare con questa istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String)">
      <summary>Determina se questa istanza e un altro oggetto <see cref="T:System.String" /> specificato hanno lo stesso valore.</summary>
      <returns>true se il valore del parametro <paramref name="value" /> è lo stesso di quello di questa istanza; in caso contrario, false.Se <paramref name="value" /> è null, il metodo restituisce false.</returns>
      <param name="value">Stringa da confrontare con questa istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String,System.String)">
      <summary>Determina se due oggetti <see cref="T:System.String" /> specificati hanno lo stesso valore.</summary>
      <returns>true se il valore di <paramref name="a" /> è uguale al valore di <paramref name="b" />; in caso contrario, false.Se entrambi i parametri <paramref name="a" /> e <paramref name="b" /> sono null, il metodo restituisce true.</returns>
      <param name="a">Prima stringa da confrontare o null. </param>
      <param name="b">Seconda stringa da confrontare o null. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String,System.String,System.StringComparison)">
      <summary>Determina se due oggetti <see cref="T:System.String" /> specificati hanno lo stesso valore.Un parametro specifica le impostazioni cultura, l'eventuale distinzione fra maiuscole e minuscole e le regole di ordinamento usate per effettuare il confronto.</summary>
      <returns>true se il valore del parametro <paramref name="a" /> è uguale al valore del parametro <paramref name="b" />; in caso contrario, false.</returns>
      <param name="a">Prima stringa da confrontare o null. </param>
      <param name="b">Seconda stringa da confrontare o null. </param>
      <param name="comparisonType">Uno dei valori di enumerazione che specifica le regole di confronto. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String,System.StringComparison)">
      <summary>Determina se questa stringa e un oggetto <see cref="T:System.String" /> specificato hanno lo stesso valore.Un parametro specifica le impostazioni cultura, l'eventuale distinzione fra maiuscole e minuscole e le regole di ordinamento usate per effettuare il confronto.</summary>
      <returns>true se il valore del parametro <paramref name="value" /> corrisponde a quello di questa stringa; in caso contrario, false.</returns>
      <param name="value">Stringa da confrontare con questa istanza.</param>
      <param name="comparisonType">Uno dei valori di enumerazione che specifica la modalità di confronto delle stringhe. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object)">
      <summary>Sostituisce uno o più elementi di formato presenti in una stringa specificata con la rappresentazione di stringa dell'oggetto corrispondente.Un parametro fornisce le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Copia di <paramref name="format" /> in cui uno o più elementi di formato vengono sostituiti dalla rappresentazione di stringa di <paramref name="arg0" />. </returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <param name="format">Stringa in formato composito. </param>
      <param name="arg0">Oggetto da formattare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> or <paramref name="arg0" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to one. </exception>
    </member>
    <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object)">
      <summary>Sostituisce gli elementi di formato presenti in una stringa specificata con la rappresentazione di stringa di due oggetti specificati.Un parametro fornisce le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Copia di <paramref name="format" /> in cui gli elementi di formato vengono sostituiti dalle rappresentazioni di stringa di <paramref name="arg0" /> e <paramref name="arg1" />. </returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <param name="format">Stringa in formato composito. </param>
      <param name="arg0">Primo oggetto da formattare. </param>
      <param name="arg1">Secondo oggetto da formattare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />, <paramref name="arg0" />, or <paramref name="arg1" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to two. </exception>
    </member>
    <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
      <summary>Sostituisce gli elementi di formato in una stringa specificata con le rappresentazioni di stringa di tre oggetti specificati.Un parametro fornisce le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Copia di <paramref name="format" /> in cui gli elementi di formato sono stati sostituiti dalle rappresentazioni di stringa di <paramref name="arg0" />, <paramref name="arg1" /> e <paramref name="arg2" />. </returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <param name="format">Stringa in formato composito. </param>
      <param name="arg0">Primo oggetto da formattare. </param>
      <param name="arg1">Secondo oggetto da formattare. </param>
      <param name="arg2">Terzo oggetto da formattare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />, <paramref name="arg0" />, <paramref name="arg1" />, or <paramref name="arg2" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to three. </exception>
    </member>
    <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])">
      <summary>Sostituisce gli elementi di formato presenti in una stringa specificata con le rappresentazioni di stringa di oggetti corrispondenti in una matrice specificata.Un parametro fornisce le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Copia di <paramref name="format" /> in cui gli elementi di formato sono stati sostituiti dalla rappresentazione di stringa degli oggetti corrispondenti in <paramref name="args" />.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <param name="format">Stringa in formato composito. </param>
      <param name="args">Matrice di oggetti che contiene zero o più oggetti da formattare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> or <paramref name="args" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to the length of the <paramref name="args" /> array. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object)">
      <summary>Sostituisce uno o più elementi di formato in una stringa specificata con la rappresentazione di stringa di un oggetto specificato.</summary>
      <returns>Copia di <paramref name="format" /> in cui qualsiasi elemento di formato viene sostituito dalla rappresentazione di stringa di <paramref name="arg0" />.</returns>
      <param name="format">Stringa in formato composito. </param>
      <param name="arg0">Oggetto da formattare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">The format item in <paramref name="format" /> is invalid.-or- The index of a format item is not zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object,System.Object)">
      <summary>Sostituisce gli elementi di formato presenti in una stringa specificata con la rappresentazione di stringa di due oggetti specificati.</summary>
      <returns>Copia di <paramref name="format" /> in cui gli elementi di formato vengono sostituiti dalle rappresentazioni di stringa di <paramref name="arg0" /> e <paramref name="arg1" />.</returns>
      <param name="format">Stringa in formato composito. </param>
      <param name="arg0">Primo oggetto da formattare. </param>
      <param name="arg1">Secondo oggetto da formattare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is not zero or one. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object,System.Object,System.Object)">
      <summary>Sostituisce gli elementi di formato in una stringa specificata con le rappresentazioni di stringa di tre oggetti specificati.</summary>
      <returns>Copia di <paramref name="format" /> in cui gli elementi di formato sono stati sostituiti dalle rappresentazioni di stringa di <paramref name="arg0" />, <paramref name="arg1" /> e <paramref name="arg2" />.</returns>
      <param name="format">Stringa in formato composito.</param>
      <param name="arg0">Primo oggetto da formattare. </param>
      <param name="arg1">Secondo oggetto da formattare. </param>
      <param name="arg2">Terzo oggetto da formattare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than two. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object[])">
      <summary>Sostituisce l'elemento di formato presente in una stringa specificata con la rappresentazione di stringa di un oggetto corrispondente in una matrice specificata.</summary>
      <returns>Copia di <paramref name="format" /> in cui gli elementi di formato sono stati sostituiti dalla rappresentazione di stringa degli oggetti corrispondenti in <paramref name="args" />.</returns>
      <param name="format">Stringa in formato composito.</param>
      <param name="args">Matrice di oggetti che contiene zero o più oggetti da formattare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> or <paramref name="args" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to the length of the <paramref name="args" /> array. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.GetHashCode">
      <summary>Restituisce il codice hash di questa stringa.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.Char)">
      <summary>Restituisce l'indice in base zero della prima occorrenza del carattere Unicode specificato in questa stringa.</summary>
      <returns>Posizione dell'indice in base zero di <paramref name="value" /> se viene trovato il carattere; in caso contrario, -1.</returns>
      <param name="value">Carattere Unicode da cercare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.Char,System.Int32)">
      <summary>Restituisce l'indice in base zero della prima occorrenza del carattere Unicode specificato in questa stringa.La ricerca ha inizio alla posizione del carattere specificata.</summary>
      <returns>Posizione dell'indice in base zero di <paramref name="value" /> se viene trovato il carattere; in caso contrario, -1.</returns>
      <param name="value">Carattere Unicode da cercare. </param>
      <param name="startIndex">Posizione iniziale della ricerca. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than 0 (zero) or greater than the length of the string. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.Char,System.Int32,System.Int32)">
      <summary>Restituisce l'indice in base zero della prima occorrenza del carattere specificato in questa istanza.La ricerca viene eseguita iniziando dalla posizione specificata dei caratteri ed esamina un determinato numero di posizioni.</summary>
      <returns>Posizione dell'indice in base zero di <paramref name="value" /> se viene trovato il carattere; in caso contrario, -1.</returns>
      <param name="value">Carattere Unicode da cercare. </param>
      <param name="startIndex">Posizione iniziale della ricerca. </param>
      <param name="count">Numero di posizioni dei caratteri da esaminare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- <paramref name="startIndex" /> is greater than the length of this string.-or-<paramref name="count" /> is greater than the length of this string minus <paramref name="startIndex" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String)">
      <summary>Restituisce l'indice in base zero della prima occorrenza della stringa specificata in questa istanza.</summary>
      <returns>Posizione dell'indice in base zero di <paramref name="value" /> se viene trovata la stringa; in caso contrario, -1.Se <paramref name="value" /> è <see cref="F:System.String.Empty" />, il valore restituito è 0.</returns>
      <param name="value">Stringa da cercare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32)">
      <summary>Restituisce l'indice in base zero della prima occorrenza della stringa specificata in questa istanza.La ricerca ha inizio alla posizione del carattere specificata.</summary>
      <returns>Posizione dell'indice in base zero di <paramref name="value" /> se viene trovata la stringa; in caso contrario, -1.Se <paramref name="value" /> è <see cref="F:System.String.Empty" />, il valore restituito è <paramref name="startIndex" />.</returns>
      <param name="value">Stringa da cercare. </param>
      <param name="startIndex">Posizione iniziale della ricerca. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than 0 (zero) or greater than the length of this string.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32,System.Int32)">
      <summary>Restituisce l'indice in base zero della prima occorrenza della stringa specificata in questa istanza.La ricerca viene eseguita iniziando dalla posizione specificata dei caratteri ed esamina un determinato numero di posizioni.</summary>
      <returns>Posizione dell'indice in base zero di <paramref name="value" /> se viene trovata la stringa; in caso contrario, -1.Se <paramref name="value" /> è <see cref="F:System.String.Empty" />, il valore restituito è <paramref name="startIndex" />.</returns>
      <param name="value">Stringa da cercare. </param>
      <param name="startIndex">Posizione iniziale della ricerca. </param>
      <param name="count">Numero di posizioni dei caratteri da esaminare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- <paramref name="startIndex" /> is greater than the length of this string.-or-<paramref name="count" /> is greater than the length of this string minus <paramref name="startIndex" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)">
      <summary>Restituisce l'indice in base zero della prima occorrenza della stringa specificata nell'oggetto <see cref="T:System.String" /> corrente.I parametri specificano la posizione di ricerca iniziale nella stringa corrente, il numero di caratteri nella stringa corrente in cui effettuare la ricerca e il tipo di ricerca da usare per la stringa specificata.</summary>
      <returns>Posizione dell'indice in base zero del parametro <paramref name="value" /> se tale stringa viene trovata; in caso contrario, –1.Se <paramref name="value" /> è <see cref="F:System.String.Empty" />, il valore restituito è <paramref name="startIndex" />.</returns>
      <param name="value">Stringa da cercare. </param>
      <param name="startIndex">Posizione iniziale della ricerca. </param>
      <param name="count">Numero di posizioni dei caratteri da esaminare. </param>
      <param name="comparisonType">Uno dei valori di enumerazione che specifica le regole di ricerca. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- <paramref name="startIndex" /> is greater than the length of this instance.-or-<paramref name="count" /> is greater than the length of this string minus <paramref name="startIndex" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)">
      <summary>Restituisce l'indice in base zero della prima occorrenza della stringa specificata nell'oggetto <see cref="T:System.String" /> corrente.I parametri specificano la posizione iniziale della ricerca nella stringa corrente e il tipo di ricerca da usare per la stringa specificata.</summary>
      <returns>Posizione dell'indice in base zero del parametro <paramref name="value" /> se tale stringa viene trovata; in caso contrario, –1.Se <paramref name="value" /> è <see cref="F:System.String.Empty" />, il valore restituito è <paramref name="startIndex" />.</returns>
      <param name="value">Stringa da cercare. </param>
      <param name="startIndex">Posizione iniziale della ricerca. </param>
      <param name="comparisonType">Uno dei valori di enumerazione che specifica le regole di ricerca. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than 0 (zero) or greater than the length of this string. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.StringComparison)">
      <summary>Restituisce l'indice in base zero della prima occorrenza della stringa specificata nell'oggetto <see cref="T:System.String" /> corrente.Un parametro specifica il tipo di ricerca da usare per la stringa specificata.</summary>
      <returns>Posizione dell'indice del parametro <paramref name="value" /> se tale stringa viene trovata; in caso contrario, -1.Se <paramref name="value" /> è <see cref="F:System.String.Empty" />, il valore restituito è 0.</returns>
      <param name="value">Stringa da cercare. </param>
      <param name="comparisonType">Uno dei valori di enumerazione che specifica le regole di ricerca. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.IndexOfAny(System.Char[])">
      <summary>Restituisce l'indice in base zero della prima occorrenza in questa istanza di qualsiasi carattere presente in una matrice di caratteri Unicode specificata.</summary>
      <returns>Posizione dell'indice in base zero della prima occorrenza di questa istanza in cui è stato trovato un carattere in <paramref name="anyOf" />; -1 se non è stato trovato alcun carattere in <paramref name="anyOf" />.</returns>
      <param name="anyOf">Matrice di caratteri Unicode contenente uno o più caratteri da cercare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.IndexOfAny(System.Char[],System.Int32)">
      <summary>Restituisce l'indice in base zero della prima occorrenza in questa istanza di qualsiasi carattere presente in una matrice di caratteri Unicode specificata.La ricerca ha inizio alla posizione del carattere specificata.</summary>
      <returns>Posizione dell'indice in base zero della prima occorrenza di questa istanza in cui è stato trovato un carattere in <paramref name="anyOf" />; -1 se non è stato trovato alcun carattere in <paramref name="anyOf" />.</returns>
      <param name="anyOf">Matrice di caratteri Unicode contenente uno o più caratteri da cercare. </param>
      <param name="startIndex">Posizione iniziale della ricerca. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is negative.-or- <paramref name="startIndex" /> is greater than the number of characters in this instance. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.IndexOfAny(System.Char[],System.Int32,System.Int32)">
      <summary>Restituisce l'indice in base zero della prima occorrenza in questa istanza di qualsiasi carattere presente in una matrice di caratteri Unicode specificata.La ricerca viene eseguita iniziando dalla posizione specificata dei caratteri ed esamina un determinato numero di posizioni.</summary>
      <returns>Posizione dell'indice in base zero della prima occorrenza di questa istanza in cui è stato trovato un carattere in <paramref name="anyOf" />; -1 se non è stato trovato alcun carattere in <paramref name="anyOf" />.</returns>
      <param name="anyOf">Matrice di caratteri Unicode contenente uno o più caratteri da cercare. </param>
      <param name="startIndex">Posizione iniziale della ricerca. </param>
      <param name="count">Numero di posizioni dei caratteri da esaminare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- <paramref name="count" /> + <paramref name="startIndex" /> is greater than the number of characters in this instance. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Insert(System.Int32,System.String)">
      <summary>Restituisce una nuova stringa in cui una stringa specificata viene inserita in una posizione di indice specificata in questa istanza. </summary>
      <returns>Nuova stringa equivalente a questa istanza, ma con <paramref name="value" /> inserito in corrispondenza della posizione <paramref name="startIndex" />.</returns>
      <param name="startIndex">La posizione dell'indice in base zero dell'inserimento. </param>
      <param name="value">Stringa da inserire. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is negative or greater than the length of this instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IsNullOrEmpty(System.String)">
      <summary>Indica se la stringa specificata è null o una stringa <see cref="F:System.String.Empty" />.</summary>
      <returns>true se il parametro <paramref name="value" /> è null o una stringa vuota (""); in caso contrario, false.</returns>
      <param name="value">Stringa da testare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IsNullOrWhiteSpace(System.String)">
      <summary>Indica se una stringa specificata è null, vuota o è composta solo da spazi vuoti.</summary>
      <returns>true se il parametro <paramref name="value" /> è null o <see cref="F:System.String.Empty" /> oppure se <paramref name="value" /> è composto solo da spazi vuoti. </returns>
      <param name="value">Stringa da testare.</param>
    </member>
    <member name="M:System.String.Join(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Concatena i membri di una raccolta <see cref="T:System.Collections.Generic.IEnumerable`1" /> costruita di tipo <see cref="T:System.String" />, usando tra i membri il separatore specificato.</summary>
      <returns>Stringa costituita dai membri di <paramref name="values" /> delimitati dalla stringa <paramref name="separator" />.Se <paramref name="values" /> non dispone di membri, il metodo restituisce <see cref="F:System.String.Empty" />.</returns>
      <param name="separator">Stringa da usare come separatore.<paramref name="separator" /> è incluso solo nella stringa restituita solo se <paramref name="values" /> presenta più di un elemento.</param>
      <param name="values">Raccolta che contiene le stringhe da concatenare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Join``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>Concatena i membri di una raccolta, usando tra i membri il separatore specificato.</summary>
      <returns>Stringa costituita dai membri di <paramref name="values" /> delimitati dalla stringa <paramref name="separator" />.Se <paramref name="values" /> non dispone di membri, il metodo restituisce <see cref="F:System.String.Empty" />.</returns>
      <param name="separator">Stringa da usare come separatore.<paramref name="separator" /> è incluso solo nella stringa restituita solo se <paramref name="values" /> presenta più di un elemento.</param>
      <param name="values">Raccolta che contiene gli oggetti da concatenare.</param>
      <typeparam name="T">Tipo dei membri di <paramref name="values" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Join(System.String,System.Object[])">
      <summary>Concatena gli elementi di una matrice di oggetti, usando tra gli elementi il separatore specificato.</summary>
      <returns>Stringa costituita dagli elementi di <paramref name="values" /> delimitati dalla stringa <paramref name="separator" />.Se <paramref name="values" /> è una matrice vuota, il metodo restituisce <see cref="F:System.String.Empty" />.</returns>
      <param name="separator">Stringa da usare come separatore.<paramref name="separator" /> è incluso solo nella stringa restituita solo se <paramref name="values" /> presenta più di un elemento.</param>
      <param name="values">Matrice contenente gli elementi da concatenare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Join(System.String,System.String[])">
      <summary>Concatena tutti gli elementi di una matrice di stringhe, usando tra gli elementi il separatore specificato. </summary>
      <returns>Stringa costituita dagli elementi di <paramref name="value" /> delimitati dalla stringa <paramref name="separator" />.Se <paramref name="value" /> è una matrice vuota, il metodo restituisce <see cref="F:System.String.Empty" />.</returns>
      <param name="separator">Stringa da usare come separatore.<paramref name="separator" /> è incluso solo nella stringa restituita solo se <paramref name="value" /> presenta più di un elemento.</param>
      <param name="value">Matrice contenente gli elementi da concatenare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Join(System.String,System.String[],System.Int32,System.Int32)">
      <summary>Concatena gli elementi specificati di una matrice di stringhe, usando tra gli elementi il separatore specificato. </summary>
      <returns>Stringa costituita dalle stringhe di <paramref name="value" /> delimitate dalla stringa <paramref name="separator" />. -oppure-<see cref="F:System.String.Empty" /> se <paramref name="count" /> è zero, se <paramref name="value" /> non ha elementi o se <paramref name="separator" /> e tutti gli elementi di <paramref name="value" /> sono <see cref="F:System.String.Empty" />.</returns>
      <param name="separator">Stringa da usare come separatore.<paramref name="separator" /> è incluso solo nella stringa restituita solo se <paramref name="value" /> presenta più di un elemento.</param>
      <param name="value">Matrice contenente gli elementi da concatenare. </param>
      <param name="startIndex">Primo elemento di <paramref name="value" /> da usare. </param>
      <param name="count">Numero di elementi del parametro <paramref name="value" /> da usare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="count" /> is less than 0.-or- <paramref name="startIndex" /> plus <paramref name="count" /> is greater than the number of elements in <paramref name="value" />. </exception>
      <exception cref="T:System.OutOfMemoryException">Out of memory.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.Char)">
      <summary>Restituisce la posizione nell'indice in base zero dell'ultima occorrenza di un carattere Unicode specificato all'interno di questa istanza.</summary>
      <returns>Posizione dell'indice in base zero di <paramref name="value" /> se viene trovato il carattere; in caso contrario, -1.</returns>
      <param name="value">Carattere Unicode da cercare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.Char,System.Int32)">
      <summary>Restituisce la posizione nell'indice in base zero dell'ultima occorrenza di un carattere Unicode specificato all'interno di questa istanza.La ricerca inizia in corrispondenza di una posizione di carattere specificata e continua all'indietro verso l'inizio della stringa.</summary>
      <returns>Posizione dell'indice in base zero di <paramref name="value" /> se tale carattere viene trovato oppure –1 se non viene trovato o se l'istanza corrente è uguale a <see cref="F:System.String.Empty" />.</returns>
      <param name="value">Carattere Unicode da cercare. </param>
      <param name="startIndex">Posizione iniziale della ricerca.La ricerca procede da <paramref name="startIndex" /> verso l'inizio dell'istanza.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than or equal to the length of this instance.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.Char,System.Int32,System.Int32)">
      <summary>Restituisce la posizione nell'indice in base zero dell'ultima occorrenza del carattere Unicode specificato in una sottostringa all'interno di questa istanza.La ricerca inizia in una posizione di carattere specificata e continua all'indietro verso l'inizio della stringa per un determinato numero di posizioni dei caratteri.</summary>
      <returns>Posizione dell'indice in base zero di <paramref name="value" /> se tale carattere viene trovato oppure –1 se non viene trovato o se l'istanza corrente è uguale a <see cref="F:System.String.Empty" />.</returns>
      <param name="value">Carattere Unicode da cercare. </param>
      <param name="startIndex">Posizione iniziale della ricerca.La ricerca procede da <paramref name="startIndex" /> verso l'inizio dell'istanza.</param>
      <param name="count">Numero di posizioni dei caratteri da esaminare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than or equal to the length of this instance.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" />
                 - <paramref name="count" /> + 1 is less than zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String)">
      <summary>Restituisce la posizione nell'indice in base zero dell'ultima occorrenza di una stringa specificata all'interno di questa istanza.</summary>
      <returns>Posizione iniziale nell'indice in base zero di <paramref name="value" /> se viene trovata la stringa; in caso contrario, -1.Se <paramref name="value" /> è <see cref="F:System.String.Empty" />, il valore restituito è l'ultima posizione dell'indice in questa istanza.</returns>
      <param name="value">Stringa da cercare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32)">
      <summary>Restituisce la posizione nell'indice in base zero dell'ultima occorrenza di una stringa specificata all'interno di questa istanza.La ricerca inizia in corrispondenza di una posizione di carattere specificata e continua all'indietro verso l'inizio della stringa.</summary>
      <returns>Posizione dell'indice iniziale in base zero di <paramref name="value" /> se tale stringa viene trovata oppure -1 se non viene trovata o se l'istanza corrente è uguale a <see cref="F:System.String.Empty" />.Se <paramref name="value" /> è <see cref="F:System.String.Empty" />, il valore restituito sarà il più piccolo tra <paramref name="startIndex" /> e l'ultima posizione dell'indice in questa istanza.</returns>
      <param name="value">Stringa da cercare. </param>
      <param name="startIndex">Posizione iniziale della ricerca.La ricerca procede da <paramref name="startIndex" /> verso l'inizio dell'istanza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than the length of the current instance. -or-The current instance equals <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than -1 or greater than zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32)">
      <summary>Restituisce la posizione nell'indice in base zero dell'ultima occorrenza di una stringa specificata all'interno di questa istanza.La ricerca inizia in una posizione di carattere specificata e continua all'indietro verso l'inizio della stringa per un determinato numero di posizioni dei caratteri.</summary>
      <returns>Posizione dell'indice iniziale in base zero di <paramref name="value" /> se tale stringa viene trovata oppure -1 se non viene trovata o se l'istanza corrente è uguale a <see cref="F:System.String.Empty" />.Se <paramref name="value" /> è <see cref="F:System.String.Empty" />, il valore restituito sarà il più piccolo tra <paramref name="startIndex" /> e l'ultima posizione dell'indice in questa istanza.</returns>
      <param name="value">Stringa da cercare. </param>
      <param name="startIndex">Posizione iniziale della ricerca.La ricerca procede da <paramref name="startIndex" /> verso l'inizio dell'istanza.</param>
      <param name="count">Numero di posizioni dei caratteri da esaminare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and  <paramref name="startIndex" /> is negative.-or- The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is greater than the length of this instance.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" />
                 - <paramref name="count" /> + 1 specifies a position that is not within this instance. -or-The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="start" /> is less than -1 or greater than zero. -or-The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="count" /> is greater than 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)">
      <summary>Restituisce la posizione nell'indice in base zero dell'ultima occorrenza di una stringa specificata all'interno di questa istanza.La ricerca inizia in una posizione del carattere specificata e continua all'indietro verso l'inizio della stringa per il numero di posizioni dei caratteri indicato.Un parametro specifica il tipo di confronto da effettuare durante la ricerca della stringa specificata.</summary>
      <returns>Posizione dell'indice iniziale in base zero del parametro <paramref name="value" /> se tale stringa viene trovata oppure -1 se non viene trovata o se l'istanza corrente è uguale a <see cref="F:System.String.Empty" />.Se <paramref name="value" /> è <see cref="F:System.String.Empty" />, il valore restituito sarà il più piccolo tra <paramref name="startIndex" /> e l'ultima posizione dell'indice in questa istanza.</returns>
      <param name="value">Stringa da cercare. </param>
      <param name="startIndex">Posizione iniziale della ricerca.La ricerca procede da <paramref name="startIndex" /> verso l'inizio dell'istanza.</param>
      <param name="count">Numero di posizioni dei caratteri da esaminare. </param>
      <param name="comparisonType">Uno dei valori di enumerazione che specifica le regole di ricerca. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is negative.-or- The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is greater than the length of this instance.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> + 1 - <paramref name="count" /> specifies a position that is not within this instance. -or-The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="start" /> is less than -1 or greater than zero. -or-The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="count" /> is greater than 1. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)">
      <summary>Restituisce l'indice in base zero dell'ultima occorrenza di una stringa specificata all'interno dell'oggetto <see cref="T:System.String" /> corrente.La ricerca inizia in corrispondenza di una posizione di carattere specificata e continua all'indietro verso l'inizio della stringa.Un parametro specifica il tipo di confronto da effettuare durante la ricerca della stringa specificata.</summary>
      <returns>Posizione dell'indice iniziale in base zero del parametro <paramref name="value" /> se tale stringa viene trovata oppure -1 se non viene trovata o se l'istanza corrente è uguale a <see cref="F:System.String.Empty" />.Se <paramref name="value" /> è <see cref="F:System.String.Empty" />, il valore restituito sarà il più piccolo tra <paramref name="startIndex" /> e l'ultima posizione dell'indice in questa istanza.</returns>
      <param name="value">Stringa da cercare. </param>
      <param name="startIndex">Posizione iniziale della ricerca.La ricerca procede da <paramref name="startIndex" /> verso l'inizio dell'istanza.</param>
      <param name="comparisonType">Uno dei valori di enumerazione che specifica le regole di ricerca. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than the length of the current instance. -or-The current instance equals <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than -1 or greater than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.StringComparison)">
      <summary>Restituisce l'indice in base zero dell'ultima occorrenza di una stringa specificata all'interno dell'oggetto <see cref="T:System.String" /> corrente.Un parametro specifica il tipo di ricerca da usare per la stringa specificata.</summary>
      <returns>Posizione iniziale dell'indice in base zero del parametro <paramref name="value" /> se tale stringa viene trovata; in caso contrario, -1.Se <paramref name="value" /> è <see cref="F:System.String.Empty" />, il valore restituito è l'ultima posizione dell'indice in questa istanza.</returns>
      <param name="value">Stringa da cercare. </param>
      <param name="comparisonType">Uno dei valori di enumerazione che specifica le regole di ricerca. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.LastIndexOfAny(System.Char[])">
      <summary>Restituisce la posizione nell'indice in base zero dell'ultima occorrenza in questa istanza di uno o più caratteri specificati in una matrice di caratteri Unicode.</summary>
      <returns>Posizione dell'indice dell'ultima occorrenza di questa istanza in cui è stato trovato un carattere in <paramref name="anyOf" />; -1 se non è stato trovato alcun carattere in <paramref name="anyOf" />.</returns>
      <param name="anyOf">Matrice di caratteri Unicode contenente uno o più caratteri da cercare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOfAny(System.Char[],System.Int32)">
      <summary>Restituisce la posizione nell'indice in base zero dell'ultima occorrenza in questa istanza di uno o più caratteri specificati in una matrice di caratteri Unicode.La ricerca inizia in corrispondenza di una posizione di carattere specificata e continua all'indietro verso l'inizio della stringa.</summary>
      <returns>Posizione dell'indice dell'ultima occorrenza di questa istanza in cui è stato trovato un carattere in <paramref name="anyOf" />; -1 se non è stato trovato alcun carattere in <paramref name="anyOf" /> oppure se l'istanza corrente è uguale a <see cref="F:System.String.Empty" />.</returns>
      <param name="anyOf">Matrice di caratteri Unicode contenente uno o più caratteri da cercare. </param>
      <param name="startIndex">Posizione iniziale della ricerca.La ricerca procede da <paramref name="startIndex" /> verso l'inizio dell'istanza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> specifies a position that is not within this instance. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOfAny(System.Char[],System.Int32,System.Int32)">
      <summary>Restituisce la posizione nell'indice in base zero dell'ultima occorrenza in questa istanza di uno o più caratteri specificati in una matrice di caratteri Unicode.La ricerca inizia in una posizione di carattere specificata e continua all'indietro verso l'inizio della stringa per un determinato numero di posizioni dei caratteri.</summary>
      <returns>Posizione dell'indice dell'ultima occorrenza di questa istanza in cui è stato trovato un carattere in <paramref name="anyOf" />; -1 se non è stato trovato alcun carattere in <paramref name="anyOf" /> oppure se l'istanza corrente è uguale a <see cref="F:System.String.Empty" />.</returns>
      <param name="anyOf">Matrice di caratteri Unicode contenente uno o più caratteri da cercare. </param>
      <param name="startIndex">Posizione iniziale della ricerca.La ricerca procede da <paramref name="startIndex" /> verso l'inizio dell'istanza.</param>
      <param name="count">Numero di posizioni dei caratteri da esaminare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> minus <paramref name="count" /> + 1 is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.String.Length">
      <summary>Ottiene il numero di caratteri nell'oggetto <see cref="T:System.String" /> corrente.</summary>
      <returns>Numero di caratteri nella stringa corrente.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.op_Equality(System.String,System.String)">
      <summary>Determina se due stringhe specificate hanno lo stesso valore.</summary>
      <returns>true se il valore di <paramref name="a" /> è uguale al valore di <paramref name="b" />; in caso contrario, false.</returns>
      <param name="a">Prima stringa da confrontare o null. </param>
      <param name="b">Seconda stringa da confrontare o null. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.String.op_Inequality(System.String,System.String)">
      <summary>Determina se due stringhe specificate hanno valori diversi.</summary>
      <returns>true se il valore del parametro <paramref name="a" /> è diverso dal valore del parametro <paramref name="b" />; in caso contrario, false.</returns>
      <param name="a">Prima stringa da confrontare o null. </param>
      <param name="b">Seconda stringa da confrontare o null. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.String.PadLeft(System.Int32)">
      <summary>Restituisce una nuova stringa che allinea a destra i caratteri in questa istanza mediante l'aggiunta a sinistra di un numero di spazi tale da ottenere la lunghezza totale specificata.</summary>
      <returns>Nuova stringa equivalente a questa istanza, ma allineata a destra mediante l'aggiunta a sinistra di un numero di spazi tale da ottenere la lunghezza <paramref name="totalWidth" />.Tuttavia, se <paramref name="totalWidth" /> è minore della lunghezza di questa istanza, il metodo restituisce un riferimento all'istanza esistente.Se <paramref name="totalWidth" /> è uguale alla lunghezza di questa istanza, il metodo restituisce una nuova stringa identica a questa istanza.</returns>
      <param name="totalWidth">Numero di caratteri nella stringa risultante che corrisponde al numero di caratteri originali più i caratteri di riempimento aggiuntivi. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="totalWidth" /> is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.PadLeft(System.Int32,System.Char)">
      <summary>Restituisce una nuova stringa che allinea a destra i caratteri in questa istanza mediante l'aggiunta a sinistra di una sequenza di elementi pari al carattere Unicode specificato, in modo da ottenere la lunghezza totale specificata.</summary>
      <returns>Nuova stringa equivalente a questa istanza, ma allineata a destra mediante l'aggiunta a sinistra di un numero di caratteri <paramref name="paddingChar" /> tale da ottenere la lunghezza <paramref name="totalWidth" />.Tuttavia, se <paramref name="totalWidth" /> è minore della lunghezza di questa istanza, il metodo restituisce un riferimento all'istanza esistente.Se <paramref name="totalWidth" /> è uguale alla lunghezza di questa istanza, il metodo restituisce una nuova stringa identica a questa istanza.</returns>
      <param name="totalWidth">Numero di caratteri nella stringa risultante che corrisponde al numero di caratteri originali più i caratteri di riempimento aggiuntivi. </param>
      <param name="paddingChar">Carattere di riempimento Unicode. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="totalWidth" /> is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.PadRight(System.Int32)">
      <summary>Restituisce una nuova stringa che allinea a sinistra i caratteri in questa stringa mediante l'aggiunta a destra di un numero di spazi tale da ottenere la lunghezza totale specificata.</summary>
      <returns>Nuova stringa equivalente a questa istanza, ma allineata a sinistra mediante l'aggiunta a destra di un numero di spazi tale da ottenere la lunghezza <paramref name="totalWidth" />.Tuttavia, se <paramref name="totalWidth" /> è minore della lunghezza di questa istanza, il metodo restituisce un riferimento all'istanza esistente.Se <paramref name="totalWidth" /> è uguale alla lunghezza di questa istanza, il metodo restituisce una nuova stringa identica a questa istanza.</returns>
      <param name="totalWidth">Numero di caratteri nella stringa risultante che corrisponde al numero di caratteri originali più i caratteri di riempimento aggiuntivi. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="totalWidth" /> is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.PadRight(System.Int32,System.Char)">
      <summary>Restituisce una nuova stringa che allinea a sinistra i caratteri in questa stringa mediante l'aggiunta a destra di un carattere Unicode specificato, in modo da ottenere la lunghezza totale specificata.</summary>
      <returns>Nuova stringa equivalente a questa istanza, ma allineata a sinistra mediante l'aggiunta a destra di un numero di caratteri <paramref name="paddingChar" /> tale da ottenere la lunghezza <paramref name="totalWidth" />.Tuttavia, se <paramref name="totalWidth" /> è minore della lunghezza di questa istanza, il metodo restituisce un riferimento all'istanza esistente.Se <paramref name="totalWidth" /> è uguale alla lunghezza di questa istanza, il metodo restituisce una nuova stringa identica a questa istanza.</returns>
      <param name="totalWidth">Numero di caratteri nella stringa risultante che corrisponde al numero di caratteri originali più i caratteri di riempimento aggiuntivi. </param>
      <param name="paddingChar">Carattere di riempimento Unicode. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="totalWidth" /> is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Remove(System.Int32)">
      <summary>Restituisce una nuova stringa in cui sono stati eliminati tutti i caratteri dell'istanza corrente a partire da una posizione specificata fino all'ultima posizione.</summary>
      <returns>Nuova stringa equivalente a questa stringa tranne che per i caratteri eliminati.</returns>
      <param name="startIndex">Posizione in base zero da cui iniziare l'eliminazione dei caratteri. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero.-or- <paramref name="startIndex" /> specifies a position that is not within this string. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Remove(System.Int32,System.Int32)">
      <summary>Restituisce una nuova stringa in cui è stato eliminato un numero specificato di caratteri nell'istanza corrente a partire da una posizione specificata.</summary>
      <returns>Nuova stringa equivalente a questa istanza tranne che per i caratteri eliminati.</returns>
      <param name="startIndex">Posizione in base zero da cui iniziare l'eliminazione dei caratteri. </param>
      <param name="count">Numero di caratteri da eliminare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Either <paramref name="startIndex" /> or <paramref name="count" /> is less than zero.-or- <paramref name="startIndex" /> plus <paramref name="count" /> specify a position outside this instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Replace(System.Char,System.Char)">
      <summary>Restituisce una nuova stringa in cui tutte le occorrenze di un carattere Unicode specificato presenti in questa istanza vengono sostituite con un altro carattere Unicode specificato.</summary>
      <returns>Stringa equivalente a questa istanza, salvo per il fatto che tutte le istanze di <paramref name="oldChar" /> vengono sostituite con <paramref name="newChar" />.Se <paramref name="oldChar" /> non viene trovato nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
      <param name="oldChar">Carattere Unicode da sostituire. </param>
      <param name="newChar">Carattere Unicode con cui sostituire tutte le occorrenze di <paramref name="oldChar" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Replace(System.String,System.String)">
      <summary>Restituisce una nuova stringa in cui tutte le occorrenze di una stringa specificata nell'istanza corrente vengono sostituite con un'altra stringa specificata.</summary>
      <returns>Stringa equivalente alla stringa corrente, salvo per il fatto che tutte le istanze di <paramref name="oldValue" /> vengono sostituite con <paramref name="newValue" />.Se <paramref name="oldValue" /> non viene trovato nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
      <param name="oldValue">Stringa da sostituire. </param>
      <param name="newValue">Stringa con cui sostituire tutte le occorrenze di <paramref name="oldValue" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oldValue" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="oldValue" /> is the empty string (""). </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[])">
      <summary>Restituisce una matrice di stringhe contenente le sottostringhe di questa istanza delimitate dagli elementi di una matrice di caratteri Unicode specificata.</summary>
      <returns>Matrice i cui elementi contengono le sottostringhe in questa istanza delimitate da uno o più caratteri in <paramref name="separator" />.Per altre informazioni, vedere la sezione Osservazioni.</returns>
      <param name="separator">Matrice di caratteri Unicode che delimita le sottostringhe di questa istanza, matrice vuota senza delimitatori o null. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[],System.Int32)">
      <summary>Restituisce una matrice di stringhe contenente le sottostringhe di questa istanza delimitate dagli elementi di una matrice di caratteri Unicode specificata.Un parametro specifica il numero massimo di sottostringhe da restituire.</summary>
      <returns>Matrice i cui elementi contengono le sottostringhe in questa istanza delimitate da uno o più caratteri in <paramref name="separator" />.Per altre informazioni, vedere la sezione Osservazioni.</returns>
      <param name="separator">Matrice di caratteri Unicode che delimita le sottostringhe di questa istanza, matrice vuota senza delimitatori o null. </param>
      <param name="count">Numero massimo di sottostringhe da restituire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[],System.Int32,System.StringSplitOptions)">
      <summary>Restituisce una matrice di stringhe contenente le sottostringhe di questa stringa delimitate dagli elementi di una matrice di caratteri Unicode specificata.I parametri specificano il numero massimo di sottostringhe da restituire e se restituire elementi di matrice vuoti.</summary>
      <returns>Matrice i cui elementi contengono le sottostringhe in questa stringa delimitate da uno o più caratteri in <paramref name="separator" />.Per altre informazioni, vedere la sezione Osservazioni.</returns>
      <param name="separator">Matrice di caratteri Unicode che delimita le sottostringhe di questa stringa, matrice vuota senza delimitatori o null. </param>
      <param name="count">Numero massimo di sottostringhe da restituire. </param>
      <param name="options">
        <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" /> per omettere gli elementi di matrice vuoti dalla matrice restituita; <see cref="F:System.StringSplitOptions.None" /> per includere tali elementi. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[],System.StringSplitOptions)">
      <summary>Restituisce una matrice di stringhe contenente le sottostringhe di questa stringa delimitate dagli elementi di una matrice di caratteri Unicode specificata.Un parametro specifica se restituire gli elementi vuoti di una matrice.</summary>
      <returns>Matrice i cui elementi contengono le sottostringhe in questa stringa delimitate da uno o più caratteri in <paramref name="separator" />.Per altre informazioni, vedere la sezione Osservazioni.</returns>
      <param name="separator">Matrice di caratteri Unicode che delimita le sottostringhe di questa stringa, matrice vuota senza delimitatori o null. </param>
      <param name="options">
        <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" /> per omettere gli elementi di matrice vuoti dalla matrice restituita; <see cref="F:System.StringSplitOptions.None" /> per includere tali elementi. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.String[],System.Int32,System.StringSplitOptions)">
      <summary>Restituisce una matrice di stringhe contenente le sottostringhe di questa stringa delimitate dagli elementi di una matrice di stringhe specificata.I parametri specificano il numero massimo di sottostringhe da restituire e se restituire elementi di matrice vuoti.</summary>
      <returns>Matrice i cui elementi contengono le sottostringhe in questa stringa delimitate da una o più stringhe indicate in <paramref name="separator" />.Per altre informazioni, vedere la sezione Osservazioni.</returns>
      <param name="separator">Matrice di stringhe che delimita le sottostringhe di questa stringa, matrice vuota senza delimitatori o null. </param>
      <param name="count">Numero massimo di sottostringhe da restituire. </param>
      <param name="options">
        <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" /> per omettere gli elementi di matrice vuoti dalla matrice restituita; <see cref="F:System.StringSplitOptions.None" /> per includere tali elementi. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.String[],System.StringSplitOptions)">
      <summary>Restituisce una matrice di stringhe contenente le sottostringhe di questa stringa delimitate dagli elementi di una matrice di stringhe specificata.Un parametro specifica se restituire gli elementi vuoti di una matrice.</summary>
      <returns>Matrice i cui elementi contengono le sottostringhe in questa stringa delimitate da una o più stringhe indicate in <paramref name="separator" />.Per altre informazioni, vedere la sezione Osservazioni.</returns>
      <param name="separator">Matrice di stringhe che delimita le sottostringhe di questa stringa, matrice vuota senza delimitatori o null. </param>
      <param name="options">
        <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" /> per omettere gli elementi di matrice vuoti dalla matrice restituita; <see cref="F:System.StringSplitOptions.None" /> per includere tali elementi. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.StartsWith(System.String)">
      <summary>Determina se l'inizio di questa istanza di stringa corrisponde alla stringa specificata.</summary>
      <returns>true se l'inizio di questa stringa corrisponde al parametro <paramref name="value" />; in caso contrario, false.</returns>
      <param name="value">Stringa da confrontare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.StartsWith(System.String,System.StringComparison)">
      <summary>Determina se l'inizio di questa istanza di stringa corrisponde alla stringa specificata se confrontata usando l'opzione di confronto specificata.</summary>
      <returns>true se l'istanza inizia con <paramref name="value" />; in caso contrario, false.</returns>
      <param name="value">Stringa da confrontare. </param>
      <param name="comparisonType">Uno dei valori di enumerazione che determina la modalità di confronto fra questa stringa e <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.Substring(System.Int32)">
      <summary>Recupera una sottostringa da questa istanza.La sottostringa inizia in corrispondenza di un carattere specificato e continua fino alla fine della stringa.</summary>
      <returns>Stringa equivalente alla sottostringa che inizia in corrispondenza di <paramref name="startIndex" /> in questa istanza oppure <see cref="F:System.String.Empty" /> se <paramref name="startIndex" /> è uguale alla lunghezza di questa istanza.</returns>
      <param name="startIndex">Posizione iniziale in base zero del carattere di una sottostringa in questa istanza. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of this instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Substring(System.Int32,System.Int32)">
      <summary>Recupera una sottostringa da questa istanza.La sottostringa inizia in corrispondenza della posizione del carattere specificata e ha la lunghezza specificata.</summary>
      <returns>Stringa equivalente alla sottostringa di lunghezza <paramref name="length" /> che inizia in corrispondenza di <paramref name="startIndex" /> in questa istanza oppure <see cref="F:System.String.Empty" /> se <paramref name="startIndex" /> è uguale alla lunghezza di questa istanza e <paramref name="length" /> è zero.</returns>
      <param name="startIndex">Posizione iniziale in base zero del carattere di una sottostringa in questa istanza. </param>
      <param name="length">Numero di caratteri nella sottostringa. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> plus <paramref name="length" /> indicates a position not within this instance.-or- <paramref name="startIndex" /> or <paramref name="length" /> is less than zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Restituisce un enumeratore che esegue l'iterazione dell'oggetto <see cref="T:System.String" /> corrente. </summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> di tipo <see cref="T:System.Char" /> che può essere usato per eseguire l'iterazione dell'oggetto <see cref="T:System.String" /> corrente.</returns>
    </member>
    <member name="M:System.String.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che esegue l'iterazione dell'oggetto <see cref="T:System.String" /> corrente. </summary>
      <returns>Enumeratore utilizzabile per eseguire l'iterazione degli elementi della stringa corrente.</returns>
    </member>
    <member name="M:System.String.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
      <returns>Intero con segno che indica l'ordine relativo dell'istanza e di <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Oggetto da confrontare con questa istanza o null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.String" />. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.String.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true se il valore della stringa corrente è <see cref="F:System.Boolean.TrueString" />; false se il valore della stringa corrente è <see cref="F:System.Boolean.FalseString" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.FormatException">The value of the current string is not <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.String" /> corrente.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</summary>
      <returns>Carattere in corrispondenza dell'indice 0 nell'oggetto <see cref="T:System.String" /> corrente.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDateTime(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.String" /> corrente.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.String" /> corrente.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number less than <see cref="F:System.Decimal.MinValue" /> or than <see cref="F:System.Decimal.MaxValue" /> greater. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.String" /> corrente.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.String" /> corrente.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.String" /> corrente.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.String" /> corrente.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.String" /> corrente.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.String" /> corrente.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToString(System.IFormatProvider)"></member>
    <member name="M:System.String.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.String" /> corrente.</returns>
      <param name="type">Tipo dell'oggetto restituito. </param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">The value of the current <see cref="T:System.String" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.String" /> corrente.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />.</exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.String" /> corrente.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater <see cref="F:System.UInt32.MaxValue" /> or less than <see cref="F:System.UInt32.MinValue" /></exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</summary>
      <returns>Valore convertito dell'oggetto <see cref="T:System.String" /> corrente.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
    </member>
    <member name="M:System.String.ToCharArray">
      <summary>Copia i caratteri di questa istanza in una matrice di caratteri Unicode. </summary>
      <returns>Matrice di caratteri Unicode i cui elementi sono i singoli caratteri di questa istanza.Se l'istanza è una stringa vuota, la matrice restituita sarà vuota e di lunghezza zero.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.ToCharArray(System.Int32,System.Int32)">
      <summary>Copia i caratteri di una determinata sottostringa di questa istanza in una matrice di caratteri Unicode.</summary>
      <returns>Matrice di caratteri Unicode i cui elementi sono il numero <paramref name="length" /> di caratteri di questa istanza a partire dalla posizione <paramref name="startIndex" /> del carattere.</returns>
      <param name="startIndex">Posizione iniziale di una sottostringa in questa istanza. </param>
      <param name="length">Lunghezza della sottostringa in questa istanza. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than zero.-or- <paramref name="startIndex" /> plus <paramref name="length" /> is greater than the length of this instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.ToLower">
      <summary>Restituisce una copia di questa stringa convertita in caratteri minuscoli.</summary>
      <returns>Stringa di caratteri minuscoli.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.ToLowerInvariant">
      <summary>Restituisce una copia dell'oggetto <see cref="T:System.String" /> convertito in caratteri minuscoli mediante le regole relative all'utilizzo di maiuscole e minuscole proprie delle impostazioni cultura invariabili.</summary>
      <returns>Equivalente in caratteri minuscoli della stringa corrente.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.ToString">
      <summary>Restituisce questa istanza di <see cref="T:System.String" />. Non viene eseguita alcuna conversione effettiva.</summary>
      <returns>Stringa corrente.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.ToUpper">
      <summary>Restituisce una copia di questa stringa convertita in caratteri maiuscoli.</summary>
      <returns>Equivalente in caratteri maiuscoli della stringa corrente.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.ToUpperInvariant">
      <summary>Restituisce una copia dell'oggetto <see cref="T:System.String" /> convertito in caratteri maiuscoli mediante le regole relative all'utilizzo di maiuscole e minuscole proprie delle impostazioni cultura invariabili.</summary>
      <returns>Equivalente in caratteri maiuscoli della stringa corrente.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.Trim">
      <summary>Rimuove tutti gli spazi vuoti iniziali e finali dall'oggetto <see cref="T:System.String" /> corrente.</summary>
      <returns>Stringa risultante dopo che tutti gli spazi vuoti sono stati rimossi dall'inizio e dalla fine della stringa corrente.Se non è possibile rimuovere alcun carattere dall'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Trim(System.Char[])">
      <summary>Rimuove dall'oggetto <see cref="T:System.String" /> corrente tutte le occorrenze iniziali e finali di un set di caratteri specificati in una matrice.</summary>
      <returns>Stringa risultante dopo che tutte le occorrenze dei caratteri specificati nel parametro <paramref name="trimChars" /> sono state rimosse dall'inizio e dalla fine della stringa corrente.Se <paramref name="trimChars" /> è null o una matrice vuota, verranno rimossi invece gli spazi vuoti.Se non è possibile rimuovere alcun carattere dall'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
      <param name="trimChars">Matrice di caratteri Unicode da rimuovere oppure null. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.TrimEnd(System.Char[])">
      <summary>Rimuove dall'oggetto <see cref="T:System.String" /> corrente tutte le occorrenze finali di un set di caratteri specificati in una matrice.</summary>
      <returns>Stringa risultante dopo che tutte le occorrenze dei caratteri specificati nel parametro <paramref name="trimChars" /> sono state rimosse dalla fine della stringa corrente.Se <paramref name="trimChars" /> è null o se è una matrice vuota, verranno rimossi invece gli spazi vuoti Unicode.Se non è possibile rimuovere alcun carattere dall'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
      <param name="trimChars">Matrice di caratteri Unicode da rimuovere oppure null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.TrimStart(System.Char[])">
      <summary>Rimuove dall'oggetto <see cref="T:System.String" /> corrente tutte le occorrenze iniziali di un set di caratteri specificati in una matrice.</summary>
      <returns>Stringa risultante dopo che tutte le occorrenze dei caratteri specificati nel parametro <paramref name="trimChars" /> sono state rimosse dall'inizio della stringa corrente.Se <paramref name="trimChars" /> è null o una matrice vuota, verranno rimossi invece gli spazi vuoti.</returns>
      <param name="trimChars">Matrice di caratteri Unicode da rimuovere oppure null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.StringComparison">
      <summary>Specifica le regole relative a ordinamento, lettere minuscole e maiuscole e impostazioni cultura che devono essere utilizzate da determinati overload dei metodi <see cref="M:System.String.Compare(System.String,System.String)" /> e <see cref="M:System.String.Equals(System.Object)" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.StringComparison.CurrentCulture">
      <summary>Confrontare le stringhe utilizzando le regole di ordinamento sensibili alle impostazioni cultura e le impostazioni cultura correnti.</summary>
    </member>
    <member name="F:System.StringComparison.CurrentCultureIgnoreCase">
      <summary>Confrontare le stringhe utilizzando le regole di ordinamento sensibili alle impostazioni cultura, le impostazioni cultura correnti e ignorando la differenza tra minuscole e maiuscole nelle stringhe confrontate.</summary>
    </member>
    <member name="F:System.StringComparison.Ordinal">
      <summary>Confrontare le stringhe utilizzando le regole di ordinamento per ordinale.</summary>
    </member>
    <member name="F:System.StringComparison.OrdinalIgnoreCase">
      <summary>Confrontare le stringhe utilizzando le regole di ordinamento per ordinale e ignorando la differenza tra minuscole e maiuscole nelle stringhe confrontate.</summary>
    </member>
    <member name="T:System.StringSplitOptions">
      <summary>Specifica se gli overload applicabili del metodo <see cref="Overload:System.String.Split" /> includono oppure omettono le sottostringhe vuote dal valore restituito.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.StringSplitOptions.None">
      <summary>Il valore restituito include elementi di matrice che contengono una stringa vuota.</summary>
    </member>
    <member name="F:System.StringSplitOptions.RemoveEmptyEntries">
      <summary>Il valore restituito non include elementi di matrice che contengono una stringa vuota.</summary>
    </member>
    <member name="T:System.ThreadStaticAttribute">
      <summary>Indica che il valore di un campo statico è univoco per ciascun thread.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ThreadStaticAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ThreadStaticAttribute" />.</summary>
    </member>
    <member name="T:System.TimeoutException">
      <summary>Eccezione generata quando il tempo a disposizione per un processo o un'operazione è esaurito.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeoutException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.TimeoutException" />.</summary>
    </member>
    <member name="M:System.TimeoutException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.TimeoutException" /> con il messaggio di errore specificato.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore. </param>
    </member>
    <member name="M:System.TimeoutException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.TimeoutException" /> con il messaggio di errore e l'eccezione interna specificati.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore. </param>
      <param name="innerException">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="innerException" /> non è null, l'eccezione corrente viene generata in un blocco catch in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.TimeSpan">
      <summary>Rappresenta un intervallo di tempo.Per esaminare il codice sorgente .NET Framework per questo tipo, vedere Origine riferimento.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.TimeSpan" /> su un numero di ore, minuti e secondi specificato.</summary>
      <param name="hours">Numero di ore. </param>
      <param name="minutes">Numero di minuti. </param>
      <param name="seconds">Numero di secondi. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.TimeSpan" /> su un numero di giorni, ore, minuti e secondi specificato.</summary>
      <param name="days">Numero di giorni. </param>
      <param name="hours">Numero di ore. </param>
      <param name="minutes">Numero di minuti. </param>
      <param name="seconds">Numero di secondi. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.TimeSpan" /> su un numero di giorni, ore, minuti, secondi e millisecondi specificato.</summary>
      <param name="days">Numero di giorni. </param>
      <param name="hours">Numero di ore. </param>
      <param name="minutes">Numero di minuti. </param>
      <param name="seconds">Numero di secondi. </param>
      <param name="milliseconds">Numero di millisecondi. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int64)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.TimeSpan" /> su un numero di tick specificato.</summary>
      <param name="ticks">Periodo di tempo espresso in unità di 100 nanosecondi. </param>
    </member>
    <member name="M:System.TimeSpan.Add(System.TimeSpan)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.TimeSpan" /> il cui valore è la somma dell'oggetto <see cref="T:System.TimeSpan" /> specificato e di questa istanza.</summary>
      <returns>Nuovo oggetto che rappresenta la somma tra il valore di questa istanza e il valore di <paramref name="ts" />.</returns>
      <param name="ts">Intervallo di tempo da aggiungere.</param>
      <exception cref="T:System.OverflowException">The resulting <see cref="T:System.TimeSpan" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)">
      <summary>Confronta due valori <see cref="T:System.TimeSpan" /> e restituisce un intero che indica se il primo valore è più breve, uguale o più lungo del secondo valore.</summary>
      <returns>Uno dei valori seguenti.Valore Descrizione -1 <paramref name="t1" /> è più breve di <paramref name="t2" />. 0 <paramref name="t1" /> è uguale a <paramref name="t2" />. 1 <paramref name="t1" /> è più lungo di <paramref name="t2" />. </returns>
      <param name="t1">Primo intervallo di tempo da confrontare. </param>
      <param name="t2">Secondo intervallo di tempo da confrontare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.CompareTo(System.TimeSpan)">
      <summary>Confronta questa istanza con un oggetto <see cref="T:System.TimeSpan" /> specificato e restituisce un intero che indica se questa istanza è più breve, uguale o più lunga dell'oggetto <see cref="T:System.TimeSpan" />.</summary>
      <returns>Numero con segno che indica i valori relativi di questa istanza e di <paramref name="value" />.Valore Descrizione Intero negativo L'istanza è più breve di <paramref name="value" />. Zero L'istanza è uguale a <paramref name="value" />. Intero positivo L'istanza è più lunga di <paramref name="value" />. </returns>
      <param name="value">Oggetto da confrontare con questa istanza.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Days">
      <summary>Ottiene il componente relativo ai giorni dell'intervallo di tempo rappresentato dalla struttura <see cref="T:System.TimeSpan" /> corrente.</summary>
      <returns>Componente dell'istanza relativo al giorno.Il valore restituito può essere positivo o negativo.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Duration">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.TimeSpan" /> il cui valore è il valore assoluto dell'oggetto <see cref="T:System.TimeSpan" /> corrente.</summary>
      <returns>Nuovo oggetto il cui valore è il valore assoluto dell'oggetto <see cref="T:System.TimeSpan" /> corrente.</returns>
      <exception cref="T:System.OverflowException">The value of this instance is <see cref="F:System.TimeSpan.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="value" /> è un oggetto <see cref="T:System.TimeSpan" /> che rappresenta lo stesso intervallo di tempo della struttura corrente <see cref="T:System.TimeSpan" />; in caso contrario, false.</returns>
      <param name="value">Oggetto da confrontare con l'istanza. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Equals(System.TimeSpan)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto <see cref="T:System.TimeSpan" /> specificato.</summary>
      <returns>true se <paramref name="obj" /> rappresenta lo stesso intervallo di tempo dell'istanza; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)">
      <summary>Restituisce un valore che indica se due istanze specificate di <see cref="T:System.TimeSpan" /> sono uguali.</summary>
      <returns>true se i valori di <paramref name="t1" /> e <paramref name="t2" /> sono uguali; in caso contrario, false.</returns>
      <param name="t1">Primo intervallo di tempo da confrontare. </param>
      <param name="t2">Secondo intervallo di tempo da confrontare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromDays(System.Double)">
      <summary>Restituisce un oggetto <see cref="T:System.TimeSpan" /> che rappresenta un numero di giorni specificato, in cui la specifica è approssimata al millisecondo più vicino.</summary>
      <returns>Oggetto che rappresenta l'oggetto <paramref name="value" />.</returns>
      <param name="value">Numero di giorni, approssimato al millisecondo più vicino. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. -or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromHours(System.Double)">
      <summary>Restituisce un oggetto <see cref="T:System.TimeSpan" /> che rappresenta un numero di ore specificato, in cui la specifica è approssimata al millisecondo più vicino.</summary>
      <returns>Oggetto che rappresenta l'oggetto <paramref name="value" />.</returns>
      <param name="value">Numero di ore, approssimato al millisecondo più vicino. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. -or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromMilliseconds(System.Double)">
      <summary>Restituisce un oggetto <see cref="T:System.TimeSpan" /> che rappresenta un numero di millisecondi specificato.</summary>
      <returns>Oggetto che rappresenta l'oggetto <paramref name="value" />.</returns>
      <param name="value">Numero di millisecondi. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromMinutes(System.Double)">
      <summary>Restituisce un oggetto <see cref="T:System.TimeSpan" /> che rappresenta un numero di minuti specificato, in cui la specifica è approssimata al millisecondo più vicino.</summary>
      <returns>Oggetto che rappresenta l'oggetto <paramref name="value" />.</returns>
      <param name="value">Numero di minuti, approssimato al millisecondo più vicino. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromSeconds(System.Double)">
      <summary>Restituisce un oggetto <see cref="T:System.TimeSpan" /> che rappresenta un numero di secondi specificato, in cui la specifica è approssimata al millisecondo più vicino.</summary>
      <returns>Oggetto che rappresenta l'oggetto <paramref name="value" />.</returns>
      <param name="value">Numero di secondi, approssimato al millisecondo più vicino. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromTicks(System.Int64)">
      <summary>Restituisce un oggetto <see cref="T:System.TimeSpan" /> che rappresenta un'ora specificata, in cui la specifica è espressa in unità di tick.</summary>
      <returns>Oggetto che rappresenta l'oggetto <paramref name="value" />.</returns>
      <param name="value">Numero di tick che rappresentano un periodo di tempo. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.GetHashCode">
      <summary>Restituisce un codice hash per questa istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Hours">
      <summary>Ottiene il componente relativo alle ore dell'intervallo di tempo rappresentato dalla struttura <see cref="T:System.TimeSpan" /> corrente.</summary>
      <returns>Componente relativo alle ore della struttura <see cref="T:System.TimeSpan" /> corrente.Il valore restituito è compreso tra -23 e 23.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.MaxValue">
      <summary>Rappresenta il valore massimo di <see cref="T:System.TimeSpan" />.Questo campo è di sola lettura.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Milliseconds">
      <summary>Ottiene il componente relativo ai millisecondi dell'intervallo di tempo rappresentato dalla struttura <see cref="T:System.TimeSpan" /> corrente.</summary>
      <returns>Componente relativo ai millisecondi della struttura <see cref="T:System.TimeSpan" /> corrente.Il valore restituito è compreso tra -999 e 999.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Minutes">
      <summary>Ottiene il componente relativo ai minuti dell'intervallo di tempo rappresentato dalla struttura <see cref="T:System.TimeSpan" /> corrente.</summary>
      <returns>Componente relativo ai minuti della struttura <see cref="T:System.TimeSpan" /> corrente.Il valore restituito è compreso tra -59 e 59.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.MinValue">
      <summary>Rappresenta il valore minimo di <see cref="T:System.TimeSpan" />.Questo campo è di sola lettura.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Negate">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.TimeSpan" /> il cui valore è il valore negato di questa istanza.</summary>
      <returns>Nuovo oggetto con lo stesso valore numerico di questa istanza, ma con segno opposto.</returns>
      <exception cref="T:System.OverflowException">The negated value of this instance cannot be represented by a <see cref="T:System.TimeSpan" />; that is, the value of this instance is <see cref="F:System.TimeSpan.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)">
      <summary>Aggiunge due istanze <see cref="T:System.TimeSpan" /> specificate.</summary>
      <returns>Oggetto il cui valore è la somma dei valori <paramref name="t1" /> e <paramref name="t2" />.</returns>
      <param name="t1">Primo intervallo di tempo da aggiungere. </param>
      <param name="t2">Secondo intervallo di tempo da aggiungere.</param>
      <exception cref="T:System.OverflowException">The resulting <see cref="T:System.TimeSpan" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)">
      <summary>Indica se due istanze di <see cref="T:System.TimeSpan" /> sono uguali.</summary>
      <returns>true se i valori di <paramref name="t1" /> e <paramref name="t2" /> sono uguali; in caso contrario, false.</returns>
      <param name="t1">Primo intervallo di tempo da confrontare. </param>
      <param name="t2">Secondo intervallo di tempo da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)">
      <summary>Indica se un oggetto <see cref="T:System.TimeSpan" /> specificato è maggiore di un altro oggetto <see cref="T:System.TimeSpan" /> specificato.</summary>
      <returns>true se il valore di <paramref name="t1" /> è maggiore del valore di <paramref name="t2" />; in caso contrario, false.</returns>
      <param name="t1">Primo intervallo di tempo da confrontare. </param>
      <param name="t2">Secondo intervallo di tempo da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)">
      <summary>Indica se un oggetto <see cref="T:System.TimeSpan" /> specificato è maggiore o uguale a un altro oggetto <see cref="T:System.TimeSpan" /> specificato.</summary>
      <returns>true se il valore di <paramref name="t1" /> è maggiore o uguale al valore di <paramref name="t2" />; in caso contrario, false.</returns>
      <param name="t1">Primo intervallo di tempo da confrontare.</param>
      <param name="t2">Secondo intervallo di tempo da confrontare.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)">
      <summary>Indica se due istanze di <see cref="T:System.TimeSpan" /> non sono uguali.</summary>
      <returns>true se i valori di <paramref name="t1" /> e <paramref name="t2" /> non sono uguali; in caso contrario, false.</returns>
      <param name="t1">Primo intervallo di tempo da confrontare.</param>
      <param name="t2">Secondo intervallo di tempo da confrontare.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)">
      <summary>Indica se un oggetto <see cref="T:System.TimeSpan" /> specificato è minore di un altro oggetto <see cref="T:System.TimeSpan" /> specificato.</summary>
      <returns>true se il valore di <paramref name="t1" /> è minore del valore di <paramref name="t2" />; in caso contrario, false.</returns>
      <param name="t1">Primo intervallo di tempo da confrontare.</param>
      <param name="t2">Secondo intervallo di tempo da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)">
      <summary>Indica se un oggetto <see cref="T:System.TimeSpan" /> specificato è minore o uguale a un altro oggetto <see cref="T:System.TimeSpan" /> specificato.</summary>
      <returns>true se il valore di <paramref name="t1" /> è minore o uguale al valore di <paramref name="t2" />; in caso contrario, false.</returns>
      <param name="t1">Primo intervallo di tempo da confrontare. </param>
      <param name="t2">Secondo intervallo di tempo da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)">
      <summary>Sottrae un oggetto <see cref="T:System.TimeSpan" /> specificato da un altro oggetto <see cref="T:System.TimeSpan" /> specificato.</summary>
      <returns>Oggetto il cui valore è il risultato del valore di <paramref name="t1" /> meno il valore di <paramref name="t2" />.</returns>
      <param name="t1">Minuendo. </param>
      <param name="t2">Sottraendo. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_UnaryNegation(System.TimeSpan)">
      <summary>Restituisce un oggetto <see cref="T:System.TimeSpan" /> il cui valore è il valore negato dell'istanza specificata.</summary>
      <returns>Oggetto con lo stesso valore numerico di questa istanza, ma con segno opposto.</returns>
      <param name="t">Intervallo di tempo da negare. </param>
      <exception cref="T:System.OverflowException">The negated value of this instance cannot be represented by a <see cref="T:System.TimeSpan" />; that is, the value of this instance is <see cref="F:System.TimeSpan.MinValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_UnaryPlus(System.TimeSpan)">
      <summary>Restituisce l'istanza specificata di <see cref="T:System.TimeSpan" />.</summary>
      <returns>Intervallo di tempo specificato da <paramref name="t" />.</returns>
      <param name="t">Intervallo di tempo da restituire. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Parse(System.String)">
      <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" />. </summary>
      <returns>Intervallo di tempo che corrisponde a <paramref name="s" />.</returns>
      <param name="s">Stringa che specifica l'intervallo di tempo da convertire. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components is outside its valid range. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Parse(System.String,System.IFormatProvider)">
      <summary>Converte una rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando le informazioni di formato specifiche delle impostazioni cultura specificate.</summary>
      <returns>Intervallo di tempo che corrisponde a <paramref name="input" />, come specificato da <paramref name="formatProvider" />.</returns>
      <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando le informazioni di formato specifiche delle impostazioni cultura specificate.Il formato della rappresentazione di stringa deve corrispondere esattamente al formato specificato.</summary>
      <returns>Intervallo di tempo che corrisponde a <paramref name="input" />, come specificato da <paramref name="format" /> e <paramref name="formatProvider" />.</returns>
      <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
      <param name="format">Stringa di formato standard o personalizzato che definisce il formato richiesto di <paramref name="input" />.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)">
      <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando gli stili e le informazioni di formato specifiche delle impostazioni cultura specificati.Il formato della rappresentazione di stringa deve corrispondere esattamente al formato specificato.</summary>
      <returns>Intervallo di tempo che corrisponde a <paramref name="input" />, come specificato da <paramref name="format" />, <paramref name="formatProvider" /> e <paramref name="styles" />.</returns>
      <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
      <param name="format">Stringa di formato standard o personalizzato che definisce il formato richiesto di <paramref name="input" />.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <param name="styles">Combinazione bit per bit di valori di enumerazione che definisce gli elementi di stile che possono essere presenti in <paramref name="input" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> is an invalid <see cref="T:System.Globalization.TimeSpanStyles" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando la matrice di stringhe di formato e le informazioni di formato specifiche delle impostazioni cultura specificate.Il formato della rappresentazione di stringa deve corrispondere esattamente a uno dei formati specificati.</summary>
      <returns>Intervallo di tempo che corrisponde a <paramref name="input" />, come specificato da <paramref name="formats" /> e <paramref name="formatProvider" />.</returns>
      <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
      <param name="formats">Matrice di stringhe di formato standard o personalizzate che definisce il formato richiesto di <paramref name="input" />.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)">
      <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando i formati, gli stili e le informazioni di formato specifiche delle impostazioni cultura specificati.Il formato della rappresentazione di stringa deve corrispondere esattamente a uno dei formati specificati.</summary>
      <returns>Intervallo di tempo che corrisponde a <paramref name="input" />, come specificato da <paramref name="formats" />, <paramref name="formatProvider" /> e <paramref name="styles" />.</returns>
      <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
      <param name="formats">Matrice di stringhe di formato standard o personalizzate che definisce il formato richiesto di <paramref name="input" />.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <param name="styles">Combinazione bit per bit di valori di enumerazione che definisce gli elementi di stile che possono essere presenti in input.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> is an invalid <see cref="T:System.Globalization.TimeSpanStyles" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="P:System.TimeSpan.Seconds">
      <summary>Ottiene il componente relativo ai secondi dell'intervallo di tempo rappresentato dalla struttura <see cref="T:System.TimeSpan" /> corrente.</summary>
      <returns>Componente relativo ai secondi della struttura <see cref="T:System.TimeSpan" /> corrente.Il valore restituito è compreso tra -59 e 59.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Subtract(System.TimeSpan)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.TimeSpan" /> il cui valore è la differenza tra l'oggetto <see cref="T:System.TimeSpan" /> specificato e questa istanza.</summary>
      <returns>Nuovo intervallo di tempo il cui valore è il risultato del valore di questa istanza meno il valore di <paramref name="ts" />.</returns>
      <param name="ts">Intervallo di tempo da sottrarre. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
      <returns>Intero con segno che indica l'ordine relativo dell'istanza e di <paramref name="value" />.Valore restituito Significato Minore di zero Questa istanza precede <paramref name="value" /> nell'ordinamento.Zero Questa istanza si trova nella stessa posizione di <paramref name="value" /> nell'ordinamento.Maggiore di zero Questa istanza segue <paramref name="value" /> nei criteri di ordinamento.-oppure- <paramref name="value" /> è null. </returns>
      <param name="value">Oggetto da confrontare con questa istanza o null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.TimeSpan" /> object. </exception>
    </member>
    <member name="P:System.TimeSpan.Ticks">
      <summary>Ottiene il numero di tick che rappresentano il valore della struttura <see cref="T:System.TimeSpan" /> corrente.</summary>
      <returns>Numero di tick inclusi in questa istanza.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerDay">
      <summary>Rappresenta il numero di tick in 1 giorno.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerHour">
      <summary>Rappresenta il numero di tick in 1 ora.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerMillisecond">
      <summary>Rappresenta il numero di tick in 1 millisecondo.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerMinute">
      <summary>Rappresenta il numero di tick in 1 minuto.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerSecond">
      <summary>Rappresenta il numero di tick in 1 secondo.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.ToString">
      <summary>Converte il valore dell'oggetto <see cref="T:System.TimeSpan" /> corrente nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa del valore <see cref="T:System.TimeSpan" /> corrente. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.ToString(System.String)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.TimeSpan" /> corrente nella rappresentazione di stringa equivalente usando il formato specificato.</summary>
      <returns>Rappresentazione di stringa del valore <see cref="T:System.TimeSpan" /> corrente nel formato specificato dal parametro <paramref name="format" />.</returns>
      <param name="format">Stringa di formato <see cref="T:System.TimeSpan" /> standard o personalizzato.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is not recognized or is not supported.</exception>
    </member>
    <member name="M:System.TimeSpan.ToString(System.String,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.TimeSpan" /> corrente nella rappresentazione di stringa equivalente usando il formato specificato e le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore corrente di <see cref="T:System.TimeSpan" />, come specificato da <paramref name="format" /> e <paramref name="formatProvider" />.</returns>
      <param name="format">Stringa di formato <see cref="T:System.TimeSpan" /> standard o personalizzato.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is not recognized or is not supported.</exception>
    </member>
    <member name="P:System.TimeSpan.TotalDays">
      <summary>Ottiene il valore della struttura <see cref="T:System.TimeSpan" /> corrente espresso in giorni interi e frazionari.</summary>
      <returns>Ottiene il numero complessivo di giorni rappresentato da questa istanza.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalHours">
      <summary>Ottiene il valore della struttura <see cref="T:System.TimeSpan" /> corrente espresso in ore intere e frazionarie.</summary>
      <returns>Numero complessivo delle ore rappresentate da questa istanza.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalMilliseconds">
      <summary>Ottiene il valore della struttura <see cref="T:System.TimeSpan" /> corrente espresso in millisecondi interi e frazionari.</summary>
      <returns>Numero complessivo dei millisecondi rappresentati da questa istanza.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalMinutes">
      <summary>Ottiene il valore della struttura <see cref="T:System.TimeSpan" /> corrente espresso in minuti interi e frazionari.</summary>
      <returns>Numero complessivo dei minuti rappresentati da questa istanza.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalSeconds">
      <summary>Ottiene il valore della struttura <see cref="T:System.TimeSpan" /> corrente espresso in secondi interi e frazionari.</summary>
      <returns>Numero complessivo dei secondi rappresentati da questa istanza.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)">
      <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando le informazioni di formattazione specifiche delle impostazioni cultura indicate e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <returns>true se <paramref name="input" /> è stato convertito correttamente; in caso contrario, false.Questa operazione restituisce false se il parametro <paramref name="input" /> è null o <see cref="F:System.String.Empty" />, presenta un formato non valido, rappresenta un intervallo di tempo minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" /> o almeno un componente giorni, ore, minuti o secondi non è compreso nel relativo intervallo valido.</returns>
      <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <param name="result">Quando questo metodo viene restituito, contiene un oggetto che rappresenta l'intervallo di tempo specificato da <paramref name="input" /> o<see cref="F:System.TimeSpan.Zero" /> in caso di conversione non riuscita.Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)">
      <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.Questa operazione restituisce false se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" />, presenta un formato non valido, rappresenta un intervallo di tempo minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" /> o almeno un componente giorni, ore, minuti o secondi non è compreso nel relativo intervallo valido.</returns>
      <param name="s">Stringa che specifica l'intervallo di tempo da convertire.</param>
      <param name="result">Quando questo metodo viene restituito, contiene un oggetto che rappresenta l'intervallo di tempo specificato da <paramref name="s" /> o<see cref="F:System.TimeSpan.Zero" /> in caso di conversione non riuscita.Questo parametro viene passato non inizializzato.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)">
      <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando il formato, le informazioni di formato specifiche delle impostazioni cultura e gli stili specificati e restituisce un valore che indica se la conversione è stata eseguita correttamente.Il formato della rappresentazione di stringa deve corrispondere esattamente al formato specificato.</summary>
      <returns>true se <paramref name="input" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
      <param name="format">Stringa di formato standard o personalizzato che definisce il formato richiesto di <paramref name="input" />.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <param name="styles">Uno o più valori di enumerazione che indicano lo stile di <paramref name="input" />.</param>
      <param name="result">Quando questo metodo viene restituito, contiene un oggetto che rappresenta l'intervallo di tempo specificato da <paramref name="input" /> o<see cref="F:System.TimeSpan.Zero" /> in caso di conversione non riuscita.Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)">
      <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando il formato specificato e le informazioni di formato specifiche delle impostazioni cultura e restituisce un valore che indica se la conversione è stata eseguita correttamente.Il formato della rappresentazione di stringa deve corrispondere esattamente al formato specificato.</summary>
      <returns>true se <paramref name="input" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
      <param name="format">Stringa di formato standard o personalizzato che definisce il formato richiesto di <paramref name="input" />.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <param name="result">Quando questo metodo viene restituito, contiene un oggetto che rappresenta l'intervallo di tempo specificato da <paramref name="input" /> o<see cref="F:System.TimeSpan.Zero" /> in caso di conversione non riuscita.Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)">
      <summary>Converte la rappresentazione di stringa specificata di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando i formati, le informazioni di formato specifiche delle impostazioni cultura e gli stili specificati e restituisce un valore che indica se la conversione è stata eseguita correttamente.Il formato della rappresentazione di stringa deve corrispondere esattamente a uno dei formati specificati.</summary>
      <returns>true se <paramref name="input" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
      <param name="formats">Matrice di stringhe di formato standard o personalizzato che definiscono i formati accettabili di <paramref name="input" />.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <param name="styles">Uno o più valori di enumerazione che indicano lo stile di <paramref name="input" />.</param>
      <param name="result">Quando questo metodo viene restituito, contiene un oggetto che rappresenta l'intervallo di tempo specificato da <paramref name="input" /> o<see cref="F:System.TimeSpan.Zero" /> in caso di conversione non riuscita.Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)">
      <summary>Converte la rappresentazione di stringa specificata di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando i formati specificati e le informazioni di formato specifiche delle impostazioni cultura e restituisce un valore che indica se la conversione è stata eseguita correttamente.Il formato della rappresentazione di stringa deve corrispondere esattamente a uno dei formati specificati.</summary>
      <returns>true se <paramref name="input" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
      <param name="formats">Matrice di stringhe di formato standard o personalizzato che definiscono i formati accettabili di <paramref name="input" />.</param>
      <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <param name="result">Quando questo metodo viene restituito, contiene un oggetto che rappresenta l'intervallo di tempo specificato da <paramref name="input" /> o<see cref="F:System.TimeSpan.Zero" /> in caso di conversione non riuscita.Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="F:System.TimeSpan.Zero">
      <summary>Rappresenta il valore zero di <see cref="T:System.TimeSpan" />.Questo campo è di sola lettura.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.TimeZoneInfo">
      <summary>Rappresenta un qualsiasi fuso orario nel mondo.</summary>
    </member>
    <member name="P:System.TimeZoneInfo.BaseUtcOffset">
      <summary>Ottiene la differenza tra l'ora solare del fuso orario corrente e l'ora UTC (Coordinated Universal Time).</summary>
      <returns>Oggetto indicante la differenza tra l'ora solare del fuso orario corrente e l'ora UTC (Coordinated Universal Time).</returns>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)">
      <summary>Converte un'ora nell'ora di un particolare fuso orario.</summary>
      <returns>Data e ora nel fuso orario di destinazione.</returns>
      <param name="dateTime">Data e ora da convertire.   </param>
      <param name="destinationTimeZone">Fuso orario nel quale convertire <paramref name="dateTime" />.</param>
      <exception cref="T:System.ArgumentException">Il valore del parametro <paramref name="dateTime" /> rappresenta un'ora non valida.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="destinationTimeZone" /> è null.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)">
      <summary>Converte un'ora da un fuso orario a un altro.</summary>
      <returns>Data e ora nel fuso orario di destinazione corrispondente al parametro <paramref name="dateTime" /> nel fuso orario di origine.</returns>
      <param name="dateTime">Data e ora da convertire.</param>
      <param name="sourceTimeZone">Fuso orario di <paramref name="dateTime" />.</param>
      <param name="destinationTimeZone">Fuso orario nel quale convertire <paramref name="dateTime" />.</param>
      <exception cref="T:System.ArgumentException">La proprietà <see cref="P:System.DateTime.Kind" /> del parametro <paramref name="dateTime" /> è <see cref="F:System.DateTimeKind.Local" />, ma il parametro <paramref name="sourceTimeZone" /> non è uguale a <see cref="F:System.DateTimeKind.Local" />.Per ulteriori informazioni, vedere la sezione "Note".- oppure -La proprietà <see cref="P:System.DateTime.Kind" /> del parametro <paramref name="dateTime" /> è <see cref="F:System.DateTimeKind.Utc" />, ma il parametro <paramref name="sourceTimeZone" /> non è uguale a <see cref="P:System.TimeZoneInfo.Utc" />.- oppure -Il parametro <paramref name="dateTime" /> è un'ora non valida, ovvero rappresenta un'ora inesistente a causa delle regole di regolazione di un fuso orario.</exception>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="sourceTimeZone" /> è null.- oppure -Il parametro <paramref name="destinationTimeZone" /> è null.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)">
      <summary>Converte un'ora nell'ora di un particolare fuso orario.</summary>
      <returns>Data e ora nel fuso orario di destinazione.</returns>
      <param name="dateTimeOffset">Data e ora da convertire.   </param>
      <param name="destinationTimeZone">Fuso orario nel quale convertire <paramref name="dateTime" />.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="destinationTimeZone" /> è null.</exception>
    </member>
    <member name="P:System.TimeZoneInfo.DaylightName">
      <summary>Ottiene il nome visualizzato per l'ora legale del fuso orario corrente.</summary>
      <returns>Nome visualizzato per l'ora legale del fuso orario.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.DisplayName">
      <summary>Ottiene il nome visualizzato generale che rappresenta il fuso orario.</summary>
      <returns>Nome visualizzato generale del fuso orario.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.Equals(System.TimeZoneInfo)">
      <summary>Determina se l'oggetto <see cref="T:System.TimeZoneInfo" /> corrente e un altro oggetto <see cref="T:System.TimeZoneInfo" /> sono uguali.</summary>
      <returns>true se i due oggetti <see cref="T:System.TimeZoneInfo" /> sono uguali; in caso contrario, false.</returns>
      <param name="other">Secondo oggetto da confrontare con l'oggetto corrente.  </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)">
      <summary>Recupera un oggetto <see cref="T:System.TimeZoneInfo" /> dal Registro di sistema in base al relativo identificatore.</summary>
      <returns>Oggetto il cui identificatore è il valore del parametro <paramref name="id" />.</returns>
      <param name="id">Identificatore del fuso orario, corrispondente alla proprietà <see cref="P:System.TimeZoneInfo.Id" />.      </param>
      <exception cref="T:System.OutOfMemoryException">La memoria del sistema è insufficiente per contenere le informazioni sul fuso orario.</exception>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="id" /> è null.</exception>
      <exception cref="T:System.TimeZoneNotFoundException">Impossibile trovare l'identificatore del fuso orario specificato da <paramref name="id" />.Ciò significa che non esiste una chiave del Registro di sistema il cui nome corrisponda a <paramref name="id" />, oppure che la chiave esiste ma non contiene dati sul fuso orario.</exception>
      <exception cref="T:System.Security.SecurityException">Il processo non possiede le autorizzazioni necessarie per leggere dalla chiave del Registro di sistema contenente le informazioni sul fuso orario.</exception>
      <exception cref="T:System.InvalidTimeZoneException">L'identificatore del fuso orario è stato trovato, ma i dati del Registro di sistema sono danneggiati.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)">
      <summary>Restituisce le informazioni sulle possibili date e ore alle quali può essere mappata una data e ora ambigua.</summary>
      <returns>Matrice di oggetti che rappresenta possibili offset UTC (Coordinated Universal Time) a cui è possibile mappare una data e un'ora particolari.</returns>
      <param name="dateTime">Data e ora.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateTime" /> non è un'ora ambigua.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)">
      <summary>Restituisce le informazioni sulle possibili date e ore alle quali può essere mappata una data e ora ambigua.</summary>
      <returns>Matrice di oggetti che rappresenta possibili offset UTC (Coordinated Universal Time) a cui è possibile mappare una data e un'ora particolari.</returns>
      <param name="dateTimeOffset">Data e ora.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateTime" /> non è un'ora ambigua.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetHashCode">
      <summary>Funge da funzione hash per algoritmi di hash e strutture dei dati quali ad esempio tabelle hash.</summary>
      <returns>Intero con segno a 32 bit che funge da codice hash per l'oggetto <see cref="T:System.TimeZoneInfo" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetSystemTimeZones">
      <summary>Restituisce un insieme ordinato di tutti i fusi orari per i quali sono disponibili informazioni nel sistema locale.</summary>
      <returns>Insieme di sola lettura di oggetti <see cref="T:System.TimeZoneInfo" />.</returns>
      <exception cref="T:System.OutOfMemoryException">La memoria è insufficiente per archiviare tutte le informazioni sui fusi orari.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni per leggere dalle chiavi del Registro di sistema contenenti le informazioni sui fusi orari.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)">
      <summary>Calcola l'offset o differenza tra l'ora in questo fuso orario e l'ora UTC (Coordinated Universal Time) per una particolare data e ora.</summary>
      <returns>Oggetto che indica la differenza di ora tra i due fusi orari.</returns>
      <param name="dateTime">Data e ora per la quale determinare l'offset.   </param>
    </member>
    <member name="M:System.TimeZoneInfo.GetUtcOffset(System.DateTimeOffset)">
      <summary>Calcola l'offset o differenza tra l'ora in questo fuso orario e l'ora UTC (Coordinated Universal Time) per una particolare data e ora.</summary>
      <returns>Oggetto che indica la differenza di ora tra l'ora UTC (Coordinated Universal Time) e il fuso orario corrente.</returns>
      <param name="dateTimeOffset">Data e ora per la quale determinare l'offset.</param>
    </member>
    <member name="P:System.TimeZoneInfo.Id">
      <summary>Ottiene l'identificatore del fuso orario.</summary>
      <returns>Identificatore del fuso orario.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)">
      <summary>Determina se una particolare data e ora in un particolare fuso orario sia ambigua o meno e se possa essere mappata a due o più ore UTC (Coordinated Universal Time).</summary>
      <returns>true se il parametro <paramref name="dateTime" /> è ambiguo; in caso contrario, false.</returns>
      <param name="dateTime">Valore di data e ora.   </param>
      <exception cref="T:System.ArgumentException">La proprietà <see cref="P:System.DateTime.Kind" /> del valore <paramref name="dateTime" /> è <see cref="F:System.DateTimeKind.Local" /> e <paramref name="dateTime" /> è un'ora non valida.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTimeOffset)">
      <summary>Determina se una particolare data e ora in un particolare fuso orario sia ambigua o meno e se possa essere mappata a due o più ore UTC (Coordinated Universal Time).</summary>
      <returns>true se il parametro <paramref name="dateTimeOffset" /> è ambiguo nel fuso orario corrente; in caso contrario, false.</returns>
      <param name="dateTimeOffset">Data e ora.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)">
      <summary>Indica se una data e ora specificata rientra nell'intervallo dell'ora legale per il fuso orario dell'oggetto <see cref="T:System.TimeZoneInfo" /> corrente.</summary>
      <returns>true se il parametro <paramref name="dateTime" /> è un'ora legale; in caso contrario, false.</returns>
      <param name="dateTime">Valore di data e ora.   </param>
      <exception cref="T:System.ArgumentException">La proprietà <see cref="P:System.DateTime.Kind" /> del valore <paramref name="dateTime" /> è <see cref="F:System.DateTimeKind.Local" /> e <paramref name="dateTime" /> è un'ora non valida.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTimeOffset)">
      <summary>Indica se una data e ora specificata rientra nell'intervallo dell'ora legale per il fuso orario dell'oggetto <see cref="T:System.TimeZoneInfo" /> corrente.</summary>
      <returns>true se il parametro <paramref name="dateTimeOffset" /> è un'ora legale; in caso contrario, false.</returns>
      <param name="dateTimeOffset">Valore di data e ora.</param>
    </member>
    <member name="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)">
      <summary>Indica se una particolare data e ora non è valida.</summary>
      <returns>true se <paramref name="dateTime" /> non è valido; in caso contrario, false.</returns>
      <param name="dateTime">Valore di data e ora.   </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.TimeZoneInfo.Local">
      <summary>Ottiene un oggetto <see cref="T:System.TimeZoneInfo" /> che rappresenta il fuso orario locale.</summary>
      <returns>Oggetto che rappresenta il fuso orario locale.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.StandardName">
      <summary>Ottiene il nome visualizzato per l'ora solare del fuso orario.</summary>
      <returns>Nome visualizzato dell'ora solare del fuso orario.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.SupportsDaylightSavingTime">
      <summary>Ottiene un valore che indica se il fuso orario dispone o meno di regole di regolazione per l'ora legale.</summary>
      <returns>true se il fuso orario supporta l'ora legale; in caso contrario, false.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.ToString">
      <summary>Restituisce il nome visualizzato dell'oggetto <see cref="T:System.TimeZoneInfo" /> corrente.</summary>
      <returns>Valore della proprietà <see cref="P:System.TimeZoneInfo.DisplayName" /> dell'oggetto <see cref="T:System.TimeZoneInfo" /> corrente.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.Utc">
      <summary>Ottiene un oggetto <see cref="T:System.TimeZoneInfo" /> che rappresenta il fuso UTC (Coordinated Universal Time).</summary>
      <returns>Oggetto che rappresenta il fuso UTC (Coordinated Universal Time).</returns>
    </member>
    <member name="T:System.Tuple">
      <summary>Fornisce metodi statici per la creazione di oggetti tupla. Per esaminare il codice sorgente .NET Framework per questo tipo, vedere Origine riferimento.</summary>
    </member>
    <member name="M:System.Tuple.Create``1(``0)">
      <summary>Crea una nuova tupla con un solo elemento, ovvero un singleton.</summary>
      <returns>Tupla il cui valore è (<paramref name="item1" />).</returns>
      <param name="item1">Valore dell'unico componente della tupla.</param>
      <typeparam name="T1">Tipo dell'unico componente della tupla.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``2(``0,``1)">
      <summary>Crea una nuova tupla con 2 elementi, ovvero una coppia.</summary>
      <returns>Tupla con 2 elementi il cui valore è (<paramref name="item1" />, <paramref name="item2" />).</returns>
      <param name="item1">Valore del primo componente della tupla.</param>
      <param name="item2">Valore del secondo componente della tupla.</param>
      <typeparam name="T1">Tipo del primo componente della tupla.</typeparam>
      <typeparam name="T2">Tipo del secondo componente della tupla.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``3(``0,``1,``2)">
      <summary>Crea una nuova tupla con 3 elementi, ovvero una terna.</summary>
      <returns>Tupla con 3 elementi il cui valore è (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />).</returns>
      <param name="item1">Valore del primo componente della tupla.</param>
      <param name="item2">Valore del secondo componente della tupla.</param>
      <param name="item3">Valore del terzo componente della tupla.</param>
      <typeparam name="T1">Tipo del primo componente della tupla.</typeparam>
      <typeparam name="T2">Tipo del secondo componente della tupla.</typeparam>
      <typeparam name="T3">Tipo del terzo componente della tupla.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``4(``0,``1,``2,``3)">
      <summary>Crea una nuova tupla con 4 elementi, ovvero una quadrupla.</summary>
      <returns>Tupla con 4 elementi il cui valore è (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />).</returns>
      <param name="item1">Valore del primo componente della tupla.</param>
      <param name="item2">Valore del secondo componente della tupla.</param>
      <param name="item3">Valore del terzo componente della tupla.</param>
      <param name="item4">Valore del quarto componente della tupla.</param>
      <typeparam name="T1">Tipo del primo componente della tupla.</typeparam>
      <typeparam name="T2">Tipo del secondo componente della tupla.</typeparam>
      <typeparam name="T3">Tipo del terzo componente della tupla.</typeparam>
      <typeparam name="T4">Tipo del quarto componente della tupla.  </typeparam>
    </member>
    <member name="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
      <summary>Crea una nuova tupla con 5 elementi, ovvero una quintupla.</summary>
      <returns>Tupla con 5 elementi il cui valore è (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />).</returns>
      <param name="item1">Valore del primo componente della tupla.</param>
      <param name="item2">Valore del secondo componente della tupla.</param>
      <param name="item3">Valore del terzo componente della tupla.</param>
      <param name="item4">Valore del quarto componente della tupla.</param>
      <param name="item5">Valore del quinto componente della tupla.</param>
      <typeparam name="T1">Tipo del primo componente della tupla.</typeparam>
      <typeparam name="T2">Tipo del secondo componente della tupla.</typeparam>
      <typeparam name="T3">Tipo del terzo componente della tupla.</typeparam>
      <typeparam name="T4">Tipo del quarto componente della tupla.</typeparam>
      <typeparam name="T5">Tipo del quinto componente della tupla.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
      <summary>Crea una nuova tupla con 6 elementi, ovvero una sestupla.</summary>
      <returns>Tupla con 6 elementi il cui valore è (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />).</returns>
      <param name="item1">Valore del primo componente della tupla.</param>
      <param name="item2">Valore del secondo componente della tupla.</param>
      <param name="item3">Valore del terzo componente della tupla.</param>
      <param name="item4">Valore del quarto componente della tupla.</param>
      <param name="item5">Valore del quinto componente della tupla.</param>
      <param name="item6">Valore del sesto componente della tupla.</param>
      <typeparam name="T1">Tipo del primo componente della tupla.</typeparam>
      <typeparam name="T2">Tipo del secondo componente della tupla.</typeparam>
      <typeparam name="T3">Tipo del terzo componente della tupla.</typeparam>
      <typeparam name="T4">Tipo del quarto componente della tupla.</typeparam>
      <typeparam name="T5">Tipo del quinto componente della tupla.</typeparam>
      <typeparam name="T6">Tipo del sesto componente della tupla.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
      <summary>Crea una nuova tupla con 7 elementi, ovvero una settupla.</summary>
      <returns>Tupla con 7 elementi il cui valore è (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />, <paramref name="item7" />).</returns>
      <param name="item1">Valore del primo componente della tupla.</param>
      <param name="item2">Valore del secondo componente della tupla.</param>
      <param name="item3">Valore del terzo componente della tupla.</param>
      <param name="item4">Valore del quarto componente della tupla.</param>
      <param name="item5">Valore del quinto componente della tupla.</param>
      <param name="item6">Valore del sesto componente della tupla.</param>
      <param name="item7">Valore del settimo componente della tupla.</param>
      <typeparam name="T1">Tipo del primo componente della tupla.</typeparam>
      <typeparam name="T2">Tipo del secondo componente della tupla.</typeparam>
      <typeparam name="T3">Tipo del terzo componente della tupla.</typeparam>
      <typeparam name="T4">Tipo del quarto componente della tupla.</typeparam>
      <typeparam name="T5">Tipo del quinto componente della tupla.</typeparam>
      <typeparam name="T6">Tipo del sesto componente della tupla.</typeparam>
      <typeparam name="T7">Tipo del settimo componente della tupla.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
      <summary>Crea una nuova tupla con 8 elementi, ovvero un'ottupla.</summary>
      <returns>Tupla con 8 elementi (ottupla) il cui valore è (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />, <paramref name="item7" />, <paramref name="item8" />). </returns>
      <param name="item1">Valore del primo componente della tupla.</param>
      <param name="item2">Valore del secondo componente della tupla.</param>
      <param name="item3">Valore del terzo componente della tupla.</param>
      <param name="item4">Valore del quarto componente della tupla.</param>
      <param name="item5">Valore del quinto componente della tupla.</param>
      <param name="item6">Valore del sesto componente della tupla.</param>
      <param name="item7">Valore del settimo componente della tupla.</param>
      <param name="item8">Valore dell'ottavo componente della tupla.</param>
      <typeparam name="T1">Tipo del primo componente della tupla.</typeparam>
      <typeparam name="T2">Tipo del secondo componente della tupla.</typeparam>
      <typeparam name="T3">Tipo del terzo componente della tupla.</typeparam>
      <typeparam name="T4">Tipo del quarto componente della tupla.</typeparam>
      <typeparam name="T5">Tipo del quinto componente della tupla.</typeparam>
      <typeparam name="T6">Tipo del sesto componente della tupla.</typeparam>
      <typeparam name="T7">Tipo del settimo componente della tupla.</typeparam>
      <typeparam name="T8">Tipo dell'ottavo componente della tupla.</typeparam>
    </member>
    <member name="T:System.Tuple`1">
      <summary>Rappresenta una tupla con un solo elemento, ovvero un singleton. </summary>
      <typeparam name="T1">Tipo dell'unico componente della tupla.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Tuple`1.#ctor(`0)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Tuple`1" />.</summary>
      <param name="item1">Valore dell'unico componente della tupla.</param>
    </member>
    <member name="M:System.Tuple`1.Equals(System.Object)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Tuple`1" /> corrente è uguale a un oggetto specificato.</summary>
      <returns>true se l'istanza corrente è uguale all'oggetto specificato; in caso contrario false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza.</param>
    </member>
    <member name="M:System.Tuple`1.GetHashCode">
      <summary>Restituisce il codice hash per l'oggetto <see cref="T:System.Tuple`1" /> corrente.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
    </member>
    <member name="P:System.Tuple`1.Item1">
      <summary>Ottiene il valore dell'unico componente dell'oggetto <see cref="T:System.Tuple`1" />. </summary>
      <returns>Valore dell'unico componente dell'oggetto <see cref="T:System.Tuple`1" /> corrente.</returns>
    </member>
    <member name="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Confronta l'oggetto <see cref="T:System.Tuple`1" /> corrente con un oggetto specificato mediante un operatore di confronto specificato e restituisce un Integer che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato all'interno dell'ordinamento.</summary>
      <returns>Signed Integer che indica la posizione relativa di questa istanza e di <paramref name="other" /> nell'ordinamento, come illustrato nella tabella seguente.ValoreDescrizioneInteger negativoQuesta istanza precede <paramref name="other" />.ZeroQuesta istanza e <paramref name="other" /> presentano la stessa posizione all'interno dell'ordinamento.Integer positivoQuesta istanza segue <paramref name="other" />.</returns>
      <param name="other">Oggetto da confrontare con l'istanza corrente.</param>
      <param name="comparer">Oggetto che fornisce regole personalizzate per il confronto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> non è un oggetto <see cref="T:System.Tuple`1" />.</exception>
    </member>
    <member name="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Tuple`1" /> corrente è uguale a un oggetto specificato in base a un metodo di confronto specificato.</summary>
      <returns>true se l'istanza corrente è uguale all'oggetto specificato; in caso contrario false.</returns>
      <param name="other">Oggetto da confrontare con questa istanza.</param>
      <param name="comparer">Oggetto che definisce il metodo da utilizzare per determinare se i due oggetti sono uguali.</param>
    </member>
    <member name="M:System.Tuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Calcola il codice hash per l'oggetto <see cref="T:System.Tuple`1" /> corrente tramite un metodo di calcolo specificato.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
      <param name="comparer">Oggetto il cui metodo <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcola il codice hash dell'oggetto <see cref="T:System.Tuple`1" /> corrente.</param>
    </member>
    <member name="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'oggetto <see cref="T:System.Tuple`1" /> corrente con un oggetto specificato e restituisce un Integer che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato all'interno dell'ordinamento.</summary>
      <returns>Signed Integer che indica la posizione relativa di questa istanza e di <paramref name="obj" /> nell'ordinamento, come illustrato nella tabella seguente.ValoreDescrizioneInteger negativoQuesta istanza precede <paramref name="obj" />.ZeroQuesta istanza e <paramref name="obj" /> presentano la stessa posizione all'interno dell'ordinamento.Integer positivoQuesta istanza segue <paramref name="obj" />.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza corrente.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> non è un oggetto <see cref="T:System.Tuple`1" />.</exception>
    </member>
    <member name="M:System.Tuple`1.ToString">
      <summary>Restituisce una stringa che rappresenta il valore di questa istanza di <see cref="T:System.Tuple`1" />.</summary>
      <returns>Rappresentazione di stringa di questo oggetto <see cref="T:System.Tuple`1" />.</returns>
    </member>
    <member name="T:System.Tuple`2">
      <summary>Rappresenta una tupla con due elementi, ovvero una coppia. </summary>
      <typeparam name="T1">Tipo del primo componente della tupla.</typeparam>
      <typeparam name="T2">Tipo del secondo componente della tupla.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`2.#ctor(`0,`1)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Tuple`2" />.</summary>
      <param name="item1">Valore del primo componente della tupla.</param>
      <param name="item2">Valore del secondo componente della tupla.</param>
    </member>
    <member name="M:System.Tuple`2.Equals(System.Object)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Tuple`2" /> corrente è uguale a un oggetto specificato.</summary>
      <returns>true se l'istanza corrente è uguale all'oggetto specificato; in caso contrario false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza.</param>
    </member>
    <member name="M:System.Tuple`2.GetHashCode">
      <summary>Restituisce il codice hash per l'oggetto <see cref="T:System.Tuple`2" /> corrente.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
    </member>
    <member name="P:System.Tuple`2.Item1">
      <summary>Ottiene il valore del primo componente dell'oggetto <see cref="T:System.Tuple`2" /> corrente.</summary>
      <returns>Valore del primo componente dell'oggetto <see cref="T:System.Tuple`2" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`2.Item2">
      <summary>Ottiene il valore del secondo componente dell'oggetto <see cref="T:System.Tuple`2" /> corrente.</summary>
      <returns>Valore del secondo componente dell'oggetto <see cref="T:System.Tuple`2" /> corrente.</returns>
    </member>
    <member name="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Confronta l'oggetto <see cref="T:System.Tuple`2" /> corrente con un oggetto specificato mediante un operatore di confronto specificato e restituisce un Integer che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato all'interno dell'ordinamento.</summary>
      <returns>Signed Integer che indica la posizione relativa di questa istanza e di <paramref name="other" /> nell'ordinamento, come illustrato nella tabella seguente.ValoreDescrizioneInteger negativoQuesta istanza precede <paramref name="other" />.ZeroQuesta istanza e <paramref name="other" /> presentano la stessa posizione all'interno dell'ordinamento.Integer positivoQuesta istanza segue <paramref name="other" />.</returns>
      <param name="other">Oggetto da confrontare con l'istanza corrente.</param>
      <param name="comparer">Oggetto che fornisce regole personalizzate per il confronto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> non è un oggetto <see cref="T:System.Tuple`2" />.</exception>
    </member>
    <member name="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Tuple`2" /> corrente è uguale a un oggetto specificato in base a un metodo di confronto specificato.</summary>
      <returns>true se l'istanza corrente è uguale all'oggetto specificato; in caso contrario false.</returns>
      <param name="other">Oggetto da confrontare con questa istanza.</param>
      <param name="comparer">Oggetto che definisce il metodo da utilizzare per determinare se i due oggetti sono uguali.</param>
    </member>
    <member name="M:System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Calcola il codice hash per l'oggetto <see cref="T:System.Tuple`2" /> corrente tramite un metodo di calcolo specificato.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
      <param name="comparer">Oggetto il cui metodo <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcola il codice hash dell'oggetto <see cref="T:System.Tuple`2" /> corrente.</param>
    </member>
    <member name="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'oggetto <see cref="T:System.Tuple`2" /> corrente con un oggetto specificato e restituisce un Integer che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato all'interno dell'ordinamento.</summary>
      <returns>Signed Integer che indica la posizione relativa di questa istanza e di <paramref name="obj" /> nell'ordinamento, come illustrato nella tabella seguente.ValoreDescrizioneInteger negativoQuesta istanza precede <paramref name="obj" />.ZeroQuesta istanza e <paramref name="obj" /> presentano la stessa posizione all'interno dell'ordinamento.Integer positivoQuesta istanza segue <paramref name="obj" />.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza corrente.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> non è un oggetto <see cref="T:System.Tuple`2" />.</exception>
    </member>
    <member name="M:System.Tuple`2.ToString">
      <summary>Restituisce una stringa che rappresenta il valore di questa istanza di <see cref="T:System.Tuple`2" />.</summary>
      <returns>Rappresentazione di stringa di questo oggetto <see cref="T:System.Tuple`2" />.</returns>
    </member>
    <member name="T:System.Tuple`3">
      <summary>Rappresenta una tupla con tre elementi, ovvero una terna. </summary>
      <typeparam name="T1">Tipo del primo componente della tupla.</typeparam>
      <typeparam name="T2">Tipo del secondo componente della tupla.</typeparam>
      <typeparam name="T3">Tipo del terzo componente della tupla.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`3.#ctor(`0,`1,`2)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Tuple`3" />.</summary>
      <param name="item1">Valore del primo componente della tupla.</param>
      <param name="item2">Valore del secondo componente della tupla.</param>
      <param name="item3">Valore del terzo componente della tupla.</param>
    </member>
    <member name="M:System.Tuple`3.Equals(System.Object)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Tuple`3" /> corrente è uguale a un oggetto specificato.</summary>
      <returns>true se l'istanza corrente è uguale all'oggetto specificato; in caso contrario false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza.</param>
    </member>
    <member name="M:System.Tuple`3.GetHashCode">
      <summary>Restituisce il codice hash per l'oggetto <see cref="T:System.Tuple`3" /> corrente.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
    </member>
    <member name="P:System.Tuple`3.Item1">
      <summary>Ottiene il valore del primo componente dell'oggetto <see cref="T:System.Tuple`3" /> corrente.</summary>
      <returns>Valore del primo componente dell'oggetto <see cref="T:System.Tuple`3" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`3.Item2">
      <summary>Ottiene il valore del secondo componente dell'oggetto <see cref="T:System.Tuple`3" /> corrente.</summary>
      <returns>Valore del secondo componente dell'oggetto <see cref="T:System.Tuple`3" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`3.Item3">
      <summary>Ottiene il valore del terzo componente dell'oggetto <see cref="T:System.Tuple`3" /> corrente.</summary>
      <returns>Valore del terzo componente dell'oggetto <see cref="T:System.Tuple`3" /> corrente.</returns>
    </member>
    <member name="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Confronta l'oggetto <see cref="T:System.Tuple`3" /> corrente con un oggetto specificato mediante un operatore di confronto specificato e restituisce un Integer che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato all'interno dell'ordinamento.</summary>
      <returns>Signed Integer che indica la posizione relativa di questa istanza e di <paramref name="other" /> nell'ordinamento, come illustrato nella tabella seguente.ValoreDescrizioneInteger negativoQuesta istanza precede <paramref name="other" />.ZeroQuesta istanza e <paramref name="other" /> presentano la stessa posizione all'interno dell'ordinamento.Integer positivoQuesta istanza segue <paramref name="other" />.</returns>
      <param name="other">Oggetto da confrontare con l'istanza corrente.</param>
      <param name="comparer">Oggetto che fornisce regole personalizzate per il confronto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> non è un oggetto <see cref="T:System.Tuple`3" />.</exception>
    </member>
    <member name="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Tuple`3" /> corrente è uguale a un oggetto specificato in base a un metodo di confronto specificato.</summary>
      <returns>true se l'istanza corrente è uguale all'oggetto specificato; in caso contrario false.</returns>
      <param name="other">Oggetto da confrontare con questa istanza.</param>
      <param name="comparer">Oggetto che definisce il metodo da utilizzare per determinare se i due oggetti sono uguali.</param>
    </member>
    <member name="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Calcola il codice hash per l'oggetto <see cref="T:System.Tuple`3" /> corrente tramite un metodo di calcolo specificato.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
      <param name="comparer">Oggetto il cui metodo <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcola il codice hash dell'oggetto <see cref="T:System.Tuple`3" /> corrente.</param>
    </member>
    <member name="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'oggetto <see cref="T:System.Tuple`3" /> corrente con un oggetto specificato e restituisce un Integer che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato all'interno dell'ordinamento.</summary>
      <returns>Signed Integer che indica la posizione relativa di questa istanza e di <paramref name="obj" /> nell'ordinamento, come illustrato nella tabella seguente.ValoreDescrizioneInteger negativoQuesta istanza precede <paramref name="obj" />.ZeroQuesta istanza e <paramref name="obj" /> presentano la stessa posizione all'interno dell'ordinamento.Integer positivoQuesta istanza segue <paramref name="obj" />.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza corrente.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> non è un oggetto <see cref="T:System.Tuple`3" />.</exception>
    </member>
    <member name="M:System.Tuple`3.ToString">
      <summary>Restituisce una stringa che rappresenta il valore di questa istanza di <see cref="T:System.Tuple`3" />.</summary>
      <returns>Rappresentazione di stringa di questo oggetto <see cref="T:System.Tuple`3" />.</returns>
    </member>
    <member name="T:System.Tuple`4">
      <summary>Rappresenta una tupla con quattro elementi, ovvero una quadrupla. </summary>
      <typeparam name="T1">Tipo del primo componente della tupla.</typeparam>
      <typeparam name="T2">Tipo del secondo componente della tupla.</typeparam>
      <typeparam name="T3">Tipo del terzo componente della tupla.</typeparam>
      <typeparam name="T4">Tipo del quarto componente della tupla.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Tuple`4" />.</summary>
      <param name="item1">Valore del primo componente della tupla.</param>
      <param name="item2">Valore del secondo componente della tupla.</param>
      <param name="item3">Valore del terzo componente della tupla.</param>
      <param name="item4">Valore del quarto componente della tupla.</param>
    </member>
    <member name="M:System.Tuple`4.Equals(System.Object)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Tuple`4" /> corrente è uguale a un oggetto specificato.</summary>
      <returns>true se l'istanza corrente è uguale all'oggetto specificato; in caso contrario false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza.</param>
    </member>
    <member name="M:System.Tuple`4.GetHashCode">
      <summary>Restituisce il codice hash per l'oggetto <see cref="T:System.Tuple`4" /> corrente.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
    </member>
    <member name="P:System.Tuple`4.Item1">
      <summary>Ottiene il valore del primo componente dell'oggetto <see cref="T:System.Tuple`4" /> corrente.</summary>
      <returns>Valore del primo componente dell'oggetto <see cref="T:System.Tuple`4" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`4.Item2">
      <summary>Ottiene il valore del secondo componente dell'oggetto <see cref="T:System.Tuple`4" /> corrente.</summary>
      <returns>Valore del secondo componente dell'oggetto <see cref="T:System.Tuple`4" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`4.Item3">
      <summary>Ottiene il valore del terzo componente dell'oggetto <see cref="T:System.Tuple`4" /> corrente.</summary>
      <returns>Valore del terzo componente dell'oggetto <see cref="T:System.Tuple`4" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`4.Item4">
      <summary>Ottiene il valore del quarto componente dell'oggetto <see cref="T:System.Tuple`4" /> corrente.</summary>
      <returns>Valore del quarto componente dell'oggetto <see cref="T:System.Tuple`4" /> corrente.</returns>
    </member>
    <member name="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Confronta l'oggetto <see cref="T:System.Tuple`4" /> corrente con un oggetto specificato mediante un operatore di confronto specificato e restituisce un Integer che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato all'interno dell'ordinamento.</summary>
      <returns>Signed Integer che indica la posizione relativa di questa istanza e di <paramref name="other" /> nell'ordinamento, come illustrato nella tabella seguente.ValoreDescrizioneInteger negativoQuesta istanza precede <paramref name="other" />.ZeroQuesta istanza e <paramref name="other" /> presentano la stessa posizione all'interno dell'ordinamento.Integer positivoQuesta istanza segue <paramref name="other" />.</returns>
      <param name="other">Oggetto da confrontare con l'istanza corrente.</param>
      <param name="comparer">Oggetto che fornisce regole personalizzate per il confronto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> non è un oggetto <see cref="T:System.Tuple`4" />.</exception>
    </member>
    <member name="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Tuple`4" /> corrente è uguale a un oggetto specificato in base a un metodo di confronto specificato.</summary>
      <returns>true se l'istanza corrente è uguale all'oggetto specificato; in caso contrario false. </returns>
      <param name="other">Oggetto da confrontare con questa istanza.</param>
      <param name="comparer">Oggetto che definisce il metodo da utilizzare per determinare se i due oggetti sono uguali.</param>
    </member>
    <member name="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Calcola il codice hash per l'oggetto <see cref="T:System.Tuple`4" /> corrente tramite un metodo di calcolo specificato.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
      <param name="comparer">Oggetto il cui metodo <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcola il codice hash dell'oggetto <see cref="T:System.Tuple`4" /> corrente.</param>
    </member>
    <member name="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'oggetto <see cref="T:System.Tuple`4" /> corrente con un oggetto specificato e restituisce un Integer che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato all'interno dell'ordinamento.</summary>
      <returns>Signed Integer che indica la posizione relativa di questa istanza e di <paramref name="obj" /> nell'ordinamento, come illustrato nella tabella seguente.ValoreDescrizioneInteger negativoQuesta istanza precede <paramref name="obj" />.ZeroQuesta istanza e <paramref name="obj" /> presentano la stessa posizione all'interno dell'ordinamento.Integer positivoQuesta istanza segue <paramref name="obj" />.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza corrente.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> non è un oggetto <see cref="T:System.Tuple`4" />.</exception>
    </member>
    <member name="M:System.Tuple`4.ToString">
      <summary>Restituisce una stringa che rappresenta il valore di questa istanza di <see cref="T:System.Tuple`4" />.</summary>
      <returns>Rappresentazione di stringa di questo oggetto <see cref="T:System.Tuple`4" />.</returns>
    </member>
    <member name="T:System.Tuple`5">
      <summary>Rappresenta una tupla con cinque componenti, ovvero una quintupla. </summary>
      <typeparam name="T1">Tipo del primo componente della tupla.</typeparam>
      <typeparam name="T2">Tipo del secondo componente della tupla.</typeparam>
      <typeparam name="T3">Tipo del terzo componente della tupla.</typeparam>
      <typeparam name="T4">Tipo del quarto componente della tupla.</typeparam>
      <typeparam name="T5">Tipo del quinto componente della tupla.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Tuple`5" />.</summary>
      <param name="item1">Valore del primo componente della tupla.</param>
      <param name="item2">Valore del secondo componente della tupla.</param>
      <param name="item3">Valore del terzo componente della tupla.</param>
      <param name="item4">Valore del quarto componente della tupla.</param>
      <param name="item5">Valore del quinto componente della tupla.</param>
    </member>
    <member name="M:System.Tuple`5.Equals(System.Object)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Tuple`5" /> corrente è uguale a un oggetto specificato.</summary>
      <returns>true se l'istanza corrente è uguale all'oggetto specificato; in caso contrario false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza.</param>
    </member>
    <member name="M:System.Tuple`5.GetHashCode">
      <summary>Restituisce il codice hash per l'oggetto <see cref="T:System.Tuple`5" /> corrente.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
    </member>
    <member name="P:System.Tuple`5.Item1">
      <summary>Ottiene il valore del primo componente dell'oggetto <see cref="T:System.Tuple`5" /> corrente.</summary>
      <returns>Valore del primo componente dell'oggetto <see cref="T:System.Tuple`5" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`5.Item2">
      <summary>Ottiene il valore del secondo componente dell'oggetto <see cref="T:System.Tuple`5" /> corrente.</summary>
      <returns>Valore del secondo componente dell'oggetto <see cref="T:System.Tuple`5" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`5.Item3">
      <summary>Ottiene il valore del terzo componente dell'oggetto <see cref="T:System.Tuple`5" /> corrente.</summary>
      <returns>Valore del terzo componente dell'oggetto <see cref="T:System.Tuple`5" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`5.Item4">
      <summary>Ottiene il valore del quarto componente dell'oggetto <see cref="T:System.Tuple`5" /> corrente.</summary>
      <returns>Valore del quarto componente dell'oggetto <see cref="T:System.Tuple`5" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`5.Item5">
      <summary>Ottiene il valore del quinto componente dell'oggetto <see cref="T:System.Tuple`5" /> corrente.</summary>
      <returns>Valore del quinto componente dell'oggetto <see cref="T:System.Tuple`5" /> corrente.</returns>
    </member>
    <member name="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Confronta l'oggetto <see cref="T:System.Tuple`5" /> corrente con un oggetto specificato mediante un operatore di confronto specificato e restituisce un Integer che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato all'interno dell'ordinamento.</summary>
      <returns>Signed Integer che indica la posizione relativa di questa istanza e di <paramref name="other" /> nell'ordinamento, come illustrato nella tabella seguente.ValoreDescrizioneInteger negativoQuesta istanza precede <paramref name="other" />.ZeroQuesta istanza e <paramref name="other" /> presentano la stessa posizione all'interno dell'ordinamento.Integer positivoQuesta istanza segue <paramref name="other" />.</returns>
      <param name="other">Oggetto da confrontare con l'istanza corrente.</param>
      <param name="comparer">Oggetto che fornisce regole personalizzate per il confronto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> non è un oggetto <see cref="T:System.Tuple`5" />.</exception>
    </member>
    <member name="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Tuple`5" /> corrente è uguale a un oggetto specificato in base a un metodo di confronto specificato.</summary>
      <returns>true se l'istanza corrente è uguale all'oggetto specificato; in caso contrario false.</returns>
      <param name="other">Oggetto da confrontare con questa istanza.</param>
      <param name="comparer">Oggetto che definisce il metodo da utilizzare per determinare se i due oggetti sono uguali.</param>
    </member>
    <member name="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Calcola il codice hash per l'oggetto <see cref="T:System.Tuple`5" /> corrente tramite un metodo di calcolo specificato.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
      <param name="comparer">Oggetto il cui metodo <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcola il codice hash dell'oggetto <see cref="T:System.Tuple`5" /> corrente.</param>
    </member>
    <member name="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'oggetto <see cref="T:System.Tuple`5" /> corrente con un oggetto specificato e restituisce un Integer che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato all'interno dell'ordinamento.</summary>
      <returns>Signed Integer che indica la posizione relativa di questa istanza e di <paramref name="obj" /> nell'ordinamento, come illustrato nella tabella seguente.ValoreDescrizioneInteger negativoQuesta istanza precede <paramref name="obj" />.ZeroQuesta istanza e <paramref name="obj" /> presentano la stessa posizione all'interno dell'ordinamento.Integer positivoQuesta istanza segue <paramref name="obj" />.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza corrente.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> non è un oggetto <see cref="T:System.Tuple`5" />.</exception>
    </member>
    <member name="M:System.Tuple`5.ToString">
      <summary>Restituisce una stringa che rappresenta il valore di questa istanza di <see cref="T:System.Tuple`5" />.</summary>
      <returns>Rappresentazione di stringa di questo oggetto <see cref="T:System.Tuple`5" />.</returns>
    </member>
    <member name="T:System.Tuple`6">
      <summary>Rappresenta una tupla con sei componenti, ovvero una sestupla. </summary>
      <typeparam name="T1">Tipo del primo componente della tupla.</typeparam>
      <typeparam name="T2">Tipo del secondo componente della tupla.</typeparam>
      <typeparam name="T3">Tipo del terzo componente della tupla.</typeparam>
      <typeparam name="T4">Tipo del quarto componente della tupla.</typeparam>
      <typeparam name="T5">Tipo del quinto componente della tupla.</typeparam>
      <typeparam name="T6">Tipo del sesto componente della tupla.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`6.#ctor(`0,`1,`2,`3,`4,`5)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Tuple`6" />.</summary>
      <param name="item1">Valore del primo componente della tupla.</param>
      <param name="item2">Valore del secondo componente della tupla.</param>
      <param name="item3">Valore del terzo componente della tupla.</param>
      <param name="item4">Valore del quarto componente della tupla.</param>
      <param name="item5">Valore del quinto componente della tupla.</param>
      <param name="item6">Valore del sesto componente della tupla.</param>
    </member>
    <member name="M:System.Tuple`6.Equals(System.Object)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Tuple`6" /> corrente è uguale a un oggetto specificato.</summary>
      <returns>true se l'istanza corrente è uguale all'oggetto specificato; in caso contrario false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza.</param>
    </member>
    <member name="M:System.Tuple`6.GetHashCode">
      <summary>Restituisce il codice hash per l'oggetto <see cref="T:System.Tuple`6" /> corrente.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
    </member>
    <member name="P:System.Tuple`6.Item1">
      <summary>Ottiene il valore del primo componente dell'oggetto <see cref="T:System.Tuple`6" /> corrente.</summary>
      <returns>Valore del primo componente dell'oggetto <see cref="T:System.Tuple`6" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`6.Item2">
      <summary>Ottiene il valore del secondo componente dell'oggetto <see cref="T:System.Tuple`6" /> corrente.</summary>
      <returns>Valore del secondo componente dell'oggetto <see cref="T:System.Tuple`6" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`6.Item3">
      <summary>Ottiene il valore del terzo componente dell'oggetto <see cref="T:System.Tuple`6" /> corrente.</summary>
      <returns>Valore del terzo componente dell'oggetto <see cref="T:System.Tuple`6" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`6.Item4">
      <summary>Ottiene il valore del quarto componente dell'oggetto <see cref="T:System.Tuple`6" /> corrente.</summary>
      <returns>Valore del quarto componente dell'oggetto <see cref="T:System.Tuple`6" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`6.Item5">
      <summary>Ottiene il valore del quinto componente dell'oggetto <see cref="T:System.Tuple`6" /> corrente.</summary>
      <returns>Valore del quinto componente dell'oggetto <see cref="T:System.Tuple`6" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`6.Item6">
      <summary>Ottiene il valore del sesto componente dell'oggetto <see cref="T:System.Tuple`6" /> corrente.</summary>
      <returns>Valore del sesto componente dell'oggetto <see cref="T:System.Tuple`6" /> corrente.</returns>
    </member>
    <member name="M:System.Tuple`6.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Confronta l'oggetto <see cref="T:System.Tuple`6" /> corrente con un oggetto specificato mediante un operatore di confronto specificato e restituisce un integer che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato all'interno dell'ordinamento.</summary>
      <returns>Signed Integer che indica la posizione relativa di questa istanza e di <paramref name="other" /> nell'ordinamento, come illustrato nella tabella seguente.ValoreDescrizioneInteger negativoQuesta istanza precede <paramref name="other" />.ZeroQuesta istanza e <paramref name="other" /> presentano la stessa posizione all'interno dell'ordinamento.Integer positivoQuesta istanza segue <paramref name="other" />.</returns>
      <param name="other">Oggetto da confrontare con l'istanza corrente.</param>
      <param name="comparer">Oggetto che fornisce regole personalizzate per il confronto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> non è un oggetto <see cref="T:System.Tuple`6" />.</exception>
    </member>
    <member name="M:System.Tuple`6.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Tuple`6" /> corrente è uguale a un oggetto specificato in base a un metodo di confronto specificato.</summary>
      <returns>true se l'istanza corrente è uguale all'oggetto specificato; in caso contrario false.</returns>
      <param name="other">Oggetto da confrontare con questa istanza.</param>
      <param name="comparer">Oggetto che definisce il metodo da utilizzare per determinare se i due oggetti sono uguali.</param>
    </member>
    <member name="M:System.Tuple`6.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Calcola il codice hash per l'oggetto <see cref="T:System.Tuple`6" /> corrente tramite un metodo di calcolo specificato.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
      <param name="comparer">Oggetto il cui metodo <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcola il codice hash dell'oggetto <see cref="T:System.Tuple`6" /> corrente.</param>
    </member>
    <member name="M:System.Tuple`6.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'oggetto <see cref="T:System.Tuple`6" /> corrente con un oggetto specificato e restituisce un integer che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato all'interno dell'ordinamento.</summary>
      <returns>Signed Integer che indica la posizione relativa di questa istanza e di <paramref name="obj" /> nell'ordinamento, come illustrato nella tabella seguente.ValoreDescrizioneInteger negativoQuesta istanza precede <paramref name="obj" />.ZeroQuesta istanza e <paramref name="obj" /> presentano la stessa posizione all'interno dell'ordinamento.Integer positivoQuesta istanza segue <paramref name="obj" />.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza corrente.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> non è un oggetto <see cref="T:System.Tuple`6" />.</exception>
    </member>
    <member name="M:System.Tuple`6.ToString">
      <summary>Restituisce una stringa che rappresenta il valore di questa istanza di <see cref="T:System.Tuple`6" />.</summary>
      <returns>Rappresentazione di stringa di questo oggetto <see cref="T:System.Tuple`6" />.</returns>
    </member>
    <member name="T:System.Tuple`7">
      <summary>Rappresenta una tupla con sette elementi, ovvero una settupla. </summary>
      <typeparam name="T1">Tipo del primo componente della tupla.</typeparam>
      <typeparam name="T2">Tipo del secondo componente della tupla.</typeparam>
      <typeparam name="T3">Tipo del terzo componente della tupla.</typeparam>
      <typeparam name="T4">Tipo del quarto componente della tupla.</typeparam>
      <typeparam name="T5">Tipo del quinto componente della tupla.</typeparam>
      <typeparam name="T6">Tipo del sesto componente della tupla.</typeparam>
      <typeparam name="T7">Tipo del settimo componente della tupla.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Tuple`7" />.</summary>
      <param name="item1">Valore del primo componente della tupla.</param>
      <param name="item2">Valore del secondo componente della tupla.</param>
      <param name="item3">Valore del terzo componente della tupla.</param>
      <param name="item4">Valore del quarto componente della tupla.</param>
      <param name="item5">Valore del quinto componente della tupla.</param>
      <param name="item6">Valore del sesto componente della tupla.</param>
      <param name="item7">Valore del settimo componente della tupla.</param>
    </member>
    <member name="M:System.Tuple`7.Equals(System.Object)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Tuple`7" /> corrente è uguale a un oggetto specificato.</summary>
      <returns>true se l'istanza corrente è uguale all'oggetto specificato; in caso contrario false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza.</param>
    </member>
    <member name="M:System.Tuple`7.GetHashCode">
      <summary>Restituisce il codice hash per l'oggetto <see cref="T:System.Tuple`7" /> corrente.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
    </member>
    <member name="P:System.Tuple`7.Item1">
      <summary>Ottiene il valore del primo componente dell'oggetto <see cref="T:System.Tuple`7" /> corrente.</summary>
      <returns>Valore del primo componente dell'oggetto <see cref="T:System.Tuple`7" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`7.Item2">
      <summary>Ottiene il valore del secondo componente dell'oggetto <see cref="T:System.Tuple`7" /> corrente.</summary>
      <returns>Valore del secondo componente dell'oggetto <see cref="T:System.Tuple`7" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`7.Item3">
      <summary>Ottiene il valore del terzo componente dell'oggetto <see cref="T:System.Tuple`7" /> corrente.</summary>
      <returns>Valore del terzo componente dell'oggetto <see cref="T:System.Tuple`7" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`7.Item4">
      <summary>Ottiene il valore del quarto componente dell'oggetto <see cref="T:System.Tuple`7" /> corrente.</summary>
      <returns>Valore del quarto componente dell'oggetto <see cref="T:System.Tuple`7" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`7.Item5">
      <summary>Ottiene il valore del quinto componente dell'oggetto <see cref="T:System.Tuple`7" /> corrente.</summary>
      <returns>Valore del quinto componente dell'oggetto <see cref="T:System.Tuple`7" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`7.Item6">
      <summary>Ottiene il valore del sesto componente dell'oggetto <see cref="T:System.Tuple`7" /> corrente.</summary>
      <returns>Valore del sesto componente dell'oggetto <see cref="T:System.Tuple`7" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`7.Item7">
      <summary>Ottiene il valore del settimo componente dell'oggetto <see cref="T:System.Tuple`7" /> corrente.</summary>
      <returns>Valore del settimo componente dell'oggetto <see cref="T:System.Tuple`7" /> corrente.</returns>
    </member>
    <member name="M:System.Tuple`7.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Confronta l'oggetto <see cref="T:System.Tuple`7" /> corrente con un oggetto specificato mediante un operatore di confronto specificato e restituisce un Integer che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato all'interno dell'ordinamento.</summary>
      <returns>Signed Integer che indica la posizione relativa di questa istanza e di <paramref name="other" /> nell'ordinamento, come illustrato nella tabella seguente.ValoreDescrizioneInteger negativoQuesta istanza precede <paramref name="other" />.ZeroQuesta istanza e <paramref name="other" /> presentano la stessa posizione all'interno dell'ordinamento.Integer positivoQuesta istanza segue <paramref name="other" />.</returns>
      <param name="other">Oggetto da confrontare con l'istanza corrente.</param>
      <param name="comparer">Oggetto che fornisce regole personalizzate per il confronto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> non è un oggetto <see cref="T:System.Tuple`7" />.</exception>
    </member>
    <member name="M:System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Tuple`7" /> corrente è uguale a un oggetto specificato in base a un metodo di confronto specificato.</summary>
      <returns>true se l'istanza corrente è uguale all'oggetto specificato; in caso contrario false.</returns>
      <param name="other">Oggetto da confrontare con questa istanza.</param>
      <param name="comparer">Oggetto che definisce il metodo da utilizzare per determinare se i due oggetti sono uguali.</param>
    </member>
    <member name="M:System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Calcola il codice hash per l'oggetto <see cref="T:System.Tuple`7" /> corrente tramite un metodo di calcolo specificato.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
      <param name="comparer">Oggetto il cui metodo <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcola il codice hash dell'oggetto <see cref="T:System.Tuple`7" /> corrente.</param>
    </member>
    <member name="M:System.Tuple`7.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'oggetto <see cref="T:System.Tuple`7" /> corrente con un oggetto specificato e restituisce un Integer che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato all'interno dell'ordinamento.</summary>
      <returns>Signed Integer che indica la posizione relativa di questa istanza e di <paramref name="obj" /> nell'ordinamento, come illustrato nella tabella seguente.ValoreDescrizioneInteger negativoQuesta istanza precede <paramref name="obj" />.ZeroQuesta istanza e <paramref name="obj" /> presentano la stessa posizione all'interno dell'ordinamento.Integer positivoQuesta istanza segue <paramref name="obj" />.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza corrente.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> non è un oggetto <see cref="T:System.Tuple`7" />.</exception>
    </member>
    <member name="M:System.Tuple`7.ToString">
      <summary>Restituisce una stringa che rappresenta il valore di questa istanza di <see cref="T:System.Tuple`7" />.</summary>
      <returns>Rappresentazione di stringa di questo oggetto <see cref="T:System.Tuple`7" />.</returns>
    </member>
    <member name="T:System.Tuple`8">
      <summary>Rappresenta una tupla con n componenti, con n maggiore o uguale a 8.</summary>
      <typeparam name="T1">Tipo del primo componente della tupla.</typeparam>
      <typeparam name="T2">Tipo del secondo componente della tupla.</typeparam>
      <typeparam name="T3">Tipo del terzo componente della tupla.</typeparam>
      <typeparam name="T4">Tipo del quarto componente della tupla.</typeparam>
      <typeparam name="T5">Tipo del quinto componente della tupla.</typeparam>
      <typeparam name="T6">Tipo del sesto componente della tupla.</typeparam>
      <typeparam name="T7">Tipo del settimo componente della tupla.</typeparam>
      <typeparam name="TRest">Qualsiasi oggetto Tuple generico che definisce i tipi dei componenti restanti della tupla.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Tuple`8" />.</summary>
      <param name="item1">Valore del primo componente della tupla.</param>
      <param name="item2">Valore del secondo componente della tupla.</param>
      <param name="item3">Valore del terzo componente della tupla.</param>
      <param name="item4">Valore del quarto componente della tupla.</param>
      <param name="item5">Valore del quinto componente della tupla.</param>
      <param name="item6">Valore del sesto componente della tupla.</param>
      <param name="item7">Valore del settimo componente della tupla.</param>
      <param name="rest">Qualsiasi oggetto Tuple generico contenente i valori dei componenti restanti della tupla.</param>
      <exception cref="T:System.ArgumentException">L'oggetto <paramref name="rest" /> non è un oggetto Tuple generico.</exception>
    </member>
    <member name="M:System.Tuple`8.Equals(System.Object)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Tuple`8" /> corrente è uguale a un oggetto specificato.</summary>
      <returns>true se l'istanza corrente è uguale all'oggetto specificato; in caso contrario false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza.</param>
    </member>
    <member name="M:System.Tuple`8.GetHashCode">
      <summary>Calcola il codice hash per l'oggetto <see cref="T:System.Tuple`8" /> corrente.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
    </member>
    <member name="P:System.Tuple`8.Item1">
      <summary>Ottiene il valore del primo componente dell'oggetto <see cref="T:System.Tuple`8" /> corrente.</summary>
      <returns>Valore del primo componente dell'oggetto <see cref="T:System.Tuple`8" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`8.Item2">
      <summary>Ottiene il valore del secondo componente dell'oggetto <see cref="T:System.Tuple`8" /> corrente.</summary>
      <returns>Valore del secondo componente dell'oggetto <see cref="T:System.Tuple`8" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`8.Item3">
      <summary>Ottiene il valore del terzo componente dell'oggetto <see cref="T:System.Tuple`8" /> corrente.</summary>
      <returns>Valore del terzo componente dell'oggetto <see cref="T:System.Tuple`8" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`8.Item4">
      <summary>Ottiene il valore del quarto componente dell'oggetto <see cref="T:System.Tuple`8" /> corrente.</summary>
      <returns>Valore del quarto componente dell'oggetto <see cref="T:System.Tuple`8" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`8.Item5">
      <summary>Ottiene il valore del quinto componente dell'oggetto <see cref="T:System.Tuple`8" /> corrente.</summary>
      <returns>Valore del quinto componente dell'oggetto <see cref="T:System.Tuple`8" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`8.Item6">
      <summary>Ottiene il valore del sesto componente dell'oggetto <see cref="T:System.Tuple`8" /> corrente.</summary>
      <returns>Valore del sesto componente dell'oggetto <see cref="T:System.Tuple`8" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`8.Item7">
      <summary>Ottiene il valore del settimo componente dell'oggetto <see cref="T:System.Tuple`8" /> corrente.</summary>
      <returns>Valore del settimo componente dell'oggetto <see cref="T:System.Tuple`8" /> corrente.</returns>
    </member>
    <member name="P:System.Tuple`8.Rest">
      <summary>Ottiene i componenti restanti dell'oggetto <see cref="T:System.Tuple`8" /> corrente.</summary>
      <returns>Valore dei componenti restanti dell'oggetto <see cref="T:System.Tuple`8" /> corrente.</returns>
    </member>
    <member name="M:System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Confronta l'oggetto <see cref="T:System.Tuple`8" /> corrente con un oggetto specificato mediante un operatore di confronto specificato e restituisce un Integer che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato all'interno dell'ordinamento.</summary>
      <returns>Signed Integer che indica la posizione relativa di questa istanza e di <paramref name="other" /> nell'ordinamento, come illustrato nella tabella seguente.ValoreDescrizioneInteger negativoQuesta istanza precede <paramref name="other" />.ZeroQuesta istanza e <paramref name="other" /> presentano la stessa posizione all'interno dell'ordinamento.Integer positivoQuesta istanza segue <paramref name="other" />.</returns>
      <param name="other">Oggetto da confrontare con l'istanza corrente.</param>
      <param name="comparer">Oggetto che fornisce regole personalizzate per il confronto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> non è un oggetto <see cref="T:System.Tuple`8" />.</exception>
    </member>
    <member name="M:System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Tuple`8" /> corrente è uguale a un oggetto specificato in base a un metodo di confronto specificato.</summary>
      <returns>true se l'istanza corrente è uguale all'oggetto specificato; in caso contrario false.</returns>
      <param name="other">Oggetto da confrontare con questa istanza.</param>
      <param name="comparer">Oggetto che definisce il metodo da utilizzare per determinare se i due oggetti sono uguali.</param>
    </member>
    <member name="M:System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Calcola il codice hash per l'oggetto <see cref="T:System.Tuple`8" /> corrente tramite un metodo di calcolo specificato.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
      <param name="comparer">Oggetto il cui metodo <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcola il codice hash dell'oggetto <see cref="T:System.Tuple`8" /> corrente.</param>
    </member>
    <member name="M:System.Tuple`8.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'oggetto <see cref="T:System.Tuple`8" /> corrente con un oggetto specificato e restituisce un Integer che indica se l'oggetto corrente precede, segue o si trova nella stessa posizione dell'oggetto specificato all'interno dell'ordinamento.</summary>
      <returns>Signed Integer che indica la posizione relativa di questa istanza e di <paramref name="obj" /> nell'ordinamento, come illustrato nella tabella seguente.ValoreDescrizioneInteger negativoQuesta istanza precede <paramref name="obj" />.ZeroQuesta istanza e <paramref name="obj" /> presentano la stessa posizione all'interno dell'ordinamento.Integer positivoQuesta istanza segue <paramref name="obj" />.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza corrente.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> non è un oggetto <see cref="T:System.Tuple`8" />.</exception>
    </member>
    <member name="M:System.Tuple`8.ToString">
      <summary>Restituisce una stringa che rappresenta il valore di questa istanza di <see cref="T:System.Tuple`8" />.</summary>
      <returns>Rappresentazione di stringa di questo oggetto <see cref="T:System.Tuple`8" />.</returns>
    </member>
    <member name="T:System.Type">
      <summary>Rappresenta dichiarazioni di tipo: tipi classe, tipi interfaccia, tipi matrice, tipi di valore e di enumerazione, parametri di tipo, definizioni di tipo generico e tipi generici costruiti chiusi o aperti.Per esaminare il codice sorgente di .NET Framework per questo tipo, vedere Origine riferimento.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.AssemblyQualifiedName">
      <summary>Ottiene il nome qualificato dall'assembly del tipo, che include il nome dell'assembly da cui è stato caricato l'oggetto <see cref="T:System.Type" />.</summary>
      <returns>Nome qualificato dall'assembly dell'oggetto <see cref="T:System.Type" />, che include il nome dell'assembly da cui è stato caricato <see cref="T:System.Type" /> oppure null se l'istanza corrente rappresenta un parametro di tipo generico.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.DeclaringType">
      <summary>Ottiene il tipo che dichiara il parametro di tipo generico o di tipo annidato corrente.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo contenitore, se il tipo corrente è un tipo annidato, oppure la definizione di tipo generico, se il tipo corrente è un parametro di tipo di un tipo generico, oppure il tipo che dichiara il metodo generico, se il tipo corrente è un parametro di tipo di un metodo generico; in caso contrario, null.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Type.EmptyTypes">
      <summary>Rappresenta una matrice vuota di tipo <see cref="T:System.Type" />.Questo campo è di sola lettura.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.Equals(System.Object)">
      <summary>Determina se il tipo di sistema sottostante dell'oggetto <see cref="T:System.Type" /> corrente coincide con il tipo di sistema sottostante dell'oggetto <see cref="T:System.Object" /> specificato.</summary>
      <returns>true se il tipo di sistema sottostante di <paramref name="o" /> coincide con il tipo di sistema sottostante dell'oggetto <see cref="T:System.Type" /> corrente; in caso contrario, false.Questo metodo restituisce false se l'oggetto specificato da <paramref name="o" /> non è un Type.</returns>
      <param name="o">Oggetto il cui tipo di sistema sottostante deve essere confrontato con il tipo di sistema sottostante dell'oggetto <see cref="T:System.Type" /> corrente. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.Equals(System.Type)">
      <summary>Determina se il tipo di sistema sottostante dell'oggetto <see cref="T:System.Type" /> corrente coincide con il tipo di sistema sottostante dell'oggetto <see cref="T:System.Type" /> specificato.</summary>
      <returns>true se il tipo di sistema sottostante di <paramref name="o" /> coincide con il tipo di sistema sottostante dell'oggetto <see cref="T:System.Type" /> corrente; in caso contrario, false.</returns>
      <param name="o">Oggetto il cui tipo di sistema sottostante deve essere confrontato con il tipo di sistema sottostante dell'oggetto <see cref="T:System.Type" /> corrente. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.FullName">
      <summary>Ottiene il nome completo del tipo, comprendente il relativo spazio dei nomi ma non l'assembly. </summary>
      <returns>Nome completo del tipo, incluso il relativo lo spazio dei nomi ma non l'assembly; oppure null se l'istanza corrente rappresenta un parametro di tipo generico, un tipo matrice, un tipo puntatore o un tipo byref basato su un parametro di tipo, o un tipo generico che non è una definizione di tipo generico ma contiene parametri di tipo non risolto.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.GenericParameterPosition">
      <summary>Ottiene la posizione del parametro di tipo nell'elenco di parametri di tipo del tipo o del metodo generico che ha dichiarato il parametro, quando l'oggetto <see cref="T:System.Type" /> rappresenta un parametro di tipo di un tipo o un metodo generico.</summary>
      <returns>Posizione del parametro di tipo nell'elenco dei parametri di tipo del tipo o del metodo generico che definisce il parametro.I numeri di posizione iniziano da 0.</returns>
      <exception cref="T:System.InvalidOperationException">The current type does not represent a type parameter.That is, <see cref="P:System.Type.IsGenericParameter" /> returns false.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.GenericTypeArguments">
      <summary>Ottiene una matrice di argomenti di tipo generico per questo tipo.</summary>
      <returns>Matrice di argomenti di tipo generico per questo tipo.</returns>
    </member>
    <member name="M:System.Type.GetArrayRank">
      <summary>Ottiene il numero di dimensioni in una matrice. </summary>
      <returns>Intero che contiene il numero di dimensioni del tipo corrente. </returns>
      <exception cref="T:System.NotSupportedException">The functionality of this method is unsupported in the base class and must be implemented in a derived class instead. </exception>
      <exception cref="T:System.ArgumentException">The current type is not an array. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetElementType">
      <summary>Quando ne viene eseguito l'override in una classe derivata, restituisce l'oggetto <see cref="T:System.Type" /> dell'oggetto incluso in modo diretto o mediante riferimento tramite matrice, puntatore o tipo di riferimento.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> dell'oggetto incluso o a cui fa riferimento la matrice, il puntatore o il tipo di riferimento corrente oppure null se l'oggetto <see cref="T:System.Type" /> corrente non è una matrice né un puntatore, non viene passato per riferimento oppure rappresenta un tipo generico o un parametro di tipo nella definizione di un tipo o di un metodo generico.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetGenericTypeDefinition">
      <summary>Restituisce un oggetto <see cref="T:System.Type" /> che rappresenta una definizione di tipo generico da cui è possibile costruire il tipo generico corrente.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta un tipo generico da cui è possibile costruire il tipo corrente.</returns>
      <exception cref="T:System.InvalidOperationException">The current type is not a generic type.That is, <see cref="P:System.Type.IsGenericType" /> returns false.</exception>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.Derived classes must provide an implementation.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'istanza.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetType(System.String)">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> con il nome specificato, eseguendo una ricerca con distinzione tra maiuscole e minuscole.</summary>
      <returns>Tipo con il nome specificato, se presente; in caso contrario, null.</returns>
      <param name="typeName">Nome qualificato dall'assembly del tipo da ottenere.Vedere <see cref="P:System.Type.AssemblyQualifiedName" />.Se il tipo è incluso nell'assembly attualmente in esecuzione o in Mscorlib.dll, è sufficiente specificare il nome del tipo qualificato in base al relativo spazio dei nomi.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">A class initializer is invoked and throws an exception. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="typeName" /> represents a generic type that has a pointer type, a ByRef type, or <see cref="T:System.Void" /> as one of its type arguments.-or-<paramref name="typeName" /> represents a generic type that has an incorrect number of type arguments.-or-<paramref name="typeName" /> represents a generic type, and one of its type arguments does not satisfy the constraints for the corresponding type parameter.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> represents an array of <see cref="T:System.TypedReference" />. </exception>
      <exception cref="T:System.IO.FileLoadException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.IO.IOException" />, instead.The assembly or one of its dependencies was found, but could not be loaded. </exception>
      <exception cref="T:System.BadImageFormatException">The assembly or one of its dependencies is not valid. -or-Version 2.0 or later of the common language runtime is currently loaded, and the assembly was compiled with a later version.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.GetType(System.String,System.Boolean)">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> con il nome specificato, eseguendo una ricerca con distinzione tra maiuscole e minuscole e specificando se generare un'eccezione in caso il tipo non venga trovato.</summary>
      <returns>Tipo con il nome specificato.Se il tipo non viene trovato, il parametro <paramref name="throwOnError" /> specifica se viene restituito null o se viene generata un'eccezione.In alcuni casi, viene generata un'eccezione indipendentemente dal valore di <paramref name="throwOnError" />.Vedere la sezione relativa alle eccezioni.</returns>
      <param name="typeName">Nome qualificato dall'assembly del tipo da ottenere.Vedere <see cref="P:System.Type.AssemblyQualifiedName" />.Se il tipo è incluso nell'assembly attualmente in esecuzione o in Mscorlib.dll, è sufficiente specificare il nome del tipo qualificato in base al relativo spazio dei nomi.</param>
      <param name="throwOnError">true per generare un'eccezione se non è possibile trovare il tipo; false per restituire null.Se si specifica false vengono eliminate alcune condizioni di eccezione, ma non tutte.Vedere la sezione relativa alle eccezioni.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">A class initializer is invoked and throws an exception. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="throwOnError" /> is true and the type is not found. -or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> contains invalid characters, such as an embedded tab.-or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> is an empty string.-or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> represents an array type with an invalid size. -or-<paramref name="typeName" /> represents an array of <see cref="T:System.TypedReference" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="throwOnError" /> is true and <paramref name="typeName" /> contains invalid syntax.For example, "MyType[,*,]".-or- <paramref name="typeName" /> represents a generic type that has a pointer type, a ByRef type, or <see cref="T:System.Void" /> as one of its type arguments.-or-<paramref name="typeName" /> represents a generic type that has an incorrect number of type arguments.-or-<paramref name="typeName" /> represents a generic type, and one of its type arguments does not satisfy the constraints for the corresponding type parameter.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="throwOnError" /> is true and the assembly or one of its dependencies was not found. </exception>
      <exception cref="T:System.IO.FileLoadException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.IO.IOException" />, instead.The assembly or one of its dependencies was found, but could not be loaded. </exception>
      <exception cref="T:System.BadImageFormatException">The assembly or one of its dependencies is not valid. -or-Version 2.0 or later of the common language runtime is currently loaded, and the assembly was compiled with a later version.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.GetType(System.String,System.Boolean,System.Boolean)">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> con il nome specificato, che indica se generare un'eccezione quando viene trovato il tipo e se eseguire una ricerca con distinzione tra maiuscole e minuscole. </summary>
      <returns>Tipo con il nome specificato.Se il tipo non viene trovato, il parametro <paramref name="throwOnError" /> specifica se viene restituito null o se viene generata un'eccezione.In alcuni casi, viene generata un'eccezione indipendentemente dal valore di <paramref name="throwOnError" />.Vedere la sezione relativa alle eccezioni.</returns>
      <param name="typeName">Nome qualificato dall'assembly del tipo da ottenere.Vedere <see cref="P:System.Type.AssemblyQualifiedName" />.Se il tipo è incluso nell'assembly attualmente in esecuzione o in Mscorlib.dll, è sufficiente specificare il nome del tipo qualificato in base al relativo spazio dei nomi.</param>
      <param name="throwOnError">true per generare un'eccezione se il tipo non viene trovato. false per restituire null. Specificando false inoltre si eliminano alcune condizioni dell'eccezione, ma non tutte.Vedere la sezione relativa alle eccezioni.</param>
      <param name="ignoreCase">true per eseguire una ricerca di <paramref name="typeName" /> senza distinzione tra maiuscole minuscole, false per eseguire una ricerca di <paramref name="typeName" /> con distinzione tra maiuscole e minuscole. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">A class initializer is invoked and throws an exception. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="throwOnError" /> is true and the type is not found. -or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> contains invalid characters, such as an embedded tab.-or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> is an empty string.-or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> represents an array type with an invalid size. -or-<paramref name="typeName" /> represents an array of <see cref="T:System.TypedReference" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="throwOnError" /> is true and <paramref name="typeName" /> contains invalid syntax.For example, "MyType[,*,]".-or- <paramref name="typeName" /> represents a generic type that has a pointer type, a ByRef type, or <see cref="T:System.Void" /> as one of its type arguments.-or-<paramref name="typeName" /> represents a generic type that has an incorrect number of type arguments.-or-<paramref name="typeName" /> represents a generic type, and one of its type arguments does not satisfy the constraints for the corresponding type parameter.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="throwOnError" /> is true and the assembly or one of its dependencies was not found. </exception>
      <exception cref="T:System.IO.FileLoadException">The assembly or one of its dependencies was found, but could not be loaded. </exception>
      <exception cref="T:System.BadImageFormatException">The assembly or one of its dependencies is not valid. -or-Version 2.0 or later of the common language runtime is currently loaded, and the assembly was compiled with a later version.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)">
      <summary>Ottiene il tipo a cui fa riferimento l'handle del tipo specificato.</summary>
      <returns>Tipo al quale l'oggetto <see cref="T:System.RuntimeTypeHandle" /> specificato fa riferimento, oppure null se la proprietà <see cref="P:System.RuntimeTypeHandle.Value" /> di <paramref name="handle" /> è null.</returns>
      <param name="handle">Oggetto che fa riferimento al tipo. </param>
      <exception cref="T:System.Reflection.TargetInvocationException">A class initializer is invoked and throws an exception. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.HasElementType">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Type" /> corrente comprende o si riferisce a un altro tipo, ovvero se l'oggetto <see cref="T:System.Type" /> corrente è una matrice, un puntatore o viene passato per riferimento.</summary>
      <returns>true se <see cref="T:System.Type" /> è una matrice, un puntatore oppure è passato per riferimento; in caso contrario, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsArray">
      <summary>Ottiene un valore che indica se il tipo è una matrice. </summary>
      <returns>true se il tipo corrente è una matrice; in caso contrario, false. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsByRef">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Type" /> viene passato per riferimento.</summary>
      <returns>true se <see cref="T:System.Type" /> viene passato per riferimento; in caso contrario, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsConstructedGenericType">
      <summary>Ottiene un valore che indica se l'oggetto rappresenta un tipo generico costruito.È possibile creare istanze di un tipo generico costruito.</summary>
      <returns>true se questo oggetto rappresenta una definizione di tipo generico; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Type.IsGenericParameter">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Type" /> corrente rappresenta un parametro di tipo nella definizione di un tipo o metodo generico.</summary>
      <returns>true se l'oggetto <see cref="T:System.Type" /> rappresenta un parametro di tipo di una definizione di tipo o metodo generico; in caso contrario, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsNested">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Type" /> corrente rappresenta un tipo la cui definizione è annidata all'interno della definizione di un altro tipo.</summary>
      <returns>true se l'oggetto <see cref="T:System.Type" /> è annidato all'interno di un altro tipo; in caso contrario, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsPointer">
      <summary>Ottiene un valore che indica se <see cref="T:System.Type" /> è un puntatore.</summary>
      <returns>true se <see cref="T:System.Type" /> è un puntatore; in caso contrario, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeArrayType">
      <summary>Restituisce un oggetto <see cref="T:System.Type" /> che rappresenta una matrice unidimensionale del tipo corrente, con limite inferiore zero.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta una matrice unidimensionale del tipo corrente, con limite inferiore zero.</returns>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.Derived classes must provide an implementation.</exception>
      <exception cref="T:System.TypeLoadException">The current type is <see cref="T:System.TypedReference" />.-or-The current type is a ByRef type.That is, <see cref="P:System.Type.IsByRef" /> returns true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeArrayType(System.Int32)">
      <summary>Restituisce un oggetto <see cref="T:System.Type" /> che rappresenta una matrice del tipo corrente, con il numero specificato di dimensioni.</summary>
      <returns>Oggetto che rappresenta una matrice del tipo corrente, con il numero specificato di dimensioni.</returns>
      <param name="rank">Numero di dimensioni della matrice.Il numero deve essere minore o uguale a 32.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="rank" /> is invalid.For example, 0 or negative.</exception>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.</exception>
      <exception cref="T:System.TypeLoadException">The current type is <see cref="T:System.TypedReference" />.-or-The current type is a ByRef type.That is, <see cref="P:System.Type.IsByRef" /> returns true.-or-<paramref name="rank" /> is greater than 32.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeByRefType">
      <summary>Restituisce un oggetto <see cref="T:System.Type" /> che rappresenta il tipo corrente quando viene passato come parametro ref (parametro ByRef in Visual Basic).</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo corrente quando viene passato come parametro ref (parametro ByRef in Visual Basic).</returns>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.</exception>
      <exception cref="T:System.TypeLoadException">The current type is <see cref="T:System.TypedReference" />.-or-The current type is a ByRef type.That is, <see cref="P:System.Type.IsByRef" /> returns true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeGenericType(System.Type[])">
      <summary>Sostituisce gli elementi di una matrice di tipi ai parametri di tipo della definizione di tipo generico corrente e restituisce un oggetto <see cref="T:System.Type" /> che rappresenta il tipo costruito risultante.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo costruito ottenuto sostituendo i parametri di tipo del tipo generico corrente con gli elementi di <paramref name="typeArguments" />.</returns>
      <param name="typeArguments">Matrice di tipi con cui sostituire i parametri di tipo del tipo generico corrente.</param>
      <exception cref="T:System.InvalidOperationException">The current type does not represent a generic type definition.That is, <see cref="P:System.Type.IsGenericTypeDefinition" /> returns false.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeArguments" /> is null.-or- Any element of <paramref name="typeArguments" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The number of elements in <paramref name="typeArguments" /> is not the same as the number of type parameters in the current generic type definition.-or- Any element of <paramref name="typeArguments" /> does not satisfy the constraints specified for the corresponding type parameter of the current generic type. -or- <paramref name="typeArguments" /> contains an element that is a pointer type (<see cref="P:System.Type.IsPointer" /> returns true), a by-ref type (<see cref="P:System.Type.IsByRef" /> returns true), or <see cref="T:System.Void" />.</exception>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.Derived classes must provide an implementation.</exception>
    </member>
    <member name="M:System.Type.MakePointerType">
      <summary>Restituisce un oggetto <see cref="T:System.Type" /> che rappresenta un puntatore al tipo corrente.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta un puntatore al tipo corrente.</returns>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.</exception>
      <exception cref="T:System.TypeLoadException">The current type is <see cref="T:System.TypedReference" />.-or-The current type is a ByRef type.That is, <see cref="P:System.Type.IsByRef" /> returns true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Type.Missing">
      <summary>Rappresenta un valore mancante nelle informazioni <see cref="T:System.Type" />.Questo campo è di sola lettura.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.Name"></member>
    <member name="P:System.Type.Namespace">
      <summary>Ottiene lo spazio dei nomi dell'oggetto <see cref="T:System.Type" />.</summary>
      <returns>Spazio dei nomi di <see cref="T:System.Type" />; null se l'istanza corrente non dispone di alcuno spazio dei nomi o rappresenta un parametro generico.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.ToString">
      <summary>Restituisce un valore String che rappresenta il nome del Type corrente.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che rappresenta il nome dell'oggetto <see cref="T:System.Type" /> corrente.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.TypeHandle">
      <summary>che rappresenta il nome dell'oggetto <see cref="T:System.Type" /> corrente.</summary>
      <returns>Handle per l'oggetto <see cref="T:System.Type" /> corrente.</returns>
      <exception cref="T:System.NotSupportedException">The .NET Compact Framework does not currently support this property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.TypeAccessException">
      <summary>Eccezione che viene generata quando un metodo tenta di usare un tipo a cui non ha accesso.</summary>
    </member>
    <member name="M:System.TypeAccessException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.TypeAccessException" /> con un messaggio fornito dal sistema in cui viene descritto l'errore.</summary>
    </member>
    <member name="M:System.TypeAccessException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.TypeAccessException" /> con un messaggio specificato in cui viene descritto l'errore.</summary>
      <param name="message">Messaggio in cui viene descritta l'eccezione.Il chiamante di questo costruttore deve assicurare che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.TypeAccessException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.TypeAccessException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio in cui viene descritta l'eccezione.Il chiamante di questo costruttore deve assicurare che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
      <param name="inner">Eccezione che ha determinato l'eccezione corrente.Se il parametro <paramref name="inner" /> non è null, l'eccezione corrente viene generata in un blocco catch in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.TypeCode">
      <summary>Specifica il tipo di un oggetto.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.TypeCode.Boolean">
      <summary>Tipo semplice che rappresenta i valori booleani true o false.</summary>
    </member>
    <member name="F:System.TypeCode.Byte">
      <summary>Tipo integrale che rappresenta interi a 8 bit senza segno compresi tra 0 e 255.</summary>
    </member>
    <member name="F:System.TypeCode.Char">
      <summary>Tipo integrale che rappresenta interi senza segno a 16 bit compresi tra 0 e 65535.Il set di possibili valori per il tipo <see cref="F:System.TypeCode.Char" /> corrisponde al set di caratteri Unicode.</summary>
    </member>
    <member name="F:System.TypeCode.DateTime">
      <summary>Tipo che rappresenta un valore di data e di ora.</summary>
    </member>
    <member name="F:System.TypeCode.Decimal">
      <summary>Tipo semplice che rappresenta valori compresi tra 1,0 x 10 -28 e approssimativamente 7,9 x 10 28 con 28-29 cifre significative.</summary>
    </member>
    <member name="F:System.TypeCode.Double">
      <summary>Tipo a virgola mobile che rappresenta valori compresi tra 5,0 x 10 -324 e 1,7 x 10 308 con un'approssimazione di 15-16 cifre.</summary>
    </member>
    <member name="F:System.TypeCode.Empty">
      <summary>Riferimento null.</summary>
    </member>
    <member name="F:System.TypeCode.Int16">
      <summary>Tipo integrale che rappresenta interi con segno a 16 bit compresi tra -32768 e 32767.</summary>
    </member>
    <member name="F:System.TypeCode.Int32">
      <summary>Tipo integrale che rappresenta interi con segno a 32 bit compresi tra -2147483648 e 2147483647.</summary>
    </member>
    <member name="F:System.TypeCode.Int64">
      <summary>Tipo integrale che rappresenta interi con segno a 64 bit compresi tra -9223372036854775808 e 9223372036854775807.</summary>
    </member>
    <member name="F:System.TypeCode.Object">
      <summary>Tipo generale che rappresenta qualsiasi tipo valore o riferimento non rappresentato in modo esplicito da un altro TypeCode.</summary>
    </member>
    <member name="F:System.TypeCode.SByte">
      <summary>Tipo integrale che rappresenta interi con segno a 8 bit compresi tra -128 e 127.</summary>
    </member>
    <member name="F:System.TypeCode.Single">
      <summary>Tipo a virgola mobile che rappresenta valori compresi tra 1,5 x 10 -45 e 3,4 x 10 38 con un'approssimazione di 7 cifre.</summary>
    </member>
    <member name="F:System.TypeCode.String">
      <summary>Tipo di classe sealed che rappresenta stringhe di caratteri Unicode.</summary>
    </member>
    <member name="F:System.TypeCode.UInt16">
      <summary>Tipo integrale che rappresenta interi senza segno a 16 bit compresi tra 0 e 65535.</summary>
    </member>
    <member name="F:System.TypeCode.UInt32">
      <summary>Tipo integrale che rappresenta interi senza segno a 32 bit compresi tra 0 e 4294967295.</summary>
    </member>
    <member name="F:System.TypeCode.UInt64">
      <summary>Tipo integrale che rappresenta interi senza segno a 64 bit compresi tra 0 e 18446744073709551615.</summary>
    </member>
    <member name="T:System.TypeInitializationException">
      <summary>Eccezione generata come wrapper per l'eccezione generata dall'inizializzatore di classi.La classe non può essere ereditata.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.TypeInitializationException" /> con il messaggio di errore predefinito, il nome del tipo specificato e un riferimento all'eccezione interna che è la causa radice dell'eccezione corrente.</summary>
      <param name="fullTypeName">Nome completo del tipo che non riesce a eseguire l'inizializzazione. </param>
      <param name="innerException">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="innerException" /> non è un riferimento null, Nothing in Visual Basic, l'eccezione corrente viene generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="P:System.TypeInitializationException.TypeName">
      <summary>Ottiene il nome completo del tipo che non riesce ad eseguire l'inizializzazione.</summary>
      <returns>Nome completo del tipo che non riesce a eseguire l'inizializzazione.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.TypeLoadException">
      <summary>Eccezione che viene generata quando si verificano errori di caricamento del tipo.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TypeLoadException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.TypeLoadException" />.</summary>
    </member>
    <member name="M:System.TypeLoadException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.TypeLoadException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore. </param>
    </member>
    <member name="M:System.TypeLoadException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.TypeLoadException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="inner">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="inner" /> non è null, l'eccezione corrente verrà generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="P:System.TypeLoadException.Message">
      <summary>Ottiene il messaggio di errore per questa eccezione.</summary>
      <returns>La stringa del messaggio di errore</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.TypeLoadException.TypeName">
      <summary>Consente di recuperare il nome completo del tipo che ha causato l'eccezione.</summary>
      <returns>Nome completo del tipo.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.UInt16">
      <summary>Rappresenta un intero senza segno a 16 bit.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.CompareTo(System.UInt16)">
      <summary>Confronta questa istanza con un intero senza segno a 16 bit specificato e restituisce un'indicazione dei valori relativi.</summary>
      <returns>Numero con segno che indica i valori relativi di questa istanza e di <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Intero senza segno da confrontare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt16.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="obj" /> è un'istanza di <see cref="T:System.UInt16" /> ed è uguale al valore dell'istanza; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt16.Equals(System.UInt16)">
      <summary>Restituisce un valore che indica se l'istanza è uguale a un valore <see cref="T:System.UInt16" /> specificato.</summary>
      <returns>true se <paramref name="obj" /> ha lo stesso valore di questa istanza; in caso contrario, false.</returns>
      <param name="obj">Intero senza segno a 16 bit da confrontare con questa istanza.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt16.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UInt16.MaxValue">
      <summary>Rappresenta il valore massimo possibile di <see cref="T:System.UInt16" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UInt16.MinValue">
      <summary>Rappresenta il valore più piccolo possibile di <see cref="T:System.UInt16" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String)">
      <summary>Converte la rappresentazione di stringa di un numero nel suo equivalente intero senza segno a 16 bit.</summary>
      <returns>Intero senza segno a 16 bit equivalente al numero contenuto in <paramref name="s" />.</returns>
      <param name="s">Stringa che rappresenta il numero da convertire. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato nel suo equivalente intero senza segno a 16 bit.</summary>
      <returns>Intero senza segno a 16 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa che rappresenta il numero da convertire.La stringa viene interpretata usando lo stile specificato dal parametro <paramref name="style" />.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che specifica il formato consentito di <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato e in un formato specifico delle impostazioni cultura nell'equivalente intero senza segno a 16 bit.</summary>
      <returns>Intero senza segno a 16 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa che rappresenta il numero da convertire.La stringa viene interpretata usando lo stile specificato dal parametro <paramref name="style" />.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in un formato specifico delle impostazioni cultura nel suo equivalente intero senza segno a 16 bit.</summary>
      <returns>Intero senza segno a 16 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa che rappresenta il numero da convertire. </param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
      <returns>Intero con segno che indica l'ordine relativo dell'istanza e di <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Oggetto da confrontare con questa istanza o null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.UInt16" /> object. </exception>
    </member>
    <member name="M:System.UInt16.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.UInt16.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true se il valore dell'istanza corrente non è uguale a zero; in caso contrario, false.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Byte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Char" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Questa conversione non è supportata.Non vengono restituiti valori.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Valore corrente di questa istanza, convertito in un oggetto <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valore corrente di questa istanza, convertito in un oggetto <see cref="T:System.Double" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valore corrente di questa istanza, convertito in un oggetto <see cref="T:System.Int16" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore corrente di questa istanza, convertito in un oggetto <see cref="T:System.Int32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore corrente di questa istanza, convertito in un oggetto <see cref="T:System.Int64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valore corrente di questa istanza, convertito in un oggetto <see cref="T:System.SByte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valore corrente di questa istanza, convertito in un oggetto <see cref="T:System.Single" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valore corrente di questa istanza, convertito in un oggetto <paramref name="type" />.</returns>
      <param name="type">Tipo nel quale convertire questo valore <see cref="T:System.UInt16" />.</param>
      <param name="provider">Implementazione <see cref="T:System.IFormatProvider" /> che fornisce informazioni sul formato del valore restituito.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Valore corrente di questa istanza, invariato.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore corrente di questa istanza, convertito in un oggetto <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore corrente di questa istanza, convertito in un oggetto <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt16.ToString">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa del valore di questa istanza, composto da una sequenza di cifre comprese tra 0 e 9 senza segno o zeri iniziali.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.ToString(System.IFormatProvider)">
      <summary>Converte il valore numerico di questa istanza nella rappresentazione di stringa equivalente usando le informazioni di formato specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore di questa istanza, composto da una sequenza di cifre comprese tra 0 e 9 senza segno o zeri iniziali.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.ToString(System.String)">
      <summary>Converte il valore numerico dell'istanza corrente nella rappresentazione di stringa equivalente, usando il formato specificato.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="format" />.</returns>
      <param name="format">Stringa di formato numerico.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.ToString(System.String,System.IFormatProvider)">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente usando il formato specificato e le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza corrente, in base a quanto specificato da <paramref name="format" /> e <paramref name="provider" />.</returns>
      <param name="format">Stringa di formato numerico.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16@)">
      <summary>Prova a convertire la rappresentazione di stringa di un numero in uno stile e in un formato specifico delle impostazioni cultura specificati nel relativo intero senza segno a 16 bit equivalente.Un valore restituito indica se la conversione è riuscita o meno.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa che rappresenta il numero da convertire.La stringa viene interpretata usando lo stile specificato dal parametro <paramref name="style" />.</param>
      <param name="style">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <param name="result">Quando questo metodo viene restituito, contiene il valore intero senza segno a 16 bit equivalente al numero contenuto in <paramref name="s" />, se la conversione riesce oppure zero se la conversione non riesce.La conversione non riesce se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" /> non presenta un formato conforme a <paramref name="style" /> o rappresenta un numero minore di <see cref="F:System.UInt16.MinValue" /> o maggiore di <see cref="F:System.UInt16.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.TryParse(System.String,System.UInt16@)">
      <summary>Prova a convertire la rappresentazione di stringa di un numero nel relativo intero senza segno a 16 bit equivalente.Un valore restituito indica se la conversione è riuscita o meno.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa che rappresenta il numero da convertire. </param>
      <param name="result">Quando questo metodo viene restituito, contiene il valore intero senza segno a 16 bit equivalente al numero contenuto in <paramref name="s" /> se la conversione riesce; in caso contrario, contiene zero.La conversione non riesce se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" /> non è nel formato corretto.o rappresenta un numero minore di <see cref="F:System.UInt16.MinValue" /> o maggiore di <see cref="F:System.UInt16.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UInt32">
      <summary>Rappresenta un intero senza segno a 32 bit.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.CompareTo(System.UInt32)">
      <summary>Confronta questa istanza con un intero senza segno a 32 bit specificato e restituisce un'indicazione dei valori relativi.</summary>
      <returns>Numero con segno che indica i valori relativi di questa istanza e di <paramref name="value" />.Return value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Intero senza segno da confrontare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt32.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="obj" /> è un'istanza di <see cref="T:System.UInt32" /> ed è uguale al valore dell'istanza; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt32.Equals(System.UInt32)">
      <summary>Restituisce un valore che indica se l'istanza è uguale a un oggetto <see cref="T:System.UInt32" /> specificato.</summary>
      <returns>true se <paramref name="obj" /> ha lo stesso valore di questa istanza; in caso contrario, false.</returns>
      <param name="obj">Valore da confrontare con questa istanza.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt32.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UInt32.MaxValue">
      <summary>Rappresenta il valore massimo possibile di <see cref="T:System.UInt32" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UInt32.MinValue">
      <summary>Rappresenta il valore più piccolo possibile di <see cref="T:System.UInt32" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String)">
      <summary>Converte la rappresentazione di stringa di un numero nel suo equivalente intero senza segno a 32 bit.</summary>
      <returns>Intero senza segno a 32 bit equivalente al numero contenuto in <paramref name="s" />.</returns>
      <param name="s">Stringa che rappresenta il numero da convertire. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato nel suo equivalente intero senza segno a 32 bit.</summary>
      <returns>Intero senza segno a 32 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa che rappresenta il numero da convertire.La stringa viene interpretata usando lo stile specificato dal parametro <paramref name="style" />.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che specifica il formato consentito di <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato e in un formato specifico delle impostazioni cultura nell'equivalente intero senza segno a 32 bit.</summary>
      <returns>Intero senza segno a 32 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa che rappresenta il numero da convertire.La stringa viene interpretata usando lo stile specificato dal parametro <paramref name="style" />.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in un formato specifico delle impostazioni cultura nel suo equivalente intero senza segno a 32 bit.</summary>
      <returns>Intero senza segno a 32 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa che rappresenta il numero da convertire. </param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct style. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
      <returns>Intero con segno che indica l'ordine relativo dell'istanza e di <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Oggetto da confrontare con questa istanza o null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.UInt32" /> object. </exception>
    </member>
    <member name="M:System.UInt32.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.UInt32.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true se il valore dell'istanza corrente non è uguale a zero; in caso contrario, false.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Byte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Char" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Questa conversione non è supportata.Non vengono restituiti valori.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Double" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int16" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.SByte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Single" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <paramref name="type" />.</returns>
      <param name="type">Tipo nel quale convertire questo valore <see cref="T:System.UInt32" />.</param>
      <param name="provider">Implementazione <see cref="T:System.IFormatProvider" /> che fornisce informazioni specifiche delle impostazioni cultura sul formato del valore restituito.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt16" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, invariato.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt32.ToString">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa del valore di questa istanza, composto da una sequenza di cifre comprese tra 0 e 9 senza segno o zeri iniziali.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.ToString(System.IFormatProvider)">
      <summary>Converte il valore numerico di questa istanza nella rappresentazione di stringa equivalente usando le informazioni di formato specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore di questa istanza, composto da una sequenza di cifre comprese tra 0 e 9 senza segno o zeri iniziali.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.ToString(System.String)">
      <summary>Converte il valore numerico dell'istanza corrente nella rappresentazione di stringa equivalente, usando il formato specificato.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="format" />.</returns>
      <param name="format">Stringa di formato numerico.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.ToString(System.String,System.IFormatProvider)">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente usando il formato specificato e le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza corrente, in base a quanto specificato da <paramref name="format" /> e <paramref name="provider" />.</returns>
      <param name="format">Stringa di formato numerico.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente all'istanza. </param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32@)">
      <summary>Prova a convertire la rappresentazione di stringa di un numero in uno stile e in un formato specifico delle impostazioni cultura specificati nel relativo intero senza segno a 32 bit equivalente.Un valore restituito indica se la conversione è riuscita o meno.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa che rappresenta il numero da convertire.La stringa viene interpretata usando lo stile specificato dal parametro <paramref name="style" />.</param>
      <param name="style">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <param name="result">Quando questo metodo viene restituito, contiene il valore intero senza segno a 32 bit equivalente al numero contenuto in <paramref name="s" />, se la conversione riesce oppure zero se la conversione non riesce.La conversione non riesce se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" />, non è in un formato conforme a <paramref name="style" /> o rappresenta un numero minore di <see cref="F:System.UInt32.MinValue" /> o maggiore di <see cref="F:System.UInt32.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.TryParse(System.String,System.UInt32@)">
      <summary>Prova a convertire la rappresentazione di stringa di un numero nel relativo intero senza segno a 32 bit equivalente.Un valore restituito indica se la conversione è riuscita o meno.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa che rappresenta il numero da convertire. </param>
      <param name="result">Quando questo metodo viene restituito, contiene il valore intero senza segno a 32 bit equivalente al numero contenuto in <paramref name="s" /> se la conversione riesce; in caso contrario, contiene zero.La conversione non riesce se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" />, non è in formato corretto o rappresenta un numero minore di <see cref="F:System.UInt32.MinValue" /> o maggiore di <see cref="F:System.UInt32.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UInt64">
      <summary>Rappresenta un intero senza segno a 64 bit.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.CompareTo(System.UInt64)">
      <summary>Confronta questa istanza con un intero senza segno a 64 bit specificato e restituisce un'indicazione dei valori relativi.</summary>
      <returns>Numero con segno che indica i valori relativi di questa istanza e di <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Intero senza segno da confrontare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt64.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="obj" /> è un'istanza di <see cref="T:System.UInt64" /> ed è uguale al valore dell'istanza; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt64.Equals(System.UInt64)">
      <summary>Restituisce un valore che indica se l'istanza è uguale a un valore <see cref="T:System.UInt64" /> specificato.</summary>
      <returns>true se <paramref name="obj" /> ha lo stesso valore di questa istanza; in caso contrario, false.</returns>
      <param name="obj">Valore <see cref="T:System.UInt64" /> da confrontare con questa istanza.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt64.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UInt64.MaxValue">
      <summary>Rappresenta il valore massimo possibile di <see cref="T:System.UInt64" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UInt64.MinValue">
      <summary>Rappresenta il valore più piccolo possibile di <see cref="T:System.UInt64" />.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String)">
      <summary>Converte la rappresentazione di stringa di un numero nel suo equivalente intero senza segno a 64 bit.</summary>
      <returns>Intero senza segno a 64 bit equivalente al numero contenuto in <paramref name="s" />.</returns>
      <param name="s">Stringa che rappresenta il numero da convertire. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato nel suo equivalente intero senza segno a 64 bit.</summary>
      <returns>Intero senza segno a 64 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa che rappresenta il numero da convertire.La stringa viene interpretata usando lo stile specificato dal parametro <paramref name="style" />.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che specifica il formato consentito di <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato e in un formato specifico delle impostazioni cultura nell'equivalente intero senza segno a 64 bit.</summary>
      <returns>Intero senza segno a 64 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa che rappresenta il numero da convertire.La stringa viene interpretata usando lo stile specificato dal parametro <paramref name="style" />.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in un formato specifico delle impostazioni cultura nel suo equivalente intero senza segno a 64 bit.</summary>
      <returns>Intero senza segno a 64 bit equivalente al numero specificato in <paramref name="s" />.</returns>
      <param name="s">Stringa che rappresenta il numero da convertire. </param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not in the correct style. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
      <returns>Intero con segno che indica l'ordine relativo dell'istanza e di <paramref name="value" />.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Oggetto da confrontare con questa istanza o null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.UInt64" /> object. </exception>
    </member>
    <member name="M:System.UInt64.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.UInt64.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true se il valore dell'istanza corrente non è uguale a zero; in caso contrario, false.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Byte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Char" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Questa conversione non è supportata.Il tentativo di usare questo metodo genera un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <returns>Questa conversione non è supportata.Non vengono restituiti valori.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Decimal" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Double" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int16" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Int64" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.SByte" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.Single" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <paramref name="type" />.</returns>
      <param name="type">Tipo nel quale convertire questo valore <see cref="T:System.UInt64" />.</param>
      <param name="provider">Implementazione <see cref="T:System.IFormatProvider" /> che fornisce informazioni sul formato del valore restituito.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt16" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, convertito in <see cref="T:System.UInt32" />.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Valore dell'istanza corrente, invariato.</returns>
      <param name="provider">Questo parametro viene ignorato.</param>
    </member>
    <member name="M:System.UInt64.ToString">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa del valore di questa istanza, composto da una sequenza di cifre comprese tra 0 e 9 senza segno o zeri iniziali.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.ToString(System.IFormatProvider)">
      <summary>Converte il valore numerico di questa istanza nella rappresentazione di stringa equivalente usando le informazioni di formato specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore di questa istanza, composto da una sequenza di cifre comprese tra 0 e 9 senza segno o zeri iniziali.  </returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.ToString(System.String)">
      <summary>Converte il valore numerico dell'istanza corrente nella rappresentazione di stringa equivalente, usando il formato specificato.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="format" />.</returns>
      <param name="format">Stringa di formato numerico.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.ToString(System.String,System.IFormatProvider)">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione di stringa equivalente usando il formato specificato e le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <returns>Rappresentazione di stringa del valore dell'istanza corrente, in base a quanto specificato da <paramref name="format" /> e <paramref name="provider" />.</returns>
      <param name="format">Stringa di formato numerico.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente all'istanza. </param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)">
      <summary>Prova a convertire la rappresentazione di stringa di un numero in uno stile e in un formato specifico delle impostazioni cultura specificati nel relativo intero senza segno a 64 bit equivalente.Un valore restituito indica se la conversione è riuscita o meno.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa che rappresenta il numero da convertire.La stringa viene interpretata usando lo stile specificato dal parametro <paramref name="style" />.</param>
      <param name="style">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="s" />.Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="s" />. </param>
      <param name="result">Quando questo metodo viene restituito, contiene il valore intero senza segno a 64 bit equivalente al numero contenuto in <paramref name="s" />, se la conversione riesce oppure zero se la conversione non riesce.La conversione non riesce se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" /> non presenta un formato conforme a <paramref name="style" /> o rappresenta un numero minore di <see cref="F:System.UInt64.MinValue" /> o maggiore di <see cref="F:System.UInt64.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.TryParse(System.String,System.UInt64@)">
      <summary>Prova a convertire la rappresentazione di stringa di un numero nel relativo intero senza segno a 64 bit equivalente.Un valore restituito indica se la conversione è riuscita o meno.</summary>
      <returns>true se <paramref name="s" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="s">Stringa che rappresenta il numero da convertire. </param>
      <param name="result">Quando questo metodo viene restituito, contiene il valore intero senza segno a 64 bit equivalente al numero contenuto in <paramref name="s" /> se la conversione riesce; in caso contrario, contiene zero.La conversione non riesce se il parametro <paramref name="s" /> è null o <see cref="F:System.String.Empty" />, non è in formato corretto o rappresenta un numero minore di <see cref="F:System.UInt64.MinValue" /> o maggiore di <see cref="F:System.UInt64.MaxValue" />.Questo parametro viene passato non inizializzato. Qualsiasi valore fornito in origine in <paramref name="result" /> verrà sovrascritto.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UIntPtr">
      <summary>Tipo specifico per la piattaforma utilizzato per rappresentare un puntatore o un handle.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.#ctor(System.UInt32)">
      <summary>Consente di inizializzare una nuova istanza della struttura <see cref="T:System.UIntPtr" /> utilizzando il puntatore o handle a 32 bit specificato.</summary>
      <param name="value">Puntatore o handle contenuto in un intero senza segno a 32 bit. </param>
    </member>
    <member name="M:System.UIntPtr.#ctor(System.UInt64)">
      <summary>Consente di inizializzare una nuova istanza di <see cref="T:System.UIntPtr" /> utilizzando il puntatore o handle a 64 bit specificato.</summary>
      <param name="value">Puntatore o handle contenuto in un intero senza segno a 64 bit. </param>
      <exception cref="T:System.OverflowException">Su una piattaforma a 32 bit, <paramref name="value" /> è troppo grande per rappresentare un tipo <see cref="T:System.UIntPtr" />. </exception>
    </member>
    <member name="M:System.UIntPtr.#ctor(System.Void*)">
      <summary>Consente di inizializzare una nuova istanza di <see cref="T:System.UIntPtr" /> utilizzando il puntatore specificato a un tipo non specificato.</summary>
      <param name="value">Puntatore a un tipo non specificato. </param>
    </member>
    <member name="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
      <summary>Aggiunge un offset al valore di un puntatore senza segno.</summary>
      <returns>Nuovo puntatore senza segno che riflette l'aggiunta di <paramref name="offset" /> a <paramref name="pointer" />.</returns>
      <param name="pointer">Puntatore senza segno a cui aggiungere l'offset.</param>
      <param name="offset">Offset da aggiungere.</param>
    </member>
    <member name="M:System.UIntPtr.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se <paramref name="obj" /> è un'istanza di <see cref="T:System.UIntPtr" /> ed è uguale al valore dell'istanza, in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza o null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UIntPtr.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash integer con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
      <summary>Aggiunge un offset al valore di un puntatore senza segno.</summary>
      <returns>Nuovo puntatore senza segno che riflette l'aggiunta di <paramref name="offset" /> a <paramref name="pointer" />.</returns>
      <param name="pointer">Puntatore senza segno a cui aggiungere l'offset.</param>
      <param name="offset">Offset da aggiungere.</param>
    </member>
    <member name="M:System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)">
      <summary>Determina se due istanze specificate di <see cref="T:System.UIntPtr" /> sono uguali.</summary>
      <returns>true se <paramref name="value1" /> è uguale a <paramref name="value2" />, in caso contrario false.</returns>
      <param name="value1">Primo puntatore o handle da confrontare. </param>
      <param name="value2">Secondo puntatore o handle da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UInt32)~System.UIntPtr">
      <summary>Consente di convertire il valore di un intero senza segno a 32 bit in un oggetto <see cref="T:System.UIntPtr" />.</summary>
      <returns>Nuova istanza di <see cref="T:System.UIntPtr" /> inizializzata per <paramref name="value" />.</returns>
      <param name="value">Intero senza segno a 32 bit. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UInt64)~System.UIntPtr">
      <summary>Consente di convertire il valore di un integer senza segno di 64 bit in un tipo <see cref="T:System.UIntPtr" />.</summary>
      <returns>Nuova istanza di <see cref="T:System.UIntPtr" /> inizializzata per <paramref name="value" />.</returns>
      <param name="value">Intero senza segno a 64 bit. </param>
      <exception cref="T:System.OverflowException">Su una piattaforma a 32 bit, <paramref name="value" /> è troppo grande per rappresentare un tipo <see cref="T:System.UIntPtr" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt64">
      <summary>Consente di convertire il valore dell'oggetto <see cref="T:System.UIntPtr" /> specificato in un intero senza segno a 64 bit.</summary>
      <returns>Contenuto di <paramref name="value" />.</returns>
      <param name="value">Puntatore o handle da convertire. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*">
      <summary>Consente di convertire il valore dell'oggetto <see cref="T:System.UIntPtr" /> specificato in un puntatore a un tipo non specificato.</summary>
      <returns>Contenuto di <paramref name="value" />.</returns>
      <param name="value">Puntatore o handle da convertire. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32">
      <summary>Consente di convertire il valore dell'oggetto <see cref="T:System.UIntPtr" /> specificato in un intero senza segno a 32 bit.</summary>
      <returns>Contenuto di <paramref name="value" />.</returns>
      <param name="value">Puntatore o handle da convertire. </param>
      <exception cref="T:System.OverflowException">Su una piattaforma a 64 bit il valore di <paramref name="value" /> è troppo grande per essere rappresentato come integer senza segno a 32 bit. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr">
      <summary>Consente di convertire il puntatore specificato a un tipo non specificato in un oggetto <see cref="T:System.UIntPtr" />.</summary>
      <returns>Nuova istanza di <see cref="T:System.UIntPtr" /> inizializzata per <paramref name="value" />.</returns>
      <param name="value">Puntatore a un tipo non specificato. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)">
      <summary>Determina se due istanze specificate di <see cref="T:System.UIntPtr" /> non sono uguali.</summary>
      <returns>true se <paramref name="value1" /> non è uguale a <paramref name="value2" />, in caso contrario false.</returns>
      <param name="value1">Primo puntatore o handle da confrontare. </param>
      <param name="value2">Secondo puntatore o handle da confrontare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
      <summary>Sottrae un offset dal valore di un puntatore senza segno.</summary>
      <returns>Nuovo puntatore senza segno che riflette la sottrazione di <paramref name="offset" /> da <paramref name="pointer" />.</returns>
      <param name="pointer">Puntatore senza segno da cui sottrarre l'offset.</param>
      <param name="offset">Offset da sottrarre.</param>
    </member>
    <member name="P:System.UIntPtr.Size">
      <summary>Ottiene la dimensione dell'istanza.</summary>
      <returns>Dimensione in byte di un puntatore o handle sulla piattaforma in uso.Il valore della proprietà è 4 su una piattaforma a 32 bit e 8 su una piattaforma a 64 bit.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
      <summary>Sottrae un offset dal valore di un puntatore senza segno.</summary>
      <returns>Nuovo puntatore senza segno che riflette la sottrazione di <paramref name="offset" /> da <paramref name="pointer" />.</returns>
      <param name="pointer">Puntatore senza segno da cui sottrarre l'offset.</param>
      <param name="offset">Offset da sottrarre.</param>
    </member>
    <member name="M:System.UIntPtr.ToPointer">
      <summary>Converte il valore dell'istanza in un puntatore per un tipo non specificato.</summary>
      <returns>Puntatore per l'oggetto <see cref="T:System.Void" />, ovvero puntatore per una memoria contenente dati di un tipo non specificato.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.ToString">
      <summary>Converte il valore numerico dell'istanza nella rappresentazione in forma di stringa equivalente.</summary>
      <returns>Rappresentazione in forma di stringa del valore dell'istanza.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.ToUInt32">
      <summary>Consente di convertire il valore dell'istanza in un intero senza segno di 32 bit.</summary>
      <returns>Integer senza segno di 32 bit uguale al valore dell'istanza.</returns>
      <exception cref="T:System.OverflowException">Su una piattaforma a 64 bit il valore dell'istanza è troppo grande per essere rappresentato come integer senza segno a 32 bit. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.ToUInt64">
      <summary>Consente di convertire il valore dell'istanza in un intero senza segno di 64 bit.</summary>
      <returns>Integer senza segno di 64 bit uguale al valore dell'istanza.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UIntPtr.Zero">
      <summary>Campo in sola lettura che rappresenta un puntatore o un handle inizializzato a zero.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UnauthorizedAccessException">
      <summary>Eccezione generata quando il sistema operativo nega l'accesso a causa di un errore I/O o di un tipo specifico di errore di sicurezza.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UnauthorizedAccessException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UnauthorizedAccessException" />.</summary>
    </member>
    <member name="M:System.UnauthorizedAccessException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UnauthorizedAccessException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore. </param>
    </member>
    <member name="M:System.UnauthorizedAccessException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UnauthorizedAccessException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione. </param>
      <param name="inner">Eccezione che ha determinato l'eccezione corrente.Se il parametro <paramref name="inner" /> non è un riferimento Null (Nothing in Visual Basic), l'eccezione corrente viene generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.Uri">
      <summary>Fornisce una rappresentazione in forma di oggetto di un identificatore URI (uniform resource identifier) e un pratico accesso alle parti dell'URI.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Uri" /> con l'URI specificato.</summary>
      <param name="uriString">URI. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> è null. </exception>
      <exception cref="T:System.UriFormatException">Nel .NET for Windows Store apps o libreria di classi portabile, intercettare l'eccezione della classe di base, <see cref="T:System.FormatException" />, al contrario.<paramref name="uriString" /> è vuoto.-oppure- Lo schema specificato in <paramref name="uriString" /> non è formato correttamente.Vedere <see cref="M:System.Uri.CheckSchemeName(System.String)" />.-oppure- <paramref name="uriString" /> contiene troppe barre.-oppure- La password specificata in <paramref name="uriString" /> non è valida.-oppure- Il nome host specificato in <paramref name="uriString" /> non è valido.-oppure- Il nome file specificato in <paramref name="uriString" /> non è valido. -oppure- Il nome utente specificato in <paramref name="uriString" /> non è valido.-oppure- Il nome host o il nome dell'autorità specificato in <paramref name="uriString" /> non può essere terminato da barre rovesciate.-oppure- Il numero di porta specificato in <paramref name="uriString" /> non è valido o non può essere analizzato.-oppure- La lunghezza di <paramref name="uriString" /> supera i 65519 caratteri.-oppure- La lunghezza dello schema specificato in <paramref name="uriString" /> supera i 1023 caratteri.-oppure- In <paramref name="uriString" /> è presente una sequenza di caratteri non valida.-oppure- Il percorso MS-DOS specificato in <paramref name="uriString" /> deve iniziare con c:\\.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.String,System.UriKind)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Uri" /> con l'URI specificato.Questo costruttore consente di specificare se la stringa URI è un URI relativo, un URI assoluto o se è indeterminata.</summary>
      <param name="uriString">Stringa che identifica la risorsa che deve essere rappresentata dall'istanza di <see cref="T:System.Uri" />.</param>
      <param name="uriKind">Specifica se la stringa URI è un URI relativo, un URI assoluto o se è indeterminata.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="uriKind" /> non è valido. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> è null. </exception>
      <exception cref="T:System.UriFormatException">Nel .NET for Windows Store apps o libreria di classi portabile, intercettare l'eccezione della classe di base, <see cref="T:System.FormatException" />, al contrario.<paramref name="uriString" /> contiene un URI relativo e <paramref name="uriKind" /> è <see cref="F:System.UriKind.Absolute" />.oppure<paramref name="uriString" /> contiene un URI assoluto e <paramref name="uriKind" /> è <see cref="F:System.UriKind.Relative" />.oppure<paramref name="uriString" /> è vuoto.-oppure- Lo schema specificato in <paramref name="uriString" /> non è formato correttamente.Vedere <see cref="M:System.Uri.CheckSchemeName(System.String)" />.-oppure- <paramref name="uriString" /> contiene troppe barre.-oppure- La password specificata in <paramref name="uriString" /> non è valida.-oppure- Il nome host specificato in <paramref name="uriString" /> non è valido.-oppure- Il nome file specificato in <paramref name="uriString" /> non è valido. -oppure- Il nome utente specificato in <paramref name="uriString" /> non è valido.-oppure- Il nome host o il nome dell'autorità specificato in <paramref name="uriString" /> non può essere terminato da barre rovesciate.-oppure- Il numero di porta specificato in <paramref name="uriString" /> non è valido o non può essere analizzato.-oppure- La lunghezza di <paramref name="uriString" /> supera i 65519 caratteri.-oppure- La lunghezza dello schema specificato in <paramref name="uriString" /> supera i 1023 caratteri.-oppure- In <paramref name="uriString" /> è presente una sequenza di caratteri non valida.-oppure- Il percorso MS-DOS specificato in <paramref name="uriString" /> deve iniziare con c:\\.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.Uri,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Uri" /> basata sull'URI di base specificato e sulla stringa URI relativa.</summary>
      <param name="baseUri">URI di base. </param>
      <param name="relativeUri">URI relativo da aggiungere all'URI di base. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="baseUri" /> non è un'istanza di <see cref="T:System.Uri" /> assoluta. </exception>
      <exception cref="T:System.UriFormatException">Nel .NET for Windows Store apps o libreria di classi portabile, intercettare l'eccezione della classe di base, <see cref="T:System.FormatException" />, al contrario.L'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> è vuoto o contiene solo spazi.-oppure- Lo schema specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido.-oppure- L'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> contiene troppe barre.-oppure- La password specificata nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valida.-oppure- Il nome host specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido.-oppure- Il nome file specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido. -oppure- Il nome utente specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido.-oppure- Il nome host o il nome dell'autorità specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non può essere terminato da barre rovesciate.-oppure- Il numero di porta specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido o non può essere analizzato.-oppure- La lunghezza dell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> supera i 65519 caratteri.-oppure- La lunghezza dello schema specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> supera i 1023 caratteri.-oppure- Nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> è presente una sequenza di caratteri non valida.-oppure- Il percorso MS-DOS specificato in <paramref name="uriString" /> deve iniziare con c:\\.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.Uri,System.Uri)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Uri" /> sulla combinazione di un'istanza di <see cref="T:System.Uri" /> di base specificata e un'istanza di <see cref="T:System.Uri" /> relativa.</summary>
      <param name="baseUri">Oggetto <see cref="T:System.Uri" /> assoluto che costituisce la base per la nuova istanza di <see cref="T:System.Uri" />. </param>
      <param name="relativeUri">Istanza di <see cref="T:System.Uri" /> relativa combinata con <paramref name="baseUri" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseUri" /> non è un'istanza di <see cref="T:System.Uri" /> assoluta. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="baseUri" /> non è un'istanza di <see cref="T:System.Uri" /> assoluta. </exception>
      <exception cref="T:System.UriFormatException">Nel .NET for Windows Store apps o libreria di classi portabile, intercettare l'eccezione della classe di base, <see cref="T:System.FormatException" />, al contrario.L'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> è vuoto o contiene solo spazi.-oppure- Lo schema specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido.-oppure- L'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> contiene troppe barre.-oppure- La password specificata nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valida.-oppure- Il nome host specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido.-oppure- Il nome file specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido. -oppure- Il nome utente specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido.-oppure- Il nome host o il nome dell'autorità specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non può essere terminato da barre rovesciate.-oppure- Il numero di porta specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido o non può essere analizzato.-oppure- La lunghezza dell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> supera i 65519 caratteri.-oppure- La lunghezza dello schema specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> supera i 1023 caratteri.-oppure- Nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> è presente una sequenza di caratteri non valida.-oppure- Il percorso MS-DOS specificato in <paramref name="uriString" /> deve iniziare con c:\\.</exception>
    </member>
    <member name="P:System.Uri.AbsolutePath">
      <summary>Ottiene il percorso assoluto dell'URI.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente il percorso assoluto della risorsa.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.AbsoluteUri">
      <summary>Ottiene l'URI assoluto.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente l'URI intero.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Authority">
      <summary>Ottiene il nome host DNS (Domain Name System) o l'indirizzo IP e il numero di porta per un server.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente il componente autorità dell'URI rappresentato da questa istanza.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.CheckHostName(System.String)">
      <summary>Determina se il nome host specificato è un nome DNS valido.</summary>
      <returns>Oggetto <see cref="T:System.UriHostNameType" /> che indica il tipo del nome host.Se non è possibile determinare il tipo del nome host o se il nome host è null oppure è una stringa di lunghezza zero, questo metodo restituisce <see cref="F:System.UriHostNameType.Unknown" />.</returns>
      <param name="name">Nome host da convalidare.Può essere un indirizzo IPv4 o IPv6 oppure un nome host Internet.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.CheckSchemeName(System.String)">
      <summary>Determina se il nome dello schema specificato è valido.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se il nome dello schema è valido; in caso contrario, false.</returns>
      <param name="schemeName">Nome dello schema da convalidare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
      <summary>Confronta le parti specificate dei due URI usando le regole di confronto specificate.</summary>
      <returns>Valore <see cref="T:System.Int32" /> che indica la relazione lessicale tra i componenti <see cref="T:System.Uri" /> confrontati.ValoreSignificatoMinore di zero<paramref name="uri1" /> è minore di <paramref name="uri2" />.Zero<paramref name="uri1" /> è uguale a <paramref name="uri2" />.Maggiore di zero<paramref name="uri1" /> è maggiore di <paramref name="uri2" />.</returns>
      <param name="uri1">Primo oggetto <see cref="T:System.Uri" />.</param>
      <param name="uri2">Secondo oggetto <see cref="T:System.Uri" />.</param>
      <param name="partsToCompare">Combinazione bit per bit dei valori di <see cref="T:System.UriComponents" /> che specifica le parti di <paramref name="uri1" /> e <paramref name="uri2" /> da confrontare.</param>
      <param name="compareFormat">Uno dei valori di <see cref="T:System.UriFormat" /> che specifica l'escape dei caratteri usato durante il confronto dei componenti dell'URI.</param>
      <param name="comparisonType">Uno dei valori di <see cref="T:System.StringComparison" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> non è un valore di <see cref="T:System.StringComparison" /> valido.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Uri.DnsSafeHost">
      <summary>Ottiene un nome host senza caratteri escape che può essere usato in modo sicuro per la risoluzione DNS.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che contiene la parte host non sottoposta a escape dell'URI adatta per la risoluzione DNS oppure stringa host non sottoposta a escape originale, se già adatta per la risoluzione.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.Equals(System.Object)">
      <summary>Verifica l'uguaglianza tra due istanze di <see cref="T:System.Uri" />.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se le due istanze rappresentano lo stesso URI; in caso contrario, false.</returns>
      <param name="comparand">Istanza di <see cref="T:System.Uri" /> o identificatore URI da confrontare con l'istanza corrente. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Uri.EscapeDataString(System.String)">
      <summary>Converte una stringa nella relativa rappresentazione escape.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che contiene la rappresentazione escape di <paramref name="stringToEscape" />.</returns>
      <param name="stringToEscape">Stringa di cui effettuare l'escape.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToEscape" /> è null. </exception>
      <exception cref="T:System.UriFormatException">Nel .NET for Windows Store apps o libreria di classi portabile, intercettare l'eccezione della classe di base, <see cref="T:System.FormatException" />, al contrario.La lunghezza di <paramref name="stringToEscape" /> supera i 32766 caratteri.</exception>
    </member>
    <member name="M:System.Uri.EscapeUriString(System.String)">
      <summary>Converte una stringa URI nella relativa rappresentazione escape.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che contiene la rappresentazione escape di <paramref name="stringToEscape" />.</returns>
      <param name="stringToEscape">Stringa di cui effettuare l'escape.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToEscape" /> è null. </exception>
      <exception cref="T:System.UriFormatException">Nel .NET for Windows Store apps o libreria di classi portabile, intercettare l'eccezione della classe di base, <see cref="T:System.FormatException" />, al contrario.La lunghezza di <paramref name="stringToEscape" /> supera i 32766 caratteri.</exception>
    </member>
    <member name="P:System.Uri.Fragment">
      <summary>Ottiene il frammento URI in sequenza escape.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che contiene informazioni sui frammenti URI.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
      <summary>Ottiene i componenti specificati dell'istanza corrente usando l'escape specificato per caratteri speciali.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che contiene i componenti.</returns>
      <param name="components">Combinazione bit per bit dei valori di <see cref="T:System.UriComponents" /> che specifica quali parti dell'istanza corrente restituire al chiamante.</param>
      <param name="format">Uno dei valori di <see cref="T:System.UriFormat" /> che controlla come viene eseguito l'escape dei caratteri speciali. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="uriComponents" /> non è una combinazione di valori di <see cref="T:System.UriComponents" /> validi.</exception>
      <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Uri" /> corrente non è un URI assoluto.Non è possibile utilizzare URI relativi con questo metodo.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.GetHashCode">
      <summary>Ottiene il codice hash per l'URI.</summary>
      <returns>Oggetto <see cref="T:System.Int32" /> contenente il valore hash generato per questo URI.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Host">
      <summary>Ottiene il componente host di questa istanza.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che contiene il nome host.Si tratta in genere del nome host DNS o dell'indirizzo IP del server.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.HostNameType">
      <summary>Ottiene il tipo del nome host specificato nell'URI.</summary>
      <returns>Membro dell'enumerazione <see cref="T:System.UriHostNameType" />.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IdnHost">
      <summary>Nome IDN (Internationalized Domain Name) conforme con RFC 3490 dell'host, che usa Punycode come appropriato.</summary>
      <returns>Restituisce il nome dell'host, formattato con Punycode in base allo standard IDN.<see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Uri.IsAbsoluteUri">
      <summary>Ottiene un valore che indica se l'istanza di <see cref="T:System.Uri" /> è assoluta.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se l'istanza di <see cref="T:System.Uri" /> è assoluta; in caso contrario, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.IsBaseOf(System.Uri)">
      <summary>Determina se l'istanza di <see cref="T:System.Uri" /> corrente è una base dell'istanza di <see cref="T:System.Uri" /> specificata.</summary>
      <returns>true se l'istanza di <see cref="T:System.Uri" /> corrente è una base di <paramref name="uri" />; in caso contrario, false.</returns>
      <param name="uri">Istanza di <see cref="T:System.Uri" /> specificata da testare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> è null. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsDefaultPort">
      <summary>Ottiene un valore che indica se il valore relativo alla porta dell'URI è quello predefinito per questo schema.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se il valore della proprietà <see cref="P:System.Uri.Port" /> corrisponde alla porta predefinita per questo schema; in caso contrario, false.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsFile">
      <summary>Ottiene un valore che indica se la classe <see cref="T:System.Uri" /> specificata è un URI di file.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se <see cref="T:System.Uri" /> è l'URI di un file; in caso contrario, false.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsLoopback">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Uri" /> specificato fa riferimento all'host locale.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se l'oggetto <see cref="T:System.Uri" /> corrente fa riferimento all'host locale; in caso contrario, false.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsUnc">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Uri" /> specificato è un percorso UNC (Universal Naming Convention).</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se <see cref="T:System.Uri" /> è un percorso UNC; in caso contrario, false.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.IsWellFormedOriginalString">
      <summary>Indica se la stringa usata per costruire questo oggetto <see cref="T:System.Uri" /> è ben formata e se non è necessario sottoporla ulteriormente a escape.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che è true se la stringa è ben formata; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
      <summary>Indica se la stringa è ben formata mediante un tentativo di costruire un URI con tale stringa e assicura che la stringa non deve essere ulteriormente sottoposta ad escape.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che è true  se la stringa è ben formata; in caso contrario, false.</returns>
      <param name="uriString">Stringa usata per tentare di costruire un oggetto <see cref="T:System.Uri" />.</param>
      <param name="uriKind">Tipo di <see cref="T:System.Uri" /> in <paramref name="uriString" />.</param>
    </member>
    <member name="P:System.Uri.LocalPath">
      <summary>Ottiene una rappresentazione di un nome file nel formato del sistema operativo locale.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che contiene la rappresentazione del sistema operativo locale di un nome file.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.MakeRelativeUri(System.Uri)">
      <summary>Determina la differenza tra due istanze di <see cref="T:System.Uri" />.</summary>
      <returns>Se il nome host e lo schema di questa istanza di URI e <paramref name="uri" /> sono identici, questo metodo restituisce un oggetto <see cref="T:System.Uri" /> relativo che, se aggiunto all'istanza di URI corrente, restituisce <paramref name="uri" />.Se il nome host o lo schema è differente, questo metodo restituisce un oggetto <see cref="T:System.Uri" /> che rappresenta il parametro <paramref name="uri" />.</returns>
      <param name="uri">URI da confrontare con l'URI corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> è null. </exception>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
    </member>
    <member name="M:System.Uri.op_Equality(System.Uri,System.Uri)">
      <summary>Determina se due istanze di <see cref="T:System.Uri" /> hanno lo stesso valore.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se le istanze di <see cref="T:System.Uri" /> sono equivalenti; in caso contrario, false.</returns>
      <param name="uri1">Istanza di <see cref="T:System.Uri" /> da confrontare con <paramref name="uri2" />. </param>
      <param name="uri2">Istanza di <see cref="T:System.Uri" /> da confrontare con <paramref name="uri1" />. </param>
      <filterpriority>3</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.op_Inequality(System.Uri,System.Uri)">
      <summary>Determina se due istanze di <see cref="T:System.Uri" /> non hanno lo stesso valore.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se le due istanze di <see cref="T:System.Uri" /> non sono uguali; in caso contrario, false.Se uno dei parametri è null, questo metodo restituisce true.</returns>
      <param name="uri1">Istanza di <see cref="T:System.Uri" /> da confrontare con <paramref name="uri2" />. </param>
      <param name="uri2">Istanza di <see cref="T:System.Uri" /> da confrontare con <paramref name="uri1" />. </param>
      <filterpriority>3</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.OriginalString">
      <summary>Ottiene la stringa URI originale passata al costruttore <see cref="T:System.Uri" />.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente l'URI esatto specificato alla costruzione di questa istanza; in caso contrario, <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.PathAndQuery">
      <summary>Ottiene le proprietà <see cref="P:System.Uri.AbsolutePath" /> e <see cref="P:System.Uri.Query" /> separate da un punto interrogativo (?).</summary>
      <returns>Oggetto <see cref="T:System.String" /> che contiene le proprietà <see cref="P:System.Uri.AbsolutePath" /> e <see cref="P:System.Uri.Query" /> separate da un punto interrogativo (?).</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Port">
      <summary>Ottiene il numero di porta di questo URI.</summary>
      <returns>Valore <see cref="T:System.Int32" /> contenente il numero di porta per questo URI.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Query">
      <summary>Ottiene le informazioni sulle query incluse nell'URI specificato.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente le informazioni sulle query incluse nell'URI specificato.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Scheme">
      <summary>Ottiene il nome di schema per questo URI.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente lo schema per questo URI, convertito in caratteri minuscoli.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Segments">
      <summary>Ottiene una matrice contenente i segmenti di percorso che compongono l'URI specificato.</summary>
      <returns>Matrice <see cref="T:System.String" /> contenente i segmenti di percorso che compongono l'URI specificato.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.ToString">
      <summary>Ottiene una rappresentazione in forma di stringa canonica per l'istanza di <see cref="T:System.Uri" /> specificata.</summary>
      <returns>Istanza di <see cref="T:System.String" /> che contiene la rappresentazione canonica senza caratteri escape dell'istanza di <see cref="T:System.Uri" />.Non viene effettuato l'escape di alcun carattere, ad eccezione di #, ? e %.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Uri" /> usando l'istanza di <see cref="T:System.String" /> specificata e un oggetto <see cref="T:System.UriKind" />.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se l'oggetto <see cref="T:System.Uri" /> è stato creato correttamente; in caso contrario, false.</returns>
      <param name="uriString">Oggetto <see cref="T:System.String" /> che rappresenta l'oggetto <see cref="T:System.Uri" />.</param>
      <param name="uriKind">Tipo dell'URI.</param>
      <param name="result">Quando questo metodo viene restituito, contiene l'oggetto <see cref="T:System.Uri" /> costruito.</param>
    </member>
    <member name="M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Uri" /> usando le istanze di <see cref="T:System.String" /> relativa e di base.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se l'oggetto <see cref="T:System.Uri" /> è stato creato correttamente; in caso contrario, false.</returns>
      <param name="baseUri">Oggetto <see cref="T:System.Uri" /> di base.</param>
      <param name="relativeUri">Oggetto <see cref="T:System.Uri" /> relativo, rappresentato come oggetto <see cref="T:System.String" />, da aggiungere all'oggetto <see cref="T:System.Uri" /> di base.</param>
      <param name="result">Quando questo metodo viene restituito, contiene un oggetto <see cref="T:System.Uri" /> costruito da <paramref name="baseUri" /> e <paramref name="relativeUri" />.Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Uri" /> usando le istanze di <see cref="T:System.Uri" /> relativa e di base.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se l'oggetto <see cref="T:System.Uri" /> è stato creato correttamente; in caso contrario, false.</returns>
      <param name="baseUri">Oggetto <see cref="T:System.Uri" /> di base. </param>
      <param name="relativeUri">Oggetto <see cref="T:System.Uri" /> relativo da aggiungere all'oggetto <see cref="T:System.Uri" /> di base. </param>
      <param name="result">Quando questo metodo viene restituito, contiene un oggetto <see cref="T:System.Uri" /> costruito da <paramref name="baseUri" /> e <paramref name="relativeUri" />.Questo parametro viene passato non inizializzato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" /> è null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.UnescapeDataString(System.String)">
      <summary>Converte una stringa nella relativa rappresentazione senza caratteri escape.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che contiene la rappresentazione senza caratteri escape di <paramref name="stringToUnescape" />. </returns>
      <param name="stringToUnescape">Stringa da convertire in stringa senza caratteri escape.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToUnescape" /> è null. </exception>
    </member>
    <member name="P:System.Uri.UserEscaped">
      <summary>Indica che la stringa URI è stata sottoposta a escape completo prima della creazione dell'istanza di <see cref="T:System.Uri" />.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se il parametro <paramref name="dontEscape" /> è stato impostato su true al momento della creazione dell'istanza di <see cref="T:System.Uri" />; in caso contrario, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Uri.UserInfo">
      <summary>Ottiene il nome utente, la password o altre informazioni specifiche dell'utente associate all'URI specificato.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente le informazioni utente associate all'URI.Il valore restituito non include il carattere "@" riservato per la delimitazione della parte di informazioni utente dell'URI.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.UriComponents">
      <summary>Specifica le parti di un oggetto <see cref="T:System.Uri" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UriComponents.AbsoluteUri">
      <summary>Dati di <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.UserInfo" />, <see cref="P:System.Uri.Host" />, <see cref="P:System.Uri.Port" />, <see cref="P:System.Uri.LocalPath" />, <see cref="P:System.Uri.Query" /> e <see cref="P:System.Uri.Fragment" />.</summary>
    </member>
    <member name="F:System.UriComponents.Fragment">
      <summary>Dati di <see cref="P:System.Uri.Fragment" />.</summary>
    </member>
    <member name="F:System.UriComponents.Host">
      <summary>Dati di <see cref="P:System.Uri.Host" />.</summary>
    </member>
    <member name="F:System.UriComponents.HostAndPort">
      <summary>Dati di <see cref="P:System.Uri.Host" /> e <see cref="P:System.Uri.Port" />.Se nell'URI non è presente alcun dato di porta e alla proprietà <see cref="P:System.Uri.Scheme" /> è stata assegnata una porta predefinita, viene restituita la porta predefinita.Se non è presente alcuna porta predefinita, viene restituito -1.</summary>
    </member>
    <member name="F:System.UriComponents.HttpRequestUrl">
      <summary>Dati di <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.Host" />, <see cref="P:System.Uri.Port" />, <see cref="P:System.Uri.LocalPath" /> e <see cref="P:System.Uri.Query" />.</summary>
    </member>
    <member name="F:System.UriComponents.KeepDelimiter">
      <summary>Specifica che deve essere incluso il delimitatore.</summary>
    </member>
    <member name="F:System.UriComponents.NormalizedHost">
      <summary>Forma normalizzata di <see cref="P:System.Uri.Host" />.</summary>
    </member>
    <member name="F:System.UriComponents.Path">
      <summary>Dati di <see cref="P:System.Uri.LocalPath" />.</summary>
    </member>
    <member name="F:System.UriComponents.PathAndQuery">
      <summary>Dati di <see cref="P:System.Uri.LocalPath" /> e <see cref="P:System.Uri.Query" />.Vedere anche <see cref="P:System.Uri.PathAndQuery" />.</summary>
    </member>
    <member name="F:System.UriComponents.Port">
      <summary>Dati di <see cref="P:System.Uri.Port" />.</summary>
    </member>
    <member name="F:System.UriComponents.Query">
      <summary>Dati di <see cref="P:System.Uri.Query" />.</summary>
    </member>
    <member name="F:System.UriComponents.Scheme">
      <summary>Dati di <see cref="P:System.Uri.Scheme" />.</summary>
    </member>
    <member name="F:System.UriComponents.SchemeAndServer">
      <summary>Dati di <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.Host" /> e <see cref="P:System.Uri.Port" />.</summary>
    </member>
    <member name="F:System.UriComponents.SerializationInfoString">
      <summary>Contesto completo dell'oggetto <see cref="T:System.Uri" /> necessario per i serializzatori URI.Include l'ambito IPv6.</summary>
    </member>
    <member name="F:System.UriComponents.StrongAuthority">
      <summary>Dati di <see cref="P:System.Uri.UserInfo" />, <see cref="P:System.Uri.Host" /> e <see cref="P:System.Uri.Port" />.Se nell'oggetto <see cref="T:System.Uri" /> non è presente alcun dato di porta e alla proprietà <see cref="P:System.Uri.Scheme" /> è stata assegnata una porta predefinita, viene restituita la porta predefinita.Se non è presente alcuna porta predefinita, viene restituito -1.</summary>
    </member>
    <member name="F:System.UriComponents.StrongPort">
      <summary>Dati di <see cref="P:System.Uri.Port" />.Se nell'oggetto <see cref="T:System.Uri" /> non è presente alcun dato di porta e alla proprietà <see cref="P:System.Uri.Scheme" /> è stata assegnata una porta predefinita, viene restituita la porta predefinita.Se non è presente alcuna porta predefinita, viene restituito -1.</summary>
    </member>
    <member name="F:System.UriComponents.UserInfo">
      <summary>Dati di <see cref="P:System.Uri.UserInfo" />.</summary>
    </member>
    <member name="T:System.UriFormat">
      <summary>Controlla come viene effettuato l'escape delle informazioni sull'URI.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UriFormat.SafeUnescaped">
      <summary>I caratteri con un significato riservato nei componenti URI richiesti restano sottoposti a escape.Per tutti gli altri non viene effettuato l'escape.Vedere la sezione Osservazioni.</summary>
    </member>
    <member name="F:System.UriFormat.Unescaped">
      <summary>Non viene effettuata alcuna operazione di escape.</summary>
    </member>
    <member name="F:System.UriFormat.UriEscaped">
      <summary>L'escape viene eseguito in base alle regole indicate nel documento RFC 2396.</summary>
    </member>
    <member name="T:System.UriFormatException">
      <summary>Eccezione generata quando viene rilevato un URI (Uniform Resource Identifier) non valido.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UriFormatException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriFormatException" />.</summary>
    </member>
    <member name="M:System.UriFormatException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriFormatException" /> con il messaggio specificato.</summary>
      <param name="textString">La stringa del messaggio di errore </param>
    </member>
    <member name="M:System.UriFormatException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriFormatException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="textString">Messaggio in cui viene descritta l'eccezione.È necessario che il chiamante del costruttore assicuri che la stringa sia stata localizzata per le impostazioni cultura correnti del sistema.</param>
      <param name="e">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="innerException" /> non è null, l'eccezione corrente viene generata in un blocco catch in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.UriHostNameType">
      <summary>Definisce i tipi di nomi host per il metodo <see cref="M:System.Uri.CheckHostName(System.String)" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UriHostNameType.Basic">
      <summary>L'host è impostato, ma non è possibile determinare il tipo.</summary>
    </member>
    <member name="F:System.UriHostNameType.Dns">
      <summary>Il nome host è un nome host di tipo DNS (domain name system).</summary>
    </member>
    <member name="F:System.UriHostNameType.IPv4">
      <summary>Il nome host è un indirizzo IP (Internet Protocol) host versione 4.</summary>
    </member>
    <member name="F:System.UriHostNameType.IPv6">
      <summary>Il nome host è un indirizzo IP (Internet Protocol) host versione 6.</summary>
    </member>
    <member name="F:System.UriHostNameType.Unknown">
      <summary>Il tipo del nome host non è fornito.</summary>
    </member>
    <member name="T:System.UriKind">
      <summary>Definisce i tipi di <see cref="T:System.Uri" /> per il metodo <see cref="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)" /> e vari metodi <see cref="Overload:System.Uri.#ctor" />.</summary>
    </member>
    <member name="F:System.UriKind.Absolute">
      <summary>L'URI è un URI assoluto.</summary>
    </member>
    <member name="F:System.UriKind.Relative">
      <summary>L'URI è un URI relativo.</summary>
    </member>
    <member name="F:System.UriKind.RelativeOrAbsolute">
      <summary>Il tipo dell'URI non è determinato.</summary>
    </member>
    <member name="T:System.ValueType">
      <summary>Rappresenta la classe base per i tipi di valori.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ValueType.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ValueType" />. </summary>
    </member>
    <member name="M:System.ValueType.Equals(System.Object)">
      <summary>Indica se questa istanza e un oggetto specificato sono uguali.</summary>
      <returns>true se <paramref name="obj" /> e questa istanza presentano lo stesso tipo e rappresentano lo stesso valore. In caso contrario, false. </returns>
      <param name="obj">Oggetto da confrontare con l'istanza corrente. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ValueType.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Intero con segno a 32 bit che rappresenta il codice hash per questa istanza.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ValueType.ToString">
      <summary>Restituisce il nome completo del tipo di questa istanza.</summary>
      <returns>Valore <see cref="T:System.String" /> contenente un nome completo del tipo.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Version">
      <summary>Rappresenta il numero di versione di un assembly, sistema operativo o Common Language Runtime.La classe non può essere ereditata.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.#ctor(System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Version" /> usando i valori principale e secondario specificati.</summary>
      <param name="major">Numero di versione principale. </param>
      <param name="minor">Numero di versione secondario. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="major" /> or <paramref name="minor" /> is less than zero. </exception>
    </member>
    <member name="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Version" /> usando i valori principale, secondario e build specificati.</summary>
      <param name="major">Numero di versione principale. </param>
      <param name="minor">Numero di versione secondario. </param>
      <param name="build">Numero di build. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="major" />, <paramref name="minor" />, or <paramref name="build" /> is less than zero. </exception>
    </member>
    <member name="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Version" /> usando i valori principale, secondario, build e revisione specificati.</summary>
      <param name="major">Numero di versione principale. </param>
      <param name="minor">Numero di versione secondario. </param>
      <param name="build">Numero di build. </param>
      <param name="revision">Numero di revisione. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="major" />, <paramref name="minor" />, <paramref name="build" />, or <paramref name="revision" /> is less than zero. </exception>
    </member>
    <member name="M:System.Version.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Version" /> usando la stringa specificata.</summary>
      <param name="version">Stringa contenente i componenti principale, secondario, build e revisione e in cui ciascuno dei numeri è delimitato da un punto (.). </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="version" /> has fewer than two components or more than four components. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A major, minor, build, or revision component is less than zero. </exception>
      <exception cref="T:System.FormatException">At least one component of <paramref name="version" /> does not parse to an integer. </exception>
      <exception cref="T:System.OverflowException">At least one component of <paramref name="version" /> represents a number greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="P:System.Version.Build">
      <summary>Ottiene il valore del componente build del numero di versione per l'oggetto <see cref="T:System.Version" /> corrente.</summary>
      <returns>Numero di build o -1 se il numero di build non è definito.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.CompareTo(System.Version)">
      <summary>Confronta l'oggetto <see cref="T:System.Version" /> corrente con un oggetto <see cref="T:System.Version" /> specificato e restituisce un'indicazione dei valori relativi.</summary>
      <returns>Intero con segno che indica i valori relativi dei due oggetti, come illustrato nella tabella seguente.Valore restituito Significato Minore di zero L'oggetto <see cref="T:System.Version" /> corrente è una versione precedente a <paramref name="value" />. Zero L'oggetto <see cref="T:System.Version" /> corrente è la stessa versione di <paramref name="value" />. Maggiore di zero L'oggetto <see cref="T:System.Version" /> corrente è una versione successiva a <paramref name="value" />. -oppure-<paramref name="value" /> è null.</returns>
      <param name="value">Oggetto <see cref="T:System.Version" /> da confrontare con l'oggetto <see cref="T:System.Version" /> corrente oppure null.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.Equals(System.Object)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Version" /> corrente è uguale all'oggetto specificato.</summary>
      <returns>true se l'oggetto <see cref="T:System.Version" /> corrente e <paramref name="obj" /> sono entrambi oggetti <see cref="T:System.Version" /> e ogni componente dell'oggetto <see cref="T:System.Version" /> corrente corrisponde al componente corrispondente di <paramref name="obj" />; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto <see cref="T:System.Version" /> corrente o null. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.Equals(System.Version)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Version" /> corrente e un oggetto <see cref="T:System.Version" /> specificato rappresentano lo stesso valore.</summary>
      <returns>true se ogni componente dell'oggetto <see cref="T:System.Version" /> corrente corrisponde al componente corrispondente del parametro <paramref name="obj" />; in caso contrario, false.</returns>
      <param name="obj">Oggetto <see cref="T:System.Version" /> da confrontare con l'oggetto <see cref="T:System.Version" /> corrente oppure null.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.GetHashCode">
      <summary>Restituisce un codice hash per l'oggetto <see cref="T:System.Version" /> corrente.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Version.Major">
      <summary>Ottiene il valore del componente principale del numero di versione per l'oggetto <see cref="T:System.Version" /> corrente.</summary>
      <returns>Numero di versione principale.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Version.MajorRevision">
      <summary>Ottiene i 16 bit alti del numero di revisione.</summary>
      <returns>Intero con segno a 16 bit.</returns>
    </member>
    <member name="P:System.Version.Minor">
      <summary>Ottiene il valore del componente secondario del numero di versione per l'oggetto <see cref="T:System.Version" /> corrente.</summary>
      <returns>Numero di versione secondario.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Version.MinorRevision">
      <summary>Ottiene i 16 bit bassi del numero di revisione.</summary>
      <returns>Intero con segno a 16 bit.</returns>
    </member>
    <member name="M:System.Version.op_Equality(System.Version,System.Version)">
      <summary>Determina se due oggetti <see cref="T:System.Version" /> specificati sono uguali.</summary>
      <returns>true se <paramref name="v1" /> è uguale a <paramref name="v2" />; in caso contrario, false.</returns>
      <param name="v1">Primo oggetto <see cref="T:System.Version" />. </param>
      <param name="v2">Secondo oggetto <see cref="T:System.Version" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_GreaterThan(System.Version,System.Version)">
      <summary>Determina se il primo oggetto <see cref="T:System.Version" /> specificato è maggiore del secondo oggetto <see cref="T:System.Version" /> specificato.</summary>
      <returns>true se <paramref name="v1" /> è maggiore di <paramref name="v2" />; in caso contrario, false.</returns>
      <param name="v1">Primo oggetto <see cref="T:System.Version" />. </param>
      <param name="v2">Secondo oggetto <see cref="T:System.Version" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
      <summary>Determina se il primo oggetto <see cref="T:System.Version" /> specificato è maggiore o uguale al secondo oggetto <see cref="T:System.Version" /> specificato.</summary>
      <returns>true se <paramref name="v1" /> è maggiore o uguale a <paramref name="v2" />; in caso contrario, false.</returns>
      <param name="v1">Primo oggetto <see cref="T:System.Version" />. </param>
      <param name="v2">Secondo oggetto <see cref="T:System.Version" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_Inequality(System.Version,System.Version)">
      <summary>Determina se due oggetti <see cref="T:System.Version" /> specificati non sono uguali.</summary>
      <returns>true se <paramref name="v1" /> non è uguale a <paramref name="v2" />, in caso contrario, false.</returns>
      <param name="v1">Primo oggetto <see cref="T:System.Version" />. </param>
      <param name="v2">Secondo oggetto <see cref="T:System.Version" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_LessThan(System.Version,System.Version)">
      <summary>Determina se il primo oggetto <see cref="T:System.Version" /> specificato è minore del secondo oggetto <see cref="T:System.Version" /> specificato.</summary>
      <returns>true se <paramref name="v1" /> è minore di <paramref name="v2" />; in caso contrario, false.</returns>
      <param name="v1">Primo oggetto <see cref="T:System.Version" />. </param>
      <param name="v2">Secondo oggetto <see cref="T:System.Version" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="v1" /> is null. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
      <summary>Determina se il primo oggetto <see cref="T:System.Version" /> specificato è minore o uguale al secondo oggetto <see cref="T:System.Version" />.</summary>
      <returns>true se <paramref name="v1" /> è minore o uguale a <paramref name="v2" />; in caso contrario, false.</returns>
      <param name="v1">Primo oggetto <see cref="T:System.Version" />. </param>
      <param name="v2">Secondo oggetto <see cref="T:System.Version" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="v1" /> is null. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.Parse(System.String)">
      <summary>Converte la rappresentazione di stringa di un numero di versione nell'oggetto <see cref="T:System.Version" /> equivalente.</summary>
      <returns>Oggetto equivalente al numero di versione specificato nel parametro <paramref name="input" />.</returns>
      <param name="input">Stringa che contiene un numero di versione da convertire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="input" /> has fewer than two or more than four version components.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">At least one component in <paramref name="input" /> is less than zero.</exception>
      <exception cref="T:System.FormatException">At least one component in <paramref name="input" /> is not an integer.</exception>
      <exception cref="T:System.OverflowException">At least one component in <paramref name="input" /> represents a number that is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="P:System.Version.Revision">
      <summary>Ottiene il valore del componente revisione del numero di versione per l'oggetto <see cref="T:System.Version" /> corrente.</summary>
      <returns>Numero di revisione o -1 se il numero di revisione non è definito.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.System#IComparable#CompareTo(System.Object)">
      <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
      <returns>Intero con segno che indica l'ordine relativo dell'istanza e di <paramref name="value" />.Valore restituito Significato Minore di zero Questa istanza precede <paramref name="value" /> nell'ordinamento.Zero Questa istanza si trova nella stessa posizione di <paramref name="value" /> nell'ordinamento.Maggiore di zero Questa istanza segue <paramref name="value" /> nei criteri di ordinamento.-oppure- <paramref name="value" /> è null. </returns>
      <param name="version">Oggetto da confrontare con questa istanza o null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Version" /> object. </exception>
    </member>
    <member name="M:System.Version.ToString">
      <summary>Converte il valore dell'oggetto <see cref="T:System.Version" /> corrente nella rappresentazione <see cref="T:System.String" /> equivalente.</summary>
      <returns>Rappresentazione <see cref="T:System.String" /> dei valori dei componenti principale, secondario, build e revisione dell'oggetto <see cref="T:System.Version" /> corrente, come nel formato illustrato di seguito.I componenti sono separati da un punto (.).I componenti che non verranno visualizzati nel valore restituito, quando il componente non è definito, sono racchiusi tra parentesi quadre ("[" e "]"):principale.secondario[.build[.revisione]] Se, ad esempio, si crea un oggetto <see cref="T:System.Version" /> usando il costruttore Version(1,1), la stringa restituita sarà "1.1".Se si crea un oggetto <see cref="T:System.Version" /> usando il costruttore Version(1,3,4,2), la stringa restituita sarà "1.3.4.2".</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.ToString(System.Int32)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.Version" /> corrente nella rappresentazione <see cref="T:System.String" /> equivalente.Un conteggio specificato indica il numero di componenti da restituire.</summary>
      <returns>Rappresentazione <see cref="T:System.String" /> dei valori dei componenti principale, secondario, build e revisione dell'oggetto <see cref="T:System.Version" /> corrente, separati da punti (".").Il parametro <paramref name="fieldCount" /> determina il numero di componenti da restituire.fieldCount Valore restituito 0 Stringa vuota (""). 1 principale 2 principale.secondario 3.principale.secondario.build 4 principale.secondario.build.revisione Se, ad esempio, si crea un oggetto <see cref="T:System.Version" /> usando il costruttore Version(1,3,5), ToString(2) restituirà "1.3" e ToString(4) genererà un'eccezione.</returns>
      <param name="fieldCount">Numero di componenti da restituire.<paramref name="fieldCount" /> è compreso nell'intervallo tra 0 e 4.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fieldCount" /> is less than 0, or more than 4.-or- <paramref name="fieldCount" /> is more than the number of components defined in the current <see cref="T:System.Version" /> object. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.TryParse(System.String,System.Version@)">
      <summary>Tenta di convertire la rappresentazione di stringa di un numero di versione in un oggetto <see cref="T:System.Version" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <returns>true se il parametro <paramref name="input" /> è stato convertito correttamente; in caso contrario, false.</returns>
      <param name="input">Stringa che contiene un numero di versione da convertire.</param>
      <param name="result">Quando questo metodo viene restituito, contiene l'oggetto <see cref="T:System.Version" /> equivalente del numero contenuto in <paramref name="input" /> se la conversione è stata eseguita correttamente o un oggetto <see cref="T:System.Version" /> i cui numeri di versione principale e secondaria sono 0 se la conversione non è riuscita.Se <paramref name="input" /> è null o <see cref="F:System.String.Empty" />, <paramref name="result" /> è null quando viene restituito il risultato del metodo.</param>
    </member>
    <member name="T:System.Void">
      <summary>Specifica un tipo di valore restituito per un metodo che non restituisce un valore.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.WeakReference">
      <summary>Rappresenta un riferimento debole, ovvero un riferimento a un oggetto che può ancora essere recuperato dalla procedura di Garbage Collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.WeakReference.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.WeakReference" /> che fa riferimento all'oggetto specificato.</summary>
      <param name="target">Oggetto da controllare o null. </param>
    </member>
    <member name="M:System.WeakReference.#ctor(System.Object,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.WeakReference" />, che fa riferimento all'oggetto specificato e usa l'opzione di rilevamento specificata per il ripristino.</summary>
      <param name="target">Oggetto da controllare. </param>
      <param name="trackResurrection">Indica il momento in cui interrompere il controllo dell'oggetto.Se true, l'oggetto viene controllato dopo la finalizzazione; se false, l'oggetto viene controllato soltanto fino alla finalizzazione.</param>
    </member>
    <member name="M:System.WeakReference.Finalize">
      <summary>Elimina il riferimento alla destinazione rappresentata dall'oggetto <see cref="T:System.WeakReference" /> corrente.</summary>
    </member>
    <member name="P:System.WeakReference.IsAlive">
      <summary>Ottiene un valore che indica se l'oggetto cui fa riferimento l'oggetto <see cref="T:System.WeakReference" /> corrente è stato sottoposto alla procedura di Garbage Collection.</summary>
      <returns>true se l'oggetto cui fa riferimento l'oggetto <see cref="T:System.WeakReference" /> corrente non è stato sottoposto alla procedura di Garbage Collection ed è ancora accessibile. In caso contrario, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.WeakReference.Target">
      <summary>Ottiene o imposta l'oggetto o la destinazione a cui fa riferimento l'oggetto <see cref="T:System.WeakReference" /> corrente.</summary>
      <returns>null se l'oggetto cui fa riferimento l'oggetto <see cref="T:System.WeakReference" /> è stato sottoposto alla procedura di Garbage Collection. In caso contrario un riferimento all'oggetto cui fa riferimento l'oggetto <see cref="T:System.WeakReference" /> corrente.</returns>
      <exception cref="T:System.InvalidOperationException">Il riferimento all'oggetto di destinazione non è valido.Questa eccezione può essere generata durante l'impostazione della proprietà se il valore è un riferimento null o se l'oggetto è stato completato durante l'operazione di impostazione.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.WeakReference.TrackResurrection">
      <summary>Ottiene un valore che indica se l'oggetto cui fa riferimento l'oggetto <see cref="T:System.WeakReference" /> corrente viene controllato dopo essere stato finalizzato.</summary>
      <returns>true se l'oggetto cui si riferisce l'oggetto <see cref="T:System.WeakReference" /> corrente viene controllato dopo la finalizzazione. false se l'oggetto viene controllato soltanto fino alla finalizzazione.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.WeakReference`1">
      <summary>Rappresenta un riferimento debole tipizzato, ovvero un riferimento a un oggetto che può ancora essere recuperato dalla procedura di Garbage Collection.</summary>
      <typeparam name="T">Tipo di oggetto a cui si fa riferimento.</typeparam>
    </member>
    <member name="M:System.WeakReference`1.#ctor(`0)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.WeakReference`1" /> che fa riferimento all'oggetto specificato.</summary>
      <param name="target">Oggetto a cui fare riferimento, oppure null.</param>
    </member>
    <member name="M:System.WeakReference`1.#ctor(`0,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.WeakReference`1" />, che fa riferimento all'oggetto specificato e utilizza l'opzione di rilevamento specificata per il ripristino.</summary>
      <param name="target">Oggetto a cui fare riferimento, oppure null.</param>
      <param name="trackResurrection">true per controllare l'oggetto dopo la finalizzazione; false, per controllare l'oggetto soltanto fino alla finalizzazione.</param>
    </member>
    <member name="M:System.WeakReference`1.Finalize">
      <summary>Elimina il riferimento alla destinazione rappresentata dall'oggetto <see cref="T:System.WeakReference`1" /> corrente.</summary>
    </member>
    <member name="M:System.WeakReference`1.SetTarget(`0)">
      <summary>Imposta l'oggetto di destinazione a cui fa riferimento l'oggetto <see cref="T:System.WeakReference`1" /> corrente.</summary>
      <param name="target">Nuovo oggetto di destinazione.</param>
    </member>
    <member name="M:System.WeakReference`1.TryGetTarget(`0@)">
      <summary>Tenta di recuperare l'oggetto di destinazione cui viene fatto riferimento dall'oggetto <see cref="T:System.WeakReference`1" /> corrente.</summary>
      <returns>true se la destinazione è stata recuperata; in caso contrario, false.</returns>
      <param name="target">Quando in questo metodo viene eseguita la restituzione, contiene l'oggetto di destinazione, se disponibile.Questo parametro viene trattato come non inizializzato.</param>
    </member>
    <member name="T:System.Collections.DictionaryEntry">
      <summary>Consente di definire una coppia chiave/valore di dizionario che è possibile impostare o recuperare.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.DictionaryEntry.#ctor(System.Object,System.Object)">
      <summary>Inizializza un'istanza del tipo <see cref="T:System.Collections.DictionaryEntry" /> con la chiave e il valore specificati.</summary>
      <param name="key">Oggetto definito in ciascuna coppia chiave/valore. </param>
      <param name="value">Definizione associata a <paramref name="key" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null e la versione di .NET Framework è 1.0 o 1.1. </exception>
    </member>
    <member name="P:System.Collections.DictionaryEntry.Key">
      <summary>Ottiene o imposta la chiave nella coppia chiave/valore.</summary>
      <returns>Chiave nella coppia chiave/valore.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Collections.DictionaryEntry.Value">
      <summary>Ottiene o imposta il valore nella coppia chiave/valore.</summary>
      <returns>Valore nella coppia chiave/valore.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Collections.ICollection">
      <summary>Definisce dimensione, enumeratori e metodi di sincronizzazione per tutti le raccolte non generiche.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi dell'interfaccia <see cref="T:System.Collections.ICollection" /> in un oggetto <see cref="T:System.Array" />, a partire da un particolare indice della matrice <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />.L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index">Indice in base zero della matrice specificata nel parametro <paramref name="array" /> in corrispondenza del quale ha inizio la copia. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.- oppure - Il numero degli elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.- oppure -Non è possibile eseguire automaticamente il cast del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo del parametro <paramref name="array" /> di destinazione.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.ICollection.Count">
      <summary>Ottiene il numero di elementi contenuti nell'oggetto <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Numero di elementi contenuti nell'oggetto <see cref="T:System.Collections.ICollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.ICollection.IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns>true se l'accesso all'oggetto <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.ICollection.SyncRoot">
      <summary>Ottiene un oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IComparer">
      <summary>Espone un metodo che confronta due oggetti.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IComparer.Compare(System.Object,System.Object)">
      <summary>Confronta due oggetti e restituisce un valore indicante se uno è minore, uguale o maggiore dell'altro.</summary>
      <returns>Intero con segno che indica i valori relativi di <paramref name="x" /> e <paramref name="y" />, come illustrato nella tabella seguente.Valore Significato Minore di zero Il parametro <paramref name="x" /> è minore del parametro <paramref name="y" />. Zero <paramref name="x" /> è uguale a <paramref name="y" />. Maggiore di zero <paramref name="x" /> è maggiore di <paramref name="y" />. </returns>
      <param name="x">Primo oggetto da confrontare. </param>
      <param name="y">Secondo oggetto da confrontare. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="x" /> e <paramref name="y" /> non implementano l'interfaccia <see cref="T:System.IComparable" />.- oppure - <paramref name="x" /> e <paramref name="y" /> sono di tipi diversi e nessuno dei due può gestire confronti con l'altro. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IDictionary">
      <summary>Rappresenta una raccolta non generica di coppie chiave/valore.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
      <summary>Aggiunge un elemento con la chiave e il valore forniti all'oggetto <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">Oggetto <see cref="T:System.Object" /> da usare come chiave dell'elemento da aggiungere. </param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da usare come valore dell'elemento da aggiungere. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null. </exception>
      <exception cref="T:System.ArgumentException">Un elemento con la stessa chiave esiste già nell'oggetto <see cref="T:System.Collections.IDictionary" />. </exception>
      <exception cref="T:System.NotSupportedException">L'<see cref="T:System.Collections.IDictionary" /> è in sola lettura.-oppure- L'oggetto <see cref="T:System.Collections.IDictionary" /> è di dimensioni fisse. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Clear">
      <summary>Rimuove tutti gli elementi dall'oggetto <see cref="T:System.Collections.IDictionary" />.</summary>
      <exception cref="T:System.NotSupportedException">L'oggetto <see cref="T:System.Collections.IDictionary" /> è in sola lettura. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Contains(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave specificata.</summary>
      <returns>true se <see cref="T:System.Collections.IDictionary" /> contiene un elemento contenente la chiave; in caso contrario, false.</returns>
      <param name="key">Chiave da individuare nell'oggetto <see cref="T:System.Collections.IDictionary" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.GetEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.IDictionaryEnumerator" /> per l'oggetto <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IDictionaryEnumerator" /> per l'oggetto <see cref="T:System.Collections.IDictionary" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.IsFixedSize">
      <summary>Ottiene un valore che indica se le dimensioni dell'oggetto <see cref="T:System.Collections.IDictionary" /> sono fisse.</summary>
      <returns>true se le dimensioni dell'oggetto <see cref="T:System.Collections.IDictionary" /> sono fisse; in caso contrario, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.IsReadOnly">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Collections.IDictionary" /> è di sola lettura.</summary>
      <returns>true se l'oggetto <see cref="T:System.Collections.IDictionary" /> è di sola lettura; in caso contrario, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.Item(System.Object)">
      <summary>Ottiene o imposta l'elemento con la chiave specificata.</summary>
      <returns>Elemento con la chiave specificata oppure null se la chiave non esiste.</returns>
      <param name="key">Chiave dell'elemento da ottenere o impostare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null. </exception>
      <exception cref="T:System.NotSupportedException">La proprietà è impostata e l'oggetto <see cref="T:System.Collections.IDictionary" /> è in sola lettura.-oppure- La proprietà è impostata, <paramref name="key" /> non esiste nella raccolta e <see cref="T:System.Collections.IDictionary" /> è di dimensioni fisse. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.Keys">
      <summary>Ottiene un oggetto <see cref="T:System.Collections.ICollection" /> contenente le chiavi dell'oggetto <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.ICollection" /> contenente le chiavi dell'oggetto <see cref="T:System.Collections.IDictionary" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Remove(System.Object)">
      <summary>Rimuove dall'oggetto <see cref="T:System.Collections.IDictionary" /> l'elemento con la chiave specificata.</summary>
      <param name="key">Chiave dell'elemento da rimuovere. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null. </exception>
      <exception cref="T:System.NotSupportedException">L'oggetto <see cref="T:System.Collections.IDictionary" /> è in sola lettura.-oppure- L'oggetto <see cref="T:System.Collections.IDictionary" /> è di dimensioni fisse. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.Values">
      <summary>Ottiene un oggetto <see cref="T:System.Collections.ICollection" /> contenente i valori dell'oggetto <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.ICollection" /> contenente i valori dell'oggetto <see cref="T:System.Collections.IDictionary" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IDictionaryEnumerator">
      <summary>Enumera gli elementi di un dizionario non generico.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionaryEnumerator.Entry">
      <summary>Ottiene sia la chiave che il valore della voce di dizionario corrente.</summary>
      <returns>Un <see cref="T:System.Collections.DictionaryEntry" /> contenente sia la chiave che il valore della voce di dizionario corrente.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> è collocato prima della prima voce o dopo l'ultima voce del dizionario. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionaryEnumerator.Key">
      <summary>Ottiene la chiave della voce di dizionario corrente.</summary>
      <returns>Chiave dell'elemento di enumerazione corrente.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> è collocato prima della prima voce o dopo l'ultima voce del dizionario. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionaryEnumerator.Value">
      <summary>Ottiene il valore della voce di dizionario corrente.</summary>
      <returns>Valore dell'elemento di enumerazione corrente.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> è collocato prima della prima voce o dopo l'ultima voce del dizionario. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IEnumerable">
      <summary>Espone un enumeratore, che supporta un'iterazione semplice su una raccolta non generica.Per esaminare il codice sorgente di .NET Framework per questo tipo, vedere Origine riferimento.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IEnumerable.GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IEnumerator">
      <summary>Supporta una iterazione semplice in una raccolta non generica.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Collections.IEnumerator.Current">
      <summary>Ottiene l'elemento corrente della raccolta.</summary>
      <returns>Elemento corrente nella raccolta.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IEnumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo della raccolta.</summary>
      <returns>true se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, false se l'enumeratore ha superato la fine della raccolta.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IEnumerator.Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IEqualityComparer">
      <summary>Definisce i metodi per supportare il confronto di uguaglianza di più oggetti.</summary>
    </member>
    <member name="M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)">
      <summary>Determina se gli oggetti specificati sono uguali.</summary>
      <returns>true se gli oggetti specificati sono uguali; in caso contrario, false.</returns>
      <param name="x">Primo oggetto da confrontare.</param>
      <param name="y">Secondo oggetto da confrontare.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="x" /> e <paramref name="y" /> sono di tipi diversi e nessuno dei due può gestire confronti con l'altro.</exception>
    </member>
    <member name="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)">
      <summary>Viene restituito un codice hash per l'oggetto specificato.</summary>
      <returns>Codice hash per l'oggetto specificato.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> per cui è necessario che sia restituito un codice hash.</param>
      <exception cref="T:System.ArgumentNullException">Il tipo di <paramref name="obj" /> è un tipo di riferimento e <paramref name="obj" /> è null.</exception>
    </member>
    <member name="T:System.Collections.IList">
      <summary>Rappresenta una raccolta non generica di oggetti cui è possibile accedere singolarmente.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Add(System.Object)">
      <summary>Aggiunge un elemento a <see cref="T:System.Collections.IList" />.</summary>
      <returns>Posizione nella quale è stato inserito il nuovo elemento o -1 per indicare che l'elemento non è stato inserito nell'insieme.</returns>
      <param name="value">Oggetto da aggiungere alla <see cref="T:System.Collections.IList" />. </param>
      <exception cref="T:System.NotSupportedException">L'<see cref="T:System.Collections.IList" /> è in sola lettura.In alternativa L'oggetto <see cref="T:System.Collections.IList" /> è di dimensioni fisse. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Clear">
      <summary>Consente di rimuovere tutti gli elementi dal controllo <see cref="T:System.Collections.IList" />.</summary>
      <exception cref="T:System.NotSupportedException">L'<see cref="T:System.Collections.IList" /> è in sola lettura. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Contains(System.Object)">
      <summary>Stabilisce se <see cref="T:System.Collections.IList" /> contiene un valore specifico.</summary>
      <returns>true se l'oggetto <see cref="T:System.Object" /> si trova nell'insieme <see cref="T:System.Collections.IList" />; in caso contrario false.</returns>
      <param name="value">Oggetto da individuare nell'oggetto <see cref="T:System.Collections.IList" />. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.IndexOf(System.Object)">
      <summary>Determina l'indice di un elemento specifico dell'interfaccia <see cref="T:System.Collections.IList" />.</summary>
      <returns>Indice di <paramref name="value" />, se presente nell'elenco; in caso contrario, -1.</returns>
      <param name="value">Oggetto da individuare nell'oggetto <see cref="T:System.Collections.IList" />. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Insert(System.Int32,System.Object)">
      <summary>Inserisce un elemento in <see cref="T:System.Collections.IList" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero nel quale <paramref name="value" /> deve essere inserito. </param>
      <param name="value">Oggetto da inserire nell'insieme <see cref="T:System.Collections.IList" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">L'<see cref="T:System.Collections.IList" /> è in sola lettura.In alternativa L'oggetto <see cref="T:System.Collections.IList" /> è di dimensioni fisse. </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="value" /> è un riferimento null nell'interfaccia <see cref="T:System.Collections.IList" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IList.IsFixedSize">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.IList" /> ha dimensioni fisse.</summary>
      <returns>true se <see cref="T:System.Collections.IList" /> è di dimensioni fisse; in caso contrario, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IList.IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.IList" /> è di sola lettura.</summary>
      <returns>true se <see cref="T:System.Collections.IList" /> è di sola lettura; in caso contrario, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IList.Item(System.Int32)">
      <summary>Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
      <param name="index">Indice a base zero dell'elemento da ottenere o impostare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">La proprietà è impostata e l'interfaccia <see cref="T:System.Collections.IList" /> è in sola lettura. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Remove(System.Object)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico dall'interfaccia <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Oggetto da rimuovere dall'oggetto <see cref="T:System.Collections.IList" />. </param>
      <exception cref="T:System.NotSupportedException">L'<see cref="T:System.Collections.IList" /> è in sola lettura.In alternativa L'oggetto <see cref="T:System.Collections.IList" /> è di dimensioni fisse. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.RemoveAt(System.Int32)">
      <summary>Rimuove l'elemento dell'interfaccia <see cref="T:System.Collections.IList" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">L'<see cref="T:System.Collections.IList" /> è in sola lettura.In alternativa L'oggetto <see cref="T:System.Collections.IList" /> è di dimensioni fisse. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IStructuralComparable">
      <summary>Supporta il confronto strutturale di oggetti raccolta.</summary>
    </member>
    <member name="M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Determina se l'oggetto raccolta corrente precede, è nella stessa posizione o segue un altro oggetto nell'ordinamento.</summary>
      <returns>Integer che indica la relazione tra l'oggetto raccolta corrente e <paramref name="other" />, come illustrato nella tabella seguente.Valore restituitoDescrizione-1L'istanza corrente precede <paramref name="other" />.0L'istanza corrente è uguale a <paramref name="other" />.1L'istanza corrente segue <paramref name="other" />.</returns>
      <param name="other">Oggetto da confrontare con l'istanza corrente.</param>
      <param name="comparer">Oggetto che confronta membri dell'oggetto raccolta corrente con i membri corrispondenti di <paramref name="other" />.</param>
      <exception cref="T:System.ArgumentException">Questa istanza e <paramref name="other" /> non sono dello stesso tipo.</exception>
    </member>
    <member name="T:System.Collections.IStructuralEquatable">
      <summary>Definisce i metodi per supportare il confronto di uguaglianza strutturale di più oggetti. </summary>
    </member>
    <member name="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Determina se un oggetto è uguale all'istanza corrente dal punto di vista strutturale.</summary>
      <returns>true se i due oggetti sono uguali; in caso contrario, false.</returns>
      <param name="other">Oggetto da confrontare con l'istanza corrente.</param>
      <param name="comparer">Oggetto che determina se l'istanza corrente e <paramref name="other" /> sono uguali. </param>
    </member>
    <member name="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Restituisce un codice hash per l'istanza corrente.</summary>
      <returns>Codice hash per l'istanza corrente.</returns>
      <param name="comparer">Oggetto che calcola il codice hash dell'oggetto corrente.</param>
    </member>
    <member name="T:System.Collections.Generic.ICollection`1">
      <summary>Definisce i metodi per la modifica di raccolte generiche.</summary>
      <typeparam name="T">Tipo di elementi contenuti nella raccolta.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Add(`0)">
      <summary>Aggiunge un elemento all'insieme <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">Oggetto da aggiungere alla <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> è in sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Clear">
      <summary>Consente di rimuovere tutti gli elementi dal controllo <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> è in sola lettura. </exception>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Contains(`0)">
      <summary>Stabilisce se l'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contiene un valore specifico.</summary>
      <returns>true se il valore indicato nel parametro <paramref name="item" /> è presente nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />, in caso contrario false.</returns>
      <param name="item">Oggetto da individuare nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copia gli elementi dell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> in una classe <see cref="T:System.Array" />, a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex">Indice in base zero della matrice specificata nel parametro <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">Il numero degli elementi nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.ICollection`1.Count">
      <summary>Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>Il numero di elementi contenuti in <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.ICollection`1.IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns>true se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura. In caso contrario, false.</returns>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Remove(`0)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico dall'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>true se <paramref name="item" /> è stato correttamente rimosso dall'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, false.Questo metodo restituisce anche false se <paramref name="item" /> non viene trovato nell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> originale.</returns>
      <param name="item">Oggetto da rimuovere dall'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> è in sola lettura.</exception>
    </member>
    <member name="T:System.Collections.Generic.IComparer`1">
      <summary>Definisce un metodo che un tipo implementa per confrontare due oggetti.</summary>
      <typeparam name="T">Tipo di oggetti da confrontare.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)">
      <summary>Confronta due oggetti e restituisce un valore indicante se uno è minore, uguale o maggiore dell'altro.</summary>
      <returns>Intero con segno che indica i valori relativi di <paramref name="x" /> e <paramref name="y" />, come illustrato nella tabella seguente.Valore Significato Minore di zeroIl parametro <paramref name="x" /> è minore del parametro <paramref name="y" />.Zero<paramref name="x" /> è uguale a <paramref name="y" />.Maggiore di zero<paramref name="x" /> è maggiore di <paramref name="y" />.</returns>
      <param name="x">Primo oggetto da confrontare.</param>
      <param name="y">Secondo oggetto da confrontare.</param>
    </member>
    <member name="T:System.Collections.Generic.IDictionary`2">
      <summary>Rappresenta una raccolta generica di coppie chiave/valore.</summary>
      <typeparam name="TKey">Tipo delle chiavi nel dizionario.</typeparam>
      <typeparam name="TValue">Tipo dei valori nel dizionario.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
      <summary>Aggiunge un elemento con la chiave e il valore forniti all'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key">Oggetto da usare come chiave dell'elemento da aggiungere.</param>
      <param name="value">Oggetto da usare come valore dell'elemento da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Un elemento con la stessa chiave esiste già nell'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
      <exception cref="T:System.NotSupportedException">L'<see cref="T:System.Collections.Generic.IDictionary`2" /> è in sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
      <summary>Determina se <see cref="T:System.Collections.Generic.IDictionary`2" /> contiene un elemento con la chiave specificata.</summary>
      <returns>true se <see cref="T:System.Collections.Generic.IDictionary`2" /> contiene un elemento contenente la chiave; in caso contrario, false.</returns>
      <param name="key">Chiave da individuare in <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
    </member>
    <member name="P:System.Collections.Generic.IDictionary`2.Item(`0)">
      <summary>Ottiene o imposta l'elemento con la chiave specificata.</summary>
      <returns>Elemento con la chiave specificata.</returns>
      <param name="key">Chiave dell'elemento da ottenere o impostare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">La proprietà viene recuperata e <paramref name="key" /> non viene trovato.</exception>
      <exception cref="T:System.NotSupportedException">La proprietà è impostata e l'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> è in sola lettura.</exception>
    </member>
    <member name="P:System.Collections.Generic.IDictionary`2.Keys">
      <summary>Ottiene <see cref="T:System.Collections.Generic.ICollection`1" /> contenente le chiavi di <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contenente le chiavi dell'oggetto che implementa l'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
      <summary>Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>true se l'elemento viene rimosso correttamente; in caso contrario, false.Questo metodo restituisce anche false se <paramref name="key" /> non è stato trovato nell'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> originale.</returns>
      <param name="key">Chiave dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
      <exception cref="T:System.NotSupportedException">L'<see cref="T:System.Collections.Generic.IDictionary`2" /> è in sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
      <summary>Ottiene il valore associato alla chiave specificata.</summary>
      <returns>true se l'oggetto che implementa l'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> contiene un elemento con la chiave specificata; in caso contrario, false.</returns>
      <param name="key">Chiave di cui si deve ottenere il valore.</param>
      <param name="value">Quando termina, questo metodo restituisce il valore associato alla chiave specificata nel caso in cui la chiave venga trovata; in caso contrario, il valore predefinito per il tipo di parametro <paramref name="value" />.Questo parametro viene passato non inizializzato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
    </member>
    <member name="P:System.Collections.Generic.IDictionary`2.Values">
      <summary>Ottiene <see cref="T:System.Collections.Generic.ICollection`1" /> contenente i valori in <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contenente i valori nell'oggetto che implementa l'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.IEnumerable`1">
      <summary>Espone l'enumeratore, che supporta un'iterazione semplice su una raccolta di un tipo specificato.Per esaminare il codice sorgente di .NET Framework per questo tipo, vedere Origine riferimento.</summary>
      <typeparam name="T">Tipo degli oggetti da enumerare.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns>Enumeratore che può essere usato per scorrere la raccolta.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Collections.Generic.IEnumerator`1">
      <summary>Supporta una iterazione semplice in una raccolta generica.</summary>
      <typeparam name="T">Tipo degli oggetti da enumerare.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Collections.Generic.IEnumerator`1.Current">
      <summary>Ottiene l'elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="T:System.Collections.Generic.IEqualityComparer`1">
      <summary>Definisce i metodi per supportare il confronto di uguaglianza di più oggetti.</summary>
      <typeparam name="T">Tipo di oggetti da confrontare.Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)">
      <summary>Determina se gli oggetti specificati sono uguali.</summary>
      <returns>true se gli oggetti specificati sono uguali; in caso contrario, false.</returns>
      <param name="x">Primo oggetto di tipo <paramref name="T" /> da confrontare.</param>
      <param name="y">Secondo oggetto di tipo <paramref name="T" /> da confrontare.</param>
    </member>
    <member name="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)">
      <summary>Viene restituito un codice hash per l'oggetto specificato.</summary>
      <returns>Codice hash per l'oggetto specificato.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> per cui è necessario che sia restituito un codice hash.</param>
      <exception cref="T:System.ArgumentNullException">Il tipo di <paramref name="obj" /> è un tipo di riferimento e <paramref name="obj" /> è null.</exception>
    </member>
    <member name="T:System.Collections.Generic.IList`1">
      <summary>Rappresenta una raccolta di oggetti cui è possibile accedere singolarmente.</summary>
      <typeparam name="T">Tipo di elementi contenuti nell'elenco.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IList`1.IndexOf(`0)">
      <summary>Determina l'indice di un elemento specifico nell'interfaccia <see cref="T:System.Collections.Generic.IList`1" />.</summary>
      <returns>Indice di <paramref name="item" /> se si trova nell'elenco; in caso contrario, -1.</returns>
      <param name="item">Oggetto da individuare nell'oggetto <see cref="T:System.Collections.Generic.IList`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
      <summary>Inserisce un elemento nell'oggetto <see cref="T:System.Collections.Generic.IList`1" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero nel quale deve essere inserito <paramref name="item" />.</param>
      <param name="item">Oggetto da inserire nell'interfaccia <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">L'interfaccia <see cref="T:System.Collections.Generic.IList`1" /> è in sola lettura.</exception>
    </member>
    <member name="P:System.Collections.Generic.IList`1.Item(System.Int32)">
      <summary>Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
      <param name="index">Indice a base zero dell'elemento da ottenere o impostare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">La proprietà è impostata e l'interfaccia <see cref="T:System.Collections.Generic.IList`1" /> è in sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
      <summary>Rimuove l'elemento dell'interfaccia <see cref="T:System.Collections.Generic.IList`1" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">L'interfaccia <see cref="T:System.Collections.Generic.IList`1" /> è in sola lettura.</exception>
    </member>
    <member name="T:System.Collections.Generic.IReadOnlyCollection`1">
      <summary>Rappresenta una raccolta in sola lettura fortemente tipizzata di elementi.</summary>
      <typeparam name="T">Tipo degli elementi.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyCollection`1.Count">
      <summary>Ottiene il numero di elementi nella raccolta.</summary>
      <returns>Numero di elementi contenuti nella raccolta. </returns>
    </member>
    <member name="T:System.Collections.Generic.IReadOnlyDictionary`2">
      <summary>Rappresenta una raccolta generica di sola lettura di coppie chiave/valore.</summary>
      <typeparam name="TKey">Tipo di chiavi nel dizionario di sola lettura. </typeparam>
      <typeparam name="TValue">Tipo di valori nel dizionario di sola lettura. </typeparam>
    </member>
    <member name="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
      <summary>Determina se il dizionario di sola lettura contiene un elemento con la chiave specificata.</summary>
      <returns>true se il dizionario di sola lettura contiene un elemento con la chiave specificata; in caso contrario, false.</returns>
      <param name="key">La chiave da individuare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
      <summary>Ottiene l'elemento che dispone della chiave specificata nel dizionario di sola lettura.</summary>
      <returns>L'elemento che dispone della chiave specificata nel dizionario di sola lettura.</returns>
      <param name="key">La chiave da individuare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">La proprietà viene recuperata e <paramref name="key" /> non viene trovato. </exception>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys">
      <summary>Ottiene una raccolta enumerabile contenente le chiavi nel dizionario di sola lettura. </summary>
      <returns>Raccolta enumerabile contenente le chiavi nel dizionario di sola lettura.</returns>
    </member>
    <member name="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
      <summary>Ottiene il valore associato alla chiave specificata.</summary>
      <returns>true se l'oggetto che implementa l'interfaccia <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> contiene un elemento con la chiave specificata; in caso contrario, false.</returns>
      <param name="key">La chiave da individuare.</param>
      <param name="value">Quando termina, questo metodo restituisce il valore associato alla chiave specificata nel caso in cui la chiave venga trovata; in caso contrario, il valore predefinito per il tipo di parametro <paramref name="value" />.Questo parametro viene passato non inizializzato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyDictionary`2.Values">
      <summary>Ottiene una raccolta enumerabile contenente i valori nel dizionario di sola lettura.</summary>
      <returns>Raccolta enumerabile contenente i valori nel dizionario di sola lettura.</returns>
    </member>
    <member name="T:System.Collections.Generic.IReadOnlyList`1">
      <summary>Rappresenta una raccolta di elementi di sola lettura a cui è possibile accedere in base all'indice. </summary>
      <typeparam name="T">Tipo di elementi nell'elenco di sola lettura. Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere Covarianza e controvarianza nei generics.</typeparam>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)">
      <summary>Ottiene l'elemento in corrispondenza dell'indice specificato nell'elenco di sola lettura.</summary>
      <returns>Elemento in corrispondenza dell'indice specificato nell'elenco di sola lettura.</returns>
      <param name="index">Indice in base zero dell'elemento da ottenere. </param>
    </member>
    <member name="T:System.Collections.Generic.ISet`1">
      <summary>Fornisce l'interfaccia di base per l'astrazione di set.</summary>
      <typeparam name="T">Tipo di elementi presenti nel set.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.Add(`0)">
      <summary>Aggiunge un elemento al set corrente e restituisce un valore che indica se l'aggiunta è stata eseguita correttamente. </summary>
      <returns>true se l'elemento è stato aggiunto al set; false se l'elemento è già presente nel set.</returns>
      <param name="item">Elemento da aggiungere al set.</param>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Rimuove tutti gli elementi della raccolta specificata dal set corrente.</summary>
      <param name="other">Raccolta di elementi da rimuovere dal set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifica il set corrente in modo che contenga solo elementi inclusi anche in una raccolta specificata.</summary>
      <param name="other">Raccolta da confrontare con il set corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se il set corrente è un subset (strict) appropriato di una raccolta specificata.</summary>
      <returns>true se il set corrente è un subset appropriato di <paramref name="other" />; in caso contrario, false.</returns>
      <param name="other">Raccolta da confrontare con il set corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se il set corrente è un superset (strict) appropriato di una raccolta specificata.</summary>
      <returns>true se il set corrente è un superset appropriato di <paramref name="other" />; in caso contrario, false.</returns>
      <param name="other">Raccolta da confrontare con il set corrente. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se un set è un subset di una raccolta specificata.</summary>
      <returns>true se il set corrente è un subset di <paramref name="other" />; in caso contrario, false.</returns>
      <param name="other">Raccolta da confrontare con il set corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se il set corrente è un superset di una raccolta specificata.</summary>
      <returns>true se il set corrente è un superset di <paramref name="other" />; in caso contrario, false.</returns>
      <param name="other">Raccolta da confrontare con il set corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se il set corrente è sovrapposto alla raccolta specificata.</summary>
      <returns>true se il set corrente e <paramref name="other" /> condividono almeno un elemento comune; in caso contrario, false.</returns>
      <param name="other">Raccolta da confrontare con il set corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se il set corrente e la raccolta specificata contengono gli stessi elementi.</summary>
      <returns>true se il set corrente è uguale a <paramref name="other" />; in caso contrario, false.</returns>
      <param name="other">Raccolta da confrontare con il set corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifica il set corrente in modo che contenga solo elementi presenti in tale set o nella raccolta specificata, ma non in entrambi. </summary>
      <param name="other">Raccolta da confrontare con il set corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifica il set corrente in modo che contenga tutti gli elementi presenti in tale set, nella raccolta specificata o in entrambi.</summary>
      <param name="other">Raccolta da confrontare con il set corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="T:System.Collections.Generic.KeyNotFoundException">
      <summary>Eccezione che viene generata quando la chiave specificata per accedere a un elemento di una raccolta non corrisponde a nessuna chiave della raccolta.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.KeyNotFoundException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.KeyNotFoundException" /> utilizzando i valori di proprietà predefiniti.</summary>
    </member>
    <member name="M:System.Collections.Generic.KeyNotFoundException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.KeyNotFoundException" /> con il messaggio di errore specificato.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
    </member>
    <member name="M:System.Collections.Generic.KeyNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.KeyNotFoundException" /> con il messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione</param>
      <param name="innerException">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="innerException" /> non è null, l'eccezione corrente viene generata in un blocco catch in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Collections.Generic.KeyValuePair`2">
      <summary>Definisce una coppia chiave/valore che può essere impostata o recuperata.</summary>
      <typeparam name="TKey">Tipo di chiave.</typeparam>
      <typeparam name="TValue">Tipo di valore.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Collections.Generic.KeyValuePair`2" /> con la chiave e il valore specificati.</summary>
      <param name="key">Oggetto definito in ciascuna coppia chiave/valore.</param>
      <param name="value">Definizione associata a <paramref name="key" />.</param>
    </member>
    <member name="P:System.Collections.Generic.KeyValuePair`2.Key">
      <summary>Ottiene la chiave della coppia chiave/valore.</summary>
      <returns>Oggetto <paramref name="TKey" /> che costituisce la chiave dell'oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" />. </returns>
    </member>
    <member name="M:System.Collections.Generic.KeyValuePair`2.ToString">
      <summary>Restituisce una rappresentazione di stringa dell'oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" />, usando le rappresentazioni di stringa della chiave e del valore.</summary>
      <returns>Rappresentazione di stringa dell'oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" /> che include le rappresentazioni di stringa della chiave e del valore.</returns>
    </member>
    <member name="P:System.Collections.Generic.KeyValuePair`2.Value">
      <summary>Ottiene il valore della coppia chiave/valore.</summary>
      <returns>Oggetto <paramref name="TValue" /> che rappresenta il valore dell'oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" />. </returns>
    </member>
    <member name="T:System.Collections.ObjectModel.Collection`1">
      <summary>Fornisce la classe di base per una raccolta generica.</summary>
      <typeparam name="T">Tipo di elementi contenuti nella raccolta.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.#ctor">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.ObjectModel.Collection`1" /> che è vuota.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.ObjectModel.Collection`1" /> come wrapper per l'elenco specificato.</summary>
      <param name="list">Elenco di cui la nuova raccolta è il wrapper.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> è null.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
      <summary>Aggiunge un oggetto alla fine dell'insieme <see cref="T:System.Collections.ObjectModel.Collection`1" />. </summary>
      <param name="item">Oggetto da aggiungere alla fine dell'insieme <see cref="T:System.Collections.ObjectModel.Collection`1" />.Il valore può essere null per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Clear">
      <summary>Rimuove tutti gli elementi dall'insieme <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.ClearItems">
      <summary>Rimuove tutti gli elementi dall'insieme <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
      <summary>Determina se un elemento è incluso in <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>true se <paramref name="item" /> si trova nell'insieme <see cref="T:System.Collections.ObjectModel.Collection`1" />; in caso contrario, false.</returns>
      <param name="item">Oggetto da individuare nell'oggetto <see cref="T:System.Collections.ObjectModel.Collection`1" />.Il valore può essere null per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
      <summary>Copia l'intero insieme <see cref="T:System.Collections.ObjectModel.Collection`1" /> in un oggetto <see cref="T:System.Array" /> compatibile unidimensionale, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="array">Oggetto unidimensionale <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati dall'insieme <see cref="T:System.Collections.ObjectModel.Collection`1" />.L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index">Indice in base zero della matrice specificata nel parametro <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">Il numero degli elementi nell'oggetto <see cref="T:System.Collections.ObjectModel.Collection`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.Count">
      <summary>Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>Numero di elementi contenuti in <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
      <summary>Restituisce un enumeratore che scorre la classe <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> per la <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice in base zero della prima occorrenza nell'intera classe <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>Indice in base zero della prima occorrenza di <paramref name="item" /> all'interno dell'intero insieme <see cref="T:System.Collections.ObjectModel.Collection`1" />, se presente; in caso contrario, -1.</returns>
      <param name="item">Oggetto da individuare nell'oggetto <see cref="T:System.Collections.Generic.List`1" />.Il valore può essere null per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
      <summary>Inserisce un elemento in <see cref="T:System.Collections.ObjectModel.Collection`1" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero nel quale deve essere inserito <paramref name="item" />.</param>
      <param name="item">Oggetto da inserire.Il valore può essere null per i tipi di riferimento.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.In alternativa<paramref name="index" /> è maggiore di <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
      <summary>Inserisce un elemento in <see cref="T:System.Collections.ObjectModel.Collection`1" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero nel quale deve essere inserito <paramref name="item" />.</param>
      <param name="item">Oggetto da inserire.Il valore può essere null per i tipi di riferimento.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.In alternativa<paramref name="index" /> è maggiore di <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
      <summary>Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
      <param name="index">Indice a base zero dell'elemento da ottenere o impostare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.In alternativa<paramref name="index" /> è maggiore di o uguale a <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />. </exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.Items">
      <summary>Ottiene un wrapper dell'oggetto <see cref="T:System.Collections.Generic.IList`1" /> per l'insieme <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>Wrapper dell'oggetto <see cref="T:System.Collections.Generic.IList`1" /> per l'insieme <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico dall'insieme <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>true se <paramref name="item" /> viene rimosso correttamente; in caso contrario, false.  Questo metodo restituisce false anche nel caso in cui <paramref name="item" /> non sia stato trovato nell'interfaccia <see cref="T:System.Collections.ObjectModel.Collection`1" /> originale.</returns>
      <param name="item">Oggetto da rimuovere dall'oggetto <see cref="T:System.Collections.ObjectModel.Collection`1" />.Il valore può essere null per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
      <summary>Consente di rimuovere l'elemento in corrispondenza dell'indice specificato di <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.In alternativa<paramref name="index" /> è maggiore di o uguale a <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
      <summary>Consente di rimuovere l'elemento in corrispondenza dell'indice specificato di <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.In alternativa<paramref name="index" /> è maggiore di o uguale a <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
      <summary>Sostituisce l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da sostituire.</param>
      <param name="item">Nuovo valore dell'elemento in corrispondenza dell'indice specificato.Il valore può essere null per i tipi di riferimento.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.In alternativa<paramref name="index" /> è maggiore di <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns>true se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura. In caso contrario, false.  Nell'implementazione predefinita di <see cref="T:System.Collections.ObjectModel.Collection`1" />, questa proprietà restituisce sempre false.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi dell'interfaccia <see cref="T:System.Collections.ICollection" /> in un oggetto <see cref="T:System.Array" />, a partire da un particolare indice della matrice <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />.L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index">Indice in base zero della matrice specificata nel parametro <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.In alternativa<paramref name="array" /> non dispone di indicizzazione in base zero.In alternativaIl numero degli elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.In alternativaNon è possibile eseguire automaticamente il cast del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo del parametro <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns>true se l'accesso all'oggetto <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, false.  Nell'implementazione predefinita di <see cref="T:System.Collections.ObjectModel.Collection`1" />, questa proprietà restituisce sempre false.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.ObjectModel.Collection`1" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere una raccolta.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzata per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)">
      <summary>Aggiunge un elemento a <see cref="T:System.Collections.IList" />.</summary>
      <returns>Posizione nella quale è stato inserito il nuovo elemento.</returns>
      <param name="value">Oggetto <see cref="T:System.Object" /> da aggiungere a <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">Il tipo del parametro <paramref name="value" /> non è assegnabile all'interfaccia <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Stabilisce se <see cref="T:System.Collections.IList" /> contiene un valore specifico.</summary>
      <returns>true se l'oggetto <see cref="T:System.Object" /> si trova nell'insieme <see cref="T:System.Collections.IList" />; in caso contrario false.</returns>
      <param name="value">
        <see cref="T:System.Object" /> da individuare in <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">Il tipo del parametro <paramref name="value" /> non è assegnabile all'interfaccia <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determina l'indice di un elemento specifico dell'interfaccia <see cref="T:System.Collections.IList" />.</summary>
      <returns>Indice di <paramref name="value" />, se presente nell'elenco; in caso contrario, -1.</returns>
      <param name="value">
        <see cref="T:System.Object" /> da individuare in <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">Il tipo del parametro <paramref name="value" /> non è assegnabile all'interfaccia <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserisce un elemento nell'oggetto <see cref="T:System.Collections.IList" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero nel quale <paramref name="value" /> deve essere inserito.</param>
      <param name="value">
        <see cref="T:System.Object" /> da inserire in <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.ArgumentException">Il tipo del parametro <paramref name="value" /> non è assegnabile all'interfaccia <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.IList" /> ha dimensioni fisse.</summary>
      <returns>true se <see cref="T:System.Collections.IList" /> è di dimensioni fisse; in caso contrario, false.  Nell'implementazione predefinita di <see cref="T:System.Collections.ObjectModel.Collection`1" />, questa proprietà restituisce sempre false.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.IList" /> è di sola lettura.</summary>
      <returns>true se <see cref="T:System.Collections.IList" /> è di sola lettura; in caso contrario, false.  Nell'implementazione predefinita di <see cref="T:System.Collections.ObjectModel.Collection`1" />, questa proprietà restituisce sempre false.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
      <param name="index">Indice a base zero dell'elemento da ottenere o impostare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.Collections.IList" />.</exception>
      <exception cref="T:System.ArgumentException">La proprietà viene impostata e il tipo del parametro <paramref name="value" /> non è assegnabile all'interfaccia <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico dall'interfaccia <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da rimuovere da <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">Il tipo del parametro <paramref name="value" /> non è assegnabile all'interfaccia <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
      <summary>Fornisce la classe di base per una raccolta generica di sola lettura.</summary>
      <typeparam name="T">Tipo di elementi contenuti nella raccolta.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> come wrapper di sola lettura per l'elenco specificato.</summary>
      <param name="list">Elenco di cui eseguire il wrapping.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> is null.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)">
      <summary>Determina se un elemento è incluso in <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</summary>
      <returns>true se <paramref name="value" /> è presente in <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />; in caso contrario, false.</returns>
      <param name="value">Oggetto da individuare in <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.Il valore può essere null per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copia l'intero oggetto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> in un oggetto <see cref="T:System.Array" /> compatibile unidimensionale, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count">
      <summary>Ottiene il numero di elementi contenuti nell'istanza <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</summary>
      <returns>Numero di elementi contenuti nell'istanza <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
      <summary>Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> per l'oggetto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice in base zero della prima occorrenza nell'intero oggetto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</summary>
      <returns>Indice in base zero della prima occorrenza di <paramref name="item" /> all'interno dell'intero oggetto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, se presente; in caso contrario, -1.</returns>
      <param name="value">Oggetto da individuare in <see cref="T:System.Collections.Generic.List`1" />.Il valore può essere null per i tipi di riferimento.</param>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
      <summary>Ottiene l'elemento in corrispondenza dell'indice specificato.</summary>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
      <param name="index">Indice in base zero dell'elemento da ottenere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count" />. </exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items">
      <summary>Restituisce l'interfaccia <see cref="T:System.Collections.Generic.IList`1" /> di cui l'oggetto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> esegue il wrapping.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.Generic.IList`1" /> di cui l'oggetto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> esegue il wrapping.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Aggiunge un elemento a <see cref="T:System.Collections.Generic.ICollection`1" />.Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Oggetto da aggiungere a <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Rimuove tutti gli elementi da <see cref="T:System.Collections.Generic.ICollection`1" />.Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns>true se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, false.Nell'implementazione predefinita di <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, questa proprietà restituisce sempre true.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.Generic.ICollection`1" />.Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <returns>true se <paramref name="value" /> è stato rimosso correttamente da <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, false.</returns>
      <param name="value">Oggetto da rimuovere da <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>Inserisce un elemento in <see cref="T:System.Collections.Generic.IList`1" /> in corrispondenza dell'indice specificato.Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale deve essere inserito <paramref name="value" />.</param>
      <param name="value">Oggetto da inserire in <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>Ottiene l'elemento in corrispondenza dell'indice specificato.Si verifica un'eccezione <see cref="T:System.NotSupportedException" /> se si tenta di impostare l'elemento nell'indice specificato.</summary>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
      <param name="index">Indice in base zero dell'elemento da ottenere.</param>
      <exception cref="T:System.NotSupportedException">Always thrown if the property is set.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>Rimuove l'elemento <see cref="T:System.Collections.Generic.IList`1" /> in corrispondenza dell'indice specificato.Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />.L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-<paramref name="array" /> does not have zero-based indexing.-or-The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.-or-The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns>true se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, false.Nell'implementazione predefinita di <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, questa proprietà restituisce sempre false.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.Nell'implementazione predefinita di <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>Aggiunge un elemento a <see cref="T:System.Collections.IList" />.Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Posizione in cui è stato inserito il nuovo elemento.</returns>
      <param name="value">Oggetto <see cref="T:System.Object" /> da aggiungere a <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear">
      <summary>Rimuove tutti gli elementi da <see cref="T:System.Collections.IList" />.Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Stabilisce se <see cref="T:System.Collections.IList" /> contiene un valore specifico.</summary>
      <returns>true se l'oggetto <see cref="T:System.Object" /> si trova in <see cref="T:System.Collections.IList" />; in caso contrario, false.</returns>
      <param name="value">Oggetto <see cref="T:System.Object" /> da individuare in <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not of the type specified for the generic type parameter <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determina l'indice di un elemento specifico in <see cref="T:System.Collections.IList" />.</summary>
      <returns>Indice di <paramref name="value" />, se presente nell'elenco; in caso contrario, -1.</returns>
      <param name="value">Oggetto <see cref="T:System.Object" /> da individuare in <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not of the type specified for the generic type parameter <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserisce un elemento in <see cref="T:System.Collections.IList" /> in corrispondenza dell'indice specificato.Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale deve essere inserito <paramref name="value" />.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da inserire in <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.IList" /> ha dimensioni fisse.</summary>
      <returns>true se <see cref="T:System.Collections.IList" /> è di dimensioni fisse; in caso contrario, false.Nell'implementazione predefinita di <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, questa proprietà restituisce sempre true.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.IList" /> è di sola lettura.</summary>
      <returns>true se <see cref="T:System.Collections.IList" /> è di sola lettura; in caso contrario, false.Nell'implementazione predefinita di <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, questa proprietà restituisce sempre true.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Ottiene l'elemento in corrispondenza dell'indice specificato.Si verifica un'eccezione <see cref="T:System.NotSupportedException" /> se si tenta di impostare l'elemento nell'indice specificato.</summary>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
      <param name="index">Indice in base zero dell'elemento da ottenere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">Always thrown if the property is set.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.IList" />.Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> da rimuovere da <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Rimuove l'elemento <see cref="T:System.Collections.IList" /> in corrispondenza dell'indice specificato.Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="T:System.ComponentModel.DefaultValueAttribute">
      <summary>Specifica il valore predefinito per una proprietà.</summary>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> utilizzando un valore <see cref="T:System.Boolean" />.</summary>
      <param name="value">Oggetto <see cref="T:System.Boolean" /> che corrisponde al valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Byte)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> utilizzando un intero senza segno a 8 bit.</summary>
      <param name="value">Intero senza segno a 8 bit che corrisponde al valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Char)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> utilizzando un carattere Unicode.</summary>
      <param name="value">Carattere Unicode che corrisponde al valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Double)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> utilizzando un numero in virgola mobile e precisione doppia.</summary>
      <param name="value">Numero in virgola mobile e precisione doppia che corrisponde al valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int16)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> utilizzando un intero con segno a 16 bit.</summary>
      <param name="value">Intero con segno a 16 bit che corrisponde al valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> utilizzando un intero con segno a 32 bit.</summary>
      <param name="value">Intero con segno a 32 bit che corrisponde al valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int64)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> utilizzando un intero con segno a 64 bit.</summary>
      <param name="value">Intero con segno a 64 bit che corrisponde al valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> che rappresenta il valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Single)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> utilizzando un numero in virgola mobile e precisione singola.</summary>
      <param name="value">Numero in virgola mobile a precisione singola che corrisponde al valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> utilizzando un oggetto <see cref="T:System.String" />.</summary>
      <param name="value">Oggetto <see cref="T:System.String" /> che corrisponde al valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Type,System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" />, convertendo il valore specificato nel tipo indicato e utilizzando le impostazioni cultura invarianti come contesto di conversione.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo nel quale si desidera convertire il valore. </param>
      <param name="value">
        <see cref="T:System.String" /> che può essere convertito nel tipo utilizzando <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo e le impostazioni cultura inglesi (Stati Uniti). </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.Equals(System.Object)">
      <summary>Specifica se il valore dell'oggetto specificato è uguale all'oggetto <see cref="T:System.ComponentModel.DefaultValueAttribute" /> corrente.</summary>
      <returns>true se il valore dell'oggetto specificato è uguale a quello dell'oggetto corrente. false in caso contrario.</returns>
      <param name="obj">Oggetto di cui va verificata l'uguaglianza di valore. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.GetHashCode"></member>
    <member name="P:System.ComponentModel.DefaultValueAttribute.Value">
      <summary>Ottiene il valore predefinito della proprietà a cui è associato questo attributo.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore predefinito della proprietà a cui è associato questo attributo.</returns>
    </member>
    <member name="T:System.ComponentModel.EditorBrowsableAttribute">
      <summary>Indica se una proprietà o un metodo è visualizzabile in un editor.La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.#ctor(System.ComponentModel.EditorBrowsableState)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.EditorBrowsableAttribute" /> con <see cref="T:System.ComponentModel.EditorBrowsableState" />.</summary>
      <param name="state">Attributo <see cref="T:System.ComponentModel.EditorBrowsableState" /> in base al quale impostare la proprietà <see cref="P:System.ComponentModel.EditorBrowsableAttribute.State" />. </param>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.Equals(System.Object)">
      <summary>Specifica se il valore dell'oggetto specificato è uguale all'oggetto <see cref="T:System.ComponentModel.EditorBrowsableAttribute" /> corrente.</summary>
      <returns>true se il valore dell'oggetto specificato è uguale a quello dell'oggetto corrente. false in caso contrario.</returns>
      <param name="obj">Oggetto di cui va verificata l'uguaglianza di valore. </param>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.GetHashCode"></member>
    <member name="P:System.ComponentModel.EditorBrowsableAttribute.State">
      <summary>Ottiene lo stato esplorabile della proprietà o del metodo.</summary>
      <returns>Attributo <see cref="T:System.ComponentModel.EditorBrowsableState" /> che rappresenta lo stato esplorabile della proprietà o del metodo.</returns>
    </member>
    <member name="T:System.ComponentModel.EditorBrowsableState">
      <summary>Consente di specificare lo stato esplorabile di una proprietà o di un metodo all'interno di un editor.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Advanced">
      <summary>La proprietà o il metodo sono funzionalità che dovrebbero essere accessibile ai soli utenti avanzati.Tramite un editor è possibile mostrare o nascondere tali proprietà.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Always">
      <summary>È possibile visualizzare sempre la proprietà o il metodo all'interno di un editor.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Never">
      <summary>Non è mai possibile visualizzare la proprietà o il metodo all'interno di un editor.</summary>
    </member>
    <member name="T:System.Diagnostics.ConditionalAttribute">
      <summary>Indica ai compilatori che una chiamata al metodo o un attributo deve essere ignorato a meno che non sia definito un simbolo di compilazione condizionale specificato.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Diagnostics.ConditionalAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.ConditionalAttribute" />.</summary>
      <param name="conditionString">Stringa che specifica il simbolo di compilazione condizionale con distinzione tra maiuscole e minuscole associato all'attributo. </param>
    </member>
    <member name="P:System.Diagnostics.ConditionalAttribute.ConditionString">
      <summary>Ottiene il simbolo di compilazione condizionale associato all'attributo <see cref="T:System.Diagnostics.ConditionalAttribute" />.</summary>
      <returns>Stringa che specifica il simbolo di compilazione condizionale con distinzione tra maiuscole e minuscole associato all'attributo <see cref="T:System.Diagnostics.ConditionalAttribute" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.DebuggableAttribute">
      <summary>Modifica la generazione del codice per il debug just-in-time (JIT) in fase di esecuzione.La classe non può essere ereditata.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Diagnostics.DebuggableAttribute.DebuggingModes)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DebuggableAttribute" /> utilizzando le modalità di debug specificate per il compilatore JIT. </summary>
      <param name="modes">Combinazione bit per bit dei valori di <see cref="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" /> che specifica la modalità di debug per il compilatore JIT.</param>
    </member>
    <member name="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
      <summary>Specifica la modalità di debug per il compilatore JIT (Just-In-Time).</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default">
      <summary>Indica al compilatore JIT di usare il comportamento predefinito, in cui sono incluse l'attivazione delle ottimizzazioni, la disattivazione del supporto di modifica e continuazione e l'utilizzo dei punti di sequenza dell'archivio dei simboli, se presente.In .NET Framework versione 2.0, le informazioni di rilevamento JIT, che rappresentano l'offset MSIL (Microsoft Intermediate Language) del codice nativo all'interno di un metodo, vengono sempre generate.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations">
      <summary>Disabilitare le ottimizzazioni eseguite dal compilatore per ridurre le dimensioni e aumentare la velocità e l'efficienza dell'output.Le ottimizzazioni comportano una riorganizzazione del codice nel file di output, che può rendere difficoltoso il debug.Durante il debug è generalmente opportuno disabilitare l'ottimizzazione.Nelle versioni 2.0 o successive, combinare questo valore con Default (Default | DisableOptimizations) per abilitare il rilevamento JIT e disabilitare le ottimizzazioni.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.EnableEditAndContinue">
      <summary>Abilitare Modifica e continuazione.Modifica e continuazione consente di modificare il codice sorgente quando il programma è in modalità interruzione.La capacità di modificare e continuare dipende dal compilatore.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints">
      <summary>Usare i punti di sequenza MSIL impliciti, non i punti di sequenza PDB (Program DataBase).Le informazioni sui simboli includono generalmente almeno un offset MSIL (Microsoft Intermediate Language) per ogni riga del codice sorgente.Quando il compilatore JIT (Just-In-Time) sta per compilare un metodo, richiede ai servizi relativi ai profili un elenco di offset MSIL da conservare.Tali offset MSIL sono denominati punti di sequenza.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.None">
      <summary>In .NET Framework versione 2.0, le informazioni di rilevamento JIT vengono sempre generate e questo flag ha gli stessi effetti di <see cref="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default" />, ad eccezione della proprietà <see cref="P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled" />, impostata su false, quindi senza significato nella versione 2.0.</summary>
    </member>
    <member name="T:System.Globalization.DateTimeStyles">
      <summary>Definisce le opzioni di formattazione per la personalizzazione della modalità di analisi dell'ora e il giorno.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AdjustToUniversal">
      <summary>La data e l'ora vengono restituite in formato UTC (Coordinated Universal Time).Se nella stringa di input è indicata un'ora locale, tramite un identificatore di fuso orario o <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" />), la data e l'ora vengono convertite da fuso orario locale nel formato UTC.Se nella stringa di input è indicata un'ora UTC, tramite un identificatore di fuso orario o <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />), non verrà eseguita alcuna conversione.Se nella stringa di input non è indicata un'ora locale o UTC, non viene eseguita alcune conversione e la proprietà <see cref="P:System.DateTime.Kind" /> risultante è <see cref="F:System.DateTimeKind.Unspecified" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowInnerWhite">
      <summary>Gli spazi aggiuntivi presenti nella stringa devono essere ignorati durante l'analisi, a meno che non siano presenti nei modelli di formato di <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowLeadingWhite">
      <summary>Gli spazi iniziali devono essere ignorati durante l'analisi, a meno che non siano presenti nei modelli di formato di <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowTrailingWhite">
      <summary>Gli spazi finali devono essere ignorati durante l'analisi, a meno che non siano presenti nei modelli di formato di <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowWhiteSpaces">
      <summary>Gli spazi in qualunque posizione della stringa devono essere ignorati durante l'analisi, a meno che non siano presenti nei modelli di formato di <see cref="T:System.Globalization.DateTimeFormatInfo" />.Questo valore è una combinazione dei valori <see cref="F:System.Globalization.DateTimeStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.DateTimeStyles.AllowTrailingWhite" /> e <see cref="F:System.Globalization.DateTimeStyles.AllowInnerWhite" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AssumeLocal">
      <summary>Se non viene specificato alcun fuso orario nella stringa analizzata, si presuppone che sia indicata un'ora locale. </summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AssumeUniversal">
      <summary>Se non viene specificato alcun fuso orario nella stringa analizzata, si presuppone che sia indicata un'ora UTC. </summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault">
      <summary>Se la stringa analizzata contiene soltanto l'ora e non la data, i metodi di analisi utilizzeranno la data del calendario gregoriano con le seguenti impostazioni: anno = 1, mese = 1 e giorno = 1.Se questo valore non viene utilizzato, verrà utilizzata la data corrente.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.None">
      <summary>È necessario utilizzare le opzioni di formattazione predefinite.Questo valore rappresenta lo stile predefinito per i metodi <see cref="M:System.DateTime.Parse(System.String)" />, <see cref="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)" /> e <see cref="M:System.DateTime.TryParse(System.String,System.DateTime@)" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.RoundtripKind">
      <summary>Il campo <see cref="T:System.DateTimeKind" /> di una data viene mantenuto quando un oggetto <see cref="T:System.DateTime" /> viene convertito in una stringa utilizzando l'identificatore di formato standard "o" oppure "r" e la stringa viene quindi riconvertita in un oggetto <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="T:System.Globalization.NumberStyles">
      <summary>Determina gli stili consentiti negli argomenti di stringa numerici passati ai metodi Parse e TryParse dei tipi numerici integrali e a virgola mobile.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowCurrencySymbol">
      <summary>Indica che la stringa numerica può contenere un simbolo di valuta.I simboli di valuta validi sono determinati dalla proprietà <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowDecimalPoint">
      <summary>Indica che nella stringa numerica può essere presente un separatore decimale.Se il valore <see cref="T:System.Globalization.NumberStyles" /> include il flag <see cref="F:System.Globalization.NumberStyles.AllowCurrencySymbol" /> e la stringa analizzata include un simbolo di valuta, il carattere del separatore decimale è determinato dalla proprietà <see cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />.In caso contrario, il carattere separatore dei decimali è determinato dalla proprietà <see cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowExponent">
      <summary>Indica che nella stringa numerica può essere presente un simbolo di esponente.Il flag <see cref="F:System.Globalization.NumberStyles.AllowExponent" /> consente alla stringa analizzata di contenere un esponente che inizia con il carattere "E" o "e", seguito da un segno positivo o un segno negativo facoltativo e un Integer.In altre parole, il flag analizza correttamente stringhe nel formato nnnExx, nnnE+xx e nnnE-xx.Non sono consentiti separatori o segni decimali nel significando o nella mantissa; per consentire l'analisi di tali elementi nella stringa, utilizzare i flag <see cref="F:System.Globalization.NumberStyles.AllowDecimalPoint" /> e <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" />, oppure uno stile composito che includa tali flag specifici.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowHexSpecifier">
      <summary>Indica che la stringa numerica rappresenta un valore esadecimale.I valori esadecimali validi includono le cifre numeriche 0-9 e le cifre esadecimali A-F e a-f.Le stringhe analizzate con questo stile non possono essere precedute dal prefisso "0x" o "&amp;h".Una stringa analizzata con lo stile <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> verrà sempre interpretata come valore esadecimale.Gli unici altri flag che possono essere combinati con <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> sono <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" /> e <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" />.L'enumerazione <see cref="T:System.Globalization.NumberStyles" /> include uno stile composto, <see cref="F:System.Globalization.NumberStyles.HexNumber" />, costituito da tutti e tre i flag.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowLeadingSign">
      <summary>Indica che nella stringa numerica può essere presente un segno iniziale.I caratteri validi per i segni iniziali sono determinati dalle proprietà <see cref="P:System.Globalization.NumberFormatInfo.PositiveSign" /> e <see cref="P:System.Globalization.NumberFormatInfo.NegativeSign" />.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowLeadingWhite">
      <summary>Indica che nella stringa analizzata può essere presente un carattere di spazio iniziale.I caratteri di spazio validi sono associati ai codici Unicode U+0009, U+000A, U+000B, U+000C, U+000D e U+0020.Notare che si tratta di un sottoinsieme dei caratteri per i quali il metodo <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> restituisce true.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowParentheses">
      <summary>Indica che nella stringa numerica può essere presente una coppia di parentesi che racchiude un numero.Le parentesi indicano che la stringa da analizzare rappresenta un numero negativo.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowThousands">
      <summary>Indica che nella stringa numerica possono essere presenti separatori di gruppo, ad esempio simboli di separazione tra le centinaia e le migliaia.Se il valore <see cref="T:System.Globalization.NumberStyles" /> include il flag <see cref="F:System.Globalization.NumberStyles.AllowCurrencySymbol" /> e la stringa da analizzare include un simbolo di valuta, il carattere separatore di gruppi valido viene determinato dalla proprietà <see cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" /> e il numero di cifre in ogni gruppo viene determinato dalla proprietà <see cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />.In caso contrario, il carattere separatore dei decimali valido è determinato dalla proprietà <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" /> e il numero di cifre in ciascun gruppo dalla proprietà <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowTrailingSign">
      <summary>Indica che nella stringa numerica può essere presente un segno finale.I caratteri validi per i segni finali sono determinati dalle proprietà <see cref="P:System.Globalization.NumberFormatInfo.PositiveSign" /> e <see cref="P:System.Globalization.NumberFormatInfo.NegativeSign" />.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowTrailingWhite">
      <summary>Indica che nella stringa analizzata possono essere presenti caratteri di spazio finale.I caratteri di spazio validi sono associati ai codici Unicode U+0009, U+000A, U+000B, U+000C, U+000D e U+0020.Notare che si tratta di un sottoinsieme dei caratteri per i quali il metodo <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> restituisce true.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Any">
      <summary>Indica che vengono utilizzati tutti gli stili, ad eccezione di <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />.Si tratta di uno stile di numero composto.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Currency">
      <summary>Indica che vengono utilizzati tutti gli stili, ad eccezione di <see cref="F:System.Globalization.NumberStyles.AllowExponent" /> e <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />.Si tratta di uno stile di numero composto.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Float">
      <summary>Indica che vengono utilizzati gli stili <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" />, <see cref="F:System.Globalization.NumberStyles.AllowDecimalPoint" /> e <see cref="F:System.Globalization.NumberStyles.AllowExponent" />.Si tratta di uno stile di numero composto.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.HexNumber">
      <summary>Indica che vengono utilizzati gli stili <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" /> e <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />.Si tratta di uno stile di numero composto.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Integer">
      <summary>Indica che vengono utilizzati gli stili <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" /> e <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" />.Si tratta di uno stile di numero composto.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.None">
      <summary>Indica che nella stringa analizzata non può essere presente alcun elemento di stile, ad esempio spazio iniziale o finale, separatori delle migliaia o separatore decimale.La stringa da analizzare deve essere composta unicamente da cifre decimali integrali.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Number">
      <summary>Indica che vengono utilizzati gli stili <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingSign" />, <see cref="F:System.Globalization.NumberStyles.AllowDecimalPoint" /> e <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.Si tratta di uno stile di numero composto.</summary>
    </member>
    <member name="T:System.Globalization.TimeSpanStyles">
      <summary>Definisce le opzioni di formattazione per la personalizzazione delle modalità di analisi di stringa utilizzate dai metodi <see cref="Overload:System.TimeSpan.ParseExact" /> e <see cref="Overload:System.TimeSpan.TryParseExact" />.</summary>
    </member>
    <member name="F:System.Globalization.TimeSpanStyles.AssumeNegative">
      <summary>Indica che l'input viene sempre interpretato come un intervallo di tempo negativo.</summary>
    </member>
    <member name="F:System.Globalization.TimeSpanStyles.None">
      <summary>Indica che l'input viene interpretato come un intervallo di tempo negativo solo se è presente un segno negativo.</summary>
    </member>
    <member name="T:System.IO.DirectoryNotFoundException">
      <summary>Eccezione che viene generata quando non è possibile individuare parte di un file o di una directory.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.DirectoryNotFoundException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.DirectoryNotFoundException" /> con la relativa stringa di messaggio impostata su un messaggio fornito dal sistema e il relativo HRESULT impostato su COR_E_DIRECTORYNOTFOUND.</summary>
    </member>
    <member name="M:System.IO.DirectoryNotFoundException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.DirectoryNotFoundException" /> con la relativa stringa di messaggio impostata su <paramref name="message" /> e il relativo HRESULT impostato su COR_E_DIRECTORYNOTFOUND.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore.Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile.È necessario che il chiamante del costruttore assicuri che la stringa sia stata localizzata per le impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.IO.DirectoryNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.IO.DirectoryNotFoundException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="innerException">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="innerException" /> non è null, l'eccezione corrente viene generata in un blocco catch in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.IO.FileLoadException">
      <summary>Eccezione che viene generata quando un assembly gestito viene individuato ma non può essere caricato.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.FileLoadException" />, impostando la proprietà <see cref="P:System.Exception.Message" /> della nuova istanza su un messaggio fornito dal sistema che descrive l'errore, ad esempio "Impossibile caricare il file specificato". Il messaggio viene visualizzato nelle impostazioni cultura correnti del sistema.</summary>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.FileLoadException" /> con il messaggio di errore specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore.Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile.È necessario che il chiamante del costruttore assicuri che la stringa sia stata localizzata per le impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor(System.String,System.Exception)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.IO.FileLoadException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore.Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile.È necessario che il chiamante del costruttore assicuri che la stringa sia stata localizzata per le impostazioni cultura correnti del sistema.</param>
      <param name="inner">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="inner" /> non è null, l'eccezione corrente verrà generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.FileLoadException" /> con un messaggio di errore specificato e il nome del file che non è possibile caricare.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore.Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile.È necessario che il chiamante del costruttore assicuri che la stringa sia stata localizzata per le impostazioni cultura correnti del sistema.</param>
      <param name="fileName">Oggetto <see cref="T:System.String" /> contenente il nome del file che non è stato caricato. </param>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.FileLoadException" /> con un messaggio di errore specificato, il nome del file che non è stato caricato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore.Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile.È necessario che il chiamante del costruttore assicuri che la stringa sia stata localizzata per le impostazioni cultura correnti del sistema.</param>
      <param name="fileName">Oggetto <see cref="T:System.String" /> contenente il nome del file che non è stato caricato. </param>
      <param name="inner">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="inner" /> non è null, l'eccezione corrente verrà generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="P:System.IO.FileLoadException.FileName">
      <summary>Ottiene il nome del file che ha causato questa eccezione.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che contiene il nome del file con l'immagine non valida, oppure un riferimento null se nessun nome di file è stato passato al costruttore per l'istanza corrente.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.FileLoadException.Message">
      <summary>Ottiene il messaggio di errore e il nome del file che ha causato questa eccezione.</summary>
      <returns>Stringa che contiene il messaggio di errore e il nome del file che ha causato questa eccezione.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.FileLoadException.ToString">
      <summary>Restituisce il nome completo dell'eccezione corrente ed eventualmente il messaggio di errore, il nome dell'eccezione interna e l'analisi dello stack.</summary>
      <returns>Stringa contenente il nome completo di questa eccezione ed eventualmente il messaggio di errore, il nome dell'eccezione interna e l'analisi dello stack, in base al costruttore <see cref="T:System.IO.FileLoadException" /> utilizzato.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.IO.FileNotFoundException">
      <summary>Eccezione generata quando il tentativo di accesso a un file non esistente sul disco non riesce.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.FileNotFoundException" /> con la relativa stringa di messaggio impostata su un messaggio fornito dal sistema e il relativo HRESULT impostato su COR_E_FILENOTFOUND.</summary>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.FileNotFoundException" /> con la relativa stringa di messaggio impostata su <paramref name="message" /> e HRESULT impostato su COR_E_EFILENOTFOUND.</summary>
      <param name="message">Descrizione dell'errore.Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile.È necessario che il chiamante del costruttore assicuri che la stringa sia stata localizzata per le impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.FileNotFoundException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Descrizione dell'errore.Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile.È necessario che il chiamante del costruttore assicuri che la stringa sia stata localizzata per le impostazioni cultura correnti del sistema.</param>
      <param name="innerException">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="innerException" /> non è null, l'eccezione corrente viene generata in un blocco catch in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.FileNotFoundException" /> con la relativa stringa di messaggio impostata su <paramref name="message" />, specificando il nome del file non trovato, e HRESULT impostato su COR_E_EFILENOTFOUND.</summary>
      <param name="message">Descrizione dell'errore.Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile.È necessario che il chiamante del costruttore assicuri che la stringa sia stata localizzata per le impostazioni cultura correnti del sistema.</param>
      <param name="fileName">Nome completo del file con l'immagine non valida. </param>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor(System.String,System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.FileNotFoundException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="fileName">Nome completo del file con l'immagine non valida. </param>
      <param name="innerException">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="innerException" /> non è null, l'eccezione corrente viene generata in un blocco catch in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="P:System.IO.FileNotFoundException.FileName">
      <summary>Recupera il nome del file non trovato.</summary>
      <returns>Nome del file, o null nel caso in cui non sia stato passato alcun nome di file al costruttore per questa istanza.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.FileNotFoundException.Message">
      <summary>Recupera il messaggio di errore in cui viene spiegato il motivo dell'eccezione.</summary>
      <returns>Messaggio di errore.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.FileNotFoundException.ToString">
      <summary>Restituisce il nome completo di questa eccezione ed eventualmente il messaggio di errore, il nome dell'eccezione interna e l'analisi dello stack.</summary>
      <returns>Nome completo di questa eccezione ed eventualmente il messaggio di errore, il nome dell'eccezione interna e la traccia dello stack.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.IO.IOException">
      <summary>Eccezione generata quando si verifica un errore di I/O.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IO.IOException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.IOException" /> con la relativa stringa di messaggio impostata su una stringa vuota (""), HRESULT impostato su COR_E_IO e l'eccezione interna impostata su un riferimento null.</summary>
    </member>
    <member name="M:System.IO.IOException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.IOException" /> con la relativa stringa di messaggio impostata su <paramref name="message" />, HRESULT impostato su COR_E_IO e l'eccezione interna impostata su null.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore.Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile.È necessario che il chiamante del costruttore assicuri che la stringa sia stata localizzata per le impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.IO.IOException.#ctor(System.String,System.Exception)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.IO.IOException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="innerException">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="innerException" /> non è null, l'eccezione corrente viene generata in un blocco catch in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="M:System.IO.IOException.#ctor(System.String,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.IOException" /> con la relativa stringa di messaggio impostata su <paramref name="message" /> e HRESULT definito dall'utente.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore.Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile.È necessario che il chiamante del costruttore assicuri che la stringa sia stata localizzata per le impostazioni cultura correnti del sistema.</param>
      <param name="hresult">Numero intero che identifica l'errore che si è verificato. </param>
    </member>
    <member name="T:System.IO.PathTooLongException">
      <summary>Eccezione che viene generata quando un percorso o un nome di file supera la lunghezza massima definita dal sistema.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.PathTooLongException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.PathTooLongException" /> con HRESULT impostato su COR_E_PATHTOOLONG.</summary>
    </member>
    <member name="M:System.IO.PathTooLongException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.PathTooLongException" /> con la relativa stringa di messaggio impostata su <paramref name="message" /> e HRESULT impostato su COR_E_PATHTOOLONG.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore.Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile.È necessario che il chiamante del costruttore assicuri che la stringa sia stata localizzata per le impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.IO.PathTooLongException.#ctor(System.String,System.Exception)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.IO.PathTooLongException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore.Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile.È necessario che il chiamante del costruttore assicuri che la stringa sia stata localizzata per le impostazioni cultura correnti del sistema.</param>
      <param name="innerException">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="innerException" /> non è null, l'eccezione corrente viene generata in un blocco catch in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Reflection.AssemblyCompanyAttribute">
      <summary>Definisce un attributo personalizzato del nome della società per un manifesto assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyCompanyAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyCompanyAttribute" />.</summary>
      <param name="company">Informazioni relative al nome della società. </param>
    </member>
    <member name="P:System.Reflection.AssemblyCompanyAttribute.Company">
      <summary>Ottiene le informazioni relative al nome della società.</summary>
      <returns>Stringa contenente il nome della società.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyConfigurationAttribute">
      <summary>Specifica la configurazione di compilazione, ad esempio finale o di debug, per un assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyConfigurationAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyConfigurationAttribute" />.</summary>
      <param name="configuration">Configurazione dell'assembly. </param>
    </member>
    <member name="P:System.Reflection.AssemblyConfigurationAttribute.Configuration">
      <summary>Ottiene le informazioni sulla configurazione dell'assembly.</summary>
      <returns>Stringa contenente le informazioni sulla configurazione dell'assembly.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyCopyrightAttribute">
      <summary>Definisce un attributo personalizzato del copyright per un manifesto assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyCopyrightAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyCopyrightAttribute" />.</summary>
      <param name="copyright">Informazioni sul copyright. </param>
    </member>
    <member name="P:System.Reflection.AssemblyCopyrightAttribute.Copyright">
      <summary>Ottiene le informazioni sul copyright.</summary>
      <returns>Stringa contenente le informazioni sul copyright.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyCultureAttribute">
      <summary>Specifica le impostazioni cultura supportate dall'assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyCultureAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyCultureAttribute" /> con le impostazioni cultura supportate dall'assembly di cui definire l'attributo.</summary>
      <param name="culture">Impostazioni cultura supportate dall'assembly con attributi. </param>
    </member>
    <member name="P:System.Reflection.AssemblyCultureAttribute.Culture">
      <summary>Ottiene le impostazioni cultura supportate dall'assembly con attributi.</summary>
      <returns>Stringa contenente il nome delle impostazioni cultura supportate.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyDefaultAliasAttribute">
      <summary>Definisce un alias descrittivo predefinito per un manifesto assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyDefaultAliasAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyDefaultAliasAttribute" />.</summary>
      <param name="defaultAlias">Informazioni sull'alias predefinito dell'assembly. </param>
    </member>
    <member name="P:System.Reflection.AssemblyDefaultAliasAttribute.DefaultAlias">
      <summary>Ottiene le informazioni sull'alias predefinito.</summary>
      <returns>Stringa contenente le informazioni sull'alias predefinito.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyDelaySignAttribute">
      <summary>Specifica che l'assembly non è stato firmato completamente quando è stato creato.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyDelaySignAttribute.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyDelaySignAttribute" />.</summary>
      <param name="delaySign">true se la funzionalità rappresentata da questo attributo è attivata; in caso contrario, false. </param>
    </member>
    <member name="P:System.Reflection.AssemblyDelaySignAttribute.DelaySign">
      <summary>Ottiene un valore che indica lo stato dell'attributo.</summary>
      <returns>true se l'assembly è stato compilato con firma posticipata; in caso contrario, false.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyDescriptionAttribute">
      <summary>Fornisce una descrizione di testo per un assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyDescriptionAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyDescriptionAttribute" />.</summary>
      <param name="description">Descrizione dell'assembly. </param>
    </member>
    <member name="P:System.Reflection.AssemblyDescriptionAttribute.Description">
      <summary>Ottiene le informazioni sulla descrizione dell'assembly.</summary>
      <returns>Stringa contenente la descrizione dell'assembly.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyFileVersionAttribute">
      <summary>Indica a un compilatore di utilizzare un numero di versione specifico per la risorsa della versione del file Win32.Non è necessario che la versione del file Win32 e il numero di versione dell'assembly corrispondano.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyFileVersionAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyFileVersionAttribute" />, specificando la versione del file.</summary>
      <param name="version">Versione del file. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> è null. </exception>
    </member>
    <member name="P:System.Reflection.AssemblyFileVersionAttribute.Version">
      <summary>Ottiene il nome della risorsa della versione del file Win32.</summary>
      <returns>Stringa contenente il nome della risorsa della versione di file.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyFlagsAttribute">
      <summary>Specifica una combinazione bit per bit di flag <see cref="T:System.Reflection.AssemblyNameFlags" /> per un assembly, indicando le opzioni del compilatore JIT (Just-In-Time), se è possibile assegnare una nuova destinazione all'assembly e se questo dispone di una chiave pubblica completa o in formato token.La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> con la combinazione specificata di flag <see cref="T:System.Reflection.AssemblyNameFlags" />.</summary>
      <param name="assemblyFlags">Combinazione bit per bit di flag <see cref="T:System.Reflection.AssemblyNameFlags" /> che rappresenta le opzioni del compilatore JIT, la durata, se è possibile assegnare una nuova destinazione all'assembly e se questo dispone di una chiave pubblica completa o in formato token.</param>
    </member>
    <member name="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
      <summary>Ottiene un valore intero che rappresenta la combinazione di flag <see cref="T:System.Reflection.AssemblyNameFlags" /> specificati alla creazione dell'istanza di questo attributo.</summary>
      <returns>Valore intero che rappresenta una combinazione bit per bit di flag <see cref="T:System.Reflection.AssemblyNameFlags" />.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyInformationalVersionAttribute">
      <summary>Definisce informazioni aggiuntive sulla versione per un manifesto di assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyInformationalVersionAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyInformationalVersionAttribute" />.</summary>
      <param name="informationalVersion">Informazioni sulla versione dell'assembly. </param>
    </member>
    <member name="P:System.Reflection.AssemblyInformationalVersionAttribute.InformationalVersion">
      <summary>Ottiene le informazioni sulla versione.</summary>
      <returns>Stringa contenente le informazioni sulla versione.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyKeyFileAttribute">
      <summary>Specifica il nome di un file che contiene la coppia di chiavi utilizzata per generare un nome sicuro.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyKeyFileAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe AssemblyKeyFileAttribute con il nome del file che contiene la coppia di chiavi per generare un nome sicuro per l'assembly di cui definire l'attributo.</summary>
      <param name="keyFile">Nome del file che contiene la coppia di chiavi. </param>
    </member>
    <member name="P:System.Reflection.AssemblyKeyFileAttribute.KeyFile">
      <summary>Ottiene il nome del file che contiene la coppia di chiavi utilizzata per generare un nome sicuro per l'assembly con attributi.</summary>
      <returns>Stringa che contiene il nome del file che contiene la coppia di chiavi.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyKeyNameAttribute">
      <summary>Specifica il nome di un contenitore di chiavi all'interno del CSP che contiene la coppia di chiavi utilizzata per generare un nome sicuro.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyKeyNameAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyKeyNameAttribute" /> con il nome del contenitore che contiene la coppia di chiavi per generare un nome sicuro per l'assembly di cui definire l'attributo.</summary>
      <param name="keyName">Nome del contenitore che contiene la coppia di chiavi. </param>
    </member>
    <member name="P:System.Reflection.AssemblyKeyNameAttribute.KeyName">
      <summary>Ottiene il nome del contenitore che contiene la coppia di chiavi utilizzata per generare un nome sicuro per l'assembly con attributi.</summary>
      <returns>Stringa che contiene il nome del contenitore che contiene la coppia di chiavi rilevante.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyMetadataAttribute">
      <summary>Definisce una coppia di metadati chiave/valore per l'assembly decorato.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyMetadataAttribute.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyMetadataAttribute" /> utilizzando la chiave e il valore dei metadati specificati.</summary>
      <param name="key">Chiave dei metadati.</param>
      <param name="value">Valore dei metadati.</param>
    </member>
    <member name="P:System.Reflection.AssemblyMetadataAttribute.Key">
      <summary>Ottiene la chiave dei metadati.</summary>
      <returns>Chiave dei metadati.</returns>
    </member>
    <member name="P:System.Reflection.AssemblyMetadataAttribute.Value">
      <summary>Ottiene il valore dei metadati.</summary>
      <returns>Valore dei metadati.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyNameFlags">
      <summary>Fornisce informazioni su un riferimento <see cref="T:System.Reflection.Assembly" />.</summary>
    </member>
    <member name="F:System.Reflection.AssemblyNameFlags.None">
      <summary>Specifica che nessun flag è attivo.</summary>
    </member>
    <member name="F:System.Reflection.AssemblyNameFlags.PublicKey">
      <summary>Specifica che una chiave pubblica viene formata dalla chiave pubblica completa invece che dal token.</summary>
    </member>
    <member name="F:System.Reflection.AssemblyNameFlags.Retargetable">
      <summary>Specifica che l'assembly può essere destinato nuovamente in fase di esecuzione a un assembly di un altro editore.Questo valore supporta l'infrastruttura .NET Framework e non è possibile utilizzarlo direttamente dal codice.</summary>
    </member>
    <member name="T:System.Reflection.AssemblyProductAttribute">
      <summary>Definisce un attributo personalizzato del nome del prodotto per un manifesto assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyProductAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyProductAttribute" />.</summary>
      <param name="product">Informazioni relative al nome del prodotto. </param>
    </member>
    <member name="P:System.Reflection.AssemblyProductAttribute.Product">
      <summary>Ottiene le informazioni relative al nome del prodotto.</summary>
      <returns>Stringa contenente il nome del prodotto.</returns>
    </member>
    <member name="T:System.Reflection.AssemblySignatureKeyAttribute">
      <summary>Fornisce la migrazione da una precedente chiave con nome sicuro più semplice a una chiave più grande con un algoritmo hash più complesso.</summary>
    </member>
    <member name="M:System.Reflection.AssemblySignatureKeyAttribute.#ctor(System.String,System.String)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Reflection.AssemblySignatureKeyAttribute" /> utilizzando la chiave pubblica specificata e la controfirma.</summary>
      <param name="publicKey">Chiave pubblica o di identità.</param>
      <param name="countersignature">La controfirma, ovvero la parte della chiave di firma della chiave con nome sicuro.</param>
    </member>
    <member name="P:System.Reflection.AssemblySignatureKeyAttribute.Countersignature">
      <summary>Ottiene la controfirma per il nome sicuro per questo assembly.</summary>
      <returns>La controfirma per questa chiave di firma.</returns>
    </member>
    <member name="P:System.Reflection.AssemblySignatureKeyAttribute.PublicKey">
      <summary>Ottiene la chiave pubblica per il nome sicuro utilizzato per firmare l'assembly.</summary>
      <returns>Chiave pubblica per questo assembly.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyTitleAttribute">
      <summary>Specifica una descrizione per un assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyTitleAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyTitleAttribute" />.</summary>
      <param name="title">Titolo dell'assembly. </param>
    </member>
    <member name="P:System.Reflection.AssemblyTitleAttribute.Title">
      <summary>Ottiene le informazioni relative al titolo dell'assembly.</summary>
      <returns>Titolo dell'assembly. </returns>
    </member>
    <member name="T:System.Reflection.AssemblyTrademarkAttribute">
      <summary>Definisce un attributo personalizzato del marchio per un manifesto assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyTrademarkAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyTrademarkAttribute" />.</summary>
      <param name="trademark">Informazioni relative al marchio. </param>
    </member>
    <member name="P:System.Reflection.AssemblyTrademarkAttribute.Trademark">
      <summary>Ottiene le informazioni relative al marchio.</summary>
      <returns>Oggetto String contenente le informazioni relative al marchio.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyVersionAttribute">
      <summary>Specifica la versione dell'assembly di cui definire l'attributo.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe AssemblyVersionAttribute con il numero di versione dell'assembly di cui definire l'attributo.</summary>
      <param name="version">Numero di versione dell'assembly con attributi. </param>
    </member>
    <member name="P:System.Reflection.AssemblyVersionAttribute.Version">
      <summary>Ottiene il numero di versione dell'assembly con attributi.</summary>
      <returns>Stringa che contiene il numero di versione dell'assembly.</returns>
    </member>
    <member name="T:System.Reflection.DefaultMemberAttribute">
      <summary>Definisce il membro di un tipo che è il membro predefinito utilizzato dal metodo <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. </summary>
    </member>
    <member name="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Reflection.DefaultMemberAttribute" />.</summary>
      <param name="memberName">Oggetto String che contiene il nome del membro da richiamare.Può essere un costruttore, un metodo, una proprietà o un campo.È necessario specificare un attributo di chiamata appropriato quando viene richiamato il membro.Il membro predefinito di una classe può essere specificato passando un oggetto String vuoto come nome del membro.Il membro predefinito di un tipo è contrassegnato con l'attributo personalizzato DefaultMemberAttribute o contrassegnato in COM nel modo consueto. </param>
    </member>
    <member name="P:System.Reflection.DefaultMemberAttribute.MemberName">
      <summary>Ottiene il nome dall'attributo.</summary>
      <returns>Stringa che rappresenta il nome del membro.</returns>
    </member>
    <member name="T:System.Reflection.ProcessorArchitecture">
      <summary>Identifica il processore e i bit per parola della piattaforma di destinazione di un file eseguibile.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.Amd64">
      <summary>Solo processori AMD a 64 bit.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.Arm">
      <summary>Un processore ARM.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.IA64">
      <summary>Solo processore Intel a 64 bit.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.MSIL">
      <summary>Neutro rispetto al processore e i bit per parola.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.None">
      <summary>Combinazione sconosciuta o non specificata di processore e bit per parola.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.X86">
      <summary>Processore Intel a 32 bit, nativo o in Windows in ambiente Windows su una piattaforma a 64 bit (WOW64).</summary>
    </member>
    <member name="T:System.Runtime.GCLargeObjectHeapCompactionMode">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive] Indica se la successiva operazione di Garbage Collection bloccante comprime l'heap degli oggetti grandi (LOH). </summary>
    </member>
    <member name="F:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce">
      <summary>L'heap degli oggetti grandi (LOH) verrà compresso durante la successiva operazione di Garbage Collection bloccante di generazione 2. </summary>
    </member>
    <member name="F:System.Runtime.GCLargeObjectHeapCompactionMode.Default">
      <summary>L'heap degli oggetti grandi (LOH) non viene compattato.</summary>
    </member>
    <member name="T:System.Runtime.GCLatencyMode">
      <summary>Regola il momento in cui il Garbage Collector accede all'applicazione.   </summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.Batch">
      <summary>Disabilita la concorrenza della procedura di Garbage Collection e recupera gli oggetti in una chiamata batch.Si tratta della modalità più intrusiva.</summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.Interactive">
      <summary>Abilita la simultaneità della procedura di Garbage Collection e recupera gli oggetti mentre l'applicazione è in esecuzione.Si tratta della modalità predefinita per la procedura di Garbage Collection su una workstation ed è meno intrusiva di <see cref="F:System.Runtime.GCLatencyMode.Batch" />.È un compromesso tra capacità di risposta e velocità effettiva.</summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.LowLatency">
      <summary>Abilita una procedura di Garbage Collection che è più conservativa nel recuperare oggetti.Le raccolte complete si verificano solo se il sistema è in condizioni di pressione della memoria mentre le raccolte generazione 0 e generazione 1 possono verificarsi con maggiore frequenza.</summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.SustainedLowLatency">
      <summary>Abilita la procedura di Garbage Collection che tenta di ridurre la latenza in un periodo prolungato.L'agente di raccolta tenta di eseguire solo le raccolte di generazione 0, generazione 1 e le raccolte di generazione 2 simultanee.Il blocco completo delle raccolte può ancora verificarsi se il sistema è in condizioni di pressione della memoria.</summary>
    </member>
    <member name="T:System.Runtime.GCSettings">
      <summary>Specifica le impostazioni di Garbage Collection per il processo corrente. </summary>
    </member>
    <member name="P:System.Runtime.GCSettings.IsServerGC">
      <summary>Ottiene un valore che indica se la procedura di Garbage Collection del server è abilitata.</summary>
      <returns>true se la procedura di Garbage Collection del server è attivata; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive] Ottiene o imposta un valore che indica se un'operazione completa di Garbage Collection bloccante comprime l'heap degli oggetti grandi (LOH). </summary>
      <returns>Uno dei valori di enumerazione che indica se un'operazione completa di Garbage Collection bloccante comprime l'heap degli oggetti grandi (LOH). </returns>
    </member>
    <member name="P:System.Runtime.GCSettings.LatencyMode">
      <summary>Ottiene o imposta la modalità di latenza corrente per la procedura di Garbage Collection.</summary>
      <returns>Uno dei valori di enumerazione che specifica la modalità di latenza. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il <see cref="P:System.Runtime.GCSettings.LatencyMode" /> proprietà viene impostata su un valore non valido. -oppure-Il <see cref="P:System.Runtime.GCSettings.LatencyMode" /> proprietà non può essere impostata su <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" />. </exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute">
      <summary>Specifica il nome della proprietà che ha accesso al campo con attributi.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe AccessedThroughPropertyAttribute con il nome della proprietà utilizzata per accedere al campo con attributi.</summary>
      <param name="propertyName">Nome della proprietà utilizzata per accedere al campo con attributi. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.PropertyName">
      <summary>Ottiene il nome della proprietà utilizzata per accedere al campo con attributi.</summary>
      <returns>Nome della proprietà utilizzata per accedere al campo con attributi.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.AsyncStateMachineAttribute">
      <summary>Indica se un metodo è contrassegnato con il modificatore Async (Visual Basic) o async (Riferimenti per C#).</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncStateMachineAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.AsyncStateMachineAttribute" />.</summary>
      <param name="stateMachineType">Oggetto tipo per il tipo sottostante della macchina a stati sottostante utilizzato per implementare un metodo della macchina a stati.</param>
    </member>
    <member name="T:System.Runtime.CompilerServices.CallerFilePathAttribute">
      <summary>Consente di ottenere il percorso completo del file di origine contenente il chiamante.Si tratta del percorso del file al momento della compilazione.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CallerFilePathAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.CallerFilePathAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.CallerLineNumberAttribute">
      <summary>Consente di ottenere il numero di riga nel file di origine nel quale viene chiamato il metodo.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CallerLineNumberAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.CallerMemberNameAttribute">
      <summary>Consente di ottenere il metodo o il nome della proprietà del chiamante al metodo.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CallerMemberNameAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.CompilationRelaxationsAttribute">
      <summary>Controlla l'accuratezza del codice generato dal compilatore JIT di Common Language Runtime.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CompilationRelaxationsAttribute.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.CompilationRelaxationsAttribute" /> con gli allentamenti di compilazione specificati.</summary>
      <param name="relaxations">Allentamenti di compilazione. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.CompilationRelaxationsAttribute.CompilationRelaxations">
      <summary>Ottiene gli allentamenti di compilazione specificati quando è stato creato l'oggetto corrente.</summary>
      <returns>Allentamenti di compilazione specificati quando è stato creato l'oggetto corrente.Utilizzare l'enumerazione <see cref="T:System.Runtime.CompilerServices.CompilationRelaxations" /> con la proprietà <see cref="P:System.Runtime.CompilerServices.CompilationRelaxationsAttribute.CompilationRelaxations" />.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.CompilerGeneratedAttribute">
      <summary>Distingue un elemento generato dal compilatore da un elemento generato dall'utente.La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CompilerGeneratedAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.CompilerGeneratedAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
      <summary>Consente ai compilatori di allegare dinamicamente campi dell'oggetto agli oggetti gestiti.</summary>
      <typeparam name="TKey">Il tipo di riferimento al quale è associato il campo. </typeparam>
      <typeparam name="TValue">Il tipo del campo.Deve essere un tipo di riferimento.</typeparam>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
      <summary>Aggiunge una chiave alla tabella.</summary>
      <param name="key">Chiave da aggiungere.<paramref name="key" /> rappresenta l'oggetto a cui è associata la proprietà.</param>
      <param name="value">Valore della proprietà della chiave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> esiste già.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Finalize">
      <summary>Assicura che le risorse vengano liberate e altre operazioni di pulitura vengono eseguite quando il garbage collector recupera la <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> oggetto. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
      <summary>Ricerca atomicamente una chiave specificata nella tabella e restituisce il valore corrispondente.Se la chiave non esiste nella tabella, il metodo richiama il costruttore predefinito della classe che rappresenta il valore della tabella per creare un valore che viene associato alla chiave specificata.</summary>
      <returns>Valore che corrisponde a <paramref name="key" />, se <paramref name="key" /> esiste già nella tabella; in caso contrario, nuovo valore creato dal costruttore predefinito della classe definita dal parametro di tipo generico <paramref name="TValue" />.</returns>
      <param name="key">Chiave da ricercare.<paramref name="key" /> rappresenta l'oggetto a cui è associata la proprietà.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
      <exception cref="T:System.MissingMethodException">Nell'API.NET per le applicazioni Windows o nella Libreria di classi portabile, rilevare piuttosto l'eccezione della classe di base <see cref="T:System.MissingMemberException" />.La classe che rappresenta il valore della tabella non definisce un costruttore predefinito.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)">
      <summary>Ricerca atomicamente una chiave specificata nella tabella e restituisce il valore corrispondente.Se la chiave non esiste nella tabella, il metodo richiama un metodo di callback per creare un valore che viene associato alla chiave specificata.</summary>
      <returns>Il valore associato a <paramref name="key" />, se <paramref name="key" /> esiste già nella tabella; in caso contrario, il nuovo valore restituito dal delegato <paramref name="createValueCallback" />.</returns>
      <param name="key">Chiave da ricercare.<paramref name="key" /> rappresenta l'oggetto a cui è associata la proprietà.</param>
      <param name="createValueCallback">Un delegato a un metodo che può creare un valore per l'oggetto <paramref name="key" /> specificato.Dispone di un solo parametro di tipo <paramref name="TKey" />e restituisce un valore di tipo <paramref name="TValue" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> o <paramref name="createValueCallback" /> è null.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
      <summary>Rimuove una chiave e il relativo valore dalla tabella.</summary>
      <returns>true se la chiave viene trovata e rimossa; in caso contrario false.</returns>
      <param name="key">Chiave da rimuovere. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
      <summary>Ottiene il valore della chiave specificata.</summary>
      <returns>true se viene trovato l'oggetto <paramref name="key" />; in caso contrario, false.</returns>
      <param name="key">La chiave che rappresenta un oggetto con una proprietà associata.</param>
      <param name="value">Quando viene restituito, il metodo contiene il valore della proprietà associata.Se <paramref name="key" /> non viene trovato, <paramref name="value" /> contiene il valore predefinito.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback">
      <summary>Rappresenta un metodo che crea un valore non predefinito da aggiungere come parte di una coppia chiave/valore a un oggetto <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback.BeginInvoke(`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback.Invoke(`0)"></member>
    <member name="T:System.Runtime.CompilerServices.CustomConstantAttribute">
      <summary>Definisce il valore di una costante che un compilatore può rendere persistente per un parametro di campo o di metodo.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CustomConstantAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.CustomConstantAttribute" />. </summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.CustomConstantAttribute.Value">
      <summary>Ottiene il valore della costante archiviato da questo attributo.</summary>
      <returns>Valore della costante archiviato da questo attributo.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.DateTimeConstantAttribute">
      <summary>Rende persistente una costante <see cref="T:System.DateTime" /> a 8 byte per un campo o un parametro.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.DateTimeConstantAttribute.#ctor(System.Int64)">
      <summary>Inizializza una nuova istanza della classe DateTimeConstantAttribute con il numero dei segni di graduazione a 100 nanosecondi che rappresentano la data e l'ora dell'istanza.</summary>
      <param name="ticks">Numero dei segni di graduazione a 100 nanosecondi che rappresentano la data e l'ora dell'istanza. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.DateTimeConstantAttribute.Value">
      <summary>Ottiene il numero dei segni di graduazione a 100 nanosecondi che rappresentano la data e l'ora dell'istanza.</summary>
      <returns>Numero dei segni di graduazione a 100 nanosecondi che rappresentano la data e l'ora dell'istanza.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.DecimalConstantAttribute">
      <summary>Archivia il valore di una costante <see cref="T:System.Decimal" /> nei metadati.La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.Int32,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.DecimalConstantAttribute" /> con interi con segno specificati. </summary>
      <param name="scale">Fattore di scala alla potenza di 10 che indica il numero di cifre a destra del separatore decimale.I valori validi sono compresi tra 0 e 28 inclusi.</param>
      <param name="sign">Un valore pari a 0 indica un valore positivo, mentre un valore pari a 1 indica un valore negativo.</param>
      <param name="hi">32 bit alti della proprietà <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" /> a 96 bit.</param>
      <param name="mid">32 bit medi della proprietà <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" /> a 96 bit.</param>
      <param name="low">32 bit bassi della proprietà <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" /> a 96 bit.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.DecimalConstantAttribute" /> con interi senza segno specificati.</summary>
      <param name="scale">Fattore di scala alla potenza di 10 che indica il numero di cifre a destra del separatore decimale.I valori validi sono compresi tra 0 e 28 inclusi.</param>
      <param name="sign">Un valore pari a 0 indica un valore positivo, mentre un valore pari a 1 indica un valore negativo. </param>
      <param name="hi">32 bit alti della proprietà <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" /> a 96 bit. </param>
      <param name="mid">32 bit medi della proprietà <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" /> a 96 bit. </param>
      <param name="low">32 bit bassi della proprietà <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" /> a 96 bit. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scale" /> &gt; 28. </exception>
    </member>
    <member name="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value">
      <summary>Ottiene la costante decimale archiviata in questo attributo.</summary>
      <returns>Costante decimale archiviata in questo attributo.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.DisablePrivateReflectionAttribute">
      <summary>Indica che tutti i membri privati contenuti in tipi di un assembly non sono disponibili per la reflection. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.DisablePrivateReflectionAttribute.#ctor">
      <summary>Inizializza una nuova istanza del <see cref="T:System.Runtime.CompilerServices.DisablePrivateReflectionAttribute" /> classe. </summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.ExtensionAttribute">
      <summary>Indica che un metodo è un metodo di estensione o che una classe o un assembly contiene metodi di estensione.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ExtensionAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.ExtensionAttribute" />. </summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.FixedBufferAttribute">
      <summary>Indica che un campo deve essere considerato come un campo contenente un numero fisso di elementi del tipo primitivo specificato.La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.FixedBufferAttribute.#ctor(System.Type,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.FixedBufferAttribute" />. </summary>
      <param name="elementType">Tipo degli elementi contenuti nel buffer.</param>
      <param name="length">Numero di elementi contenuti nel buffer.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.FixedBufferAttribute.ElementType">
      <summary>Ottiene il tipo degli elementi contenuti nel buffer fisso. </summary>
      <returns>Tipo degli elementi.</returns>
    </member>
    <member name="P:System.Runtime.CompilerServices.FixedBufferAttribute.Length">
      <summary>Ottiene il numero di elementi contenuti nel buffer fisso. </summary>
      <returns>Numero di elementi contenuti nel buffer fisso.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.FormattableStringFactory">
      <summary>Fornisce un metodo statico per creare un oggetto <see cref="T:System.FormattableString" /> da una stringa in formato composito e dai relativi argomenti. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.FormattableStringFactory.Create(System.String,System.Object[])">
      <summary>Crea un'istanza di <see cref="T:System.FormattableString" /> da una stringa in formato composito e dai relativi argomenti. </summary>
      <returns>Oggetto che rappresenta la stringa in formato composito e i relativi argomenti. </returns>
      <param name="format">Stringa in formato composito. </param>
      <param name="arguments">Argomenti le cui rappresentazioni di stringa devono essere inserite nella stringa di risultato. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> è null. -oppure-<paramref name="arguments" /> è null. </exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.IndexerNameAttribute">
      <summary>Indica il nome che identifica un indicizzatore nei linguaggi di programmazione che non supportano direttamente gli indicizzatori.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IndexerNameAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.IndexerNameAttribute" />.</summary>
      <param name="indexerName">Nome dell'indicizzatore, come indicato ad altri linguaggi. </param>
    </member>
    <member name="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
      <summary>Specifica che i tipi che sono in genere visibili solo all'interno dall'assembly corrente possono essere visualizzati da un assembly specificato.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> con il nome dell'assembly Friend specificato. </summary>
      <param name="assemblyName">Nome di un assembly Friend.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
      <summary>Ottiene il nome dell'assembly Friend al quale vengono resi visibili tutti i tipi e i membri dei tipi contrassegnati con la parola chiave internal. </summary>
      <returns>Stringa che rappresenta il nome dell'assembly Friend.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.IsConst">
      <summary>Indica che per il tipo modificato è disponibile un modificatore const.La classe non può essere ereditata.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.IStrongBox">
      <summary>Definisce una proprietà per l'accesso al valore a cui fa riferimento un oggetto.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.CompilerServices.IStrongBox.Value">
      <summary>Ottiene o imposta il valore a cui fa riferimento un oggetto.</summary>
      <returns>Valore a cui fa riferimento l'oggetto.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.IsVolatile">
      <summary>Contrassegna un campo come volatile.La classe non può essere ereditata.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
      <summary>Indica se un metodo in Visual Basic è contrassegnato con il modificatore Iterator.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IteratorStateMachineAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute" />.</summary>
      <param name="stateMachineType">Oggetto tipo per il tipo sottostante della macchina a stati sottostante utilizzato per implementare un metodo della macchina a stati.</param>
    </member>
    <member name="T:System.Runtime.CompilerServices.MethodImplAttribute">
      <summary>Specifica i dettagli della modalità di implementazione di un metodo.La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.MethodImplAttribute.#ctor(System.Runtime.CompilerServices.MethodImplOptions)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.MethodImplAttribute" /> con il valore <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" /> specificato.</summary>
      <param name="methodImplOptions">Valore <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" /> che specifica le proprietà del metodo con attributi. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.MethodImplAttribute.Value">
      <summary>Ottiene il valore <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" /> che descrive il metodo con attributi.</summary>
      <returns>Valore di <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" /> che descrive il metodo con attributi.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.MethodImplOptions">
      <summary>Definisce i dettagli della modalità di implementazione di un metodo.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining">
      <summary>Il metodo dovrebbe essere sempre reso inline, se possibile.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.NoInlining">
      <summary>Impossibile rendere inline il metodo.L'operazione di inline rappresenta un'ottimizzazione per mezzo della quale la chiamata a un metodo viene sostituita con il corpo del metodo.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.NoOptimization">
      <summary>Il metodo non è ottimizzato dal compilatore JIT (Just-In-Time) o dalla generazione di codice nativo (vedere Ngen.exe) durante il debug di possibili problemi di generazione del codice.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.PreserveSig">
      <summary>La firma del metodo viene esportata esattamente come dichiarata.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.ReferenceAssemblyAttribute">
      <summary>Identifica un assembly come assembly di riferimento che contiene metadati, ma non codice eseguibile.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ReferenceAssemblyAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.ReferenceAssemblyAttribute" />. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ReferenceAssemblyAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.ReferenceAssemblyAttribute" /> utilizzando la descrizione specificata. </summary>
      <param name="description">Descrizione dell'assembly di riferimento. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.ReferenceAssemblyAttribute.Description">
      <summary>Ottiene la descrizione dell'assembly di riferimento.</summary>
      <returns>Descrizione dell'assembly di riferimento.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
      <summary>Specifica se incapsulare le eccezioni che non derivano dalla classe <see cref="T:System.Exception" /> con un oggetto <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" />.La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" />. </summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.WrapNonExceptionThrows">
      <summary>Ottiene o imposta un valore che indica se incapsulare le eccezioni che non derivano dalla classe <see cref="T:System.Exception" /> con un oggetto <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" />.</summary>
      <returns>true se le eccezioni che non derivano dalla classe <see cref="T:System.Exception" /> devono apparire incapsulate con un oggetto <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" />; in caso contrario false.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.RuntimeHelpers">
      <summary>Fornisce un insieme di proprietà e metodi statici che forniscono supporto per i compilatori.La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.EnsureSufficientExecutionStack">
      <summary>Assicura che lo spazio dello stack restante sia sufficiente per eseguire la funzione di .NET Framework media.</summary>
      <exception cref="T:System.InsufficientExecutionStackException">Lo spazio dello stack disponibile è insufficiente per eseguire la funzione di .NET Framework media.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(System.Object)">
      <summary>Viene utilizzato come funzione hash per un oggetto particolare ed è adatto per l'utilizzo in algoritmi e in strutture di dati che utilizzano i codici hash, quali una tabella hash.</summary>
      <returns>Codice hash per l'oggetto identificato dal parametro <paramref name="o" />.</returns>
      <param name="o">Oggetto per cui recuperare il codice hash. </param>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.GetObjectValue(System.Object)">
      <summary>Esegue la conversione boxing di un tipo di valore.</summary>
      <returns>Copia boxed di <paramref name="obj" /> se è una classe di valori. In caso contrario, <paramref name="obj" /> stesso.</returns>
      <param name="obj">Tipo di valore di cui eseguire la conversione boxing. </param>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.InitializeArray(System.Array,System.RuntimeFieldHandle)">
      <summary>Fornisce un modo rapido per inizializzare una matrice dai dati memorizzati in un modulo.</summary>
      <param name="array">Matrice da inizializzare. </param>
      <param name="fldHandle">Handle di campo che specifica il percorso dei dati utilizzati per inizializzare la matrice. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.RuntimeHelpers.OffsetToStringData">
      <summary>Ottiene l'offset, in byte, per i dati nella stringa specificata.</summary>
      <returns>Offset dei byte, dall'inizio dell'oggetto <see cref="T:System.String" /> al primo carattere nella stringa.</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(System.RuntimeTypeHandle)">
      <summary>Esegue un metodo del costruttore di classi specificato.</summary>
      <param name="type">Handle di tipo che specifica il metodo del costruttore di classi da eseguire. </param>
      <exception cref="T:System.TypeInitializationException">L'inizializzatore della classe genera un'eccezione. </exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.StateMachineAttribute">
      <summary>Consente di determinare se un metodo è un metodo della macchina a stati.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.StateMachineAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.StateMachineAttribute" />.</summary>
      <param name="stateMachineType">Oggetto tipo per il tipo sottostante della macchina a stati generato dal compilatore per implementare il metodo della macchina a stati.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.StateMachineAttribute.StateMachineType">
      <summary>Restituisce l'oggetto tipo per il tipo sottostante della macchina a stati generato dal compilatore per implementare il metodo della macchina a stati.</summary>
      <returns>Ottiene l'oggetto tipo per il tipo sottostante della macchina a stati generato dal compilatore per implementare il metodo della macchina a stati.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.StrongBox`1">
      <summary>Contiene un riferimento a un valore.</summary>
      <typeparam name="T">Tipo del valore a cui fa riferimento <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.CompilerServices.StrongBox`1.#ctor">
      <summary>Inizializza una nuova Cassaforte che può ricevere un valore in caso di utilizzo in una chiamata di riferimento.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.StrongBox`1.#ctor(`0)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.StrongBox`1" /> utilizzando il valore specificato. </summary>
      <param name="value">Valore a cui fa riferimento <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.CompilerServices.StrongBox`1.System#Runtime#CompilerServices#IStrongBox#Value">
      <summary>Ottiene o imposta il valore a cui fa riferimento <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />.</summary>
      <returns>Valore a cui fa riferimento <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />.</returns>
    </member>
    <member name="F:System.Runtime.CompilerServices.StrongBox`1.Value">
      <summary>Rappresenta il valore a cui fa riferimento <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.TypeForwardedFromAttribute">
      <summary>Specifica un oggetto <see cref="T:System.Type" /> di origine in un altro assembly. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.TypeForwardedFromAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.TypeForwardedFromAttribute" />. </summary>
      <param name="assemblyFullName">Oggetto <see cref="T:System.Type" /> di origine in un altro assembly. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFullName" /> è null o vuoto.</exception>
    </member>
    <member name="P:System.Runtime.CompilerServices.TypeForwardedFromAttribute.AssemblyFullName">
      <summary>Ottiene il nome completo di assembly del tipo di origine.</summary>
      <returns>Nome completo di assembly del tipo di origine.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.TypeForwardedToAttribute">
      <summary>Specifica un oggetto <see cref="T:System.Type" /> di destinazione in un altro assembly. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.TypeForwardedToAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.TypeForwardedToAttribute" /> che specifica un oggetto <see cref="T:System.Type" /> di destinazione. </summary>
      <param name="destination">Oggetto <see cref="T:System.Type" /> di destinazione in un altro assembly.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.TypeForwardedToAttribute.Destination">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> di destinazione in un altro assembly.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> di destinazione in un altro assembly.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.UnsafeValueTypeAttribute">
      <summary>Specifica che un tipo contiene una matrice non gestita che potrebbe causare una condizione di overflow.La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.UnsafeValueTypeAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.UnsafeValueTypeAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo">
      <summary>Rappresenta un'eccezione il cui stato viene acquisito a un determinato punto del codice. </summary>
    </member>
    <member name="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
      <summary>Crea un oggetto <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /> che rappresenta l'eccezione specificata nel punto corrente nel codice. </summary>
      <returns>Oggetto che rappresenta l'eccezione specificata nel punto corrente nel codice. </returns>
      <param name="source">L'eccezione il cui stato viene acquisito e che è rappresentata dall'oggetto restituito. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> è null. </exception>
    </member>
    <member name="P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException">
      <summary>Ottiene l'eccezione rappresentata dall'istanza corrente. </summary>
      <returns>L'eccezione che è rappresentata dall'istanza corrente. </returns>
    </member>
    <member name="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw">
      <summary>Genera l'eccezione rappresentata dall'oggetto <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /> corrente, dopo il ripristino dello stato che è stato salvato quando l'eccezione è stata acquisita. </summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CharSet">
      <summary>Stabilisce quali stringhe di cui è stato effettuato il marshalling del set di caratteri devono essere utilizzate.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CharSet.Ansi">
      <summary>Esegue il marshalling delle stringhe come stringhe di caratteri a più byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CharSet.Unicode">
      <summary>Esegue il marshalling delle stringhe come caratteri Unicode a 2 byte.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComVisibleAttribute">
      <summary>Determina l'accessibilità a COM di un singolo tipo o membro gestito o di tutti i tipi all'interno di un assembly.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComVisibleAttribute.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe ComVisibleAttribute.</summary>
      <param name="visibility">true per indicare che il tipo è visibile a COM. In caso contrario, false.Il valore predefinito è true.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComVisibleAttribute.Value">
      <summary>Ottiene un valore che indica se il tipo COM è visibile.</summary>
      <returns>true se il tipo è visibile. In caso contrario, false .Il valore predefinito è true.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.FieldOffsetAttribute">
      <summary>Indica la posizione fisica dei campi all'interno della rappresentazione non gestita di una classe o struttura.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.FieldOffsetAttribute.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.FieldOffsetAttribute" /> con l'offset nella struttura all'inizio del campo.</summary>
      <param name="offset">Offset in byte dall'inizio della struttura all'inizio del campo. </param>
    </member>
    <member name="P:System.Runtime.InteropServices.FieldOffsetAttribute.Value">
      <summary>Ottiene l'offset dall'inizio della struttura all'inizio del campo.</summary>
      <returns>Offset dall'inizio della struttura all'inizio del campo.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.LayoutKind">
      <summary>Controlla il layout di un oggetto durante l'esportazione nel codice non gestito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.LayoutKind.Auto">
      <summary>Durante il runtime viene automaticamente scelto un layout appropriato per i membri di un oggetto nella memoria non gestita.Gli oggetti definiti con questo membro di enumerazione non possono essere esposti all'esterno del codice gestito.Qualsiasi tentativo di eseguire tale operazione genera un'eccezione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.LayoutKind.Explicit">
      <summary>La posizione esatta di ogni membro di un oggetto nella memoria non gestita viene controllata in modo esplicito ed è soggetta all'impostazione del campo <see cref="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack" />.Ogni membro deve utilizzare <see cref="T:System.Runtime.InteropServices.FieldOffsetAttribute" /> per indicare la posizione di tale campo all'interno del tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.LayoutKind.Sequential">
      <summary>I membri dell'oggetto vengono disposti in sequenza, nell'ordine in cui si trovano al momento dell'esportazione nella memoria non gestita.I membri vengono disposti in base alla compressione specificata in <see cref="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack" /> e possono essere non contigui.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.OutAttribute">
      <summary>Indica che è necessario eseguire il marshalling dei dati dal destinatario della chiamata al chiamante.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.OutAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.OutAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.StructLayoutAttribute">
      <summary>Consente di controllare il layout fisico dei campi dati di una classe o una struttura in memoria.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> con il membro di enumerazione <see cref="T:System.Runtime.InteropServices.LayoutKind" /> specificato.</summary>
      <param name="layoutKind">Uno dei valori di enumerazione che specifica come disporre la classe o la struttura. </param>
    </member>
    <member name="F:System.Runtime.InteropServices.StructLayoutAttribute.CharSet">
      <summary>Indica se effettuare il marshalling dei campi dati di stringa all'interno della classe come LPWSTR o LPSTR per impostazione predefinita.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack">
      <summary>Controlla l'allineamento dei campi dati di una classe o una struttura nella memoria.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.StructLayoutAttribute.Size">
      <summary>Indica le dimensioni assolute della classe o della struttura.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.StructLayoutAttribute.Value">
      <summary>Ottiene il valore <see cref="T:System.Runtime.InteropServices.LayoutKind" /> che specifica come è disposta la classe o la struttura.</summary>
      <returns>Uno dei valori di enumerazione che specifica come è disposta la classe o la struttura.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.TargetFrameworkAttribute">
      <summary>Identifica la versione di .NET Framework con cui è stato compilato un determinato assembly.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.TargetFrameworkAttribute.#ctor(System.String)">
      <summary>Inizializza un'istanza della classe <see cref="T:System.Runtime.Versioning.TargetFrameworkAttribute" /> specificando la versione di .NET Framework con cui è stato compilato un assembly.</summary>
      <param name="frameworkName">Versione di .NET Framework con cui l'assembly è stato compilato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="frameworkName" /> è null.</exception>
    </member>
    <member name="P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName">
      <summary>Ottiene il nome visualizzato della versione di .NET Framework con cui è stato compilato un assembly.</summary>
      <returns>Nome visualizzato della versione di .NET Framework.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName">
      <summary>Ottiene il nome della versione di .NET Framework con cui è stato compilato un determinato assembly.</summary>
      <returns>Nome della versione di .NET Framework con cui è stato compilato l'assembly.</returns>
    </member>
    <member name="T:System.Security.AllowPartiallyTrustedCallersAttribute">
      <summary>Consente a un assembly di essere chiamato da codice parzialmente attendibile.Senza questa dichiarazione, solo i chiamanti completamente attendibili possono utilizzare l'assembly.La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Security.AllowPartiallyTrustedCallersAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" />. </summary>
    </member>
    <member name="T:System.Security.SecurityCriticalAttribute">
      <summary>Specifica che il codice o un assembly esegue operazioni critiche per la sicurezza.</summary>
    </member>
    <member name="M:System.Security.SecurityCriticalAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.SecurityCriticalAttribute" />. </summary>
    </member>
    <member name="T:System.Security.SecurityException">
      <summary>Eccezione generata quando viene rilevato un errore di sicurezza.</summary>
    </member>
    <member name="M:System.Security.SecurityException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.SecurityException" /> con le proprietà predefinite.</summary>
    </member>
    <member name="M:System.Security.SecurityException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.SecurityException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
    </member>
    <member name="M:System.Security.SecurityException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.SecurityException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="inner">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="inner" /> non è null, l'eccezione corrente verrà generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="M:System.Security.SecurityException.ToString">
      <summary>Restituisce una rappresentazione dell'oggetto <see cref="T:System.Security.SecurityException" /> corrente.</summary>
      <returns>Rappresentazione di stringa dell'oggetto <see cref="T:System.Security.SecurityException" /> corrente.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.Security.SecuritySafeCriticalAttribute">
      <summary>Identifica i tipi o i membri come critici per la sicurezza e accessibili dal codice trasparente.</summary>
    </member>
    <member name="M:System.Security.SecuritySafeCriticalAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.SecuritySafeCriticalAttribute" />. </summary>
    </member>
    <member name="T:System.Security.SecurityTransparentAttribute">
      <summary>Specifica che un assembly non può causare un'elevazione di privilegi. </summary>
    </member>
    <member name="M:System.Security.SecurityTransparentAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.SecurityTransparentAttribute" />. </summary>
    </member>
    <member name="T:System.Security.VerificationException">
      <summary>Eccezione generata quando, in base ai criteri di sicurezza, il codice deve essere indipendente dai tipi ma il processo di verifica non è in grado di verificarlo.</summary>
    </member>
    <member name="M:System.Security.VerificationException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.VerificationException" /> con le proprietà predefinite.</summary>
    </member>
    <member name="M:System.Security.VerificationException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.VerificationException" /> con un messaggio esplicativo.</summary>
      <param name="message">Messaggio che indica la causa dell'eccezione. </param>
    </member>
    <member name="M:System.Security.VerificationException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.VerificationException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione </param>
      <param name="innerException">Eccezione causa dell'eccezione corrente.Se il parametro <paramref name="innerException" /> non è null, l'eccezione corrente viene generata in un blocco catch in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Text.StringBuilder">
      <summary>Rappresenta una stringa modificabile di caratteri.La classe non può essere ereditata.Per esaminare il codice sorgente .NET Framework per questo tipo, vedere Origine riferimento.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.StringBuilder" />.</summary>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.StringBuilder" /> usando la capacità specificata.</summary>
      <param name="capacity">Dimensione iniziale consigliata per questa istanza. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di zero. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.StringBuilder" /> che inizia con una capacità specificata e può raggiungere un valore massimo specificato.</summary>
      <param name="capacity">Dimensione iniziale consigliata per <see cref="T:System.Text.StringBuilder" />. </param>
      <param name="maxCapacity">Numero massimo di caratteri che la stringa corrente può contenere. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxCapacity" /> è minore di 1, <paramref name="capacity" /> è minore di zero o <paramref name="capacity" /> è maggiore di <paramref name="maxCapacity" />. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.StringBuilder" /> usando la stringa specificata.</summary>
      <param name="value">Stringa usata per inizializzare il valore dell'istanza.Se <paramref name="value" /> è null, il nuovo oggetto <see cref="T:System.Text.StringBuilder" /> conterrà una stringa vuota, ovvero <see cref="F:System.String.Empty" />.</param>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.StringBuilder" /> usando la stringa e la capacità specificate.</summary>
      <param name="value">Stringa usata per inizializzare il valore dell'istanza.Se <paramref name="value" /> è null, il nuovo oggetto <see cref="T:System.Text.StringBuilder" /> conterrà una stringa vuota, ovvero <see cref="F:System.String.Empty" />.</param>
      <param name="capacity">Dimensione iniziale consigliata per <see cref="T:System.Text.StringBuilder" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di zero. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.StringBuilder" /> dalla sottostringa e la capacità specificate.</summary>
      <param name="value">Stringa che contiene la sottostringa usata per inizializzare il valore dell'istanza.Se <paramref name="value" /> è null, il nuovo oggetto <see cref="T:System.Text.StringBuilder" /> conterrà una stringa vuota, ovvero <see cref="F:System.String.Empty" />.</param>
      <param name="startIndex">Posizione all'interno di <paramref name="value" /> in cui inizia la sottostringa. </param>
      <param name="length">Numero di caratteri nella sottostringa. </param>
      <param name="capacity">Dimensione iniziale consigliata per <see cref="T:System.Text.StringBuilder" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di zero.-oppure- la somma di <paramref name="startIndex" /> e <paramref name="length" /> non è una posizione all'interno di <paramref name="value" />. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Boolean)">
      <summary>Accoda la rappresentazione di stringa di un valore booleano specificato a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Valore booleano da accodare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Byte)">
      <summary>Accoda la rappresentazione di stringa di un intero senza segno a 8 bit specificato a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Valore da accodare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char)">
      <summary>Accoda la rappresentazione di stringa di un carattere Unicode specificato a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Carattere Unicode da accodare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
      <summary>Accoda a questa istanza una matrice di caratteri Unicode a partire da un indirizzo specificato. </summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento. </returns>
      <param name="value">Puntatore a una matrice di caratteri. </param>
      <param name="valueCount">Numero di caratteri nella matrice. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="valueCount" /> è minore di zero. -oppure-L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="value" />è un puntatore null. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
      <summary>Accoda un numero specificato di copie della rappresentazione di stringa di un carattere Unicode a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Carattere da accodare. </param>
      <param name="repeatCount">Numero delle operazioni di accodamento di <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="repeatCount" /> è minore di zero.-oppure- L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <exception cref="T:System.OutOfMemoryException">Memoria insufficiente.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char[])">
      <summary>Accoda la rappresentazione di stringa dei caratteri Unicode in una matrice specificata a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Matrice di caratteri da accodare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
      <summary>Accoda la rappresentazione di stringa di una sottomatrice specificata di caratteri Unicode a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Matrice di caratteri. </param>
      <param name="startIndex">Posizione iniziale in <paramref name="value" />. </param>
      <param name="charCount">Numero di caratteri da accodare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è null e <paramref name="startIndex" /> e <paramref name="charCount" /> sono diversi da zero. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charCount" /> è minore di zero.-oppure- <paramref name="startIndex" /> è minore di zero.-oppure- <paramref name="startIndex" /> + <paramref name="charCount" /> è maggiore della lunghezza di <paramref name="value" />.-oppure- L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Decimal)">
      <summary>Accoda la rappresentazione di stringa di un numero decimale specificato a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Valore da accodare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Double)">
      <summary>Accoda la rappresentazione di stringa di un numero a virgola mobile a precisione doppia specificato a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Valore da accodare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Int16)">
      <summary>Accoda la rappresentazione di stringa di un intero con segno a 16 bit specificato a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Valore da accodare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Int32)">
      <summary>Accoda la rappresentazione di stringa di un intero con segno a 32 bit specificato a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Valore da accodare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Int64)">
      <summary>Accoda la rappresentazione di stringa di un intero con segno a 64 bit specificato a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Valore da accodare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Object)">
      <summary>Accoda la rappresentazione di stringa di un oggetto specificato a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Oggetto da accodare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.SByte)">
      <summary>Accoda la rappresentazione di stringa di un intero con segno a 8 bit specificato a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Valore da accodare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Single)">
      <summary>Accoda la rappresentazione di stringa di un numero a virgola mobile a precisione singola specificato a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Valore da accodare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.String)">
      <summary>Accoda una copia della stringa specificata a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Stringa da accodare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
      <summary>Accoda una copia della sottostringa specificata a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Stringa che contiene la sottostringa da accodare. </param>
      <param name="startIndex">Posizione iniziale della sottostringa all'interno di <paramref name="value" />. </param>
      <param name="count">Numero di caratteri in <paramref name="value" /> da accodare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è null e <paramref name="startIndex" /> e <paramref name="count" /> sono diversi da zero. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> minore di zero.-oppure- <paramref name="startIndex" /> minore di zero.-oppure- <paramref name="startIndex" /> + <paramref name="count" /> è maggiore della lunghezza di <paramref name="value" />.-oppure- L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.UInt16)">
      <summary>Accoda la rappresentazione di stringa di un intero senza segno a 16 bit specificato a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Valore da accodare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.UInt32)">
      <summary>Accoda la rappresentazione di stringa di un intero senza segno a 32 bit specificato a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Valore da accodare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.UInt64)">
      <summary>Accoda la rappresentazione di stringa di un intero senza segno a 64 bit specificato a questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Valore da accodare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
      <summary>Accoda la stringa restituita dall'elaborazione di una stringa in formato composito, che contiene zero o più elementi di formato, a questa istanza.Ogni elemento di formato viene sostituito dalla rappresentazione di stringa di un singolo argomento usando un provider del formato specificato.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.Al termine dell'operazione di accodamento, questa istanza conterrà tutti i dati esistenti prima dell'operazione, seguiti da una copia di <paramref name="format" /> in cui le specifiche di formato vengono sostituite dalla rappresentazione di stringa di <paramref name="arg0" />.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <param name="format">Stringa in formato composito (vedere la sezione Osservazioni). </param>
      <param name="arg0">Oggetto da formattare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> è null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è valido. -oppure-L'indice di un elemento di formato è minore di 0 (zero), maggiore di o uguale a uno (1). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza della stringa espansa potrebbe superare il valore <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
      <summary>Accoda la stringa restituita dall'elaborazione di una stringa in formato composito, che contiene zero o più elementi di formato, a questa istanza.Ogni elemento di formato viene sostituito dalla rappresentazione di stringa di uno dei due argomenti utilizzando un provider di formato specificato.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.Al termine dell'operazione di accodamento, questa istanza conterrà tutti i dati esistenti prima dell'operazione, seguiti da una copia di <paramref name="format" /> in cui le specifiche di formato vengono sostituite dalla rappresentazione di stringa dell'argomento dell'oggetto corrispondente.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <param name="format">Stringa in formato composito (vedere la sezione Osservazioni). </param>
      <param name="arg0">Primo oggetto da formattare. </param>
      <param name="arg1">Secondo oggetto da formattare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> è null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è valido. -oppure-L'indice di un elemento di formato è minore di 0 (zero), maggiore di o uguale a 2 (due). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza della stringa espansa potrebbe superare il valore <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
      <summary>Accoda la stringa restituita dall'elaborazione di una stringa in formato composito, che contiene zero o più elementi di formato, a questa istanza.Ogni elemento di formato viene sostituito dalla rappresentazione di stringa di uno dei tre argomenti utilizzando un provider di formato specificato.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.Al termine dell'operazione di accodamento, questa istanza conterrà tutti i dati esistenti prima dell'operazione, seguiti da una copia di <paramref name="format" /> in cui le specifiche di formato vengono sostituite dalla rappresentazione di stringa dell'argomento dell'oggetto corrispondente.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <param name="format">Stringa in formato composito (vedere la sezione Osservazioni). </param>
      <param name="arg0">Primo oggetto da formattare. </param>
      <param name="arg1">Secondo oggetto da formattare. </param>
      <param name="arg2">Terzo oggetto da formattare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> è null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è valido. -oppure-L'indice di un elemento di formato è minore di 0 (zero), maggiore di o uguale a 3 (tre). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza della stringa espansa potrebbe superare il valore <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
      <summary>Accoda la stringa restituita dall'elaborazione di una stringa in formato composito, che contiene zero o più elementi di formato, a questa istanza.Ogni elemento di formato viene sostituito dalla rappresentazione di stringa di un argomento corrispondente in una matrice di parametri usando un provider del formato specificato.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.Al termine dell'operazione di accodamento, questa istanza conterrà tutti i dati esistenti prima dell'operazione, seguiti da una copia di <paramref name="format" /> in cui le specifiche di formato vengono sostituite dalla rappresentazione di stringa dell'argomento dell'oggetto corrispondente.</returns>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. </param>
      <param name="format">Stringa in formato composito (vedere la sezione Osservazioni). </param>
      <param name="args">Matrice di oggetti da formattare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> è null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è valido. -oppure-L'indice di un elemento di formato è minore di 0 (zero) o maggiore o uguale alla lunghezza della matrice <paramref name="args" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza della stringa espansa potrebbe superare il valore <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
      <summary>Accoda la stringa restituita dall'elaborazione di una stringa in formato composito, che contiene zero o più elementi di formato, a questa istanza.Ogni elemento di formato viene sostituito dalla rappresentazione di stringa di un singolo argomento.</summary>
      <returns>Riferimento a questa istanza con <paramref name="format" /> accodato.Ogni elemento di formato in <paramref name="format" /> viene sostituito dalla rappresentazione di stringa di <paramref name="arg0" />.</returns>
      <param name="format">Stringa in formato composito (vedere la sezione Osservazioni). </param>
      <param name="arg0">Oggetto da formattare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> è null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è valido. -oppure-L'indice di un elemento di formato è minore di 0 (zero) oppure maggiore o uguale a 1.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza della stringa espansa potrebbe superare il valore <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
      <summary>Accoda la stringa restituita dall'elaborazione di una stringa in formato composito, che contiene zero o più elementi di formato, a questa istanza.Ogni elemento di formato viene sostituito dalla rappresentazione di stringa di uno dei due argomenti.</summary>
      <returns>Riferimento a questa istanza con <paramref name="format" /> accodato.Ogni elemento di formato in <paramref name="format" /> viene sostituito dalla rappresentazione di stringa dell'argomento dell'oggetto corrispondente.</returns>
      <param name="format">Stringa in formato composito (vedere la sezione Osservazioni). </param>
      <param name="arg0">Primo oggetto da formattare. </param>
      <param name="arg1">Secondo oggetto da formattare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> è null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è valido.-oppure-L'indice di un elemento di formato è minore di 0 (zero) oppure maggiore o uguale a 2. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza della stringa espansa potrebbe superare il valore <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
      <summary>Accoda la stringa restituita dall'elaborazione di una stringa in formato composito, che contiene zero o più elementi di formato, a questa istanza.Ogni elemento di formato viene sostituito dalla rappresentazione di stringa di uno dei tre argomenti.</summary>
      <returns>Riferimento a questa istanza con <paramref name="format" /> accodato.Ogni elemento di formato in <paramref name="format" /> viene sostituito dalla rappresentazione di stringa dell'argomento dell'oggetto corrispondente.</returns>
      <param name="format">Stringa in formato composito (vedere la sezione Osservazioni). </param>
      <param name="arg0">Primo oggetto da formattare. </param>
      <param name="arg1">Secondo oggetto da formattare. </param>
      <param name="arg2">Terzo oggetto da formattare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> è null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è valido.-oppure-L'indice di un elemento di formato è minore di 0 (zero) oppure maggiore o uguale a 3.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza della stringa espansa potrebbe superare il valore <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
      <summary>Accoda la stringa restituita dall'elaborazione di una stringa in formato composito, che contiene zero o più elementi di formato, a questa istanza.Ogni elemento di formato viene sostituito dalla rappresentazione di stringa di un argomento corrispondente in una matrice di parametri.</summary>
      <returns>Riferimento a questa istanza con <paramref name="format" /> accodato.Ogni elemento di formato in <paramref name="format" /> viene sostituito dalla rappresentazione di stringa dell'argomento dell'oggetto corrispondente.</returns>
      <param name="format">Stringa in formato composito (vedere la sezione Osservazioni). </param>
      <param name="args">Matrice di oggetti da formattare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> o <paramref name="args" /> è null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è valido. -oppure-L'indice di un elemento di formato è minore di 0 (zero) o maggiore o uguale alla lunghezza della matrice <paramref name="args" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza della stringa espansa potrebbe superare il valore <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendLine">
      <summary>Accoda il terminatore di riga predefinito alla fine dell'oggetto <see cref="T:System.Text.StringBuilder" /> corrente.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendLine(System.String)">
      <summary>Accoda una copia della stringa specificata seguita dal terminatore di riga predefinito alla fine dell'oggetto <see cref="T:System.Text.StringBuilder" /> corrente.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di accodamento.</returns>
      <param name="value">Stringa da accodare. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.Capacity">
      <summary>Ottiene o imposta il numero massimo di caratteri che possono essere contenuti nella memoria allocata dall'istanza corrente.</summary>
      <returns>Numero massimo di caratteri che possono essere contenuti nella memoria allocata dall'istanza corrente.Questo valore può essere compreso tra <see cref="P:System.Text.StringBuilder.Length" /> e <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato per un'operazione impostata è minore della lunghezza corrente di questa istanza.-oppure- Il valore specificato per un'operazione impostata è minore della lunghezza corrente di questa istanza. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.Chars(System.Int32)">
      <summary>Ottiene o imposta il carattere nella posizione del carattere specificata in questa istanza.</summary>
      <returns>Carattere Unicode nella posizione <paramref name="index" />.</returns>
      <param name="index">Posizione del carattere. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è al di fuori delle associazioni di questa istanza quando viene impostato un carattere. </exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> è al di fuori delle associazioni di questa istanza quando viene impostato un carattere. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Clear">
      <summary>Rimuove tutti i caratteri dall'istanza di <see cref="T:System.Text.StringBuilder" /> corrente.</summary>
      <returns>Oggetto la cui proprietà <see cref="P:System.Text.StringBuilder.Length" /> è 0 (zero).</returns>
    </member>
    <member name="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>Copia i caratteri da un segmento specificato di questa istanza a un segmento specificato di una matrice <see cref="T:System.Char" /> di destinazione.</summary>
      <param name="sourceIndex">Posizione iniziale in questa istanza da cui verranno copiati i caratteri.L'indice è in base zero.</param>
      <param name="destination">Matrice in cui verranno copiati i caratteri.</param>
      <param name="destinationIndex">Posizione iniziale in <paramref name="destination" /> in cui verranno copiati i caratteri.L'indice è in base zero.</param>
      <param name="count">Numero dei caratteri da copiare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" />, <paramref name="destinationIndex" /> o <paramref name="count" /> è minore di zero.-oppure-<paramref name="sourceIndex" /> è maggiore della lunghezza di questa istanza.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="sourceIndex" /> e <paramref name="count" /> è maggiore della lunghezza di questa istanza.-oppure-<paramref name="destinationIndex" /> + <paramref name="count" /> è maggiore della lunghezza di <paramref name="destination" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
      <summary>Garantisce che la capacità di questa istanza di <see cref="T:System.Text.StringBuilder" /> corrisponda almeno al valore specificato.</summary>
      <returns>Nuova capacità di questa istanza.</returns>
      <param name="capacity">Capacità minima da garantire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di zero.-oppure- L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se questa istanza e <paramref name="sb" /> hanno la stessa stringa e gli stessi valori <see cref="P:System.Text.StringBuilder.Capacity" /> e <see cref="P:System.Text.StringBuilder.MaxCapacity" />; in caso contrario, false.</returns>
      <param name="sb">Oggetto da confrontare con questa istanza o null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
      <summary>Inserisce la rappresentazione di stringa di un valore booleano in questa istanza nella posizione del carattere specificata.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di inserimento.</returns>
      <param name="index">Posizione in questa istanza in cui inizia l'inserimento. </param>
      <param name="value">Valore da inserire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza di questa istanza.</exception>
      <exception cref="T:System.OutOfMemoryException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
      <summary>Inserisce la rappresentazione di stringa di un intero senza segno a 8 bit specificato in questa istanza nella posizione del carattere specificata.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di inserimento.</returns>
      <param name="index">Posizione in questa istanza in cui inizia l'inserimento. </param>
      <param name="value">Valore da inserire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza di questa istanza. </exception>
      <exception cref="T:System.OutOfMemoryException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
      <summary>Inserisce la rappresentazione di stringa di un carattere Unicode specificato in questa istanza nella posizione del carattere specificata.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di inserimento.</returns>
      <param name="index">Posizione in questa istanza in cui inizia l'inserimento. </param>
      <param name="value">Valore da inserire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza di questa istanza.-oppure- L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
      <summary>Inserisce la rappresentazione di stringa di una matrice specificata di caratteri Unicode in questa istanza nella posizione del carattere specificata.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di inserimento.</returns>
      <param name="index">Posizione in questa istanza in cui inizia l'inserimento. </param>
      <param name="value">Matrice di caratteri da inserire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza di questa istanza.-oppure- L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>Inserisce la rappresentazione di stringa di una sottomatrice specificata di caratteri Unicode in questa istanza nella posizione del carattere specificata.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di inserimento.</returns>
      <param name="index">Posizione in questa istanza in cui inizia l'inserimento. </param>
      <param name="value">Matrice di caratteri. </param>
      <param name="startIndex">Indice iniziale all'interno di <paramref name="value" />. </param>
      <param name="charCount">Numero di caratteri da scrivere. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è null e <paramref name="startIndex" /> e <paramref name="charCount" /> sono diversi da zero. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" />, <paramref name="startIndex" /> o <paramref name="charCount" /> è minore di zero.-oppure- <paramref name="index" /> è maggiore della lunghezza di questa istanza.-oppure- la somma di <paramref name="startIndex" /> e <paramref name="charCount" /> non è una posizione all'interno di <paramref name="value" />.-oppure- L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
      <summary>Inserisce la rappresentazione di stringa di un numero decimale in questa istanza nella posizione del carattere specificata.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di inserimento.</returns>
      <param name="index">Posizione in questa istanza in cui inizia l'inserimento. </param>
      <param name="value">Valore da inserire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza di questa istanza. </exception>
      <exception cref="T:System.OutOfMemoryException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
      <summary>Inserisce la rappresentazione di stringa di un numero a virgola mobile a precisione doppia in questa istanza nella posizione del carattere specificata.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di inserimento.</returns>
      <param name="index">Posizione in questa istanza in cui inizia l'inserimento. </param>
      <param name="value">Valore da inserire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza di questa istanza. </exception>
      <exception cref="T:System.OutOfMemoryException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
      <summary>Inserisce la rappresentazione di stringa di un intero con segno a 16 bit specificato in questa istanza nella posizione del carattere specificata.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di inserimento.</returns>
      <param name="index">Posizione in questa istanza in cui inizia l'inserimento. </param>
      <param name="value">Valore da inserire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza di questa istanza. </exception>
      <exception cref="T:System.OutOfMemoryException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
      <summary>Inserisce la rappresentazione di stringa di un intero con segno a 32 bit specificato in questa istanza nella posizione del carattere specificata.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di inserimento.</returns>
      <param name="index">Posizione in questa istanza in cui inizia l'inserimento. </param>
      <param name="value">Valore da inserire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza di questa istanza. </exception>
      <exception cref="T:System.OutOfMemoryException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
      <summary>Inserisce la rappresentazione di stringa di un intero con segno a 64 bit in questa istanza nella posizione del carattere specificata.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di inserimento.</returns>
      <param name="index">Posizione in questa istanza in cui inizia l'inserimento. </param>
      <param name="value">Valore da inserire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza di questa istanza. </exception>
      <exception cref="T:System.OutOfMemoryException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
      <summary>Inserisce la rappresentazione di stringa di un oggetto in questa istanza nella posizione del carattere specificata.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di inserimento.</returns>
      <param name="index">Posizione in questa istanza in cui inizia l'inserimento. </param>
      <param name="value">Oggetto da inserire o null. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza di questa istanza. </exception>
      <exception cref="T:System.OutOfMemoryException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
      <summary>Inserisce la rappresentazione di stringa di un intero con segno a 8 bit specificato in questa istanza nella posizione del carattere specificata.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di inserimento.</returns>
      <param name="index">Posizione in questa istanza in cui inizia l'inserimento. </param>
      <param name="value">Valore da inserire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza di questa istanza. </exception>
      <exception cref="T:System.OutOfMemoryException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
      <summary>Inserisce la rappresentazione di stringa di un numero a virgola mobile a precisione singola in questa istanza nella posizione del carattere specificata.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di inserimento.</returns>
      <param name="index">Posizione in questa istanza in cui inizia l'inserimento. </param>
      <param name="value">Valore da inserire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza di questa istanza. </exception>
      <exception cref="T:System.OutOfMemoryException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
      <summary>Inserisce una stringa in questa istanza nella posizione del carattere specificata.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di inserimento.</returns>
      <param name="index">Posizione in questa istanza in cui inizia l'inserimento. </param>
      <param name="value">Stringa da inserire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza corrente di questa istanza. -oppure-La somma della lunghezza corrente di questo oggetto <see cref="T:System.Text.StringBuilder" /> e della lunghezza di <paramref name="value" /> è superiore a <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
      <summary>Inserisce una o più copie di una stringa specificata in questa istanza nella posizione del carattere specificata.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di inserimento.</returns>
      <param name="index">Posizione in questa istanza in cui inizia l'inserimento. </param>
      <param name="value">Stringa da inserire. </param>
      <param name="count">Numero delle operazioni di inserimento di <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza corrente di questa istanza.-oppure- <paramref name="count" /> è minore di zero. </exception>
      <exception cref="T:System.OutOfMemoryException">La somma della lunghezza corrente di questo oggetto <see cref="T:System.Text.StringBuilder" /> e della lunghezza di <paramref name="value" /> moltiplicato per <paramref name="count" /> è superiore a <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
      <summary>Inserisce la rappresentazione di stringa di un intero senza segno a 16 bit in questa istanza nella posizione del carattere specificata.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di inserimento.</returns>
      <param name="index">Posizione in questa istanza in cui inizia l'inserimento. </param>
      <param name="value">Valore da inserire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza di questa istanza. </exception>
      <exception cref="T:System.OutOfMemoryException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
      <summary>Inserisce la rappresentazione di stringa di un intero senza segno a 32 bit in questa istanza nella posizione del carattere specificata.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di inserimento.</returns>
      <param name="index">Posizione in questa istanza in cui inizia l'inserimento. </param>
      <param name="value">Valore da inserire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza di questa istanza. </exception>
      <exception cref="T:System.OutOfMemoryException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
      <summary>Inserisce la rappresentazione di stringa di un intero senza segno a 64 bit in questa istanza nella posizione del carattere specificata.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di inserimento.</returns>
      <param name="index">Posizione in questa istanza in cui inizia l'inserimento. </param>
      <param name="value">Valore da inserire. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza di questa istanza. </exception>
      <exception cref="T:System.OutOfMemoryException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.Length">
      <summary>Ottiene o imposta la lunghezza dell'oggetto <see cref="T:System.Text.StringBuilder" /> corrente.</summary>
      <returns>Lunghezza di questa istanza.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato per un'operazione impostata è minore di zero o maggiore di <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.MaxCapacity">
      <summary>Ottiene la capacità massima di questa istanza.</summary>
      <returns>Numero massimo di caratteri che questa istanza può contenere.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
      <summary>Rimuove l'intervallo di caratteri specificato da questa istanza.</summary>
      <returns>Riferimento a questa istanza dopo il completamento dell'operazione di rimozione.</returns>
      <param name="startIndex">Posizione in base zero in questa istanza in cui inizia l'operazione di rimozione. </param>
      <param name="length">Numero di caratteri da rimuovere. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Se <paramref name="startIndex" /> o <paramref name="length" /> sono inferiori a zero o <paramref name="startIndex" /> + <paramref name="length" /> sono maggiori della lunghezza di questa istanza. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
      <summary>Sostituisce tutte le occorrenze di un carattere specificato in questa istanza con un altro carattere specificato.</summary>
      <returns>Riferimento a questa istanza con <paramref name="oldChar" /> sostituito da <paramref name="newChar" />.</returns>
      <param name="oldChar">Carattere da sostituire. </param>
      <param name="newChar">Carattere che sostituisce <paramref name="oldChar" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
      <summary>Sostituisce tutte le occorrenze di un carattere specificato in una sottostringa di questa istanza con un altro carattere specificato.</summary>
      <returns>Riferimento a questa istanza con <paramref name="oldChar" /> sostituito da <paramref name="newChar" /> nell'intervallo compreso tra <paramref name="startIndex" /> e <paramref name="startIndex" /> + <paramref name="count" /> -1.</returns>
      <param name="oldChar">Carattere da sostituire. </param>
      <param name="newChar">Carattere che sostituisce <paramref name="oldChar" />. </param>
      <param name="startIndex">Posizione in questa istanza in cui inizia la sottostringa. </param>
      <param name="count">Lunghezza della sottostringa. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> + <paramref name="count" /> è maggiore della lunghezza del valore di questa istanza.-oppure- <paramref name="startIndex" /> o <paramref name="count" /> è minore di zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.String,System.String)">
      <summary>Sostituisce tutte le occorrenze di una stringa specificata in questa istanza con un'altra stringa specificata.</summary>
      <returns>Riferimento a questa istanza con tutte le istanze di <paramref name="oldValue" /> sostituite da <paramref name="newValue" />.</returns>
      <param name="oldValue">Stringa da sostituire. </param>
      <param name="newValue">Stringa che sostituisce <paramref name="oldValue" /> oppure null. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oldValue" /> è null. </exception>
      <exception cref="T:System.ArgumentException">La lunghezza di <paramref name="oldValue" /> è zero. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary>Sostituisce tutte le occorrenze di una stringa specificata in una sottostringa di questa istanza con un'altra stringa specificata.</summary>
      <returns>Riferimento a questa istanza con tutte le istanze di <paramref name="oldValue" /> sostituite da <paramref name="newValue" /> nell'intervallo compreso tra <paramref name="startIndex" /> e <paramref name="startIndex" /> + <paramref name="count" /> - 1.</returns>
      <param name="oldValue">Stringa da sostituire. </param>
      <param name="newValue">Stringa che sostituisce <paramref name="oldValue" /> oppure null. </param>
      <param name="startIndex">Posizione in questa istanza in cui inizia la sottostringa. </param>
      <param name="count">Lunghezza della sottostringa. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oldValue" /> è null. </exception>
      <exception cref="T:System.ArgumentException">La lunghezza di <paramref name="oldValue" /> è zero. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> o <paramref name="count" /> è minore di zero.-oppure- <paramref name="startIndex" /> più <paramref name="count" /> indica una posizione di carattere non all'interno di questa istanza.-oppure- L'aumento del valore di questa istanza supererebbe <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.ToString">
      <summary>Converte il valore di questa istanza in un oggetto <see cref="T:System.String" />.</summary>
      <returns>Stringa il cui valore è lo stesso di questa istanza.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
      <summary>Converte il valore di una sottostringa di questa istanza in un oggetto <see cref="T:System.String" />.</summary>
      <returns>Stringa il cui valore è lo stesso della sottostringa specificata di questa istanza.</returns>
      <param name="startIndex">Posizione iniziale della sottostringa in questa istanza. </param>
      <param name="length">Lunghezza della sottostringa. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> o <paramref name="length" /> è minore di zero.-oppure- la somma di <paramref name="startIndex" /> e <paramref name="length" /> è maggiore della lunghezza dell'istanza corrente. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Threading.LazyThreadSafetyMode">
      <summary>Specifica il modo in cui un'istanza di <see cref="T:System.Lazy`1" /> sincronizza l'accesso fra più thread.</summary>
    </member>
    <member name="F:System.Threading.LazyThreadSafetyMode.ExecutionAndPublication">
      <summary>I blocchi vengono utilizzati per garantire che un unico thread possa inizializzare un'istanza di <see cref="T:System.Lazy`1" /> in modalità thread-safe.Se il metodo di inizializzazione o, in assenza di questo, il costruttore predefinito utilizza i blocchi internamente, possono verificarsi deadlock.Se si utilizza un costruttore <see cref="T:System.Lazy`1" /> che specifica un metodo di inizializzazione (parametro <paramref name="valueFactory" />), e tale metodo di inizializzazione genera un'eccezione o non gestisce un'eccezione, la prima volta che viene chiamata la proprietà <see cref="P:System.Lazy`1.Value" /> l'eccezione viene memorizzata nella cache e viene nuovamente generata per le chiamate successive alla proprietà <see cref="P:System.Lazy`1.Value" />.Se si utilizza un costruttore <see cref="T:System.Lazy`1" /> che non specifica un metodo di inizializzazione, le eccezioni generate dal costruttore predefinito per <paramref name="T" /> non vengono memorizzate nella cache.In tal caso, al successivo tentativo di accesso alla proprietà <see cref="P:System.Lazy`1.Value" />, l'istanza <see cref="T:System.Lazy`1" /> potrebbe venire inizializzata correttamente.Se il metodo di inizializzazione accede in modo ricorsivo alla proprietà <see cref="P:System.Lazy`1.Value" /> dell'istanza di <see cref="T:System.Lazy`1" />, viene generata un'eccezione <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="F:System.Threading.LazyThreadSafetyMode.None">
      <summary>L'istanza di <see cref="T:System.Lazy`1" /> non è thread-safe; qualora vi si acceda da più thread, il comportamento sarà indefinito.Utilizzare questa modalità soltanto quando è fondamentale ottenere prestazioni elevate e si è certi che l'istanza di <see cref="T:System.Lazy`1" /> non sarà mai inizializzata da più thread.Se si utilizza un costruttore <see cref="T:System.Lazy`1" /> che specifica un metodo di inizializzazione (parametro <paramref name="valueFactory" />), e tale metodo di inizializzazione genera un'eccezione o non gestisce un'eccezione, la prima volta che viene chiamata la proprietà <see cref="P:System.Lazy`1.Value" /> l'eccezione viene memorizzata nella cache e viene nuovamente generata per le chiamate successive alla proprietà <see cref="P:System.Lazy`1.Value" />.Se si utilizza un costruttore <see cref="T:System.Lazy`1" /> che non specifica un metodo di inizializzazione, le eccezioni generate dal costruttore predefinito per <paramref name="T" /> non vengono memorizzate nella cache.In tal caso, al successivo tentativo di accesso alla proprietà <see cref="P:System.Lazy`1.Value" />, l'istanza <see cref="T:System.Lazy`1" /> potrebbe venire inizializzata correttamente.Se il metodo di inizializzazione accede in modo ricorsivo alla proprietà <see cref="P:System.Lazy`1.Value" /> dell'istanza di <see cref="T:System.Lazy`1" />, viene generata un'eccezione <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="F:System.Threading.LazyThreadSafetyMode.PublicationOnly">
      <summary>Quando più thread tentano di inizializzare simultaneamente un'istanza di <see cref="T:System.Lazy`1" />, a tutti è consentito di eseguire il metodo di inizializzazione o, in assenza di questo, il costruttore predefinito.Il primo thread che completa l'inizializzazione imposta il valore dell'istanza di <see cref="T:System.Lazy`1" />.Tale valore viene restituito a tutti gli altri thread che eseguivano simultaneamente il metodo di inizializzazione, a meno che il metodo non generi eccezioni su quei thread.Qualsiasi istanza di <paramref name="T" /> creata dai thread in competizione viene rimossa.Se il metodo di inizializzazione genera un'eccezione su un thread, l'eccezione viene propagata dalla proprietà <see cref="P:System.Lazy`1.Value" /> su quel thread.L'eccezione non viene memorizzata nella cache.Il valore della proprietà <see cref="P:System.Lazy`1.IsValueCreated" /> rimane false e le chiamate successive alla proprietà <see cref="P:System.Lazy`1.Value" />, da parte del thread su cui è stata generata l'eccezione o da parte di altri, comportano una nuova esecuzione del metodo di inizializzazione.Se il metodo di inizializzazione accede in modo ricorsivo alla proprietà <see cref="P:System.Lazy`1.Value" /> dell'istanza di <see cref="T:System.Lazy`1" />, non viene generata alcuna eccezione.</summary>
    </member>
    <member name="T:System.Threading.Timeout">
      <summary>Contiene le costanti che specificano gli intervalli di timeout infiniti.La classe non può essere ereditata.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Threading.Timeout.Infinite">
      <summary>Costante usata per specificare un periodo di attesa infinito, per i metodi di threading che accettano un parametro <see cref="T:System.Int32" />. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Threading.Timeout.InfiniteTimeSpan">
      <summary>Costante usata per specificare un periodo di attesa infinito, per i metodi che accettano un parametro <see cref="T:System.TimeSpan" />.</summary>
    </member>
    <member name="T:System.Threading.WaitHandle">
      <summary>Incapsula oggetti specifici del sistema operativo che attendono l'accesso esclusivo alle risorse condivise.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.WaitHandle" />.</summary>
    </member>
    <member name="M:System.Threading.WaitHandle.Dispose">
      <summary>Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Threading.WaitHandle" />.</summary>
    </member>
    <member name="M:System.Threading.WaitHandle.Dispose(System.Boolean)">
      <summary>Quando ne viene eseguito l'override in una classe derivata, libera le risorse non gestite usate da <see cref="T:System.Threading.WaitHandle" /> ed eventualmente di liberare le risorse gestite.</summary>
      <param name="explicitDisposing">true per rilasciare sia le risorse gestite sia quelle non gestite; false per rilasciare solo le risorse non gestite. </param>
    </member>
    <member name="F:System.Threading.WaitHandle.InvalidHandle">
      <summary>Rappresenta un handle nativo del sistema operativo non valido.Questo campo è di sola lettura.</summary>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])">
      <summary>Attende che tutti gli elementi nella matrice specificata ricevano un segnale.</summary>
      <returns>true se ogni elemento in <paramref name="waitHandles" /> ha ricevuto un segnale; in caso contrario, il metodo non restituisce alcun risultato.</returns>
      <param name="waitHandles">Matrice WaitHandle contenente gli oggetti per i quali l'istanza corrente attenderà.Questa matrice non può contenere più riferimenti allo stesso oggetto.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array are null. -or-<paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</exception>
      <exception cref="T:System.DuplicateWaitObjectException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.The <paramref name="waitHandles" /> array contains elements that are duplicates. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.-or- The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element. </exception>
      <exception cref="T:System.ApplicationException">
        <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait terminated because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)">
      <summary>Attende che tutti gli elementi nella matrice specificata ricevano un segnale, usando un valore <see cref="T:System.Int32" /> per specificare l'intervallo di tempo.</summary>
      <returns>true se ogni elemento in <paramref name="waitHandles" /> ha ricevuto un segnale; in caso contrario, false.</returns>
      <param name="waitHandles">Matrice WaitHandle contenente gli oggetti per i quali l'istanza corrente attenderà.Questa matrice non può contenere più riferimenti allo stesso oggetto (duplicati).</param>
      <param name="millisecondsTimeout">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or- One or more of the objects in the <paramref name="waitHandles" /> array is null. -or-<paramref name="waitHandles" /> is an array with no elements. </exception>
      <exception cref="T:System.DuplicateWaitObjectException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.The <paramref name="waitHandles" /> array contains elements that are duplicates. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.-or- The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)">
      <summary>Attende che tutti gli elementi nella matrice specificata ricevano un segnale, usando un valore <see cref="T:System.TimeSpan" /> per specificare l'intervallo di tempo.</summary>
      <returns>true se ogni elemento in <paramref name="waitHandles" /> ha ricevuto un segnale; in caso contrario, false.</returns>
      <param name="waitHandles">Matrice WaitHandle contenente gli oggetti per i quali l'istanza corrente attenderà.Questa matrice non può contenere più riferimenti allo stesso oggetto.</param>
      <param name="timeout">Oggetto <see cref="T:System.TimeSpan" /> che rappresenta il numero di millisecondi di attesa oppure <see cref="T:System.TimeSpan" /> che rappresenta -1 millisecondi per un'attesa indefinita. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null. -or- One or more of the objects in the <paramref name="waitHandles" /> array is null. -or-<paramref name="waitHandles" /> is an array with no elements. </exception>
      <exception cref="T:System.DuplicateWaitObjectException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.The <paramref name="waitHandles" /> array contains elements that are duplicates. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.-or- The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out. -or-<paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait terminated because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])">
      <summary>Attende che uno degli elementi nella matrice specificata riceva un segnale.</summary>
      <returns>Indice della matrice dell'oggetto che ha soddisfatto l'attesa.</returns>
      <param name="waitHandles">Matrice WaitHandle contenente gli oggetti per i quali l'istanza corrente attenderà. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array is null. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits. </exception>
      <exception cref="T:System.ApplicationException">
        <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later. </exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)">
      <summary>Attende che uno degli elementi nella matrice specificata riceva un segnale, usando un intero con segno a 32 bit per specificare l'intervallo di tempo.</summary>
      <returns>Indice della matrice dell'oggetto che ha soddisfatto l'attesa oppure <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> se nessun oggetto ha soddisfatto l'attesa ed è trascorso un intervallo di tempo equivalente a <paramref name="millisecondsTimeout" />.</returns>
      <param name="waitHandles">Matrice WaitHandle contenente gli oggetti per i quali l'istanza corrente attenderà. </param>
      <param name="millisecondsTimeout">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array is null. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="waitHandles" /> is an array with no elements. </exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)">
      <summary>Attende che uno degli elementi nella matrice specificata riceva un segnale, usando un valore <see cref="T:System.TimeSpan" /> per specificare l'intervallo di tempo.</summary>
      <returns>Indice della matrice dell'oggetto che ha soddisfatto l'attesa oppure <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> se nessun oggetto ha soddisfatto l'attesa ed è trascorso un intervallo di tempo equivalente a <paramref name="timeout" />.</returns>
      <param name="waitHandles">Matrice WaitHandle contenente gli oggetti per i quali l'istanza corrente attenderà. </param>
      <param name="timeout">Oggetto <see cref="T:System.TimeSpan" /> che rappresenta il numero di millisecondi di attesa oppure <see cref="T:System.TimeSpan" /> che rappresenta -1 millisecondi per un'attesa indefinita. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array is null. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out. -or-<paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="waitHandles" /> is an array with no elements. </exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitOne">
      <summary>Blocca il thread corrente finché l'oggetto <see cref="T:System.Threading.WaitHandle" /> corrente non riceve un segnale.</summary>
      <returns>true se l'istanza corrente riceve un segnale.Se l'istanza corrente non viene mai segnalata, <see cref="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" /> non restituisce mai alcun valore.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitOne(System.Int32)">
      <summary>Blocca il thread corrente finché l'oggetto <see cref="T:System.Threading.WaitHandle" /> corrente non riceve un segnale, usando un intero con segno a 32 bit per specificare l'intervallo di tempo.</summary>
      <returns>true se l'istanza corrente riceve un segnale; in caso contrario, false.</returns>
      <param name="millisecondsTimeout">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita. </param>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)">
      <summary>Blocca il thread corrente finché l'istanza corrente non riceve un segnale, usando un valore <see cref="T:System.TimeSpan" /> per specificare l'intervallo di tempo.</summary>
      <returns>true se l'istanza corrente riceve un segnale; in caso contrario, false.</returns>
      <param name="timeout">Oggetto <see cref="T:System.TimeSpan" /> che rappresenta il numero di millisecondi di attesa oppure <see cref="T:System.TimeSpan" /> che rappresenta -1 millisecondi per un'attesa indefinita. </param>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.-or-<paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="F:System.Threading.WaitHandle.WaitTimeout">
      <summary>Indica che si è verificato il timeout di un'operazione <see cref="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" /> prima della segnalazione di uno degli handle di attesa.Questo campo è costante.</summary>
      <filterpriority>1</filterpriority>
    </member>
  </members>
</doc>