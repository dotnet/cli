<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime</name>
  </assembly>
  <members>
    <member name="T:System.Action">
      <summary>Kapselt eine Methode, die über keine Parameter verfügt und keinen Wert zurückgibt.</summary>
    </member>
    <member name="M:System.Action.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action.BeginInvoke(System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action.Invoke"></member>
    <member name="T:System.Action`1">
      <summary>Kapselt eine Methode, die über einen einzelnen Parameter verfügt und keinen Wert zurückgibt.Weitere Informationen zum Durchsuchen des .NET Framework-Quellcodes für diesen Typ finden Sie unter Verweisquelle.</summary>
      <typeparam name="T">Der Typ des Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Action`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`1.BeginInvoke(`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`1.Invoke(`0)"></member>
    <member name="T:System.Action`10">
      <summary>Kapselt eine Methode, die über 10 Parameter verfügt und keinen Wert zurückgibt.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T8">Der Typ des achten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T9">Der Typ des neunten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T10">Der Typ des zehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`10.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`10.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`10.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`10.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)"></member>
    <member name="T:System.Action`11">
      <summary>Kapselt eine Methode, die über 11 Parameter verfügt und keinen Wert zurückgibt.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T8">Der Typ des achten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T9">Der Typ des neunten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T10">Der Typ des zehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T11">Der Typ des elften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`11.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`11.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`11.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`11.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)"></member>
    <member name="T:System.Action`12">
      <summary>Kapselt eine Methode, die über 12 Parameter verfügt und keinen Wert zurückgibt.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T8">Der Typ des achten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T9">Der Typ des neunten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T10">Der Typ des zehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T11">Der Typ des elften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T12">Der Typ des zwölften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`12.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`12.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`12.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`12.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)"></member>
    <member name="T:System.Action`13">
      <summary>Kapselt eine Methode, die über 13 Parameter verfügt und keinen Wert zurückgibt.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T8">Der Typ des achten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T9">Der Typ des neunten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T10">Der Typ des zehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T11">Der Typ des elften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T12">Der Typ des zwölften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T13">Der Typ des dreizehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`13.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`13.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`13.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`13.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)"></member>
    <member name="T:System.Action`14">
      <summary>Kapselt eine Methode, die über 14 Parameter verfügt und keinen Wert zurückgibt.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T8">Der Typ des achten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T9">Der Typ des neunten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T10">Der Typ des zehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T11">Der Typ des elften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T12">Der Typ des zwölften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T13">Der Typ des dreizehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T14">Der Typ des vierzehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`14.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`14.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`14.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`14.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)"></member>
    <member name="T:System.Action`15">
      <summary>Kapselt eine Methode, die über 15 Parameter verfügt und keinen Wert zurückgibt.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T8">Der Typ des achten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T9">Der Typ des neunten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T10">Der Typ des zehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T11">Der Typ des elften Parameters der Methode, die dieser Delegat kapselt. </typeparam>
      <typeparam name="T12">Der Typ des zwölften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T13">Der Typ des dreizehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T14">Der Typ des vierzehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T15">Der Typ des fünfzehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`15.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`15.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`15.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`15.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)"></member>
    <member name="T:System.Action`16">
      <summary>Kapselt eine Methode, die über 16 Parameter verfügt und keinen Wert zurückgibt.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T8">Der Typ des achten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T9">Der Typ des neunten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T10">Der Typ des zehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T11">Der Typ des elften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T12">Der Typ des zwölften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T13">Der Typ des dreizehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T14">Der Typ des vierzehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T15">Der Typ des fünfzehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T16">Der Typ des sechzehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`16.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`16.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`16.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`16.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)"></member>
    <member name="T:System.Action`2">
      <summary>Kapselt eine Methode, die über zwei Parameter verfügt und keinen Wert zurückgibt.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`2.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`2.BeginInvoke(`0,`1,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`2.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`2.Invoke(`0,`1)"></member>
    <member name="T:System.Action`3">
      <summary>Kapselt eine Methode, die über drei Parameter verfügt und keinen Wert zurückgibt.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`3.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`3.BeginInvoke(`0,`1,`2,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`3.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`3.Invoke(`0,`1,`2)"></member>
    <member name="T:System.Action`4">
      <summary>Kapselt eine Methode, die über vier Parameter verfügt und keinen Wert zurückgibt.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`4.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`4.BeginInvoke(`0,`1,`2,`3,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`4.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`4.Invoke(`0,`1,`2,`3)"></member>
    <member name="T:System.Action`5">
      <summary>Kapselt eine Methode, die über fünf Parameter verfügt und keinen Wert zurückgibt.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`5.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`5.BeginInvoke(`0,`1,`2,`3,`4,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`5.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`5.Invoke(`0,`1,`2,`3,`4)"></member>
    <member name="T:System.Action`6">
      <summary>Kapselt eine Methode, die über sechs Parameter verfügt und keinen Wert zurückgibt.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`6.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`6.BeginInvoke(`0,`1,`2,`3,`4,`5,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`6.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`6.Invoke(`0,`1,`2,`3,`4,`5)"></member>
    <member name="T:System.Action`7">
      <summary>Kapselt eine Methode, die über sieben Parameter verfügt und keinen Wert zurückgibt.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`7.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`7.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`7.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`7.Invoke(`0,`1,`2,`3,`4,`5,`6)"></member>
    <member name="T:System.Action`8">
      <summary>Kapselt eine Methode, die über acht Parameter verfügt und keinen Wert zurückgibt.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T8">Der Typ des achten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`8.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`8.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`8.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`8.Invoke(`0,`1,`2,`3,`4,`5,`6,`7)"></member>
    <member name="T:System.Action`9">
      <summary>Kapselt eine Methode, die über neun Parameter verfügt und keinen Wert zurückgibt.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T8">Der Typ des achten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T9">Der Typ des neunten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`9.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Action`9.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Action`9.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Action`9.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8)"></member>
    <member name="T:System.Activator">
      <summary>Enthält Methoden, mit denen Objekttypen lokal oder remote erstellt und Verweise auf vorhandene Remoteobjekte abgerufen werden können.Diese Klasse kann nicht vererbt werden.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Activator.CreateInstance``1">
      <summary>Erstellt mit dem parameterlosen Konstruktor eine Instanz des Typs, der vom angegebenen generischen Typparameter festgelegt wurde.</summary>
      <returns>Ein Verweis auf das neu erstellte Objekt.</returns>
      <typeparam name="T">Der zu erstellende Typ.</typeparam>
      <exception cref="T:System.MissingMethodException">In der .NET for Windows Store apps oder Portable Klassenbibliothek, fangen Sie die Ausnahme Basisklasse <see cref="T:System.MissingMemberException" />, stattdessen.Der für <paramref name="T" /> angegebene Typ weist keinen Konstruktor ohne Parameter auf. </exception>
    </member>
    <member name="M:System.Activator.CreateInstance(System.Type)">
      <summary>Erstellt mit dem Standardkonstruktor dieses Typs eine Instanz des angegebenen Typs.</summary>
      <returns>Ein Verweis auf das neu erstellte Objekt.</returns>
      <param name="type">Der Typ des zu erstellenden Objekts. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> ist null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> ist keine RuntimeType. - oder - <paramref name="type" /> ist ein offener generischer Typ (d. h., die <see cref="P:System.Type.ContainsGenericParameters" />-Eigenschaft gibt true zurück).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="type" /> kann kein <see cref="T:System.Reflection.Emit.TypeBuilder" /> sein.- oder -  Das Erstellen der Typen <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> und <see cref="T:System.RuntimeArgumentHandle" /> oder von Arrays dieser Typen wird nicht unterstützt.- oder - Die Assembly, die <paramref name="type" /> enthält, ist eine dynamische Assembly, die mit <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> erstellt wurde. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">Der aufgerufene Konstruktor löst eine Ausnahme aus. </exception>
      <exception cref="T:System.MethodAccessException">In der .NET for Windows Store apps oder Portable Klassenbibliothek, fangen Sie die Ausnahme Basisklasse <see cref="T:System.MemberAccessException" />, stattdessen.Der Aufrufer verfügt über keine Berechtigung zum Aufrufen dieses Konstruktors. </exception>
      <exception cref="T:System.MemberAccessException">Es kann keine Instanz einer abstrakten Klasse erstellt werden, oder dieser Member wurde mit einem Mechanismus für die späte Bindung aufgerufen. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Der COM-Typ wurde nicht durch <see cref="Overload:System.Type.GetTypeFromProgID" /> oder <see cref="Overload:System.Type.GetTypeFromCLSID" /> abgerufen. </exception>
      <exception cref="T:System.MissingMethodException">In der .NET for Windows Store apps oder Portable Klassenbibliothek, fangen Sie die Ausnahme Basisklasse <see cref="T:System.MissingMemberException" />, stattdessen.Es wurde kein entsprechender öffentlicher Konstruktor gefunden. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
        <paramref name="type" /> ist ein COM-Objekt, aber der Klassenbezeichner für das Abrufen des Typs ist ungültig, oder die angegebene Klasse ist nicht registriert. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="type" /> ist kein gültiger Typ. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.CreateInstance(System.Type,System.Object[])">
      <summary>Erstellt mit dem am besten mit den angegebenen Parametern übereinstimmenden Konstruktor eine Instanz des angegebenen Typs.</summary>
      <returns>Ein Verweis auf das neu erstellte Objekt.</returns>
      <param name="type">Der Typ des zu erstellenden Objekts. </param>
      <param name="args">Ein Array von Argumenten, das bezüglich Anzahl, Reihenfolge und Typ mit den Parametern des aufzurufenden Konstruktors übereinstimmt.Wenn <paramref name="args" /> ein leeres Array oder null ist, wird der Konstruktor aufgerufen, der keine Parameter akzeptiert, d. h. der Standardkonstruktor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> ist null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> ist keine RuntimeType. - oder - <paramref name="type" /> ist ein offener generischer Typ (d. h., die <see cref="P:System.Type.ContainsGenericParameters" />-Eigenschaft gibt true zurück).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="type" /> kann kein <see cref="T:System.Reflection.Emit.TypeBuilder" /> sein.- oder -  Das Erstellen der Typen <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> und <see cref="T:System.RuntimeArgumentHandle" /> oder von Arrays dieser Typen wird nicht unterstützt. - oder - Die Assembly, die <paramref name="type" /> enthält, ist eine dynamische Assembly, die mit <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> erstellt wurde.- oder - Der Konstruktor, der am besten mit <paramref name="args" /> übereinstimmt, verfügt über varargs Argumente. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">Der aufgerufene Konstruktor löst eine Ausnahme aus. </exception>
      <exception cref="T:System.MethodAccessException">In der .NET for Windows Store apps oder Portable Klassenbibliothek, fangen Sie die Ausnahme Basisklasse <see cref="T:System.MemberAccessException" />, stattdessen.Der Aufrufer verfügt über keine Berechtigung zum Aufrufen dieses Konstruktors. </exception>
      <exception cref="T:System.MemberAccessException">Es kann keine Instanz einer abstrakten Klasse erstellt werden, oder dieser Member wurde mit einem Mechanismus für die späte Bindung aufgerufen. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Der COM-Typ wurde nicht durch <see cref="Overload:System.Type.GetTypeFromProgID" /> oder <see cref="Overload:System.Type.GetTypeFromCLSID" /> abgerufen. </exception>
      <exception cref="T:System.MissingMethodException">In der .NET for Windows Store apps oder Portable Klassenbibliothek, fangen Sie die Ausnahme Basisklasse <see cref="T:System.MissingMemberException" />, stattdessen.Es wurde kein entsprechender öffentlicher Konstruktor gefunden. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
        <paramref name="type" /> ist ein COM-Objekt, aber der Klassenbezeichner für das Abrufen des Typs ist ungültig, oder die angegebene Klasse ist nicht registriert. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="type" /> ist kein gültiger Typ. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, RemotingConfiguration" />
      </PermissionSet>
    </member>
    <member name="T:System.ArgumentException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn eines der Argumente für eine Methode ungültig ist.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ArgumentException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentException" />-Klasse.</summary>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter kein NULL-Verweis ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentException" />-Klasse mit einer angegebenen Fehlermeldung und dem Namen des Parameters, der die Ausnahme auslöst.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="paramName">Der Name des Parameters, der die aktuelle Ausnahme verursacht hat. </param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String,System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentException" />-Klasse mit einer angegebenen Fehlermeldung, dem Parameternamen und einem Verweis auf die innere Ausnahme, die diese Ausnahme verursacht hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="paramName">Der Name des Parameters, der die aktuelle Ausnahme verursacht hat. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter kein NULL-Verweis ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="P:System.ArgumentException.Message">
      <summary>Ruft die Fehlermeldung und den Parameternamen oder nur die Fehlermeldung ab, wenn kein Parametername festgelegt ist.</summary>
      <returns>Eine Textzeichenfolge, die die Ausnahme detailliert beschreibt.Der Wert dieser Eigenschaft liegt in einer der beiden folgenden Formen vor:Bedingung Wert  Der <paramref name="paramName" /> ist ein NULL-Verweis (Nothing in Visual Basic) oder hat die Länge 0. Die an den Konstruktor übergebene <paramref name="message" />-Zeichenfolge.  Der <paramref name="paramName" /> ist kein NULL-Verweis (Nothing in Visual Basic) und hat eine Länge, die größer ist als 0. Die <paramref name="message" />-Zeichenfolge, an die der Name des ungültigen Parameters angefügt ist. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ArgumentException.ParamName">
      <summary>Ruft den Namen des Parameters ab, der diese Ausnahme auslöst.</summary>
      <returns>Der Name des Parameters.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.ArgumentNullException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein NULL-Verweis (Nothing in Visual Basic) an eine Methode übergeben wird, für die dies kein gültiges Argument ist. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgumentNullException.#ctor">
      <summary>Initialisiert eine neue Instanz der<see cref="T:System.ArgumentNullException" />-Klasse.</summary>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentNullException" />-Klasse mit dem Namen des Parameters, der diese Ausnahme auslöst.</summary>
      <param name="paramName">Der Name des Parameters, der die Ausnahme verursacht hat. </param>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentNullException" />-Klasse mit einer angegebenen Fehlermeldung und der Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache dieser Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (Nothing in Visual Basic), wenn keine innere Ausnahme angegeben ist. </param>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.String,System.String)">
      <summary>Initialisiert eine Instanz der <see cref="T:System.ArgumentNullException" />-Klasse mit einer angegebenen Fehlermeldung und dem Namen des Parameters, der die Ausnahme auslöst.</summary>
      <param name="paramName">Der Name des Parameters, der die Ausnahme verursacht hat. </param>
      <param name="message">Eine Meldung mit einer Beschreibung des Fehlers. </param>
    </member>
    <member name="T:System.ArgumentOutOfRangeException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn der Wert eines Arguments nicht in dem Wertebereich liegt, der durch die aufgerufene Methode als zulässig definiert ist.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentOutOfRangeException" />-Klasse.</summary>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentOutOfRangeException" />-Klasse mit dem Namen des Parameters, der diese Ausnahme auslöst.</summary>
      <param name="paramName">Der Name des Parameters, der die Ausnahme verursacht hat. </param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentOutOfRangeException" />-Klasse mit einer angegebenen Fehlermeldung und der Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache dieser Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die aktuelle Ausnahme ausgelöst hat, oder ein Nullverweis (Nothing in Visual Basic), wenn keine innere Ausnahme angegeben ist. </param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentOutOfRangeException" />-Klasse mit einer angegebenen Fehlermeldung, dem Namen des Parameters und dem Wert des Arguments und einer angegebenen Fehlermeldung.</summary>
      <param name="paramName">Der Name des Parameters, der die Ausnahme verursacht hat. </param>
      <param name="actualValue">Der Wert des Arguments, das diese Ausnahme auslöst. </param>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird. </param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentOutOfRangeException" />-Klasse mit dem Namen des Parameters, der die Ausnahme auslöst und einer angegebenen Fehlermeldung.</summary>
      <param name="paramName">Der Name des Parameters, der die Ausnahme verursacht hat. </param>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird. </param>
    </member>
    <member name="P:System.ArgumentOutOfRangeException.ActualValue">
      <summary>Ruft den Argumentwert ab, der die Ausnahme auslöst.</summary>
      <returns>Ein Object, das den Wert des Parameters enthält, der die aktuelle <see cref="T:System.Exception" /> verursacht hat.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ArgumentOutOfRangeException.Message">
      <summary>Ruft die Fehlermeldung und die Zeichenfolgendarstellung des ungültigen Argumentwerts oder nur die Fehlermeldung ab, wenn der Argumentwert Null ist.</summary>
      <returns>Die Textmeldung für die Ausnahme.Der Wert dieser Eigenschaft liegt in einer der beiden folgenden Formen vor:Bedingung Wert Die <paramref name="actualValue" /> ist null. Die an den Konstruktor übergebene <paramref name="message" />-Zeichenfolge. <paramref name="actualValue" /> ist nicht null. Die <paramref name="message" />-Zeichenfolge, der die Zeichenfolgendarstellung des ungültigen Argumentwerts angefügt ist. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ArithmeticException">
      <summary>Die Ausnahme, die aufgrund von Fehlern in einer arithmetischen, Umwandlungs- oder Konvertierungsoperation ausgelöst wird.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArithmeticException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArithmeticException" />-Klasse.</summary>
    </member>
    <member name="M:System.ArithmeticException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArithmeticException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt. </param>
    </member>
    <member name="M:System.ArithmeticException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArithmeticException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter kein NULL-Verweis ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Array">
      <summary>Stellt Methoden zum Erstellen, Bearbeiten, Durchsuchen und Sortieren von Arrays bereit und ist damit Basisklasse für alle Arrays in der Common Language Runtime.Um den .NET Framework-Quellcode für diesen Typ zu durchsuchen, finden Sie unter der Referenz.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object)">
      <summary>Durchsucht einen Bereich von Elementen in einem sortierten eindimensionalen Array nach einem Wert, mithilfe der <see cref="T:System.IComparable" />-Schnittstelle, die von jedem Element des Arrays und durch den angegebenen Wert implementiert wird.</summary>
      <returns>Der Index des angegebenen <paramref name="value" /> im angegebenen <paramref name="array" />, sofern <paramref name="value" /> gefunden wurde.Wenn <paramref name="value" /> nicht gefunden wurde und <paramref name="value" /> kleiner als ein oder mehr Elemente in <paramref name="array" /> ist, eine negative Zahl, die das bitweise Komplement des Index des ersten Elements darstellt, das größer als <paramref name="value" /> ist.Eine negative Zahl, die das bitweise Komplement von Index des letzten Elements + 1 darstellt, wenn <paramref name="value" /> nicht gefunden wurde und <paramref name="value" /> größer als alle Elemente in <paramref name="array" /> ist.</returns>
      <param name="array">Das zu durchsuchende sortierte eindimensionale <see cref="T:System.Array" />.</param>
      <param name="index">Der Startindex des zu durchsuchenden Bereichs.</param>
      <param name="length">Die Länge des zu durchsuchenden Bereichs.</param>
      <param name="value">Das Objekt, nach dem gesucht werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> ist mehrdimensional.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als die untere Grenze von <paramref name="array" />.- oder - <paramref name="length" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich in <paramref name="array" /> an.- oder - Der Typ von <paramref name="value" /> ist nicht mit den Elementen von <paramref name="array" /> kompatibel.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> implementiert die <see cref="T:System.IComparable" />-Schnittstelle nicht, und der Suchvorgang findet ein Element, das die <see cref="T:System.IComparable" />-Schnittstelle nicht implementiert.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
      <summary>Durchsucht einen Bereich von Elementen in einem sortierten eindimensionalen Array nach einem Wert, mithilfe der angegebenen <see cref="T:System.Collections.IComparer" />-Schnittstelle.</summary>
      <returns>Der Index des angegebenen <paramref name="value" /> im angegebenen <paramref name="array" />, sofern <paramref name="value" /> gefunden wurde.Wenn <paramref name="value" /> nicht gefunden wurde und <paramref name="value" /> kleiner als ein oder mehr Elemente in <paramref name="array" /> ist, eine negative Zahl, die das bitweise Komplement des Index des ersten Elements darstellt, das größer als <paramref name="value" /> ist.Eine negative Zahl, die das bitweise Komplement von Index des letzten Elements + 1 darstellt, wenn <paramref name="value" /> nicht gefunden wurde und <paramref name="value" /> größer als alle Elemente in <paramref name="array" /> ist.</returns>
      <param name="array">Das zu durchsuchende sortierte eindimensionale <see cref="T:System.Array" />.</param>
      <param name="index">Der Startindex des zu durchsuchenden Bereichs.</param>
      <param name="length">Die Länge des zu durchsuchenden Bereichs.</param>
      <param name="value">Das Objekt, nach dem gesucht werden soll.</param>
      <param name="comparer">Die <see cref="T:System.Collections.IComparer" />-Implementierung, die beim Vergleich von Elementen verwendet werden soll.- oder -  null, wenn die <see cref="T:System.IComparable" />-Implementierung des jeweiligen Elements verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> ist mehrdimensional.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als die untere Grenze von <paramref name="array" />.- oder - <paramref name="length" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich in <paramref name="array" /> an.- oder - <paramref name="comparer" /> ist null, und der Typ von <paramref name="value" /> ist nicht mit den Elementen von <paramref name="array" /> kompatibel.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> ist null, <paramref name="value" /> implementiert die <see cref="T:System.IComparable" />-Schnittstelle nicht, und der Suchvorgang findet ein Element, das die <see cref="T:System.IComparable" />-Schnittstelle nicht implementiert.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Object)">
      <summary>Durchsucht ein ganzes sortiertes eindimensionales Array nach einem bestimmten Element, mithilfe der <see cref="T:System.IComparable" />-Schnittstelle, die von jedem Element des Array und durch das angegebene Objekt implementiert wird.</summary>
      <returns>Der Index des angegebenen <paramref name="value" /> im angegebenen <paramref name="array" />, sofern <paramref name="value" /> gefunden wurde.Wenn <paramref name="value" /> nicht gefunden wurde und <paramref name="value" /> kleiner als ein oder mehr Elemente in <paramref name="array" /> ist, eine negative Zahl, die das bitweise Komplement des Index des ersten Elements darstellt, das größer als <paramref name="value" /> ist.Eine negative Zahl, die das bitweise Komplement von Index des letzten Elements + 1 darstellt, wenn <paramref name="value" /> nicht gefunden wurde und <paramref name="value" /> größer als alle Elemente in <paramref name="array" /> ist.</returns>
      <param name="array">Das zu durchsuchende sortierte eindimensionale <see cref="T:System.Array" />.</param>
      <param name="value">Das Objekt, nach dem gesucht werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> ist mehrdimensional.</exception>
      <exception cref="T:System.ArgumentException">Der Typ von <paramref name="value" /> ist nicht mit den Elementen von <paramref name="array" /> kompatibel.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> implementiert die <see cref="T:System.IComparable" />-Schnittstelle nicht, und der Suchvorgang findet ein Element, das die <see cref="T:System.IComparable" />-Schnittstelle nicht implementiert.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Object,System.Collections.IComparer)">
      <summary>Durchsucht ein ganzes sortiertes eindimensionales Array mithilfe der angegebenen <see cref="T:System.Collections.IComparer" />-Schnittstelle nach einem Wert.</summary>
      <returns>Der Index des angegebenen <paramref name="value" /> im angegebenen <paramref name="array" />, sofern <paramref name="value" /> gefunden wurde.Wenn <paramref name="value" /> nicht gefunden wurde und <paramref name="value" /> kleiner als ein oder mehr Elemente in <paramref name="array" /> ist, eine negative Zahl, die das bitweise Komplement des Index des ersten Elements darstellt, das größer als <paramref name="value" /> ist.Eine negative Zahl, die das bitweise Komplement von Index des letzten Elements + 1 darstellt, wenn <paramref name="value" /> nicht gefunden wurde und <paramref name="value" /> größer als alle Elemente in <paramref name="array" /> ist.</returns>
      <param name="array">Das zu durchsuchende sortierte eindimensionale <see cref="T:System.Array" />.</param>
      <param name="value">Das Objekt, nach dem gesucht werden soll.</param>
      <param name="comparer">Die <see cref="T:System.Collections.IComparer" />-Implementierung, die beim Vergleich von Elementen verwendet werden soll.- oder -  null, wenn die <see cref="T:System.IComparable" />-Implementierung des jeweiligen Elements verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> ist mehrdimensional.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparer" /> ist null, und der Typ von <paramref name="value" /> ist nicht mit den Elementen von <paramref name="array" /> kompatibel.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> ist null, <paramref name="value" /> implementiert die <see cref="T:System.IComparable" />-Schnittstelle nicht, und der Suchvorgang findet ein Element, das die <see cref="T:System.IComparable" />-Schnittstelle nicht implementiert.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0)">
      <summary>Durchsucht einen Bereich von Elementen in einem sortierten eindimensionalen Array nach einem Wert, mithilfe der generischen Schnittstelle <see cref="T:System.IComparable`1" />, die von jedem Element des <see cref="T:System.Array" /> und durch den angegebenen Wert implementiert wird.</summary>
      <returns>Der Index des angegebenen <paramref name="value" /> im angegebenen <paramref name="array" />, sofern <paramref name="value" /> gefunden wurde.Wenn <paramref name="value" /> nicht gefunden wurde und <paramref name="value" /> kleiner als ein oder mehr Elemente in <paramref name="array" /> ist, eine negative Zahl, die das bitweise Komplement des Index des ersten Elements darstellt, das größer als <paramref name="value" /> ist.Eine negative Zahl, die das bitweise Komplement von Index des letzten Elements + 1 darstellt, wenn <paramref name="value" /> nicht gefunden wurde und <paramref name="value" /> größer als alle Elemente in <paramref name="array" /> ist.</returns>
      <param name="array">Das zu durchsuchende sortierte eindimensionale und nullbasierte <see cref="T:System.Array" />. </param>
      <param name="index">Der Startindex des zu durchsuchenden Bereichs.</param>
      <param name="length">Die Länge des zu durchsuchenden Bereichs.</param>
      <param name="value">Das Objekt, nach dem gesucht werden soll.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als die untere Grenze von <paramref name="array" />.- oder - <paramref name="length" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich in <paramref name="array" /> an.- oder - Der Typ von <paramref name="value" /> ist nicht mit den Elementen von <paramref name="array" /> kompatibel.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="T" /> implementiert die generische <see cref="T:System.IComparable`1" />-Schnittstelle nicht.</exception>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
      <summary>Durchsucht einen Bereich von Elementen in einem sortierten eindimensionalen Array nach einem Wert, mithilfe der angegebenen generischen Schnittstelle <see cref="T:System.Collections.Generic.IComparer`1" />.</summary>
      <returns>Der Index des angegebenen <paramref name="value" /> im angegebenen <paramref name="array" />, sofern <paramref name="value" /> gefunden wurde.Wenn <paramref name="value" /> nicht gefunden wurde und <paramref name="value" /> kleiner als ein oder mehr Elemente in <paramref name="array" /> ist, eine negative Zahl, die das bitweise Komplement des Index des ersten Elements darstellt, das größer als <paramref name="value" /> ist.Eine negative Zahl, die das bitweise Komplement von Index des letzten Elements + 1 darstellt, wenn <paramref name="value" /> nicht gefunden wurde und <paramref name="value" /> größer als alle Elemente in <paramref name="array" /> ist.</returns>
      <param name="array">Das zu durchsuchende sortierte eindimensionale und nullbasierte <see cref="T:System.Array" />. </param>
      <param name="index">Der Startindex des zu durchsuchenden Bereichs.</param>
      <param name="length">Die Länge des zu durchsuchenden Bereichs.</param>
      <param name="value">Das Objekt, nach dem gesucht werden soll.</param>
      <param name="comparer">Die <see cref="T:System.Collections.Generic.IComparer`1" />-Implementierung, die beim Vergleich von Elementen verwendet werden soll.- oder -  null, wenn die <see cref="T:System.IComparable`1" />-Implementierung des jeweiligen Elements verwendet werden soll.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als die untere Grenze von <paramref name="array" />.- oder - <paramref name="length" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich in <paramref name="array" /> an.- oder - <paramref name="comparer" /> ist null, und der Typ von <paramref name="value" /> ist nicht mit den Elementen von <paramref name="array" /> kompatibel.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> ist null und <paramref name="T" /> implementiert die generische Schnittstelle <see cref="T:System.IComparable`1" /> nicht.</exception>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],``0)">
      <summary>Durchsucht ein ganzes sortiertes eindimensionales Array nach einem bestimmten Element, mithilfe der generischen Schnittstelle <see cref="T:System.IComparable`1" />, die von jedem Element des <see cref="T:System.Array" /> und vom angegebenen Objekt implementiert wird.</summary>
      <returns>Der Index des angegebenen <paramref name="value" /> im angegebenen <paramref name="array" />, sofern <paramref name="value" /> gefunden wurde.Wenn <paramref name="value" /> nicht gefunden wurde und <paramref name="value" /> kleiner als ein oder mehr Elemente in <paramref name="array" /> ist, eine negative Zahl, die das bitweise Komplement des Index des ersten Elements darstellt, das größer als <paramref name="value" /> ist.Eine negative Zahl, die das bitweise Komplement von Index des letzten Elements + 1 darstellt, wenn <paramref name="value" /> nicht gefunden wurde und <paramref name="value" /> größer als alle Elemente in <paramref name="array" /> ist.</returns>
      <param name="array">Das zu durchsuchende sortierte eindimensionale und nullbasierte <see cref="T:System.Array" />. </param>
      <param name="value">Das Objekt, nach dem gesucht werden soll.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="T" /> implementiert die generische <see cref="T:System.IComparable`1" />-Schnittstelle nicht.</exception>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],``0,System.Collections.Generic.IComparer{``0})">
      <summary>Durchsucht ein ganzes sortiertes eindimensionales Array nach einem Wert, mithilfe der angegebenen generischen Schnittstelle <see cref="T:System.Collections.Generic.IComparer`1" />.</summary>
      <returns>Der Index des angegebenen <paramref name="value" /> im angegebenen <paramref name="array" />, sofern <paramref name="value" /> gefunden wurde.Wenn <paramref name="value" /> nicht gefunden wurde und <paramref name="value" /> kleiner als ein oder mehr Elemente in <paramref name="array" /> ist, eine negative Zahl, die das bitweise Komplement des Index des ersten Elements darstellt, das größer als <paramref name="value" /> ist.Eine negative Zahl, die das bitweise Komplement von Index des letzten Elements + 1 darstellt, wenn <paramref name="value" /> nicht gefunden wurde und <paramref name="value" /> größer als alle Elemente in <paramref name="array" /> ist.</returns>
      <param name="array">Das zu durchsuchende sortierte eindimensionale und nullbasierte <see cref="T:System.Array" />.  </param>
      <param name="value">Das Objekt, nach dem gesucht werden soll.</param>
      <param name="comparer">Die <see cref="T:System.Collections.Generic.IComparer`1" />-Implementierung, die beim Vergleich von Elementen verwendet werden soll.- oder -  null, wenn die <see cref="T:System.IComparable`1" />-Implementierung des jeweiligen Elements verwendet werden soll.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparer" /> ist null, und der Typ von <paramref name="value" /> ist nicht mit den Elementen von <paramref name="array" /> kompatibel.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> ist null und <paramref name="T" /> implementiert die generische Schnittstelle <see cref="T:System.IComparable`1" /> nicht.</exception>
    </member>
    <member name="M:System.Array.Clear(System.Array,System.Int32,System.Int32)">
      <summary>Legt einen Bereich von Elementen in einem Array mit dem Standardwert der einzelnen Elementtypen fest.</summary>
      <param name="array">Das Array, dessen Elemente gelöscht werden sollen.</param>
      <param name="index">Der Startindex für den Bereich der zu löschenden Elemente.</param>
      <param name="length">Die Anzahl der zu löschenden Elemente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> ist kleiner als die untere Grenze von <paramref name="array" />.- oder - <paramref name="length" /> ist kleiner als Null.- oder - Die Summe von <paramref name="index" /> und <paramref name="length" /> ist größer als die Länge des <paramref name="array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Clone">
      <summary>Erstellt eine flache Kopie von <see cref="T:System.Array" />.</summary>
      <returns>Eine flache Kopie von <see cref="T:System.Array" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Kopiert einen beim angegebenen Quellindex beginnenden Elementbereich eines <see cref="T:System.Array" /> und fügt ihn ab dem angegebenen Zielindex in ein anderes <see cref="T:System.Array" /> ein.Stellt sicher, dass alle Änderungen rückgängig gemacht werden, wenn der Kopiervorgang nicht vollständig abgeschlossen wurde.</summary>
      <param name="sourceArray">Das <see cref="T:System.Array" />, das die zu kopierenden Daten enthält.</param>
      <param name="sourceIndex">Eine 32-Bit-Ganzzahl, die den Index im <paramref name="sourceArray" /> angibt, ab dem kopiert werden soll.</param>
      <param name="destinationArray">Das <see cref="T:System.Array" />, das die Daten empfängt.</param>
      <param name="destinationIndex">Eine 32-Bit-Ganzzahl, die den Index im <paramref name="destinationArray" /> angibt, ab dem gespeichert werden soll.</param>
      <param name="length">Eine 32-Bit-Ganzzahl, die die Anzahl der zu kopierenden Elemente darstellt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" /> ist null.- oder - <paramref name="destinationArray" /> ist null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="sourceArray" /> und <paramref name="destinationArray" /> haben verschiedene Ränge.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">Der <paramref name="sourceArray" />-Typ ist nicht gleich dem <paramref name="destinationArray" />-Typ und nicht von diesem abgeleitet.</exception>
      <exception cref="T:System.InvalidCastException">Mindestens ein Element von <paramref name="sourceArray" /> kann nicht in den Typ von <paramref name="destinationArray" /> umgewandelt werden.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" /> ist kleiner als die untere Grenze der ersten Dimension von <paramref name="sourceArray" />.- oder - <paramref name="destinationIndex" /> ist kleiner als die untere Grenze der ersten Dimension von <paramref name="destinationArray" />.- oder - <paramref name="length" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="length" /> ist größer als die Anzahl der Elemente von <paramref name="sourceIndex" /> bis zum Ende von <paramref name="sourceArray" />.- oder - <paramref name="length" /> ist größer als die Anzahl der Elemente von <paramref name="destinationIndex" /> bis zum Ende von <paramref name="destinationArray" />.</exception>
    </member>
    <member name="M:System.Array.Copy(System.Array,System.Array,System.Int32)">
      <summary>Kopiert einen mit dem ersten Element beginnenden Elementbereich eines <see cref="T:System.Array" /> und fügt ihn ab dem ersten Element in ein anderes <see cref="T:System.Array" /> ein.Die Länge wird als 32-Bit-Ganzzahl angegeben.</summary>
      <param name="sourceArray">Das <see cref="T:System.Array" />, das die zu kopierenden Daten enthält.</param>
      <param name="destinationArray">Das <see cref="T:System.Array" />, das die Daten empfängt.</param>
      <param name="length">Eine 32-Bit-Ganzzahl, die die Anzahl der zu kopierenden Elemente darstellt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" /> ist null.- oder - <paramref name="destinationArray" /> ist null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="sourceArray" /> und <paramref name="destinationArray" /> haben verschiedene Ränge.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">Die Typen von <paramref name="sourceArray" /> und <paramref name="destinationArray" /> sind inkompatibel.</exception>
      <exception cref="T:System.InvalidCastException">Mindestens ein Element von <paramref name="sourceArray" /> kann nicht in den Typ von <paramref name="destinationArray" /> umgewandelt werden.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="length" /> ist größer als die Anzahl der Elemente von <paramref name="sourceArray" />.- oder - <paramref name="length" /> ist größer als die Anzahl der Elemente von <paramref name="destinationArray" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Kopiert einen beim angegebenen Quellindex beginnenden Elementbereich eines <see cref="T:System.Array" /> und fügt ihn ab dem angegebenen Zielindex in ein anderes <see cref="T:System.Array" /> ein.Die Länge und die Indizes werden als 32-Bit-Ganzzahlen angegeben.</summary>
      <param name="sourceArray">Das <see cref="T:System.Array" />, das die zu kopierenden Daten enthält.</param>
      <param name="sourceIndex">Eine 32-Bit-Ganzzahl, die den Index im <paramref name="sourceArray" /> angibt, ab dem kopiert werden soll.</param>
      <param name="destinationArray">Das <see cref="T:System.Array" />, das die Daten empfängt.</param>
      <param name="destinationIndex">Eine 32-Bit-Ganzzahl, die den Index im <paramref name="destinationArray" /> angibt, ab dem gespeichert werden soll.</param>
      <param name="length">Eine 32-Bit-Ganzzahl, die die Anzahl der zu kopierenden Elemente darstellt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" /> ist null.- oder - <paramref name="destinationArray" /> ist null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="sourceArray" /> und <paramref name="destinationArray" /> haben verschiedene Ränge.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">Die Typen von <paramref name="sourceArray" /> und <paramref name="destinationArray" /> sind inkompatibel.</exception>
      <exception cref="T:System.InvalidCastException">Mindestens ein Element von <paramref name="sourceArray" /> kann nicht in den Typ von <paramref name="destinationArray" /> umgewandelt werden.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" /> ist kleiner als die untere Grenze der ersten Dimension von <paramref name="sourceArray" />.- oder - <paramref name="destinationIndex" /> ist kleiner als die untere Grenze der ersten Dimension von <paramref name="destinationArray" />.- oder - <paramref name="length" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="length" /> ist größer als die Anzahl der Elemente von <paramref name="sourceIndex" /> bis zum Ende von <paramref name="sourceArray" />.- oder - <paramref name="length" /> ist größer als die Anzahl der Elemente von <paramref name="destinationIndex" /> bis zum Ende von <paramref name="destinationArray" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert alle Elemente des aktuellen eindimensionalen Arrays in das angegebene eindimensionale Array, beginnend am angegebenen Index des Zielarrays.Der Index wird als 32-Bit-Ganzzahl angegeben.</summary>
      <param name="array">Das eindimensionale Array, das das Ziel der aus dem aktuellen Array kopierten Elemente ist.</param>
      <param name="index">Eine 32-Bit-Ganzzahl, die den Index im <paramref name="array" /> angibt, ab dem kopiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als die untere Grenze von <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.- oder - Die Anzahl der Elemente im Quellarraysegment ist größer als die verfügbare Anzahl von Elementen von <paramref name="index" /> bis zum Ende des Ziel-<paramref name="array" />.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">Der Typ der Quell-<see cref="T:System.Array" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</exception>
      <exception cref="T:System.RankException">Das Quellarray ist mehrdimensional.</exception>
      <exception cref="T:System.InvalidCastException">Mindestens ein Element im neuen Ausgangsarray <see cref="T:System.Array" /> kann nicht in den Typ des Zielarrays <paramref name="array" /> umgewandelt werden.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32)">
      <summary>Erstellt ein eindimensionales <see cref="T:System.Array" /> der angegebenen Länge und vom angegebenen <see cref="T:System.Type" /> mit nullbasierter Indizierung.</summary>
      <returns>Ein neues eindimensionales <see cref="T:System.Array" /> der angegebenen Länge und vom angegebenen <see cref="T:System.Type" /> mit nullbasierter Indizierung.</returns>
      <param name="elementType">Der <see cref="T:System.Type" /> des zu erstellenden <see cref="T:System.Array" />.</param>
      <param name="length">Die Größe des zu erstellenden <see cref="T:System.Array" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementType" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementType" /> ist kein gültiger <see cref="T:System.Type" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" /> wird nicht unterstützt.Beispielsweise wird <see cref="T:System.Void" /> nicht unterstützt.- oder - <paramref name="elementType" /> ist ein offener generischer Typ.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> ist kleiner als Null.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32[])">
      <summary>Erstellt ein mehrdimensionales <see cref="T:System.Array" /> vom angegebenen <see cref="T:System.Type" /> mit der für jede Dimension angegebenen Länge und mit nullbasierter Indizierung.Die Längen der Dimension werden in einem Array von 32-Bit-Ganzzahlen angegeben.</summary>
      <returns>Ein neues mehrdimensionales <see cref="T:System.Array" /> vom angegebenen <see cref="T:System.Type" /> mit der für jede Dimension angegebenen Länge und mit nullbasierter Indizierung.</returns>
      <param name="elementType">Der <see cref="T:System.Type" /> des zu erstellenden <see cref="T:System.Array" />.</param>
      <param name="lengths">Ein Array von 32-Bit-Ganzzahlen, das die Größe der einzelnen Dimensionen des zu erstellenden <see cref="T:System.Array" /> darstellt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementType" /> ist null.- oder - <paramref name="lengths" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementType" /> ist kein gültiger <see cref="T:System.Type" />.- oder - Das <paramref name="lengths" />-Array enthält weniger als ein Element.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" /> wird nicht unterstützt.Beispielsweise wird <see cref="T:System.Void" /> nicht unterstützt.- oder - <paramref name="elementType" /> ist ein offener generischer Typ.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Wert in <paramref name="lengths" /> ist kleiner als 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32[],System.Int32[])">
      <summary>Erstellt ein mehrdimensionales <see cref="T:System.Array" /> vom angegebenen <see cref="T:System.Type" /> mit der für jede Dimension angegebenen Länge und Untergrenze.</summary>
      <returns>Ein neues mehrdimensionales <see cref="T:System.Array" /> vom angegebenen <see cref="T:System.Type" /> mit der für jede Dimension angegebenen Länge und Untergrenze.</returns>
      <param name="elementType">Der <see cref="T:System.Type" /> des zu erstellenden <see cref="T:System.Array" />.</param>
      <param name="lengths">Ein eindimensionales Array mit den Größen aller Dimensionen des zu erstellenden <see cref="T:System.Array" />.</param>
      <param name="lowerBounds">Ein eindimensionales Array mit der unteren Grenze (Startindex) für jede Dimension des zu erstellenden <see cref="T:System.Array" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementType" /> ist null.- oder - <paramref name="lengths" /> ist null.- oder - <paramref name="lowerBounds" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementType" /> ist kein gültiger <see cref="T:System.Type" />.- oder - Das <paramref name="lengths" />-Array enthält weniger als ein Element.- oder - Das <paramref name="lengths" />-Array und das <paramref name="lowerBounds" />-Array enthalten nicht dieselbe Anzahl von Elementen.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" /> wird nicht unterstützt.Beispielsweise wird <see cref="T:System.Void" /> nicht unterstützt.- oder - <paramref name="elementType" /> ist ein offener generischer Typ.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Wert in <paramref name="lengths" /> ist kleiner als 0.- oder - Ein Wert in <paramref name="lowerBounds" /> ist sehr groß, sodass die Summe aus dem unteren Grenzwert und der Länge einer Dimension größer als <see cref="F:System.Int32.MaxValue" /> ist.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Empty``1">
      <summary>Gibt ein leeres Array zurück.</summary>
      <returns>Gibt eine leere <see cref="T:System.Array" />.</returns>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
    </member>
    <member name="M:System.Array.Exists``1(``0[],System.Predicate{``0})">
      <summary>Bestimmt, ob das angegebene Array Elemente enthält, die mit den vom angegebenen Prädikat definierten Bedingungen übereinstimmen.</summary>
      <returns>true, wenn <paramref name="array" /> ein oder mehr Elemente enthält, die die durch das angegebene Prädikat definierten Bedingungen erfüllen, andernfalls false.</returns>
      <param name="array">Das zu durchsuchende eindimensionale und nullbasierte <see cref="T:System.Array" />.</param>
      <param name="match">Das <see cref="T:System.Predicate`1" />, das die Bedingungen für die Elemente definiert, nach denen gesucht werden soll.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.- oder - <paramref name="match" /> ist null.</exception>
    </member>
    <member name="M:System.Array.Find``1(``0[],System.Predicate{``0})">
      <summary>Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt das erste Vorkommen im gesamten <see cref="T:System.Array" /> zurück.</summary>
      <returns>Das erste Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, sofern vorhanden, andernfalls der Standardwert für den Typ <paramref name="T" />.</returns>
      <param name="array">Das zu durchsuchende eindimensionale und nullbasierte Array.</param>
      <param name="match">Das Prädikat, das die Bedingungen für das Element definiert, nach dem gesucht werden soll.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.- oder - <paramref name="match" /> ist null.</exception>
    </member>
    <member name="M:System.Array.FindAll``1(``0[],System.Predicate{``0})">
      <summary>Ruft alle Elemente ab, die die vom angegebenen Prädikat definierten Bedingungen erfüllen.</summary>
      <returns>Ein <see cref="T:System.Array" /> mit allen Elementen, die die durch das angegebene Prädikat angegebenen Bedingungen erfüllen, sofern gefunden, andernfalls ein leeres <see cref="T:System.Array" />.</returns>
      <param name="array">Das zu durchsuchende eindimensionale und nullbasierte <see cref="T:System.Array" />.</param>
      <param name="match">Das <see cref="T:System.Predicate`1" />, das die Bedingungen für die Elemente definiert, nach denen gesucht werden soll.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.- oder - <paramref name="match" /> ist null.</exception>
    </member>
    <member name="M:System.Array.FindIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})">
      <summary>Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des ersten Vorkommens innerhalb des Bereichs von Elementen im <see cref="T:System.Array" /> zurück, der am angegebenen Index beginnt und die angegebene Anzahl von Elementen umfasst.</summary>
      <returns>Der nullbasierte Index des ersten Vorkommnisses eines Elements, das mit den durch <paramref name="match" /> definierten Bedingungen übereinstimmt, sofern gefunden, andernfalls –1.</returns>
      <param name="array">Das zu durchsuchende eindimensionale und nullbasierte <see cref="T:System.Array" />.</param>
      <param name="startIndex">Der nullbasierte Startindex für die Suche.</param>
      <param name="count">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</param>
      <param name="match">Das <see cref="T:System.Predicate`1" />, das die Bedingungen für das Element definiert, nach dem gesucht werden soll.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.- oder - <paramref name="match" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für <paramref name="array" />.- oder - <paramref name="count" /> ist kleiner als Null.- oder - <paramref name="startIndex" /> und <paramref name="count" /> geben keinen gültigen Abschnitt in <paramref name="array" /> an.</exception>
    </member>
    <member name="M:System.Array.FindIndex``1(``0[],System.Int32,System.Predicate{``0})">
      <summary>Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des ersten Vorkommens innerhalb des Bereichs von Elementen im <see cref="T:System.Array" /> zurück, der vom angegebenen Index bis zum letzten Element reicht.</summary>
      <returns>Der nullbasierte Index des ersten Vorkommnisses eines Elements, das mit den durch <paramref name="match" /> definierten Bedingungen übereinstimmt, sofern gefunden, andernfalls –1.</returns>
      <param name="array">Das zu durchsuchende eindimensionale und nullbasierte <see cref="T:System.Array" />.</param>
      <param name="startIndex">Der nullbasierte Startindex für die Suche.</param>
      <param name="match">Das <see cref="T:System.Predicate`1" />, das die Bedingungen für das Element definiert, nach dem gesucht werden soll.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.- oder - <paramref name="match" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.FindIndex``1(``0[],System.Predicate{``0})">
      <summary>Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des ersten Vorkommens im gesamten <see cref="T:System.Array" /> zurück.</summary>
      <returns>Der nullbasierte Index des ersten Vorkommnisses eines Elements, das mit den durch <paramref name="match" /> definierten Bedingungen übereinstimmt, sofern gefunden, andernfalls –1.</returns>
      <param name="array">Das zu durchsuchende eindimensionale und nullbasierte <see cref="T:System.Array" />.</param>
      <param name="match">Das <see cref="T:System.Predicate`1" />, das die Bedingungen für das Element definiert, nach dem gesucht werden soll.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.- oder - <paramref name="match" /> ist null.</exception>
    </member>
    <member name="M:System.Array.FindLast``1(``0[],System.Predicate{``0})">
      <summary>Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt das letzte Vorkommen im gesamten <see cref="T:System.Array" /> zurück.</summary>
      <returns>Das letzte Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, sofern vorhanden, andernfalls der Standardwert für den Typ <paramref name="T" />.</returns>
      <param name="array">Das zu durchsuchende eindimensionale und nullbasierte <see cref="T:System.Array" />.</param>
      <param name="match">Das <see cref="T:System.Predicate`1" />, das die Bedingungen für das Element definiert, nach dem gesucht werden soll.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.- oder - <paramref name="match" /> ist null.</exception>
    </member>
    <member name="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})">
      <summary>Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des ersten Vorkommens innerhalb des Bereichs von Elementen im <see cref="T:System.Array" /> zurück, der die angegebene Anzahl von Elementen umfasst und am angegebenen Index endet.</summary>
      <returns>Der nullbasierte Index des letzten Vorkommnisses eines Elements, das mit den durch <paramref name="match" /> definierten Bedingungen übereinstimmt, sofern gefunden, andernfalls –1.</returns>
      <param name="array">Das zu durchsuchende eindimensionale und nullbasierte <see cref="T:System.Array" />.</param>
      <param name="startIndex">Der nullbasierte Startindex für die Rückwärtssuche.</param>
      <param name="count">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</param>
      <param name="match">Das <see cref="T:System.Predicate`1" />, das die Bedingungen für das Element definiert, nach dem gesucht werden soll.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.- oder - <paramref name="match" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für <paramref name="array" />.- oder - <paramref name="count" /> ist kleiner als Null.- oder - <paramref name="startIndex" /> und <paramref name="count" /> geben keinen gültigen Abschnitt in <paramref name="array" /> an.</exception>
    </member>
    <member name="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Predicate{``0})">
      <summary>Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des letzten Vorkommens innerhalb des Bereichs von Elementen im <see cref="T:System.Array" /> zurück, der vom ersten Element bis zum angegeben Index reicht.</summary>
      <returns>Der nullbasierte Index des letzten Vorkommnisses eines Elements, das mit den durch <paramref name="match" /> definierten Bedingungen übereinstimmt, sofern gefunden, andernfalls –1.</returns>
      <param name="array">Das zu durchsuchende eindimensionale und nullbasierte <see cref="T:System.Array" />.</param>
      <param name="startIndex">Der nullbasierte Startindex für die Rückwärtssuche.</param>
      <param name="match">Das <see cref="T:System.Predicate`1" />, das die Bedingungen für das Element definiert, nach dem gesucht werden soll.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.- oder - <paramref name="match" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.FindLastIndex``1(``0[],System.Predicate{``0})">
      <summary>Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des letzten Vorkommens im gesamten <see cref="T:System.Array" /> zurück.</summary>
      <returns>Der nullbasierte Index des letzten Vorkommnisses eines Elements, das mit den durch <paramref name="match" /> definierten Bedingungen übereinstimmt, sofern gefunden, andernfalls –1.</returns>
      <param name="array">Das zu durchsuchende eindimensionale und nullbasierte <see cref="T:System.Array" />.</param>
      <param name="match">Das <see cref="T:System.Predicate`1" />, das die Bedingungen für das Element definiert, nach dem gesucht werden soll.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.- oder - <paramref name="match" /> ist null.</exception>
    </member>
    <member name="M:System.Array.GetEnumerator">
      <summary>Gibt einen <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Array" /> zurück.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Array" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.GetLength(System.Int32)">
      <summary>Ruft eine 32-Bit-Ganzzahl ab, die die Anzahl der Elemente in der angegebenen Dimension des <see cref="T:System.Array" /> angibt.</summary>
      <returns>Eine 32-Bit-Ganzzahl, die die Anzahl der Elemente in der angegebenen Dimension angibt.</returns>
      <param name="dimension">Eine nullbasierte Dimension des <see cref="T:System.Array" />, deren Länge bestimmt werden soll.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="dimension" /> ist kleiner als Null.- oder - <paramref name="dimension" /> ist größer oder gleich <see cref="P:System.Array.Rank" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.GetLowerBound(System.Int32)">
      <summary>Ruft den Index des ersten Elements der angegebenen Dimension im Array ab.</summary>
      <returns>Der Index des ersten Elements der angegebenen Dimension im Array.</returns>
      <param name="dimension">Eine nullbasierte Dimension des Arrays, dessen Startindex bestimmt werden soll.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="dimension" /> ist kleiner als Null.- oder - <paramref name="dimension" /> ist größer oder gleich <see cref="P:System.Array.Rank" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.GetUpperBound(System.Int32)">
      <summary>Ruft den Index des letzten Elements der angegebenen Dimension im Array ab.</summary>
      <returns>Der Index des letzten Elements in der angegebenen Dimension im Array oder -1, wenn die angegebene Dimension leer ist. </returns>
      <param name="dimension">Eine nullbasierte Dimension des Arrays, dessen obere Grenze bestimmt werden soll.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="dimension" /> ist kleiner als Null.- oder - <paramref name="dimension" /> ist größer oder gleich <see cref="P:System.Array.Rank" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.GetValue(System.Int32)">
      <summary>Ruft den Wert an der angegebenen Position des eindimensionalen <see cref="T:System.Array" /> ab.Der Index wird als 32-Bit-Ganzzahl angegeben.</summary>
      <returns>Der Wert an der angegebenen Position des eindimensionalen <see cref="T:System.Array" />.</returns>
      <param name="index">Eine 32-Bit-Ganzzahl, die die Position des abzurufenden <see cref="T:System.Array" />-Elements darstellt.</param>
      <exception cref="T:System.ArgumentException">Das aktuelle <see cref="T:System.Array" /> hat nicht genau eine Dimension.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> liegt außerhalb des Bereichs der gültigen Indizes für das aktuelle <see cref="T:System.Array" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.GetValue(System.Int32[])">
      <summary>Ruft den Wert an der angegebenen Position des mehrdimensionalen <see cref="T:System.Array" /> ab.Die Indizes werden als ein Array von 32-Bit-Ganzzahlen angegeben.</summary>
      <returns>Der Wert an der angegebenen Position des mehrdimensionalen <see cref="T:System.Array" />.</returns>
      <param name="indices">Ein eindimensionales Array von 32-Bit-Ganzzahlen, das die Indizes darstellt, die die Position des abzurufenden <see cref="T:System.Array" />-Elements angeben.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="indices" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">Die Anzahl der Dimensionen im aktuellen <see cref="T:System.Array" /> ist nicht gleich der Anzahl der Elemente von <paramref name="indices" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Ein Element von <paramref name="indices" /> liegt außerhalb des Bereichs der gültigen Indizes für die entsprechende Dimension des aktuellen <see cref="T:System.Array" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf(System.Array,System.Object)">
      <summary>Sucht nach dem angegebenen Objekt und gibt den Index des ersten Vorkommens in einem eindimensionalen Array zurück. </summary>
      <returns>Der Index des ersten Vorkommens des <paramref name="value" /> in <paramref name="array" />, sofern gefunden; andernfalls gebunden unten des Arrays minus 1.</returns>
      <param name="array">Das zu durchsuchende eindimensionale Array.</param>
      <param name="value">Das in <paramref name="array" /> zu suchende Objekt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> ist mehrdimensional.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf(System.Array,System.Object,System.Int32)">
      <summary>Sucht das angegebene Objekt in einem Elementbereich eines eindimensionalen Arrays und gibt den Index seines ersten Auftretens zurück.Der Bereich erstreckt sich von einem angegebenen Index bis zum Ende des Arrays.</summary>
      <returns>Der Index des ersten Vorkommens des <paramref name="value" />, wenn es, innerhalb des Bereichs von Elementen in gefunden wird <paramref name="array" /> erstreckt sich vom <paramref name="startIndex" /> bis zum letzten Element; andernfalls gebunden unten des Arrays minus 1.</returns>
      <param name="array">Das zu durchsuchende eindimensionale Array.</param>
      <param name="value">Das in <paramref name="array" /> zu suchende Objekt.</param>
      <param name="startIndex">Der Startindex für die Suche.0 (null) ist in einem leeren Array gültig.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> ist mehrdimensional.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf(System.Array,System.Object,System.Int32,System.Int32)">
      <summary>Sucht das angegebene Objekt in einem Bereich von Elementen eines eindimensionalen Arrays und gibt den Index des ersten Vorkommens zurück.Der Bereich erstreckt sich von einem angegebenen Index für eine angegebene Anzahl von Elementen.</summary>
      <returns>Der Index des ersten Vorkommens des <paramref name="value" />, wenn es, in gefunden wird der <paramref name="array" /> vom Index <paramref name="startIndex" /> auf <paramref name="startIndex" /> + <paramref name="count" /> - 1; andernfalls gebunden unten des Arrays minus 1.</returns>
      <param name="array">Das zu durchsuchende eindimensionale Array.</param>
      <param name="value">Das in <paramref name="array" /> zu suchende Objekt.</param>
      <param name="startIndex">Der Startindex für die Suche.0 (null) ist in einem leeren Array gültig.</param>
      <param name="count">Die Anzahl der zu suchenden Elemente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für <paramref name="array" />.- oder - <paramref name="count" /> ist kleiner als Null.- oder - <paramref name="startIndex" /> und <paramref name="count" /> geben keinen gültigen Abschnitt in <paramref name="array" /> an.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> ist mehrdimensional.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf``1(``0[],``0)">
      <summary>Sucht nach dem angegebenen Objekt und gibt den Index des ersten Vorkommens in einem eindimensionalen Array zurück.</summary>
      <returns>Der nullbasierte Index des ersten Vorkommens des <paramref name="value" /> in der gesamten <paramref name="array" />, sofern gefunden; andernfalls -1.</returns>
      <param name="array">Das zu durchsuchende eindimensionale und nullbasierte Array.</param>
      <param name="value">Das in <paramref name="array" /> zu suchende Objekt.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
    </member>
    <member name="M:System.Array.IndexOf``1(``0[],``0,System.Int32)">
      <summary>Sucht das angegebene Objekt in einem Bereich von Elementen eines eindimensionalen Arrays und gibt den Index des ersten Vorkommens zurück.Der Bereich erstreckt sich von einem angegebenen Index bis zum Ende des Arrays.</summary>
      <returns>Der nullbasierte Index des ersten Vorkommens von <paramref name="value" /> innerhalb des Bereichs von Elementen in <paramref name="array" />, der sich von <paramref name="startIndex" /> bis zum letzten Element erstreckt, sofern gefunden, andernfalls –1.</returns>
      <param name="array">Das zu durchsuchende eindimensionale und nullbasierte Array.</param>
      <param name="value">Das in <paramref name="array" /> zu suchende Objekt.</param>
      <param name="startIndex">Der nullbasierte Startindex für die Suche.0 (null) ist in einem leeren Array gültig.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.IndexOf``1(``0[],``0,System.Int32,System.Int32)">
      <summary>Sucht das angegebene Objekt in einem Elementbereich eines eindimensionalen Arrays und gibt den Index seines ersten Auftretens zurück.Der Bereich erstreckt sich von einem angegebenen Index für eine angegebene Anzahl von Elementen.</summary>
      <returns>Der nullbasierte Index des ersten Vorkommens von <paramref name="value" /> innerhalb des Bereichs von Elementen in <paramref name="array" />, der am <paramref name="startIndex" /> beginnt und die durch <paramref name="count" /> angegebene Anzahl von Elementen enthält, sofern gefunden, andernfalls –1.</returns>
      <param name="array">Das zu durchsuchende eindimensionale und nullbasierte Array.</param>
      <param name="value">Das in <paramref name="array" /> zu suchende Objekt.</param>
      <param name="startIndex">Der nullbasierte Startindex für die Suche.0 (null) ist in einem leeren Array gültig.</param>
      <param name="count">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für <paramref name="array" />.- oder - <paramref name="count" /> ist kleiner als Null.- oder - <paramref name="startIndex" /> und <paramref name="count" /> geben keinen gültigen Abschnitt in <paramref name="array" /> an.</exception>
    </member>
    <member name="M:System.Array.Initialize">
      <summary>Initialisiert jedes Element des Werttyp-<see cref="T:System.Array" /> durch einen Aufruf des Standardkonstruktors für den Werttyp.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf(System.Array,System.Object)">
      <summary>Sucht nach dem angegebenen Objekt und gibt den Index des letzten Vorkommens innerhalb des gesamten eindimensionalen <see cref="T:System.Array" /> zurück.</summary>
      <returns>Der Index des letzten Vorkommens von <paramref name="value" /> im gesamten <paramref name="array" />, sofern gefunden, andernfalls die untere Grenze des Arrays - 1.</returns>
      <param name="array">Das zu durchsuchende eindimensionale <see cref="T:System.Array" />.</param>
      <param name="value">Das in <paramref name="array" /> zu suchende Objekt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> ist mehrdimensional.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32)">
      <summary>Sucht nach dem angegebenen Objekt und gibt den Index des letzten Vorkommens innerhalb des Bereichs von Elementen im eindimensionalen <see cref="T:System.Array" /> zurück, der sich vom ersten Element bis zum angegebenen Index erstreckt.</summary>
      <returns>Der Index des letzten Vorkommens von <paramref name="value" /> innerhalb des Bereichs von Elementen in <paramref name="array" />, der sich vom ersten Element bis zu <paramref name="startIndex" /> erstreckt, sofern gefunden, andernfalls die untere Grenze des Arrays - 1.</returns>
      <param name="array">Das zu durchsuchende eindimensionale <see cref="T:System.Array" />.</param>
      <param name="value">Das in <paramref name="array" /> zu suchende Objekt.</param>
      <param name="startIndex">Der Startindex für die Rückwärtssuche.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> ist mehrdimensional.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32,System.Int32)">
      <summary>Sucht nach dem angegebenen Objekt und gibt den Index des letzten Vorkommens innerhalb des Bereichs von Elementen im eindimensionalen <see cref="T:System.Array" /> zurück, der die angegebene Anzahl von Elementen enthält und am angegebenen Index endet.</summary>
      <returns>Der Index des letzten Vorkommens von <paramref name="value" /> im Bereich von Elementen in <paramref name="array" />, der die durch <paramref name="count" /> angegebene Anzahl von Elementen enthält und sich bis zu <paramref name="startIndex" /> erstreckt, sofern gefunden, andernfalls die untere Grenze des Arrays - 1.</returns>
      <param name="array">Das zu durchsuchende eindimensionale <see cref="T:System.Array" />.</param>
      <param name="value">Das in <paramref name="array" /> zu suchende Objekt.</param>
      <param name="startIndex">Der Startindex für die Rückwärtssuche.</param>
      <param name="count">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für <paramref name="array" />.- oder - <paramref name="count" /> ist kleiner als Null.- oder - <paramref name="startIndex" /> und <paramref name="count" /> geben keinen gültigen Abschnitt in <paramref name="array" /> an.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> ist mehrdimensional.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf``1(``0[],``0)">
      <summary>Sucht nach dem angegebenen Objekt und gibt den Index des letzten Vorkommens innerhalb des gesamten <see cref="T:System.Array" /> zurück.</summary>
      <returns>Der nullbasierte Index des letzten Vorkommens von <paramref name="value" /> in der gesamten <paramref name="array" />, sofern gefunden, andernfalls –1.</returns>
      <param name="array">Das zu durchsuchende eindimensionale und nullbasierte <see cref="T:System.Array" />.</param>
      <param name="value">Das in <paramref name="array" /> zu suchende Objekt.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
    </member>
    <member name="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32)">
      <summary>Sucht nach dem angegebenen Objekt und gibt den Index des letzten Vorkommens innerhalb des Bereichs von Elementen im <see cref="T:System.Array" /> zurück, der sich vom ersten Element bis zum angegebenen Index erstreckt.</summary>
      <returns>Der nullbasierte Index des letzten Vorkommens von <paramref name="value" /> innerhalb des Bereichs von Elementen in <paramref name="array" />, der sich vom ersten Element bis zu <paramref name="startIndex" /> erstreckt, sofern gefunden, andernfalls –1.</returns>
      <param name="array">Das zu durchsuchende eindimensionale und nullbasierte <see cref="T:System.Array" />.</param>
      <param name="value">Das in <paramref name="array" /> zu suchende Objekt.</param>
      <param name="startIndex">Der nullbasierte Startindex für die Rückwärtssuche.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32,System.Int32)">
      <summary>Sucht nach dem angegebenen Objekt und gibt den Index des letzten Vorkommens innerhalb des Bereichs von Elementen im <see cref="T:System.Array" /> zurück, der die angegebene Anzahl von Elementen enthält und am angegebenen Index endet.</summary>
      <returns>Der nullbasierte Index des letzten Vorkommens von <paramref name="value" /> innerhalb des Bereichs von Elementen in der <paramref name="array" />, der die durch <paramref name="count" /> angegebene Anzahl von Elementen enthält und am <paramref name="startIndex" /> endet, sofern gefunden, andernfalls –1.</returns>
      <param name="array">Das zu durchsuchende eindimensionale und nullbasierte <see cref="T:System.Array" />.</param>
      <param name="value">Das in <paramref name="array" /> zu suchende Objekt.</param>
      <param name="startIndex">Der nullbasierte Startindex für die Rückwärtssuche.</param>
      <param name="count">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für <paramref name="array" />.- oder - <paramref name="count" /> ist kleiner als Null.- oder - <paramref name="startIndex" /> und <paramref name="count" /> geben keinen gültigen Abschnitt in <paramref name="array" /> an.</exception>
    </member>
    <member name="P:System.Array.Length">
      <summary>Ruft eine 32-Bit-Ganzzahl ab, die die Gesamtanzahl der Elemente in allen Dimensionen des <see cref="T:System.Array" /> angibt.</summary>
      <returns>Eine 32-Bit-Ganzzahl, die die Gesamtanzahl der Elemente in allen Dimensionen des <see cref="T:System.Array" /> angibt, 0 (null), wenn keine Elemente im Array enthalten sind.</returns>
      <exception cref="T:System.OverflowException">Das Array ist mehrdimensional und enthält mehr als <see cref="F:System.Int32.MaxValue" />-Elemente.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Array.Rank">
      <summary>Ruft der Rang (Anzahl der Dimensionen) des <see cref="T:System.Array" /> ab.Ein eindimensionales Array gibt z. B. 1 zurück, ein zweidimensionales Array gibt 2 zurück usw.</summary>
      <returns>Der Rang (Anzahl der Dimensionen) des <see cref="T:System.Array" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Resize``1(``0[]@,System.Int32)">
      <summary>Ändert die Anzahl der Elemente eines eindimensionalen Arrays in die angegebene neue Größe.</summary>
      <param name="array">Das eindimensionale nullbasierte Array, dessen Größe geändert werden soll, oder null, um ein neues Array mit der angegebenen Größe zu erstellen.</param>
      <param name="newSize">Die Größe des neuen Arrays.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="newSize" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Array.Reverse(System.Array)">
      <summary>Kehrt die Reihenfolge der Elemente im gesamten eindimensionalen <see cref="T:System.Array" /> um.</summary>
      <param name="array">Das umzukehrende eindimensionale <see cref="T:System.Array" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null. </exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> ist mehrdimensional. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Reverse(System.Array,System.Int32,System.Int32)">
      <summary>Kehrt die Reihenfolge der Elemente in einem Bereich von Elementen im eindimensionalen <see cref="T:System.Array" /> um.</summary>
      <param name="array">Das umzukehrende eindimensionale <see cref="T:System.Array" />.</param>
      <param name="index">Der Startindex des umzukehrenden Abschnitts.</param>
      <param name="length">Die Anzahl der Elemente im umzukehrenden Abschnitt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> ist mehrdimensional.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als die untere Grenze von <paramref name="array" />.- oder - <paramref name="length" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich in <paramref name="array" /> an.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.SetValue(System.Object,System.Int32)">
      <summary>Legt das Element an der angegebenen Position des eindimensionalen <see cref="T:System.Array" /> auf einen Wert fest.Der Index wird als 32-Bit-Ganzzahl angegeben.</summary>
      <param name="value">Der neue Wert für das angegebene Element.</param>
      <param name="index">Eine 32-Bit-Ganzzahl, die die Position des festzulegenden <see cref="T:System.Array" />-Elements darstellt.</param>
      <exception cref="T:System.ArgumentException">Das aktuelle <see cref="T:System.Array" /> hat nicht genau eine Dimension.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> kann nicht in den Elementtyp des aktuellen <see cref="T:System.Array" /> umgewandelt werden.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> liegt außerhalb des Bereichs der gültigen Indizes für das aktuelle <see cref="T:System.Array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.SetValue(System.Object,System.Int32[])">
      <summary>Legt das Element an der angegebenen Position des mehrdimensionalen <see cref="T:System.Array" /> auf einen Wert fest.Die Indizes werden als ein Array von 32-Bit-Ganzzahlen angegeben.</summary>
      <param name="value">Der neue Wert für das angegebene Element.</param>
      <param name="indices">Ein eindimensionales Array von 32-Bit-Ganzzahlen, das die Indizes darstellt, die die Position des festzulegenden Elements angeben.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="indices" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">Die Anzahl der Dimensionen im aktuellen <see cref="T:System.Array" /> ist nicht gleich der Anzahl der Elemente von <paramref name="indices" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> kann nicht in den Elementtyp des aktuellen <see cref="T:System.Array" /> umgewandelt werden.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Ein Element von <paramref name="indices" /> liegt außerhalb des Bereichs der gültigen Indizes für die entsprechende Dimension des aktuellen <see cref="T:System.Array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array)">
      <summary>Sortiert die Elemente in einem ganzen eindimensionalen <see cref="T:System.Array" /> mithilfe der <see cref="T:System.IComparable" />-Implementierung jedes Elements des <see cref="T:System.Array" />.</summary>
      <param name="array">Das zu sortierende eindimensionale <see cref="T:System.Array" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> ist mehrdimensional.</exception>
      <exception cref="T:System.InvalidOperationException">Mindestens ein Element in <paramref name="array" /> implementiert die <see cref="T:System.IComparable" />-Schnittstelle nicht.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array)">
      <summary>Sortiert ein Paar von eindimensionalen <see cref="T:System.Array" />-Objekten (das eine enthält die Schlüssel und das andere die entsprechenden Werte) nach den Schlüsseln im ersten <see cref="T:System.Array" /> und verwendet dabei die <see cref="T:System.IComparable" />-Implementierung jedes Schlüssels.</summary>
      <param name="keys">Das eindimensionale <see cref="T:System.Array" /> mit den zu sortierenden Schlüsseln.</param>
      <param name="items">Das eindimensionale <see cref="T:System.Array" /> mit den Elementen, die den jeweiligen Schlüsseln im <paramref name="keys" />-<see cref="T:System.Array" /> entsprechen.- oder - null, wenn nur das <paramref name="keys" />-<see cref="T:System.Array" /> sortiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> ist null.</exception>
      <exception cref="T:System.RankException">Das <paramref name="keys" /><see cref="T:System.Array" /> ist mehrdimensional.- oder - Das <paramref name="items" /><see cref="T:System.Array" /> ist mehrdimensional.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> ist nicht null, und die Länge von <paramref name="keys" /> ist größer als die Länge von <paramref name="items" />.</exception>
      <exception cref="T:System.InvalidOperationException">Mindestens ein Element im <paramref name="keys" /><see cref="T:System.Array" /> implementiert die <see cref="T:System.IComparable" />-Schnittstelle nicht.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array,System.Collections.IComparer)">
      <summary>Sortiert ein Paar von eindimensionalen <see cref="T:System.Array" />-Objekten (das eine enthält die Schlüssel und das andere die entsprechenden Werte) nach den Schlüsseln im ersten <see cref="T:System.Array" /> und verwendet dabei den angegebenen <see cref="T:System.Collections.IComparer" />.</summary>
      <param name="keys">Das eindimensionale <see cref="T:System.Array" /> mit den zu sortierenden Schlüsseln.</param>
      <param name="items">Das eindimensionale <see cref="T:System.Array" /> mit den Elementen, die den jeweiligen Schlüsseln im <paramref name="keys" />-<see cref="T:System.Array" /> entsprechen.- oder - null, wenn nur das <paramref name="keys" />-<see cref="T:System.Array" /> sortiert werden soll.</param>
      <param name="comparer">Die <see cref="T:System.Collections.IComparer" />-Implementierung, die beim Vergleich von Elementen verwendet werden soll.- oder - null, wenn die <see cref="T:System.IComparable" />-Implementierung des jeweiligen Elements verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> ist null.</exception>
      <exception cref="T:System.RankException">Das <paramref name="keys" /><see cref="T:System.Array" /> ist mehrdimensional.- oder - Das <paramref name="items" /><see cref="T:System.Array" /> ist mehrdimensional.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> ist nicht null, und die Länge von <paramref name="keys" /> ist größer als die Länge von <paramref name="items" />. - oder - Die Implementierung von <paramref name="comparer" /> hat während der Sortierung einen Fehler verursacht.<paramref name="comparer" /> kann z. B. möglicherweise nicht 0 zurückgeben, wenn ein Element mit sich selbst verglichen wird.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> ist null, und mindestens ein Element im <paramref name="keys" /><see cref="T:System.Array" /> implementiert die <see cref="T:System.IComparable" />-Schnittstelle nicht.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32)">
      <summary>Sortiert einen Bereich von Elementen in einem Paar von eindimensionalen <see cref="T:System.Array" />-Objekten (das eine enthält die Schlüssel und das andere die entsprechenden Werte) nach den Schlüsseln im ersten <see cref="T:System.Array" /> und verwendet dabei die <see cref="T:System.IComparable" />-Implementierung jedes Schlüssels.</summary>
      <param name="keys">Das eindimensionale <see cref="T:System.Array" /> mit den zu sortierenden Schlüsseln.</param>
      <param name="items">Das eindimensionale <see cref="T:System.Array" /> mit den Elementen, die den jeweiligen Schlüsseln im <paramref name="keys" />-<see cref="T:System.Array" /> entsprechen.- oder - null, wenn nur das <paramref name="keys" />-<see cref="T:System.Array" /> sortiert werden soll.</param>
      <param name="index">Der Startindex des zu sortierenden Bereichs.</param>
      <param name="length">Die Anzahl der Elemente im zu sortierenden Bereich.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> ist null.</exception>
      <exception cref="T:System.RankException">Das <paramref name="keys" /><see cref="T:System.Array" /> ist mehrdimensional.- oder - Das <paramref name="items" /><see cref="T:System.Array" /> ist mehrdimensional.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als die untere Grenze von <paramref name="keys" />.- oder - <paramref name="length" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> ist nicht null, und die Länge von <paramref name="keys" /> ist größer als die Länge von <paramref name="items" />.- oder - <paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich im <paramref name="keys" /><see cref="T:System.Array" /> an.- oder - <paramref name="items" /> ist nicht null, und <paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich im <paramref name="items" /><see cref="T:System.Array" /> an.</exception>
      <exception cref="T:System.InvalidOperationException">Mindestens ein Element im <paramref name="keys" /><see cref="T:System.Array" /> implementiert die <see cref="T:System.IComparable" />-Schnittstelle nicht.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32,System.Collections.IComparer)">
      <summary>Sortiert einen Bereich von Elementen in einem Paar von eindimensionalen <see cref="T:System.Array" />-Objekten (das eine enthält die Schlüssel und das andere die entsprechenden Werte) nach den Schlüsseln im ersten <see cref="T:System.Array" /> und verwendet dabei den angegebenen <see cref="T:System.Collections.IComparer" />.</summary>
      <param name="keys">Das eindimensionale <see cref="T:System.Array" /> mit den zu sortierenden Schlüsseln.</param>
      <param name="items">Das eindimensionale <see cref="T:System.Array" /> mit den Elementen, die den jeweiligen Schlüsseln im <paramref name="keys" />-<see cref="T:System.Array" /> entsprechen.- oder - null, wenn nur das <paramref name="keys" />-<see cref="T:System.Array" /> sortiert werden soll.</param>
      <param name="index">Der Startindex des zu sortierenden Bereichs.</param>
      <param name="length">Die Anzahl der Elemente im zu sortierenden Bereich.</param>
      <param name="comparer">Die <see cref="T:System.Collections.IComparer" />-Implementierung, die beim Vergleich von Elementen verwendet werden soll.- oder - null, wenn die <see cref="T:System.IComparable" />-Implementierung des jeweiligen Elements verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> ist null.</exception>
      <exception cref="T:System.RankException">Das <paramref name="keys" /><see cref="T:System.Array" /> ist mehrdimensional.- oder - Das <paramref name="items" /><see cref="T:System.Array" /> ist mehrdimensional.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als die untere Grenze von <paramref name="keys" />.- oder - <paramref name="length" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> ist nicht null, und die untere Grenze von <paramref name="keys" /> entspricht nicht der unteren Grenze von <paramref name="items" />.- oder - <paramref name="items" /> ist nicht null, und die Länge von <paramref name="keys" /> ist größer als die Länge von <paramref name="items" />.- oder - <paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich im <paramref name="keys" /><see cref="T:System.Array" /> an.- oder - <paramref name="items" /> ist nicht null, und <paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich im <paramref name="items" /><see cref="T:System.Array" /> an. - oder - Die Implementierung von <paramref name="comparer" /> hat während der Sortierung einen Fehler verursacht.<paramref name="comparer" /> kann z. B. möglicherweise nicht 0 zurückgeben, wenn ein Element mit sich selbst verglichen wird.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> ist null, und mindestens ein Element im <paramref name="keys" /><see cref="T:System.Array" /> implementiert die <see cref="T:System.IComparable" />-Schnittstelle nicht.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Collections.IComparer)">
      <summary>Sortiert die Elemente in einem eindimensionalen <see cref="T:System.Array" /> mithilfe des angegebenen <see cref="T:System.Collections.IComparer" />.</summary>
      <param name="array">Das zu sortierende eindimensionale Array.</param>
      <param name="comparer">Die Implementierung, die beim Vergleich von Elementen verwendet werden soll.- oder - null, wenn die <see cref="T:System.IComparable" />-Implementierung des jeweiligen Elements verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> ist mehrdimensional.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> ist null, und mindestens ein Element in <paramref name="array" /> implementiert die <see cref="T:System.IComparable" />-Schnittstelle nicht.</exception>
      <exception cref="T:System.ArgumentException">Die Implementierung von <paramref name="comparer" /> hat während der Sortierung einen Fehler verursacht.<paramref name="comparer" /> kann z. B. möglicherweise nicht 0 zurückgeben, wenn ein Element mit sich selbst verglichen wird.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Int32,System.Int32)">
      <summary>Sortiert die Elemente in einem Bereich von Elementen in einem eindimensionalen <see cref="T:System.Array" /> mithilfe der <see cref="T:System.IComparable" />-Implementierung jedes Elements des <see cref="T:System.Array" />.</summary>
      <param name="array">Das zu sortierende eindimensionale <see cref="T:System.Array" />.</param>
      <param name="index">Der Startindex des zu sortierenden Bereichs.</param>
      <param name="length">Die Anzahl der Elemente im zu sortierenden Bereich.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> ist mehrdimensional.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als die untere Grenze von <paramref name="array" />.- oder - <paramref name="length" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich in <paramref name="array" /> an.</exception>
      <exception cref="T:System.InvalidOperationException">Mindestens ein Element in <paramref name="array" /> implementiert die <see cref="T:System.IComparable" />-Schnittstelle nicht.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Int32,System.Int32,System.Collections.IComparer)">
      <summary>Sortiert die Elemente in einem Bereich von Elementen in einem eindimensionalen <see cref="T:System.Array" /> mithilfe dem angegebenen <see cref="T:System.Collections.IComparer" />.</summary>
      <param name="array">Das zu sortierende eindimensionale <see cref="T:System.Array" />.</param>
      <param name="index">Der Startindex des zu sortierenden Bereichs.</param>
      <param name="length">Die Anzahl der Elemente im zu sortierenden Bereich.</param>
      <param name="comparer">Die <see cref="T:System.Collections.IComparer" />-Implementierung, die beim Vergleich von Elementen verwendet werden soll.- oder - null, wenn die <see cref="T:System.IComparable" />-Implementierung des jeweiligen Elements verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> ist mehrdimensional.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als die untere Grenze von <paramref name="array" />.- oder - <paramref name="length" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich in <paramref name="array" /> an. - oder - Die Implementierung von <paramref name="comparer" /> hat während der Sortierung einen Fehler verursacht.<paramref name="comparer" /> kann z. B. möglicherweise nicht 0 zurückgeben, wenn ein Element mit sich selbst verglichen wird.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> ist null, und mindestens ein Element in <paramref name="array" /> implementiert die <see cref="T:System.IComparable" />-Schnittstelle nicht.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort``1(``0[])">
      <summary>Sortiert die Elemente in einem ganzen <see cref="T:System.Array" /> mithilfe der Implementierung der generischen <see cref="T:System.IComparable`1" />-Schnittstelle jedes Elements des <see cref="T:System.Array" />.</summary>
      <param name="array">Das zu sortierende eindimensionale und nullbasierte <see cref="T:System.Array" />.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Mindestens ein Element in <paramref name="array" /> implementiert die generische <see cref="T:System.IComparable`1" />-Schnittstelle nicht.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Collections.Generic.IComparer{``0})">
      <summary>Sortiert die Elementen in einem <see cref="T:System.Array" /> mit der angegebenen generischen <see cref="T:System.Collections.Generic.IComparer`1" />-Schnittstelle.</summary>
      <param name="array">Das zu sortierende eindimensionale und nullbasierte <see cref="T:System.Array" />.</param>
      <param name="comparer">Die Implementierung der generischen <see cref="T:System.Collections.Generic.IComparer`1" />-Schnittstelle, die für den Vergleich von Elementen verwendet werden soll, oder null, um die Implementierung der generischen <see cref="T:System.IComparable`1" />-Schnittstelle der einzelnen Elemente zu verwenden.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> ist null, und mindestens ein Element in <paramref name="array" /> implementiert die generische <see cref="T:System.IComparable`1" />-Schnittstelle nicht.</exception>
      <exception cref="T:System.ArgumentException">Die Implementierung von <paramref name="comparer" /> hat während der Sortierung einen Fehler verursacht.<paramref name="comparer" /> kann z. B. möglicherweise nicht 0 zurückgeben, wenn ein Element mit sich selbst verglichen wird.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Comparison{``0})">
      <summary>Sortiert die Elemente in einem <see cref="T:System.Array" /> mithilfe der angegebenen <see cref="T:System.Comparison`1" />.</summary>
      <param name="array">Das zu sortierende eindimensionale und nullbasierte <see cref="T:System.Array" />.</param>
      <param name="comparison">Die <see cref="T:System.Comparison`1" />, die beim Vergleich von Elementen verwendet werden soll.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.- oder - <paramref name="comparison" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">Die Implementierung von <paramref name="comparison" /> hat während der Sortierung einen Fehler verursacht.<paramref name="comparison" /> kann z. B. möglicherweise nicht 0 zurückgeben, wenn ein Element mit sich selbst verglichen wird.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Int32,System.Int32)">
      <summary>Sortiert die Elemente in einem Bereich von Elementen in einem <see cref="T:System.Array" /> mithilfe der Implementierung der generischen <see cref="T:System.IComparable`1" />-Schnittstelle jedes Elements des <see cref="T:System.Array" />.</summary>
      <param name="array">Das zu sortierende eindimensionale und nullbasierte <see cref="T:System.Array" />.</param>
      <param name="index">Der Startindex des zu sortierenden Bereichs.</param>
      <param name="length">Die Anzahl der Elemente im zu sortierenden Bereich.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als die untere Grenze von <paramref name="array" />.- oder - <paramref name="length" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich in <paramref name="array" /> an.</exception>
      <exception cref="T:System.InvalidOperationException">Mindestens ein Element in <paramref name="array" /> implementiert die generische <see cref="T:System.IComparable`1" />-Schnittstelle nicht.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})">
      <summary>Sortiert die Elemente in einem Bereich von Elementen in der <see cref="T:System.Array" /> mithilfe der angegebenen generischen <see cref="T:System.Collections.Generic.IComparer`1" />-Schnittstelle.</summary>
      <param name="array">Das zu sortierende eindimensionale und nullbasierte <see cref="T:System.Array" />.</param>
      <param name="index">Der Startindex des zu sortierenden Bereichs.</param>
      <param name="length">Die Anzahl der Elemente im zu sortierenden Bereich.</param>
      <param name="comparer">Die Implementierung der generischen <see cref="T:System.Collections.Generic.IComparer`1" />-Schnittstelle, die für den Vergleich von Elementen verwendet werden soll, oder null, um die Implementierung der generischen <see cref="T:System.IComparable`1" />-Schnittstelle der einzelnen Elemente zu verwenden.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als die untere Grenze von <paramref name="array" />.- oder - <paramref name="length" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich in <paramref name="array" /> an. - oder - Die Implementierung von <paramref name="comparer" /> hat während der Sortierung einen Fehler verursacht.<paramref name="comparer" /> kann z. B. möglicherweise nicht 0 zurückgeben, wenn ein Element mit sich selbst verglichen wird.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> ist null, und mindestens ein Element in <paramref name="array" /> implementiert die generische <see cref="T:System.IComparable`1" />-Schnittstelle nicht.</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[])">
      <summary>Sortiert ein Paar von <see cref="T:System.Array" />-Objekten (das eine enthält die Schlüssel und das andere die entsprechenden Werte) nach den Schlüsseln im ersten <see cref="T:System.Array" /> und verwendet dabei die Implementierung der generischen <see cref="T:System.IComparable`1" />-Schnittstelle jedes Schlüssels.</summary>
      <param name="keys">Das eindimensionale nullbasierte <see cref="T:System.Array" /> mit den zu sortierenden Schlüsseln. </param>
      <param name="items">Das eindimensionale nullbasierte <see cref="T:System.Array" />, das die den Schlüsseln in <paramref name="keys" /> entsprechenden Elemente enthält, oder null, um nur <paramref name="keys" /> zu sortieren.</param>
      <typeparam name="TKey">Der Typ der Elemente des Schlüsselarrays.</typeparam>
      <typeparam name="TValue">Der Typ der Elemente des Elementarrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> ist nicht null, und die untere Grenze von <paramref name="keys" /> entspricht nicht der unteren Grenze von <paramref name="items" />.- oder - <paramref name="items" /> ist nicht null, und die Länge von <paramref name="keys" /> ist größer als die Länge von <paramref name="items" />.</exception>
      <exception cref="T:System.InvalidOperationException">Mindestens ein Element im <paramref name="keys" /><see cref="T:System.Array" /> implementiert die generische <see cref="T:System.IComparable`1" />-Schnittstelle nicht.</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[],System.Collections.Generic.IComparer{``0})">
      <summary>Sortiert ein Paar von <see cref="T:System.Array" />-Objekten (das eine enthält die Schlüssel und das andere die entsprechenden Werte) nach den Schlüsseln im ersten <see cref="T:System.Array" /> und verwendet dabei die angegebene generische <see cref="T:System.Collections.Generic.IComparer`1" />-Schnittstelle.</summary>
      <param name="keys">Das eindimensionale nullbasierte <see cref="T:System.Array" /> mit den zu sortierenden Schlüsseln. </param>
      <param name="items">Das eindimensionale nullbasierte <see cref="T:System.Array" />, das die den Schlüsseln in <paramref name="keys" /> entsprechenden Elemente enthält, oder null, um nur <paramref name="keys" /> zu sortieren.</param>
      <param name="comparer">Die Implementierung der generischen <see cref="T:System.Collections.Generic.IComparer`1" />-Schnittstelle, die für den Vergleich von Elementen verwendet werden soll, oder null, um die Implementierung der generischen <see cref="T:System.IComparable`1" />-Schnittstelle der einzelnen Elemente zu verwenden.</param>
      <typeparam name="TKey">Der Typ der Elemente des Schlüsselarrays.</typeparam>
      <typeparam name="TValue">Der Typ der Elemente des Elementarrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> ist nicht null, und die untere Grenze von <paramref name="keys" /> entspricht nicht der unteren Grenze von <paramref name="items" />.- oder - <paramref name="items" /> ist nicht null, und die Länge von <paramref name="keys" /> ist größer als die Länge von <paramref name="items" />.- oder - Die Implementierung von <paramref name="comparer" /> hat während der Sortierung einen Fehler verursacht.<paramref name="comparer" /> kann z. B. möglicherweise nicht 0 zurückgeben, wenn ein Element mit sich selbst verglichen wird.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> ist null, und mindestens ein Element im <paramref name="keys" /><see cref="T:System.Array" /> implementiert die generische <see cref="T:System.IComparable`1" />-Schnittstelle nicht.</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32)">
      <summary>Sortiert einen Bereich von Elementen in einem Paar von <see cref="T:System.Array" />-Objekten (das eine enthält die Schlüssel und das andere die entsprechenden Werte) nach den Schlüsseln im ersten <see cref="T:System.Array" /> und verwendet dabei die Implementierung der generischen <see cref="T:System.IComparable`1" />-Schnittstelle jedes Schlüssels.</summary>
      <param name="keys">Das eindimensionale nullbasierte <see cref="T:System.Array" /> mit den zu sortierenden Schlüsseln. </param>
      <param name="items">Das eindimensionale nullbasierte <see cref="T:System.Array" />, das die den Schlüsseln in <paramref name="keys" /> entsprechenden Elemente enthält, oder null, um nur <paramref name="keys" /> zu sortieren.</param>
      <param name="index">Der Startindex des zu sortierenden Bereichs.</param>
      <param name="length">Die Anzahl der Elemente im zu sortierenden Bereich.</param>
      <typeparam name="TKey">Der Typ der Elemente des Schlüsselarrays.</typeparam>
      <typeparam name="TValue">Der Typ der Elemente des Elementarrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als die untere Grenze von <paramref name="keys" />.- oder - <paramref name="length" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> ist nicht null, und die untere Grenze von <paramref name="keys" /> entspricht nicht der unteren Grenze von <paramref name="items" />.- oder - <paramref name="items" /> ist nicht null, und die Länge von <paramref name="keys" /> ist größer als die Länge von <paramref name="items" />.- oder - <paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich im <paramref name="keys" /><see cref="T:System.Array" /> an.- oder - <paramref name="items" /> ist nicht null, und <paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich im <paramref name="items" /><see cref="T:System.Array" /> an.</exception>
      <exception cref="T:System.InvalidOperationException">Mindestens ein Element im <paramref name="keys" /><see cref="T:System.Array" /> implementiert die generische <see cref="T:System.IComparable`1" />-Schnittstelle nicht.</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})">
      <summary>Sortiert einen Bereich von Elementen in einem Paar von <see cref="T:System.Array" />-Objekten (das eine enthält die Schlüssel und das andere die entsprechenden Werte) nach den Schlüsseln im ersten <see cref="T:System.Array" /> und verwendet dabei die angegebene generische <see cref="T:System.Collections.Generic.IComparer`1" />-Schnittstelle.</summary>
      <param name="keys">Das eindimensionale nullbasierte <see cref="T:System.Array" /> mit den zu sortierenden Schlüsseln. </param>
      <param name="items">Das eindimensionale nullbasierte <see cref="T:System.Array" />, das die den Schlüsseln in <paramref name="keys" /> entsprechenden Elemente enthält, oder null, um nur <paramref name="keys" /> zu sortieren.</param>
      <param name="index">Der Startindex des zu sortierenden Bereichs.</param>
      <param name="length">Die Anzahl der Elemente im zu sortierenden Bereich.</param>
      <param name="comparer">Die Implementierung der generischen <see cref="T:System.Collections.Generic.IComparer`1" />-Schnittstelle, die für den Vergleich von Elementen verwendet werden soll, oder null, um die Implementierung der generischen <see cref="T:System.IComparable`1" />-Schnittstelle der einzelnen Elemente zu verwenden.</param>
      <typeparam name="TKey">Der Typ der Elemente des Schlüsselarrays.</typeparam>
      <typeparam name="TValue">Der Typ der Elemente des Elementarrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als die untere Grenze von <paramref name="keys" />.- oder - <paramref name="length" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> ist nicht null, und die untere Grenze von <paramref name="keys" /> entspricht nicht der unteren Grenze von <paramref name="items" />.- oder - <paramref name="items" /> ist nicht null, und die Länge von <paramref name="keys" /> ist größer als die Länge von <paramref name="items" />.- oder - <paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich im <paramref name="keys" /><see cref="T:System.Array" /> an.- oder - <paramref name="items" /> ist nicht null, und <paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich im <paramref name="items" /><see cref="T:System.Array" /> an. - oder - Die Implementierung von <paramref name="comparer" /> hat während der Sortierung einen Fehler verursacht.<paramref name="comparer" /> kann z. B. möglicherweise nicht 0 zurückgeben, wenn ein Element mit sich selbst verglichen wird.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> ist null, und mindestens ein Element im <paramref name="keys" /><see cref="T:System.Array" /> implementiert die generische <see cref="T:System.IComparable`1" />-Schnittstelle nicht.</exception>
    </member>
    <member name="P:System.Array.System#Collections#ICollection#Count">
      <summary>Ruft die Anzahl der Elemente ab, die in <see cref="T:System.Array" /> enthalten sind.</summary>
      <returns>Die Anzahl der Elemente in der Auflistung.</returns>
    </member>
    <member name="P:System.Array.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf <see cref="T:System.Array" /> synchronisiert (threadsicher) ist.</summary>
      <returns>true, wenn der Zugriff auf das <see cref="T:System.Array" /> synchronisiert (threadsicher) ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Array.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Array" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Array" /> synchronisiert werden kann.</returns>
    </member>
    <member name="M:System.Array.System#Collections#IList#Add(System.Object)">
      <summary>Aufruf dieser Methode löst immer eine <see cref="T:System.NotSupportedException" /> Ausnahme. </summary>
      <returns>Das Hinzufügen eines Werts zu einem Array wird nicht unterstützt.Es wird kein Wert zurückgegeben.</returns>
      <param name="value">Das dem <see cref="T:System.Collections.IList" /> hinzuzufügende Objekt.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#Clear">
      <summary>Entfernt alle Elemente aus <see cref="T:System.Collections.IList" />.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#Contains(System.Object)">
      <summary>Bestimmt, ob sich ein Element in <see cref="T:System.Collections.IList" /> befindet.</summary>
      <returns>true, wenn das <paramref name="value" /> in der <see cref="T:System.Collections.IList" /> gefunden wird, andernfalls false.</returns>
      <param name="value">Das in der aktuellen Liste zu suchende Objekt.Das gesuchte Element kann für Referenztypen null.</param>
    </member>
    <member name="M:System.Array.System#Collections#IList#IndexOf(System.Object)">
      <summary>Bestimmt den Index eines bestimmten Elements in der <see cref="T:System.Collections.IList" />.</summary>
      <returns>Der Index von Wert, wenn er in der Liste gefunden wird, andernfalls -1.</returns>
      <param name="value">Das in der aktuellen Liste zu suchende Objekt.</param>
    </member>
    <member name="M:System.Array.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Fügt am angegebenen Index ein Element in die <see cref="T:System.Collections.IList" /> ein.</summary>
      <param name="index">Der Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value">Das einzufügende Objekt.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kein gültiger Index in <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> ist schreibgeschützt.- oder -  <see cref="T:System.Collections.IList" /> hat eine feste Größe. </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="value" /> ist ein NULL-Verweis in <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="P:System.Array.System#Collections#IList#IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Array" /> eine feste Größe hat.</summary>
      <returns>true, wenn das <see cref="T:System.Array" /> eine feste Größe aufweist, andernfalls false.</returns>
    </member>
    <member name="P:System.Array.System#Collections#IList#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Array" /> schreibgeschützt ist.</summary>
      <returns>true, wenn das <see cref="T:System.Array" /> schreibgeschützt ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Array.System#Collections#IList#Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <returns>Das Element am angegebenen Index.</returns>
      <param name="index">Der Index des abzurufenden oder festzulegenden Elements.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.- oder - <paramref name="index" /> ist größer oder gleich <see cref="P:System.Collections.ICollection.Count" />.</exception>
      <exception cref="T:System.ArgumentException">Das aktuelle <see cref="T:System.Array" /> hat nicht genau eine Dimension.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#Remove(System.Object)">
      <summary>Entfernt das erste Vorkommen eines angegebenen Objekts aus der <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Das aus der <see cref="T:System.Collections.IList" /> zu entfernende Objekt.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> ist schreibgeschützt.- oder -  <see cref="T:System.Collections.IList" /> hat eine feste Größe. </exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Entfernt das <see cref="T:System.Collections.IList" />-Element am angegebenen Index.</summary>
      <param name="index">Der Index des zu entfernenden Elements.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">index ist kein gültiger Index in <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> ist schreibgeschützt.- oder -  <see cref="T:System.Collections.IList" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Bestimmt, ob das aktuelle Auflistungsobjekt in der Sortierreihenfolge vor oder nach einem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine Ganzzahl, die die Beziehung des aktuellen Auflistungsobjekts zu "other" angibt, wie in der folgenden Tabelle dargestellt.RückgabewertBeschreibung -1Die aktuelle Instanz tritt vor <paramref name="other" /> auf.0Die aktuelle Instanz und <paramref name="other" /> sind gleich.1Die aktuelle Instanz folgt auf <paramref name="other" />.</returns>
      <param name="other">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das das aktuelle Objekt und <paramref name="other" /> vergleicht.</param>
    </member>
    <member name="M:System.Array.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Bestimmt, ob ein Objekt gleich der aktuellen Instanz ist.</summary>
      <returns>true, wenn die beiden Objekte gleich sind, andernfalls false.</returns>
      <param name="other">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das bestimmt, ob die aktuelle Instanz und <paramref name="other" /> gleich sind. </param>
    </member>
    <member name="M:System.Array.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Gibt einen Hashcode für die aktuelle Instanz zurück.</summary>
      <returns>Der Hashcode für die aktuelle Instanz.</returns>
      <param name="comparer">Ein Objekt, das den Hashcode des aktuellen Objekts berechnet.</param>
    </member>
    <member name="M:System.Array.TrueForAll``1(``0[],System.Predicate{``0})">
      <summary>Bestimmt, ob jedes Element im Array die vom angegebenen Prädikat definierten Bedingungen erfüllt.</summary>
      <returns>true, wenn jedes Element in <paramref name="array" /> die vom angegebenen Prädikat definierten Bedingungen erfüllt, andernfalls false.Wenn es keine Elemente im Array gibt, ist der Rückgabewert true.</returns>
      <param name="array">Das eindimensionale nullbasierte <see cref="T:System.Array" />, das auf die Bedingungen geprüft werden soll.</param>
      <param name="match">Das Prädikat, das die Bedingungen definiert, auf die die Elemente geprüft werden sollen.</param>
      <typeparam name="T">Der Typ der Elemente des Arrays.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.- oder - <paramref name="match" /> ist null.</exception>
    </member>
    <member name="T:System.ArraySegment`1">
      <summary>Begrenzt einen Abschnitt eines eindimensionalen Arrays.</summary>
      <typeparam name="T">Der Typ der Elemente im Arraysegment.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArraySegment`1.#ctor(`0[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArraySegment`1" />-Struktur, die alle Elemente im angegebenen Array begrenzt.</summary>
      <param name="array">Das Array, das umschlossen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
    </member>
    <member name="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArraySegment`1" />-Struktur, die den angegebenen Bereich der Elemente im angegebenen Array begrenzt.</summary>
      <param name="array">Das Array, das den Bereich der zu begrenzenden Elemente enthält.</param>
      <param name="offset">Der nullbasierte Index des ersten Elements im Bereich.</param>
      <param name="count">Die Anzahl der Elemente im Bereich.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> oder <paramref name="count" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="array" /> an.</exception>
    </member>
    <member name="P:System.ArraySegment`1.Array">
      <summary>Ruft das ursprüngliche Array ab, das den Bereich von Elementen enthält, die das Arraysegment begrenzen.</summary>
      <returns>Das ursprüngliche Array, das dem Konstruktor übergeben wurde und den durch das <see cref="T:System.ArraySegment`1" /> begrenzten Bereich enthält.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ArraySegment`1.Count">
      <summary>Ruft die Anzahl von Elementen im Bereich ab, der vom Arraysegment begrenzt wird.</summary>
      <returns>Die Anzahl von Elementen im Bereich, der vom <see cref="T:System.ArraySegment`1" /> begrenzt wird.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
      <summary>Bestimmt, ob die angegebene <see cref="T:System.ArraySegment`1" />-Struktur und die aktuelle Instanz gleich sind.</summary>
      <returns>true, wenn die angegebene <see cref="T:System.ArraySegment`1" />-Struktur gleich der aktuellen Instanz ist, andernfalls false.</returns>
      <param name="obj">Die Struktur, die mit der aktuellen Instanz verglichen werden soll.</param>
    </member>
    <member name="M:System.ArraySegment`1.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene Objekt und die aktuelle Instanz gleich sind.</summary>
      <returns>true, wenn das angegebene Objekt eine <see cref="T:System.ArraySegment`1" />-Struktur und gleich der aktuellen Instanz ist, andernfalls false.</returns>
      <param name="obj">Das mit der aktuellen Instanz zu vergleichende Objekt.</param>
    </member>
    <member name="M:System.ArraySegment`1.GetHashCode">
      <summary>Gibt den Hashcode für die aktuelle Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="P:System.ArraySegment`1.Offset">
      <summary>Ruft die Position des ersten Elements im Bereich, der durch das Arraysegment begrenzt wird, relativ zum Anfang des ursprünglichen Arrays ab.</summary>
      <returns>Die Position des ersten Elements im Bereich, der durch das <see cref="T:System.ArraySegment`1" /> begrenzt wird, relativ zum Anfang des ursprünglichen Arrays.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
      <summary>Gibt an, ob zwei <see cref="T:System.ArraySegment`1" />-Strukturen gleich sind.</summary>
      <returns>true, wenn <paramref name="a" /> und <paramref name="b" /> gleich sind, andernfalls false.</returns>
      <param name="a">Die -Struktur auf der linken Seite des Gleichheitsoperators.</param>
      <param name="b">Die Struktur auf der rechten Seite des Gleichheitsoperators.</param>
    </member>
    <member name="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
      <summary>Gibt an, ob zwei <see cref="T:System.ArraySegment`1" />-Strukturen ungleich sind.</summary>
      <returns>true, wenn <paramref name="a" /> und <paramref name="b" /> ungleich sind, andernfalls false.</returns>
      <param name="a">Die Struktur auf der linken Seite des Ungleichheitsoperators.</param>
      <param name="b">Die Struktur auf der rechten Seite des Ungleichheitsoperators.</param>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Fügt dem Arraysegment ein Element hinzu.</summary>
      <param name="item">Das Objekt, das dem Arraysegment hinzugefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Das Arraysegment ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Entfernt alle Elemente aus dem Arraysegment.</summary>
      <exception cref="T:System.NotSupportedException">Das Arraysegment ist schreibgeschützt. </exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Contains(`0)">
      <summary>Bestimmt, ob das Arraysegment einen bestimmten Wert enthält.</summary>
      <returns>true, wenn sich <paramref name="item" /> im Arraysegment befindet, andernfalls false.</returns>
      <param name="item">Das Objekt, das im Arraysegment gesucht werden soll.</param>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)">
      <summary>Kopiert die Elemente des Arraysegment in ein Array, wobei an einem angegebenen Arrayindex begonnen wird.</summary>
      <param name="array">Das eindimensionale Array, das das Ziel der aus dem Arraysegment kopierten Elemente ist.Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.- oder - Die Anzahl der Elemente im Quellarraysegment ist größer als der verfügbare Platz von <paramref name="arrayIndex" /> bis zum Ende des Ziel-<paramref name="array" />.- oder - Typ <paramref name="T" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="P:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das Arraysegment schreibgeschützt ist.</summary>
      <returns>true, wenn das Arraysegment schreibgeschützt ist, andernfalls false.</returns>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Entfernt das erste Vorkommen eines bestimmten Objekts aus dem Arraysegment.</summary>
      <returns>true, wenn <paramref name="item" /> erfolgreich aus dem Arraysegment entfernt wurde, andernfalls false.Diese Methode gibt false auch dann zurück, wenn <paramref name="item" /> nicht im Arraysegment vorhanden ist.</returns>
      <param name="item">Das Objekt, das aus dem Arraysegment entfernt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Das Arraysegment ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der das Arraysegment durchläuft.</summary>
      <returns>Ein Enumerator, mit dem das Arraysegment durchlaufen werden kann.</returns>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IList{T}#IndexOf(`0)">
      <summary>Bestimmt den Index eines bestimmten Elements im Arraysegment.</summary>
      <returns>Der Index von <paramref name="item" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</returns>
      <param name="item">Das Objekt, das im Arraysegment gesucht werden soll.</param>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>Fügt ein Element am angegebenen Index in das Arraysegment ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="item" /> eingefügt werden soll.</param>
      <param name="item">Das Objekt, das in das Arraysegment eingefügt werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kein gültiger Index im Arraysegment.</exception>
      <exception cref="T:System.NotSupportedException">Das Arraysegment ist schreibgeschützt.</exception>
    </member>
    <member name="P:System.ArraySegment`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <returns>Das Element am angegebenen Index.</returns>
      <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kein gültiger Index in der <see cref="T:System.ArraySegment`1" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Eigenschaft wird festgelegt, und der Arraysegment ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>Entfernt das Arraysegmentelement am angegebenen Index.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kein gültiger Index im Arraysegment.</exception>
      <exception cref="T:System.NotSupportedException">Das Arraysegment ist schreibgeschützt.</exception>
    </member>
    <member name="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList{T}#Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index des angegebenen Arraysegments ab.</summary>
      <returns>Das Element am angegebenen Index.</returns>
      <param name="index">Der nullbasierte Index des abzurufenden Elements.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kein gültiger Index in der <see cref="T:System.ArraySegment`1" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Eigenschaft ist festgelegt.</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der ein Arraysegment durchläuft.</summary>
      <returns>Ein Enumerator, mit dem das Arraysegment durchlaufen werden kann.</returns>
    </member>
    <member name="T:System.ArrayTypeMismatchException">
      <summary>Die Ausnahme, die bei dem Versuch ausgelöst wird, ein Element vom falschen Typ in einem Array zu speichern. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArrayTypeMismatchException" />-Klasse.</summary>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArrayTypeMismatchException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt. </param>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArrayTypeMismatchException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die die Ursache dieser Ausnahme ist.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter kein NULL-Verweis ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.AsyncCallback">
      <summary>Verweist auf eine Methode, die aufgerufen wird, sobald ein entsprechender asynchroner Vorgang abgeschlossen ist.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AsyncCallback.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.AsyncCallback.BeginInvoke(System.IAsyncResult,System.AsyncCallback,System.Object)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AsyncCallback.EndInvoke(System.IAsyncResult)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AsyncCallback.Invoke(System.IAsyncResult)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Attribute">
      <summary>Stellt die Basisklasse für benutzerdefinierte Attribute dar.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Attribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Attribute.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> dem Typ und dem Wert dieser Instanz entspricht, andernfalls false.</returns>
      <param name="obj">Ein <see cref="T:System.Object" />, das mit dieser Instanz oder null verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Attribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.AttributeTargets">
      <summary>Gibt die Anwendungselemente an, auf die Attribute angewendet werden können.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.AttributeTargets.All">
      <summary>Auf jedes Anwendungselement können Attribute angewendet werden.</summary>
    </member>
    <member name="F:System.AttributeTargets.Assembly">
      <summary>Auf Assemblys können Attribute angewendet werden.</summary>
    </member>
    <member name="F:System.AttributeTargets.Class">
      <summary>Auf Klassen können Attribute angewendet werden.</summary>
    </member>
    <member name="F:System.AttributeTargets.Constructor">
      <summary>Auf Konstruktoren können Attribute angewendet werden.</summary>
    </member>
    <member name="F:System.AttributeTargets.Delegate">
      <summary>Auf Delegaten können Attribute angewendet werden.</summary>
    </member>
    <member name="F:System.AttributeTargets.Enum">
      <summary>Auf Enumerationen können Attribute angewendet werden.</summary>
    </member>
    <member name="F:System.AttributeTargets.Event">
      <summary>Auf Ereignisse können Attribute angewendet werden.</summary>
    </member>
    <member name="F:System.AttributeTargets.Field">
      <summary>Auf Felder können Attribute angewendet werden.</summary>
    </member>
    <member name="F:System.AttributeTargets.GenericParameter">
      <summary>Auf generische Parameter können Attribute angewendet werden.</summary>
    </member>
    <member name="F:System.AttributeTargets.Interface">
      <summary>Auf Schnittstellen können Attribute angewendet werden.</summary>
    </member>
    <member name="F:System.AttributeTargets.Method">
      <summary>Auf Methoden können Attribute angewendet werden.</summary>
    </member>
    <member name="F:System.AttributeTargets.Module">
      <summary>Auf Module können Attribute angewendet werden.</summary>
    </member>
    <member name="F:System.AttributeTargets.Parameter">
      <summary>Auf Parameter können Attribute angewendet werden.</summary>
    </member>
    <member name="F:System.AttributeTargets.Property">
      <summary>Auf Eigenschaften können Attribute angewendet werden.</summary>
    </member>
    <member name="F:System.AttributeTargets.ReturnValue">
      <summary>Auf Rückgabewerte können Attribute angewendet werden.</summary>
    </member>
    <member name="F:System.AttributeTargets.Struct">
      <summary>Auf Strukturen, d. h. auf Werttypen, können Attribute angewendet werden.</summary>
    </member>
    <member name="T:System.AttributeUsageAttribute">
      <summary>Legt die Verwendung einer anderen Attributklasse fest.Diese Klasse kann nicht vererbt werden.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)">
      <summary>Initialisiert einen neue Instanz der <see cref="T:System.AttributeUsageAttribute" />-Klasse mit der angegebenen Liste von <see cref="T:System.AttributeTargets" />, dem <see cref="P:System.AttributeUsageAttribute.AllowMultiple" />-Wert und dem <see cref="P:System.AttributeUsageAttribute.Inherited" />-Wert.</summary>
      <param name="validOn">Eine mit der bitweisen OR-Operation verbundene Gruppe von Werten, die angeben, welche Programmelemente gültig sind. </param>
    </member>
    <member name="P:System.AttributeUsageAttribute.AllowMultiple">
      <summary>Ruft einen booleschen Wert ab, der angibt, ob für ein einzelnes Programmelement mehr als eine Instanz des betreffenden Attributs angegeben werden kann, oder legt diesen fest.</summary>
      <returns>true, wenn die Angabe mehr als einer Instanz möglich ist, andernfalls false.Die Standardeinstellung ist false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AttributeUsageAttribute.Inherited">
      <summary>Ruft einen booleschen Wert ab, der angibt, ob das angegebene Attribut von abgeleiteten Klassen und überschreibenden Membern geerbt werden kann, oder legt diesen fest.</summary>
      <returns>true, wenn das Attribut von abgeleiteten Klassen und überschreibenden Membern geerbt werden kann, andernfalls false.Die Standardeinstellung ist true.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AttributeUsageAttribute.ValidOn">
      <summary>Ruft eine Wertemenge ab, die angibt, auf welche Programmelemente das betreffende Attribut angewendet werden kann.</summary>
      <returns>Ein oder mehrere <see cref="T:System.AttributeTargets" />-Werte.Die Standardeinstellung ist All.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.BadImageFormatException">
      <summary>Die Ausnahme, die bei Ungültigkeit des Abbilds einer DLL (Dynamic Link Library)-Datei oder einer ausführbaren Programmdatei ausgelöst wird. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.BadImageFormatException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.BadImageFormatException" />-Klasse.</summary>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.BadImageFormatException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird. </param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.BadImageFormatException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="inner" />-Parameter kein NULL-Verweis ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.BadImageFormatException" />-Klasse mit einer angegebenen Fehlermeldung und einem angegebenen Dateinamen.</summary>
      <param name="message">Eine Meldung mit einer Beschreibung des Fehlers. </param>
      <param name="fileName">Der vollständige Name der Datei mit dem ungültigen Abbild. </param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.BadImageFormatException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="fileName">Der vollständige Name der Datei mit dem ungültigen Abbild. </param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="inner" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="P:System.BadImageFormatException.FileName">
      <summary>Ruft den Namen der Datei ab, die diese Ausnahme verursacht hat.</summary>
      <returns>Der Name der Datei mit dem ungültigen Abbild oder ein NULL-Verweis, wenn kein Dateiname an den Konstruktor für die aktuelle Instanz übergeben wurde.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.BadImageFormatException.Message">
      <summary>Ruft die Fehlermeldung und den Namen der Datei ab, die diese Ausnahme verursacht hat.</summary>
      <returns>Eine Zeichenfolge mit der Fehlermeldung und dem Namen der Datei, die diese Ausnahme verursacht hat.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.BadImageFormatException.ToString">
      <summary>Gibt den vollqualifizierten Namen dieser Ausnahme und ggf. die Fehlermeldung sowie den Namen der inneren Ausnahme und die Stapelüberwachung zurück.</summary>
      <returns>Eine Zeichenfolge, die den voll gekennzeichneten Namen dieser Ausnahme und ggf. der Fehlermeldung sowie den Namen der inneren Ausnahme und die Stapelüberwachung enthält.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.Boolean">
      <summary>Stellt einen booleschen Wert dar (true oder false).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.CompareTo(System.Boolean)">
      <summary>Vergleicht diese Instanz mit einem angegebenen <see cref="T:System.Boolean" />-Objekt und gibt eine ganze Zahl zurück, die ihre Beziehung untereinander angibt.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relativen Werte dieser Instanz und <paramref name="value" /> angibt.Rückgabewert Bedingung Kleiner als 0 (null) Diese Instanz ist false, und <paramref name="value" /> ist true. Zero Diese Instanz und <paramref name="value" /> sind gleich (beide sind entweder true oder false). Größer als 0 (null) Diese Instanz ist true, und <paramref name="value" /> ist false. </returns>
      <param name="value">Ein mit dieser Instanz zu vergleichendes <see cref="T:System.Boolean" />-Objekt. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.Equals(System.Boolean)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen <see cref="T:System.Boolean" />-Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> über denselben Wert wie diese Instanz verfügt, andernfalls false.</returns>
      <param name="obj">Ein mit dieser Instanz zu vergleichender <see cref="T:System.Boolean" />-Wert.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> ein <see cref="T:System.Boolean" /> ist und denselben Wert wie diese Instanz hat, andernfalls false.</returns>
      <param name="obj">Ein mit dieser Instanz zu vergleichendes Objekt. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Boolean.FalseString">
      <summary>Stellt den booleschen Wert false als eine Zeichenfolge dar.Dieses Feld ist schreibgeschützt.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.Boolean" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.Parse(System.String)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung eines logischen Werts in die <see cref="T:System.Boolean" />-Entsprechung oder löst eine Ausnahme aus, wenn die Zeichenfolge nicht gleich dem Wert von <see cref="F:System.Boolean.TrueString" /> oder <see cref="F:System.Boolean.FalseString" /> ist.</summary>
      <returns>true, wenn <paramref name="value" /> gleich dem Wert des <see cref="F:System.Boolean.TrueString" />-Felds ist. false, wenn <paramref name="value" /> gleich dem Wert des <see cref="F:System.Boolean.FalseString" />-Felds ist.</returns>
      <param name="value">Eine Zeichenfolge, die den zu konvertierenden Wert enthält. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> ist nicht gleich dem Wert des <see cref="F:System.Boolean.TrueString" />-Felds oder des <see cref="F:System.Boolean.FalseString" />-Felds. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relative Reihenfolge dieser Instanz und <paramref name="obj" /> angibt.Rückgabewert Bedingung Kleiner als 0 (null) Diese Instanz ist false, und <paramref name="obj" /> ist true. Zero Diese Instanz und <paramref name="obj" /> sind gleich (beide sind entweder true oder false). Größer als 0 (null) Diese Instanz ist true, und <paramref name="obj" /> ist false.- oder -  <paramref name="obj" /> ist null. </returns>
      <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true oder false.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>1, wenn der Wert dieser Instanz true ist, andernfalls 0. </returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Diese Konvertierung wird nicht unterstützt.Es wird kein Wert zurückgegeben.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">Sie versuchen, einen <see cref="T:System.Boolean" />-Wert in einen <see cref="T:System.Char" />-Wert zu konvertieren.Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Diese Konvertierung wird nicht unterstützt.Es wird kein Wert zurückgegeben.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">Sie versuchen, einen <see cref="T:System.Boolean" />-Wert in einen <see cref="T:System.DateTime" />-Wert zu konvertieren.Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</summary>
      <returns>1, wenn diese Instanz true ist, andernfalls 0.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</summary>
      <returns>1, wenn diese Instanz true ist, andernfalls 0.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>1, wenn diese Instanz true ist, andernfalls 0.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>1, wenn diese Instanz true ist, andernfalls 0.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>1, wenn diese Instanz true ist, andernfalls 0.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>1, wenn diese Instanz true ist, andernfalls 0.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</summary>
      <returns>1, wenn diese Instanz true ist, andernfalls 0.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToString(System.IFormatProvider)"></member>
    <member name="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Ein Objekt des angegebenen Typs mit einem Wert, der dem Wert dieses Boolean-Objekts entspricht.</returns>
      <param name="type">Der gewünschte Typ. </param>
      <param name="provider">Eine <see cref="T:System.IFormatProvider" />-Implementierung, die kulturspezifische Informationen zum Format des zurückgegebenen Werts bereitstellt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> ist null. </exception>
      <exception cref="T:System.InvalidCastException">Die angeforderte Typkonvertierung wird nicht unterstützt. </exception>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>1, wenn diese Instanz true ist, andernfalls 0.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>1, wenn diese Instanz true ist, andernfalls 0.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>1, wenn diese Instanz true ist, andernfalls 0.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Boolean.ToString">
      <summary>Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung (entweder "True" oder "False").</summary>
      <returns>
        <see cref="F:System.Boolean.TrueString" />, wenn der Wert dieser Instanz true ist, und <see cref="F:System.Boolean.FalseString" />, wenn der Wert dieser Instanz false ist.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Boolean.TrueString">
      <summary>Stellt den booleschen Wert true als eine Zeichenfolge dar.Dieses Feld ist schreibgeschützt.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.TryParse(System.String,System.Boolean@)">
      <summary>Versucht, die angegebene Zeichenfolgendarstellung eines logischen Werts in die <see cref="T:System.Boolean" />-Entsprechung zu konvertieren.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn <paramref name="value" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="value">Eine Zeichenfolge, die den zu konvertierenden Wert enthält. </param>
      <param name="result">Enthält bei erfolgreicher Konvertierung nach der Rückgabe dieser Methode true, wenn <paramref name="value" /> gleich <see cref="F:System.Boolean.TrueString" /> ist, oder false, wenn <paramref name="value" /> gleich <see cref="F:System.Boolean.FalseString" /> ist.Enthält false, wenn bei der Konvertierung ein Fehler aufgetreten ist.Bei der Konvertierung tritt ein Fehler auf, wenn <paramref name="value" /> gleich null ist oder nicht dem Wert des Felds <see cref="F:System.Boolean.TrueString" /> bzw. des Felds <see cref="F:System.Boolean.FalseString" /> entspricht.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Buffer">
      <summary>Verändert Arrays von primitiven Typen.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Buffer.BlockCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Kopiert eine angegebene Anzahl von Bytes aus einem Quellarray in ein Zielarray, jeweils beginnend bei einem bestimmten Offset.</summary>
      <param name="src">Der Quellpuffer. </param>
      <param name="srcOffset">Der nullbasierte Byteoffset in <paramref name="src" />. </param>
      <param name="dst">Der Zielpuffer. </param>
      <param name="dstOffset">Der nullbasierte Byteoffset in <paramref name="dst" />. </param>
      <param name="count">Die Anzahl der zu kopierenden Bytes. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="src" /> oder <paramref name="dst" /> ist null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="src" /> oder <paramref name="dst" /> ist kein Array von Primitiven.- oder -  Die Anzahl der Bytes in <paramref name="src" /> ist kleiner als <paramref name="srcOffset" /> plus <paramref name="count" />.- oder -  Die Anzahl der Bytes in <paramref name="dst" /> ist kleiner als <paramref name="dstOffset" /> plus <paramref name="count" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="srcOffset" />, <paramref name="dstOffset" /> oder <paramref name="count" /> ist kleiner als 0. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Buffer.ByteLength(System.Array)">
      <summary>Gibt die Anzahl der Bytes im angegebenen Array zurück.</summary>
      <returns>Die Anzahl der Bytes im Array.</returns>
      <param name="array">Ein Array. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist kein Array von Primitiven. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="array" /> ist größer als 2 Gigabyte (GB).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Buffer.GetByte(System.Array,System.Int32)">
      <summary>Ruft das Byte an einer angegebenen Position in einem angegebenen Array ab.</summary>
      <returns>Gibt das <paramref name="index" />-Byte im Array zurück.</returns>
      <param name="array">Ein Array. </param>
      <param name="index">Eine Position im Array. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist kein Array von Primitiven. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist negativ oder größer als die Länge von <paramref name="array" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="array" /> ist größer als 2 Gigabyte (GB).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Buffer.MemoryCopy(System.Void*,System.Void*,System.Int64,System.Int64)">
      <summary>Kopiert eine als Long Integer-Wert angegebene Anzahl von Bytes aus einer Speicheradresse in eine andere Speicheradresse. </summary>
      <param name="source">Die Adresse der zu kopierenden Bytes. </param>
      <param name="destination">Die Zieladresse. </param>
      <param name="destinationSizeInBytes">Die Anzahl der im Ziel-Speicherblock verfügbaren Bytes. </param>
      <param name="sourceBytesToCopy">Die Anzahl der zu kopierenden Bytes.  </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceBytesToCopy" /> ist größer als <paramref name="destinationSizeInBytes" />. </exception>
    </member>
    <member name="M:System.Buffer.MemoryCopy(System.Void*,System.Void*,System.UInt64,System.UInt64)">
      <summary>Kopiert eine als Unsigned Long Integer-Wert angegebene Anzahl von Bytes aus einer Speicheradresse in eine andere Speicheradresse. </summary>
      <param name="source">Die Adresse der zu kopierenden Bytes. </param>
      <param name="destination">Die Zieladresse. </param>
      <param name="destinationSizeInBytes">Die Anzahl der im Ziel-Speicherblock verfügbaren Bytes. </param>
      <param name="sourceBytesToCopy">Die Anzahl der zu kopierenden Bytes.   </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceBytesToCopy" /> ist größer als <paramref name="destinationSizeInBytes" />. </exception>
    </member>
    <member name="M:System.Buffer.SetByte(System.Array,System.Int32,System.Byte)">
      <summary>Weist einem Byte an einer bestimmten Position eines angegebenen Arrays einen bestimmten Wert zu.</summary>
      <param name="array">Ein Array. </param>
      <param name="index">Eine Position im Array. </param>
      <param name="value">Ein zuzuweisender Wert. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist kein Array von Primitiven. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist negativ oder größer als die Länge von <paramref name="array" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="array" /> ist größer als 2 Gigabyte (GB).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Byte">
      <summary>Stellt eine ganze 8-Bit-Zahl ohne Vorzeichen dar.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.CompareTo(System.Byte)">
      <summary>Vergleicht diese Instanz mit einer angegebenen 8-Bit-Ganzzahl ohne Vorzeichen, und gibt eine Angabe über das Verhältnis der entsprechenden Werte zurück.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relative Reihenfolge dieser Instanz und <paramref name="value" /> angibt.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Eine zu vergleichende ganze 8-Bit-Zahl ohne Vorzeichen. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.Equals(System.Byte)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz und ein angegebenes <see cref="T:System.Byte" />-Objekt den gleichen Wert darstellen.</summary>
      <returns>true, wenn <paramref name="obj" /> gleich dieser Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein mit dieser Instanz zu vergleichendes Objekt.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> eine Instanz von <see cref="T:System.Byte" /> ist, deren Wert gleich dem Wert dieser Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.Byte" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Byte.MaxValue">
      <summary>Stellt den größtmöglichen Wert von <see cref="T:System.Byte" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Byte.MinValue">
      <summary>Stellt den kleinstmöglichen Wert von <see cref="T:System.Byte" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String)">
      <summary>Wandelt die angegebene Zeichenfolgendarstellung einer Zahl in ihre <see cref="T:System.Byte" />-Entsprechung um.</summary>
      <returns>Ein Bytewert, der der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.Die Zeichenfolge wird unter Verwendung des <see cref="F:System.Globalization.NumberStyles.Integer" />-Formats interpretiert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil in die <see cref="T:System.Byte" />-Entsprechung.</summary>
      <returns>Ein Bytewert, der der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.Die Zeichenfolge wird unter Verwendung des durch <paramref name="style" /> angegebenen Formats interpretiert.</param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angeben, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und kulturabhängigen Format in das entsprechende <see cref="T:System.Byte" />.</summary>
      <returns>Ein Bytewert, der der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.Die Zeichenfolge wird unter Verwendung des durch <paramref name="style" /> angegebenen Formats interpretiert.</param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angeben, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Informationen zum Format von <paramref name="s" /> bereitstellt.Wenn <paramref name="provider" /> gleich null ist, wird die aktuelle Threadkultur verwendet.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen kulturspezifischen Format in die <see cref="T:System.Byte" />-Entsprechung.</summary>
      <returns>Ein Bytewert, der der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.Die Zeichenfolge wird unter Verwendung des <see cref="F:System.Globalization.NumberStyles.Integer" />-Formats interpretiert.</param>
      <param name="provider">Ein Objekt, das kulturabhängige Analyseinformationen über <paramref name="s" /> bereitstellt.Wenn <paramref name="provider" /> gleich null ist, wird die aktuelle Threadkultur verwendet.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relative Reihenfolge dieser Instanz und <paramref name="value" /> angibt.Return value Description Less than zero This instance precedes <paramref name="value" /> in the sort order. Zero This instance occurs in the same position as <paramref name="value" /> in the sort order. Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Byte" />. </exception>
    </member>
    <member name="M:System.Byte.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true, wenn der Wert der aktuellen Instanz nicht 0 (null) ist, andernfalls false.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Der unveränderte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Char" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Diese Konvertierung wird nicht unterstützt.Es wird kein Wert zurückgegeben.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Decimal" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Double" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int16" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int32" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int64" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.SByte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Single" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Der in <paramref name="type" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="type">Der Typ, in den dieser <see cref="T:System.Byte" />-Wert konvertiert werden soll. </param>
      <param name="provider">Eine<see cref="T:System.IFormatProvider" />-Implementierung, die Informationen zum Format des zurückgegebenen Werts angibt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null. </exception>
      <exception cref="T:System.InvalidCastException">The requested type conversion is not supported. </exception>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</summary>
      <returns>Der in ein <see cref="T:System.UInt16" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</summary>
      <returns>Der in ein <see cref="T:System.UInt32" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</summary>
      <returns>Der in ein <see cref="T:System.UInt64" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Byte.ToString">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.Byte" />-Objekts in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieses Objekts, die aus einer Folge von Ziffern zwischen 0 und 9 ohne führende Nullen besteht.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.ToString(System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert des aktuellen <see cref="T:System.Byte" />-Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieses Objekts in dem vom <paramref name="provider" />-Parameter angegebenen Format.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.ToString(System.String)">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.Byte" />-Objekts unter Verwendung des angegebenen Formats in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des aktuellen <see cref="T:System.Byte" />-Objekts im durch den <paramref name="format" />-Parameter angegebenen Format.</returns>
      <param name="format">Eine numerische Formatierungszeichenfolge.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> includes an unsupported specifier.Supported format specifiers are listed in the Remarks section.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.ToString(System.String,System.IFormatProvider)">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.Byte" />-Objekts unter Verwendung des angegebenen Formats sowie der kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des aktuellen <see cref="T:System.Byte" />-Objekts im durch die <paramref name="format" />- und <paramref name="provider" />-Parameter angegebenen Format.</returns>
      <param name="format">Eine standardmäßige oder benutzerdefinierte numerische Formatierungszeichenfolge.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> includes an unsupported specifier.Supported format specifiers are listed in the Remarks section.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.TryParse(System.String,System.Byte@)">
      <summary>Versucht, die Zeichenfolgendarstellung einer Zahl in deren <see cref="T:System.Byte" />-Entsprechung zu konvertieren, und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich durchgeführt wurde.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false. </returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.Die Zeichenfolge wird unter Verwendung des <see cref="F:System.Globalization.NumberStyles.Integer" />-Formats interpretiert.</param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den <see cref="T:System.Byte" />-Wert zurück, der der in <paramref name="s" /> enthaltenen Zahl entspricht, und 0 (null), wenn die Konvertierung nicht durchgeführt werden konnte.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> ursprünglich übergebene Werte werden ausnahmslos überschrieben.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und kulturabhängigen Format in das entsprechende <see cref="T:System.Byte" />.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.Die Zeichenfolge wird unter Verwendung des durch <paramref name="style" /> angegebenen Formats interpretiert.</param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angeben, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt.Wenn <paramref name="provider" /> gleich null ist, wird die aktuelle Threadkultur verwendet.</param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den Wert der ganzen 8-Bit-Zahl ohne Vorzeichen zurück, der der Zahl in <paramref name="s" /> entspricht, und 0 (null), wenn die Konvertierung nicht durchgeführt werden konnte.Die Konvertierung kann nicht durchgeführt werden, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, kein gültiges Format aufweist oder eine Zahl kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" /> darstellt.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> ursprünglich übergebene Werte werden ausnahmslos überschrieben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Char">
      <summary>Stellt ein Zeichen als UTF-16-Codeeinheit dar.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.CompareTo(System.Char)">
      <summary>Vergleicht diese Instanz mit einem angegebenen <see cref="T:System.Char" />-Objekt und gibt an, ob diese Instanz in der Sortierreihenfolge an einer früheren, späteren oder derselben Position wie das angegebene <see cref="T:System.Char" />-Objekt aufgeführt wird.</summary>
      <returns>Eine Zahl mit Vorzeichen, die die Position dieser Instanz in der Sortierreihenfolge in Bezug auf den <paramref name="value" />-Parameter angibt.Rückgabewert Beschreibung Kleiner als 0 (null) Diese Instanz geht <paramref name="value" /> voran. Zero Diese Instanz hat in der Sortierreihenfolge dieselbe Position wie <paramref name="value" />. Größer als 0 (null) Diese Instanz folgt <paramref name="value" />. </returns>
      <param name="value">Ein zu vergleichendes <see cref="T:System.Char" />-Objekt. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.ConvertFromUtf32(System.Int32)">
      <summary>Konvertiert den angegebenen Unicode-Codepunkt in eine UTF-16-codierte Zeichenfolge.</summary>
      <returns>Eine Zeichenfolge aus einem<see cref="T:System.Char" />-Objekt oder einem Ersatzzeichenpaar von <see cref="T:System.Char" />-Objekten, die dem durch den <paramref name="utf32" />-Parameter angegebenen Codepunkt entspricht.</returns>
      <param name="utf32">Ein 21-Bit-Unicode-Codepunkt. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="utf32" /> ist kein gültiger 21-Bit-Unicode-Codepunkt zwischen U+0 und U+10FFFF unter Ausschluss des Ersatzzeichenpaarbereichs zwischen U+D800 und U+DFFF. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
      <summary>Konvertiert den Wert eines UTF-16-codierten Ersatzzeichenpaars in einen Unicode-Codepunkt.</summary>
      <returns>Der durch den<paramref name="highSurrogate" />-Parameter und den <paramref name="lowSurrogate" />-Parameter dargestellte 21-Bit-Unicode-Codepunkt.</returns>
      <param name="highSurrogate">Eine hohe Ersatzzeichen-Codeeinheit (d. h. eine Codeeinheit zwischen U+D800 und U+DBFF). </param>
      <param name="lowSurrogate">Eine niedrige Ersatzzeichen-Codeeinheit (d. h. eine Codeeinheit zwischen U+DC00 und U+DFFF). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="highSurrogate" /> liegt nicht zwischen U+D800 und U+DBFF, oder <paramref name="lowSurrogate" /> liegt nicht zwischen U+DC00 und U+DFFF. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ConvertToUtf32(System.String,System.Int32)">
      <summary>Konvertiert den Wert eines UTF-16-codierten Zeichens oder Ersatzzeichenpaars an der angegebenen Position in einer Zeichenfolge in einen Unicode-Codepunkt.</summary>
      <returns>Der 21-Bit-Unicode-Codepunkt, der durch das Zeichen oder Ersatzzeichenpaar an der Position im <paramref name="s" />-Parameter, die durch den <paramref name="index" />-Parameter angegeben wird.</returns>
      <param name="s">Eine Zeichenfolge, die ein Zeichen oder ein Ersatzzeichenpaar enthält. </param>
      <param name="index">Die Indexposition des Zeichens oder Ersatzzeichenpaars in <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist keine Position innerhalb von <paramref name="s" />. </exception>
      <exception cref="T:System.ArgumentException">Die angegebene Indexposition enthält ein Ersatzzeichenpaar, und entweder das erste Zeichen im Paar ist kein gültiges hohes Ersatzzeichen oder das zweite Zeichen im Paar ist kein gültiges niedriges Ersatzzeichen. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.Equals(System.Char)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen <see cref="T:System.Char" />-Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> dem Wert dieser Instanz entspricht, andernfalls false.</returns>
      <param name="obj">Ein mit dieser Instanz zu vergleichendes Objekt. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> eine Instanz von <see cref="T:System.Char" /> ist, deren Wert gleich dem Wert dieser Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.GetNumericValue(System.Char)">
      <summary>Konvertiert das angegebene numerische Unicode-Zeichen in eine Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <returns>Der numerische Wert von <paramref name="c" />, wenn das Zeichen eine Zahl darstellt, andernfalls -1.0.</returns>
      <param name="c">Das zu konvertierende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.GetNumericValue(System.String,System.Int32)">
      <summary>Konvertiert das numerische Unicode-Zeichen an der angegebenen Position in einer angegebenen Zeichenfolge in eine Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <returns>Der numerische Wert des Zeichens an der Position <paramref name="index" /> in <paramref name="s" />, wenn das Zeichen eine Zahl darstellt, andernfalls -1.</returns>
      <param name="s">Ein <see cref="T:System.String" />. </param>
      <param name="index">Die Zeichenposition in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 oder größer als die letzte Position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsControl(System.Char)">
      <summary>Gibt an, ob das angegebene Unicode-Zeichen als Steuerzeichen kategorisiert wird.</summary>
      <returns>true, wenn <paramref name="c" /> ein Steuerzeichen ist, andernfalls false.</returns>
      <param name="c">Das auszuwertende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsControl(System.String,System.Int32)">
      <summary>Gibt an, ob das Zeichen an der angegebenen Position in einer angegebenen Zeichenfolge als Steuerzeichen kategorisiert wird.</summary>
      <returns>true, wenn das Zeichen an der Position <paramref name="index" /> in <paramref name="s" /> ein Steuerzeichen ist, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge. </param>
      <param name="index">Die Position des in <paramref name="s" /> auszuwertenden Zeichens. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 oder größer als die letzte Position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsDigit(System.Char)">
      <summary>Gibt an, ob das angegebene Unicode-Zeichen als Dezimalzahl kategorisiert wird.</summary>
      <returns>true, wenn <paramref name="c" /> eine Dezimalzahl ist, andernfalls false.</returns>
      <param name="c">Das auszuwertende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsDigit(System.String,System.Int32)">
      <summary>Gibt an, ob das Zeichen an der angegebenen Position in einer angegebenen Zeichenfolge als Dezimalzahl kategorisiert wird.</summary>
      <returns>true, wenn das Zeichen an der Position <paramref name="index" /> in <paramref name="s" /> eine Dezimalzahl ist, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge. </param>
      <param name="index">Die Position des in <paramref name="s" /> auszuwertenden Zeichens. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 oder größer als die letzte Position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsHighSurrogate(System.Char)">
      <summary>Gibt an, ob das angegebene <see cref="T:System.Char" />-Objekt ein hohes Ersatzzeichen ist.</summary>
      <returns>true, wenn der numerische Wert des <paramref name="c" />-Parameters zwischen U+D800 und U+DBFF liegt, andernfalls false.</returns>
      <param name="c">Das auszuwertende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
      <summary>Gibt an, ob das <see cref="T:System.Char" />-Objekt an der angegebenen Position in einer Zeichenfolge ein hohes Ersatzzeichen ist.</summary>
      <returns>true, wenn der numerische Wert des im <paramref name="s" />-Parameter angegebenen Zeichens zwischen U+D800 und U+DBFF liegt, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge. </param>
      <param name="index">Die Position des in <paramref name="s" /> auszuwertenden Zeichens. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist keine Position innerhalb von <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetter(System.Char)">
      <summary>Gibt an, ob das angegebene Unicode-Zeichen als Unicode-Buchstabe kategorisiert wird. </summary>
      <returns>true, wenn <paramref name="c" /> ein Buchstabe ist, andernfalls false.</returns>
      <param name="c">Das auszuwertende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetter(System.String,System.Int32)">
      <summary>Gibt an, ob das Zeichen an der angegebenen Position in einer angegebenen Zeichenfolge als Unicode-Buchstabe kategorisiert wird.</summary>
      <returns>true, wenn das Zeichen an der Position <paramref name="index" /> in <paramref name="s" /> ein Buchstabe ist, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge. </param>
      <param name="index">Die Position des in <paramref name="s" /> auszuwertenden Zeichens. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 oder größer als die letzte Position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetterOrDigit(System.Char)">
      <summary>Gibt an, ob das angegebene Unicode-Zeichen als Buchstabe oder als Dezimalzahl kategorisiert wird.</summary>
      <returns>true, wenn <paramref name="c" /> ein Buchstabe oder eine Dezimalzahl ist, andernfalls false.</returns>
      <param name="c">Das auszuwertende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetterOrDigit(System.String,System.Int32)">
      <summary>Gibt an, ob das Zeichen an der angegebenen Position in einer angegebenen Zeichenfolge als Buchstabe oder Dezimalzahl kategorisiert wird.</summary>
      <returns>true, wenn das Zeichen an der Position <paramref name="index" /> in <paramref name="s" /> ein Buchstabe oder eine Dezimalzahl ist, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge. </param>
      <param name="index">Die Position des in <paramref name="s" /> auszuwertenden Zeichens. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 oder größer als die letzte Position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLower(System.Char)">
      <summary>Gibt an, ob das angegebene Unicode-Zeichen als Kleinbuchstabe kategorisiert wird.</summary>
      <returns>true, wenn <paramref name="c" /> ein Kleinbuchstabe ist, andernfalls false.</returns>
      <param name="c">Das auszuwertende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLower(System.String,System.Int32)">
      <summary>Gibt an, ob das Zeichen an der angegebenen Position in einer angegebenen Zeichenfolge als Kleinbuchstabe kategorisiert wird.</summary>
      <returns>true, wenn das Zeichen an der Position <paramref name="index" /> in <paramref name="s" /> ein Kleinbuchstabe ist, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge. </param>
      <param name="index">Die Position des in <paramref name="s" /> auszuwertenden Zeichens. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 oder größer als die letzte Position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLowSurrogate(System.Char)">
      <summary>Gibt an, ob das angegebene <see cref="T:System.Char" />-Objekt ein niedriges Ersatzzeichen ist.</summary>
      <returns>true, wenn der numerische Wert des <paramref name="c" />-Parameters zwischen U+DC00 und U+DFFF liegt, andernfalls false.</returns>
      <param name="c">Das auszuwertende Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
      <summary>Gibt an, ob das <see cref="T:System.Char" />-Objekt an der angegebenen Position in einer Zeichenfolge ein niedriges Ersatzzeichen ist.</summary>
      <returns>true, wenn der numerische Wert des im <paramref name="s" />-Parameter angegebenen Zeichens zwischen U+DC00 und U+DFFF liegt, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge. </param>
      <param name="index">Die Position des in <paramref name="s" /> auszuwertenden Zeichens. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist keine Position innerhalb von <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsNumber(System.Char)">
      <summary>Gibt an, ob das angegebene Unicode-Zeichen als Zahl kategorisiert wird.</summary>
      <returns>true, wenn <paramref name="c" /> eine Zahl ist, andernfalls false.</returns>
      <param name="c">Das auszuwertende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsNumber(System.String,System.Int32)">
      <summary>Gibt an, ob das Zeichen an der angegebenen Position in einer angegebenen Zeichenfolge als Zahl kategorisiert wird.</summary>
      <returns>true, wenn das Zeichen an der Position <paramref name="index" /> in <paramref name="s" /> eine Zahl ist, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge. </param>
      <param name="index">Die Position des in <paramref name="s" /> auszuwertenden Zeichens. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 oder größer als die letzte Position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsPunctuation(System.Char)">
      <summary>Gibt an, ob das angegebene Unicode-Zeichen als Satzzeichen kategorisiert wird.</summary>
      <returns>true, wenn <paramref name="c" /> ein Satzzeichen ist, andernfalls false.</returns>
      <param name="c">Das auszuwertende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsPunctuation(System.String,System.Int32)">
      <summary>Gibt an, ob das Zeichen an der angegebenen Position in einer angegebenen Zeichenfolge als Satzzeichen kategorisiert wird.</summary>
      <returns>true, wenn das Zeichen an der Position <paramref name="index" /> in <paramref name="s" /> ein Satzzeichen ist, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge. </param>
      <param name="index">Die Position des in <paramref name="s" /> auszuwertenden Zeichens. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 oder größer als die letzte Position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSeparator(System.Char)">
      <summary>Gibt an, ob ein angegebenes Unicode-Zeichen als Trennzeichen kategorisiert wird.</summary>
      <returns>true, wenn <paramref name="c" /> ein Trennzeichen ist, andernfalls false.</returns>
      <param name="c">Das auszuwertende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSeparator(System.String,System.Int32)">
      <summary>Gibt an, ob das Zeichen an der angegebenen Position in einer angegebenen Zeichenfolge als Trennzeichen kategorisiert wird.</summary>
      <returns>true, wenn das Zeichen an der Position <paramref name="index" /> in <paramref name="s" /> ein Trennzeichen ist, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge. </param>
      <param name="index">Die Position des in <paramref name="s" /> auszuwertenden Zeichens. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 oder größer als die letzte Position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogate(System.Char)">
      <summary>Gibt an, ob das angegebene Zeichen über einen Ersatzzeichencodeeinheit verfügt.</summary>
      <returns>true, wenn <paramref name="c" /> entweder ein hohes Ersatzzeichen oder ein niedriges Ersatzzeichen ist, andernfalls false.</returns>
      <param name="c">Das auszuwertende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogate(System.String,System.Int32)">
      <summary>Gibt an, ob das Zeichen an der angegebenen Position in einer angegebenen Zeichenfolge über einen Ersatzzeichen-Codeeinheit verfügt.</summary>
      <returns>true, wenn das Zeichen an Position <paramref name="index" /> in <paramref name="s" /> entweder ein hohes Ersatzzeichen oder ein niedriges Ersatzzeichen ist, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge. </param>
      <param name="index">Die Position des in <paramref name="s" /> auszuwertenden Zeichens. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 oder größer als die letzte Position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogatePair(System.Char,System.Char)">
      <summary>Gibt an, ob die beiden angegebenen <see cref="T:System.Char" />-Objekte ein Ersatzzeichenpaar bilden.</summary>
      <returns>true, wenn der numerische Wert des <paramref name="highSurrogate" />-Parameters zwischen U+D800 und U+DBFF und der numerische Wert des <paramref name="lowSurrogate" />-Parameters zwischen U+DC00 und U+DFFF liegt, andernfalls false.</returns>
      <param name="highSurrogate">Das Zeichen, das als das hohe Ersatzzeichen eines Ersatzzeichenpaars ausgewertet werden soll. </param>
      <param name="lowSurrogate">Das Zeichen, das als das niedrige Ersatzzeichen eines Ersatzzeichenpaars ausgewertet werden soll. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
      <summary>Gibt an, ob zwei aufeinander folgende <see cref="T:System.Char" />-Objekte an einer angegebenen Position in einer Zeichenfolge ein Ersatzzeichenpaar bilden.</summary>
      <returns>true, wenn der <paramref name="s" />-Parameter an der Position <paramref name="index" /> und <paramref name="index" /> + 1 aufeinander folgende Zeichen enthält, der numerische Wert des Zeichens an der Position <paramref name="index" /> zwischen U+D800 und U+DBFF liegt und der numerische Wert des Zeichens an der Position <paramref name="index" /> +1 zwischen U+DC00 und U+DFFF liegt, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge. </param>
      <param name="index">Die Anfangsposition des innerhalb von <paramref name="s" /> auszuwertenden Zeichenpaars. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist keine Position innerhalb von <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSymbol(System.Char)">
      <summary>Gibt an, ob ein angegebenes Unicode-Zeichen als Symbolzeichen kategorisiert wird.</summary>
      <returns>true, wenn <paramref name="c" /> ein Symbolzeichen ist, andernfalls false.</returns>
      <param name="c">Das auszuwertende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSymbol(System.String,System.Int32)">
      <summary>Gibt an, ob das Zeichen an der angegebenen Position in einer angegebenen Zeichenfolge als Symbolzeichen kategorisiert wird.</summary>
      <returns>true, wenn das Zeichen an der Position <paramref name="index" /> in <paramref name="s" /> ein Symbolzeichen ist, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge. </param>
      <param name="index">Die Position des in <paramref name="s" /> auszuwertenden Zeichens. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 oder größer als die letzte Position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsUpper(System.Char)">
      <summary>Gibt an, ob ein angegebenes Unicode-Zeichen als Großbuchstabe kategorisiert wird.</summary>
      <returns>true, wenn <paramref name="c" /> ein Großbuchstabe ist, andernfalls false.</returns>
      <param name="c">Das auszuwertende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsUpper(System.String,System.Int32)">
      <summary>Gibt an, ob das Zeichen an der angegebenen Position in einer angegebenen Zeichenfolge als Großbuchstabe kategorisiert wird.</summary>
      <returns>true, wenn das Zeichen an der Position <paramref name="index" /> in <paramref name="s" /> ein Großbuchstabe ist, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge. </param>
      <param name="index">Die Position des in <paramref name="s" /> auszuwertenden Zeichens. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 oder größer als die letzte Position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsWhiteSpace(System.Char)">
      <summary>Gibt an, ob das angegebene Unicode-Zeichen als Leerzeichen kategorisiert wird.</summary>
      <returns>true, wenn <paramref name="c" /> ein Leerzeichen ist, andernfalls false.</returns>
      <param name="c">Das auszuwertende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
      <summary>Gibt an, ob das Zeichen an der angegebenen Position in einer angegebenen Zeichenfolge als Leerzeichen kategorisiert wird.</summary>
      <returns>true, wenn das Zeichen an der Position <paramref name="index" /> in <paramref name="s" /> ein Leerzeichen ist, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge. </param>
      <param name="index">Die Position des in <paramref name="s" /> auszuwertenden Zeichens. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 oder größer als die letzte Position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Char.MaxValue">
      <summary>Stellt den größtmöglichen Wert von <see cref="T:System.Char" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Char.MinValue">
      <summary>Stellt den kleinstmöglichen Wert von <see cref="T:System.Char" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.Parse(System.String)">
      <summary>Konvertiert den Wert der angegebenen Zeichenfolge in das entsprechende Unicode-Zeichen.</summary>
      <returns>Ein Unicode-Zeichen, das dem einzigen Zeichen in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die ein einzelnes Zeichen enthält, oder null. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.FormatException">Die Länge von <paramref name="s" /> ist nicht 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die Position dieser Instanz in der Sortierreihenfolge in Bezug auf den <paramref name="value" />-Parameter angibt.Rückgabewert Beschreibung Kleiner als 0 (null) Diese Instanz befindet sich in der Sortierreihenfolge vor <paramref name="value" />. Zero Diese Instanz hat in der Sortierreihenfolge dieselbe Position wie <paramref name="value" />. Größer als 0 (null) Diese Instanz folgt in der Sortierreihenfolge auf <paramref name="value" />.- oder - <paramref name="value" /> ist null. </returns>
      <param name="value">Ein Objekt, mit dem diese Instanz verglichen werden soll, oder null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> ist kein <see cref="T:System.Char" />-Objekt. </exception>
    </member>
    <member name="M:System.Char.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Hinweis   Diese Konvertierung wird nicht unterstützt.Bei einem entsprechenden Versuch wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Diese Konvertierung wird nicht unterstützt.Es wird kein Wert zurückgegeben.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.Char" />-Objekts.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</summary>
      <returns>Der Wert des aktuellen <see cref="T:System.Char" />-Objekts bleibt unverändert.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Hinweis   Diese Konvertierung wird nicht unterstützt.Bei einem entsprechenden Versuch wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Es wird kein Wert zurückgegeben.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Hinweis   Diese Konvertierung wird nicht unterstützt.Bei einem entsprechenden Versuch wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Es wird kein Wert zurückgegeben.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Hinweis   Diese Konvertierung wird nicht unterstützt.Bei einem entsprechenden Versuch wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Es wird kein Wert zurückgegeben.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary> Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.Char" />-Objekts.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.Char" />-Objekts.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary> Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.Char" />-Objekts.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary> Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.Char" />-Objekts.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Hinweis   Diese Konvertierung wird nicht unterstützt.Bei einem entsprechenden Versuch wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Es wird kein Wert zurückgegeben.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToString(System.IFormatProvider)"></member>
    <member name="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</summary>
      <returns>Ein Objekt des angegebenen Typs.</returns>
      <param name="type">Ein <see cref="T:System.Type" />-Objekt. </param>
      <param name="provider">Ein <see cref="T:System.IFormatProvider" />-Objekt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> ist null.</exception>
      <exception cref="T:System.InvalidCastException">Der Wert des aktuellen <see cref="T:System.Char" />-Objekts kann nicht in den durch den <paramref name="type" />-Parameter angegebenen Typ konvertiert werden. </exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.Char" />-Objekts.</returns>
      <param name="provider">Ein <see cref="T:System.IFormatProvider" />-Objekt.(Geben Sie null an, da der <paramref name="provider" />-Parameter ignoriert wird.)</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.Char" />-Objekts.</returns>
      <param name="provider">Ein <see cref="T:System.IFormatProvider" />-Objekt.(Geben Sie null an, da der <paramref name="provider" />-Parameter ignoriert wird.)</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.Char" />-Objekts.</returns>
      <param name="provider">Ein <see cref="T:System.IFormatProvider" />-Objekt.(Geben Sie null an, da der <paramref name="provider" />-Parameter ignoriert wird.)</param>
    </member>
    <member name="M:System.Char.ToLower(System.Char)">
      <summary>Konvertiert den Wert eines Unicode-Zeichens in den entsprechenden Kleinbuchstaben.</summary>
      <returns>Die Entsprechung von <paramref name="c" /> in Kleinbuchstaben oder der unveränderte Wert von <paramref name="c" />, wenn <paramref name="c" /> bereits aus Kleinbuchstaben besteht oder kein alphabetischer Wert ist.</returns>
      <param name="c">Das zu konvertierende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToLowerInvariant(System.Char)">
      <summary>Konvertiert den Wert eines Unicode-Zeichens in dessen Entsprechung in Kleinbuchstaben unter Verwendung der Regeln der invarianten Kultur für Groß- und Kleinschreibung.</summary>
      <returns>Die Entsprechung des <paramref name="c" />-Parameters in Kleinbuchstaben oder der unveränderte Wert von <paramref name="c" />, wenn <paramref name="c" /> bereits aus Kleinbuchstaben besteht oder kein alphabetischer Wert ist.</returns>
      <param name="c">Das zu konvertierende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToString">
      <summary>Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToString(System.Char)">
      <summary>Konvertiert das angegebene Unicode-Zeichen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Wertes von <paramref name="c" />.</returns>
      <param name="c">Das zu konvertierende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToUpper(System.Char)">
      <summary>Konvertiert den Wert eines Unicode-Zeichens in den entsprechenden Großbuchstaben.</summary>
      <returns>Die Entsprechung von <paramref name="c" /> in Großbuchstaben oder der unveränderte Wert von <paramref name="c" />, wenn <paramref name="c" /> bereits aus Großbuchstaben besteht, keine Entsprechung in Großbuchstaben hat oder kein alphabetischer Wert ist.</returns>
      <param name="c">Das zu konvertierende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToUpperInvariant(System.Char)">
      <summary>Konvertiert den Wert eines Unicode-Zeichens in dessen Entsprechung in Großbuchstaben unter Verwendung der Regeln der invarianten Kultur für Groß- und Kleinschreibung.</summary>
      <returns>Die Entsprechung des <paramref name="c" />-Parameters in Großbuchstaben oder der unveränderte Wert von <paramref name="c" />, wenn <paramref name="c" /> bereits aus Großbuchstaben besteht oder kein alphabetischer Wert ist.</returns>
      <param name="c">Das zu konvertierende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.TryParse(System.String,System.Char@)">
      <summary>Konvertiert den Wert der angegebenen Zeichenfolge in das entsprechende Unicode-Zeichen.Ein Rückgabecode gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn der <paramref name="s" />-Parameter erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die ein einzelnes Zeichen enthält, oder null. </param>
      <param name="result">Enthält nach Beenden der Methode ein Unicode-Zeichen, das bei erfolgreicher Konvertierung dem einzigen Zeichen in <paramref name="s" /> entspricht, oder ein nicht definierter Wert, wenn die Konvertierung nicht durchgeführt werden konnte.Die Konvertierung schlägt fehl, wenn der <paramref name="s" />-Parameter null ist oder wenn die Länge von <paramref name="s" /> nicht 1 ist.Dieser Parameter wird nicht initialisiert übergeben.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.CLSCompliantAttribute">
      <summary>Gibt an, ob ein Programmelement mit der CLS (Common Language Specification) kompatibel ist.Diese Klasse kann nicht vererbt werden.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.CLSCompliantAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine Instanz der <see cref="T:System.CLSCompliantAttribute" />-Klasse mit einem booleschen Wert, der angibt, ob das angegebene Programmelement CLS-kompatibel ist.</summary>
      <param name="isCompliant">true bei CLS-Kompatibilität, andernfalls false. </param>
    </member>
    <member name="P:System.CLSCompliantAttribute.IsCompliant">
      <summary>Ruft den booleschen Wert ab, der angibt, ob das angegebene Programmelement CLS-kompatibel ist.</summary>
      <returns>true, wenn das Programmelement CLS-kompatibel ist, andernfalls false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Comparison`1">
      <summary>Stellt die Methode dar, die zwei Objekte desselben Typs vergleicht.</summary>
      <typeparam name="T">Der Typ der zu vergleichenden Objekte.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Comparison`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Comparison`1.BeginInvoke(`0,`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Comparison`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Comparison`1.Invoke(`0,`0)"></member>
    <member name="T:System.DateTime">
      <summary>Stellt einen Zeitpunkt dar, der normalerweise durch Datum und Uhrzeit dargestellt wird. Um den .NET Framework-Quellcode für diesen Typ zu durchsuchen, finden Sie unter der Reference Source.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.DateTime" />-Struktur mit dem angegebenen Jahr, Monat und Tag.</summary>
      <param name="year">Das Jahr (1 bis 9999). </param>
      <param name="month">Der Monat (1 bis 12). </param>
      <param name="day">Der Tag (1 bis zur Anzahl der Tage in <paramref name="month" />). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> ist kleiner als 1 oder größer als 9999.- oder -  <paramref name="month" /> ist kleiner als 1 oder größer als 12.- oder -  <paramref name="day" /> ist kleiner als 1 oder größer als die Anzahl der Tage in <paramref name="month" />. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.DateTime" />-Struktur mit den angegebenen Werten für Jahr, Monat, Tag, Stunde, Minute und Sekunde.</summary>
      <param name="year">Das Jahr (1 bis 9999). </param>
      <param name="month">Der Monat (1 bis 12). </param>
      <param name="day">Der Tag (1 bis zur Anzahl der Tage in <paramref name="month" />). </param>
      <param name="hour">Die Stunden (0 bis 23). </param>
      <param name="minute">Die Minuten (0 bis 59). </param>
      <param name="second">Die Sekunden (0 bis 59). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> ist kleiner als 1 oder größer als 9999. - oder -  <paramref name="month" /> ist kleiner als 1 oder größer als 12. - oder -  <paramref name="day" /> ist kleiner als 1 oder größer als die Anzahl der Tage in <paramref name="month" />.- oder -  <paramref name="hour" /> ist kleiner als 0 oder größer als 23. - oder -  <paramref name="minute" /> ist kleiner als 0 oder größer als 59. - oder -  <paramref name="second" /> ist kleiner als 0 oder größer als 59. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.DateTime" />-Struktur mit den angegebenen Werten für Jahr, Monat, Tag, Stunde, Minute, Sekunde und koordinierte Weltzeit (Coordinated Universal Time, UTC) oder Ortszeit.</summary>
      <param name="year">Das Jahr (1 bis 9999). </param>
      <param name="month">Der Monat (1 bis 12). </param>
      <param name="day">Der Tag (1 bis zur Anzahl der Tage in <paramref name="month" />). </param>
      <param name="hour">Die Stunden (0 bis 23). </param>
      <param name="minute">Die Minuten (0 bis 59). </param>
      <param name="second">Die Sekunden (0 bis 59). </param>
      <param name="kind">Einer der Enumerationswerte, der angibt, ob <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" /> und <paramref name="second" /> eine Ortszeit, die koordinierte Weltzeit (Coordinated Universal Time, UTC) oder keines von beiden enthalten.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> ist kleiner als 1 oder größer als 9999. - oder -  <paramref name="month" /> ist kleiner als 1 oder größer als 12. - oder -  <paramref name="day" /> ist kleiner als 1 oder größer als die Anzahl der Tage in <paramref name="month" />.- oder -  <paramref name="hour" /> ist kleiner als 0 oder größer als 23. - oder -  <paramref name="minute" /> ist kleiner als 0 oder größer als 59. - oder -  <paramref name="second" /> ist kleiner als 0 oder größer als 59. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="kind" /> ist keiner der <see cref="T:System.DateTimeKind" />-Werte.</exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.DateTime" />-Struktur mit den angegebenen Werten für Jahr, Monat, Tag, Stunde, Minute, Sekunde und Millisekunde.</summary>
      <param name="year">Das Jahr (1 bis 9999). </param>
      <param name="month">Der Monat (1 bis 12). </param>
      <param name="day">Der Tag (1 bis zur Anzahl der Tage in <paramref name="month" />). </param>
      <param name="hour">Die Stunden (0 bis 23). </param>
      <param name="minute">Die Minuten (0 bis 59). </param>
      <param name="second">Die Sekunden (0 bis 59). </param>
      <param name="millisecond">Die Millisekunden (0 bis 999). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> ist kleiner als 1 oder größer als 9999.- oder -  <paramref name="month" /> ist kleiner als 1 oder größer als 12.- oder -  <paramref name="day" /> ist kleiner als 1 oder größer als die Anzahl der Tage in <paramref name="month" />.- oder -  <paramref name="hour" /> ist kleiner als 0 oder größer als 23.- oder -  <paramref name="minute" /> ist kleiner als 0 oder größer als 59.- oder -  <paramref name="second" /> ist kleiner als 0 oder größer als 59.- oder -  <paramref name="millisecond" /> ist kleiner als 0 oder größer als 999. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.DateTime" />-Struktur mit den angegebenen Werten für Jahr, Monat, Tag, Stunde, Minute, Sekunde, Millisekunde und koordinierte Weltzeit (Coordinated Universal Time, UTC) oder Ortszeit.</summary>
      <param name="year">Das Jahr (1 bis 9999). </param>
      <param name="month">Der Monat (1 bis 12). </param>
      <param name="day">Der Tag (1 bis zur Anzahl der Tage in <paramref name="month" />). </param>
      <param name="hour">Die Stunden (0 bis 23). </param>
      <param name="minute">Die Minuten (0 bis 59). </param>
      <param name="second">Die Sekunden (0 bis 59). </param>
      <param name="millisecond">Die Millisekunden (0 bis 999). </param>
      <param name="kind">Einer der Enumerationswerte, der angibt, ob <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" /> und <paramref name="millisecond" /> eine Ortszeit, die koordinierte Weltzeit (Coordinated Universal Time, UTC) oder keines von beiden enthalten.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> ist kleiner als 1 oder größer als 9999.- oder -  <paramref name="month" /> ist kleiner als 1 oder größer als 12.- oder -  <paramref name="day" /> ist kleiner als 1 oder größer als die Anzahl der Tage in <paramref name="month" />.- oder -  <paramref name="hour" /> ist kleiner als 0 oder größer als 23.- oder -  <paramref name="minute" /> ist kleiner als 0 oder größer als 59.- oder -  <paramref name="second" /> ist kleiner als 0 oder größer als 59.- oder -  <paramref name="millisecond" /> ist kleiner als 0 oder größer als 999. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="kind" /> ist keiner der <see cref="T:System.DateTimeKind" />-Werte.</exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int64)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.DateTime" />-Struktur mit einer angegebenen Anzahl von Ticks.</summary>
      <param name="ticks">Ein Datum und eine Uhrzeit, die als Anzahl der 100-Nanosekunden-Intervalle ausgedrückt werden, die seit dem 1. Januar 0001, 00:00:00.000, im gregorianischen Kalender vergangen sind. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ticks" /> ist kleiner als <see cref="F:System.DateTime.MinValue" /> oder größer als <see cref="F:System.DateTime.MaxValue" />. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int64,System.DateTimeKind)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.DateTime" />-Struktur mit einer angegebenen Anzahl von Ticks und koordinierter Weltzeit (UTC) oder lokaler Zeit.</summary>
      <param name="ticks">Ein Datum und eine Uhrzeit, die als Anzahl der 100-Nanosekunden-Intervalle ausgedrückt werden, die seit dem 1. Januar 0001, 00:00:00.000, im gregorianischen Kalender vergangen sind. </param>
      <param name="kind">Einer der Enumerationswerte, der angibt, ob <paramref name="ticks" /> eine Ortszeit, die koordinierte Weltzeit (Coordinated Universal Time, UTC) oder keines von beiden angibt.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ticks" /> ist kleiner als <see cref="F:System.DateTime.MinValue" /> oder größer als <see cref="F:System.DateTime.MaxValue" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="kind" /> ist keiner der <see cref="T:System.DateTimeKind" />-Werte.</exception>
    </member>
    <member name="M:System.DateTime.Add(System.TimeSpan)">
      <summary>Gibt einen neuen <see cref="T:System.DateTime" />-Wert zurück, der den Wert des angegebenen <see cref="T:System.TimeSpan" />-Werts zum Wert dieser Instanz addiert.</summary>
      <returns>Ein Objekt, dessen Wert die Summe aus der von dieser Instanz dargestellten Datums- und Uhrzeitangabe und dem durch <paramref name="value" /> dargestellten Zeitintervall ist.</returns>
      <param name="value">Ein positives oder negatives Zeitintervall. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Die sich ergebende <see cref="T:System.DateTime" /> ist kleiner als <see cref="F:System.DateTime.MinValue" /> oder größer als <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddDays(System.Double)">
      <summary>Gibt einen neuen <see cref="T:System.DateTime" />-Wert zurück, der die angegebene Anzahl von Tagen zum Wert dieser Instanz addiert.</summary>
      <returns>Ein Objekt, dessen Wert die Summe aus der von dieser Instanz dargestellten Datums- und Uhrzeitangabe und der durch <paramref name="value" /> dargestellten Anzahl von Tagen ist.</returns>
      <param name="value">Eine Zahl, die aus ganzen Tagen und dem Bruchteil eines Tages besteht.Der <paramref name="value" />-Parameter kann negativ oder positiv sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Die sich ergebende <see cref="T:System.DateTime" /> ist kleiner als <see cref="F:System.DateTime.MinValue" /> oder größer als <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddHours(System.Double)">
      <summary>Gibt einen neuen <see cref="T:System.DateTime" />-Wert zurück, der die angegebene Anzahl von Stunden zum Wert dieser Instanz addiert.</summary>
      <returns>Ein Objekt, dessen Wert die Summe aus der von dieser Instanz dargestellten Datums- und Uhrzeitangabe und der durch <paramref name="value" /> dargestellten Anzahl von Stunden ist.</returns>
      <param name="value">Eine Zahl, die aus ganzen Stunden und dem Bruchteil einer Stunde besteht.Der <paramref name="value" />-Parameter kann negativ oder positiv sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Die sich ergebende <see cref="T:System.DateTime" /> ist kleiner als <see cref="F:System.DateTime.MinValue" /> oder größer als <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddMilliseconds(System.Double)">
      <summary>Gibt einen neuen <see cref="T:System.DateTime" />-Wert zurück, der die angegebene Anzahl von Millisekunden zum Wert dieser Instanz addiert.</summary>
      <returns>Ein Objekt, dessen Wert die Summe aus der von dieser Instanz dargestellten Datums- und Uhrzeitangabe und der durch <paramref name="value" /> dargestellten Anzahl von Millisekunden ist.</returns>
      <param name="value">Eine Zahl, die aus ganzen Millisekunden und dem Bruchteil einer Millisekunde besteht.Der <paramref name="value" />-Parameter kann negativ oder positiv sein.Beachten Sie, dass dieser Wert auf die nächste Ganzzahl gerundet wird.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Die sich ergebende <see cref="T:System.DateTime" /> ist kleiner als <see cref="F:System.DateTime.MinValue" /> oder größer als <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddMinutes(System.Double)">
      <summary>Gibt einen neuen <see cref="T:System.DateTime" />-Wert zurück, der die angegebene Anzahl von Minuten zum Wert dieser Instanz addiert.</summary>
      <returns>Ein Objekt, dessen Wert die Summe aus der von dieser Instanz dargestellten Datums- und Uhrzeitangabe und der durch <paramref name="value" /> dargestellten Anzahl von Minuten ist.</returns>
      <param name="value">Eine Zahl, die aus ganzen Minuten und dem Bruchteil einer Minute besteht.Der <paramref name="value" />-Parameter kann negativ oder positiv sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Die sich ergebende <see cref="T:System.DateTime" /> ist kleiner als <see cref="F:System.DateTime.MinValue" /> oder größer als <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddMonths(System.Int32)">
      <summary>Gibt einen neuen <see cref="T:System.DateTime" />-Wert zurück, der die angegebene Anzahl von Monaten zum Wert dieser Instanz addiert.</summary>
      <returns>Ein Objekt, dessen Wert die Summe aus der von dieser Instanz dargestellten Datums- und Uhrzeitangabe und <paramref name="months" /> ist.</returns>
      <param name="months">Eine Anzahl von Monaten.Der <paramref name="months" />-Parameter kann negativ oder positiv sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Die sich ergebende <see cref="T:System.DateTime" /> ist kleiner als <see cref="F:System.DateTime.MinValue" /> oder größer als <see cref="F:System.DateTime.MaxValue" />.- oder -  <paramref name="months" /> ist kleiner als-120.000 oder größer als 120.000. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddSeconds(System.Double)">
      <summary>Gibt einen neuen <see cref="T:System.DateTime" />-Wert zurück, der die angegebene Anzahl von Sekunden zum Wert dieser Instanz addiert.</summary>
      <returns>Ein Objekt, dessen Wert die Summe aus der von dieser Instanz dargestellten Datums- und Uhrzeitangabe und der durch <paramref name="value" /> dargestellten Anzahl von Sekunden ist.</returns>
      <param name="value">Eine Zahl, die aus ganzen Sekunden und dem Bruchteil einer Sekunde besteht.Der <paramref name="value" />-Parameter kann negativ oder positiv sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Die sich ergebende <see cref="T:System.DateTime" /> ist kleiner als <see cref="F:System.DateTime.MinValue" /> oder größer als <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddTicks(System.Int64)">
      <summary>Gibt einen neuen <see cref="T:System.DateTime" />-Wert zurück, der die angegebene Anzahl von Ticks zum Wert dieser Instanz addiert.</summary>
      <returns>Ein Objekt, dessen Wert die Summe aus der von dieser Instanz dargestellten Datums- und Uhrzeitangabe und der durch <paramref name="value" /> dargestellten Zeit ist.</returns>
      <param name="value">Eine Anzahl von 100-Nanosekunden-Ticks.Der <paramref name="value" />-Parameter kann positiv oder negativ sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Die sich ergebende <see cref="T:System.DateTime" /> ist kleiner als <see cref="F:System.DateTime.MinValue" /> oder größer als <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddYears(System.Int32)">
      <summary>Gibt einen neuen <see cref="T:System.DateTime" />-Wert zurück, der die angegebene Anzahl von Jahren zum Wert dieser Instanz addiert.</summary>
      <returns>Ein Objekt, dessen Wert die Summe aus der von dieser Instanz dargestellten Datums- und Uhrzeitangabe und der durch <paramref name="value" /> dargestellten Anzahl von Jahren ist.</returns>
      <param name="value">Eine Anzahl von Jahren.Der <paramref name="value" />-Parameter kann negativ oder positiv sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> oder die Ergebnis-<see cref="T:System.DateTime" /> ist kleiner als <see cref="F:System.DateTime.MinValue" /> oder größer als <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Compare(System.DateTime,System.DateTime)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.DateTime" /> und gibt eine ganze Zahl zurück, die angibt, ob die erste Instanz früher oder später als die zweite Instanz ist oder ob sie mit dieser identisch ist.</summary>
      <returns>Eine Zahl mit Vorzeichen, die die relativen Werte von <paramref name="t1" /> und <paramref name="t2" /> angibt.Werttyp Bedingung Kleiner als 0 (null) <paramref name="t1" /> liegt vor <paramref name="t2" />. Zero <paramref name="t1" /> entspricht <paramref name="t2" />. Größer als 0 (null) <paramref name="t1" /> ist später als <paramref name="t2" />. </returns>
      <param name="t1">Das erste zu vergleichende Objekt. </param>
      <param name="t2">Das zweite zu vergleichende Objekt. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.CompareTo(System.DateTime)">
      <summary>Vergleicht den Wert dieser Instanz mit einem angegebenen <see cref="T:System.DateTime" />-Wert und gibt eine Ganzzahl zurück, die angibt, ob diese Instanz vor oder nach dem angegebenen <see cref="T:System.DateTime" />-Wert liegt oder diesem entspricht.</summary>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser Instanz und dem Wert des <paramref name="value" />-Parameters angibt.Wert Beschreibung Kleiner als 0 (null) Diese Instanz liegt vor <paramref name="value" />. Zero Diese Instanz entspricht <paramref name="value" />. Größer als 0 (null) Diese Instanz liegt nach <paramref name="value" />. </returns>
      <param name="value">Das Objekt, das mit der aktuellen Instanz verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Date">
      <summary>Ruft die Datumskomponente dieser Instanz ab.</summary>
      <returns>Ein neues Objekt mit demselben Datum wie diese Instanz und einer Uhrzeit von Mitternacht (00:00:00).</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Day">
      <summary>Ruft den Tag des Monats ab, der durch diese Instanz dargestellt wird.</summary>
      <returns>Die Tagkomponente als Wert zwischen 1 und 31.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.DayOfWeek">
      <summary>Ruft den Wochentag ab, der durch diese Instanz dargestellt wird.</summary>
      <returns>Eine Enumerationskonstante, die den Wochentag dieses <see cref="T:System.DateTime" />-Werts angibt. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.DayOfYear">
      <summary>Ruft den Tag des Jahres ab, der durch diese Instanz dargestellt wird.</summary>
      <returns>Der Tag des Jahres als Wert zwischen 1 und 366.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.DaysInMonth(System.Int32,System.Int32)">
      <summary>Gibt die Anzahl der Tage im angegebenen Monat und Jahr zurück.</summary>
      <returns>Die Anzahl der Tage in <paramref name="month" /> für das angegebene <paramref name="year" />.Wenn <paramref name="month" /> gleich 2 für Februar ist, ist der Rückgabewert 28 oder 29, abhängig davon, ob <paramref name="year" /> ein Schaltjahr ist.</returns>
      <param name="year">Das Jahr. </param>
      <param name="month">Der Monat (eine Zahl zwischen 1 und 12). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="month" /> ist kleiner als 1 oder größer als 12.- oder - <paramref name="year" /> ist kleiner als 1 oder größer als 9999.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Equals(System.DateTime)">
      <summary>Gibt einen Wert zurück, der angibt, ob der Wert dieser Instanz gleich dem Wert der angegebenen <see cref="T:System.DateTime" />-Instanz ist.</summary>
      <returns>true, wenn <paramref name="value" /> dem Wert dieser Instanz entspricht, andernfalls false.</returns>
      <param name="value">Das mit dieser Instanz zu vergleichende Objekt. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Equals(System.DateTime,System.DateTime)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei <see cref="T:System.DateTime" />-Instanzen denselben Datum- und Zeitwert besitzen.</summary>
      <returns>true, wenn die beiden Werte gleich sind, andernfalls false.</returns>
      <param name="t1">Das erste zu vergleichende Objekt. </param>
      <param name="t2">Das zweite zu vergleichende Objekt. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn <paramref name="value" /> eine Instanz von <see cref="T:System.DateTime" /> ist, deren Wert gleich dem Wert dieser Instanz ist, andernfalls false.</returns>
      <param name="value">Das mit dieser Instanz zu vergleichende Objekt. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.FromBinary(System.Int64)">
      <summary>Deserialisiert einen 64-Bit-Binärwert und erstellt ein ursprüngliches serialisiertes <see cref="T:System.DateTime" />-Objekt neu.</summary>
      <returns>Ein Objekt, das dem <see cref="T:System.DateTime" />-Objekt entspricht, das von der <see cref="M:System.DateTime.ToBinary" />-Methode serialisiert wurde.</returns>
      <param name="dateData">Eine 64-Bit-Ganzzahl mit Vorzeichen, die die <see cref="P:System.DateTime.Kind" />-Eigenschaft in ein 2-Bit-Feld und die <see cref="P:System.DateTime.Ticks" />-Eigenschaft in ein 62-Bit-Feld codiert. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateData" /> ist kleiner als <see cref="F:System.DateTime.MinValue" /> oder größer als <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.FromFileTime(System.Int64)">
      <summary>Konvertiert die angegebene Windows-Dateizeit in eine entsprechende Ortszeit.</summary>
      <returns>Ein Objekt, das die Ortszeit darstellt, die der Datums- und Uhrzeitangabe entspricht, die durch den <paramref name="fileTime" />-Parameter dargestellt wird.</returns>
      <param name="fileTime">Eine Windows-Dateizeit in Ticks. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="fileTime" /> ist kleiner als 0 (null) oder stellt eine Zeit größer als <see cref="F:System.DateTime.MaxValue" /> dar. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.FromFileTimeUtc(System.Int64)">
      <summary>Konvertiert die angegebene Windows-Dateizeit in eine entsprechende UTC-Zeit.</summary>
      <returns>Ein Objekt, das die UTC-Zeit darstellt, die der Datums- und Uhrzeitangabe entspricht, die durch den <paramref name="fileTime" />-Parameter dargestellt wird.</returns>
      <param name="fileTime">Eine Windows-Dateizeit in Ticks. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="fileTime" /> ist kleiner als 0 (null) oder stellt eine Zeit größer als <see cref="F:System.DateTime.MaxValue" /> dar. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats">
      <summary>Konvertiert den Wert dieser Instanz in alle Zeichenfolgendarstellungen, die von den Standardformatbezeichnern für Datum und Uhrzeit unterstützt werden.</summary>
      <returns>Ein Array von Zeichenfolgen, in dem jedes Element eine mit einem der Standardformatbezeichner für Datum und Uhrzeit formatierte Darstellung des Werts dieser Instanz ist.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.Char)">
      <summary>Konvertiert den Wert dieser Instanz in alle Zeichenfolgendarstellungen, die von den angegebenen Standardformatbezeichnern für Datum und Uhrzeit unterstützt werden.</summary>
      <returns>Ein Array von Zeichenfolgen, in dem jedes Element eine mit dem <paramref name="format" />-Standardformatbezeichner für Datum und Uhrzeit formatierte Darstellung des Werts dieser Instanz ist.</returns>
      <param name="format">Eine standardmäßige Formatzeichenfolge für Datum und Uhrzeit (siehe Hinweise). </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> ist kein gültiges Zeichen für Standarddatums- und Standarduhrzeit-Formatbezeichner.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)">
      <summary>Konvertiert den Wert dieser Instanz in alle Zeichenfolgenentsprechungen, die von dem angegebenen Standardformatbezeichner für Datum und Uhrzeit und den angegebenen kulturspezifischen Formatierungsinformationen unterstützt werden.</summary>
      <returns>Ein Array von Zeichenfolgen, in dem jedes Element eine mit einem der Standardformatbezeichner für Datum und Uhrzeit formatierte Darstellung des Werts dieser Instanz ist.</returns>
      <param name="format">Eine Formatzeichenfolge für Datum und Uhrzeit (siehe Hinweise). </param>
      <param name="provider">Ein Objekt, das kulturabhängige Formatierungsinformationen über diese Instanz liefert. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> ist kein gültiges Zeichen für Standarddatums- und Standarduhrzeit-Formatbezeichner.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.IFormatProvider)">
      <summary>Konvertiert den Wert dieser Instanz in alle Zeichenfolgendarstellungen, die von den Standardformatbezeichnern für Datum und Uhrzeit und den angegebenen kulturspezifischen Formatierungsinformationen unterstützt werden.</summary>
      <returns>Ein Array von Zeichenfolgen, in dem jedes Element eine mit einem der Standardformatbezeichner für Datum und Uhrzeit formatierte Darstellung des Werts dieser Instanz ist.</returns>
      <param name="provider">Ein Objekt, das kulturabhängige Formatierungsinformationen über diese Instanz liefert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Hour">
      <summary>Ruft die Komponente für die Stunden des Datums ab, das durch diese Instanz dargestellt wird.</summary>
      <returns>Die Stundenkomponente als Wert zwischen 0 und 23.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.IsDaylightSavingTime">
      <summary>Gibt an, ob sich diese Instanz von <see cref="T:System.DateTime" /> im Sommerzeitbereich für die aktuelle Zeitzone befindet.</summary>
      <returns>true, wenn der Wert von der <see cref="P:System.DateTime.Kind" />-Eigenschaft <see cref="F:System.DateTimeKind.Local" /> oder <see cref="F:System.DateTimeKind.Unspecified" /> ist und der Wert dieser Instanz von <see cref="T:System.DateTime" /> innerhalb des Sommerzeitbereichs für die lokale Zeitzone liegt. false, wenn <see cref="P:System.DateTime.Kind" /><see cref="F:System.DateTimeKind.Utc" /> ist.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.IsLeapYear(System.Int32)">
      <summary>Gibt eine Angabe darüber zurück, ob das angegebene Jahr ein Schaltjahr ist.</summary>
      <returns>true, wenn <paramref name="year" /> ein Schaltjahr ist, andernfalls false.</returns>
      <param name="year">Eine vierstellige Jahresangabe. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> ist kleiner als 1 oder größer als 9999.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Kind">
      <summary>Ruft einen Wert ab, der angibt, ob die durch diese Instanz dargestellte Zeit auf lokaler Zeit, koordinierter Weltzeit (UTC) oder keinem von beiden basiert.</summary>
      <returns>Einer der Enumerationswerte, der angibt, welche Zeit von der aktuellen Uhrzeit dargestellt wird.Die Standardeinstellung ist <see cref="F:System.DateTimeKind.Unspecified" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.DateTime.MaxValue">
      <summary>Stellt den größtmöglichen Wert von <see cref="T:System.DateTime" /> dar.Dieses Feld ist schreibgeschützt.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Millisecond">
      <summary>Ruft die Komponente für die Millisekunden des Datums ab, das durch diese Instanz dargestellt wird.</summary>
      <returns>Die Millisekundenkomponente als Wert zwischen 0 und 999.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Minute">
      <summary>Ruft die Komponente für die Minuten des Datums ab, das durch diese Instanz dargestellt wird.</summary>
      <returns>Die Minutenkomponente als Wert zwischen 0 und 59.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.DateTime.MinValue">
      <summary>Stellt den kleinstmöglichen Wert von <see cref="T:System.DateTime" /> dar.Dieses Feld ist schreibgeschützt.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Month">
      <summary>Ruft die Komponente für den Monat des Datums ab, das durch diese Instanz dargestellt wird.</summary>
      <returns>Die Monatskomponente als Wert zwischen 1 und 12.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Now">
      <summary>Ruft ein <see cref="T:System.DateTime" />-Objekt ab, das auf das aktuelle Datum und die aktuelle Zeit auf dem lokalen Rechner als Ortszeit festgelegt ist.</summary>
      <returns>Ein Objekt, dessen Wert die aktuelle lokale Datums- und Uhrzeitangabe ist.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Addition(System.DateTime,System.TimeSpan)">
      <summary>Addiert ein angegebenes Zeitintervall zu einer Datums- und Uhrzeitangabe und gibt eine neue Datums- und Uhrzeitangabe zurück.</summary>
      <returns>Ein Objekt, dessen Wert die Summe der Werte von <paramref name="d" /> und <paramref name="t" /> ist.</returns>
      <param name="d">Der Datums- und Uhrzeitwert, der hinzugefügt werden soll. </param>
      <param name="t">Das hinzuzufügende Zeitintervall. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Die sich ergebende <see cref="T:System.DateTime" /> ist kleiner als <see cref="F:System.DateTime.MinValue" /> oder größer als <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Equality(System.DateTime,System.DateTime)">
      <summary>Bestimmt, ob zwei angegebene Instanzen von <see cref="T:System.DateTime" /> gleich sind.</summary>
      <returns>true, wenn <paramref name="d1" /> und <paramref name="d2" /> dasselbe Datum und dieselbe Uhrzeit darstellen, andernfalls false.</returns>
      <param name="d1">Das erste zu vergleichende Objekt. </param>
      <param name="d2">Das zweite zu vergleichende Objekt. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)">
      <summary>Bestimmt, ob eine angegebene <see cref="T:System.DateTime" /> später als eine andere angegebene <see cref="T:System.DateTime" /> ist.</summary>
      <returns>true, wenn <paramref name="t1" /> später als <paramref name="t2" /> ist, andernfalls false.</returns>
      <param name="t1">Das erste zu vergleichende Objekt. </param>
      <param name="t2">Das zweite zu vergleichende Objekt. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)">
      <summary>Bestimmt, ob eine vorliegende <see cref="T:System.DateTime" />-Angabe eine Datums- und Uhrzeitangabe darstellt, die gleichzeitig oder später als eine andere vorliegende <see cref="T:System.DateTime" />-Angabe ist.</summary>
      <returns>true wenn <paramref name="t1" /> gleich oder später als <paramref name="t2" /> ist, andernfalls false.</returns>
      <param name="t1">Das erste zu vergleichende Objekt. </param>
      <param name="t2">Das zweite zu vergleichende Objekt. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Inequality(System.DateTime,System.DateTime)">
      <summary>Bestimmt, ob zwei angegebene Instanzen von <see cref="T:System.DateTime" /> nicht gleich sind.</summary>
      <returns>true, wenn <paramref name="d1" /> und <paramref name="d2" /> nicht dasselbe Datum und dieselbe Uhrzeit darstellen, andernfalls false.</returns>
      <param name="d1">Das erste zu vergleichende Objekt. </param>
      <param name="d2">Das zweite zu vergleichende Objekt. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_LessThan(System.DateTime,System.DateTime)">
      <summary>Bestimmt, ob eine angegebene <see cref="T:System.DateTime" /> früher als eine andere angegebene <see cref="T:System.DateTime" /> ist.</summary>
      <returns>true, wenn <paramref name="t1" /> früher als <paramref name="t2" /> ist, andernfalls false.</returns>
      <param name="t1">Das erste zu vergleichende Objekt. </param>
      <param name="t2">Das zweite zu vergleichende Objekt. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)">
      <summary>Bestimmt, ob eine vorliegende <see cref="T:System.DateTime" />-Angabe eine Datums- und Uhrzeitangabe darstellt, die gleichzeitig oder früher als eine andere vorliegende <see cref="T:System.DateTime" />-Angabe ist.</summary>
      <returns>true wenn <paramref name="t1" /> gleich oder später als <paramref name="t2" /> ist, andernfalls false.</returns>
      <param name="t1">Das erste zu vergleichende Objekt. </param>
      <param name="t2">Das zweite zu vergleichende Objekt. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Subtraction(System.DateTime,System.DateTime)">
      <summary>Subtrahiert eine Datums- und Uhrzeitangabe von einer anderen Datums- und Uhrzeitangabe und gibt ein Zeitintervall zurück.</summary>
      <returns>Das Zeitintervall zwischen <paramref name="d1" /> und <paramref name="d2" />, d. h. <paramref name="d1" /> minus <paramref name="d2" />.</returns>
      <param name="d1">Der Datums- und Uhrzeitwert, von dem subtrahiert werden soll (der Minuend). </param>
      <param name="d2">Der Datums- und Uhrzeitwert, der subtrahiert werden soll (der Subtrahend). </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)">
      <summary>Subtrahiert ein angegebenes Zeitintervall von einer Datums- und Uhrzeitangabe und gibt eine neue Datums- und Uhrzeitangabe zurück.</summary>
      <returns>Ein Objekt, dessen Wert der Wert von <paramref name="d" /> minus dem Wert von <paramref name="t" /> ist.</returns>
      <param name="d">Der Datums- und Uhrzeitwert, von dem subtrahiert werden soll. </param>
      <param name="t">Das Zeitintervall, das subtrahiert werden soll. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Die sich ergebende <see cref="T:System.DateTime" /> ist kleiner als <see cref="F:System.DateTime.MinValue" /> oder größer als <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.Parse(System.String)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Datums- und Uhrzeitangabe in die entsprechende <see cref="T:System.DateTime" />.</summary>
      <returns>Ein Objekt, das mit der in <paramref name="s" /> enthaltenen Datums- und Uhrzeitangabe identisch ist.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Datums- und Zeitangabe enthält. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> enthält keine gültige Zeichenfolgendarstellung eines Datums und einer Uhrzeit. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Parse(System.String,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellungen einer Datums- und Uhrzeitangabe unter Verwendung der kulturspezifischen Formatierungsinformationen in die entsprechende <see cref="T:System.DateTime" />.</summary>
      <returns>Ein Objekt, das der in <paramref name="s" /> enthaltenen Datums- und Uhrzeitangabe nach den Angaben von <paramref name="provider" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Datums- und Zeitangabe enthält. </param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> enthält keine gültige Zeichenfolgendarstellung eines Datums und einer Uhrzeit. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Datums- und Uhrzeitangabe unter Verwendung der kulturspezifischen Formatierungsinformationen und Formatierungsstil in die entsprechende <see cref="T:System.DateTime" />.</summary>
      <returns>Ein Objekt, das der in <paramref name="s" /> enthaltenen Datums- und Uhrzeitangabe nach den Angaben von <paramref name="provider" /> und <paramref name="styles" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Datums- und Zeitangabe enthält. </param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <param name="styles">Eine bitweise Kombination der Enumerationswerte, die die Stilelemente angibt, die in <paramref name="s" /> vorhanden sein können, sodass der Analysevorgang erfolgreich abgeschlossen werden kann. Zudem wird festgelegt, wie das analysierte Datum in Bezug auf die aktuelle Zeitzone oder das aktuelle Datum interpretiert werden soll.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> enthält keine gültige Zeichenfolgendarstellung eines Datums und einer Uhrzeit. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> enthält eine ungültige Kombination von <see cref="T:System.Globalization.DateTimeStyles" />-Werten.Beispielsweise sowohl <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> als auch <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)">
      <summary>Konvertiert die angegebene Zeichenfolgenentsprechung einer Datums- und Uhrzeitangabe unter Verwendung des angegebenen Formats und der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende <see cref="T:System.DateTime" />.Das Format der Zeichenfolgendarstellung muss dem angegebenen Format genau entsprechen.</summary>
      <returns>Ein Objekt, das der in <paramref name="s" /> enthaltenen Datums- und Uhrzeitangabe nach den Angaben von <paramref name="format" /> und <paramref name="provider" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Datums- und Zeitangabe enthält. </param>
      <param name="format">Ein Formatbezeichner, der das erforderliche Format von <paramref name="s" /> definiert.Weitere Informationen finden Sie im Abschnitt "Hinweise".</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> oder <paramref name="format" /> ist null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> oder <paramref name="format" /> ist eine leere Zeichenfolge. - oder -  <paramref name="s" /> enthält kein Datum und keine Uhrzeit, die einem der in <paramref name="format" /> angegebenen Muster entsprechen. - oder - Die Stundenkomponente und der AM/PM-Kennzeichner in <paramref name="s" /> stimmen nicht überein.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Konvertiert die angegebene Zeichenfolgenentsprechung einer Datums- und Uhrzeitangabe unter Verwendung der Angaben über Format, kulturabhängige Formatierungsinformationen und Stil in die entsprechende <see cref="T:System.DateTime" />.Das Format der Zeichenfolgendarstellung muss dem angegebenen Format genau entsprechen. Andernfalls wird eine Ausnahme ausgelöst.</summary>
      <returns>Ein Objekt, das der in <paramref name="s" /> enthaltenen Datums- und Uhrzeitangabe nach den Angaben von <paramref name="format" />, <paramref name="provider" /> und <paramref name="style" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Datums- und Zeitangabe enthält. </param>
      <param name="format">Ein Formatbezeichner, der das erforderliche Format von <paramref name="s" /> definiert.Weitere Informationen finden Sie im Abschnitt "Hinweise".</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <param name="style">Eine bitweise Kombination der Enumerationswerte, die zusätzliche Informationen über <paramref name="s" />, über in <paramref name="s" /> möglicherweise vorhandene Stilelementen oder über die Konvertierung von <paramref name="s" /> in einen <see cref="T:System.DateTime" />-Wert bereitstellt.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> oder <paramref name="format" /> ist null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> oder <paramref name="format" /> ist eine leere Zeichenfolge. - oder -  <paramref name="s" /> enthält kein Datum und keine Uhrzeit, die einem der in <paramref name="format" /> angegebenen Muster entsprechen. - oder - Die Stundenkomponente und der AM/PM-Kennzeichner in <paramref name="s" /> stimmen nicht überein.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> enthält eine ungültige Kombination von <see cref="T:System.Globalization.DateTimeStyles" />-Werten.Beispielsweise sowohl <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> als auch <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Konvertiert die angegebene Zeichenfolgenentsprechung einer Datums- und Uhrzeitangabe unter Verwendung des angegebenen Formatarrays, der kulturspezifischen Formatierungsinformationen und des Stils in die <see cref="T:System.DateTime" />-Entsprechung.Das Format der Zeichenfolgendarstellung muss mindestens einem der angegebenen Formate genau entsprechen. Andernfalls wird eine Ausnahme ausgelöst.</summary>
      <returns>Ein Objekt, das der in <paramref name="s" /> enthaltenen Datums- und Uhrzeitangabe nach den Angaben von <paramref name="formats" />, <paramref name="provider" /> und <paramref name="style" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Datums- und Zeitangabe enthält. </param>
      <param name="formats">Ein Array mit den zulässigen Formaten von <paramref name="s" />.Weitere Informationen finden Sie im Abschnitt "Hinweise".</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die das zulässige Format von <paramref name="s" /> angibt.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> oder <paramref name="formats" /> ist null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ist eine leere Zeichenfolge. - oder -  Ein Element von <paramref name="formats" /> ist eine leere Zeichenfolge. - oder -  <paramref name="s" /> enthält kein Datum und keine Uhrzeit, die einem der Elemente von <paramref name="formats" /> entsprechen. - oder - Die Stundenkomponente und der AM/PM-Kennzeichner in <paramref name="s" /> stimmen nicht überein.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> enthält eine ungültige Kombination von <see cref="T:System.Globalization.DateTimeStyles" />-Werten.Beispielsweise sowohl <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> als auch <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Second">
      <summary>Ruft die Komponente für die Sekunden des Datums ab, das durch diese Instanz dargestellt wird.</summary>
      <returns>Die Sekundenkomponente als Wert zwischen 0 und 59.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)">
      <summary>Erstellt ein neues <see cref="T:System.DateTime" />-Objekt, das über die gleiche Anzahl von Ticks wie die angegebene <see cref="T:System.DateTime" /> verfügt, aber entsprechend dem <see cref="T:System.DateTimeKind" />-Wert in Ortszeit, koordinierter Weltzeit (Coordinated Universal Time, UTC) oder keinem von beiden angegeben ist.</summary>
      <returns>Ein neues Objekt, das über die gleiche Anzahl von Ticks verfügt wie das Objekt, das durch den <paramref name="value" />-Parameter und den durch den <see cref="T:System.DateTimeKind" />-Parameter angegebenen <paramref name="kind" />-Wert dargestellt wird. </returns>
      <param name="value">Ein Datum und eine Uhrzeit. </param>
      <param name="kind">Einer der Enumerationswerte, der angibt, ob das neue Objekt Ortszeit, UTC oder keines von beiden darstellt.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Subtract(System.DateTime)">
      <summary>Subtrahiert die angegebene Datums- und Uhrzeitangabe von dieser Instanz.</summary>
      <returns>Ein Zeitintervall, das der von dieser Instanz dargestellten Datums- und Uhrzeitangabe minus der durch <paramref name="value" /> dargestellten Datums- und Uhrzeitangabe entspricht.</returns>
      <param name="value">Der Datums- und Uhrzeitwert, der subtrahiert werden soll. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Das Ergebnis ist kleiner als <see cref="F:System.DateTime.MinValue" /> oder größer als <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Subtract(System.TimeSpan)">
      <summary>Subtrahiert die angegebene Dauer von dieser Instanz.</summary>
      <returns>Ein Objekt, das der von dieser Instanz dargestellten Datums- und Uhrzeitangabe minus dem durch <paramref name="value" /> dargestellten Zeitintervall entspricht.</returns>
      <param name="value">Das Zeitintervall, das subtrahiert werden soll. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Das Ergebnis ist kleiner als <see cref="F:System.DateTime.MinValue" /> oder größer als <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob diese Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen der Reihenfolge dieser Instanz und <paramref name="value" /> angibt.Wert Beschreibung Kleiner als 0 (null) Diese Instanz befindet sich in der Sortierreihenfolge vor <paramref name="value" />. Zero Diese Instanz tritt an der gleichen Position wie <paramref name="value" /> in der Sortierreihenfolge auf. Größer als 0 (null) Diese Instanz steht in der Sortierreihenfolge nach <paramref name="value" />, oder <paramref name="value" /> ist null. </returns>
      <param name="value">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> ist keine <see cref="T:System.DateTime" />. </exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Der Rückgabewert für diesen Member wird nicht verwendet.</returns>
      <param name="provider">Ein Objekt, das die <see cref="T:System.IFormatProvider" />-Schnittstelle implementiert.(Dieser Parameter wird nicht verwendet, geben Sie null an.)</param>
      <exception cref="T:System.InvalidCastException">In allen Fällen.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Der Rückgabewert für diesen Member wird nicht verwendet.</returns>
      <param name="provider">Ein Objekt, das die <see cref="T:System.IFormatProvider" />-Schnittstelle implementiert.(Dieser Parameter wird nicht verwendet, geben Sie null an.)</param>
      <exception cref="T:System.InvalidCastException">In allen Fällen.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Der Rückgabewert für diesen Member wird nicht verwendet.</returns>
      <param name="provider">Ein Objekt, das die <see cref="T:System.IFormatProvider" />-Schnittstelle implementiert.(Dieser Parameter wird nicht verwendet, geben Sie null an.)</param>
      <exception cref="T:System.InvalidCastException">In allen Fällen.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Gibt das aktuelle <see cref="T:System.DateTime" />-Objekt zurück.</summary>
      <returns>Das aktuelle Objekt.</returns>
      <param name="provider">Ein Objekt, das die <see cref="T:System.IFormatProvider" />-Schnittstelle implementiert.(Dieser Parameter wird nicht verwendet, geben Sie null an.)</param>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Der Rückgabewert für diesen Member wird nicht verwendet.</returns>
      <param name="provider">Ein Objekt, das die <see cref="T:System.IFormatProvider" />-Schnittstelle implementiert.(Dieser Parameter wird nicht verwendet, geben Sie null an.)</param>
      <exception cref="T:System.InvalidCastException">In allen Fällen.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Der Rückgabewert für diesen Member wird nicht verwendet.</returns>
      <param name="provider">Ein Objekt, das die <see cref="T:System.IFormatProvider" />-Schnittstelle implementiert.(Dieser Parameter wird nicht verwendet, geben Sie null an.)</param>
      <exception cref="T:System.InvalidCastException">In allen Fällen.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Der Rückgabewert für diesen Member wird nicht verwendet.</returns>
      <param name="provider">Ein Objekt, das die <see cref="T:System.IFormatProvider" />-Schnittstelle implementiert.(Dieser Parameter wird nicht verwendet, geben Sie null an.)</param>
      <exception cref="T:System.InvalidCastException">In allen Fällen.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Der Rückgabewert für diesen Member wird nicht verwendet.</returns>
      <param name="provider">Ein Objekt, das die <see cref="T:System.IFormatProvider" />-Schnittstelle implementiert.(Dieser Parameter wird nicht verwendet, geben Sie null an.)</param>
      <exception cref="T:System.InvalidCastException">In allen Fällen.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Der Rückgabewert für diesen Member wird nicht verwendet.</returns>
      <param name="provider">Ein Objekt, das die <see cref="T:System.IFormatProvider" />-Schnittstelle implementiert.(Dieser Parameter wird nicht verwendet, geben Sie null an.)</param>
      <exception cref="T:System.InvalidCastException">In allen Fällen.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Der Rückgabewert für diesen Member wird nicht verwendet.</returns>
      <param name="provider">Ein Objekt, das die <see cref="T:System.IFormatProvider" />-Schnittstelle implementiert.(Dieser Parameter wird nicht verwendet, geben Sie null an.)</param>
      <exception cref="T:System.InvalidCastException">In allen Fällen.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Der Rückgabewert für diesen Member wird nicht verwendet.</returns>
      <param name="provider">Ein Objekt, das die <see cref="T:System.IFormatProvider" />-Schnittstelle implementiert.(Dieser Parameter wird nicht verwendet, geben Sie null an.)</param>
      <exception cref="T:System.InvalidCastException">In allen Fällen. </exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Konvertiert das aktuelle <see cref="T:System.DateTime" />-Objekt in ein Objekt vom angegebenen Typ.</summary>
      <returns>Ein Objekt von dem durch den <paramref name="type" />-Parameter angegebenen Typ und mit einem Wert, der dem aktuellen <see cref="T:System.DateTime" />-Objekt entspricht.</returns>
      <param name="type">Der gewünschte Typ. </param>
      <param name="provider">Ein Objekt, das die <see cref="T:System.IFormatProvider" />-Schnittstelle implementiert.(Dieser Parameter wird nicht verwendet, geben Sie null an.)</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> ist null. </exception>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird für den <see cref="T:System.DateTime" />-Typ nicht unterstützt.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Der Rückgabewert für diesen Member wird nicht verwendet.</returns>
      <param name="provider">Ein Objekt, das die <see cref="T:System.IFormatProvider" />-Schnittstelle implementiert.(Dieser Parameter wird nicht verwendet, geben Sie null an.)</param>
      <exception cref="T:System.InvalidCastException">In allen Fällen.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Der Rückgabewert für diesen Member wird nicht verwendet.</returns>
      <param name="provider">Ein Objekt, das die <see cref="T:System.IFormatProvider" />-Schnittstelle implementiert.(Dieser Parameter wird nicht verwendet, geben Sie null an.)</param>
      <exception cref="T:System.InvalidCastException">In allen Fällen.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Der Rückgabewert für diesen Member wird nicht verwendet.</returns>
      <param name="provider">Ein Objekt, das die <see cref="T:System.IFormatProvider" />-Schnittstelle implementiert.(Dieser Parameter wird nicht verwendet, geben Sie null an.)</param>
      <exception cref="T:System.InvalidCastException">In allen Fällen.</exception>
    </member>
    <member name="P:System.DateTime.Ticks">
      <summary>Ruft die Anzahl der Ticks ab, die Datum und Uhrzeit dieser Instanz darstellen.</summary>
      <returns>Die Anzahl der Ticks, die Datum und Uhrzeit dieser Instanz darstellen.Der Wert liegt zwischen DateTime.MinValue.Ticks und DateTime.MaxValue.Ticks.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.TimeOfDay">
      <summary>Ruft die Uhrzeit für diese Instanz ab.</summary>
      <returns>Ein Zeitintervall, das den seit Mitternacht vergangenen Teil des Tages darstellt.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToBinary">
      <summary>Serialisiert das aktuelle <see cref="T:System.DateTime" />-Objekt in einen 64-Bit-Binärwert, der dann zum erneuten Erstellen des <see cref="T:System.DateTime" />-Objekts verwendet werden kann.</summary>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die die Eigenschaften <see cref="P:System.DateTime.Kind" /> und <see cref="P:System.DateTime.Ticks" /> codiert. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Today">
      <summary>Ruft das aktuelle Datum ab.</summary>
      <returns>Ein Objekt, das auf das heutige Datum mit einer auf 00:00:00 festgelegten Zeitkomponente festgelegt ist.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToFileTime">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.DateTime" />-Objekts in eine Windows-Dateizeit.</summary>
      <returns>Der Wert des aktuellen <see cref="T:System.DateTime" />-Objekts als Windows-Dateizeit.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die resultierende Dateizeit stellt ein Datum und eine Uhrzeit vor dem 1. Januar 1601 (unsere Zeitrechnung) 00:00 UhrUTC dar.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToFileTimeUtc">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.DateTime" />-Objekts in eine Windows-Dateizeit.</summary>
      <returns>Der Wert des aktuellen <see cref="T:System.DateTime" />-Objekts als Windows-Dateizeit.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die resultierende Dateizeit stellt ein Datum und eine Uhrzeit vor dem 1. Januar 1601 (unsere Zeitrechnung) 00:00 UhrUTC dar.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToLocalTime">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.DateTime" />-Objekts in die Ortszeit.</summary>
      <returns>Ein Objekt, dessen <see cref="P:System.DateTime.Kind" />-Eigenschaft <see cref="F:System.DateTimeKind.Local" /> ist und dessen Wert die Ortszeit ist, die dem Wert des aktuellen <see cref="T:System.DateTime" />-Objekts entspricht, oder <see cref="F:System.DateTime.MaxValue" />, wenn der konvertierte Wert zu groß ist, um von einem <see cref="T:System.DateTime" />-Objekt dargestellt zu werden, oder <see cref="F:System.DateTime.MinValue" />, wenn der konvertierte Wert zu klein ist, um als <see cref="T:System.DateTime" />-Objekt dargestellt zu werden.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.DateTime" />-Objekts in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts des aktuellen <see cref="T:System.DateTime" />-Objekts.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Datum und Uhrzeit liegen außerhalb der Bereiche, die vom Kalender der aktuellen Kultur unterstützt werden. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString(System.IFormatProvider)">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.DateTime" />-Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts des aktuellen <see cref="T:System.DateTime" />-Objekts entsprechend der Angabe in <paramref name="provider" />.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Datum und Uhrzeit liegen außerhalb des Bereichs, der von dem von <paramref name="provider" /> verwendeten Kalender unterstützt wird. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString(System.String)">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.DateTime" />-Objekts unter Verwendung des angegebenen Formats in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts des aktuellen <see cref="T:System.DateTime" />-Objekts entsprechend der Angabe in <paramref name="format" />.</returns>
      <param name="format">Eine standardmäßige Formatzeichenfolge für Datum und Uhrzeit (siehe Hinweise). </param>
      <exception cref="T:System.FormatException">Die Länge von <paramref name="format" /> ist 1, aber es ist keines der für <see cref="T:System.Globalization.DateTimeFormatInfo" /> definierten Zeichen für Formatbezeichner.- oder -  <paramref name="format" /> enthält kein gültiges benutzerdefiniertes Formatmuster. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Datum und Uhrzeit liegen außerhalb der Bereiche, die vom Kalender der aktuellen Kultur unterstützt werden.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString(System.String,System.IFormatProvider)">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.DateTime" />-Objekts unter Verwendung des angegebenen Formats sowie der kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts des aktuellen <see cref="T:System.DateTime" />-Objekts entsprechend der Angabe in <paramref name="format" /> und <paramref name="provider" />.</returns>
      <param name="format">Eine Standard- oder benutzerdefinierte Formatzeichenfolge für Datum und Uhrzeit. </param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <exception cref="T:System.FormatException">Die Länge von <paramref name="format" /> ist 1, aber es ist keines der für <see cref="T:System.Globalization.DateTimeFormatInfo" /> definierten Zeichen für Formatbezeichner.- oder -  <paramref name="format" /> enthält kein gültiges benutzerdefiniertes Formatmuster. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Datum und Uhrzeit liegen außerhalb des Bereichs, der von dem von <paramref name="provider" /> verwendeten Kalender unterstützt wird. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToUniversalTime">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.DateTime" />-Objekts in koordinierte Weltzeit (UTC).</summary>
      <returns>Ein Objekt, dessen <see cref="P:System.DateTime.Kind" />-Eigenschaft <see cref="F:System.DateTimeKind.Utc" /> ist und dessen Wert die UTC-Zeit ist, die dem Wert des aktuellen <see cref="T:System.DateTime" />-Objekts entspricht, oder <see cref="F:System.DateTime.MaxValue" />, wenn der konvertierte Wert zu groß ist, um von einem <see cref="T:System.DateTime" />-Objekt dargestellt zu werden, oder <see cref="F:System.DateTime.MinValue" />, wenn der konvertierte Wert zu klein ist, um von einem <see cref="T:System.DateTime" />-Objekt dargestellt zu werden.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParse(System.String,System.DateTime@)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Datums- und Uhrzeitangabe in deren <see cref="T:System.DateTime" />-Entsprechung und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich ausgeführt wurde.</summary>
      <returns>true, wenn der <paramref name="s" />-Parameter erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Datums- und Zeitangabe enthält. </param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den <see cref="T:System.DateTime" />-Wert zurück, der dem Datum und der Zeit in <paramref name="s" /> entspricht, oder <see cref="F:System.DateTime.MinValue" />, wenn die Konvertierung nicht durchgeführt werden konnte.Die Konvertierung schlägt fehl, wenn der <paramref name="s" />-Parameter null bzw. eine leere Zeichenfolge ("") ist oder keine gültige Zeichenfolgendarstellung eines Datums und einer Uhrzeit enthält.Dieser Parameter wird nicht initialisiert übergeben.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Datums- und Uhrzeitangabe unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen und des Formatierungsstils in die entsprechende <see cref="T:System.DateTime" /> und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich abgeschlossen wurde.</summary>
      <returns>true, wenn der <paramref name="s" />-Parameter erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Datums- und Zeitangabe enthält. </param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <param name="styles">Eine bitweise Kombination von Enumerationswerten, die festlegt, wie das analysierte Datum in Bezug auf die aktuelle Zeitzone oder das aktuelle Datum interpretiert werden soll.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den <see cref="T:System.DateTime" />-Wert zurück, der dem Datum und der Zeit in <paramref name="s" /> entspricht, oder <see cref="F:System.DateTime.MinValue" />, wenn die Konvertierung nicht durchgeführt werden konnte.Die Konvertierung schlägt fehl, wenn der <paramref name="s" />-Parameter null bzw. eine leere Zeichenfolge ("") ist oder keine gültige Zeichenfolgendarstellung eines Datums und einer Uhrzeit enthält.Dieser Parameter wird nicht initialisiert übergeben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> ist kein gültiger <see cref="T:System.Globalization.DateTimeStyles" />-Wert.- oder - <paramref name="styles" /> enthält eine ungültige Kombination von <see cref="T:System.Globalization.DateTimeStyles" />-Werten (z. B. <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> und <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="provider" /> ist eine neutrale Kultur und kann nicht in Analysevorgängen verwendet werden.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <summary>Konvertiert die angegebene Zeichenfolgenentsprechung einer Datums- und Uhrzeitangabe unter Verwendung der Angaben über Format, kulturabhängige Formatierungsinformationen und Stil in die entsprechende <see cref="T:System.DateTime" />.Das Format der Zeichenfolgendarstellung muss dem angegebenen Format genau entsprechen.Die Methode gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich abgeschlossen wurde.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Datums- und Zeitangabe enthält. </param>
      <param name="format">Das erforderliche Format von <paramref name="s" />.Weitere Informationen finden Sie im Abschnitt Hinweise.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <param name="style">Eine bitweise Kombination eines oder mehrerer Enumerationswerte, die das für <paramref name="s" /> zulässige Format angeben. </param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den <see cref="T:System.DateTime" />-Wert zurück, der dem Datum und der Zeit in <paramref name="s" /> entspricht, oder <see cref="F:System.DateTime.MinValue" />, wenn die Konvertierung nicht durchgeführt werden konnte.Die Konvertierung schlägt fehl, wenn der <paramref name="s" />-Parameter oder der <paramref name="format" />-Parameter null ist, eine leere Zeichenfolge ist oder keine Datums- und Zeitangabe in dem in <paramref name="format" /> angegebenen Format enthält.Dieser Parameter wird nicht initialisiert übergeben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> ist kein gültiger <see cref="T:System.Globalization.DateTimeStyles" />-Wert.- oder - <paramref name="styles" /> enthält eine ungültige Kombination von <see cref="T:System.Globalization.DateTimeStyles" />-Werten (z. B. <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> und <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <summary>Konvertiert die angegebene Zeichenfolgenentsprechung einer Datums- und Uhrzeitangabe unter Verwendung des angegebenen Formatarrays, der kulturspezifischen Formatierungsinformationen und des Stils in die <see cref="T:System.DateTime" />-Entsprechung.Das Format der Zeichenfolgendarstellung muss mindestens einem der angegebenen Formate genau entsprechen.Die Methode gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich abgeschlossen wurde.</summary>
      <returns>true, wenn der <paramref name="s" />-Parameter erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Datums- und Zeitangabe enthält. </param>
      <param name="formats">Ein Array mit den zulässigen Formaten von <paramref name="s" />.Weitere Informationen finden Sie im Abschnitt Hinweise.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die das zulässige Format von <paramref name="s" /> angibt.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den <see cref="T:System.DateTime" />-Wert zurück, der dem Datum und der Zeit in <paramref name="s" /> entspricht, oder <see cref="F:System.DateTime.MinValue" />, wenn die Konvertierung nicht durchgeführt werden konnte.Die Konvertierung schlägt fehl, wenn <paramref name="s" /> oder <paramref name="formats" />null ist, wenn <paramref name="s" /> oder ein Element von <paramref name="formats" /> eine leere Zeichenfolge ist, oder wenn das Format von <paramref name="s" /> nicht genau mindestens einem der Formatmuster in <paramref name="formats" /> entspricht.Dieser Parameter wird nicht initialisiert übergeben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> ist kein gültiger <see cref="T:System.Globalization.DateTimeStyles" />-Wert.- oder - <paramref name="styles" /> enthält eine ungültige Kombination von <see cref="T:System.Globalization.DateTimeStyles" />-Werten (z. B. <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> und <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.UtcNow">
      <summary>Ruft ein <see cref="T:System.DateTime" />-Objekt ab, das auf die aktuelle Datums- und Uhrzeitangabe auf diesem Rechner als koordinierte Weltzeit (UTC) festgelegt ist.</summary>
      <returns>Ein Objekt, dessen Wert die aktuelle Datums- und Uhrzeitangabe in UTC ist.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Year">
      <summary>Ruft die Komponente für das Jahr des Datums ab, das durch diese Instanz dargestellt wird.</summary>
      <returns>Das Jahr zwischen 1 und 9999.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.DateTimeKind">
      <summary>Gibt an, ob ein <see cref="T:System.DateTime" />-Objekt eine lokale Zeit, eine koordinierte Weltzeit (Coordinated Universal Time, UTC) angibt oder weder lokale Zeit noch UTC angegeben sind.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.DateTimeKind.Local">
      <summary>Die dargestellte Zeit ist die lokale Zeit.</summary>
    </member>
    <member name="F:System.DateTimeKind.Unspecified">
      <summary>Für die dargestellte Zeit wurde weder lokale Zeit noch koordinierte Weltzeit (UTC) angegeben.</summary>
    </member>
    <member name="F:System.DateTimeKind.Utc">
      <summary>Die dargestellte Zeit ist UTC.</summary>
    </member>
    <member name="T:System.DateTimeOffset">
      <summary>Stellt einen Zeitpunkt relativ zur Coordinated Universal Time (UTC) dar, der normalerweise durch Datum und Uhrzeit dargestellt wird.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.DateTime)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.DateTimeOffset" />-Struktur unter Verwendung des angegebenen <see cref="T:System.DateTime" />-Werts.</summary>
      <param name="dateTime">Ein Datum und eine Uhrzeit.   </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Das UTC (Coordinated Universal Time)-Datum und die UTC-Uhrzeit nach der Anwendung des Offsets liegen vor <see cref="F:System.DateTimeOffset.MinValue" />.- oder - Das UTC-Datum und die UTC-Uhrzeit nach der Anwendung des Offsets liegen nach <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.DateTimeOffset" />-Struktur unter Verwendung des angegebenen <see cref="T:System.DateTime" />-Werts und -Offsets.</summary>
      <param name="dateTime">Ein Datum und eine Uhrzeit.   </param>
      <param name="offset">Der UTC (Coordinated Universal Time)-Offset der Zeitangabe.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateTime.Kind" /> ist gleich <see cref="F:System.DateTimeKind.Utc" />, und <paramref name="offset" /> ist nicht gleich 0 (null).- oder - <paramref name="dateTime.Kind" /> ist gleich <see cref="F:System.DateTimeKind.Local" />, und <paramref name="offset" /> ist nicht gleich dem Offset der lokalen Zeitzone des Systems.- oder - <paramref name="offset" /> ist nicht in ganzen Minuten angegeben.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als -14 Stunden oder größer als 14 Stunden.- oder - <see cref="P:System.DateTimeOffset.UtcDateTime" /> ist kleiner als <see cref="F:System.DateTimeOffset.MinValue" /> oder größer als <see cref="F:System.DateTimeOffset.MaxValue" />. </exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.DateTimeOffset" />-Struktur mit den angegebenen Werten für Jahr, Monat, Tag, Stunde, Minute, Sekunde, Millisekunde und Offset.</summary>
      <param name="year">Das Jahr (1 bis 9999).</param>
      <param name="month">Der Monat (1 bis 12).</param>
      <param name="day">Der Tag (1 bis zur Anzahl der Tage in <paramref name="month" />).</param>
      <param name="hour">Die Stunden (0 bis 23).   </param>
      <param name="minute">Die Minuten (0 bis 59).</param>
      <param name="second">Die Sekunden (0 bis 59).</param>
      <param name="millisecond">Die Millisekunden (0 bis 999).</param>
      <param name="offset">Der UTC (Coordinated Universal Time)-Offset der Zeitangabe.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> stellt keine ganzen Minuten dar.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> ist kleiner als 1 oder größer als 9999.- oder - <paramref name="month" /> ist kleiner als 1 oder größer als 12.- oder - <paramref name="day" /> ist kleiner als 1 oder größer als die Anzahl der Tage in <paramref name="month" />.- oder - <paramref name="hour" /> ist kleiner als 0 oder größer als 23.- oder - <paramref name="minute" /> ist kleiner als 0 oder größer als 59.- oder - <paramref name="second" /> ist kleiner als 0 oder größer als 59.- oder - <paramref name="millisecond" /> ist kleiner als 0 oder größer als 999.- oder - <paramref name="offset" /> ist kleiner als -14 oder größer als 14.- oder - Die <see cref="P:System.DateTimeOffset.UtcDateTime" />-Eigenschaft liegt vor <see cref="F:System.DateTimeOffset.MinValue" /> oder nach <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.DateTimeOffset" />-Struktur mit den angegebenen Werten für Jahr, Monat, Tag, Stunde, Minute, Sekunde und Offset.</summary>
      <param name="year">Das Jahr (1 bis 9999).</param>
      <param name="month">Der Monat (1 bis 12).</param>
      <param name="day">Der Tag (1 bis zur Anzahl der Tage in <paramref name="month" />).</param>
      <param name="hour">Die Stunden (0 bis 23).   </param>
      <param name="minute">Die Minuten (0 bis 59).</param>
      <param name="second">Die Sekunden (0 bis 59).</param>
      <param name="offset">Der UTC (Coordinated Universal Time)-Offset der Zeitangabe.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> stellt keine ganzen Minuten dar.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> ist kleiner als 1 oder größer als 9999.- oder - <paramref name="month" /> ist kleiner als 1 oder größer als 12.- oder - <paramref name="day" /> ist kleiner als 1 oder größer als die Anzahl der Tage in <paramref name="month" />.- oder - <paramref name="hour" /> ist kleiner als 0 oder größer als 23.- oder - <paramref name="minute" /> ist kleiner als 0 oder größer als 59.- oder - <paramref name="second" /> ist kleiner als 0 oder größer als 59.- oder - <paramref name="offset" /> ist kleiner als -14 Stunden oder größer als 14 Stunden.- oder - Die <see cref="P:System.DateTimeOffset.UtcDateTime" />-Eigenschaft liegt vor <see cref="F:System.DateTimeOffset.MinValue" /> oder nach <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.DateTimeOffset" />-Struktur mit der angegebenen Anzahl von Ticks und dem Offset.</summary>
      <param name="ticks">Ein Datum und eine Uhrzeit, die als Anzahl der 100-Nanosekunden-Intervalle ausgedrückt werden, die seit dem 1. Januar 0001, 00:00:00 vergangen sind.</param>
      <param name="offset">Der UTC (Coordinated Universal Time)-Offset der Zeitangabe.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> ist nicht in ganzen Minuten angegeben.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die <see cref="P:System.DateTimeOffset.UtcDateTime" />-Eigenschaft liegt vor <see cref="F:System.DateTimeOffset.MinValue" /> oder nach <see cref="F:System.DateTimeOffset.MaxValue" />.- oder - <paramref name="ticks" /> ist kleiner als DateTimeOffset.MinValue.Ticks oder größer als DateTimeOffset.MaxValue.Ticks.- oder - <paramref name="Offset" /> ist kleiner als -14 Stunden oder größer als 14 Stunden.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Add(System.TimeSpan)">
      <summary>Gibt ein neues <see cref="T:System.DateTimeOffset" />-Objekt zurück, das ein angegebenes Zeitintervall zum Wert dieser Instanz addiert.</summary>
      <returns>Ein Objekt, dessen Wert die Summe aus der vom aktuellen <see cref="T:System.DateTimeOffset" /> -Objekt dargestellten Datums- und Uhrzeitangabe und dem durch <paramref name="timeSpan" /> dargestellten Zeitintervall ist.</returns>
      <param name="timeSpan">Ein <see cref="T:System.TimeSpan" />-Objekt, das ein positives oder ein negatives Zeitintervall darstellt.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist kleiner als <see cref="F:System.DateTimeOffset.MinValue" />.- oder -  Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist größer als <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddDays(System.Double)">
      <summary>Gibt ein neues <see cref="T:System.DateTimeOffset" />-Objekt zurück, das eine angegebene Anzahl von ganzen Tagen und Bruchteilen von Tagen zum Wert dieser Instanz addiert.</summary>
      <returns>Ein Objekt, dessen Wert die Summe aus der vom aktuellen <see cref="T:System.DateTimeOffset" />-Objekt dargestellten Datums- und Uhrzeitangabe und der von <paramref name="days" /> dargestellten Anzahl von Tagen ist.</returns>
      <param name="days">Eine Zahl, die aus ganzen Tagen und dem Bruchteil eines Tages besteht.Die Zahl kann negativ oder positiv sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist kleiner als <see cref="F:System.DateTimeOffset.MinValue" />.- oder -  Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist größer als <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddHours(System.Double)">
      <summary>Gibt ein neues <see cref="T:System.DateTimeOffset" />-Objekt zurück, das eine angegebene Anzahl von ganzen Stunden und Bruchteilen von Stunden zum Wert dieser Instanz addiert.</summary>
      <returns>Ein Objekt, dessen Wert die Summe aus der vom aktuellen <see cref="T:System.DateTimeOffset" />-Objekt dargestellten Datums- und Uhrzeitangabe und der von <paramref name="hours" /> dargestellten Anzahl von Stunden ist.</returns>
      <param name="hours">Eine Zahl, die aus ganzen Stunden und dem Bruchteil einer Stunde besteht.Die Zahl kann negativ oder positiv sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist kleiner als <see cref="F:System.DateTimeOffset.MinValue" />.- oder -  Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist größer als <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddMilliseconds(System.Double)">
      <summary>Gibt ein neues <see cref="T:System.DateTimeOffset" />-Objekt zurück, das eine angegebene Anzahl von Millisekunden zum Wert dieser Instanz addiert.</summary>
      <returns>Ein Objekt, dessen Wert die Summe aus der vom aktuellen <see cref="T:System.DateTimeOffset" />-Objekt dargestellten Datums- und Uhrzeitangabe und der von <paramref name="milliseconds" /> dargestellten Anzahl von ganzen Millisekunden ist.</returns>
      <param name="milliseconds">Eine Zahl, die aus ganzen Millisekunden und dem Bruchteil einer Millisekunde besteht.Die Zahl kann negativ oder positiv sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist kleiner als <see cref="F:System.DateTimeOffset.MinValue" />.- oder -  Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist größer als <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddMinutes(System.Double)">
      <summary>Gibt ein neues <see cref="T:System.DateTimeOffset" />-Objekt zurück, das eine angegebene Anzahl von ganzen Minuten und Bruchteilen von Minuten zum Wert dieser Instanz addiert.</summary>
      <returns>Ein Objekt, dessen Wert die Summe aus der vom aktuellen <see cref="T:System.DateTimeOffset" />-Objekt dargestellten Datums- und Uhrzeitangabe und der von <paramref name="minutes" /> dargestellten Anzahl von Minuten ist.</returns>
      <param name="minutes">Eine Zahl, die aus ganzen Minuten und dem Bruchteil einer Minute besteht.Die Zahl kann negativ oder positiv sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist kleiner als <see cref="F:System.DateTimeOffset.MinValue" />.- oder -  Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist größer als <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddMonths(System.Int32)">
      <summary>Gibt ein neues <see cref="T:System.DateTimeOffset" />-Objekt zurück, das eine angegebene Anzahl von Monaten zum Wert dieser Instanz addiert.</summary>
      <returns>Ein Objekt, dessen Wert die Summe aus der vom aktuellen <see cref="T:System.DateTimeOffset" />-Objekt dargestellten Datums- und Uhrzeitangabe und der von <paramref name="months" /> dargestellten Anzahl von Monaten ist.</returns>
      <param name="months">Eine Anzahl von ganzen Monaten.Die Zahl kann negativ oder positiv sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist kleiner als <see cref="F:System.DateTimeOffset.MinValue" />.- oder -  Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist größer als <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddSeconds(System.Double)">
      <summary>Gibt ein neues <see cref="T:System.DateTimeOffset" />-Objekt zurück, das eine angegebene Anzahl von ganzen Sekunden und Bruchteilen von Sekunden zum Wert dieser Instanz addiert.</summary>
      <returns>Ein Objekt, dessen Wert die Summe aus der vom aktuellen <see cref="T:System.DateTimeOffset" />-Objekt dargestellten Datums- und Uhrzeitangabe und der von <paramref name="seconds" /> dargestellten Anzahl von Sekunden ist.</returns>
      <param name="seconds">Eine Zahl, die aus ganzen Sekunden und dem Bruchteil einer Sekunde besteht.Die Zahl kann negativ oder positiv sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist kleiner als <see cref="F:System.DateTimeOffset.MinValue" />.- oder -  Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist größer als <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddTicks(System.Int64)">
      <summary>Gibt ein neues <see cref="T:System.DateTimeOffset" />-Objekt zurück, das eine angegebene Anzahl von Ticks zum Wert dieser Instanz addiert.</summary>
      <returns>Ein Objekt, dessen Wert die Summe aus der vom aktuellen <see cref="T:System.DateTimeOffset" />-Objekt dargestellten Datums- und Uhrzeitangabe und der von <paramref name="ticks" /> dargestellten Anzahl von Ticks ist.</returns>
      <param name="ticks">Eine Anzahl von 100-Nanosekunden-Ticks.Die Zahl kann negativ oder positiv sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist kleiner als <see cref="F:System.DateTimeOffset.MinValue" />.- oder -  Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist größer als <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddYears(System.Int32)">
      <summary>Gibt ein neues <see cref="T:System.DateTimeOffset" />-Objekt zurück, das eine angegebene Anzahl von Jahren zum Wert dieser Instanz addiert.</summary>
      <returns>Ein Objekt, dessen Wert die Summe aus der vom aktuellen <see cref="T:System.DateTimeOffset" />-Objekt dargestellten Datums- und Uhrzeitangabe und der von <paramref name="years" /> dargestellten Anzahl von Jahren ist.</returns>
      <param name="years">Eine Anzahl von Jahren.Die Zahl kann negativ oder positiv sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist kleiner als <see cref="F:System.DateTimeOffset.MinValue" />.- oder -  Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist größer als <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Vergleicht zwei <see cref="T:System.DateTimeOffset" />-Objekte und gibt an, ob das erste Objekt vor oder nach dem zweiten liegt oder mit diesem identisch ist.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die angibt, ob der Wert des <paramref name="first" />-Parameters vor oder nach dem Wert des <paramref name="second" />-Parameters oder zur selben Zeit liegt, wie in der folgenden Tabelle gezeigt.RückgabewertBedeutungKleiner als 0 (null)<paramref name="first" /> liegt vor <paramref name="second" />.Zero<paramref name="first" /> ist gleich <paramref name="second" />.Größer als 0 (null)<paramref name="first" /> ist später als <paramref name="second" />.</returns>
      <param name="first">Das erste zu vergleichende Objekt.</param>
      <param name="second">Das zweite zu vergleichende Objekt.</param>
    </member>
    <member name="M:System.DateTimeOffset.CompareTo(System.DateTimeOffset)">
      <summary>Vergleicht das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt mit einem angegebenen <see cref="T:System.DateTimeOffset" />-Objekt und gibt an, ob das aktuelle Objekt vor oder nach dem zweiten <see cref="T:System.DateTimeOffset" />-Objekt liegt oder mit diesem identisch ist.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die Beziehung zwischen dem aktuellen <see cref="T:System.DateTimeOffset" />-Objekt und <paramref name="other" /> angibt, wie in der folgenden Tabelle gezeigt.RückgabewertBeschreibungKleiner als 0 (null)Das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt liegt vor <paramref name="other" />.ZeroDas aktuelle <see cref="T:System.DateTimeOffset" />-Objekt ist mit <paramref name="other" /> identisch.Größer als 0 (null)Das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt liegt nach <paramref name="other" />.</returns>
      <param name="other">Ein Objekt, das mit dem aktuellen <see cref="T:System.DateTimeOffset" />-Objekt verglichen werden soll.</param>
    </member>
    <member name="P:System.DateTimeOffset.Date">
      <summary>Ruft einen <see cref="T:System.DateTime" />-Wert ab, der die Datumskomponente des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts darstellt.</summary>
      <returns>Ein <see cref="T:System.DateTime" />-Wert, der die Datumskomponente des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts darstellt.</returns>
    </member>
    <member name="P:System.DateTimeOffset.DateTime">
      <summary>Ruft einen <see cref="T:System.DateTime" />-Wert ab, der die Datums- und Uhrzeitkomponente des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts darstellt.</summary>
      <returns>Das Datum und die Uhrzeit des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Day">
      <summary>Ruft den Tag des Monats ab, der durch das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt dargestellt wird.</summary>
      <returns>Die Tagkomponente des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts als Wert zwischen 1 und 31.</returns>
    </member>
    <member name="P:System.DateTimeOffset.DayOfWeek">
      <summary>Ruft den Tag der Woche ab, der durch das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt dargestellt wird.</summary>
      <returns>Einer der Enumerationswerte, der den Wochentag des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts angibt.</returns>
    </member>
    <member name="P:System.DateTimeOffset.DayOfYear">
      <summary>Ruft den Tag des Jahres ab, der durch das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt dargestellt wird.</summary>
      <returns>Der Tag des Jahres des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts als Wert zwischen 1 und 366.</returns>
    </member>
    <member name="M:System.DateTimeOffset.Equals(System.DateTimeOffset)">
      <summary>Bestimmt, ob das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt denselben Zeitpunkt wie ein angegebenes <see cref="T:System.DateTimeOffset" />-Objekt darstellt.</summary>
      <returns>true, wenn beide <see cref="T:System.DateTimeOffset" />-Objekte denselben <see cref="P:System.DateTimeOffset.UtcDateTime" />-Wert aufweisen, andernfalls false.</returns>
      <param name="other">Ein <see cref="T:System.DateTimeOffset" />-Objekt, das mit dem aktuellen Objekt verglichen werden soll.   </param>
    </member>
    <member name="M:System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Bestimmt, ob zwei angegebene <see cref="T:System.DateTimeOffset" />-Objekte denselben Zeitpunkt darstellen.</summary>
      <returns>true, wenn die beiden <see cref="T:System.DateTimeOffset" />-Objekte denselben <see cref="P:System.DateTimeOffset.UtcDateTime" />-Wert aufweisen, andernfalls false.</returns>
      <param name="first">Das erste zu vergleichende Objekt.</param>
      <param name="second">Das zweite zu vergleichende Objekt.</param>
    </member>
    <member name="M:System.DateTimeOffset.Equals(System.Object)">
      <summary>Bestimmt, ob ein <see cref="T:System.DateTimeOffset" />-Objekt denselben Zeitpunkt wie ein angegebenes Objekt darstellt.</summary>
      <returns>true, wenn der <paramref name="obj" />-Parameter ein <see cref="T:System.DateTimeOffset" />-Objekt ist und denselben Zeitpunkt wie das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt darstellt, andernfalls false.</returns>
      <param name="obj">Das Objekt, das mit dem aktuellen <see cref="T:System.DateTimeOffset" />-Objekt verglichen werden soll.</param>
    </member>
    <member name="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)">
      <summary>Bestimmt, ob das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt denselben Zeitpunkt wie ein angegebenes <see cref="T:System.DateTimeOffset" />-Objekt darstellt und denselben Offset aufweist.</summary>
      <returns>true, wenn das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt und <paramref name="other" /> denselben Datums- und Uhrzeitwert sowie denselben <see cref="P:System.DateTimeOffset.Offset" />-Wert aufweisen, andernfalls false.</returns>
      <param name="other">Das Objekt, das mit dem aktuellen <see cref="T:System.DateTimeOffset" />-Objekt verglichen werden soll. </param>
    </member>
    <member name="M:System.DateTimeOffset.FromFileTime(System.Int64)">
      <summary>Konvertiert die angegebene Windows-Dateizeit in eine entsprechende Ortszeit.</summary>
      <returns>Ein Objekt, das das Datum und die Uhrzeit von <paramref name="fileTime" /> darstellt, wobei der Offset auf den Ortszeitoffset festgelegt ist.</returns>
      <param name="fileTime">Eine Windows-Dateizeit in Ticks.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="filetime" /> ist kleiner als 0.- oder - <paramref name="filetime" /> ist größer als DateTimeOffset.MaxValue.Ticks.</exception>
    </member>
    <member name="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)">
      <summary>Konvertiert eine Unix-Zeit in Form der seit dem 1. Januar 1970 um 00:00:00Z verstrichenen Millisekunden in einen <see cref="T:System.DateTimeOffset" />-Wert.</summary>
      <returns>Ein Datum und eine Uhrzeit, die denselben Zeitpunkt wie die Unix-Zeit darstellen. </returns>
      <param name="milliseconds">Eine Unix-Zeit in Form der seit 1.1.1970T00:00:00Z (1. Januar 1970 um Mitternacht UTC) verstrichenen Millisekunden.Für Unix-Zeiten vor diesem Datum ist der Wert negativ.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="milliseconds" /> ist kleiner als -62.135.596.800.000. - oder - <paramref name="milliseconds" /> ist größer als 253.402.300.799.999.  </exception>
    </member>
    <member name="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)">
      <summary>Konvertiert eine Unix-Zeit in Form der seit dem 1. Januar 1970 um 00:00:00Z verstrichenen Sekunden in einen <see cref="T:System.DateTimeOffset" />-Wert. </summary>
      <returns>Ein Datum und eine Uhrzeit, die denselben Zeitpunkt wie die Unix-Zeit darstellen. </returns>
      <param name="seconds">Eine Unix-Zeit in Form der seit 1.1.1970T00:00:00Z (1. Januar 1970 um Mitternacht UTC) verstrichenen Sekunden.Für Unix-Zeiten vor diesem Datum ist der Wert negativ.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="seconds" /> ist kleiner als -62.135.596.800. - oder - <paramref name="seconds" /> ist größer als 253.402.300.799.  </exception>
    </member>
    <member name="M:System.DateTimeOffset.GetHashCode">
      <summary>Gibt den Hashcode für das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Hour">
      <summary>Ruft die Stundenkomponente der Zeit ab, die durch das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt dargestellt wird.</summary>
      <returns>Die Stundenkomponente des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts.Diese Eigenschaft verwendet ein 24-Stunden-Format. Der Wert liegt zwischen 0 und 23.</returns>
    </member>
    <member name="P:System.DateTimeOffset.LocalDateTime">
      <summary>Ruft einen <see cref="T:System.DateTime" />-Wert ab, der die Datums- und Uhrzeitkomponente des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts darstellt.</summary>
      <returns>Die lokale Datums- und Uhrzeitangabe des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts.</returns>
    </member>
    <member name="F:System.DateTimeOffset.MaxValue">
      <summary>Stellt den größtmöglichen Wert von <see cref="T:System.DateTimeOffset" /> dar.Dieses Feld ist schreibgeschützt.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="F:System.DateTime.MaxValue" /> liegt außerhalb des Bereichs des Standardkalenders der aktuellen oder einer angegebenen Kultur.</exception>
    </member>
    <member name="P:System.DateTimeOffset.Millisecond">
      <summary>Ruft die Millisekundenkomponente der Zeit ab, die durch das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt dargestellt wird.</summary>
      <returns>Die Millisekundenkomponente des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts als eine Ganzzahl zwischen 0 und 999.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Minute">
      <summary>Ruft die Minutenkomponente der Zeit ab, die durch das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt dargestellt wird.</summary>
      <returns>Die Minutenkomponente des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts als eine Ganzzahl zwischen 0 und 59.</returns>
    </member>
    <member name="F:System.DateTimeOffset.MinValue">
      <summary>Stellt den frühesten <see cref="T:System.DateTimeOffset" />-Wert dar.Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="P:System.DateTimeOffset.Month">
      <summary>Ruft die Monatskomponente des Datums ab, das durch das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt dargestellt wird.</summary>
      <returns>Die Monatskomponente des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts als eine Ganzzahl zwischen 1 und 12.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Now">
      <summary>Ruft ein <see cref="T:System.DateTimeOffset" />-Objekt ab, das auf die aktuelle Datums- und Uhrzeitangabe des aktuellen Computers festgelegt ist, wobei der Offset auf den UTC (Coordinated Universal Time)-Offset der Ortszeit festgelegt ist.</summary>
      <returns>Ein <see cref="T:System.DateTimeOffset" />-Objekt, dessen Datum und Uhrzeit die aktuelle Ortszeit ist und dessen Offset der UTC (Coordinated Universal Time)-Offset der lokalen Zeitzone ist.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Offset">
      <summary>Ruft den UTC (Coordinated Universal Time)-Offset der Zeit ab. </summary>
      <returns>Die Differenz zwischen dem Zeitwert des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts und der Coordinated Universal Time (UTC).</returns>
    </member>
    <member name="M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)">
      <summary>Fügt einem <see cref="T:System.DateTimeOffset" />-Objekt mit einer Datums- und Uhrzeitangabe ein angegebenes Zeitintervall hinzu und liefert ein <see cref="T:System.DateTimeOffset" />-Objekt mit einer neuen Datums- und Uhrzeitangabe.</summary>
      <returns>Ein Objekt, dessen Wert die Summe der Werte von <paramref name="dateTimeTz" /> und <paramref name="timeSpan" /> ist.</returns>
      <param name="dateTimeOffset">Das Objekt, dem das Zeitintervall hinzugefügt werden soll.</param>
      <param name="timeSpan">Das hinzuzufügende Zeitintervall.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist kleiner als <see cref="F:System.DateTimeOffset.MinValue" />.- oder -  Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist größer als <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Bestimmt, ob zwei angegebene <see cref="T:System.DateTimeOffset" />-Objekte denselben Zeitpunkt darstellen.</summary>
      <returns>true, wenn beide <see cref="T:System.DateTimeOffset" />-Objekte denselben <see cref="P:System.DateTimeOffset.UtcDateTime" />-Wert aufweisen, andernfalls false.</returns>
      <param name="left">Das erste zu vergleichende Objekt.</param>
      <param name="right">Das zweite zu vergleichende Objekt.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Bestimmt, ob ein angegebenes <see cref="T:System.DateTimeOffset" />-Objekt größer als (oder später als) ein zweites angegebenes <see cref="T:System.DateTimeOffset" />-Objekt ist.</summary>
      <returns>true, wenn der <see cref="P:System.DateTimeOffset.UtcDateTime" />-Wert von <paramref name="left" /> nach dem <see cref="P:System.DateTimeOffset.UtcDateTime" />-Wert von <paramref name="right" /> liegt, andernfalls false.</returns>
      <param name="left">Das erste zu vergleichende Objekt.</param>
      <param name="right">Das zweite zu vergleichende Objekt.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Bestimmt, ob ein angegebenes <see cref="T:System.DateTimeOffset" />-Objekt größer oder gleich einem zweiten angegebenen <see cref="T:System.DateTimeOffset" />-Objekt ist.</summary>
      <returns>true, wenn der <see cref="P:System.DateTimeOffset.UtcDateTime" />-Wert von <paramref name="left" /> nach dem <see cref="P:System.DateTimeOffset.UtcDateTime" />-Wert von <paramref name="right" /> liegt oder mit diesem identisch ist, andernfalls false.</returns>
      <param name="left">Das erste zu vergleichende Objekt.</param>
      <param name="right">Das zweite zu vergleichende Objekt.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset">
      <summary>Definiert eine implizite Konvertierung eines <see cref="T:System.DateTime" />-Objekts in ein <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Das konvertierte Objekt.</returns>
      <param name="dateTime">Das zu konvertierende Objekt. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Das UTC (Coordinated Universal Time)-Datum und die UTC-Uhrzeit nach der Anwendung des Offsets liegen vor <see cref="F:System.DateTimeOffset.MinValue" />.- oder - Das UTC-Datum und die UTC-Uhrzeit nach der Anwendung des Offsets liegen nach <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Bestimmt, ob zwei angegebene <see cref="T:System.DateTimeOffset" />-Objekte auf unterschiedliche Zeitpunkte verweisen.</summary>
      <returns>true, wenn <paramref name="left" /> und <paramref name="right" /> nicht denselben <see cref="P:System.DateTimeOffset.UtcDateTime" />-Wert aufweisen, andernfalls false.</returns>
      <param name="left">Das erste zu vergleichende Objekt.</param>
      <param name="right">Das zweite zu vergleichende Objekt.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Bestimmt, ob ein angegebenes <see cref="T:System.DateTimeOffset" />-Objekt kleiner als ein zweites angegebenes <see cref="T:System.DateTimeOffset" />-Objekt ist.</summary>
      <returns>true, wenn der <see cref="P:System.DateTimeOffset.UtcDateTime" />-Wert von <paramref name="left" /> vor dem <see cref="P:System.DateTimeOffset.UtcDateTime" />-Wert von <paramref name="right" /> liegt, andernfalls false.</returns>
      <param name="left">Das erste zu vergleichende Objekt.</param>
      <param name="right">Das zweite zu vergleichende Objekt.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Bestimmt, ob ein angegebenes <see cref="T:System.DateTimeOffset" />-Objekt kleiner als ein zweites angegebenes <see cref="T:System.DateTimeOffset" />-Objekt ist.</summary>
      <returns>true, wenn der <see cref="P:System.DateTimeOffset.UtcDateTime" />-Wert von <paramref name="left" /> vor dem <see cref="P:System.DateTimeOffset.UtcDateTime" />-Wert von <paramref name="right" /> liegt, andernfalls false.</returns>
      <param name="left">Das erste zu vergleichende Objekt.</param>
      <param name="right">Das zweite zu vergleichende Objekt.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Subtrahiert ein <see cref="T:System.DateTimeOffset" />-Objekt von einem anderen und ergibt ein Zeitintervall.</summary>
      <returns>Ein Objekt, das die Differenz zwischen <paramref name="left" /> und <paramref name="right" /> darstellt.</returns>
      <param name="left">Der Minuend.   </param>
      <param name="right">Der Subtrahend.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)">
      <summary>Subtrahiert ein angegebenes Zeitintervall von einer Datums- und Uhrzeitangabe und gibt eine neue Datums- und Uhrzeitangabe zurück.</summary>
      <returns>Ein Objekt, das dem Wert von <paramref name="dateTimeOffset" /> minus <paramref name="timeSpan" /> entspricht.</returns>
      <param name="dateTimeOffset">Das Datums- und Uhrzeitobjekt, von dem subtrahiert werden soll.</param>
      <param name="timeSpan">Das Zeitintervall, das subtrahiert werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der resultierende <see cref="T:System.DateTimeOffset" />-Wert ist kleiner als <see cref="F:System.DateTimeOffset.MinValue" /> oder größer als <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Parse(System.String)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Datums-, Uhrzeit- und Offsetangabe in die <see cref="T:System.DateTimeOffset" />-Entsprechung.</summary>
      <returns>Ein Objekt, das mit der in <paramref name="input" /> enthaltenen Datums- und Uhrzeitangabe identisch ist.</returns>
      <param name="input">Eine Zeichenfolge, die die zu konvertierende Datums- und Zeitangabe enthält.</param>
      <exception cref="T:System.ArgumentException">Der Offset ist größer als 14 Stunden oder kleiner als -14 Stunden.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> enthält keine gültige Zeichenfolgendarstellung eines Datums und einer Uhrzeit.- oder - <paramref name="input" /> enthält die Zeichenfolgendarstellung eines Offsetwerts ohne Datum oder Uhrzeit.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider)">
      <summary>Konvertiert die angegebene Zeichenfolgenentsprechung einer Datums- und Uhrzeitangabe unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in den entsprechenden <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Ein Objekt, das der in <paramref name="input" /> enthaltenen Datums- und Uhrzeitangabe nach den Angaben von <paramref name="formatProvider" /> entspricht.</returns>
      <param name="input">Eine Zeichenfolge, die die zu konvertierende Datums- und Zeitangabe enthält.   </param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatinformationen zu <paramref name="input" /> bereitstellt.</param>
      <exception cref="T:System.ArgumentException">Der Offset ist größer als 14 Stunden oder kleiner als -14 Stunden.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> enthält keine gültige Zeichenfolgendarstellung eines Datums und einer Uhrzeit.- oder - <paramref name="input" /> enthält die Zeichenfolgendarstellung eines Offsetwerts ohne Datum oder Uhrzeit.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Datums- und Uhrzeitangabe unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen und des Formatierungsstils in den entsprechenden <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Ein Objekt, das der in <paramref name="input" /> enthaltenen Datums- und Uhrzeitangabe nach den Angaben von <paramref name="formatProvider" /> und <paramref name="styles" /> entspricht.</returns>
      <param name="input">Eine Zeichenfolge, die die zu konvertierende Datums- und Zeitangabe enthält.   </param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatinformationen zu <paramref name="input" /> bereitstellt.</param>
      <param name="styles">Eine bitweise Kombination von Enumerationswerten, die das zulässige Format von <paramref name="input" /> angibt.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentException">Der Offset ist größer als 14 Stunden oder kleiner als -14 Stunden.- oder - <paramref name="styles" /> ist kein gültiger <see cref="T:System.Globalization.DateTimeStyles" />-Wert.- oder - <paramref name="styles" /> schließt einen nicht unterstützten <see cref="T:System.Globalization.DateTimeStyles" />-Wert ein.- oder - <paramref name="styles" /> enthält <see cref="T:System.Globalization.DateTimeStyles" />-Werte, die nicht zusammen verwendet werden können.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> enthält keine gültige Zeichenfolgendarstellung eines Datums und einer Uhrzeit.- oder - <paramref name="input" /> enthält die Zeichenfolgendarstellung eines Offsetwerts ohne Datum oder Uhrzeit.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)">
      <summary>Konvertiert die angegebene Zeichenfolgenentsprechung einer Datums- und Uhrzeitangabe unter Verwendung des angegebenen Formats und der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende <see cref="T:System.DateTimeOffset" />.Das Format der Zeichenfolgendarstellung muss dem angegebenen Format genau entsprechen.</summary>
      <returns>Ein Objekt, das der in <paramref name="input" /> enthaltenen Datums- und Uhrzeitangabe nach den Angaben von <paramref name="format" /> und <paramref name="formatProvider" /> entspricht.</returns>
      <param name="input">Eine Zeichenfolge, die die zu konvertierende Datums- und Zeitangabe enthält.</param>
      <param name="format">Ein Formatbezeichner, der das erwartete Format von <paramref name="input" /> definiert.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="input" /> bereitstellt.</param>
      <exception cref="T:System.ArgumentException">Der Offset ist größer als 14 Stunden oder kleiner als -14 Stunden.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist null.- oder - <paramref name="format" /> ist null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist eine leere Zeichenfolge ("").- oder - <paramref name="input" /> enthält keine gültige Zeichenfolgendarstellung eines Datums und einer Uhrzeit.- oder - <paramref name="format" /> ist eine leere Zeichenfolge.- oder - Die Stundenkomponente und der AM/PM-Kennzeichner in <paramref name="input" /> stimmen nicht überein.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Konvertiert die angegebene Zeichenfolgenentsprechung einer Datums- und Uhrzeitangabe unter Verwendung der Angaben über Format, kulturabhängige Formatierungsinformationen und Stil in die entsprechende <see cref="T:System.DateTimeOffset" />.Das Format der Zeichenfolgendarstellung muss dem angegebenen Format genau entsprechen.</summary>
      <returns>Ein Objekt, das der im <paramref name="input" />-Parameter enthaltenen Datums- und Uhrzeitangabe nach den Angaben der Parameter <paramref name="format" />, <paramref name="formatProvider" /> und <paramref name="styles" /> entspricht.</returns>
      <param name="input">Eine Zeichenfolge, die die zu konvertierende Datums- und Zeitangabe enthält.</param>
      <param name="format">Ein Formatbezeichner, der das erwartete Format von <paramref name="input" /> definiert.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="input" /> bereitstellt.</param>
      <param name="styles">Eine bitweise Kombination von Enumerationswerten, die das zulässige Format von <paramref name="input" /> angibt.</param>
      <exception cref="T:System.ArgumentException">Der Offset ist größer als 14 Stunden oder kleiner als -14 Stunden.- oder - Der <paramref name="styles" />-Parameter schließt einen nicht unterstützten Wert ein.- oder - Der <paramref name="styles" />-Parameter enthält <see cref="T:System.Globalization.DateTimeStyles" />-Werte, die nicht zusammen verwendet werden können.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist null.- oder - <paramref name="format" /> ist null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist eine leere Zeichenfolge ("").- oder - <paramref name="input" /> enthält keine gültige Zeichenfolgendarstellung eines Datums und einer Uhrzeit.- oder - <paramref name="format" /> ist eine leere Zeichenfolge.- oder - Die Stundenkomponente und der AM/PM-Kennzeichner in <paramref name="input" /> stimmen nicht überein. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Datums- und Uhrzeitangabe unter Verwendung der angegebenen Formate, kulturspezifischen Formatierungsinformationen und des Stils in den entsprechenden <see cref="T:System.DateTimeOffset" />.Das Format der Zeichenfolgendarstellung muss einem der angegebenen Formate genau entsprechen.</summary>
      <returns>Ein Objekt, das der im <paramref name="input" />-Parameter enthaltenen Datums- und Uhrzeitangabe nach den Angaben der Parameter <paramref name="formats" />, <paramref name="formatProvider" /> und <paramref name="styles" /> entspricht.</returns>
      <param name="input">Eine Zeichenfolge, die die zu konvertierende Datums- und Zeitangabe enthält.</param>
      <param name="formats">Ein Array von Formatbezeichnern, die die erwarteten Formate von <paramref name="input" /> definieren.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="input" /> bereitstellt.</param>
      <param name="styles">Eine bitweise Kombination von Enumerationswerten, die das zulässige Format von <paramref name="input" /> angibt.</param>
      <exception cref="T:System.ArgumentException">Der Offset ist größer als 14 Stunden oder kleiner als -14 Stunden.- oder - <paramref name="styles" /> schließt einen nicht unterstützten Wert ein.- oder - Der <paramref name="styles" />-Parameter enthält <see cref="T:System.Globalization.DateTimeStyles" />-Werte, die nicht zusammen verwendet werden können.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist eine leere Zeichenfolge ("").- oder - <paramref name="input" /> enthält keine gültige Zeichenfolgendarstellung eines Datums und einer Uhrzeit.- oder - Kein Element von <paramref name="formats" /> enthält einen gültigen Formatbezeichner.- oder - Die Stundenkomponente und der AM/PM-Kennzeichner in <paramref name="input" /> stimmen nicht überein. </exception>
    </member>
    <member name="P:System.DateTimeOffset.Second">
      <summary>Ruft die Sekundenkomponente der Systemzeit ab, die durch das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt dargestellt wird.</summary>
      <returns>Die Sekundenkomponente des <see cref="T:System.DateTimeOffset" />-Objekts als Ganzzahlwert zwischen 0 und 59.</returns>
    </member>
    <member name="M:System.DateTimeOffset.Subtract(System.DateTimeOffset)">
      <summary>Subtrahiert einen <see cref="T:System.DateTimeOffset" />-Wert, der eine bestimmte Datums- und Uhrzeitangabe darstellt, vom aktuellen <see cref="T:System.DateTimeOffset" />-Objekt.</summary>
      <returns>Ein Objekt, das das Intervall zwischen den zwei <see cref="T:System.DateTimeOffset" />-Objekten angibt.</returns>
      <param name="value">Ein Objekt, das den zu subtrahierenden Wert darstellt. </param>
    </member>
    <member name="M:System.DateTimeOffset.Subtract(System.TimeSpan)">
      <summary>Subtrahiert ein angegebenes Zeitintervall vom aktuellen <see cref="T:System.DateTimeOffset" />-Objekt.</summary>
      <returns>Ein Objekt, das gleich der vom aktuellen <see cref="T:System.DateTimeOffset" />-Objekt dargestellten Datums- und Uhrzeitangabe minus dem durch <paramref name="value" /> dargestellten Zeitintervall ist.</returns>
      <param name="value">Das Zeitintervall, das subtrahiert werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist kleiner als <see cref="F:System.DateTimeOffset.MinValue" />.- oder -  Der sich ergebende <see cref="T:System.DateTimeOffset" />-Wert ist größer als <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht den Wert des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts mit einem anderen Objekt desselben Typs.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die angibt, ob das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt kleiner, gleich oder größer als <paramref name="obj" /> ist.Die Rückgabewerte der Methode werden wie folgt interpretiert:RückgabewertBeschreibungKleiner als 0 (null)Das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt ist kleiner als (liegt vor) <paramref name="obj" />.ZeroDas aktuelle <see cref="T:System.DateTimeOffset" />-Objekt ist gleich (liegt auf demselben Zeitpunkt wie) <paramref name="obj" />.Größer als 0 (null)Das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt ist größer als (später als) <paramref name="obj" />.</returns>
      <param name="obj">Das Objekt, das mit dem aktuellen <see cref="T:System.DateTimeOffset" />-Objekt verglichen werden soll.</param>
    </member>
    <member name="P:System.DateTimeOffset.Ticks">
      <summary>Ruft die Anzahl der Ticks ab, die das Datum und die Uhrzeit des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts in Systemzeit darstellt.</summary>
      <returns>Die Anzahl der Ticks in der Uhrzeit des <see cref="T:System.DateTimeOffset" />-Objekts.</returns>
    </member>
    <member name="P:System.DateTimeOffset.TimeOfDay">
      <summary>Ruft die Uhrzeit für das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt ab.</summary>
      <returns>Das Zeitintervall des aktuellen Datums, das seit Mitternacht verstrichen ist.</returns>
    </member>
    <member name="M:System.DateTimeOffset.ToFileTime">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts in eine Windows-Dateizeit.</summary>
      <returns>Der Wert des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts als Windows-Dateizeit.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die resultierende Dateizeit stellt ein Datum und eine Uhrzeit vor dem 1. Januar 1601 u. Z. 00:00 Uhr dar.Coordinated Universal Time (UTC).</exception>
    </member>
    <member name="M:System.DateTimeOffset.ToLocalTime">
      <summary>Konvertiert das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt in ein <see cref="T:System.DateTimeOffset" />-Objekt, das die Ortszeit darstellt.</summary>
      <returns>Ein Objekt, das die in Ortszeit konvertierte Datums- und Uhrzeitangabe des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts darstellt.</returns>
    </member>
    <member name="M:System.DateTimeOffset.ToOffset(System.TimeSpan)">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts in die durch einen Offsetwert angegebene Datums- und Uhrzeitangabe.</summary>
      <returns>Ein Objekt, das gleich dem ursprünglichen <see cref="T:System.DateTimeOffset" />-Objekt ist (d. h. die zugehörigen <see cref="M:System.DateTimeOffset.ToUniversalTime" />-Methoden geben identische Zeitpunkte zurück), dessen <see cref="P:System.DateTimeOffset.Offset" />-Eigenschaft jedoch auf <paramref name="offset" /> festgelegt ist.</returns>
      <param name="offset">Der Offset, in den der <see cref="T:System.DateTimeOffset" />-Wert konvertiert werden soll.   </param>
      <exception cref="T:System.ArgumentException">Der <see cref="P:System.DateTimeOffset.DateTime" />-Wert des sich ergebenden <see cref="T:System.DateTimeOffset" />-Objekts liegt vor <see cref="F:System.DateTimeOffset.MinValue" />.- oder - Der <see cref="P:System.DateTimeOffset.DateTime" />-Wert des sich ergebenden <see cref="T:System.DateTimeOffset" />-Objekts liegt nach <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als -14 Stunden.- oder - <paramref name="offset" /> ist größer als 14 Stunden.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Eine Zeichenfolgendarstellung eines <see cref="T:System.DateTimeOffset" />-Objekts, die den am Ende der Zeichenfolge angefügten Offset einschließt.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Datum und Uhrzeit liegen außerhalb der Bereiche, die vom Kalender der aktuellen Kultur unterstützt werden. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString(System.IFormatProvider)">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts entsprechend den Angaben in <paramref name="formatProvider" />.</returns>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Datum und Uhrzeit liegen außerhalb des Bereichs, der von dem von <paramref name="formatProvider" /> verwendeten Kalender unterstützt wird. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString(System.String)">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts unter Verwendung des angegebenen Formats in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts entsprechend den Angaben in <paramref name="format" />.</returns>
      <param name="format">Eine Formatzeichenfolge.</param>
      <exception cref="T:System.FormatException">Die Länge von <paramref name="format" /> ist 1, aber es ist keines der für <see cref="T:System.Globalization.DateTimeFormatInfo" /> definierten Zeichen für Standardformatbezeichner. - oder - <paramref name="format" /> enthält kein gültiges benutzerdefiniertes Formatmuster.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Datum und Uhrzeit liegen außerhalb der Bereiche, die vom Kalender der aktuellen Kultur unterstützt werden. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts unter Verwendung des angegebenen Formats sowie der kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts wie von <paramref name="format" /> und <paramref name="provider" /> angegeben.</returns>
      <param name="format">Eine Formatzeichenfolge.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <exception cref="T:System.FormatException">Die Länge von <paramref name="format" /> ist 1, aber es ist keines der für <see cref="T:System.Globalization.DateTimeFormatInfo" /> definierten Zeichen für Standardformatbezeichner.- oder - <paramref name="format" /> enthält kein gültiges benutzerdefiniertes Formatmuster. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Datum und Uhrzeit liegen außerhalb des Bereichs, der von dem von <paramref name="formatProvider" /> verwendeten Kalender unterstützt wird. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ToUniversalTime">
      <summary>Konvertiert das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt in einen <see cref="T:System.DateTimeOffset" />-Wert, der die Coordinated Universal Time (UTC) darstellt.</summary>
      <returns>Ein Objekt, das die in Coordinated Universal Time (UTC) konvertierte Datums- und Uhrzeitangabe des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts darstellt.</returns>
    </member>
    <member name="M:System.DateTimeOffset.ToUnixTimeMilliseconds">
      <summary>Gibt die Anzahl der Millisekunden zurück, die seit dem 1. Januar 1970 um 00:00:00.000Z verstrichen sind. </summary>
      <returns>Die Anzahl der Millisekunden, die seit dem 1. Januar 1970 um 00:00:00.000Z verstrichen sind. </returns>
    </member>
    <member name="M:System.DateTimeOffset.ToUnixTimeSeconds">
      <summary>Gibt die Anzahl der Sekunden zurück, die seit dem 1. Januar 1970 um 00:00:00Z verstrichen sind. </summary>
      <returns>Die Anzahl der Sekunden, die seit dem 1. Januar 1970 um 00:00:00Z verstrichen sind. </returns>
    </member>
    <member name="M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)">
      <summary>Versucht, eine angegebene Zeichenfolgendarstellung einer Datums- und Uhrzeitangabe in deren <see cref="T:System.DateTimeOffset" />-Entsprechung zu konvertieren, und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich durchgeführt wurde.</summary>
      <returns>true, wenn der <paramref name="input" />-Parameter erfolgreich konvertiert wird, andernfalls false.</returns>
      <param name="input">Eine Zeichenfolge, die die zu konvertierende Datums- und Zeitangabe enthält.</param>
      <param name="result">Die Methode gibt bei erfolgreicher Konvertierung den <see cref="T:System.DateTimeOffset" /> zurück, der dem Datum und der Uhrzeit von <paramref name="input" /> entspricht, oder <see cref="F:System.DateTimeOffset.MinValue" />, wenn die Konvertierung nicht durchgeführt werden konnte.Die Konvertierung schlägt fehl, wenn der <paramref name="input" />-Parameter null ist oder keine gültige Zeichenfolgendarstellung eines Datums und einer Uhrzeit enthält.Dieser Parameter wird nicht initialisiert übergeben.</param>
    </member>
    <member name="M:System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
      <summary>Versucht, eine angegebene Zeichenfolgendarstellung einer Datums- und Uhrzeitangabe in deren <see cref="T:System.DateTimeOffset" />-Entsprechung zu konvertieren, und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich durchgeführt wurde.</summary>
      <returns>true, wenn der <paramref name="input" />-Parameter erfolgreich konvertiert wird, andernfalls false.</returns>
      <param name="input">Eine Zeichenfolge, die die zu konvertierende Datums- und Zeitangabe enthält.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="input" /> bereitstellt.</param>
      <param name="styles">Eine bitweise Kombination von Enumerationswerten, die das zulässige Format von <paramref name="input" /> angibt. </param>
      <param name="result">Die Methode gibt bei erfolgreicher Konvertierung den <see cref="T:System.DateTimeOffset" />-Wert zurück, der dem Datum und der Uhrzeit von <paramref name="input" /> entspricht, oder <see cref="F:System.DateTimeOffset.MinValue" />, wenn die Konvertierung fehlgeschlagen ist.Die Konvertierung schlägt fehl, wenn der <paramref name="input" />-Parameter null ist oder keine gültige Zeichenfolgendarstellung eines Datums und einer Uhrzeit enthält.Dieser Parameter wird nicht initialisiert übergeben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> schließt einen nicht definierten <see cref="T:System.Globalization.DateTimeStyles" />-Wert ein.- oder - <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> wird nicht unterstützt.- oder - <paramref name="styles" /> enthält sich gegenseitig ausschließende <see cref="T:System.Globalization.DateTimeStyles" />-Werte.</exception>
    </member>
    <member name="M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
      <summary>Konvertiert die angegebene Zeichenfolgenentsprechung einer Datums- und Uhrzeitangabe unter Verwendung der Angaben über Format, kulturabhängige Formatierungsinformationen und Stil in die entsprechende <see cref="T:System.DateTimeOffset" />.Das Format der Zeichenfolgendarstellung muss dem angegebenen Format genau entsprechen.</summary>
      <returns>true, wenn der <paramref name="input" />-Parameter erfolgreich konvertiert wird, andernfalls false.</returns>
      <param name="input">Eine Zeichenfolge, die die zu konvertierende Datums- und Zeitangabe enthält.</param>
      <param name="format">Ein Formatbezeichner, der das erforderliche Format von <paramref name="input" /> definiert.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="input" /> bereitstellt.</param>
      <param name="styles">Eine bitweise Kombination von Enumerationswerten, die das zulässige Eingabeformat angibt.Ein häufig angegebener Wert ist None.</param>
      <param name="result">Die Methode gibt bei erfolgreicher Konvertierung den <see cref="T:System.DateTimeOffset" /> zurück, der dem Datum und der Uhrzeit von <paramref name="input" /> entspricht, oder <see cref="F:System.DateTimeOffset.MinValue" />, wenn die Konvertierung nicht durchgeführt werden konnte.Die Konvertierung kann nicht durchgeführt werden, wenn der <paramref name="input" />-Parameter den Wert null hat oder keine gültige Zeichenfolgendarstellung einer Datums- und Uhrzeitangabe im von <paramref name="format" /> und <paramref name="provider" /> definierten erwarteten Format enthält.Dieser Parameter wird nicht initialisiert übergeben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> schließt einen nicht definierten <see cref="T:System.Globalization.DateTimeStyles" />-Wert ein.- oder - <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> wird nicht unterstützt.- oder - <paramref name="styles" /> enthält sich gegenseitig ausschließende <see cref="T:System.Globalization.DateTimeStyles" />-Werte.</exception>
    </member>
    <member name="M:System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
      <summary>Konvertiert die angegebene Zeichenfolgenentsprechung einer Datums- und Uhrzeitangabe unter Verwendung des angegebenen Formatarrays, der kulturspezifischen Formatierungsinformationen und des Stils in die <see cref="T:System.DateTimeOffset" />-Entsprechung.Das Format der Zeichenfolgendarstellung muss einem der angegebenen Formate genau entsprechen.</summary>
      <returns>true, wenn der <paramref name="input" />-Parameter erfolgreich konvertiert wird, andernfalls false.</returns>
      <param name="input">Eine Zeichenfolge, die die zu konvertierende Datums- und Zeitangabe enthält.</param>
      <param name="formats">Ein Array, das die erwarteten Formate von <paramref name="input" /> definiert.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="input" /> bereitstellt.</param>
      <param name="styles">Eine bitweise Kombination von Enumerationswerten, die das zulässige Eingabeformat angibt.Ein häufig angegebener Wert ist None.</param>
      <param name="result">Die Methode gibt bei erfolgreicher Konvertierung den <see cref="T:System.DateTimeOffset" /> zurück, der dem Datum und der Uhrzeit von <paramref name="input" /> entspricht, oder <see cref="F:System.DateTimeOffset.MinValue" />, wenn die Konvertierung nicht durchgeführt werden konnte.Die Konvertierung kann nicht durchgeführt werden, wenn <paramref name="input" /> keine gültige Zeichenfolgendarstellung einer Datums- und Uhrzeitangabe enthält oder wenn die enthaltene Datums- und Uhrzeitangabe nicht das von <paramref name="format" /> definierte Format aufweist oder wenn <paramref name="formats" /> den Wert null hat.Dieser Parameter wird nicht initialisiert übergeben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> schließt einen nicht definierten <see cref="T:System.Globalization.DateTimeStyles" />-Wert ein.- oder - <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> wird nicht unterstützt.- oder - <paramref name="styles" /> enthält sich gegenseitig ausschließende <see cref="T:System.Globalization.DateTimeStyles" />-Werte.</exception>
    </member>
    <member name="P:System.DateTimeOffset.UtcDateTime">
      <summary>Ruft einen <see cref="T:System.DateTime" />-Wert ab, der die UTC (Coordinated Universal Time)-Datums- und Uhrzeitangabe des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts darstellt.</summary>
      <returns>Die UTC (Coordinated Universal Time)-Datums- und Uhrzeitangabe des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts.</returns>
    </member>
    <member name="P:System.DateTimeOffset.UtcNow">
      <summary>Ruft ein <see cref="T:System.DateTimeOffset" />-Objekt ab, dessen Datum und Uhrzeit auf die aktuelle UTC (Coordinated Universal Time)-Datums- und Uhrzeitangabe festgelegt und dessen Offset <see cref="F:System.TimeSpan.Zero" /> ist.</summary>
      <returns>Ein Objekt, dessen Datum und Uhrzeit die aktuelle Coordinated Universal Time (UTC) ist und dessen Offset <see cref="F:System.TimeSpan.Zero" /> ist.</returns>
    </member>
    <member name="P:System.DateTimeOffset.UtcTicks">
      <summary>Ruft die Anzahl der Ticks ab, die das Datum und die Uhrzeit des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts in Coordinated Universal Time (UTC) darstellt.</summary>
      <returns>Die Anzahl der Ticks in der Coordinated Universal Time (UTC) des <see cref="T:System.DateTimeOffset" />-Objekts.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Year">
      <summary>Ruft die Jahreskomponente des Datums ab, das durch das aktuelle <see cref="T:System.DateTimeOffset" />-Objekt dargestellt wird.</summary>
      <returns>Die Jahreskomponente des aktuellen <see cref="T:System.DateTimeOffset" />-Objekts als Ganzzahlwert zwischen 0 und 9999.</returns>
    </member>
    <member name="T:System.DayOfWeek">
      <summary>Gibt den Wochentag an.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.DayOfWeek.Friday">
      <summary>Gibt Freitag an.</summary>
    </member>
    <member name="F:System.DayOfWeek.Monday">
      <summary>Gibt Montag an.</summary>
    </member>
    <member name="F:System.DayOfWeek.Saturday">
      <summary>Gibt Sonnabend an.</summary>
    </member>
    <member name="F:System.DayOfWeek.Sunday">
      <summary>Gibt Sonntag an.</summary>
    </member>
    <member name="F:System.DayOfWeek.Thursday">
      <summary>Gibt Donnerstag an.</summary>
    </member>
    <member name="F:System.DayOfWeek.Tuesday">
      <summary>Gibt Dienstag an.</summary>
    </member>
    <member name="F:System.DayOfWeek.Wednesday">
      <summary>Gibt Mittwoch an.</summary>
    </member>
    <member name="T:System.Decimal">
      <summary>Stellt eine Dezimalzahl dar.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.#ctor(System.Double)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Decimal" /> mit dem Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Der als <see cref="T:System.Decimal" /> darzustellende Wert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.-or- <paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Decimal" /> mit dem Wert einer angegebenen 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Der als <see cref="T:System.Decimal" /> darzustellende Wert. </param>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
      <summary>Initialisiert einen neue Instanz von <see cref="T:System.Decimal" /> mit Parametern, die die Bestandteile der Instanz angeben.</summary>
      <param name="lo">Die unteren 32 Bit einer 96-Bit-Ganzzahl. </param>
      <param name="mid">Die mittleren 32 Bit einer 96-Bit-Ganzzahl. </param>
      <param name="hi">Die oberen 32 Bit einer 96-Bit-Ganzzahl. </param>
      <param name="isNegative">true, um eine negative Zahl anzugeben; false, um eine positive Zahl anzugeben. </param>
      <param name="scale">Eine Zehnerpotenz mit einem Exponenten zwischen 0 (null) und 28. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scale" /> is greater than 28. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32[])">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Decimal" /> mit einem binär dargestellten Decimal-Wert in einem angegebenen Array.</summary>
      <param name="bits">Eine Array von 32-Bit-Ganzzahlen mit Vorzeichen, das eine Darstellung eines Decimal-Werts enthält. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bits" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The length of the <paramref name="bits" /> is not 4.-or- The representation of the decimal value in <paramref name="bits" /> is not valid. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int64)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Decimal" /> mit dem Wert einer angegebenen 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Der als <see cref="T:System.Decimal" /> darzustellende Wert. </param>
    </member>
    <member name="M:System.Decimal.#ctor(System.Single)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Decimal" /> mit dem Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Der als <see cref="T:System.Decimal" /> darzustellende Wert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.-or- <paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.UInt32)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Decimal" /> mit dem Wert einer angegebenen 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Der als <see cref="T:System.Decimal" /> darzustellende Wert. </param>
    </member>
    <member name="M:System.Decimal.#ctor(System.UInt64)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Decimal" /> mit dem Wert einer angegebenen 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Der als <see cref="T:System.Decimal" /> darzustellende Wert. </param>
    </member>
    <member name="M:System.Decimal.Add(System.Decimal,System.Decimal)">
      <summary>Addiert zwei angegebene <see cref="T:System.Decimal" />-Werte.</summary>
      <returns>Die Summe von <paramref name="d1" /> und <paramref name="d2" />.</returns>
      <param name="d1">Der erste zu addierende Wert. </param>
      <param name="d2">Der zweite zu addierende Wert. </param>
      <exception cref="T:System.OverflowException">The sum of <paramref name="d1" /> and <paramref name="d2" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Ceiling(System.Decimal)">
      <summary>Gibt den kleinsten ganzzahligen Wert zurück, der größer oder gleich der angegebenen Dezimalzahl ist.</summary>
      <returns>Der kleinste ganzzahlige Wert, der größer oder gleich dem <paramref name="d" />-Parameter ist.Beachten Sie, dass diese Methode einen <see cref="T:System.Decimal" /> anstelle eines ganzzahligen Typs zurückgibt.</returns>
      <param name="d">Eine Dezimalzahl. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
      <summary>Vergleicht zwei angegebene <see cref="T:System.Decimal" />-Werte.</summary>
      <returns>Eine Zahl mit Vorzeichen, die die relativen Werte von <paramref name="d1" /> und <paramref name="d2" /> angibt.Return value Meaning Less than zero <paramref name="d1" /> is less than <paramref name="d2" />. Zero <paramref name="d1" /> and <paramref name="d2" /> are equal. Greater than zero <paramref name="d1" /> is greater than <paramref name="d2" />. </returns>
      <param name="d1">Der erste zu vergleichende Wert. </param>
      <param name="d2">Der zweite zu vergleichende Wert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.CompareTo(System.Decimal)">
      <summary>Vergleicht diese Instanz mit einem angegebenen <see cref="T:System.Decimal" />-Objekt und gibt einen Vergleich der entsprechenden Werte zurück.</summary>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser Instanz und <paramref name="value" /> angibt.Return value Meaning Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
      <summary>Dividiert zwei angegebene <see cref="T:System.Decimal" />-Werte.</summary>
      <returns>Das Ergebnis der Division von <paramref name="d1" /> durch <paramref name="d2" />.</returns>
      <param name="d1">Der Dividend. </param>
      <param name="d2">Der Divisor. </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value (that is, the quotient) is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Equals(System.Decimal)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz und ein angegebenes <see cref="T:System.Decimal" />-Objekt den gleichen Wert darstellen.</summary>
      <returns>true, wenn <paramref name="value" /> gleich dieser Instanz ist, andernfalls false.</returns>
      <param name="value">Ein mit dieser Instanz zu vergleichendes Objekt.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.Equals(System.Decimal,System.Decimal)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei angegebene Instanzen von <see cref="T:System.Decimal" /> denselben Wert darstellen.</summary>
      <returns>true, wenn <paramref name="d1" /> und <paramref name="d2" /> gleich sind, andernfalls false.</returns>
      <param name="d1">Der erste zu vergleichende Wert. </param>
      <param name="d2">Der zweite zu vergleichende Wert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz und ein angegebenes <see cref="T:System.Object" /> denselben Typ und Wert darstellen.</summary>
      <returns>true, wenn <paramref name="value" /> ein <see cref="T:System.Decimal" /> und gleich dieser Instanz ist, andernfalls false.</returns>
      <param name="value">Das Objekt, das mit dieser Instanz verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.Floor(System.Decimal)">
      <summary>Rundet eine angegebene <see cref="T:System.Decimal" />-Zahl auf die nächste Ganzzahl in Richtung minus unendlich.</summary>
      <returns>Wenn <paramref name="d" /> einen Teil mit Bruchzahlen enthält, die nächste ganze <see cref="T:System.Decimal" />-Zahl in Richtung minus unendlich, die kleiner als <paramref name="d" /> ist.- oder -  Wenn <paramref name="d" /> keinen Teil mit Bruchzahlen aufweist, wird <paramref name="d" /> unverändert zurückgegeben.Beachten Sie, dass die Methode einen Ganzzahlwert vom Typ <see cref="T:System.Decimal" /> zurückgibt.</returns>
      <param name="d">Der zu rundende Wert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.GetBits(System.Decimal)">
      <summary>Konvertiert den Wert einer angegebenen Instanz von <see cref="T:System.Decimal" /> in die entsprechende binäre Darstellung.</summary>
      <returns>Ein Array von 32-Bit-Ganzzahlen mit Vorzeichen mit vier Elementen, die die binäre Darstellung von <paramref name="d" /> enthalten.</returns>
      <param name="d">Der zu konvertierende Wert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Decimal.MaxValue">
      <summary>Stellt den größtmöglichen Wert von <see cref="T:System.Decimal" /> dar.Dieses Feld ist konstant und schreibgeschützt.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.MinusOne">
      <summary>Stellt die Zahl -1 dar.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.MinValue">
      <summary>Stellt den kleinstmöglichen Wert von <see cref="T:System.Decimal" /> dar.Dieses Feld ist konstant und schreibgeschützt.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
      <summary>Multipliziert zwei angegebene <see cref="T:System.Decimal" />-Werte.</summary>
      <returns>Das Ergebnis der Multiplikation von <paramref name="d1" /> und <paramref name="d2" />.</returns>
      <param name="d1">Der Multiplikand. </param>
      <param name="d2">Der Multiplikator. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Negate(System.Decimal)">
      <summary>Gibt das Ergebnis der Multiplikation des angegebenen <see cref="T:System.Decimal" />-Werts mit -1 zurück.</summary>
      <returns>Eine Dezimalzahl mit dem Wert <paramref name="d" />, jedoch mit dem entgegen gesetzten Zeichen.- oder -  0 (null), wenn <paramref name="d" /> 0 (null) ist.</returns>
      <param name="d">Der zu negierende Wert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.One">
      <summary>Stellt die Zahl 1 dar.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
      <summary>Addiert zwei angegebene <see cref="T:System.Decimal" />-Werte.</summary>
      <returns>Das Ergebnis der Addition von <paramref name="d1" /> und <paramref name="d2" />.</returns>
      <param name="d1">Der erste zu addierende Wert. </param>
      <param name="d2">Der zweite zu addierende Wert. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Decrement(System.Decimal)">
      <summary>Verringert den <see cref="T:System.Decimal" />-Operanden um 1.</summary>
      <returns>Der um 1 dekrementierte Wert von <paramref name="d" />.</returns>
      <param name="d">Der zu dekrementierende Wert. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
      <summary>Dividiert zwei angegebene <see cref="T:System.Decimal" />-Werte.</summary>
      <returns>Das Ergebnis der Division von <paramref name="d1" /> durch <paramref name="d2" />.</returns>
      <param name="d1">Der Dividend. </param>
      <param name="d2">Der Divisor. </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei <see cref="T:System.Decimal" /> Werte gleich sind.</summary>
      <returns>true, wenn <paramref name="d1" /> und <paramref name="d2" /> gleich sind, andernfalls false.</returns>
      <param name="d1">Der erste zu vergleichende Wert. </param>
      <param name="d2">Der zweite zu vergleichende Wert. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
      <summary>Definiert eine explizite Konvertierung einer <see cref="T:System.Decimal" /> in eine 8-Bit Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die das konvertierte <see cref="T:System.Decimal" /> darstellt.</returns>
      <param name="value">Der zu konvertierende Wert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
      <summary>Definiert eine explizite Konvertierung einer <see cref="T:System.Decimal" /> in eine 64-Bit Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die das konvertierte <see cref="T:System.Decimal" /> darstellt.</returns>
      <param name="value">Der zu konvertierende Wert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
      <summary>Definiert eine explizite Konvertierung einer <see cref="T:System.Decimal" /> in eine 16-Bit Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die das konvertierte <see cref="T:System.Decimal" /> darstellt.</returns>
      <param name="value">Der zu konvertierende Wert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
      <summary>Definiert eine explizite Konvertierung einer <see cref="T:System.Decimal" /> in eine 64-Bit Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die das konvertierte <see cref="T:System.Decimal" /> darstellt.</returns>
      <param name="value">Der zu konvertierende Wert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
      <summary>Definiert eine explizite Konvertierung einer <see cref="T:System.Decimal" /> in eine 32-Bit Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die das konvertierte <see cref="T:System.Decimal" /> darstellt.</returns>
      <param name="value">Der zu konvertierende Wert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is negative or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
      <summary>Definiert eine explizite Konvertierung einer <see cref="T:System.Decimal" /> in eine 32-Bit Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die das konvertierte <see cref="T:System.Decimal" /> darstellt.</returns>
      <param name="value">Der zu konvertierende Wert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
      <summary>Definiert eine explizite Konvertierung einer <see cref="T:System.Decimal" /> in ein Unicodezeichen.</summary>
      <returns>Ein Unicode-Zeichen, das das konvertierte <see cref="T:System.Decimal" /> darstellt.</returns>
      <param name="value">Der zu konvertierende Wert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
      <summary>Definiert eine explizite Konvertierung einer <see cref="T:System.Decimal" /> in eine 8-Bit Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 8-Bit-Ganzzahl ohne Vorzeichen, die das konvertierte <see cref="T:System.Decimal" /> darstellt.</returns>
      <param name="value">Der zu konvertierende Wert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
      <summary>Definiert eine explizite Konvertierung einer <see cref="T:System.Decimal" /> in eine Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die das konvertierte <see cref="T:System.Decimal" /> darstellt.</returns>
      <param name="value">Der zu konvertierende Wert. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
      <summary>Definiert eine explizite Konvertierung einer <see cref="T:System.Decimal" /> in eine 16-Bit Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die das konvertierte <see cref="T:System.Decimal" /> darstellt.</returns>
      <param name="value">Der zu konvertierende Wert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
      <summary>Definiert eine explizite Konvertierung einer <see cref="T:System.Decimal" /> in eine Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die das konvertierte <see cref="T:System.Decimal" /> darstellt.</returns>
      <param name="value">Der zu konvertierende Wert. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
      <summary>Definiert eine explizite Konvertierung einer Gleitkommazahl mit doppelter Genauigkeit in eine <see cref="T:System.Decimal" />.</summary>
      <returns>Die konvertierte Gleitkommazahl mit doppelter Genauigkeit.</returns>
      <param name="value">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.-or- <paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
      <summary>Definiert eine explizite Konvertierung einer Gleitkommazahl mit einfacher Genauigkeit in eine <see cref="T:System.Decimal" />.</summary>
      <returns>Die konvertierte Gleitkommazahl mit einfacher Genauigkeit.</returns>
      <param name="value">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.-or- <paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebenes <see cref="T:System.Decimal" /> größer als eine anderes angegebenes <see cref="T:System.Decimal" /> ist.</summary>
      <returns>true, wenn <paramref name="d1" /> größer als <paramref name="d2" /> ist, andernfalls false.</returns>
      <param name="d1">Der erste zu vergleichende Wert. </param>
      <param name="d2">Der zweite zu vergleichende Wert. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebenes <see cref="T:System.Decimal" /> größer oder gleich einem anderen angegebenen <see cref="T:System.Decimal" /> ist.</summary>
      <returns>true, wenn <paramref name="d1" /> größer oder gleich <paramref name="d2" /> ist, andernfalls false.</returns>
      <param name="d1">Der erste zu vergleichende Wert. </param>
      <param name="d2">Der zweite zu vergleichende Wert. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
      <summary>Definiert eine explizite Konvertierung einer 8-Bit Ganzzahl ohne Vorzeichen in eine <see cref="T:System.Decimal" />.</summary>
      <returns>Die konvertierte 8-Bit-Ganzzahl ohne Vorzeichen.</returns>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
      <summary>Definiert eine explizite Konvertierung eines Unicodezeichens in eine <see cref="T:System.Decimal" />.</summary>
      <returns>Das konvertierte Unicode-Zeichen.</returns>
      <param name="value">Das zu konvertierende Unicode-Zeichen. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
      <summary>Definiert eine explizite Konvertierung einer 16-Bit Ganzzahl mit Vorzeichen in den Wert einer <see cref="T:System.Decimal" />.</summary>
      <returns>Die konvertierte 16-Bit-Ganzzahl mit Vorzeichen.</returns>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
      <summary>Definiert eine explizite Konvertierung einer 32-Bit Ganzzahl mit Vorzeichen in den Wert einer <see cref="T:System.Decimal" />.</summary>
      <returns>Die konvertierte 32-Bit-Ganzzahl mit Vorzeichen.</returns>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
      <summary>Definiert eine explizite Konvertierung einer 64-Bit Ganzzahl mit Vorzeichen in den Wert einer <see cref="T:System.Decimal" />.</summary>
      <returns>Die konvertierte 64-Bit-Ganzzahl mit Vorzeichen.</returns>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
      <summary>Definiert eine explizite Konvertierung einer 8-Bit Ganzzahl mit Vorzeichen in eine <see cref="T:System.Decimal" />.</summary>
      <returns>Die konvertierte 8-Bit-Ganzzahl mit Vorzeichen.</returns>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
      <summary>Definiert eine explizite Konvertierung einer 16-Bit Ganzzahl ohne Vorzeichen in den Wert einer <see cref="T:System.Decimal" />.</summary>
      <returns>Die konvertierte 16-Bit-Ganzzahl ohne Vorzeichen.</returns>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
      <summary>Definiert eine explizite Konvertierung einer 32-Bit Ganzzahl ohne Vorzeichen in den Wert einer <see cref="T:System.Decimal" />.</summary>
      <returns>Die konvertierte 32-Bit-Ganzzahl ohne Vorzeichen.</returns>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
      <summary>Definiert eine explizite Konvertierung einer 64-Bit Ganzzahl ohne Vorzeichen in den Wert einer <see cref="T:System.Decimal" />.</summary>
      <returns>Die konvertierte 64-Bit-Ganzzahl ohne Vorzeichen.</returns>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Increment(System.Decimal)">
      <summary>Erhöht den <see cref="T:System.Decimal" />-Operanden um 1.</summary>
      <returns>Der um 1 inkrementierte Wert von <paramref name="d" />.</returns>
      <param name="d">Der zu inkrementierende Wert. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei <see cref="T:System.Decimal" />-Objekte über unterschiedliche Werte verfügen.</summary>
      <returns>true, wenn <paramref name="d1" /> und <paramref name="d2" /> ungleich sind, andernfalls false.</returns>
      <param name="d1">Der erste zu vergleichende Wert. </param>
      <param name="d2">Der zweite zu vergleichende Wert. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebenes <see cref="T:System.Decimal" /> kleiner als ein anderes angegebenes <see cref="T:System.Decimal" /> ist.</summary>
      <returns>true, wenn <paramref name="d1" /> kleiner als <paramref name="d2" /> ist, andernfalls false.</returns>
      <param name="d1">Der erste zu vergleichende Wert. </param>
      <param name="d2">Der zweite zu vergleichende Wert. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebenes <see cref="T:System.Decimal" /> kleiner oder gleich einem anderen angegebenen <see cref="T:System.Decimal" /> ist.</summary>
      <returns>true, wenn <paramref name="d1" /> kleiner oder gleich <paramref name="d2" /> ist, andernfalls false.</returns>
      <param name="d1">Der erste zu vergleichende Wert. </param>
      <param name="d2">Der zweite zu vergleichende Wert. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
      <summary>Gibt den Rest aus der Division zweier angegebener <see cref="T:System.Decimal" />-Werte zurück.</summary>
      <returns>Der Rest der Division von <paramref name="d1" /> durch <paramref name="d2" />.</returns>
      <param name="d1">Der Dividend. </param>
      <param name="d2">Der Divisor. </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
      <summary>Multipliziert zwei angegebene <see cref="T:System.Decimal" />-Werte.</summary>
      <returns>Das Ergebnis der Multiplikation von <paramref name="d1" /> mit <paramref name="d2" />.</returns>
      <param name="d1">Der erste zu multiplizierende Wert. </param>
      <param name="d2">Der zweite zu multiplizierende Wert. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
      <summary>Subtrahiert zwei angegebene <see cref="T:System.Decimal" />-Werte.</summary>
      <returns>Das Ergebnis der Subtraktion von <paramref name="d2" /> von <paramref name="d1" />.</returns>
      <param name="d1">Der Minuend. </param>
      <param name="d2">Der Subtrahend. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_UnaryNegation(System.Decimal)">
      <summary>Negiert den Wert des angegebenen <see cref="T:System.Decimal" />-Operanden.</summary>
      <returns>Das Ergebnis von <paramref name="d" />, multipliziert mit -1.</returns>
      <param name="d">Der zu negierende Wert. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_UnaryPlus(System.Decimal)">
      <summary>Gibt den Wert des <see cref="T:System.Decimal" />-Operanden zurück (das Vorzeichen des Operanden bleibt unverändert).</summary>
      <returns>Der Wert <paramref name="d" /> des Operanden.</returns>
      <param name="d">Der Operand, der zurückgegeben werden soll.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String)">
      <summary>Wandelt die angegebene Zeichenfolgendarstellung einer Zahl in ihre <see cref="T:System.Decimal" />-Entsprechung um.</summary>
      <returns>Die Entsprechung der in <paramref name="s" /> enthaltenen Zahl.</returns>
      <param name="s">Die Zeichenfolgendarstellung der zu konvertierenden Zahl.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil in die <see cref="T:System.Decimal" />-Entsprechung.</summary>
      <returns>Die <see cref="T:System.Decimal" />-Zahl, die der in <paramref name="s" /> enthaltenen Zahl entspricht, wie durch <paramref name="style" /> angegeben.</returns>
      <param name="s">Die Zeichenfolgendarstellung der zu konvertierenden Zahl. </param>
      <param name="style">Eine bitweise Kombination von <see cref="T:System.Globalization.NumberStyles" />-Werten, die die Stilelemente angeben, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Number" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl unter Verwendung des angegebenen Stils und kulturspezifischer Formatierungsinformationen in die <see cref="T:System.Decimal" />-Entsprechung.</summary>
      <returns>Die <see cref="T:System.Decimal" />-Zahl, die gemäß den Angaben in <paramref name="s" /> und <paramref name="style" /> der in <paramref name="provider" /> enthaltenen Zahl entspricht.</returns>
      <param name="s">Die Zeichenfolgendarstellung der zu konvertierenden Zahl. </param>
      <param name="style">Eine bitweise Kombination von <see cref="T:System.Globalization.NumberStyles" />-Werten, die die Stilelemente angeben, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Number" />.</param>
      <param name="provider">Ein <see cref="T:System.IFormatProvider" />-Objekt, das kulturspezifische Informationen zum Format von <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die <see cref="T:System.Decimal" />-Entsprechung.</summary>
      <returns>Die <see cref="T:System.Decimal" />-Zahl, die der in <paramref name="s" /> enthaltenen Zahl entspricht, wie durch <paramref name="provider" /> angegeben.</returns>
      <param name="s">Die Zeichenfolgendarstellung der zu konvertierenden Zahl. </param>
      <param name="provider">Ein <see cref="T:System.IFormatProvider" />, der kulturabhängige Analyseinformationen über <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
      <summary>Berechnet den Rest der Division zweier <see cref="T:System.Decimal" />-Werte.</summary>
      <returns>Der Rest aus der Division von <paramref name="d1" /> durch <paramref name="d2" />.</returns>
      <param name="d1">Der Dividend. </param>
      <param name="d2">Der Divisor. </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
      <summary>Subtrahiert einen angegebenen <see cref="T:System.Decimal" />-Wert von einem anderen.</summary>
      <returns>Das Ergebnis der Subtraktion von <paramref name="d2" /> von <paramref name="d1" />.</returns>
      <param name="d1">Der Minuend. </param>
      <param name="d2">Der Subtrahend. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relative Reihenfolge dieser Instanz und <paramref name="value" /> angibt.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Das Objekt, das mit dieser Instanz verglichen werden soll, oder null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Decimal" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</summary>
      <returns>true, wenn der Wert der aktuellen Instanz nicht 0 (null) ist, andernfalls false.</returns>
      <param name="provider">Dieser Parameter wird ignoriert. </param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</summary>
      <returns>Der in ein <see cref="T:System.Byte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Keine.Diese Konvertierung wird nicht unterstützt.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Keine.Diese Konvertierung wird nicht unterstützt.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</summary>
      <returns>Der unveränderte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</summary>
      <returns>Der in ein <see cref="T:System.Double" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</summary>
      <returns>Der in ein <see cref="T:System.Int16" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</summary>
      <returns>Der in ein <see cref="T:System.Int32" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Der Parameter wird ignoriert.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</summary>
      <returns>Der in ein <see cref="T:System.Int64" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</summary>
      <returns>Der in ein <see cref="T:System.SByte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</summary>
      <returns>Der in ein <see cref="T:System.Single" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</summary>
      <returns>Der in ein <paramref name="type" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="type">Der Typ, in den der Wert dieser <see cref="T:System.Decimal" />-Instanz konvertiert werden soll. </param>
      <param name="provider">Eine <see cref="T:System.IFormatProvider" />-Implementierung, die kulturspezifische Informationen zum Format des zurückgegebenen Werts bereitstellt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null. </exception>
      <exception cref="T:System.InvalidCastException">The requested type conversion is not supported. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</summary>
      <returns>Der in ein <see cref="T:System.UInt16" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</summary>
      <returns>Der in ein <see cref="T:System.UInt32" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</summary>
      <returns>Der in ein <see cref="T:System.UInt64" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.ToByte(System.Decimal)">
      <summary>Konvertiert den Wert des angegebenen <see cref="T:System.Decimal" /> in die entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <param name="value">Die zu konvertierende Dezimalzahl. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToDouble(System.Decimal)">
      <summary>Konvertiert den Wert des angegebenen <see cref="T:System.Decimal" /> in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="d" /> entspricht.</returns>
      <param name="d">Die zu konvertierende Dezimalzahl. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToInt16(System.Decimal)">
      <summary>Konvertiert den Wert des angegebenen <see cref="T:System.Decimal" /> in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <param name="value">Die zu konvertierende Dezimalzahl. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToInt32(System.Decimal)">
      <summary>Konvertiert den Wert des angegebenen <see cref="T:System.Decimal" /> in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die dem Wert von <paramref name="d" /> entspricht.</returns>
      <param name="d">Die zu konvertierende Dezimalzahl. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToInt64(System.Decimal)">
      <summary>Konvertiert den Wert des angegebenen <see cref="T:System.Decimal" /> in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die dem Wert von <paramref name="d" /> entspricht.</returns>
      <param name="d">Die zu konvertierende Dezimalzahl. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToSByte(System.Decimal)">
      <summary>Konvertiert den Wert des angegebenen <see cref="T:System.Decimal" /> in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <param name="value">Die zu konvertierende Dezimalzahl. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToSingle(System.Decimal)">
      <summary>Konvertiert den Wert des angegebenen <see cref="T:System.Decimal" /> in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die dem Wert von <paramref name="d" /> entspricht.</returns>
      <param name="d">Die zu konvertierende Dezimalzahl. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString">
      <summary>Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Eine Zeichenfolge, die den Wert dieser Instanz darstellt.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString(System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Berücksichtigung der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="provider" />.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString(System.String)">
      <summary>Konvertiert den numerischen Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung unter Berücksichtigung des angegebenen Formats.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" />.</returns>
      <param name="format">Eine standardmäßige oder benutzerdefinierte numerische Formatierungszeichenfolge (siehe Hinweise).</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Verwendung des angegebenen Formats und der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" /> und <paramref name="provider" />.</returns>
      <param name="format">Eine numerische Formatzeichenfolge (siehe "Hinweise").</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToUInt16(System.Decimal)">
      <summary>Konvertiert den Wert des angegebenen <see cref="T:System.Decimal" /> in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die dem Wert von <paramref name="value" /> entspricht.</returns>
      <param name="value">Die zu konvertierende Dezimalzahl. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToUInt32(System.Decimal)">
      <summary>Konvertiert den Wert des angegebenen <see cref="T:System.Decimal" /> in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die dem Wert von <paramref name="d" /> entspricht.</returns>
      <param name="d">Die zu konvertierende Dezimalzahl. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is negative or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToUInt64(System.Decimal)">
      <summary>Konvertiert den Wert des angegebenen <see cref="T:System.Decimal" /> in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die dem Wert von <paramref name="d" /> entspricht.</returns>
      <param name="d">Die zu konvertierende Dezimalzahl. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Truncate(System.Decimal)">
      <summary>Gibt den ganzzahligen Teil des angegebenen <see cref="T:System.Decimal" /> zurück; Bruchziffern werden verworfen.</summary>
      <returns>Das auf die nächste ganze Zahl in Richtung 0 gerundete Ergebnis von <paramref name="d" />.</returns>
      <param name="d">Die zu verkürzende Dezimalzahl. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.TryParse(System.String,System.Decimal@)">
      <summary>Wandelt die angegebene Zeichenfolgendarstellung einer Zahl in ihre <see cref="T:System.Decimal" />-Entsprechung um.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Die Zeichenfolgendarstellung der zu konvertierenden Zahl.</param>
      <param name="result">Enthält bei Rückgabe dieser Methode die <see cref="T:System.Decimal" />-Zahl, die dem numerischen Wert in <paramref name="s" /> entspricht, wenn die Konvertierung erfolgreich ausgeführt wurde, oder 0 (null) bei einem Konvertierungsfehler.Bei der Konvertierung tritt ein Fehler auf, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, keine Zahl in einem gültigen Format ist oder eine Zahl kleiner als <see cref="F:System.Decimal.MinValue" /> oder größer als <see cref="F:System.Decimal.MaxValue" /> ist.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> ursprünglich übergebene Werte werden ausnahmslos überschrieben.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl unter Verwendung des angegebenen Stils und kulturspezifischer Formatierungsinformationen in die <see cref="T:System.Decimal" />-Entsprechung.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Die Zeichenfolgendarstellung der zu konvertierenden Zahl.</param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die das zulässige Format von <paramref name="s" /> angibt.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Number" />.</param>
      <param name="provider">Ein Objekt, das kulturabhängige Analyseinformationen über <paramref name="s" /> bereitstellt. </param>
      <param name="result">Enthält bei Rückgabe dieser Methode die <see cref="T:System.Decimal" />-Zahl, die dem numerischen Wert in <paramref name="s" /> entspricht, wenn die Konvertierung erfolgreich ausgeführt wurde, oder 0 (null) bei einem Konvertierungsfehler.Bei der Konvertierung tritt ein Fehler auf, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, nicht in einem mit <paramref name="style" /> kompatiblen Format vorliegt oder eine Zahl kleiner als <see cref="F:System.Decimal.MinValue" /> oder größer als <see cref="F:System.Decimal.MaxValue" /> darstellt.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> ursprünglich übergebene Werte werden ausnahmslos überschrieben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.Zero">
      <summary>Stellt die Zahl 0 (null) dar.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Delegate">
      <summary>Stellt einen Delegaten dar. Hierbei handelt es sich um eine Datenstruktur, die auf eine statische Methode oder auf eine Klasseninstanz und eine Instanzenmethode dieser Klasse verweist.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.Combine(System.Delegate,System.Delegate)">
      <summary>Verkettet die Aufruflisten zweier Delegaten.</summary>
      <returns>Eine neuer Delegat mit einer Aufrufliste, die aus der Verkettung der Aufruflisten von <paramref name="a" /> und <paramref name="b" /> in dieser Reihenfolge besteht.Gibt <paramref name="a" /> zurück, wenn <paramref name="b" />null ist, gibt <paramref name="b" /> zurück, wenn <paramref name="a" /> ein NULL-Verweis ist, und gibt einen NULL-Verweis zurück, wenn <paramref name="a" /> und <paramref name="b" /> NULL-Verweise sind.</returns>
      <param name="a">Der Delegat mit der ersten Aufrufliste. </param>
      <param name="b">Der Delegat mit der letzten Aufrufliste. </param>
      <exception cref="T:System.ArgumentException">Both <paramref name="a" /> and <paramref name="b" /> are not null, and <paramref name="a" /> and <paramref name="b" /> are not instances of the same delegate type. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.Combine(System.Delegate[])">
      <summary>Verkettet die Aufruflisten eines Arrays von Delegaten.</summary>
      <returns>Eine neuer Delegat mit einer Aufrufliste, die aus der Verkettung der Aufruflisten der Delegaten im <paramref name="delegates" />-Array besteht.Gibt null zurück, wenn <paramref name="delegates" />null ist, <paramref name="delegates" /> 0 Elemente enthält oder jeder Eintrag in <paramref name="delegates" />null ist.</returns>
      <param name="delegates">Das zu kombinierende Array von Delegaten. </param>
      <exception cref="T:System.ArgumentException">Not all the non-null entries in <paramref name="delegates" /> are instances of the same delegate type. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.DynamicInvoke(System.Object[])">
      <summary>Ruft die durch den aktuellen Delegaten dargestellte Methode dynamisch (mit später Bindung) auf.</summary>
      <returns>Das Objekt, das von der durch den Delegaten dargestellten Methode zurückgegeben wird.</returns>
      <param name="args">Ein Array von Objekten, das die Argumente darstellt, die der durch den aktuellen Delegaten dargestellten Methode übergeben werden.- oder -  null, wenn die durch den aktuellen Delegaten dargestellte Methode keine Argumente erfordert. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private).-or- The number, order, or type of parameters listed in <paramref name="args" /> is invalid. </exception>
      <exception cref="T:System.ArgumentException">The method represented by the delegate is invoked on an object or a class that does not support it. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The method represented by the delegate is an instance method and the target object is null.-or- One of the encapsulated methods throws an exception. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene Objekt und der aktuelle Delegat vom gleichen Typ sind und die gleichen Ziele, Methoden und Aufruflisten besitzen.</summary>
      <returns>true, wenn <paramref name="obj" /> und der aktuelle Delegat dieselben Ziele, Methoden und Aufruflisten aufweisen, andernfalls false.</returns>
      <param name="obj">Das Objekt, das mit dem aktuellen Delegaten verglichen werden soll. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private). </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.GetHashCode">
      <summary>Gibt einen Hashcode für den Delegaten zurück.</summary>
      <returns>Ein Hashcode für den Delegaten.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.GetInvocationList">
      <summary>Gibt die Aufrufliste des Delegaten zurück.</summary>
      <returns>Ein Array von Delegaten, das die Aufrufliste des aktuellen Delegaten darstellt.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.op_Equality(System.Delegate,System.Delegate)">
      <summary>Bestimmt, ob die angegebenen Delegaten gleich sind.</summary>
      <returns>true, wenn <paramref name="d1" /> und <paramref name="d2" /> gleich sind, andernfalls false.</returns>
      <param name="d1">Der erste der zu vergleichenden Delegaten. </param>
      <param name="d2">Der zweite der zu vergleichenden Delegaten. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Delegate.op_Inequality(System.Delegate,System.Delegate)">
      <summary>Bestimmt, ob die angegebenen Delegaten ungleich sind.</summary>
      <returns>true, wenn <paramref name="d1" /> und <paramref name="d2" /> ungleich sind, andernfalls false.</returns>
      <param name="d1">Der erste der zu vergleichenden Delegaten. </param>
      <param name="d2">Der zweite der zu vergleichenden Delegaten. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Delegate.Remove(System.Delegate,System.Delegate)">
      <summary>Entfernt das letzte Vorkommen der Aufrufliste eines Delegaten aus der Aufrufliste eines anderen Delegaten.</summary>
      <returns>Ein neuer Delegat mit einer Aufrufliste, die aus der Aufrufliste von <paramref name="source" /> besteht, aus der das letzte Vorkommen der Aufrufliste von <paramref name="value" /> entfernt wurde, falls sich die Aufrufliste von <paramref name="value" /> in der Aufrufliste von <paramref name="source" /> befand.Gibt <paramref name="source" /> zurück, wenn <paramref name="value" />null ist oder die Aufrufliste von <paramref name="value" /> sich nicht innerhalb der Aufrufliste von <paramref name="source" /> befand.Gibt einen NULL-Verweis zurück, wenn die Aufrufliste von <paramref name="value" /> gleich der Aufrufliste von <paramref name="source" /> ist oder <paramref name="source" /> ein NULL-Verweis ist.</returns>
      <param name="source">Der Delegat, aus dem die Aufrufliste von <paramref name="value" /> entfernt werden soll. </param>
      <param name="value">Der Delegat, von dem die Aufrufliste stammt, die aus der Aufrufliste von <paramref name="source" /> entfernt werden soll. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private). </exception>
      <exception cref="T:System.ArgumentException">The delegate types do not match.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.RemoveAll(System.Delegate,System.Delegate)">
      <summary>Entfernt alle Vorkommen der Aufrufliste eines Delegaten aus der Aufrufliste eines anderen Delegaten.</summary>
      <returns>Ein neuer Delegat mit einer Aufrufliste, die aus der Aufrufliste von <paramref name="source" /> besteht, aus der alle Vorkommen der Aufrufliste von <paramref name="value" /> entfernt wurden, falls sich die Aufrufliste von <paramref name="value" /> in der Aufrufliste von <paramref name="source" /> befand.Gibt <paramref name="source" /> zurück, wenn <paramref name="value" />null ist oder die Aufrufliste von <paramref name="value" /> sich nicht innerhalb der Aufrufliste von <paramref name="source" /> befand.Gibt einen NULL-Verweis zurück, wenn die Aufrufliste von <paramref name="value" /> gleich der Aufrufliste von <paramref name="source" /> ist, wenn <paramref name="value" /> nur eine Reihe von Aufruflisten enthält, die gleich der Aufrufliste von <paramref name="source" /> sind, oder <paramref name="source" /> ein NULL-Verweis ist.</returns>
      <param name="source">Der Delegat, aus dem die Aufrufliste von <paramref name="value" /> entfernt werden soll. </param>
      <param name="value">Der Delegat, von dem die Aufrufliste stammt, die aus der Aufrufliste von <paramref name="source" /> entfernt werden soll. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private). </exception>
      <exception cref="T:System.ArgumentException">The delegate types do not match.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Delegate.Target">
      <summary>Ruft die Klasseninstanz ab, für die der aktuelle Delegat die Instanzenmethode aufruft.</summary>
      <returns>Das Objekt, für das der aktuelle Delegat die Instanzmethode aufruft, wenn der Delegat eine Instanzmethode darstellt, null, wenn der Delegat eine statische Methode darstellt.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.DivideByZeroException">
      <summary>Die Ausnahme, die bei einem Versuch ausgelöst wird, einen ganzzahligen Wert oder einen Dezimalwert durch null zu teilen.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DivideByZeroException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.DivideByZeroException" />-Klasse.</summary>
    </member>
    <member name="M:System.DivideByZeroException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.DivideByZeroException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt. </param>
    </member>
    <member name="M:System.DivideByZeroException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.DivideByZeroException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Double">
      <summary>Stellt eine Gleitkommazahl mit doppelter Genauigkeit dar.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.CompareTo(System.Double)">
      <summary>Vergleicht diese Instanz mit einer angegebenen Gleitkommazahl mit doppelter Genauigkeit und gibt eine Ganzzahl zurück, die angibt, ob der Wert dieser Instanz kleiner oder größer als der Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit ist oder mit dieser übereinstimmt.</summary>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser Instanz und <paramref name="value" /> angibt.Return Value Description Less than zero This instance is less than <paramref name="value" />.-or- This instance is not a number (<see cref="F:System.Double.NaN" />) and <paramref name="value" /> is a number. Zero This instance is equal to <paramref name="value" />.-or- Both this instance and <paramref name="value" /> are not a number (<see cref="F:System.Double.NaN" />), <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />. Greater than zero This instance is greater than <paramref name="value" />.-or- This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Double.NaN" />). </returns>
      <param name="value">Eine Gleitkommazahl mit doppelter Genauigkeit, mit der der Vergleich erfolgen soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Double.Epsilon">
      <summary>Stellt den kleinsten positiven <see cref="T:System.Double" />-Wert dar, der größer als 0 (null) ist.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Equals(System.Double)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz und ein angegebenes <see cref="T:System.Double" />-Objekt den gleichen Wert darstellen.</summary>
      <returns>true, wenn <paramref name="obj" /> gleich dieser Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein mit dieser Instanz zu vergleichendes <see cref="T:System.Double" />-Objekt.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> eine Instanz von <see cref="T:System.Double" /> ist, deren Wert gleich dem Wert dieser Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.IsInfinity(System.Double)">
      <summary>Gibt einen Wert zurück, der angibt, ob der Wert der angegebenen Zahl minus unendlich oder plus unendlich ist. </summary>
      <returns>true, wenn <paramref name="d" /> entweder <see cref="F:System.Double.PositiveInfinity" /> oder <see cref="F:System.Double.NegativeInfinity" /> ergibt, andernfalls false.</returns>
      <param name="d">Eine Gleitkommazahl mit doppelter Genauigkeit. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.IsNaN(System.Double)">
      <summary>Gibt einen Wert zurück, der angibt, ob der angegebene Wert keine Zahl ist (<see cref="F:System.Double.NaN" />).</summary>
      <returns>true, wenn <paramref name="d" /><see cref="F:System.Double.NaN" /> ergibt, andernfalls false.</returns>
      <param name="d">Eine Gleitkommazahl mit doppelter Genauigkeit. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.IsNegativeInfinity(System.Double)">
      <summary>Gibt einen Wert zurück, der angibt, ob die angegebene Zahl minus unendlich ergibt.</summary>
      <returns>true, wenn <paramref name="d" /><see cref="F:System.Double.NegativeInfinity" /> ergibt, andernfalls false.</returns>
      <param name="d">Eine Gleitkommazahl mit doppelter Genauigkeit. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.IsPositiveInfinity(System.Double)">
      <summary>Gibt einen Wert zurück, der angibt, ob die angegebene Zahl plus unendlich ergibt.</summary>
      <returns>true, wenn <paramref name="d" /><see cref="F:System.Double.PositiveInfinity" /> ergibt, andernfalls false.</returns>
      <param name="d">Eine Gleitkommazahl mit doppelter Genauigkeit. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.MaxValue">
      <summary>Stellt den größtmöglichen Wert von <see cref="T:System.Double" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.MinValue">
      <summary>Stellt den kleinstmöglichen Wert von <see cref="T:System.Double" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.NaN">
      <summary>Stellt einen Wert dar, der keine Zahl ist (NaN).Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.NegativeInfinity">
      <summary>Stellt minus unendlich dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.op_Equality(System.Double,System.Double)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei angegebene <see cref="T:System.Double" />-Werte gleich sind.</summary>
      <returns>true, wenn <paramref name="left" /> und <paramref name="right" /> gleich sind, andernfalls false.</returns>
      <param name="left">Der erste zu vergleichende Wert. </param>
      <param name="right">Der zweite zu vergleichende Wert.</param>
    </member>
    <member name="M:System.Double.op_GreaterThan(System.Double,System.Double)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebener <see cref="T:System.Double" />-Wert größer als ein anderer angegebener <see cref="T:System.Double" />-Wert ist.</summary>
      <returns>true, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls false.</returns>
      <param name="left">Der erste zu vergleichende Wert.</param>
      <param name="right">Der zweite zu vergleichende Wert.</param>
    </member>
    <member name="M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebener <see cref="T:System.Double" />-Wert größer oder gleich einem anderen angegebenen <see cref="T:System.Double" />-Wert ist.</summary>
      <returns>true, wenn <paramref name="left" /> größer oder gleich <paramref name="right" /> ist, andernfalls false.</returns>
      <param name="left">Der erste zu vergleichende Wert.</param>
      <param name="right">Der zweite zu vergleichende Wert.</param>
    </member>
    <member name="M:System.Double.op_Inequality(System.Double,System.Double)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei angegebene <see cref="T:System.Double" />-Werte gleich sind.</summary>
      <returns>true, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls false.</returns>
      <param name="left">Der erste zu vergleichende Wert.</param>
      <param name="right">Der zweite zu vergleichende Wert.</param>
    </member>
    <member name="M:System.Double.op_LessThan(System.Double,System.Double)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebener <see cref="T:System.Double" />-Wert größer als ein anderer angegebener <see cref="T:System.Double" />-Wert ist.</summary>
      <returns>true, wenn <paramref name="left" /> kleiner als <paramref name="right" /> ist, andernfalls false.</returns>
      <param name="left">Der erste zu vergleichende Wert.</param>
      <param name="right">Der zweite zu vergleichende Wert.</param>
    </member>
    <member name="M:System.Double.op_LessThanOrEqual(System.Double,System.Double)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebener <see cref="T:System.Double" /> -Wert kleiner oder gleich einem anderen angegebenen <see cref="T:System.Double" />-Wert ist.</summary>
      <returns>true, wenn <paramref name="left" /> kleiner oder gleich <paramref name="right" /> ist, andernfalls false.</returns>
      <param name="left">Der erste zu vergleichende Wert.</param>
      <param name="right">Der zweite zu vergleichende Wert.</param>
    </member>
    <member name="M:System.Double.Parse(System.String)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die dem numerischen Wert oder Symbol in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Format in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die dem numerischen Wert oder Symbol in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält. </param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angeben, die in <paramref name="s" /> vorhanden sein können.Ein häufig anzugebender Wert ist eine Kombination von <see cref="F:System.Globalization.NumberStyles.Float" /> und <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturspezifischen Format in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die dem numerischen Wert oder Symbol in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält. </param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angeben, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Float" /> in Kombination mit <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a numeric value. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Parse(System.String,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem bestimmten kulturspezifischen Format in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die dem numerischen Wert oder Symbol in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält. </param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.PositiveInfinity">
      <summary>Stellt plus unendlich dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relative Reihenfolge dieser Instanz und <paramref name="value" /> angibt.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Double" />. </exception>
    </member>
    <member name="M:System.Double.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true, wenn der Wert der aktuellen Instanz nicht 0 (null) ist, andernfalls false.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Byte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Diese Konvertierung wird nicht unterstützt.Es wird kein Wert zurückgegeben.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Diese Konvertierung wird nicht unterstützt.Es wird kein Wert zurückgegeben.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Decimal" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Der unveränderte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int16" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int32" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int64" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.SByte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Single" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Der in <paramref name="type" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="type">Der Typ, in den dieser <see cref="T:System.Double" />-Wert konvertiert werden soll.</param>
      <param name="provider">Eine <see cref="T:System.IFormatProvider" />-Implementierung, die kulturspezifische Informationen zum Format des zurückgegebenen Werts bereitstellt.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt16" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert. </param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt32" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.   </param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt64" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Double.ToString">
      <summary>Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.ToString(System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Berücksichtigung der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="provider" />.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.ToString(System.String)">
      <summary>Konvertiert den numerischen Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung unter Berücksichtigung des angegebenen Formats.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" />.</returns>
      <param name="format">Eine numerische Formatierungszeichenfolge.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.ToString(System.String,System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Verwendung des angegebenen Formats und der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" /> und <paramref name="provider" />.</returns>
      <param name="format">Eine numerische Formatierungszeichenfolge.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.TryParse(System.String,System.Double@)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält. </param>
      <param name="result">Wenn diese Methode zurückgegeben wird, enthält sie bei erfolgreicher Konvertierung eine Gleitkommazahl mit doppelter Genauigkeit, die dem <paramref name="s" />-Parameter entspricht, oder 0 (null), wenn die Konvertierung fehlgeschlagen ist.Bei der Konvertierung tritt ein Fehler auf, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, keine Zahl in einem gültigen Format ist oder eine Zahl kleiner als <see cref="F:System.Double.MinValue" /> oder größer als <see cref="F:System.Double.MaxValue" /> ist.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> ursprünglich übergebene Werte werden ausnahmslos überschrieben.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturspezifischen Format in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält. </param>
      <param name="style">Eine bitweise Kombination von <see cref="T:System.Globalization.NumberStyles" />-Werten, die das zulässige Format von <paramref name="s" /> angibt.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Float" /> in Kombination mit <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <param name="provider">Eine <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung eine Gleitkommazahl mit doppelter Genauigkeit zurück, die dem numerischen Wert oder dem im <paramref name="s" />-Parameter enthaltenen Symbol entspricht, oder 0 (null), wenn die Konvertierung fehlgeschlagen ist.Die Konvertierung kann nicht durchgeführt werden, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, kein mit <paramref name="style" /> kompatibles Format aufweist, eine Zahl kleiner als <see cref="F:System.SByte.MinValue" /> oder größer als <see cref="F:System.SByte.MaxValue" /> darstellt, oder wenn <paramref name="style" /> keine gültige Kombination von <see cref="T:System.Globalization.NumberStyles" />-Enumerationskonstanten ist.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> ursprünglich übergebene Werte werden ausnahmslos überschrieben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Enum">
      <summary>Stellt die Basisklasse für Enumerationen bereit.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Enum" />-Klasse. </summary>
    </member>
    <member name="M:System.Enum.CompareTo(System.Object)">
      <summary>Vergleicht diese Instanz mit einem angegebenen Objekt und gibt eine Angabe über das Verhältnis der entsprechenden Werte zurück.</summary>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser Instanz und dem Wert von <paramref name="target" /> angibt.Wert Bedeutung Kleiner als 0 (null) Der Wert dieser Instanz ist kleiner als der Wert von <paramref name="target" />. Zero Der Wert dieser Instanz ist gleich dem Wert von <paramref name="target" />. Größer als 0 (null) Der Wert dieser Instanz ist größer als der Wert von <paramref name="target" />.- oder -  <paramref name="target" /> ist null. </returns>
      <param name="target">Ein Vergleichsobjekt oder null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> and this instance are not the same type. </exception>
      <exception cref="T:System.InvalidOperationException">This instance is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> ein Enumerationswert des gleichen Typs und mit dem gleichen zugrunde liegenden Wert wie diese Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.Format(System.Type,System.Object,System.String)">
      <summary>Konvertiert den angegebenen Wert eines angegebenen Enumerationstyps unter Berücksichtigung des angegebenen Formats in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
      <param name="enumType">Der Enumerationstyp des zu konvertierenden Werts. </param>
      <param name="value">Der zu konvertierende Wert. </param>
      <param name="format">Das zu verwendende Ausgabeformat. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="enumType" />, <paramref name="value" />, or <paramref name="format" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" /> type.-or- The <paramref name="value" /> is from an enumeration that differs in type from <paramref name="enumType" />.-or- The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />. </exception>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter contains an invalid value. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="format" /> equals "X", but the enumeration type is unknown.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetHashCode">
      <summary>Gibt den Hashcode für den Wert dieser Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.GetName(System.Type,System.Object)">
      <summary>Ruft den Namen der Konstanten in der angegebenen Enumeration mit dem angegebenen Wert ab.</summary>
      <returns>Eine Zeichenfolge mit dem Namen der Enumerationskonstanten aus <paramref name="enumType" />, die den Wert <paramref name="value" /> hat, oder null, wenn eine solche Konstante nicht gefunden wurde.</returns>
      <param name="enumType">Ein Enumerationstyp. </param>
      <param name="value">Der Wert einer bestimmten Enumerationskonstanten als deren zugrunde liegender Typ. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is neither of type <paramref name="enumType" /> nor does it have the same underlying type as <paramref name="enumType" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetNames(System.Type)">
      <summary>Ruft ein Array mit den Namen der Konstanten in einer angegebenen Enumeration ab.</summary>
      <returns>Ein Zeichenfolgenarray mit den Namen der Konstanten in <paramref name="enumType" />. </returns>
      <param name="enumType">Ein Enumerationstyp. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetUnderlyingType(System.Type)">
      <summary>Gibt den zugrunde liegenden Typ der angegebenen Enumeration zurück.</summary>
      <returns>Der zugrunde liegende Typ von <paramref name="enumType" />.</returns>
      <param name="enumType">Die Enumeration, deren zugrunde liegender Typ abgerufen wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetValues(System.Type)">
      <summary>Ruft ein Array mit den Werten der Konstanten in einer angegebenen Enumeration ab.</summary>
      <returns>Ein Array, das die Werte der Konstanten in <paramref name="enumType" /> enthält. </returns>
      <param name="enumType">Ein Enumerationstyp. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />. </exception>
      <exception cref="T:System.InvalidOperationException">The method is invoked by reflection in a reflection-only context, -or-<paramref name="enumType" /> is a type from an assembly loaded in a reflection-only context.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.HasFlag(System.Enum)">
      <summary>Bestimmt, ob ein oder mehrere Bitfelder in der aktuellen Instanz festgelegt werden.</summary>
      <returns>true, wenn das in <paramref name="flag" /> festgelegte Bitfeld bzw. die Bitfelder auch in der aktuellen Instanz festgelegt werden, andernfalls false.</returns>
      <param name="flag">Ein Enumerationswert.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> is a different type than the current instance.</exception>
    </member>
    <member name="M:System.Enum.IsDefined(System.Type,System.Object)">
      <summary>Gibt eine Angabe darüber zurück, ob eine angegebene Enumeration eine Konstante mit einem angegebenen Wert enthält.</summary>
      <returns>true, wenn eine Konstante in <paramref name="enumType" /> den Wert <paramref name="value" /> hat, andernfalls false.</returns>
      <param name="enumType">Ein Enumerationstyp. </param>
      <param name="value">Der Wert oder Name einer Konstanten in <paramref name="enumType" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an Enum.-or- The type of <paramref name="value" /> is an enumeration, but it is not an enumeration of type <paramref name="enumType" />.-or- The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />, or <see cref="T:System.String" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.Parse(System.Type,System.String)">
      <summary>Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</summary>
      <returns>Ein Objekt vom Typ <paramref name="enumType" />, dessen Wert durch <paramref name="value" /> dargestellt wird.</returns>
      <param name="enumType">Ein Enumerationstyp. </param>
      <param name="value">Eine Zeichenfolge mit dem zu konvertierenden Namen oder Wert. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is either an empty string or only contains white space.-or- <paramref name="value" /> is a name, but not one of the named constants defined for the enumeration. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
      <summary>Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.Ein Parameter gibt an, ob beim Vorgang die Groß-/Kleinschreibung nicht beachtet wird.</summary>
      <returns>Ein Objekt vom Typ <paramref name="enumType" />, dessen Wert durch <paramref name="value" /> dargestellt wird.</returns>
      <param name="enumType">Ein Enumerationstyp. </param>
      <param name="value">Eine Zeichenfolge mit dem zu konvertierenden Namen oder Wert. </param>
      <param name="ignoreCase">true, wenn die Groß-/Kleinschreibung nicht beachtet wird. false, wenn die Groß-/Kleinschreibung beachtet wird. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is either an empty string ("") or only contains white space.-or- <paramref name="value" /> is a name, but not one of the named constants defined for the enumeration. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in einen booleschen Wert.</summary>
      <returns>Dieser Member löst immer eine Ausnahme aus.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in ein Unicode-Zeichen.</summary>
      <returns>Dieser Member löst immer eine Ausnahme aus.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine <see cref="T:System.DateTime" />.</summary>
      <returns>Dieser Member löst immer eine Ausnahme aus.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine <see cref="T:System.Decimal" />.</summary>
      <returns>Dieser Member löst immer eine Ausnahme aus.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <returns>Dieser Member löst immer eine Ausnahme aus.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <returns>Dieser Member löst immer eine Ausnahme aus.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToString(System.IFormatProvider)">
      <summary>Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine Zeichenfolge.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in einen angegebenen Typ.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="type">Der Typ, in den konvertiert werden soll. </param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
    </member>
    <member name="M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Diese Methodenüberladung ist veraltet. Verwenden Sie <see cref="M:System.Enum.ToString(System.String)" />.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" />.</returns>
      <param name="format">Eine Formatangabe.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> does not contain a valid format specification. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="format" /> equals "X", but the enumeration type is unknown.</exception>
    </member>
    <member name="M:System.Enum.ToObject(System.Type,System.Object)">
      <summary>Konvertiert das angegebene Objekt mit einem ganzzahligen Wert in einen Enumerationsmember.</summary>
      <returns>Ein Enumerationsobjekt mit dem Wert <paramref name="value" />.</returns>
      <param name="enumType">Der zurückzugebende Enumerationstyp. </param>
      <param name="value">Der Wert, der in einen Enumerationsmember konvertiert werden soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.ToString">
      <summary>Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.ToString(System.String)">
      <summary>Konvertiert den Wert dieser Instanz anhand des angegebenen Formats in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" />.</returns>
      <param name="format">Eine Formatierungszeichenfolge. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> contains an invalid specification. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="format" /> equals "X", but the enumeration type is unknown.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
      <summary>Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.Ein Parameter gibt an, ob beim Vorgang die Groß-/Kleinschreibung beachtet wird.Der Rückgabewert gibt an, ob die Konvertierung erfolgreich abgeschlossen wurde.</summary>
      <returns>true, wenn der <paramref name="value" />-Parameter erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="value">Die Zeichenfolgendarstellung des Enumerationsnamens oder zugrunde liegenden Werts, der konvertiert werden soll.</param>
      <param name="ignoreCase">true, wenn die Groß-/Kleinschreibung nicht beachtet wird. false, wenn die Groß-/Kleinschreibung beachtet wird.</param>
      <param name="result">Wenn diese Methode zurückgibt, enthält <paramref name="result" /> ein Objekt des Typs <paramref name="TEnum" />, dessen Wert durch <paramref name="value" /> dargestellt wird, wenn der Analysevorgang erfolgreich ist.Wenn der Analysevorgang fehlschlägt, enthält <paramref name="result" /> den Standardwert des zugrunde liegenden Typs von <paramref name="TEnum" />.Beachten Sie, dass dieser Wert kein Mitglied der <paramref name="TEnum" />-Enumeration sein muss.Dieser Parameter wird nicht initialisiert übergeben.</param>
      <typeparam name="TEnum">Der Enumerationstyp, in den <paramref name="value" /> konvertiert werden soll.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="TEnum" /> is not an enumeration type.</exception>
    </member>
    <member name="M:System.Enum.TryParse``1(System.String,``0@)">
      <summary>Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.Der Rückgabewert gibt an, ob die Konvertierung erfolgreich abgeschlossen wurde.</summary>
      <returns>true, wenn der <paramref name="value" />-Parameter erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="value">Die Zeichenfolgendarstellung des Enumerationsnamens oder zugrunde liegenden Werts, der konvertiert werden soll.</param>
      <param name="result">Wenn diese Methode zurückgibt, enthält <paramref name="result" /> ein Objekt des Typs <paramref name="TEnum" />, dessen Wert durch <paramref name="value" /> dargestellt wird, wenn der Analysevorgang erfolgreich ist.Wenn der Analysevorgang fehlschlägt, enthält <paramref name="result" /> den Standardwert des zugrunde liegenden Typs von <paramref name="TEnum" />.Beachten Sie, dass dieser Wert kein Mitglied der <paramref name="TEnum" />-Enumeration sein muss.Dieser Parameter wird nicht initialisiert übergeben.</param>
      <typeparam name="TEnum">Der Enumerationstyp, in den <paramref name="value" /> konvertiert werden soll.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="TEnum" /> is not an enumeration type.</exception>
    </member>
    <member name="T:System.EventArgs">
      <summary>Stellt die Basisklasse für Klassen, die Ereignisdaten enthalten, dar und stellt einen Wert zur Verwendung für Ereignisse bereit, die keine Ereignisdaten enthalten. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.EventArgs.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.EventArgs" />-Klasse.</summary>
    </member>
    <member name="F:System.EventArgs.Empty">
      <summary>Stellt einen zu verwendenden Wert für Ereignisse, die keine Ereignisdaten haben.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.EventHandler">
      <summary>Stellt die Methode dar, die ein Ereignis behandelt, das keine Ereignisdaten besitzt.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.EventHandler.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.EventHandler.BeginInvoke(System.Object,System.EventArgs,System.AsyncCallback,System.Object)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.EventHandler.EndInvoke(System.IAsyncResult)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.EventHandler.Invoke(System.Object,System.EventArgs)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.EventHandler`1">
      <summary>Stellt die Methode dar, die ein Ereignis behandelt, wenn das Ereignisdaten bereitstellt. </summary>
      <typeparam name="TEventArgs">Der Typ der vom Ereignis generierten Ereignisdaten.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.EventHandler`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.EventHandler`1.BeginInvoke(System.Object,`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.EventHandler`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.EventHandler`1.Invoke(System.Object,`0)"></member>
    <member name="T:System.Exception">
      <summary>Stellt Fehler dar, die beim Ausführen einer Anwendung auftreten.Informationen zum Durchsuchen des .NET Framework-Quellcodes für diesen Typ finden Sie in der Verweisquelle.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Exception.#ctor">
      <summary>Initialisiert eine neue Instanz der<see cref="T:System.Exception" />-Klasse.</summary>
    </member>
    <member name="M:System.Exception.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Exception" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird. </param>
    </member>
    <member name="M:System.Exception.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Exception" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (Nothing in Visual Basic), wenn keine innere Ausnahme angegeben ist. </param>
    </member>
    <member name="P:System.Exception.Data">
      <summary>Ruft eine Auflistung von Schlüssel-Wert-Paaren ab, die zusätzliche benutzerdefinierte Informationen über die Ausnahme bereitstellen.</summary>
      <returns>Ein Objekt, das die <see cref="T:System.Collections.IDictionary" />-Schnittstelle implementiert und eine Auflistung benutzerdefinierter Schlüssel-Wert-Paare enthält.Der Standard ist eine leere Auflistung.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Exception.GetBaseException">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse eine <see cref="T:System.Exception" /> zurück, die die ursprüngliche Ursache für eine oder mehrere nachfolgende Ausnahmen ist.</summary>
      <returns>Die erste Ausnahme, die in einer Kette von Ausnahmen ausgelöst wird.Wenn die <see cref="P:System.Exception.InnerException" />-Eigenschaft der aktuellen Ausnahme ein NULL-Verweis (Nothing in Visual Basic) ist, gibt diese Eigenschaft die aktuelle Ausnahme zurück.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Exception.HelpLink">
      <summary>Ruft einen Link zur Hilfedatei ab, die dieser Ausnahme zugeordnet ist, oder legt einen Link fest.</summary>
      <returns>Der URN (Uniform Resource Name) oder die URL (Uniform Resource Locator).</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Exception.HResult">
      <summary>Ruft HRESULT ab oder legt HRESULT fest. Dies ist ein codierter Wert, der einer bestimmten Ausnahme zugeordnet ist.</summary>
      <returns>Der HRESULT-Wert.</returns>
    </member>
    <member name="P:System.Exception.InnerException">
      <summary>Ruft die <see cref="T:System.Exception" />-Instanz ab, die die aktuelle Ausnahme verursacht hat.</summary>
      <returns>Eine Instanz, die den Fehler beschreibt, der die aktuelle Ausnahme verursacht hat.Die <see cref="P:System.Exception.InnerException" />-Eigenschaft gibt gleichen Wert zurück, der an den <see cref="M:System.Exception.#ctor(System.String,System.Exception)" />-Konstruktor übergeben wurde, oder null, wenn der Wert der inneren Ausnahme nicht an den Konstruktor übergeben wurde.Diese Eigenschaft ist schreibgeschützt.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Exception.Message">
      <summary>Ruft eine Meldung ab, die die aktuelle Ausnahme beschreibt.</summary>
      <returns>Die Fehlermeldung, die die Ursache der Ausnahme erklärt, bzw. eine leere Zeichenfolge ("").</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Exception.Source">
      <summary>Gibt den Namen der Anwendung oder des Objekts zurück, die bzw. das den Fehler verursacht hat, oder legt diesen fest.</summary>
      <returns>Der Name der Anwendung oder des Objekts, die bzw. das den Fehler verursacht hat.</returns>
      <exception cref="T:System.ArgumentException">The object must be a runtime <see cref="N:System.Reflection" /> object</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Exception.StackTrace">
      <summary>Ruft eine Zeichenfolgendarstellung der unmittelbaren Frames in der Aufrufliste ab.</summary>
      <returns>Eine Zeichenfolge, die die unmittelbaren Frames der Aufrufliste beschreibt.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Exception.ToString">
      <summary>Erstellt eine Zeichenfolgendarstellung der aktuellen Ausnahme und gibt diese zurück.</summary>
      <returns>Eine Zeichenfolgendarstellung der aktuellen Ausnahme.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.FieldAccessException">
      <summary>Die Ausnahme, die bei einem ungültigen Versuch ausgelöst wird, auf ein privates oder geschütztes Feld innerhalb einer Klasse zuzugreifen.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.FieldAccessException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.FieldAccessException" />-Klasse.</summary>
    </member>
    <member name="M:System.FieldAccessException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.FieldAccessException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.FieldAccessException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.FieldAccessException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="inner" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.FlagsAttribute">
      <summary>Gibt an, dass eine Enumeration als Bitfeld, d. h. als Gruppe von Flags, behandelt werden kann.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.FlagsAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.FlagsAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.FormatException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn das Format eines Arguments ungültig ist, oder wenn eine kombinierte Formatierungszeichenfolge nicht wohlgeformt ist. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.FormatException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.FormatException" />-Klasse.</summary>
    </member>
    <member name="M:System.FormatException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.FormatException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird. </param>
    </member>
    <member name="M:System.FormatException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.FormatException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter kein NULL-Verweis ist (Nothing in Visual Basic), wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.FormattableString">
      <summary>Stellt eine kombinierte Formatzeichenfolge, die zusammen mit den Argumenten zu formatierende dar. </summary>
    </member>
    <member name="M:System.FormattableString.#ctor">
      <summary>Instanziiert eine neue Instanz der <see cref="T:System.FormattableString" />-Klasse. </summary>
    </member>
    <member name="P:System.FormattableString.ArgumentCount">
      <summary>Ruft die Anzahl der Argumente formatiert werden. </summary>
      <returns>Die Anzahl der Argumente formatiert werden. </returns>
    </member>
    <member name="P:System.FormattableString.Format">
      <summary>Gibt die kombinierte Formatzeichenfolge. </summary>
      <returns>Die zusammengesetzte Formatzeichenfolge. </returns>
    </member>
    <member name="M:System.FormattableString.GetArgument(System.Int32)">
      <summary>Gibt das Argument an der angegebenen Indexposition. </summary>
      <returns>Das Argument. </returns>
      <param name="index">Der Index des Arguments.Sein Wert reichen von 0 (null) bis eins weniger, als der Wert der <see cref="P:System.FormattableString.ArgumentCount" />.</param>
    </member>
    <member name="M:System.FormattableString.GetArguments">
      <summary>Gibt ein Objektarray, das ein oder mehrere Objekte zum Formatieren enthält. </summary>
      <returns>Ein Objektarray, das ein oder mehrere Objekte zum Formatieren enthält. </returns>
    </member>
    <member name="M:System.FormattableString.Invariant(System.FormattableString)">
      <summary>Gibt eine Ergebniszeichenfolge, die in der Argumente mit den Konventionen der invarianten Kultur formatiert werden. </summary>
      <returns>Die Zeichenfolge, die aus die aktuelle Instanz mit den Konventionen der invarianten Kultur zu formatieren. </returns>
      <param name="formattable">Das Objekt, das in eine Ergebniszeichenfolge zu konvertieren. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="formattable" /> ist null. </exception>
    </member>
    <member name="M:System.FormattableString.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Gibt die Zeichenfolge zurück, die aus die Formatzeichenfolge zusammen mit den Argumenten unter Verwendung der Formatierungskonventionen einer angegebenen Kultur zu formatieren. </summary>
      <returns>Eine Zeichenfolge formatiert entsprechend den Konventionen der <paramref name="formatProvider" /> Parameter. </returns>
      <param name="ignored">Eine Zeichenfolge.Dieses Argument wird ignoriert.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
    </member>
    <member name="M:System.FormattableString.ToString">
      <summary>Gibt die Zeichenfolge zurück, die aus die kombinierten Formatzeichenfolge zusammen mit den Argumenten mithilfe der Formatierungskonventionen der aktuellen Kultur zu formatieren. </summary>
      <returns>Eine Ergebniszeichenfolge, die mit den Konventionen der aktuellen Kultur formatiert. </returns>
    </member>
    <member name="M:System.FormattableString.ToString(System.IFormatProvider)">
      <summary>Gibt die Zeichenfolge zurück, die aus die kombinierten Formatzeichenfolge zusammen mit den Argumenten unter Verwendung der Formatierungskonventionen einer angegebenen Kultur zu formatieren. </summary>
      <returns>Eine Ergebniszeichenfolge formatiert wird, indem Sie mit den Konventionen der <paramref name="formatProvider" />. </returns>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
    </member>
    <member name="T:System.Func`1">
      <summary>Kapselt eine Methode, die über keine Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <paramref name="TResult" />-Parameter angegeben wird.</summary>
      <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Func`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`1.BeginInvoke(System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`1.Invoke"></member>
    <member name="T:System.Func`10">
      <summary>Kapselt eine Methode, die über neun Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <paramref name="TResult" />-Parameter angegeben wird.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T8">Der Typ des achten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T9">Der Typ des neunten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`10.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`10.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`10.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`10.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8)"></member>
    <member name="T:System.Func`11">
      <summary>Kapselt eine Methode, die über 10 Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <paramref name="TResult" />-Parameter angegeben wird.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T8">Der Typ des achten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T9">Der Typ des neunten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T10">Der Typ des zehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`11.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`11.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`11.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`11.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)"></member>
    <member name="T:System.Func`12">
      <summary>Kapselt eine Methode, die über 11 Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <paramref name="TResult" />-Parameter angegeben wird.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T8">Der Typ des achten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T9">Der Typ des neunten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T10">Der Typ des zehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T11">Der Typ des elften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`12.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`12.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`12.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`12.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)"></member>
    <member name="T:System.Func`13">
      <summary>Kapselt eine Methode, die über 12 Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <paramref name="TResult" />-Parameter angegeben wird.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T8">Der Typ des achten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T9">Der Typ des neunten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T10">Der Typ des zehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T11">Der Typ des elften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T12">Der Typ des zwölften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`13.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`13.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`13.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`13.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)"></member>
    <member name="T:System.Func`14">
      <summary>Kapselt eine Methode, die über 13 Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <paramref name="TResult" />-Parameter angegeben wird.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T8">Der Typ des achten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T9">Der Typ des neunten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T10">Der Typ des zehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T11">Der Typ des elften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T12">Der Typ des zwölften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T13">Der Typ des dreizehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`14.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`14.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`14.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`14.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)"></member>
    <member name="T:System.Func`15">
      <summary>Kapselt eine Methode, die über 14 Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <paramref name="TResult" />-Parameter angegeben wird.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T8">Der Typ des achten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T9">Der Typ des neunten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T10">Der Typ des zehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T11">Der Typ des elften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T12">Der Typ des zwölften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T13">Der Typ des dreizehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T14">Der Typ des vierzehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`15.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`15.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`15.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`15.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)"></member>
    <member name="T:System.Func`16">
      <summary>Kapselt eine Methode, die über 15 Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <paramref name="TResult" />-Parameter angegeben wird.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T8">Der Typ des achten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T9">Der Typ des neunten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T10">Der Typ des zehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T11">Der Typ des elften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T12">Der Typ des zwölften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T13">Der Typ des dreizehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T14">Der Typ des vierzehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T15">Der Typ des fünfzehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`16.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`16.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`16.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`16.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)"></member>
    <member name="T:System.Func`17">
      <summary>Kapselt eine Methode, die über 16 Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <paramref name="TResult" />-Parameter angegeben wird.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T8">Der Typ des achten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T9">Der Typ des neunten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T10">Der Typ des zehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T11">Der Typ des elften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T12">Der Typ des zwölften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T13">Der Typ des dreizehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T14">Der Typ des vierzehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T15">Der Typ des fünfzehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T16">Der Typ des sechzehnten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`17.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`17.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`17.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`17.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)"></member>
    <member name="T:System.Func`2">
      <summary>Kapselt eine Methode, die über einen Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <paramref name="TResult" />-Parameter angegeben wird.Weitere Informationen zum Durchsuchen des .NET Framework-Quellcodes für diesen Typ finden Sie unter Verweisquelle.</summary>
      <typeparam name="T">Der Typ des Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`2.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`2.BeginInvoke(`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`2.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`2.Invoke(`0)"></member>
    <member name="T:System.Func`3">
      <summary>Kapselt eine Methode, die über zwei Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <paramref name="TResult" />-Parameter angegeben wird.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`3.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`3.BeginInvoke(`0,`1,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`3.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`3.Invoke(`0,`1)"></member>
    <member name="T:System.Func`4">
      <summary>Kapselt eine Methode, die über drei Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <paramref name="TResult" />-Parameter angegeben wird.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`4.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`4.BeginInvoke(`0,`1,`2,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`4.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`4.Invoke(`0,`1,`2)"></member>
    <member name="T:System.Func`5">
      <summary>Kapselt eine Methode, die über vier Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <paramref name="TResult" />-Parameter angegeben wird.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`5.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`5.BeginInvoke(`0,`1,`2,`3,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`5.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`5.Invoke(`0,`1,`2,`3)"></member>
    <member name="T:System.Func`6">
      <summary>Kapselt eine Methode, die über fünf Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <paramref name="TResult" />-Parameter angegeben wird.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`6.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`6.BeginInvoke(`0,`1,`2,`3,`4,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`6.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`6.Invoke(`0,`1,`2,`3,`4)"></member>
    <member name="T:System.Func`7">
      <summary>Kapselt eine Methode, die über sechs Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <paramref name="TResult" />-Parameter angegeben wird.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`7.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`7.BeginInvoke(`0,`1,`2,`3,`4,`5,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`7.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`7.Invoke(`0,`1,`2,`3,`4,`5)"></member>
    <member name="T:System.Func`8">
      <summary>Kapselt eine Methode, die über sieben Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <paramref name="TResult" />-Parameter angegeben wird.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`8.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`8.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`8.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`8.Invoke(`0,`1,`2,`3,`4,`5,`6)"></member>
    <member name="T:System.Func`9">
      <summary>Kapselt eine Methode, die über acht Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <paramref name="TResult" />-Parameter angegeben wird.</summary>
      <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T6">Der Typ des sechsten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T7">Der Typ des siebten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="T8">Der Typ des achten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
      <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`9.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Func`9.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Func`9.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Func`9.Invoke(`0,`1,`2,`3,`4,`5,`6,`7)"></member>
    <member name="T:System.GC">
      <summary>Steuert den Garbage Collector des Systems. Das ist ein Dienst, der nicht verwendeten Speicher automatisch freigibt.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.GC.AddMemoryPressure(System.Int64)">
      <summary>Informiert die Laufzeit über eine große Belegung von nicht verwaltetem Arbeitsspeicher, der beim Planen der Garbage Collection in Erwägung gezogen werden muss.</summary>
      <param name="bytesAllocated">Die inkrementelle Menge an nicht verwaltetem Arbeitsspeicher, die belegt wurde. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bytesAllocated" /> ist kleiner oder gleich 0.- oder - Auf einem 32-Bit-Computer ist <paramref name="bytesAllocated" /> größer als <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.GC.Collect">
      <summary>Erzwingt eine sofortige Garbage Collection für alle Generationen. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.Collect(System.Int32)">
      <summary>Erzwingt eine sofortige Garbage Collection von Generation 0 (null) bis zu einer angegebenen Generation.</summary>
      <param name="generation">Die Anzahl der ältesten Generation, für die die Garbage Collection durchgeführt werden soll. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" /> ist nicht gültig. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.Collect(System.Int32,System.GCCollectionMode)">
      <summary>Erzwingt eine Garbage Collection von Generation 0 (null) bis zu einer angegebenen Generation zu einem durch einen <see cref="T:System.GCCollectionMode" />-Wert angegebenen Zeitpunkt.</summary>
      <param name="generation">Die Anzahl der ältesten Generation, für die die Garbage Collection durchgeführt werden soll. </param>
      <param name="mode">Ein Enumerationswert, der angibt, ob die Garbage Collection erzwungen (<see cref="F:System.GCCollectionMode.Default" /> oder <see cref="F:System.GCCollectionMode.Forced" />) oder optimiert wird (<see cref="F:System.GCCollectionMode.Optimized" />). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" /> ist nicht gültig.- oder - <paramref name="mode" /> ist keiner der <see cref="T:System.GCCollectionMode" />-Werte.</exception>
    </member>
    <member name="M:System.GC.Collect(System.Int32,System.GCCollectionMode,System.Boolean)">
      <summary>Erzwingt eine Garbage Collection von Generation 0 (null) bis zu einer angegebenen Generation, angegeben durch jeweils einen <see cref="T:System.GCCollectionMode" />-Wert und mit einem Wert, der angibt, ob die Auflistung blockieren soll.</summary>
      <param name="generation">Die Anzahl der ältesten Generation, für die die Garbage Collection durchgeführt werden soll. </param>
      <param name="mode">Ein Enumerationswert, der angibt, ob die Garbage Collection erzwungen (<see cref="F:System.GCCollectionMode.Default" /> oder <see cref="F:System.GCCollectionMode.Forced" />) oder optimiert wird (<see cref="F:System.GCCollectionMode.Optimized" />). </param>
      <param name="blocking">true, um eine blockierende Garbage Collection auszuführen; false, um eine Garbage Collection im Hintergrund auszuführen, sofern möglich.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" /> ist nicht gültig.- oder - <paramref name="mode" /> ist keiner der <see cref="T:System.GCCollectionMode" />-Werte.</exception>
    </member>
    <member name="M:System.GC.CollectionCount(System.Int32)">
      <summary>Gib die Anzahl zurück, wie oft die Garbage Collection für die angegebene Objektgeneration stattgefunden hat.</summary>
      <returns>Die Häufigkeit der Durchführung der Garbage Collection für die angegebene Generation, seitdem der Prozess gestartet wurde.</returns>
      <param name="generation">Die Objektgeneration, für die ermittelt werden soll, wie oft die Garbage Collection stattgefunden hat. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" /> ist kleiner als 0. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.GetGeneration(System.Object)">
      <summary>Gibt die aktuelle Generationszahl des angegebenen Objekts zurück.</summary>
      <returns>Die aktuelle Generationszahl von <paramref name="obj" />.</returns>
      <param name="obj">Das Objekt, dessen Generationsdaten abgerufen werden. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.GetTotalMemory(System.Boolean)">
      <summary>Ruft einen Schätzwert für die reservierte Anzahl von Bytes ab.Ein Parameter gibt an, ob diese Methode vor der Rückgabe eine kurze Zeit warten kann, damit das System die Garbage Collection durchführen und Objekte finalisieren kann.</summary>
      <returns>Die bestmögliche Annäherung an die Anzahl der derzeit im verwalteten Speicher belegten Bytes.</returns>
      <param name="forceFullCollection">true, um anzugeben, dass diese Methode vor der Rückgabe auf die Garbage Collection warten kann, andernfalls false.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.KeepAlive(System.Object)">
      <summary>Verweist auf das angegebene Objekt und nimmt es von Beginn der aktuellen Routine bis zum Zeitpunkt des Aufrufs dieser Methode von der Garbage Collection aus.</summary>
      <param name="obj">Das Objekt, auf das verwiesen werden soll. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.GC.MaxGeneration">
      <summary>Ruft die maximale Anzahl von Generationen ab, die das System gegenwärtig unterstützt.</summary>
      <returns>Ein Wert zwischen 0 (null) und der Höchstanzahl der unterstützten Generationen.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.RemoveMemoryPressure(System.Int64)">
      <summary>Informiert die Laufzeit, dass nicht verwalteter Arbeitsspeicher freigegeben wurde und beim Planen der Garbage Collection nicht mehr berücksichtigt werden muss.</summary>
      <param name="bytesAllocated">Die Menge an nicht verwaltetem Arbeitsspeicher, die freigegeben wurde. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bytesAllocated" /> ist kleiner oder gleich 0. - oder -  Auf einem 32-Bit-Computer ist <paramref name="bytesAllocated" /> größer als <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.GC.ReRegisterForFinalize(System.Object)">
      <summary>Fordert beim System den Aufruf des Finalizers für das angegebene Objekt an, für das zuvor <see cref="M:System.GC.SuppressFinalize(System.Object)" /> aufgerufen wurde.</summary>
      <param name="obj">Das Objekt, für das ein Finalizer aufgerufen werden muss. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> ist null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.SuppressFinalize(System.Object)">
      <summary>Fordert die Common Language Runtime auf, den Finalizer für das angegebene Objekt nicht aufzurufen. </summary>
      <param name="obj">Das Objekt, dessen Finalizer nicht ausgeführt werden darf. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> ist null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.WaitForPendingFinalizers">
      <summary>Hält den aktuellen Thread so lange an, bis der Thread, der die Finalizerwarteschlange verarbeitet, diese Warteschlange geleert hat.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.GCCollectionMode">
      <summary>Gibt das Verhalten für eine erzwungene Garbage Collection an.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.GCCollectionMode.Default">
      <summary>Die Standardeinstellung für diese Enumeration, die derzeit <see cref="F:System.GCCollectionMode.Forced" /> ist. </summary>
    </member>
    <member name="F:System.GCCollectionMode.Forced">
      <summary>Erzwingt die sofortige Durchführung der Garbage Collection.</summary>
    </member>
    <member name="F:System.GCCollectionMode.Optimized">
      <summary>Ermöglicht dem Garbage Collector zu bestimmten, ob der aktuelle Zeitpunkt zum Freigeben von Objekten optimal ist. </summary>
    </member>
    <member name="T:System.Guid">
      <summary>Stellt eine GUID dar (Globally Unique Identifier, globaler eindeutiger Bezeichner).Um den .NET Framework-Quellcode für diesen Typ zu durchsuchen, rufen Sie die Verweisquelle auf.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.#ctor(System.Byte[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Guid" />-Struktur unter Verwendung des angegebenen Bytearrays.</summary>
      <param name="b">Ein aus 16 Elementen bestehendes Bytearray mit Werten, mit denen die GUID initialisiert wird. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="b" /> ist null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="b" /> hat keine Länge von 16 Bytes. </exception>
    </member>
    <member name="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Guid" />-Struktur unter Verwendung der angegebenen Ganzzahlen und der angegebenen Bytes.</summary>
      <param name="a">Die ersten 4 Bytes der GUID. </param>
      <param name="b">Die nächsten 2 Bytes der GUID. </param>
      <param name="c">Die nächsten 2 Bytes der GUID. </param>
      <param name="d">Das nächste Byte der GUID. </param>
      <param name="e">Das nächste Byte der GUID. </param>
      <param name="f">Das nächste Byte der GUID. </param>
      <param name="g">Das nächste Byte der GUID. </param>
      <param name="h">Das nächste Byte der GUID. </param>
      <param name="i">Das nächste Byte der GUID. </param>
      <param name="j">Das nächste Byte der GUID. </param>
      <param name="k">Das nächste Byte der GUID. </param>
    </member>
    <member name="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Guid" />-Struktur unter Verwendung der angegebenen Ganzzahlen und der angegebenen Bytes.</summary>
      <param name="a">Die ersten 4 Bytes der GUID. </param>
      <param name="b">Die nächsten 2 Bytes der GUID. </param>
      <param name="c">Die nächsten 2 Bytes der GUID. </param>
      <param name="d">Die restlichen 8 Bytes der GUID. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> ist null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="d" /> hat keine Länge von 8 Bytes. </exception>
    </member>
    <member name="M:System.Guid.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Guid" />-Struktur unter Verwendung des von der angegebenen Zeichenfolge dargestellten Werts.</summary>
      <param name="g">Eine Zeichenfolge, die eine GUID in einem der folgenden Formate enthält ("z" stellt eine Hexadezimalziffer dar, bei der die Groß- und Kleinschreibung nicht berücksichtigt wird): 32 aufeinander folgende Ziffern: zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz - oder -  Gruppen von 8, 4, 4, 4 und 12 Ziffern, die durch Bindestriche verbunden sind.Die gesamte GUID kann optional in zueinander passende geschweifte oder einfache Klammern eingeschlossen werden:zzzzzzzz-zzzz-zzzz-zzzz-zzzzzzzzzzzz - oder -  {zzzzzzzz-zzzz-zzzz-zzzz-zzzzzzzzzzzz} - oder -  (zzzzzzzz-zzzz-zzzz-zzzz-zzzzzzzzzzzz) - oder -  Gruppen von 8, 4 und 4 Ziffern und eine Untergruppe von acht Gruppen zu je 2 Ziffern mit dem Präfix "0x" bzw. "0X", die durch Kommas getrennt sind.Die gesamte GUID und die Untergruppe wird in zueinander passende Klammern eingeschlossen:{0xzzzzzzzz, 0xzzzz, 0xzzzz,{0xzz,0xzz,0xzz,0xzz,0xzz,0xzz,0xzz,0xzz}} Dabei sind die Klammern, die Kommas und die "0x"-Präfixe erforderlich.Eingebettete Leerzeichen werden ignoriert.Führende Nullen in einer Gruppe werden ignoriert.Die in einer Gruppe angezeigten Ziffern stellen die maximale Anzahl der in einer Gruppe zulässigen auswertbaren Ziffern dar.Sie können dabei eine Anzahl von Ziffern zwischen 1 und der für eine Gruppe angezeigten Anzahl angeben.Die angegebenen Ziffern werden dabei als die zuletzt stehenden Ziffern der Gruppe ausgewertet.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> ist null. </exception>
      <exception cref="T:System.FormatException">Das Format von <paramref name="g" /> ist ungültig. </exception>
      <exception cref="T:System.OverflowException">Das Format von <paramref name="g" /> ist ungültig. </exception>
    </member>
    <member name="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Guid" />-Struktur unter Verwendung der angegebenen Ganzzahlen und der angegebenen Bytes.</summary>
      <param name="a">Die ersten 4 Bytes der GUID. </param>
      <param name="b">Die nächsten 2 Bytes der GUID. </param>
      <param name="c">Die nächsten 2 Bytes der GUID. </param>
      <param name="d">Das nächste Byte der GUID. </param>
      <param name="e">Das nächste Byte der GUID. </param>
      <param name="f">Das nächste Byte der GUID. </param>
      <param name="g">Das nächste Byte der GUID. </param>
      <param name="h">Das nächste Byte der GUID. </param>
      <param name="i">Das nächste Byte der GUID. </param>
      <param name="j">Das nächste Byte der GUID. </param>
      <param name="k">Das nächste Byte der GUID. </param>
    </member>
    <member name="M:System.Guid.CompareTo(System.Guid)">
      <summary>Vergleicht diese Instanz mit einem angegebenen <see cref="T:System.Guid" />-Objekt und gibt eine Angabe über das Verhältnis der entsprechenden Werte zurück.</summary>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser Instanz und <paramref name="value" /> angibt.Rückgabewert Beschreibung  Eine negative ganze Zahl Diese Instanz ist kleiner als <paramref name="value" />. Zero Diese Instanz ist gleich <paramref name="value" />. Eine positive ganze Zahl Diese Instanz ist größer als <paramref name="value" />. </returns>
      <param name="value">Ein mit dieser Instanz zu vergleichendes Objekt.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Guid.Empty">
      <summary>Eine schreibgeschützte Instanz der <see cref="T:System.Guid" />-Struktur, in der alle Werte 0 (null) sind.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.Equals(System.Guid)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz und ein angegebenes <see cref="T:System.Guid" />-Objekt den gleichen Wert darstellen.</summary>
      <returns>true, wenn <paramref name="g" /> gleich dieser Instanz ist, andernfalls false.</returns>
      <param name="g">Ein mit dieser Instanz zu vergleichendes Objekt.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn <paramref name="o" /> eine <see cref="T:System.Guid" /> ist, die denselben Wert wie diese Instanz hat; andernfalls false.</returns>
      <param name="o">Das Objekt, das mit dieser Instanz verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Der Hashcode für diese Instanz.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.NewGuid">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Guid" />-Struktur.</summary>
      <returns>Ein neues GUID-Objekt.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.op_Equality(System.Guid,System.Guid)">
      <summary>Gibt an, ob die Werte von zwei angegebenen <see cref="T:System.Guid" />-Objekten gleich sind.</summary>
      <returns>true, wenn <paramref name="a" /> und <paramref name="b" /> gleich sind, andernfalls false.</returns>
      <param name="a">Das erste zu vergleichende Objekt. </param>
      <param name="b">Das zweite zu vergleichende Objekt. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Guid.op_Inequality(System.Guid,System.Guid)">
      <summary>Gibt an, ob die Werte von zwei angegebenen <see cref="T:System.Guid" />-Objekten gleich sind.</summary>
      <returns>true, wenn <paramref name="a" /> und <paramref name="b" /> ungleich sind, andernfalls false.</returns>
      <param name="a">Das erste zu vergleichende Objekt. </param>
      <param name="b">Das zweite zu vergleichende Objekt. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Guid.Parse(System.String)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer GUID in die entsprechende <see cref="T:System.Guid" />-Struktur.</summary>
      <returns>Eine Struktur, die den analysierten Wert enthält.</returns>
      <param name="input">Die zu konvertierende Zeichenfolge.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> weist kein erkanntes Format auf.</exception>
    </member>
    <member name="M:System.Guid.ParseExact(System.String,System.String)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer GUID in die entsprechende <see cref="T:System.Guid" />-Struktur, vorausgesetzt, dass die Zeichenfolge das angegebene Format hat.</summary>
      <returns>Eine Struktur, die den analysierten Wert enthält.</returns>
      <param name="input">Die zu konvertierende GUID.</param>
      <param name="format">Einer der folgenden Bezeichner, der das beim Interpretieren von <paramref name="input" /> zu verwendende genaue Format angibt: "N", "D", "B", "P" oder "X".</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> oder <paramref name="format" /> ist null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" />befindet sich nicht in dem angegebenen Format <paramref name="format" />.</exception>
    </member>
    <member name="M:System.Guid.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht diese Instanz mit einem angegebenen Objekt und gibt eine Angabe über das Verhältnis der entsprechenden Werte zurück. </summary>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser Instanz und <paramref name="value" /> angibt.Rückgabewert Beschreibung  Eine negative ganze Zahl Diese Instanz ist kleiner als <paramref name="value" />. Zero Diese Instanz ist gleich <paramref name="value" />. Eine positive ganze Zahl Diese Instanz ist größer als <paramref name="value" />, oder <paramref name="value" /> ist null. </returns>
      <param name="value">Ein Vergleichsobjekt oder null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> ist keine <see cref="T:System.Guid" />. </exception>
    </member>
    <member name="M:System.Guid.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Gibt eine Zeichenfolgendarstellung des Werts dieser Instanz entsprechend dem angegebenen Formatbezeichner zurück.</summary>
      <returns>Der Wert dieser <see cref="T:System.Guid" />, der als Folge von hexadezimalen, kleingeschriebenen Ziffern im angegebenen Format dargestellt wird.</returns>
      <param name="format">Ein einzelner Formatbezeichner, der angibt, wie der Wert dieser <see cref="T:System.Guid" /> formatiert wird.Der <paramref name="format" />-Parameter kann "N", "D", "B", "P" oder "X" sein.Wenn <paramref name="format" />null oder eine leere Zeichenfolge ist (""), wird "D" verwendet.</param>
      <param name="provider">(Reserviert) Ein Objekt, das kulturabhängige Formatierungsinformationen bereitstellt.</param>
      <exception cref="T:System.FormatException">Der Wert von <paramref name="format" /> ist nicht null, eine leere Zeichenfolge ("") oder einer der folgenden einzelnen Formatbezeichner: "N", "D", "B", "P" oder "X".</exception>
    </member>
    <member name="M:System.Guid.ToByteArray">
      <summary>Gibt ein aus 16 Elementen bestehendes Bytearray zurück, das den Wert dieser Instanz enthält.</summary>
      <returns>Ein aus 16 Elementen bestehendes Bytearray.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.ToString">
      <summary>Gibt eine Zeichenfolgendarstellung des Werts dieser Instanz im Registrierungsformat zurück.</summary>
      <returns>Der Wert dieser <see cref="T:System.Guid" />, wie folgt mit dem Formatbezeichner "D" formatiert:  xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx Dabei wird der Wert der GUID als Folge von hexadezimalen, klein geschriebenen Ziffern in Gruppen von 8, 4, 4, 4 und 12 Ziffern dargestellt, die durch Bindestriche voneinander getrennt sind.Ein Beispiel eines Rückgabewerts ist "382c74c3-721d-4f34-80e5-57657b6cbc27".Um die Hexadezimalzeichen von a bis f in Großbuchstaben zu konvertieren, rufen Sie die <see cref="M:System.String.ToUpper" />-Methode  auf der zurückgegebenen Zeichenfolge auf.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.ToString(System.String)">
      <summary>Gibt eine Zeichenfolgendarstellung des Werts dieser <see cref="T:System.Guid" />-Instanz entsprechend dem angegebenen Formatbezeichner zurück.</summary>
      <returns>Der Wert dieser <see cref="T:System.Guid" />, der als Folge von hexadezimalen, kleingeschriebenen Ziffern im angegebenen Format dargestellt wird. </returns>
      <param name="format">Ein einzelner Formatbezeichner, der angibt, wie der Wert dieser <see cref="T:System.Guid" /> formatiert wird.Der <paramref name="format" />-Parameter kann "N", "D", "B", "P" oder "X" sein.Wenn <paramref name="format" />null oder eine leere Zeichenfolge ist (""), wird "D" verwendet.</param>
      <exception cref="T:System.FormatException">Der Wert von <paramref name="format" /> lautet nicht null, eine leere Zeichenfolge (""), "N", "D", "B", "P" oder "X". </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.TryParse(System.String,System.Guid@)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer GUID in die entsprechende <see cref="T:System.Guid" />-Struktur. </summary>
      <returns>true, wenn der Analysevorgang erfolgreich war, andernfalls false.</returns>
      <param name="input">Die zu konvertierende GUID.</param>
      <param name="result">Die Struktur, die den analysierten Wert enthalten wird.Wenn die Methode true zurückgibt, enthält <paramref name="result" /> gültiges <see cref="T:System.Guid" />.Wenn die Methode false zurückgibt, gleicht <paramref name="result" /><see cref="F:System.Guid.Empty" />.</param>
    </member>
    <member name="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer GUID in die entsprechende <see cref="T:System.Guid" />-Struktur, vorausgesetzt, dass die Zeichenfolge das angegebene Format hat.</summary>
      <returns>true, wenn der Analysevorgang erfolgreich war, andernfalls false.</returns>
      <param name="input">Die zu konvertierende GUID.</param>
      <param name="format">Einer der folgenden Bezeichner, der das beim Interpretieren von <paramref name="input" /> zu verwendende genaue Format angibt: "N", "D", "B", "P" oder "X".</param>
      <param name="result">Die Struktur, die den analysierten Wert enthalten wird.Wenn die Methode true zurückgibt, enthält <paramref name="result" /> gültiges <see cref="T:System.Guid" />.Wenn die Methode false zurückgibt, gleicht <paramref name="result" /><see cref="F:System.Guid.Empty" />.</param>
    </member>
    <member name="T:System.IAsyncResult">
      <summary>Stellt den Status eines asynchronen Vorgangs dar. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.AsyncState">
      <summary>Ruft ein benutzerdefiniertes Objekt ab, das einen asynchronen Vorgang beschreibt oder Informationen darüber enthält.</summary>
      <returns>Ein benutzerdefiniertes Objekt, das einen asynchronen Vorgang beschreibt oder Informationen darüber enthält.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.AsyncWaitHandle">
      <summary>Ruft eine <see cref="T:System.Threading.WaitHandle" />-Klasse auf, die für das Warten auf den Abschluss eines asynchronen Vorgangs verwendet wird.</summary>
      <returns>Eine <see cref="T:System.Threading.WaitHandle" />-Klasse, die für das Warten auf den Abschluss eines asynchronen Vorgangs verwendet wird.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.CompletedSynchronously">
      <summary>Ruft einen Wert ab, der angibt, ob der asynchrone Vorgang synchron abgeschlossen wurde.</summary>
      <returns>true, wenn der asynchrone Vorgang synchron abgeschlossen wurde, andernfalls false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.IsCompleted">
      <summary>Ruft einen Wert ab, der angibt, ob der asynchrone Vorgang abgeschlossen wurde.</summary>
      <returns>true, wenn der Vorgang abgeschlossen ist, andernfalls false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IComparable">
      <summary>Definiert eine allgemeine typspezifische Vergleichsmethode, die von einem Werttyp oder einer Klasse implementiert werden, um ihre Instanzen anzuordnen oder zu sortieren.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IComparable.CompareTo(System.Object)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Ein Wert, der die relative Reihenfolge der verglichenen Objekte angibt.Der Rückgabewert hat folgende Bedeutung:Wert Bedeutung Kleiner als 0 Diese Instanz befindet sich in der Sortierreihenfolge vor <paramref name="obj" />. Zero Diese Instanz tritt in der Sortierreihenfolge an der gleichen Position wie <paramref name="obj" /> auf. Größer als 0 (null) Diese Instanz folgt in der Sortierreihenfolge auf <paramref name="obj" />. </returns>
      <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> hat nicht denselben Typ wie diese Instanz. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IComparable`1">
      <summary>Definiert eine allgemeine Vergleichsmethode, die von einem Werttyp oder einer Klasse für die Erstellung einer typspezifischen Vergleichsmethode zum Ordnen oder Sortieren von Instanzen implementiert wird.</summary>
      <typeparam name="T">Der Typ der zu vergleichenden Objekte. Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IComparable`1.CompareTo(`0)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt. </summary>
      <returns>Ein Wert, der die relative Reihenfolge der verglichenen Objekte angibt.Der Rückgabewert hat folgende Bedeutung:Wert Bedeutung Kleiner als 0 (null) Diese Instanz befindet sich in der Sortierreihenfolge vor <paramref name="other" />.  Zero Diese Instanz tritt in der Sortierreihenfolge an der gleichen Position wie <paramref name="other" /> auf. Größer als 0 (null) Diese Instanz folgt in der Sortierreihenfolge auf <paramref name="other" />. </returns>
      <param name="other">Ein Objekt, das mit dieser Instanz verglichen werden soll. </param>
    </member>
    <member name="T:System.IConvertible">
      <summary>Definiert Methoden für die Konvertierung des Implementierungsverweis- oder -werttyps in einen Typ der Common Language Runtime mit einem entsprechenden Wert.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.GetTypeCode">
      <summary>Gibt den <see cref="T:System.TypeCode" /> für diese Instanz zurück.</summary>
      <returns>Die Enumerationskonstante, die den <see cref="T:System.TypeCode" /> des Klassen- oder Werttyps darstellt, der diese Schnittstelle implementiert.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToBoolean(System.IFormatProvider)">
      <summary>Konvertiert den Wert dieser Instanz unter Verwendung der angegebenen kulturabhängigen Formatierungsinformationen in einen entsprechenden booleschen Wert.</summary>
      <returns>Ein boolescher Wert, der dem Wert dieser Instanz entspricht.</returns>
      <param name="provider">Eine Implementierung der <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturabhängige Formatierungsinformationen liefert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToByte(System.IFormatProvider)">
      <summary>Konvertiert den Wert dieser Instanz unter Verwendung der angegebenen kulturabhängigen Formatierungsinformationen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 8-Bit-Ganzzahl ohne Vorzeichen, die dem Wert dieser Instanz entspricht.</returns>
      <param name="provider">Eine Implementierung der <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturabhängige Formatierungsinformationen liefert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToChar(System.IFormatProvider)">
      <summary>Konvertiert den Wert dieser Instanz unter Verwendung der angegebenen kulturabhängigen Formatierungsinformationen in ein entsprechendes Unicode-Zeichen.</summary>
      <returns>Ein Unicode-Zeichen, das dem Wert dieser Instanz entspricht.</returns>
      <param name="provider">Eine Implementierung der <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturabhängige Formatierungsinformationen liefert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToDateTime(System.IFormatProvider)">
      <summary>Konvertiert den Wert dieser Instanz unter Verwendung der angegebenen kulturabhängigen Formatierungsinformationen in einen entsprechenden <see cref="T:System.DateTime" />.</summary>
      <returns>Eine <see cref="T:System.DateTime" />-Instanz, die dem Wert dieser Instanz entspricht.</returns>
      <param name="provider">Eine Implementierung der <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturabhängige Formatierungsinformationen liefert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToDecimal(System.IFormatProvider)">
      <summary>Konvertiert den Wert dieser Instanz unter Verwendung der angegebenen kulturabhängigen Formatierungsinformationen in eine entsprechende <see cref="T:System.Decimal" />-Zahl.</summary>
      <returns>Eine <see cref="T:System.Decimal" />-Zahl, die dem Wert dieser Instanz entspricht.</returns>
      <param name="provider">Eine Implementierung der <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturabhängige Formatierungsinformationen liefert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToDouble(System.IFormatProvider)">
      <summary>Konvertiert den Wert dieser Instanz unter Verwendung der angegebenen kulturabhängigen Formatierungsinformationen in eine entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die dem Wert dieser Instanz entspricht.</returns>
      <param name="provider">Eine Implementierung der <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturabhängige Formatierungsinformationen liefert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToInt16(System.IFormatProvider)">
      <summary>Konvertiert den Wert dieser Instanz unter Verwendung der angegebenen kulturabhängigen Formatierungsinformationen in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die dem Wert dieser Instanz entspricht.</returns>
      <param name="provider">Eine Implementierung der <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturabhängige Formatierungsinformationen liefert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToInt32(System.IFormatProvider)">
      <summary>Konvertiert den Wert dieser Instanz unter Verwendung der angegebenen kulturabhängigen Formatierungsinformationen in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die dem Wert dieser Instanz entspricht.</returns>
      <param name="provider">Eine Implementierung der <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturabhängige Formatierungsinformationen liefert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToInt64(System.IFormatProvider)">
      <summary>Konvertiert den Wert dieser Instanz unter Verwendung der angegebenen kulturabhängigen Formatierungsinformationen in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die dem Wert dieser Instanz entspricht.</returns>
      <param name="provider">Eine Implementierung der <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturabhängige Formatierungsinformationen liefert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToSByte(System.IFormatProvider)">
      <summary>Konvertiert den Wert dieser Instanz unter Verwendung der angegebenen kulturabhängigen Formatierungsinformationen in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die dem Wert dieser Instanz entspricht.</returns>
      <param name="provider">Eine Implementierung der <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturabhängige Formatierungsinformationen liefert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToSingle(System.IFormatProvider)">
      <summary>Konvertiert den Wert dieser Instanz unter Verwendung der angegebenen kulturabhängigen Formatierungsinformationen in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die dem Wert dieser Instanz entspricht.</returns>
      <param name="provider">Eine Implementierung der <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturabhängige Formatierungsinformationen liefert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToString(System.IFormatProvider)">
      <summary>Konvertiert den Wert dieser Instanz unter Verwendung der angegebenen kulturabhängigen Formatierungsinformationen in einen entsprechenden <see cref="T:System.String" />.</summary>
      <returns>Eine <see cref="T:System.String" />-Instanz, die dem Wert dieser Instanz entspricht.</returns>
      <param name="provider">Eine Implementierung der <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturabhängige Formatierungsinformationen liefert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)">
      <summary>Konvertiert den Wert dieser Instanz unter Verwendung der angegebenen kulturabhängigen Formatierungsinformationen in ein <see cref="T:System.Object" /> vom angegebenen <see cref="T:System.Type" /> mit einem entsprechenden Wert.</summary>
      <returns>Eine <see cref="T:System.Object" />-Instanz vom Typ <paramref name="conversionType" />, deren Wert dem Wert dieser Instanz entspricht.</returns>
      <param name="conversionType">Der <see cref="T:System.Type" />, in den der Wert dieser Instanz konvertiert wird. </param>
      <param name="provider">Eine Implementierung der <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturabhängige Formatierungsinformationen liefert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToUInt16(System.IFormatProvider)">
      <summary>Konvertiert den Wert dieser Instanz unter Verwendung der angegebenen kulturabhängigen Formatierungsinformationen in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die dem Wert dieser Instanz entspricht.</returns>
      <param name="provider">Eine Implementierung der <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturabhängige Formatierungsinformationen liefert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToUInt32(System.IFormatProvider)">
      <summary>Konvertiert den Wert dieser Instanz unter Verwendung der angegebenen kulturabhängigen Formatierungsinformationen in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die dem Wert dieser Instanz entspricht.</returns>
      <param name="provider">Eine Implementierung der <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturabhängige Formatierungsinformationen liefert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToUInt64(System.IFormatProvider)">
      <summary>Konvertiert den Wert dieser Instanz unter Verwendung der angegebenen kulturabhängigen Formatierungsinformationen in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die dem Wert dieser Instanz entspricht.</returns>
      <param name="provider">Eine Implementierung der <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturabhängige Formatierungsinformationen liefert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ICustomFormatter">
      <summary>Definiert eine Methode, die die benutzerdefinierte Formatierung des Werts eines Objekts unterstützt.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
      <summary>Konvertiert den Wert eines angegebenen Objekts unter Verwendung des angegebenen Formats und der kulturabhängigen Formatierungsinformationen in eine entsprechende Zeichenfolgenentsprechung.</summary>
      <returns>Die Zeichenfolgenentsprechung des Werts von <paramref name="arg" /> im durch <paramref name="format" /> und <paramref name="formatProvider" /> angegebenen Format.</returns>
      <param name="format">Eine Formatzeichenfolge mit Formatierungsangaben. </param>
      <param name="arg">Ein zu formatierendes Objekt. </param>
      <param name="formatProvider">Ein Objekt, das Formatinformationen über die aktuelle Instanz bereitstellt. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IDisposable">
      <summary>Stellt einen Mechanismus für die Freigabe nicht verwalteter Ressourcen bereit.Weitere Informationen zum Durchsuchen des .NET Framework-Quellcodes für diesen Typ finden Sie unter Verweisquelle.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IDisposable.Dispose">
      <summary>Führt anwendungsspezifische Aufgaben durch, die mit der Freigabe, der Zurückgabe oder dem Zurücksetzen von nicht verwalteten Ressourcen zusammenhängen.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IEquatable`1">
      <summary>Definiert eine allgemeine Methode, die von einem Werttyp oder einer Klasse für die Erstellung einer typspezifischen Methode zum Bestimmen der Gleichheit von Instanzen implementiert wird.</summary>
      <typeparam name="T">Der Typ der zu vergleichenden Objekte.</typeparam>
    </member>
    <member name="M:System.IEquatable`1.Equals(`0)">
      <summary>Gibt an, ob das aktuelle Objekt gleich einem anderen Objekt des gleichen Typs ist.</summary>
      <returns>true, wenn das aktuelle Objekt gleich dem <paramref name="other" />-Parameter ist, andernfalls false.</returns>
      <param name="other">Ein Objekt, das mit diesem Objekt verglichen werden soll.</param>
    </member>
    <member name="T:System.IFormatProvider">
      <summary>Stellt einen Mechanismus für das Abrufen eines Objekts zur Steuerung der Formatierung bereit.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IFormatProvider.GetFormat(System.Type)">
      <summary>Gibt ein Objekt zurück, das Formatierungsdienste für den angegebenen Typ bereitstellt.</summary>
      <returns>Eine Instanz des von <paramref name="formatType" /> angegebenen Objekts, wenn die <see cref="T:System.IFormatProvider" />-Implementierung den betreffenden Typ von Objekt angeben kann, andernfalls null.</returns>
      <param name="formatType">Ein Objekt, das den Typ des zurückzugebenden Formatierungsobjekts angibt. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.IFormattable">
      <summary>Stellt Funktionen bereit, mit denen der Wert eines Objekts in eine Zeichenfolgenentsprechung formatiert werden kann.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
      <summary>Formatiert den Wert der aktuellen Instanz unter Verwendung des angegebenen Formats.</summary>
      <returns>Der Wert der aktuellen Instanz im angegebenen Format.</returns>
      <param name="format">Das zu verwendende Format.– oder – Ein NULL-Verweis (Nothing in Visual Basic), wenn das für den Typ der <see cref="T:System.IFormattable" /> -Implementierung definierte Standardformat verwendet werden soll. </param>
      <param name="formatProvider">Der zum Formatieren des Werts zu verwendende Anbieter.– oder – Ein NULL-Verweis (Nothing in Visual Basic), wenn die Informationen über numerische Formate dem aktuellen Gebietsschema des Betriebssystems entnommen werden sollen. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IndexOutOfRangeException">
      <summary>Die Ausnahme, die bei einem Versuch ausgelöst wird, auf ein Element eines Arrays oder einer Auflistung mit einem Index zuzugreifen, der sich außerhalb der Begrenzungen des Arrays oder der Auflistung befindet. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IndexOutOfRangeException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IndexOutOfRangeException" />-Klasse.</summary>
    </member>
    <member name="M:System.IndexOutOfRangeException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IndexOutOfRangeException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird. </param>
    </member>
    <member name="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IndexOutOfRangeException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter kein NULL-Verweis ist (Nothing in Visual Basic), wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.InsufficientExecutionStackException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn der verfügbare Ausführungsstapel zum Ausführen der meisten Methoden nicht ausreicht.</summary>
    </member>
    <member name="M:System.InsufficientExecutionStackException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.InsufficientExecutionStackException" />-Klasse. </summary>
    </member>
    <member name="M:System.InsufficientExecutionStackException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.InsufficientExecutionStackException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
    </member>
    <member name="M:System.InsufficientExecutionStackException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.InsufficientExecutionStackException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="inner" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Int16">
      <summary>Stellt eine 16-Bit-Ganzzahl mit Vorzeichen dar.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.CompareTo(System.Int16)">
      <summary>Vergleicht diese Instanz mit einer angegebenen 16-Bit-Ganzzahl mit Vorzeichen und gibt eine ganze Zahl zurück, die angibt, ob der Wert dieser Instanz kleiner oder größer als der Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen ist oder mit diesem übereinstimmt.</summary>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser Instanz und <paramref name="value" /> angibt.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Eine zu vergleichende Ganzzahl. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.Equals(System.Int16)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen <see cref="T:System.Int16" />-Wert ist.</summary>
      <returns>true, wenn <paramref name="obj" /> über denselben Wert wie diese Instanz verfügt, andernfalls false.</returns>
      <param name="obj">Ein mit dieser Instanz zu vergleichender <see cref="T:System.Int16" />-Wert.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> eine Instanz von <see cref="T:System.Int16" /> ist, deren Wert gleich dem Wert dieser Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein mit dieser Instanz zu vergleichendes Objekt. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Int16.MaxValue">
      <summary>Stellt den größtmöglichen Wert von <see cref="T:System.Int16" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Int16.MinValue">
      <summary>Stellt den kleinstmöglichen Wert von <see cref="T:System.Int16" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält. </param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angibt, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. -or-<paramref name="s" /> includes non-zero fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturspezifischen Format in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält. </param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angeben, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Eine <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. -or-<paramref name="s" /> includes non-zero fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen kulturspezifischen Format in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält. </param>
      <param name="provider">Eine <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relative Reihenfolge dieser Instanz und <paramref name="value" /> angibt.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Int16" />. </exception>
    </member>
    <member name="M:System.Int16.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Int16.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true, wenn der Wert der aktuellen Instanz nicht 0 (null) ist, andernfalls false.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Byte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Char" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Diese Konvertierung wird nicht unterstützt.Es wird kein Wert zurückgegeben.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Decimal" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Double" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Der unveränderte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int32" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int64" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.SByte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Single" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Der in <paramref name="type" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="type">Der Typ, in den dieser <see cref="T:System.Int16" />-Wert konvertiert werden soll.</param>
      <param name="provider">Eine<see cref="T:System.IFormatProvider" />-Implementierung, die Informationen zum Format des zurückgegebenen Werts angibt.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Der unveränderte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt32" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt64" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int16.ToString">
      <summary>Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz, die aus einem Minuszeichen, sofern die Zahl negativ ist, und einer Folge von Ziffern zwischen 0 bis 9 ohne führende Nullen besteht.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.ToString(System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Berücksichtigung der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="provider" />.</returns>
      <param name="provider">Ein <see cref="T:System.IFormatProvider" />, der kulturabhängige Formatierungsinformationen liefert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.ToString(System.String)">
      <summary>Konvertiert den numerischen Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung unter Berücksichtigung des angegebenen Formats.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" />.</returns>
      <param name="format">Eine numerische Formatierungszeichenfolge.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.ToString(System.String,System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Verwendung des angegebenen Formats und der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" /> und <paramref name="provider" />.</returns>
      <param name="format">Eine numerische Formatierungszeichenfolge.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturspezifischen Format in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.Die Zeichenfolge wird unter Verwendung des durch <paramref name="style" /> angegebenen Formats interpretiert.</param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angeben, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den Wert der ganzen 16-Bit-Zahl mit Vorzeichen zurück, der der Zahl in <paramref name="s" /> entspricht, und 0 (null), wenn die Konvertierung nicht durchgeführt werden konnte.Bei der Konvertierung tritt ein Fehler auf, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, nicht in einem mit <paramref name="style" /> kompatiblen Format vorliegt oder eine Zahl kleiner als <see cref="F:System.Int16.MinValue" /> oder größer als <see cref="F:System.Int16.MaxValue" /> darstellt.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> ursprünglich übergebene Werte werden ausnahmslos überschrieben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.TryParse(System.String,System.Int16@)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält. </param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den Wert der ganzen 16-Bit-Zahl mit Vorzeichen zurück, der der Zahl in <paramref name="s" /> entspricht, und 0 (null), wenn die Konvertierung nicht durchgeführt werden konnte.Die Konvertierung kann nicht durchgeführt werden, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, kein gültiges Format aufweist oder eine Zahl kleiner als <see cref="F:System.Int16.MinValue" /> oder größer als <see cref="F:System.Int16.MaxValue" /> darstellt.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> ursprünglich übergebene Werte werden ausnahmslos überschrieben.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Int32">
      <summary>Stellt eine 32-Bit-Ganzzahl mit Vorzeichen dar.Informationen zum Durchsuchen des .NET Framework-Quellcodes für diesen Typ finden Sie in der Verweisquelle.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.CompareTo(System.Int32)">
      <summary>Vergleicht diese Instanz mit einer angegebenen 32-Bit-Ganzzahl mit Vorzeichen und gibt eine Angabe über das Verhältnis der entsprechenden Werte zurück.</summary>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser Instanz und <paramref name="value" /> angibt.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Eine zu vergleichende Ganzzahl. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.Equals(System.Int32)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen <see cref="T:System.Int32" />-Wert ist. </summary>
      <returns>true, wenn <paramref name="obj" /> über denselben Wert wie diese Instanz verfügt, andernfalls false.</returns>
      <param name="obj">Ein mit dieser Instanz zu vergleichender <see cref="T:System.Int32" />-Wert.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> eine Instanz von <see cref="T:System.Int32" /> ist, deren Wert gleich dem Wert dieser Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Int32.MaxValue">
      <summary>Stellt den größtmöglichen Wert von <see cref="T:System.Int32" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Int32.MinValue">
      <summary>Stellt den kleinstmöglichen Wert von <see cref="T:System.Int32" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält. </param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angibt, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturspezifischen Format in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält. </param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angeben, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Informationen zum Format von <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen kulturspezifischen Format in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält. </param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relative Reihenfolge dieser Instanz und <paramref name="value" /> angibt.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an <see cref="T:System.Int32" />. </exception>
    </member>
    <member name="M:System.Int32.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true, wenn der Wert der aktuellen Instanz nicht 0 (null) ist, andernfalls false.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Byte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Char" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Diese Konvertierung wird nicht unterstützt.Es wird kein Wert zurückgegeben.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</summary>
      <returns>Der in ein <see cref="T:System.Decimal" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Double" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int16" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Der unveränderte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int64" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.SByte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Single" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Der in <paramref name="type" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="type">Der Typ, in den dieser <see cref="T:System.Int32" />-Wert konvertiert werden soll.</param>
      <param name="provider">Ein Objekt, das Informationen zum Format des zurückgegebenen Werts bereitstellt.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt16" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt32" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt64" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int32.ToString">
      <summary>Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz, die aus einem Minuszeichen, sofern die Zahl negativ ist, und einer Folge von Ziffern zwischen 0 bis 9 ohne führende Nullen besteht.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.ToString(System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Berücksichtigung der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="provider" />.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.ToString(System.String)">
      <summary>Konvertiert den numerischen Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung unter Berücksichtigung des angegebenen Formats.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" />.</returns>
      <param name="format">Eine standardmäßige oder benutzerdefinierte numerische Formatierungszeichenfolge.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.ToString(System.String,System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Verwendung des angegebenen Formats und der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" /> und <paramref name="provider" />.</returns>
      <param name="format">Eine standardmäßige oder benutzerdefinierte numerische Formatierungszeichenfolge.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturspezifischen Format in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich abgeschlossen wurde.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.Die Zeichenfolge wird unter Verwendung des durch <paramref name="style" /> angegebenen Formats interpretiert.</param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angeben, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den 32-Bit-Ganzzahlwert mit Vorzeichen zurück, der der Zahl in <paramref name="s" /> entspricht, und 0 (null), wenn die Konvertierung nicht durchgeführt werden konnte.Bei der Konvertierung tritt ein Fehler auf, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, nicht in einem mit <paramref name="style" /> kompatiblen Format vorliegt oder eine Zahl kleiner als <see cref="F:System.Int32.MinValue" /> oder größer als <see cref="F:System.Int32.MaxValue" /> darstellt.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> ursprünglich übergebene Werte werden ausnahmslos überschrieben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.TryParse(System.String,System.Int32@)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich abgeschlossen wurde.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält. </param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den 32-Bit-Ganzzahlwert mit Vorzeichen zurück, der der Zahl in <paramref name="s" /> entspricht, und 0 (null), wenn die Konvertierung nicht durchgeführt werden konnte.Die Konvertierung kann nicht durchgeführt werden, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, kein gültiges Format aufweist oder eine Zahl kleiner als <see cref="F:System.Int32.MinValue" /> oder größer als <see cref="F:System.Int32.MaxValue" /> darstellt.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> ursprünglich übergebene Werte werden ausnahmslos überschrieben.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Int64">
      <summary>Stellt eine 64-Bit-Ganzzahl mit Vorzeichen dar.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.CompareTo(System.Int64)">
      <summary>Vergleicht diese Instanz mit einer angegebenen 64-Bit-Ganzzahl mit Vorzeichen und gibt eine Angabe über das Verhältnis der entsprechenden Werte zurück.</summary>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser Instanz und <paramref name="value" /> angibt.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Eine zu vergleichende Ganzzahl. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.Equals(System.Int64)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen <see cref="T:System.Int64" />-Wert ist.</summary>
      <returns>true, wenn <paramref name="obj" /> über denselben Wert wie diese Instanz verfügt, andernfalls false.</returns>
      <param name="obj">Ein mit dieser Instanz zu vergleichender <see cref="T:System.Int64" />-Wert.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> eine Instanz von <see cref="T:System.Int64" /> ist, deren Wert gleich dem Wert dieser Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Int64.MaxValue">
      <summary>Stellt den größtmöglichen Wert von Int64 dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Int64.MinValue">
      <summary>Stellt den kleinstmöglichen Wert vom Typ Int64 dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält. </param>
      <param name="style">Eine bitweise Kombination von <see cref="T:System.Globalization.NumberStyles" />-Werten, die das zulässige Format von <paramref name="s" /> angibt.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.-or-<paramref name="style" /> supports fractional digits but <paramref name="s" /> includes non-zero fractional digits. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturspezifischen Format in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält. </param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angeben, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Eine <see cref="T:System.IFormatProvider" />-Schnittstelle, die kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. -or-<paramref name="style" /> supports fractional digits, but <paramref name="s" /> includes non-zero fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen kulturspezifischen Format in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält. </param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relative Reihenfolge dieser Instanz und <paramref name="value" /> angibt.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an <see cref="T:System.Int64" />. </exception>
    </member>
    <member name="M:System.Int64.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Int64.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true, wenn der Wert der aktuellen Instanz nicht 0 (null) ist, andernfalls false.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Byte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Char" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Diese Konvertierung wird nicht unterstützt.Es wird kein Wert zurückgegeben.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Decimal" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Double" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int16" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int32" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Der unveränderte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.SByte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Single" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Der in <paramref name="type" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="type">Der Typ, in den dieser <see cref="T:System.Int64" />-Wert konvertiert werden soll.</param>
      <param name="provider">Eine <see cref="T:System.IFormatProvider" />-Implementierung, die Informationen zum Format des zurückgegebenen Werts bereitstellt.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt16" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt32" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt64" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Int64.ToString">
      <summary>Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz, die aus einem Minuszeichen, sofern die Zahl negativ ist, und einer Folge von Ziffern zwischen 0 bis 9 ohne führende Nullen besteht.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.ToString(System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Berücksichtigung der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="provider" />.</returns>
      <param name="provider">Ein <see cref="T:System.IFormatProvider" />, der kulturabhängige Formatierungsinformationen liefert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.ToString(System.String)">
      <summary>Konvertiert den numerischen Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung unter Berücksichtigung des angegebenen Formats.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" />.</returns>
      <param name="format">Eine numerische Formatierungszeichenfolge.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.ToString(System.String,System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Verwendung des angegebenen Formats und der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" /> und <paramref name="provider" />.</returns>
      <param name="format">Eine numerische Formatierungszeichenfolge.</param>
      <param name="provider">Ein Objekt, das kulturabhängige Formatierungsinformationen über diese Instanz liefert. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturspezifischen Format in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.Die Zeichenfolge wird unter Verwendung des durch <paramref name="style" /> angegebenen Formats interpretiert.</param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angeben, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den 64-Bit-Ganzzahlwert mit Vorzeichen zurück, der der Zahl in <paramref name="s" /> entspricht, und 0 (null), wenn die Konvertierung nicht durchgeführt werden konnte.Bei der Konvertierung tritt ein Fehler auf, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, nicht in einem mit <paramref name="style" /> kompatiblen Format vorliegt oder eine Zahl kleiner als <see cref="F:System.Int64.MinValue" /> oder größer als <see cref="F:System.Int64.MaxValue" /> darstellt.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> mit übergebene Werte werden ausnahmslos überschrieben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.TryParse(System.String,System.Int64@)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält. </param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den 64-Bit-Ganzzahlwert mit Vorzeichen zurück, der der Zahl in <paramref name="s" /> entspricht, und 0 (null), wenn die Konvertierung nicht durchgeführt werden konnte.Die Konvertierung kann nicht durchgeführt werden, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, kein gültiges Format aufweist oder eine Zahl kleiner als <see cref="F:System.Int64.MinValue" /> oder größer als <see cref="F:System.Int64.MaxValue" /> darstellt.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> mit übergebene Werte werden ausnahmslos überschrieben.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.IntPtr">
      <summary>Ein plattformabhängiger Typ zur Darstellung von Zeigern und Handles.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.IntPtr" /> mit dem angegebenen 32-Bit-Zeiger bzw. -Handle.</summary>
      <param name="value">Ein von einer 32-Bit-Ganzzahl mit Vorzeichen dargestellter Zeiger bzw. ein Handle. </param>
    </member>
    <member name="M:System.IntPtr.#ctor(System.Int64)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.IntPtr" /> mit einem 64-Bit-Zeiger oder -Handle.</summary>
      <param name="value">Ein von einer 64-Bit-Ganzzahl mit Vorzeichen dargestellter Zeiger bzw. ein Handle. </param>
      <exception cref="T:System.OverflowException">Auf einer 32-Bit-Plattform ist <paramref name="value" /> für eine Darstellung als <see cref="T:System.IntPtr" /> zu groß oder zu klein. </exception>
    </member>
    <member name="M:System.IntPtr.#ctor(System.Void*)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.IntPtr" /> unter Verwendung des angegebenen Zeigers auf einen nicht angegebenen Typ.</summary>
      <param name="value">Ein Zeiger auf einen nicht angegebenen Typ. </param>
    </member>
    <member name="M:System.IntPtr.Add(System.IntPtr,System.Int32)">
      <summary>Addiert einen Offset zum Wert eines Zeigers.</summary>
      <returns>Ein neuer Zeiger, der die Addition von <paramref name="offset" /> zu <paramref name="pointer" /> widerspiegelt.</returns>
      <param name="pointer">Der Zeiger, zu dem der Offset addiert werden soll.</param>
      <param name="offset">Der Offset, der addiert werden soll.</param>
    </member>
    <member name="M:System.IntPtr.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> eine Instanz von <see cref="T:System.IntPtr" /> ist, deren Wert gleich dem Wert dieser Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IntPtr.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)">
      <summary>Addiert einen Offset zum Wert eines Zeigers.</summary>
      <returns>Ein neuer Zeiger, der die Addition von <paramref name="offset" /> zu <paramref name="pointer" /> widerspiegelt.</returns>
      <param name="pointer">Der Zeiger, zu dem der Offset addiert werden soll.</param>
      <param name="offset">Der Offset, der addiert werden soll.</param>
    </member>
    <member name="M:System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)">
      <summary>Bestimmt, ob zwei angegebene Instanzen von <see cref="T:System.IntPtr" /> gleich sind.</summary>
      <returns>true, wenn <paramref name="value1" /> gleich <paramref name="value2" /> ist, andernfalls false.</returns>
      <param name="value1">Der erste Zeiger bzw. das erste Handle für den Vergleich.</param>
      <param name="value2">Der zweite Zeiger bzw. das zweite Handle für den Vergleich.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.Int32)~System.IntPtr">
      <summary>Konvertiert den Wert einer 32-Bit-Ganzzahl mit Vorzeichen in einen <see cref="T:System.IntPtr" />-Konstruktor.</summary>
      <returns>Eine neue, mit <paramref name="value" /> initialisierte Instanz von <see cref="T:System.IntPtr" />.</returns>
      <param name="value">Eine 32-Bit-Ganzzahl mit Vorzeichen. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.Int64)~System.IntPtr">
      <summary>Konvertiert den Wert einer 64-Bit-Ganzzahl mit Vorzeichen in einen <see cref="T:System.IntPtr" />-Konstruktor.</summary>
      <returns>Eine neue, mit <paramref name="value" /> initialisierte Instanz von <see cref="T:System.IntPtr" />.</returns>
      <param name="value">Eine 64-Bit-Ganzzahl mit Vorzeichen. </param>
      <exception cref="T:System.OverflowException">Auf einer 32-Bit-Plattform ist <paramref name="value" /> für eine Darstellung als <see cref="T:System.IntPtr" /> zu groß. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int64">
      <summary>Konvertiert den Wert des angegebenen <see cref="T:System.IntPtr" />-Konstruktors in eine 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Der Inhalt von <paramref name="value" />.</returns>
      <param name="value">Der zu konvertierende Zeiger bzw. das zu konvertierende Handle.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Void*">
      <summary>Konvertiert den Wert des angegebenen <see cref="T:System.IntPtr" />-Konstruktors in einen Zeiger auf einen nicht angegebenen Typ.</summary>
      <returns>Der Inhalt von <paramref name="value" />.</returns>
      <param name="value">Der zu konvertierende Zeiger bzw. das zu konvertierende Handle. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int32">
      <summary>Konvertiert den Wert des angegebenen <see cref="T:System.IntPtr" />-Konstruktors in eine 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Der Inhalt von <paramref name="value" />.</returns>
      <param name="value">Der zu konvertierende Zeiger bzw. das zu konvertierende Handle.</param>
      <exception cref="T:System.OverflowException">Auf einer 64-Bit-Plattform ist <paramref name="value" /> für eine Darstellung als 32-Bit-Ganzzahl mit Vorzeichen zu groß. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.Void*)~System.IntPtr">
      <summary>Konvertiert den angegebenen Zeiger auf einen nicht angegebenen Typ in einen <see cref="T:System.IntPtr" />-Konstruktor.</summary>
      <returns>Eine neue, mit <paramref name="value" /> initialisierte Instanz von <see cref="T:System.IntPtr" />.</returns>
      <param name="value">Ein Zeiger auf einen nicht angegebenen Typ. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)">
      <summary>Bestimmt, ob zwei angegebene Instanzen von <see cref="T:System.IntPtr" /> ungleich sind.</summary>
      <returns>true, wenn <paramref name="value1" /> ungleich <paramref name="value2" /> ist, andernfalls false.</returns>
      <param name="value1">Der erste Zeiger bzw. das erste Handle für den Vergleich. </param>
      <param name="value2">Der zweite Zeiger bzw. das zweite Handle für den Vergleich. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)">
      <summary>Subtrahiert einen Offset vom Wert eines Zeigers.</summary>
      <returns>Ein neuer Zeiger, der die Subtraktion von <paramref name="offset" /> von <paramref name="pointer" /> widerspiegelt.</returns>
      <param name="pointer">Der Zeiger, von dem der Offset subtrahiert werden soll.</param>
      <param name="offset">Der Offset, der subtrahiert werden soll.</param>
    </member>
    <member name="P:System.IntPtr.Size">
      <summary>Ruft die Größe dieser Instanz ab.</summary>
      <returns>Die Größe eines Zeigers bzw. Handles in dieser Prozess in Bytes.Der Wert dieser Eigenschaft in einem 32-Bit-Prozess ist 4 und in einem 64-Bit-Prozess 8.Sie können den Prozess-Typ definieren, indem Sie den /platform-Schalter festlegen, wenn Sie den Code mit den C#- und Visual Basic-Compilern kompilieren.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.Subtract(System.IntPtr,System.Int32)">
      <summary>Subtrahiert einen Offset vom Wert eines Zeigers.</summary>
      <returns>Ein neuer Zeiger, der die Subtraktion von <paramref name="offset" /> von <paramref name="pointer" /> widerspiegelt.</returns>
      <param name="pointer">Der Zeiger, von dem der Offset subtrahiert werden soll.</param>
      <param name="offset">Der Offset, der subtrahiert werden soll.</param>
    </member>
    <member name="M:System.IntPtr.ToInt32">
      <summary>Konvertiert den Wert dieser Instanz in eine 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die gleich dem Wert dieser Instanz ist.</returns>
      <exception cref="T:System.OverflowException">Auf einer 64-Bit-Plattform ist der Wert dieser Instanz für eine Darstellung als 32-Bit-Ganzzahl mit Vorzeichen zu groß oder zu klein. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToInt64">
      <summary>Konvertiert den Wert dieser Instanz in eine 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die gleich dem Wert dieser Instanz ist.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToPointer">
      <summary>Konvertiert den Wert dieser Instanz in einen Zeiger auf einen nicht angegebenen Typ.</summary>
      <returns>Ein Zeiger auf <see cref="T:System.Void" />, d. h. ein Zeiger auf Speicher, der Daten eines nicht angegebenen Typs enthält.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToString">
      <summary>Konvertiert den numerischen Wert des aktuellen <see cref="T:System.IntPtr" />-Objekts in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgenentsprechung des Wertes dieser Instanz.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToString(System.String)">
      <summary>Konvertiert den numerischen Wert des aktuellen <see cref="T:System.IntPtr" />-Objekts in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts des aktuellen <see cref="T:System.IntPtr" />-Objekts.</returns>
      <param name="format">Eine Formatangabe, die bestimmt, wie das aktuelle <see cref="T:System.IntPtr" />-Objekt konvertiert wird. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.IntPtr.Zero">
      <summary>Ein schreibgeschütztes Feld, das einen mit 0 (null) initialisierten Zeiger oder ein Handle darstellt.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.InvalidCastException">
      <summary>Die Ausnahme, die bei ungültiger Umwandlung oder expliziter Konvertierung ausgelöst wird.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.InvalidCastException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidCastException" />-Klasse.</summary>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidCastException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird. </param>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidCastException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidCastException" />-Klasse mit einer angegebenen Meldung und einem angegebenen Fehlercode.</summary>
      <param name="message">Die Meldung, in der die Ursache für die eingetretene Ausnahme angegeben wird.</param>
      <param name="errorCode">Der Wert des Fehlercodes (HRESULT), der der Ausnahme zugeordnet ist.</param>
    </member>
    <member name="T:System.InvalidOperationException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn der Aufruf einer Methode aufgrund des aktuellen Zustands des Objekts ungültig ist.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.InvalidOperationException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidOperationException" />-Klasse.</summary>
    </member>
    <member name="M:System.InvalidOperationException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidOperationException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird. </param>
    </member>
    <member name="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidOperationException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter kein NULL-Verweis ist (Nothing in Visual Basic), wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.InvalidProgramException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein Programme ungültige MSIL-Befehle (Microsoft Intermediate Language) oder Metadaten enthält.Dies weist im Allgemeinen auf einen Fehler in dem Compiler hin, der das Programm generiert hat.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.InvalidProgramException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidProgramException" />-Klasse mit Standardeigenschaften.</summary>
    </member>
    <member name="M:System.InvalidProgramException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidProgramException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
    </member>
    <member name="M:System.InvalidProgramException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidProgramException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="inner" />-Parameter kein NULL-Verweis ist (Nothing in Visual Basic), wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.InvalidTimeZoneException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn Zeitzoneninformationen ungültig sind.</summary>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidTimeZoneException" />-Klasse mit einer vom System bereitgestellten Meldung.</summary>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidTimeZoneException" />-Klasse mit der angegebenen Meldungszeichenfolge.</summary>
      <param name="message">Eine Zeichenfolge, die die Ausnahme beschreibt.</param>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidTimeZoneException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Eine Zeichenfolge, die die Ausnahme beschreibt.    </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.  </param>
    </member>
    <member name="T:System.IObservable`1">
      <summary>Definiert einen Anbieter für Pushbenachrichtigungen.</summary>
      <typeparam name="T">Das Objekt, das Benachrichtigungsinformationen bereitstellt.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
    </member>
    <member name="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
      <summary>Benachrichtigt den Anbieter, dass ein Beobachter Benachrichtigungen empfangen soll.</summary>
      <returns>Ein Verweis auf eine Schnittstelle, mit der Beobachter den Empfang von Benachrichtigungen beenden können, bevor der Anbieter das Absenden der Benachrichtigungen abgeschlossen hat.</returns>
      <param name="observer">Das Objekt, das Benachrichtigungen empfangen soll.</param>
    </member>
    <member name="T:System.IObserver`1">
      <summary>Stellt einen Mechanismus zum Empfangen von Pushbenachrichtigungen bereit.</summary>
      <typeparam name="T">Das Objekt, das Benachrichtigungsinformationen bereitstellt.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
    </member>
    <member name="M:System.IObserver`1.OnCompleted">
      <summary>Benachrichtigt den Beobachter, dass der Anbieter aufgehört hat, Pushbenachrichtigungen zu senden.</summary>
    </member>
    <member name="M:System.IObserver`1.OnError(System.Exception)">
      <summary>Benachrichtigt den Beobachter, dass beim Anbieter ein Fehlerzustand aufgetreten ist.</summary>
      <param name="error">Ein Objekt, das zusätzliche Informationen zum Fehler bereitstellt.</param>
    </member>
    <member name="M:System.IObserver`1.OnNext(`0)">
      <summary>Stellt neue Daten für den Beobachter bereit.</summary>
      <param name="value">Die aktuellen Benachrichtigungsinformationen.</param>
    </member>
    <member name="T:System.IProgress`1">
      <summary>Definiert einen Anbieter für Statusaktualisierungen.</summary>
      <typeparam name="T">Der Typ des Fortschrittupdatewerts.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
    </member>
    <member name="M:System.IProgress`1.Report(`0)">
      <summary>Berichtet ein Statusupdate.</summary>
      <param name="value">Der Wert des aktualisierten Status.</param>
    </member>
    <member name="T:System.Lazy`1">
      <summary>Unterstützt die verzögerte Initialisierung.</summary>
      <typeparam name="T">Der Objekttyp, der verzögert initialisiert wird.</typeparam>
    </member>
    <member name="M:System.Lazy`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Lazy`1" />-Klasse.Wenn eine verzögerte Initialisierung auftritt, wird der Standardkonstruktor des Zieltyps verwendet.</summary>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Lazy`1" />-Klasse.Wenn eine verzögerte Initialisierung auftritt, werden der Standardkonstruktor des Zieltyps und der angegebene Initialisierungsmodus verwendet.</summary>
      <param name="isThreadSafe">true, damit diese Instanz durch mehrere Threads gleichzeitig verwendet werden kann, false, damit die Instanz nur von jeweils einem Thread verwendet werden kann. </param>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Lazy`1" />-Klasse.Wenn eine verzögerte Initialisierung auftritt, wird die angegebene Initialisierungsfunktion verwendet.</summary>
      <param name="valueFactory">Der zum Erstellen des verzögert initialisierten Werts bei Bedarf aufgerufene Delegat.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="valueFactory" /> ist null. </exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0},System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Lazy`1" />-Klasse.Wenn eine verzögerte Initialisierung auftritt, werden die angegebene Initialisierungsfunktion und der angegebene Initialisierungsmodus verwendet.</summary>
      <param name="valueFactory">Der zum Erstellen des verzögert initialisierten Werts bei Bedarf aufgerufene Delegat.</param>
      <param name="isThreadSafe">true, damit diese Instanz durch mehrere Threads gleichzeitig verwendet werden kann, false, damit diese Instanz nur von jeweils einem Thread verwendet werden kann.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="valueFactory" /> ist null. </exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0},System.Threading.LazyThreadSafetyMode)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Lazy`1" />-Klasse, die die angegebene Initialisierungsfunktion und den angegebenen Threadsicherheitsmodus verwendet.</summary>
      <param name="valueFactory">Der zum Erstellen des verzögert initialisierten Werts bei Bedarf aufgerufene Delegat.</param>
      <param name="mode">Einer der Enumerationswerte, der den Threadsicherheitsmodus angibt. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> enthält einen ungültigen Wert. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="valueFactory" /> ist null. </exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Threading.LazyThreadSafetyMode)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Lazy`1" />-Klasse, die den Standardkonstruktor von <paramref name="T" /> und einen angegebenen Threadsicherheitsmodus verwendet.</summary>
      <param name="mode">Einer der Enumerationswerte, der den Threadsicherheitsmodus angibt. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> enthält einen ungültigen Wert. </exception>
    </member>
    <member name="P:System.Lazy`1.IsValueCreated">
      <summary>Ruft einen Wert ab, der angibt, ob ein Wert für diese <see cref="T:System.Lazy`1" />-Instanz erstellt wurde.</summary>
      <returns>true, wenn für diese <see cref="T:System.Lazy`1" />-Instanz ein Wert erstellt wurde, andernfalls false.</returns>
    </member>
    <member name="M:System.Lazy`1.ToString">
      <summary>Erstellt eine Zeichenfolgendarstellung der <see cref="P:System.Lazy`1.Value" />-Eigenschaft für diese Instanz und gibt sie zurück.</summary>
      <returns>Das Ergebnis des Aufrufs der <see cref="M:System.Object.ToString" />-Methode für die <see cref="P:System.Lazy`1.Value" />-Eigenschaft dieser Instanz, wenn der Wert erstellt wurde (d. h., wenn die <see cref="P:System.Lazy`1.IsValueCreated" />-Eigenschaft true zurückgibt).Andernfalls eine Zeichenfolge, die angibt, dass der Wert nicht erstellt wurde.</returns>
      <exception cref="T:System.NullReferenceException">Die <see cref="P:System.Lazy`1.Value" />-Eigenschaft ist null.</exception>
    </member>
    <member name="P:System.Lazy`1.Value">
      <summary>Ruft den verzögert initialisierten Wert der aktuellen <see cref="T:System.Lazy`1" />-Instanz ab.</summary>
      <returns>Der verzögert initialisierte Wert der aktuellen <see cref="T:System.Lazy`1" />-Instanz.</returns>
      <exception cref="T:System.MemberAccessException">Die <see cref="T:System.Lazy`1" />-Instanz wird initialisiert, um den Standardkonstruktor des Typs zu verwenden, der verzögert initialisiert wird, und es fehlen Berechtigungen für den Zugriff auf den Konstruktor. </exception>
      <exception cref="T:System.MissingMemberException">Die <see cref="T:System.Lazy`1" />-Instanz wird initialisiert, um den Standardkonstruktor des Typs zu verwenden, der verzögert initialisiert wird. Dieser Typ besitzt keinen öffentlichen Konstruktor ohne Parameter. </exception>
      <exception cref="T:System.InvalidOperationException">Die Initialisierungsfunktion versucht, in dieser Instanz auf <see cref="P:System.Lazy`1.Value" /> zuzugreifen. </exception>
    </member>
    <member name="T:System.Lazy`2">
      <summary>Stellt einen verzögerten indirekten Verweis auf ein Objekt und seine zugeordneten Metadaten für die Verwendung durch das Managed Extensibility Framework bereit.</summary>
      <typeparam name="T">Der Typ des Objekts, auf das verwiesen wird.</typeparam>
      <typeparam name="TMetadata">Der Typ der Metadaten.</typeparam>
    </member>
    <member name="M:System.Lazy`2.#ctor(System.Func{`0},`1)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Lazy`2" />-Klasse mit den angegebenen Metadaten, die das Objekt, auf das verwiesen wird, mithilfe der angegebenen Funktion abruft.</summary>
      <param name="valueFactory">Eine Funktion, die das Objekt zurückgibt, auf das verwiesen wird.</param>
      <param name="metadata">Die Metadaten, die dem Objekt zugeordnet sind, auf das verwiesen wird.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Lazy`2" />-Klasse mit den angegebenen Metadaten und dem Threadsicherheitswert, die das Objekt, auf das verwiesen wird, mithilfe der angegebenen Funktion abruft.</summary>
      <param name="valueFactory">Eine Funktion, die das Objekt zurückgibt, auf das verwiesen wird.</param>
      <param name="metadata">Die Metadaten, die dem Objekt zugeordnet sind, auf das verwiesen wird.</param>
      <param name="isThreadSafe">Gibt an, ob das erstellte <see cref="T:System.Lazy`2" />-Objekt threadsicher ist.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Lazy`2" />-Klasse mit den angegebenen Metadaten und dem Threadsynchronisierungsmodus, die das Objekt, auf das verwiesen wird, mithilfe der angegebenen Funktion abruft.</summary>
      <param name="valueFactory">Eine Funktion, die das Objekt zurückgibt, auf das verwiesen wird</param>
      <param name="metadata">Die Metadaten, die dem Objekt zugeordnet sind, auf das verwiesen wird.</param>
      <param name="mode">Der Threadsynchronisierungsmodus</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(`1)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Lazy`2" />-Klasse mit den angegebenen Metadaten.</summary>
      <param name="metadata">Die Metadaten, die dem Objekt zugeordnet sind, auf das verwiesen wird.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(`1,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Lazy`2" />-Klasse mit den angegebenen Metadaten und dem angegebenen Threadsicherheitswert.</summary>
      <param name="metadata">Die Metadaten, die dem Objekt zugeordnet sind, auf das verwiesen wird.</param>
      <param name="isThreadSafe">Gibt an, ob das erstellte <see cref="T:System.Lazy`2" />-Objekt threadsicher ist.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Lazy`2" />-Klasse mit den angegebenen Metadaten und dem angegebenen Threadsynchronisierungsmodus.</summary>
      <param name="metadata">Die Metadaten, die dem Objekt zugeordnet sind, auf das verwiesen wird.</param>
      <param name="mode">Der Threadsynchronisierungsmodus.</param>
    </member>
    <member name="P:System.Lazy`2.Metadata">
      <summary>Ruft die Metadaten ab, die dem Objekt zugeordnet sind, auf das verwiesen wird.</summary>
      <returns>Die Metadaten, die dem Objekt zugeordnet sind, auf das verwiesen wird.</returns>
    </member>
    <member name="T:System.MemberAccessException">
      <summary>Die Ausnahme, die bei einem fehlgeschlagenen Versuch, auf einen Klassenmember zuzugreifen, ausgelöst wird.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MemberAccessException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.MemberAccessException" />-Klasse.</summary>
    </member>
    <member name="M:System.MemberAccessException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.MemberAccessException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird. </param>
    </member>
    <member name="M:System.MemberAccessException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.MemberAccessException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="inner" />-Parameter kein NULL-Verweis ist (Nothing in Visual Basic), wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.MethodAccessException">
      <summary>Die Ausnahme, die bei einem ungültigen Zugriff auf eine Methode, z. B. beim Zugriff aus teilweise vertrauenswürdigem Code auf eine private Methode, ausgelöst wird.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MethodAccessException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.MethodAccessException" />-Klasse. Dabei wird die <see cref="P:System.Exception.Message" />-Eigenschaft der neuen Instanz auf eine vom System gelieferte Meldung festgelegt, die den Fehler beschreibt, z. B. "Fehler beim Zugreifen auf die Methode". Diese Methode berücksichtigt die aktuelle Systemkultur.</summary>
    </member>
    <member name="M:System.MethodAccessException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.MethodAccessException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt. </param>
    </member>
    <member name="M:System.MethodAccessException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.MethodAccessException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="inner" />-Parameter kein NULL-Verweis ist (Nothing in Visual Basic), wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.MissingFieldException">
      <summary>Die Ausnahme, die bei einem Versuch ausgelöst wird, dynamisch auf ein nicht vorhandenes Feld zuzugreifen.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MissingFieldException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.MissingFieldException" />-Klasse.</summary>
    </member>
    <member name="M:System.MissingFieldException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.MissingFieldException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt. </param>
    </member>
    <member name="M:System.MissingFieldException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.MissingFieldException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="inner" />-Parameter kein NULL-Verweis ist (Nothing in Visual Basic), wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="P:System.MissingFieldException.Message">
      <summary>Ruft die Textzeichenfolge ab, die die Signatur des fehlenden Felds, den Klassennamen und den Feldnamen anzeigt.Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns>Die Zeichenfolge der Fehlermeldung.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.MissingMemberException">
      <summary>Die Ausnahme, die bei einem Versuch ausgelöst wird, dynamisch auf einen nicht vorhandenen Klassenmember zuzugreifen.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MissingMemberException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.MissingMemberException" />-Klasse.</summary>
    </member>
    <member name="M:System.MissingMemberException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.MissingMemberException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird. </param>
    </member>
    <member name="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.MissingMemberException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die die Ausnahme verursacht hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="inner">Eine Instanz von <see cref="T:System.Exception" />, die die Ursache der aktuellen Exception ist.Wenn <paramref name="inner" /> kein NULL-Verweis ist (Nothing in Visual Basic), wird die aktuelle Exception in einem Catch-Block ausgelöst, der <paramref name="inner" /> behandelt.</param>
    </member>
    <member name="P:System.MissingMemberException.Message">
      <summary>Ruft die Textzeichenfolge ab, die den Klassennamen, den Membernamen und die Signatur des fehlenden Members anzeigt.</summary>
      <returns>Die Zeichenfolge der Fehlermeldung.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.MissingMethodException">
      <summary>Die Ausnahme, die bei einem Versuch ausgelöst wird, dynamisch auf eine nicht vorhandene Methode zuzugreifen.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MissingMethodException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.MissingMethodException" />-Klasse.</summary>
    </member>
    <member name="M:System.MissingMethodException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.MissingMethodException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt. </param>
    </member>
    <member name="M:System.MissingMethodException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.MissingMethodException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="inner" />-Parameter kein NULL-Verweis ist (Nothing in Visual Basic), wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="P:System.MissingMethodException.Message">
      <summary>Ruft die Textzeichenfolge ab, die den Klassennamen, den Methodennamen und die Signatur der fehlenden Methode anzeigt.Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns>Die Zeichenfolge der Fehlermeldung.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.MTAThreadAttribute">
      <summary>Legt MTA (Multithreaded Apartment) als COM-Threadingmodell für Anwendungen fest. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.MTAThreadAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.MTAThreadAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.MulticastDelegate">
      <summary>Stellt einen Multicastdelegaten dar, d. h. einen Delegaten, in dessen Aufrufliste sich mehrere Elemente befinden können.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.Equals(System.Object)">
      <summary>Bestimmt, ob dieser Multicastdelegat und das angegebene Objekt übereinstimmen.</summary>
      <returns>true, wenn <paramref name="obj" /> und diese Instanz dieselbe Aufrufliste aufweisen, andernfalls false.</returns>
      <param name="obj">Das Objekt, das mit dieser Instanz verglichen werden soll. </param>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.GetInvocationList">
      <summary>Gibt die Aufrufliste dieses Multicastdelegaten in der Reihenfolge der Aufrufe zurück.</summary>
      <returns>Ein Array von Delegaten, deren Aufruflisten zusammen der Aufrufliste dieser Instanz entsprechen.</returns>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.op_Equality(System.MulticastDelegate,System.MulticastDelegate)">
      <summary>Bestimmt, ob zwei <see cref="T:System.MulticastDelegate" />-Objekte gleich sind.</summary>
      <returns>true, wenn <paramref name="d1" /> und <paramref name="d2" /> dieselbe Aufrufliste aufweisen, andernfalls false.</returns>
      <param name="d1">Der linke Operand. </param>
      <param name="d2">Der rechte Operand. </param>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.op_Inequality(System.MulticastDelegate,System.MulticastDelegate)">
      <summary>Bestimmt, ob zwei <see cref="T:System.MulticastDelegate" />-Objekte ungleich sind.</summary>
      <returns>true wenn <paramref name="d1" /> und <paramref name="d2" /> nicht dieselbe Aufrufliste aufweisen, andernfalls false.</returns>
      <param name="d1">Der linke Operand. </param>
      <param name="d2">Der rechte Operand. </param>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.NotImplementedException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn eine angeforderte Methode oder Operation nicht implementiert ist.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.NotImplementedException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.NotImplementedException" />-Klasse mit Standardeigenschaften.</summary>
    </member>
    <member name="M:System.NotImplementedException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.NotImplementedException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
    </member>
    <member name="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.NotImplementedException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="inner" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.NotSupportedException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn eine aufgerufene Methode nicht unterstützt wird oder versucht wird, in einem Stream, der die aufgerufenen Funktionen nicht unterstützt, zu lesen, zu suchen oder zu schreiben.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.NotSupportedException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.NotSupportedException" />-Klasse. Dabei wird die <see cref="P:System.Exception.Message" />-Eigenschaft der neuen Instanz auf eine vom System gelieferte Meldung festgelegt, die den Fehler beschreibt.Diese Methode berücksichtigt die aktuelle Systemkultur.</summary>
    </member>
    <member name="M:System.NotSupportedException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.NotSupportedException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt.Der Inhalt der <paramref name="message" /> soll in verständlicher Sprache gehalten sein.Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.NotSupportedException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter kein NULL-Verweis ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Nullable">
      <summary>Unterstützt einen Werttyp, der null zugewiesen werden kann.Diese Klasse kann nicht vererbt werden.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable.Compare``1(System.Nullable{``0},System.Nullable{``0})">
      <summary>Vergleicht die relativen Werte von zwei <see cref="T:System.Nullable`1" />-Objekten.</summary>
      <returns>Eine ganze Zahl, die die relativen Werte des <paramref name="n1" />-Parameters und des <paramref name="n2" />-Parameters angibt.RückgabewertBeschreibungKleiner als 0Die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft für <paramref name="n1" /> ist false, und die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft für <paramref name="n2" /> ist true.- oder -Die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaften für <paramref name="n1" /> und <paramref name="n2" /> sind true, und der Wert der <see cref="P:System.Nullable`1.Value" />-Eigenschaft für <paramref name="n1" /> ist kleiner als der Wert der <see cref="P:System.Nullable`1.Value" />-Eigenschaft für <paramref name="n2" />.ZeroDie <see cref="P:System.Nullable`1.HasValue" />-Eigenschaften für <paramref name="n1" /> und <paramref name="n2" /> sind false.- oder -Die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaften für <paramref name="n1" /> und <paramref name="n2" /> sind true, und der Wert der <see cref="P:System.Nullable`1.Value" />-Eigenschaft für <paramref name="n1" /> ist gleich dem Wert der <see cref="P:System.Nullable`1.Value" />-Eigenschaft für <paramref name="n2" />.Größer als 0 (null)Die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft für <paramref name="n1" /> ist true, und die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft für <paramref name="n2" /> ist false.- oder -Die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaften für <paramref name="n1" /> und <paramref name="n2" /> sind true, und der Wert der <see cref="P:System.Nullable`1.Value" />-Eigenschaft für <paramref name="n1" /> ist größer als der Wert der <see cref="P:System.Nullable`1.Value" />-Eigenschaft für <paramref name="n2" />.</returns>
      <param name="n1">Ein <see cref="T:System.Nullable`1" />-Objekt.</param>
      <param name="n2">Ein <see cref="T:System.Nullable`1" />-Objekt.</param>
      <typeparam name="T">Der zugrunde liegende Werttyp des <paramref name="n1" />-Parameters und des <paramref name="n2" />-Parameters.</typeparam>
    </member>
    <member name="M:System.Nullable.Equals``1(System.Nullable{``0},System.Nullable{``0})">
      <summary>Gibt an, ob zwei angegebene <see cref="T:System.Nullable`1" />-Objekte gleich sind.</summary>
      <returns>true, wenn der <paramref name="n1" />-Parameter gleich dem <paramref name="n2" />-Parameter ist, andernfalls false. Der Rückgabewert hängt von der <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft und der <see cref="P:System.Nullable`1.Value" />-Eigenschaft der zwei verglichenen Parameter ab.RückgabewertBeschreibungtrueDie <see cref="P:System.Nullable`1.HasValue" />-Eigenschaften für <paramref name="n1" /> und <paramref name="n2" /> sind false. - oder -Die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaften für <paramref name="n1" /> und <paramref name="n2" /> sind true, und die <see cref="P:System.Nullable`1.Value" />-Eigenschaften der Parameter sind gleich.falseDie <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft ist true für einen Parameter und false für den anderen Parameter.- oder -Die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaften für <paramref name="n1" /> und <paramref name="n2" /> sind true, und die <see cref="P:System.Nullable`1.Value" />-Eigenschaften der Parameter sind ungleich.</returns>
      <param name="n1">Ein <see cref="T:System.Nullable`1" />-Objekt.</param>
      <param name="n2">Ein <see cref="T:System.Nullable`1" />-Objekt.</param>
      <typeparam name="T">Der zugrunde liegende Werttyp des <paramref name="n1" />-Parameters und des <paramref name="n2" />-Parameters.</typeparam>
    </member>
    <member name="M:System.Nullable.GetUnderlyingType(System.Type)">
      <summary>Gibt das zugrunde liegende Typargument des angegebenen Typs zurück, für den NULL-Werte zulässig sind.</summary>
      <returns>Das Typargument des <paramref name="nullableType" />-Parameters, wenn der <paramref name="nullableType" />-Parameter ein geschlossener generischer Typ ist, für den NULL-Werte zulässig sind, andernfalls null. </returns>
      <param name="nullableType">Ein <see cref="T:System.Type" />-Objekt, das einen geschlossenen generischen Typ beschreibt, für den NULL-Werte zulässig sind. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nullableType" /> ist null.</exception>
    </member>
    <member name="T:System.Nullable`1">
      <summary>Stellt einen Werttyp dar, der null zugewiesen werden kann.</summary>
      <typeparam name="T">Der zugrunde liegende Werttyp des generischen <see cref="T:System.Nullable`1" />-Typs.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable`1.#ctor(`0)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Nullable`1" />-Struktur mit dem angegebenen Wert. </summary>
      <param name="value">Ein Werttyp.</param>
    </member>
    <member name="M:System.Nullable`1.Equals(System.Object)">
      <summary>Gibt an, ob das aktuelle <see cref="T:System.Nullable`1" />-Objekt einem angegebenen Objekt entspricht.</summary>
      <returns>true, wenn der <paramref name="other" />-Parameter gleich dem aktuellen <see cref="T:System.Nullable`1" />-Objekt ist, andernfalls false. Diese Tabelle beschreibt, wie Gleichheit für die verglichenen Werte definiert wird: RückgabewertBeschreibungtrueDie <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft ist false, und der <paramref name="other" />-Parameter ist null.Das heißt, zwei NULL-Werte sind per Definition gleich.- oder - Die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft ist true, und der von der <see cref="P:System.Nullable`1.Value" />-Eigenschaft zurückgegebene Wert ist gleich dem <paramref name="other" />-Parameter.falseDie <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft für die aktuelle <see cref="T:System.Nullable`1" />-Struktur ist true, und der <paramref name="other" />-Parameter ist null.- oder - Die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft für die aktuelle <see cref="T:System.Nullable`1" />-Struktur ist false, und der <paramref name="other" />-Parameter ist nicht null.- oder - Die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft der aktuellen <see cref="T:System.Nullable`1" />-Struktur ist true, und der von der <see cref="P:System.Nullable`1.Value" />-Eigenschaft zurückgegebene Wert ist ungleich dem <paramref name="other" />-Parameter.</returns>
      <param name="other">Ein Objekt.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable`1.GetHashCode">
      <summary>Ruft den Hashcode des Objekts ab, das von der <see cref="P:System.Nullable`1.Value" />-Eigenschaft zurückgegeben wird.</summary>
      <returns>Der Hashcode des Objekts, das von der <see cref="P:System.Nullable`1.Value" />-Eigenschaft zurückgegeben wird, wenn die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft true ist, oder 0 (null), wenn die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft false ist. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable`1.GetValueOrDefault">
      <summary>Ruft den Wert des aktuellen <see cref="T:System.Nullable`1" />-Objekts oder den Standardwert des Objekts ab.</summary>
      <returns>Der Wert der <see cref="P:System.Nullable`1.Value" />-Eigenschaft, wenn die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft true ist, andernfalls der Standardwert des aktuellen <see cref="T:System.Nullable`1" />-Objekts.Der Typ des Standardwerts entspricht dem Typargument des aktuellen <see cref="T:System.Nullable`1" />-Objekts, und der Wert des Standardwerts wird ausschließlich binär mit 0 (null) angegeben.</returns>
    </member>
    <member name="M:System.Nullable`1.GetValueOrDefault(`0)">
      <summary>Ruft den Wert des aktuellen <see cref="T:System.Nullable`1" />-Objekts oder den angegebenen Standardwert ab.</summary>
      <returns>Der Wert der <see cref="P:System.Nullable`1.Value" />-Eigenschaft, wenn die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft true ist, andernfalls der <paramref name="defaultValue" />-Parameter.</returns>
      <param name="defaultValue">Ein zurückzugebender Wert, wenn die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft false ist.</param>
    </member>
    <member name="P:System.Nullable`1.HasValue">
      <summary>Ruft einen Wert ab, der angibt, ob das aktuelle <see cref="T:System.Nullable`1" />-Objekt einen gültigen Wert des zugrunde liegenden Typs hat. </summary>
      <returns>true, wenn das aktuelle <see cref="T:System.Nullable`1" />-Objekt über einen Wert verfügt; false, wenn das aktuelle <see cref="T:System.Nullable`1" />-Objekt über keinen Wert verfügt.</returns>
    </member>
    <member name="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
      <summary>Definiert eine explizite Konvertierung einer <see cref="T:System.Nullable`1" />-Instanz in den zugrunde liegenden Wert. </summary>
      <returns>Der Wert der <see cref="P:System.Nullable`1.Value" />-Eigenschaft für den <paramref name="value" />-Parameter.</returns>
      <param name="value">Ein Wert, der NULL-Werte zulässt.</param>
    </member>
    <member name="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
      <summary>Erstellt ein neues <see cref="T:System.Nullable`1" />-Objekt, das mit einem angegebenen Wert initialisiert wurde. </summary>
      <returns>Ein <see cref="T:System.Nullable`1" />-Objekt, dessen <see cref="P:System.Nullable`1.Value" />-Eigenschaft mit dem <paramref name="value" />-Parameter initialisiert wird.</returns>
      <param name="value">Ein Werttyp.</param>
    </member>
    <member name="M:System.Nullable`1.ToString">
      <summary>Gibt die Textdarstellung des Werts des aktuellen <see cref="T:System.Nullable`1" />-Objekts zurück.</summary>
      <returns>Die Textdarstellung des Werts des aktuellen <see cref="T:System.Nullable`1" />-Objekts, wenn die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft true ist, oder eine leere Zeichenfolge (""), wenn die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft false ist.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Nullable`1.Value">
      <summary>Ruft den Wert des aktuellen <see cref="T:System.Nullable`1" />-Objekts ab, wenn ihm ein gültiger zugrunde liegender Wert zugewiesen wurde.</summary>
      <returns>Der Wert des aktuellen <see cref="T:System.Nullable`1" />-Objekts, wenn die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft true ist.Eine Ausnahme wird ausgelöst, wenn die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft false ist.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Nullable`1.HasValue" />-Eigenschaft ist false.</exception>
    </member>
    <member name="T:System.NullReferenceException">
      <summary>Die Ausnahme, die bei einem Versuch ausgelöst wird, einen Verweis auf ein NULL-Objekt zu dereferenzieren.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.NullReferenceException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.NullReferenceException" />-Klasse. Dabei wird die <see cref="P:System.Exception.Message" />-Eigenschaft der neuen Instanz auf eine vom System gelieferte Meldung festgelegt, die den Fehler beschreibt, z. B. "Der Wert 'null' wurde gefunden, als eine Objektinstanz erforderlich war". Diese Meldung berücksichtigt die aktuelle Systemkultur.</summary>
    </member>
    <member name="M:System.NullReferenceException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.NullReferenceException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt.Der Inhalt der <paramref name="message" /> soll in verständlicher Sprache gehalten sein.Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.NullReferenceException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.NullReferenceException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Object">
      <summary>Unterstützt sämtliche Klassen in der Hierarchie von .NET Framework-Klassen und stellt abgeleiteten Klassen Low-Level-Dienste zur Verfügung.Dies ist die allen Klassen von .NET Framework übergeordnete Basisklasse und stellt den Stamm der Typhierarchie dar.Weitere Informationen zum Durchsuchen des .NET Framework-Quellcodes für diesen Typ finden Sie unter Verweisquelle.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Object.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Object" />-Klasse.</summary>
    </member>
    <member name="M:System.Object.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene Objekt mit dem aktuellen Objekt identisch ist.</summary>
      <returns>true, wenn das angegebene Objekt und das aktuelle Objekt gleich sind, andernfalls false.</returns>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.Equals(System.Object,System.Object)">
      <summary>Stellt fest, ob die angegebenen Objektinstanzen als gleich betrachtet werden.</summary>
      <returns>true, wenn die Objekte als gleich betrachtet werden, andernfalls false.Wenn sowohl <paramref name="objA" /> als auch <paramref name="objB" />NULL sind, gibt diese Methode true zurück.</returns>
      <param name="objA">Das erste zu vergleichende Objekt. </param>
      <param name="objB">Das zweite zu vergleichende Objekt. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.Finalize">
      <summary>Gibt einem Objekt Gelegenheit zu dem Versuch, Ressourcen freizugeben und andere Bereinigungen durchzuführen, bevor es von der Garbage Collection freigegeben wird.</summary>
    </member>
    <member name="M:System.Object.GetHashCode">
      <summary>Fungiert als die Standardhashfunktion. </summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.GetType">
      <summary>Ruft den <see cref="T:System.Type" /> der aktuellen Instanz ab.</summary>
      <returns>Der genaue Laufzeittyp der aktuellen Instanz.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.MemberwiseClone">
      <summary>Erstellt eine flache Kopie vom aktuellen <see cref="T:System.Object" />.</summary>
      <returns>Eine flache Kopie vom aktuellen <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Object.ReferenceEquals(System.Object,System.Object)">
      <summary>Stellt fest, ob die angegebenen <see cref="T:System.Object" />-Instanzen dieselbe Instanz sind.</summary>
      <returns>true, wenn <paramref name="objA" /> dieselbe Instanz wie <paramref name="objB" /> ist oder beide NULL sind, andernfalls false.</returns>
      <param name="objA">Das erste zu vergleichende Objekt. </param>
      <param name="objB">Das zweite zu vergleichende Objekt. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ObjectDisposedException">
      <summary>Die Ausnahme, die beim Ausführen einer Operation für ein freigegebenes Objekt ausgelöst wird.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ObjectDisposedException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ObjectDisposedException" />-Klasse mit einer Zeichenfolge, die den Namen des freigegebenen Objekts enthält.</summary>
      <param name="objectName">Eine Zeichenfolge, die den Namen des freigegebenen Objekts enthält. </param>
    </member>
    <member name="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ObjectDisposedException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn die <paramref name="innerException" /> nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ObjectDisposedException" />-Klasse mit dem angegebenen Objektnamen und der Meldung.</summary>
      <param name="objectName">Der Name des freigegebenen Objekts. </param>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
    </member>
    <member name="P:System.ObjectDisposedException.Message">
      <summary>Ruft die Meldung ab, in der der Fehler beschrieben wird.</summary>
      <returns>Eine Zeichenfolge, die den Fehler beschreibt.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ObjectDisposedException.ObjectName">
      <summary>Ruft den Namen des freigegebenen Objekts ab.</summary>
      <returns>Eine Zeichenfolge, die den Namen des freigegebenen Objekts enthält.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.ObsoleteAttribute">
      <summary>Markiert die Programmelemente, die nicht mehr verwendet werden.Diese Klasse kann nicht vererbt werden.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ObsoleteAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ObsoleteAttribute" />-Klasse mit Standardeigenschaften.</summary>
    </member>
    <member name="M:System.ObsoleteAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ObsoleteAttribute" />-Klasse mit einer angegebenen Meldung zur Problemumgehung.</summary>
      <param name="message">Die Zeichenfolge, die das Umgehen des Problems beschreibt. </param>
    </member>
    <member name="M:System.ObsoleteAttribute.#ctor(System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ObsoleteAttribute" />-Klasse mit einer Meldung über Umgehungsmöglichkeiten und einem booleschen Wert, der angibt, ob die Verwendung des veralteten Elements als Fehler zu behandeln ist.</summary>
      <param name="message">Die Zeichenfolge, die das Umgehen des Problems beschreibt. </param>
      <param name="error">Der boolesche Wert, der angibt, ob die Verwendung des veralteten Elements als Fehler zu behandeln ist. </param>
    </member>
    <member name="P:System.ObsoleteAttribute.IsError">
      <summary>Ruft einen booleschen Wert ab, der angibt, ob der Compiler die Verwendung des veralteten Programmelements als Fehler behandelt.</summary>
      <returns>true, wenn die Verwendung des veralteten Elements als Fehler zu behandeln ist, andernfalls false.Die Standardeinstellung ist false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ObsoleteAttribute.Message">
      <summary>Ruft die Meldung zum Umgehen des Problems einschließlich einer Beschreibung alternativer Programmelemente ab.</summary>
      <returns>Die Zeichenfolge zur Umgehung des Problems.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.OutOfMemoryException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn für die weitere Ausführung eines Programms nicht genügend Arbeitsspeicher zur Verfügung steht.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.OutOfMemoryException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.OutOfMemoryException" />-Klasse.</summary>
    </member>
    <member name="M:System.OutOfMemoryException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.OutOfMemoryException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird. </param>
    </member>
    <member name="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.OutOfMemoryException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter kein NULL-Verweis ist (Nothing in Visual Basic), wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.OverflowException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn eine arithmetische, Umwandlungs- oder Konvertierungsoperation in einem geprüften Kontext einen Überlauf verursacht.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.OverflowException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.OverflowException" />-Klasse.</summary>
    </member>
    <member name="M:System.OverflowException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.OverflowException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird. </param>
    </member>
    <member name="M:System.OverflowException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.OverflowException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter kein NULL-Verweis ist, (Nothing in Visual Basic), wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.ParamArrayAttribute">
      <summary>Gibt an, dass eine Methode mit einer variablen Anzahl von Argumenten aufgerufen werden kann.Diese Klasse kann nicht vererbt werden.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ParamArrayAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ParamArrayAttribute" />-Klasse mit Standardeigenschaften.</summary>
    </member>
    <member name="T:System.PlatformNotSupportedException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein Feature auf einer bestimmten Plattform nicht ausgeführt werden kann.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.PlatformNotSupportedException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.PlatformNotSupportedException" />-Klasse mit Standardeigenschaften.</summary>
    </member>
    <member name="M:System.PlatformNotSupportedException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.PlatformNotSupportedException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Textmeldung, in der die Ursache der Ausnahme erklärt wird. </param>
    </member>
    <member name="M:System.PlatformNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.PlatformNotSupportedException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="inner" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Predicate`1">
      <summary>Stellt die Methode dar, die einen Satz von Kriterien definiert und bestimmt, ob das angegebene Objekt jene Kriterien erfüllt.</summary>
      <typeparam name="T">Der Typ des zu vergleichenden Objekts.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Predicate`1.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Predicate`1.BeginInvoke(`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Predicate`1.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Predicate`1.Invoke(`0)"></member>
    <member name="T:System.RankException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein an eine Methode übergebenes Array eine falsche Anzahl an Dimensionen hat.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RankException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.RankException" />-Klasse.</summary>
    </member>
    <member name="M:System.RankException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.RankException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt. </param>
    </member>
    <member name="M:System.RankException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.RankException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter kein NULL-Verweis ist, (Nothing in Visual Basic), wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.RuntimeFieldHandle">
      <summary>Stellt ein Feld unter Verwendung eines internen Metadatentokens dar.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.Equals(System.Object)">
      <summary>Gibt an, ob die aktuelle Instanz und das angegebene Objekt gleich sind.</summary>
      <returns>true, wenn <paramref name="obj" /> ein <see cref="T:System.RuntimeFieldHandle" /> ist und dem Wert der aktuellen Instanz entspricht, andernfalls false.</returns>
      <param name="obj">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.Equals(System.RuntimeFieldHandle)">
      <summary>Gibt an, ob die aktuelle Instanz und das angegebene <see cref="T:System.RuntimeFieldHandle" /> gleich sind.</summary>
      <returns>true, wenn der Wert von <paramref name="handle" /> dem Wert der aktuellen Instanz entspricht, andernfalls false.</returns>
      <param name="handle">Das <see cref="T:System.RuntimeFieldHandle" />, das mit der aktuellen Instanz verglichen werden soll.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.GetHashCode">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.op_Equality(System.RuntimeFieldHandle,System.RuntimeFieldHandle)">
      <summary>Gibt an, ob zwei <see cref="T:System.RuntimeFieldHandle" />-Strukturen gleich sind.</summary>
      <returns>true, wenn <paramref name="left" /> und <paramref name="right" /> gleich sind, andernfalls false.</returns>
      <param name="left">Das <see cref="T:System.RuntimeFieldHandle" />, das mit <paramref name="right" /> verglichen werden soll.</param>
      <param name="right">Das <see cref="T:System.RuntimeFieldHandle" />, das mit <paramref name="left" /> verglichen werden soll.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.op_Inequality(System.RuntimeFieldHandle,System.RuntimeFieldHandle)">
      <summary>Gibt an, ob zwei <see cref="T:System.RuntimeFieldHandle" />-Strukturen ungleich sind.</summary>
      <returns>true, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls false.</returns>
      <param name="left">Das <see cref="T:System.RuntimeFieldHandle" />, das mit <paramref name="right" /> verglichen werden soll.</param>
      <param name="right">Das <see cref="T:System.RuntimeFieldHandle" />, das mit <paramref name="left" /> verglichen werden soll.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.RuntimeMethodHandle">
      <summary>Ein <see cref="T:System.RuntimeMethodHandle" /> ist ein Handle für die interne Metadatendarstellung einer Methode.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.Equals(System.Object)">
      <summary>Gibt an, ob diese Instanz einem angegebenen Objekt entspricht.</summary>
      <returns>true, wenn <paramref name="obj" /> ein <see cref="T:System.RuntimeMethodHandle" /> und gleich dem Wert dieser Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein <see cref="T:System.Object" />, um einen Vergleich mit dieser Instanz durchzuführen.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.Equals(System.RuntimeMethodHandle)">
      <summary>Gibt an, ob diese Instanz einem angegebenen <see cref="T:System.RuntimeMethodHandle" /> entspricht.</summary>
      <returns>true, wenn <paramref name="handle" /> dem Wert dieser Instanz entspricht, andernfalls false.</returns>
      <param name="handle">Ein <see cref="T:System.RuntimeMethodHandle" />, um einen Vergleich mit dieser Instanz durchzuführen.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.op_Equality(System.RuntimeMethodHandle,System.RuntimeMethodHandle)">
      <summary>Gibt an, ob zwei Instanzen von <see cref="T:System.RuntimeMethodHandle" /> gleich sind.</summary>
      <returns>true, wenn der Wert von <paramref name="left" /> dem Wert von <paramref name="right" /> entspricht, andernfalls false.</returns>
      <param name="left">Ein <see cref="T:System.RuntimeMethodHandle" />, das mit <paramref name="right" /> verglichen werden soll.</param>
      <param name="right">Ein <see cref="T:System.RuntimeMethodHandle" />, das mit <paramref name="left" /> verglichen werden soll.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.op_Inequality(System.RuntimeMethodHandle,System.RuntimeMethodHandle)">
      <summary>Gibt an, ob zwei Instanzen von <see cref="T:System.RuntimeMethodHandle" /> ungleich sind.</summary>
      <returns>true, wenn der Wert von <paramref name="left" /> dem Wert von <paramref name="right" /> nicht entspricht, andernfalls false.</returns>
      <param name="left">Ein <see cref="T:System.RuntimeMethodHandle" />, das mit <paramref name="right" /> verglichen werden soll.</param>
      <param name="right">Ein <see cref="T:System.RuntimeMethodHandle" />, das mit <paramref name="left" /> verglichen werden soll.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.RuntimeTypeHandle">
      <summary>Stellt einen Typ unter Verwendung eines internen Metadatentokens dar.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.Equals(System.Object)">
      <summary>Gibt an, ob das angegebene Objekt und die aktuelle <see cref="T:System.RuntimeTypeHandle" />-Struktur gleich sind.</summary>
      <returns>true, wenn <paramref name="obj" /> eine <see cref="T:System.RuntimeTypeHandle" />-Struktur und gleich dem Wert dieser Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.Equals(System.RuntimeTypeHandle)">
      <summary>Gibt an, ob die angegebene <see cref="T:System.RuntimeTypeHandle" />-Struktur und die aktuelle <see cref="T:System.RuntimeTypeHandle" />-Struktur gleich sind.</summary>
      <returns>true, wenn der Wert von <paramref name="handle" /> gleich dem Wert dieser Instanz ist, andernfalls false.</returns>
      <param name="handle">Die <see cref="T:System.RuntimeTypeHandle" />-Struktur, die mit der aktuellen Instanz verglichen werden soll.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.GetHashCode">
      <summary>Gibt den Hashcode für die aktuelle Instanz zurück.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Equality(System.Object,System.RuntimeTypeHandle)">
      <summary>Gibt an, ob ein Objekt und eine <see cref="T:System.RuntimeTypeHandle" />-Struktur gleich sind.</summary>
      <returns>true, wenn <paramref name="left" /> eine <see cref="T:System.RuntimeTypeHandle" />-Struktur und gleich <paramref name="right" /> ist, andernfalls false.</returns>
      <param name="left">Ein mit <paramref name="right" /> zu vergleichendes Objekt.</param>
      <param name="right">Eine <see cref="T:System.RuntimeTypeHandle" />-Struktur, die mit <paramref name="left" /> verglichen werden soll.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Equality(System.RuntimeTypeHandle,System.Object)">
      <summary>Gibt an, ob eine <see cref="T:System.RuntimeTypeHandle" />-Struktur und ein Objekt gleich sind.</summary>
      <returns>true, wenn <paramref name="right" /> ein <see cref="T:System.RuntimeTypeHandle" /> und gleich <paramref name="left" /> ist, andernfalls false.</returns>
      <param name="left">Eine <see cref="T:System.RuntimeTypeHandle" />-Struktur, die mit <paramref name="right" /> verglichen werden soll.</param>
      <param name="right">Ein mit <paramref name="left" /> zu vergleichendes Objekt.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Inequality(System.Object,System.RuntimeTypeHandle)">
      <summary>Gibt an, ob ein Objekt und eine <see cref="T:System.RuntimeTypeHandle" />-Struktur ungleich sind.</summary>
      <returns>true, wenn <paramref name="left" /> ein <see cref="T:System.RuntimeTypeHandle" /> und ungleich <paramref name="right" /> ist, andernfalls false.</returns>
      <param name="left">Ein mit <paramref name="right" /> zu vergleichendes Objekt.</param>
      <param name="right">Eine <see cref="T:System.RuntimeTypeHandle" />-Struktur, die mit <paramref name="left" /> verglichen werden soll.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Inequality(System.RuntimeTypeHandle,System.Object)">
      <summary>Gibt an, ob eine <see cref="T:System.RuntimeTypeHandle" />-Struktur und ein Objekt ungleich sind.</summary>
      <returns>true, wenn <paramref name="right" /> eine <see cref="T:System.RuntimeTypeHandle" />-Struktur und ungleich <paramref name="left" /> ist, andernfalls false.</returns>
      <param name="left">Eine <see cref="T:System.RuntimeTypeHandle" />-Struktur, die mit <paramref name="right" /> verglichen werden soll.</param>
      <param name="right">Ein mit <paramref name="left" /> zu vergleichendes Objekt.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.SByte">
      <summary>Stellt eine ganze 8-Bit-Zahl mit Vorzeichen dar.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.CompareTo(System.SByte)">
      <summary>Vergleicht diese Instanz mit einer angegebenen 8-Bit-Ganzzahl mit Vorzeichen und gibt eine Angabe über das Verhältnis der entsprechenden Werte zurück.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relative Reihenfolge dieser Instanz und <paramref name="value" /> angibt.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Eine ganze 8-Bit-Zahl mit Vorzeichen, die verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.SByte.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> eine Instanz von <see cref="T:System.SByte" /> ist, deren Wert gleich dem Wert dieser Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.SByte.Equals(System.SByte)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen <see cref="T:System.SByte" />-Wert ist.</summary>
      <returns>true, wenn <paramref name="obj" /> über denselben Wert wie diese Instanz verfügt, andernfalls false.</returns>
      <param name="obj">Ein mit dieser Instanz zu vergleichender <see cref="T:System.SByte" />-Wert.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.SByte.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.SByte.MaxValue">
      <summary>Stellt den größtmöglichen Wert von <see cref="T:System.SByte" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.SByte.MinValue">
      <summary>Stellt den kleinstmöglichen Wert von <see cref="T:System.SByte" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine ganze 8-Bit-Zahl mit Vorzeichen, die der Zahl im <paramref name="s" />-Parameter entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Zahl darstellt.Die Zeichenfolge wird unter Verwendung des <see cref="F:System.Globalization.NumberStyles.Integer" />-Formats interpretiert.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not consist of an optional sign followed by a sequence of digits (zero through nine). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine ganze 8-Bit-Zahl mit Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.Die Zeichenfolge wird unter Verwendung des durch <paramref name="style" /> angegebenen Formats interpretiert.</param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angibt, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format that is compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturabhängigen Format in die entsprechende ganze 8-Bit-Zahl mit Vorzeichen.</summary>
      <returns>Eine ganze 8-Bit-Zahl mit Vorzeichen, die der im <paramref name="s" />-Parameter angegebenen Zahl entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.Die Zeichenfolge wird unter Verwendung des durch <paramref name="style" /> angegebenen Formats interpretiert.</param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angibt, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt.Wenn <paramref name="provider" /> gleich null ist, wird die aktuelle Threadkultur verwendet.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.-or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format that is compliant with <paramref name="style" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.-or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen kulturspezifischen Format in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Eine ganze 8-Bit-Zahl mit Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Zahl darstellt.Die Zeichenfolge wird unter Verwendung des <see cref="F:System.Globalization.NumberStyles.Integer" />-Formats interpretiert.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt.Wenn <paramref name="provider" /> gleich null ist, wird die aktuelle Threadkultur verwendet.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relative Reihenfolge dieser Instanz und <paramref name="value" /> angibt.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an <see cref="T:System.SByte" />. </exception>
    </member>
    <member name="M:System.SByte.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.SByte.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true, wenn der Wert der aktuellen Instanz nicht 0 (null) ist, andernfalls false.</returns>
      <param name="provider">Dieser Parameter wird nicht verwendet.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Byte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird nicht verwendet.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Char" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei einem entsprechenden Versuch wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Keine.Diese Konvertierung wird nicht unterstützt.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Decimal" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird nicht verwendet.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Double" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int16" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int32" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int64" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Der unveränderte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Single" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Der in ein Objekt vom Typ <paramref name="type" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="type">Der <see cref="T:System.Type" />, in den dieser <see cref="T:System.SByte" />-Wert konvertiert werden soll.</param>
      <param name="provider">Eine <see cref="T:System.IFormatProvider" />-Implementierung, die Informationen zum Format des zurückgegebenen Werts bereitstellt.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt16" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt32" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.SByte.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt64" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.SByte.ToString">
      <summary>Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz, die aus einem Minuszeichen, sofern die Zahl negativ ist, und einer Folge von Ziffern zwischen 0 bis 9 ohne führende Nullen besteht.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.ToString(System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Berücksichtigung der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="provider" />.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.ToString(System.String)">
      <summary>Konvertiert den numerischen Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung unter Berücksichtigung des angegebenen Formats.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" />.</returns>
      <param name="format">Eine standardmäßige oder benutzerdefinierte numerische Formatierungszeichenfolge.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.ToString(System.String,System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Verwendung des angegebenen Formats und der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" /> und <paramref name="provider" />.</returns>
      <param name="format">Eine standardmäßige oder benutzerdefinierte numerische Formatierungszeichenfolge.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte@)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und kulturspezifischen Format in das entsprechende <see cref="T:System.SByte" /> und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich abgeschlossen wurde.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt. </param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die das zulässige Format von <paramref name="s" /> angibt.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den Wert der ganzen 8-Bit-Zahl mit Vorzeichen zurück, der der Zahl in <paramref name="s" /> entspricht, und 0 (null), wenn die Konvertierung nicht durchgeführt werden konnte.Bei der Konvertierung tritt ein Fehler auf, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, nicht in einem mit <paramref name="style" /> kompatiblen Format vorliegt oder eine Zahl kleiner als <see cref="F:System.SByte.MinValue" /> oder größer als <see cref="F:System.SByte.MaxValue" /> darstellt.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> ursprünglich übergebene Werte werden ausnahmslos überschrieben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.TryParse(System.String,System.SByte@)">
      <summary>Versucht, die Zeichenfolgendarstellung einer Zahl in deren <see cref="T:System.SByte" />-Entsprechung zu konvertieren, und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich durchgeführt wurde.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.</param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den Wert der ganzen 8-Bit-Zahl mit Vorzeichen zurück, der der Zahl in <paramref name="s" /> entspricht, und 0 (null), wenn die Konvertierung nicht durchgeführt werden konnte.Die Konvertierung kann nicht durchgeführt werden, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, kein gültiges Format aufweist oder eine Zahl kleiner als <see cref="F:System.SByte.MinValue" /> oder größer als <see cref="F:System.SByte.MaxValue" /> darstellt.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> ursprünglich übergebene Werte werden ausnahmslos überschrieben.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Single">
      <summary>Stellt eine Gleitkommazahl mit einfacher Genauigkeit dar.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.CompareTo(System.Single)">
      <summary>Vergleicht diese Instanz mit einer angegebenen Gleitkommazahl mit einfacher Genauigkeit und gibt eine ganze Zahl zurück, die angibt, ob der Wert dieser Instanz kleiner oder größer als der Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit ist oder mit dieser übereinstimmt.</summary>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser Instanz und <paramref name="value" /> angibt.Return Value Description Less than zero This instance is less than <paramref name="value" />.-or- This instance is not a number (<see cref="F:System.Single.NaN" />) and <paramref name="value" /> is a number. Zero This instance is equal to <paramref name="value" />.-or- Both this instance and <paramref name="value" /> are not a number (<see cref="F:System.Single.NaN" />), <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />. Greater than zero This instance is greater than <paramref name="value" />.-or- This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Single.NaN" />). </returns>
      <param name="value">Eine Gleitkommazahl mit einfacher Genauigkeit, mit der der Vergleich erfolgen soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Single.Epsilon">
      <summary>Stellt den kleinsten positiven <see cref="T:System.Single" />-Wert dar, der größer als 0 (null) ist.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> eine Instanz von <see cref="T:System.Single" /> ist, deren Wert gleich dem Wert dieser Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Single.Equals(System.Single)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz und ein angegebenes <see cref="T:System.Single" />-Objekt den gleichen Wert darstellen.</summary>
      <returns>true, wenn <paramref name="obj" /> gleich dieser Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Single.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Single.IsInfinity(System.Single)">
      <summary>Gibt einen Wert zurück, der angibt, ob der Wert der angegebenen Zahl -unendlich oder +unendlich ist.</summary>
      <returns>true, wenn <paramref name="f" /> entweder <see cref="F:System.Single.PositiveInfinity" /> oder <see cref="F:System.Single.NegativeInfinity" /> ergibt, andernfalls false.</returns>
      <param name="f">Eine Gleitkommazahl mit einfacher Genauigkeit. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.IsNaN(System.Single)">
      <summary>Gibt einen Wert zurück, der angibt, ob der angegebene Wert keine Zahl ist (<see cref="F:System.Single.NaN" />).</summary>
      <returns>true, wenn <paramref name="f" /> Not-a-Number (<see cref="F:System.Single.NaN" />) ergibt, andernfalls false.</returns>
      <param name="f">Eine Gleitkommazahl mit einfacher Genauigkeit. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.IsNegativeInfinity(System.Single)">
      <summary>Gibt einen Wert zurück, der angibt, ob die angegebene Zahl minus unendlich ergibt.</summary>
      <returns>true, wenn <paramref name="f" /><see cref="F:System.Single.NegativeInfinity" /> ergibt, andernfalls false.</returns>
      <param name="f">Eine Gleitkommazahl mit einfacher Genauigkeit. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.IsPositiveInfinity(System.Single)">
      <summary>Gibt einen Wert zurück, der angibt, ob die angegebene Zahl plus unendlich ergibt.</summary>
      <returns>true, wenn <paramref name="f" /><see cref="F:System.Single.PositiveInfinity" /> ergibt, andernfalls false.</returns>
      <param name="f">Eine Gleitkommazahl mit einfacher Genauigkeit. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.MaxValue">
      <summary>Stellt den größtmöglichen Wert von <see cref="T:System.Single" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.MinValue">
      <summary>Stellt den kleinstmöglichen Wert von <see cref="T:System.Single" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.NaN">
      <summary>Stellt Not-a-Number (NaN) dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.NegativeInfinity">
      <summary>Stellt minus unendlich dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.op_Equality(System.Single,System.Single)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei angegebene <see cref="T:System.Single" />-Werte gleich sind.</summary>
      <returns>true, wenn <paramref name="left" /> und <paramref name="right" /> gleich sind, andernfalls false.</returns>
      <param name="left">Der erste zu vergleichende Wert.</param>
      <param name="right">Der zweite zu vergleichende Wert.</param>
    </member>
    <member name="M:System.Single.op_GreaterThan(System.Single,System.Single)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebener <see cref="T:System.Single" />-Wert größer als ein anderer angegebener <see cref="T:System.Single" />-Wert ist.</summary>
      <returns>true, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls false.</returns>
      <param name="left">Der erste zu vergleichende Wert.</param>
      <param name="right">Der zweite zu vergleichende Wert.</param>
    </member>
    <member name="M:System.Single.op_GreaterThanOrEqual(System.Single,System.Single)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebener <see cref="T:System.Single" />-Wert größer oder gleich einem anderen angegebenen <see cref="T:System.Single" />-Wert ist.</summary>
      <returns>true, wenn <paramref name="left" /> größer oder gleich <paramref name="right" /> ist, andernfalls false.</returns>
      <param name="left">Der erste zu vergleichende Wert.</param>
      <param name="right">Der zweite zu vergleichende Wert.</param>
    </member>
    <member name="M:System.Single.op_Inequality(System.Single,System.Single)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei angegebene <see cref="T:System.Single" />-Werte gleich sind.</summary>
      <returns>true, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls false.</returns>
      <param name="left">Der erste zu vergleichende Wert.</param>
      <param name="right">Der zweite zu vergleichende Wert.</param>
    </member>
    <member name="M:System.Single.op_LessThan(System.Single,System.Single)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebener <see cref="T:System.Single" />-Wert größer als ein anderer angegebener <see cref="T:System.Single" />-Wert ist.</summary>
      <returns>true, wenn <paramref name="left" /> kleiner als <paramref name="right" /> ist, andernfalls false.</returns>
      <param name="left">Der erste zu vergleichende Wert.</param>
      <param name="right">Der zweite zu vergleichende Wert.</param>
    </member>
    <member name="M:System.Single.op_LessThanOrEqual(System.Single,System.Single)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebener <see cref="T:System.Single" /> -Wert kleiner oder gleich einem anderen angegebenen <see cref="T:System.Single" />-Wert ist.</summary>
      <returns>true, wenn <paramref name="left" /> kleiner oder gleich <paramref name="right" /> ist, andernfalls false.</returns>
      <param name="left">Der erste zu vergleichende Wert.</param>
      <param name="right">Der zweite zu vergleichende Wert.</param>
    </member>
    <member name="M:System.Single.Parse(System.String)">
      <summary>Konvertiert die Zeichenfolgenentsprechung einer Zahl in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die dem numerischen Wert oder Symbol in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die dem numerischen Wert oder Symbol in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält. </param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angeben, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Float" /> in Kombination mit <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturabhängigen Format in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die dem numerischen Wert oder Symbol in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält. </param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angeben, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Float" /> in Kombination mit <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a numeric value. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Parse(System.String,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem bestimmten kulturabhängigen Format in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die dem numerischen Wert oder Symbol in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält. </param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.PositiveInfinity">
      <summary>Stellt plus unendlich dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relative Reihenfolge dieser Instanz und <paramref name="value" /> angibt.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Single" />. </exception>
    </member>
    <member name="M:System.Single.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.Single.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true, wenn der Wert der aktuellen Instanz nicht 0 (null) ist, andernfalls false.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Byte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Diese Konvertierung wird nicht unterstützt.Es wird kein Wert zurückgegeben.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Single.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Diese Konvertierung wird nicht unterstützt.Es wird kein Wert zurückgegeben.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Single.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Decimal" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Double" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int16" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int32" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int64" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.SByte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Der unveränderte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Der in <paramref name="type" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="type">Der Typ, in den dieser <see cref="T:System.Single" />-Wert konvertiert werden soll.</param>
      <param name="provider">Ein Objekt, das Informationen zum Format des zurückgegebenen Werts bereitstellt.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</summary>
      <returns>Der in ein <see cref="T:System.UInt16" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt32" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Single.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt64" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.Single.ToString">
      <summary>Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.ToString(System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Berücksichtigung der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="provider" />.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.ToString(System.String)">
      <summary>Konvertiert den numerischen Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung unter Berücksichtigung des angegebenen Formats.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" />.</returns>
      <param name="format">Eine numerische Formatierungszeichenfolge.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.ToString(System.String,System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Verwendung des angegebenen Formats und der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" /> und <paramref name="provider" />.</returns>
      <param name="format">Eine numerische Formatierungszeichenfolge.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturabhängigen Format in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt. </param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die das zulässige Format von <paramref name="s" /> angibt.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Float" /> in Kombination mit <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung eine Gleitkommazahl mit einfacher Genauigkeit zurück, die dem numerischen Wert oder dem in <paramref name="s" /> enthaltenen Symbol entspricht, und 0 (null), wenn die Konvertierung nicht durchgeführt werden konnte.Die Konvertierung kann nicht durchgeführt werden, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, kein mit <paramref name="style" /> kompatibles Format aufweist, eine Zahl kleiner als <see cref="F:System.Single.MinValue" /> oder größer als <see cref="F:System.Single.MaxValue" /> darstellt, oder wenn <paramref name="style" /> keine gültige Kombination von <see cref="T:System.Globalization.NumberStyles" />-Enumerationskonstanten ist.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> ursprünglich übergebene Werte werden ausnahmslos überschrieben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.TryParse(System.String,System.Single@)">
      <summary>Konvertiert die Zeichenfolgenentsprechung einer Zahl in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt. </param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung eine Gleitkommazahl mit einfacher Genauigkeit zurück, die dem numerischen Wert oder dem in <paramref name="s" /> enthaltenen Symbol entspricht, und 0 (null), wenn die Konvertierung nicht durchgeführt werden konnte.Bei der Konvertierung tritt ein Fehler auf, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, keine Zahl in einem gültigen Format ist oder eine Zahl kleiner als <see cref="F:System.Single.MinValue" /> oder größer als <see cref="F:System.Single.MaxValue" /> ist.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> ursprünglich übergebene Werte werden ausnahmslos überschrieben.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.STAThreadAttribute">
      <summary>Legt STA (Singlethreaded Apartment) als COM-Threadingmodell für Anwendungen fest. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.STAThreadAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.STAThreadAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.String">
      <summary>Stellt Text als eine Reihe von Unicode-Zeichen dar.Informationen zum Durchsuchen des .NET Framework-Quellcodes für diesen Typ finden Sie in der Verweisquelle.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.#ctor(System.Char*)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.String" />-Klasse mit dem Wert, der durch einen angegebenen Zeiger auf ein Array von Unicode-Zeichen bestimmt wird.</summary>
      <param name="value">Ein Zeiger auf ein mit Null endendes Array von Unicode-Zeichen. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The current process does not have read access to all the addressed characters.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> specifies an array that contains an invalid Unicode character, or <paramref name="value" /> specifies an address less than 64000.</exception>
    </member>
    <member name="M:System.String.#ctor(System.Char*,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.String" />-Klasse mit dem Wert, der durch einen angegebenen Zeiger auf ein Array von Unicode-Zeichen, durch die Position des ersten Zeichens innerhalb dieses Arrays und durch eine Länge bestimmt wird.</summary>
      <param name="value">Ein Zeiger auf ein Array von Unicode-Zeichen. </param>
      <param name="startIndex">Die Anfangsposition in <paramref name="value" />. </param>
      <param name="length">Die Anzahl der aus <paramref name="value" /> zu verwendenden Zeichen. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than zero, <paramref name="value" /> + <paramref name="startIndex" /> cause a pointer overflow, or the current process does not have read access to all the addressed characters.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> specifies an array that contains an invalid Unicode character, or <paramref name="value" /> + <paramref name="startIndex" /> specifies an address less than 64000.</exception>
    </member>
    <member name="M:System.String.#ctor(System.Char,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.String" />-Klasse mit dem Wert, der durch ein angegebenes so oft wie angegeben wiederholtes Unicode-Zeichen bestimmt wird.</summary>
      <param name="c">Ein Unicode-Zeichen. </param>
      <param name="count">Die Anzahl des Vorkommens von <paramref name="c" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is less than zero. </exception>
    </member>
    <member name="M:System.String.#ctor(System.Char[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.String" />-Klasse mit dem durch ein Array von Unicode-Zeichen angegebenen Wert.</summary>
      <param name="value">Ein Array von Unicode-Zeichen. </param>
    </member>
    <member name="M:System.String.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.String" />-Klasse mit dem Wert, der durch ein Array von Unicode-Zeichen, die Position des ersten Zeichens innerhalb dieses Arrays und eine Länge bestimmt wird.</summary>
      <param name="value">Ein Array von Unicode-Zeichen. </param>
      <param name="startIndex">Die Anfangsposition in <paramref name="value" />. </param>
      <param name="length">Die Anzahl der aus <paramref name="value" /> zu verwendenden Zeichen. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than zero.-or- The sum of <paramref name="startIndex" /> and <paramref name="length" /> is greater than the number of elements in <paramref name="value" />. </exception>
    </member>
    <member name="P:System.String.Chars(System.Int32)">
      <summary>Ruft das <see cref="T:System.Char" />-Objekt an einer angegebenen Zeichenposition innerhalb des aktuellen <see cref="T:System.String" />-Objekts ab.</summary>
      <returns>Das Objekt an der <paramref name="index" />-Position.</returns>
      <param name="index">Eine Position in der aktuellen Zeichenfolge. </param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> is greater than or equal to the length of this object or less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>Vergleicht zwei angegebene <see cref="T:System.String" />-Objekte und gibt eine ganze Zahl zurück, die ihre relative Position in der Sortierreihenfolge angibt.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die die lexikalische Beziehung der beiden verglichenen Elemente angibt.Value Condition Less than zero The substring in <paramref name="strA" /> precedes the substring in <paramref name="strB" /> in the sort order. Zero The substrings occur in the same position in the sort order, or <paramref name="length" /> is zero. Greater than zero The substring in <paramref name="strA" /> follows the substring in <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">Die erste im Vergleich zu verwendende Zeichenfolge. </param>
      <param name="indexA">Die Position der Teilzeichenfolge innerhalb von <paramref name="strA" />. </param>
      <param name="strB">Die zweite im Vergleich zu verwendende Zeichenfolge. </param>
      <param name="indexB">Die Position der Teilzeichenfolge innerhalb von <paramref name="strB" />. </param>
      <param name="length">Die maximale Anzahl der zu vergleichenden Zeichen der Teilzeichenfolgen. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative. -or-Either <paramref name="indexA" /> or <paramref name="indexB" /> is null, and <paramref name="length" /> is greater than zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)">
      <summary>Vergleicht Teilzeichenfolgen von zwei angegebenen <see cref="T:System.String" />-Objekten gemäß den angegebenen Vergleichsregeln und gibt eine ganze Zahl zurück, die ihre relative Position in der Sortierreihenfolge angibt. </summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die die lexikalische Beziehung der beiden verglichenen Elemente angibt.Value Condition Less than zero The substring in <paramref name="strA" /> precedes the substring in <paramref name="strB" /> in the sort order.Zero The substrings occur in the same position in the sort order, or the <paramref name="length" /> parameter is zero. Greater than zero The substring in <paramref name="strA" /> follllows the substring in <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">Die erste im Vergleich zu verwendende Zeichenfolge. </param>
      <param name="indexA">Die Position der Teilzeichenfolge innerhalb von <paramref name="strA" />. </param>
      <param name="strB">Die zweite im Vergleich zu verwendende Zeichenfolge.</param>
      <param name="indexB">Die Position der Teilzeichenfolge innerhalb von <paramref name="strB" />. </param>
      <param name="length">Die maximale Anzahl der zu vergleichenden Zeichen der Teilzeichenfolgen. </param>
      <param name="comparisonType">Einer der Enumerationswerte, der die für den Vergleich zu verwendenden Regeln angibt. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative. -or-Either <paramref name="indexA" /> or <paramref name="indexB" /> is null, and <paramref name="length" /> is greater than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.String)">
      <summary>Vergleicht zwei angegebene <see cref="T:System.String" />-Objekte und gibt eine ganze Zahl zurück, die ihre relative Position in der Sortierreihenfolge angibt.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die die lexikalische Beziehung der beiden verglichenen Elemente angibt.Value Condition Less than zero <paramref name="strA" /> precedes <paramref name="strB" /> in the sort order. Zero <paramref name="strA" /> occurs in the same position as <paramref name="strB" /> in the sort order. Greater than zero <paramref name="strA" /> follows <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">Die erste zu vergleichende Zeichenfolge. </param>
      <param name="strB">Die zweite zu vergleichende Zeichenfolge. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.String,System.Boolean)">
      <summary>Vergleicht zwei angegebene <see cref="T:System.String" />-Objekte, wobei ihre Groß- und Kleinschreibung entweder ignoriert oder berücksichtigt wird, und gibt eine ganze Zahl zurück, die ihre relative Position in der Sortierreihenfolge angibt.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die die lexikalische Beziehung der beiden verglichenen Elemente angibt.Value Condition Less than zero <paramref name="strA" /> precedes <paramref name="strB" /> in the sort order. Zero <paramref name="strA" /> occurs in the same position as <paramref name="strB" /> in the sort order. Greater than zero <paramref name="strA" /> follows <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">Die erste zu vergleichende Zeichenfolge. </param>
      <param name="strB">Die zweite zu vergleichende Zeichenfolge. </param>
      <param name="ignoreCase">true, wenn die Groß-/Kleinschreibung beim Vergleich ignoriert werden soll, andernfalls false.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.String,System.StringComparison)">
      <summary>Vergleicht zwei angegebene <see cref="T:System.String" />-Objekte gemäß den angegebenen Vergleichsregeln und gibt eine ganze Zahl zurück, die ihre relative Position in der Sortierreihenfolge angibt.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die die lexikalische Beziehung der beiden verglichenen Elemente angibt.Value Condition Less than zero <paramref name="strA" /> precedes <paramref name="strB" /> in the sort order. Zero <paramref name="strA" /> is in the same position as <paramref name="strB" /> in the sort order. Greater than zero <paramref name="strA" /> follows <paramref name="strB" /> in the sort order. </returns>
      <param name="strA">Die erste zu vergleichende Zeichenfolge.</param>
      <param name="strB">Die zweite zu vergleichende Zeichenfolge. </param>
      <param name="comparisonType">Einer der Enumerationswerte, der die für den Vergleich zu verwendenden Regeln angibt. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value. </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.StringComparison" /> is not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>Vergleicht Teilzeichenfolgen zweier angegebener <see cref="T:System.String" />-Objekte, indem die numerischen Werte der entsprechenden <see cref="T:System.Char" />-Objekte in den Teilzeichenfolgen ausgewertet werden. </summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die die lexikalische Beziehung der beiden verglichenen Elemente angibt.ValueCondition Less than zero The substring in <paramref name="strA" /> is less than the substring in <paramref name="strB" />. Zero The substrings are equal, or <paramref name="length" /> is zero. Greater than zero The substring in <paramref name="strA" /> is greater than the substring in <paramref name="strB" />. </returns>
      <param name="strA">Die erste im Vergleich zu verwendende Zeichenfolge. </param>
      <param name="indexA">Der Anfangsindex der Teilzeichenfolge in <paramref name="strA" />. </param>
      <param name="strB">Die zweite im Vergleich zu verwendende Zeichenfolge. </param>
      <param name="indexB">Der Anfangsindex der Teilzeichenfolge in <paramref name="strB" />. </param>
      <param name="length">Die maximale Anzahl der zu vergleichenden Zeichen der Teilzeichenfolgen. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="strA" /> is not null and <paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.-or- <paramref name="strB" /> is not null and<paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.-or- <paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.CompareOrdinal(System.String,System.String)">
      <summary>Vergleicht zwei <see cref="T:System.String" />-Objekte, indem die numerischen Werte der entsprechenden <see cref="T:System.Char" />-Objekte in den Zeichenfolgen ausgewertet werden.</summary>
      <returns>Eine ganze Zahl, die die lexikalische Beziehung zwischen den beiden Vergleichswerten angibt.ValueCondition Less than zero <paramref name="strA" /> is less than <paramref name="strB" />. Zero <paramref name="strA" /> and <paramref name="strB" /> are equal. Greater than zero <paramref name="strA" /> is greater than <paramref name="strB" />. </returns>
      <param name="strA">Die erste zu vergleichende Zeichenfolge. </param>
      <param name="strB">Die zweite zu vergleichende Zeichenfolge. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.CompareTo(System.String)">
      <summary>Vergleicht diese Instanz mit einem angegebenen <see cref="T:System.String" />-Objekt und gibt an, ob diese Instanz in der Sortierreihenfolge an einer früheren, späteren oder derselben Position wie die angegebene Zeichenfolge aufgeführt wird. </summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die angibt, ob diese Instanz in der Sortierreihenfolge an einer früheren, späteren oder derselben Position wie der <paramref name="strB" />-Parameter aufgeführt wird.Value Condition Less than zero This instance precedes <paramref name="strB" />. Zero This instance has the same position in the sort order as <paramref name="strB" />. Greater than zero This instance follows <paramref name="strB" />.-or- <paramref name="strB" /> is null. </returns>
      <param name="strB">Die Zeichenfolge, die mit dieser Instanz verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Verkettet die Member einer erstellten <see cref="T:System.Collections.Generic.IEnumerable`1" />-Auflistung vom Typ <see cref="T:System.String" />.</summary>
      <returns>Die verketteten Zeichenfolgen in <paramref name="values" />.</returns>
      <param name="values">Ein Auflistungsobjekt, das <see cref="T:System.Collections.Generic.IEnumerable`1" /> implementiert und dessen generisches Typargument <see cref="T:System.String" /> ist.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Concat``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Verkettet die Member einer <see cref="T:System.Collections.Generic.IEnumerable`1" />-Implementierung.</summary>
      <returns>Die verketteten Zeichenfolgen in <paramref name="values" />.</returns>
      <param name="values">Ein Auflistungsobjekt, das die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Schnittstelle implementiert.</param>
      <typeparam name="T">Der Typ der Member von <paramref name="values" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Concat(System.Object)">
      <summary>Erstellt die Zeichenfolgendarstellung eines angegebenen Objekts.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts von <paramref name="arg0" /> oder <see cref="F:System.String.Empty" />, wenn <paramref name="arg0" />null ist.</returns>
      <param name="arg0">Das darzustellende Objekt oder null. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Object,System.Object)">
      <summary>Verkettet die Zeichenfolgendarstellungen zweier angegebener Objekte.</summary>
      <returns>Die verketteten Zeichenfolgendarstellungen der Werte von <paramref name="arg0" /> und <paramref name="arg1" />.</returns>
      <param name="arg0">Das erste zu verkettende Objekt. </param>
      <param name="arg1">Das zweite zu verkettende Objekt. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Object,System.Object,System.Object)">
      <summary>Verkettet die Zeichenfolgendarstellungen von drei angegebenen Objekten.</summary>
      <returns>Die verketteten Zeichenfolgendarstellungen der Werte von <paramref name="arg0" />, <paramref name="arg1" /> und <paramref name="arg2" />.</returns>
      <param name="arg0">Das erste zu verkettende Objekt. </param>
      <param name="arg1">Das zweite zu verkettende Objekt. </param>
      <param name="arg2">Das dritte zu verkettende Objekt. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Object[])">
      <summary>Verkettet die Zeichenfolgendarstellungen der Elemente in einem angegebenen <see cref="T:System.Object" />-Array.</summary>
      <returns>Die verketteten Zeichenfolgendarstellungen der Werte der Elemente in <paramref name="args" />.</returns>
      <param name="args">Ein Objektarray, das die zu verkettenden Elemente enthält. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="args" /> is null. </exception>
      <exception cref="T:System.OutOfMemoryException">Out of memory.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String,System.String)">
      <summary>Verkettet zwei angegebene Instanzen von <see cref="T:System.String" />.</summary>
      <returns>Die Verkettung von <paramref name="str0" /> und <paramref name="str1" />.</returns>
      <param name="str0">Die erste zu verkettende Zeichenfolge. </param>
      <param name="str1">Die zweite zu verkettende Zeichenfolge. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String,System.String,System.String)">
      <summary>Verkettet zwei angegebene Instanzen von <see cref="T:System.String" />.</summary>
      <returns>Die Verkettung von <paramref name="str0" />, <paramref name="str1" /> und <paramref name="str2" />.</returns>
      <param name="str0">Die erste zu verkettende Zeichenfolge. </param>
      <param name="str1">Die zweite zu verkettende Zeichenfolge. </param>
      <param name="str2">Die dritte zu verkettende Zeichenfolge. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String,System.String,System.String,System.String)">
      <summary>Verkettet zwei angegebene Instanzen von <see cref="T:System.String" />.</summary>
      <returns>Die Verkettung von <paramref name="str0" />, <paramref name="str1" />, <paramref name="str2" /> und <paramref name="str3" />.</returns>
      <param name="str0">Die erste zu verkettende Zeichenfolge. </param>
      <param name="str1">Die zweite zu verkettende Zeichenfolge. </param>
      <param name="str2">Die dritte zu verkettende Zeichenfolge. </param>
      <param name="str3">Die vierte zu verkettende Zeichenfolge. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String[])">
      <summary>Verkettet die Elemente eines angegebenen <see cref="T:System.String" />-Arrays.</summary>
      <returns>Die verketteten Elemente von <paramref name="values" />.</returns>
      <param name="values">Ein Array von Zeichenfolgeninstanzen. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
      <exception cref="T:System.OutOfMemoryException">Out of memory.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Contains(System.String)">
      <summary>Gibt einen Wert zurück, der angibt, ob eine angegebene untergeordnete Zeichenfolge in dieser Zeichenfolge vorkommt.</summary>
      <returns>true, wenn der <paramref name="value" />-Parameter in dieser Zeichenfolge vorkommt oder <paramref name="value" /> eine leere Zeichenfolge ("") ist; andernfalls false.</returns>
      <param name="value">Die zu suchende Zeichenfolge. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>Kopiert eine angegebene Anzahl von Zeichen von einer angegebenen Position in dieser Instanz an eine angegebene Position in einem Array von Unicode-Zeichen.</summary>
      <param name="sourceIndex">Der Index des ersten Zeichens in dieser Instanz, das kopiert werden soll. </param>
      <param name="destination">Ein Array von Unicode-Zeichen, in das Zeichen in dieser Instanz kopiert werden. </param>
      <param name="destinationIndex">Der Index in <paramref name="destination" />, bei dem der Kopiervorgang beginnt. </param>
      <param name="count">Die Anzahl der Zeichen in dieser Instanz, die nach <paramref name="destination" /> kopiert werden sollen. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" />, <paramref name="destinationIndex" />, or <paramref name="count" /> is negative -or- <paramref name="sourceIndex" /> does not identify a position in the current instance. -or-<paramref name="destinationIndex" /> does not identify a valid index in the <paramref name="destination" /> array. -or-<paramref name="count" /> is greater than the length of the substring from <paramref name="startIndex" /> to the end of this instance -or- <paramref name="count" /> is greater than the length of the subarray from <paramref name="destinationIndex" /> to the end of the <paramref name="destination" /> array. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.String.Empty">
      <summary>Stellt die leere Zeichenfolge dar.Dieses Feld ist schreibgeschützt.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.EndsWith(System.String)">
      <summary>Bestimmt, ob das Ende dieser Zeichenfolgeninstanz mit der angegebenen Zeichenfolge übereinstimmt.</summary>
      <returns>true, wenn <paramref name="value" /> mit dem Ende dieser Instanz übereinstimmt; andernfalls false.</returns>
      <param name="value">Die Zeichenfolge, die mit der Teilzeichenfolge am Ende dieser Instanz verglichen werden soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.EndsWith(System.String,System.StringComparison)">
      <summary>Bestimmt, ob das Ende dieser Zeichenfolgeninstanz bei einem Vergleich unter Verwendung der angegebenen Vergleichsoption mit der angegebenen Zeichenfolge übereinstimmt.</summary>
      <returns>true, wenn der <paramref name="value" />-Parameter mit dem Ende dieser Zeichenfolge übereinstimmt, andernfalls false.</returns>
      <param name="value">Die Zeichenfolge, die mit der Teilzeichenfolge am Ende dieser Instanz verglichen werden soll. </param>
      <param name="comparisonType">Einer der Enumerationswerte, die bestimmen, wie diese Zeichenfolge und <paramref name="value" /> verglichen werden. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.Equals(System.Object)">
      <summary>Bestimmt, ob diese Instanz und ein angegebenes Objekt, das ebenfalls ein <see cref="T:System.String" />-Objekt sein muss, denselben Wert haben.</summary>
      <returns>true, wenn <paramref name="obj" /> ein <see cref="T:System.String" /> ist und denselben Wert wie diese Instanz hat; andernfalls false.Wenn <paramref name="obj" /> gleich null ist, gibt die Methode false zurück.</returns>
      <param name="obj">Die Zeichenfolge, die mit dieser Instanz verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String)">
      <summary>Bestimmt, ob diese Instanz und ein anderes angegebenes <see cref="T:System.String" />-Objekt denselben Wert haben.</summary>
      <returns>true, wenn der <paramref name="value" />-Parameter und diese Instanz denselben Wert haben, andernfalls false.Wenn <paramref name="value" /> gleich null ist, gibt die Methode false zurück.</returns>
      <param name="value">Die Zeichenfolge, die mit dieser Instanz verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String,System.String)">
      <summary>Bestimmt, ob zwei angegebene <see cref="T:System.String" />-Objekte denselben Wert haben.</summary>
      <returns>true, wenn <paramref name="a" /> und <paramref name="b" /> denselben Wert haben, andernfalls false.Wenn <paramref name="a" /> und <paramref name="b" />null sind, gibt diese Methode true zurück.</returns>
      <param name="a">Die erste Zeichenfolge für den Vergleich oder null. </param>
      <param name="b">Die zweite Zeichenfolge für den Vergleich oder null. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String,System.String,System.StringComparison)">
      <summary>Bestimmt, ob zwei angegebene <see cref="T:System.String" />-Objekte denselben Wert haben.Ein Parameter gibt die Kultur, Berücksichtigung von Groß- und Kleinschreibung und Sortierregeln, die für den Vergleich verwendet werden.</summary>
      <returns>true, wenn der Wert des <paramref name="a" />-Parameters dem Wert des <paramref name="b" />-Parameters entspricht, andernfalls false.</returns>
      <param name="a">Die erste Zeichenfolge für den Vergleich oder null. </param>
      <param name="b">Die zweite Zeichenfolge für den Vergleich oder null. </param>
      <param name="comparisonType">Einer der Enumerationswerte, der die Regeln für den Vergleich angibt. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String,System.StringComparison)">
      <summary>Bestimmt, ob diese Zeichenfolge und ein angegebenes <see cref="T:System.String" />-Objekt denselben Wert haben.Ein Parameter gibt die Kultur, Berücksichtigung von Groß- und Kleinschreibung und Sortierregeln, die für den Vergleich verwendet werden.</summary>
      <returns>true, wenn der <paramref name="value" />-Parameter und diese Zeichenfolge denselben Wert haben; andernfalls false.</returns>
      <param name="value">Die Zeichenfolge, die mit dieser Instanz verglichen werden soll.</param>
      <param name="comparisonType">Einer der Enumerationswerte, die angeben, wie die Zeichenfolgen verglichen werden. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object)">
      <summary>Ersetzt die Formatelemente in einer angegebenen Zeichenfolge durch die Zeichenfolgendarstellung des angegebenen Objekts.Ein Parameter liefert kulturspezifische Formatierungsinformationen.</summary>
      <returns>Eine Kopie von <paramref name="format" />, in der die Formatelemente durch die Zeichenfolgendarstellung von <paramref name="arg0" /> ersetzt wurden. </returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <param name="format">Eine kombinierte Formatierungszeichenfolge. </param>
      <param name="arg0">Das zu formatierende Objekt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> or <paramref name="arg0" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to one. </exception>
    </member>
    <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object)">
      <summary>Ersetzt die Formatelemente in einer angegebenen Zeichenfolge durch die Zeichenfolgendarstellung von zwei angegebenen Objekten.Ein Parameter liefert kulturspezifische Formatierungsinformationen.</summary>
      <returns>Eine Kopie von <paramref name="format" />, in der Formatelemente durch die Zeichenfolgendarstellung von <paramref name="arg0" /> und <paramref name="arg1" /> ersetzt wurden. </returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <param name="format">Eine kombinierte Formatierungszeichenfolge. </param>
      <param name="arg0">Das erste zu formatierende Objekt. </param>
      <param name="arg1">Das zweite zu formatierende Objekt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />, <paramref name="arg0" />, or <paramref name="arg1" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to two. </exception>
    </member>
    <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
      <summary>Ersetzt die Formatelemente in einer angegebenen Zeichenfolge durch die Zeichenfolgendarstellung von drei angegebenen Objekten.Ein Parameter liefert kulturspezifische Formatierungsinformationen.</summary>
      <returns>Eine Kopie von <paramref name="format" />, in der die Formatelemente durch die Zeichenfolgendarstellung von <paramref name="arg0" />, <paramref name="arg1" /> und <paramref name="arg2" /> ersetzt wurden. </returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <param name="format">Eine kombinierte Formatierungszeichenfolge. </param>
      <param name="arg0">Das erste zu formatierende Objekt. </param>
      <param name="arg1">Das zweite zu formatierende Objekt. </param>
      <param name="arg2">Das dritte zu formatierende Objekt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />, <paramref name="arg0" />, <paramref name="arg1" />, or <paramref name="arg2" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to three. </exception>
    </member>
    <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])">
      <summary>Ersetzt die Formatelemente in einer angegebenen Zeichenfolge durch die Zeichenfolgendarstellungen entsprechender Objekte in einem angegebenen Array.Ein Parameter liefert kulturspezifische Formatierungsinformationen.</summary>
      <returns>Eine Kopie von <paramref name="format" />, in der die Formatelemente durch die Zeichenfolgendarstellung der entsprechenden Objekte in <paramref name="args" /> ersetzt wurden.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <param name="format">Eine kombinierte Formatierungszeichenfolge. </param>
      <param name="args">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> or <paramref name="args" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to the length of the <paramref name="args" /> array. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object)">
      <summary>Ersetzt ein oder mehrere Formatelemente in einer angegebenen Zeichenfolge durch die Zeichenfolgendarstellung eines angegebenen Objekts.</summary>
      <returns>Eine Kopie von <paramref name="format" />, in der alle Formatelemente durch die Zeichenfolgendarstellung von <paramref name="arg0" /> ersetzt wurden.</returns>
      <param name="format">Eine kombinierte Formatierungszeichenfolge. </param>
      <param name="arg0">Das zu formatierende Objekt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">The format item in <paramref name="format" /> is invalid.-or- The index of a format item is not zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object,System.Object)">
      <summary>Ersetzt die Formatelemente in einer angegebenen Zeichenfolge durch die Zeichenfolgendarstellung von zwei angegebenen Objekten.</summary>
      <returns>Eine Kopie von <paramref name="format" />, in der Formatelemente durch die Zeichenfolgendarstellung von <paramref name="arg0" /> und <paramref name="arg1" /> ersetzt wurden.</returns>
      <param name="format">Eine kombinierte Formatierungszeichenfolge. </param>
      <param name="arg0">Das erste zu formatierende Objekt. </param>
      <param name="arg1">Das zweite zu formatierende Objekt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is not zero or one. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object,System.Object,System.Object)">
      <summary>Ersetzt die Formatelemente in einer angegebenen Zeichenfolge durch die Zeichenfolgendarstellung von drei angegebenen Objekten.</summary>
      <returns>Eine Kopie von <paramref name="format" />, in der die Formatelemente durch die Zeichenfolgendarstellung von <paramref name="arg0" />, <paramref name="arg1" /> und <paramref name="arg2" /> ersetzt wurden.</returns>
      <param name="format">Eine kombinierte Formatierungszeichenfolge.</param>
      <param name="arg0">Das erste zu formatierende Objekt. </param>
      <param name="arg1">Das zweite zu formatierende Objekt. </param>
      <param name="arg2">Das dritte zu formatierende Objekt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than two. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object[])">
      <summary>Ersetzt das Formatelement in einer angegebenen Zeichenfolge durch die Zeichenfolgendarstellung eines entsprechenden Objekts in einem angegebenen Array.</summary>
      <returns>Eine Kopie von <paramref name="format" />, in der die Formatelemente durch die Zeichenfolgendarstellung der entsprechenden Objekte in <paramref name="args" /> ersetzt wurden.</returns>
      <param name="format">Eine kombinierte Formatierungszeichenfolge.</param>
      <param name="args">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> or <paramref name="args" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to the length of the <paramref name="args" /> array. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.GetHashCode">
      <summary>Gibt den Hashcode für diese Zeichenfolge zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.Char)">
      <summary>Gibt den NULL-basierten Index des ersten Vorkommens des angegebenen Unicode-Zeichens in dieser Zeichenfolge an.</summary>
      <returns>Die nullbasierte Indexposition von <paramref name="value" />, wenn dieses Zeichen gefunden wurde, andernfalls -1.</returns>
      <param name="value">Ein zu suchendes Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.Char,System.Int32)">
      <summary>Gibt den NULL-basierten Index des ersten Vorkommens des angegebenen Unicode-Zeichens in dieser Zeichenfolge an.Die Suche beginnt an einer angegebenen Zeichenposition.</summary>
      <returns>Die nullbasierte Indexposition von <paramref name="value" />, wenn dieses Zeichen gefunden wurde, andernfalls -1.</returns>
      <param name="value">Ein zu suchendes Unicode-Zeichen. </param>
      <param name="startIndex">Die Anfangsposition der Suche. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than 0 (zero) or greater than the length of the string. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.Char,System.Int32,System.Int32)">
      <summary>Gibt den NULL-basierten Index des ersten Vorkommens des angegebenen Zeichens in dieser Instanz an.Die Suche beginnt an einer angegebenen Zeichenposition, und es wird eine angegebene Anzahl von Zeichenpositionen überprüft.</summary>
      <returns>Die nullbasierte Indexposition von <paramref name="value" />, wenn dieses Zeichen gefunden wurde, andernfalls -1.</returns>
      <param name="value">Ein zu suchendes Unicode-Zeichen. </param>
      <param name="startIndex">Die Anfangsposition der Suche. </param>
      <param name="count">Die Anzahl der zu überprüfenden Zeichenpositionen. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- <paramref name="startIndex" /> is greater than the length of this string.-or-<paramref name="count" /> is greater than the length of this string minus <paramref name="startIndex" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String)">
      <summary>Gibt den NULL-basierten Index des ersten Vorkommens der angegebenen Zeichenfolge in dieser Instanz an.</summary>
      <returns>Die nullbasierte Indexposition von <paramref name="value" />, wenn diese Zeichenfolge gefunden wurde, andernfalls -1.Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, wird 0 zurückgegeben.</returns>
      <param name="value">Die zu suchende Zeichenfolge. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32)">
      <summary>Gibt den NULL-basierten Index des ersten Vorkommens der angegebenen Zeichenfolge in dieser Instanz an.Die Suche beginnt an einer angegebenen Zeichenposition.</summary>
      <returns>Die nullbasierte Indexposition von <paramref name="value" />, wenn diese Zeichenfolge gefunden wurde, andernfalls -1.Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, wird <paramref name="startIndex" /> zurückgegeben.</returns>
      <param name="value">Die zu suchende Zeichenfolge. </param>
      <param name="startIndex">Die Anfangsposition der Suche. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than 0 (zero) or greater than the length of this string.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32,System.Int32)">
      <summary>Gibt den NULL-basierten Index des ersten Vorkommens der angegebenen Zeichenfolge in dieser Instanz an.Die Suche beginnt an einer angegebenen Zeichenposition, und es wird eine angegebene Anzahl von Zeichenpositionen überprüft.</summary>
      <returns>Die nullbasierte Indexposition von <paramref name="value" />, wenn diese Zeichenfolge gefunden wurde, andernfalls -1.Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, wird <paramref name="startIndex" /> zurückgegeben.</returns>
      <param name="value">Die zu suchende Zeichenfolge. </param>
      <param name="startIndex">Die Anfangsposition der Suche. </param>
      <param name="count">Die Anzahl der zu überprüfenden Zeichenpositionen. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- <paramref name="startIndex" /> is greater than the length of this string.-or-<paramref name="count" /> is greater than the length of this string minus <paramref name="startIndex" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)">
      <summary>Gibt den NULL-basierten Index des ersten Vorkommens der angegebenen Zeichenfolge im aktuellen <see cref="T:System.String" />-Objekt an.Parameter geben die Anfangssuchposition in der aktuellen Zeichenfolge, die Anzahl der Zeichen in der aktuellen Zeichenfolge und den Typ der Suche für die angegebene Zeichenfolge an.</summary>
      <returns>Die nullbasierte Indexposition des <paramref name="value" />-Parameters, wenn diese Zeichenfolge gefunden wurde, andernfalls -1.Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, wird <paramref name="startIndex" /> zurückgegeben.</returns>
      <param name="value">Die zu suchende Zeichenfolge. </param>
      <param name="startIndex">Die Anfangsposition der Suche. </param>
      <param name="count">Die Anzahl der zu überprüfenden Zeichenpositionen. </param>
      <param name="comparisonType">Einer der Enumerationswerte, der die Regeln für die Suche angibt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- <paramref name="startIndex" /> is greater than the length of this instance.-or-<paramref name="count" /> is greater than the length of this string minus <paramref name="startIndex" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)">
      <summary>Gibt den NULL-basierten Index des ersten Vorkommens der angegebenen Zeichenfolge im aktuellen <see cref="T:System.String" />-Objekt an.Parameter geben die Anfangssuchposition in der aktuellen Zeichenfolge und den Typ der Suche an, die für die angegebene Zeichenfolge verwendet werden soll.</summary>
      <returns>Die nullbasierte Indexposition des <paramref name="value" />-Parameters, wenn diese Zeichenfolge gefunden wurde, andernfalls -1.Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, wird <paramref name="startIndex" /> zurückgegeben.</returns>
      <param name="value">Die zu suchende Zeichenfolge. </param>
      <param name="startIndex">Die Anfangsposition der Suche. </param>
      <param name="comparisonType">Einer der Enumerationswerte, der die Regeln für die Suche angibt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than 0 (zero) or greater than the length of this string. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.StringComparison)">
      <summary>Gibt den NULL-basierten Index des ersten Vorkommens der angegebenen Zeichenfolge im aktuellen <see cref="T:System.String" />-Objekt an.Ein Parameter gibt den Typ der Suche für die angegebene Zeichenfolge an.</summary>
      <returns>Die Indexposition des <paramref name="value" />-Parameters, wenn diese Zeichenfolge gefunden wurde, andernfalls -1.Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, wird 0 zurückgegeben.</returns>
      <param name="value">Die zu suchende Zeichenfolge. </param>
      <param name="comparisonType">Einer der Enumerationswerte, der die Regeln für die Suche angibt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.IndexOfAny(System.Char[])">
      <summary>Gibt den NULL-basierten Index des ersten Vorkommens eines beliebigen Zeichens aus einem angegebenen Array von Unicode-Zeichen in dieser Instanz an.</summary>
      <returns>Die nullbasierte Indexposition des ersten Vorkommens eines beliebigen Zeichens aus <paramref name="anyOf" /> in dieser Instanz. -1, wenn kein Zeichen in <paramref name="anyOf" /> gefunden wurde.</returns>
      <param name="anyOf">Ein Array von Unicode-Zeichen mit mindestens einem zu suchenden Zeichen. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.IndexOfAny(System.Char[],System.Int32)">
      <summary>Gibt den NULL-basierten Index des ersten Vorkommens eines beliebigen Zeichens aus einem angegebenen Array von Unicode-Zeichen in dieser Instanz an.Die Suche beginnt an einer angegebenen Zeichenposition.</summary>
      <returns>Die nullbasierte Indexposition des ersten Vorkommens eines beliebigen Zeichens aus <paramref name="anyOf" /> in dieser Instanz. -1, wenn kein Zeichen in <paramref name="anyOf" /> gefunden wurde.</returns>
      <param name="anyOf">Ein Array von Unicode-Zeichen mit mindestens einem zu suchenden Zeichen. </param>
      <param name="startIndex">Die Anfangsposition der Suche. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is negative.-or- <paramref name="startIndex" /> is greater than the number of characters in this instance. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.IndexOfAny(System.Char[],System.Int32,System.Int32)">
      <summary>Gibt den NULL-basierten Index des ersten Vorkommens eines beliebigen Zeichens aus einem angegebenen Array von Unicode-Zeichen in dieser Instanz an.Die Suche beginnt an einer angegebenen Zeichenposition, und es wird eine angegebene Anzahl von Zeichenpositionen überprüft.</summary>
      <returns>Die nullbasierte Indexposition des ersten Vorkommens eines beliebigen Zeichens aus <paramref name="anyOf" /> in dieser Instanz. -1, wenn kein Zeichen in <paramref name="anyOf" /> gefunden wurde.</returns>
      <param name="anyOf">Ein Array von Unicode-Zeichen mit mindestens einem zu suchenden Zeichen. </param>
      <param name="startIndex">Die Anfangsposition der Suche. </param>
      <param name="count">Die Anzahl der zu überprüfenden Zeichenpositionen. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- <paramref name="count" /> + <paramref name="startIndex" /> is greater than the number of characters in this instance. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Insert(System.Int32,System.String)">
      <summary>Gibt eine neue Zeichenfolge zurück, in der eine angegebene Zeichenfolge an einer angegebenen Indexposition in dieser Instanz eingefügt wird. </summary>
      <returns>Eine neue Zeichenfolge, die dieser Instanz mit einem an der Position <paramref name="value" /> eingefügten <paramref name="startIndex" /> entspricht.</returns>
      <param name="startIndex">Die nullbasierte Indexposition für das Einfügen. </param>
      <param name="value">Die einzufügende Zeichenfolge. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is negative or greater than the length of this instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IsNullOrEmpty(System.String)">
      <summary>Gibt an, ob die angegebene Zeichenfolge null oder eine <see cref="F:System.String.Empty" />-Zeichenfolge ist.</summary>
      <returns>true, wenn der <paramref name="value" />-Parameter null oder eine leere Zeichenfolge ("") ist; andernfalls false.</returns>
      <param name="value">Die zu testende Zeichenfolge. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IsNullOrWhiteSpace(System.String)">
      <summary>Gibt an, ob eine angegebene Zeichenfolge null ist, leer ist oder nur aus Leerzeichen besteht.</summary>
      <returns>true, wenn der <paramref name="value" />-Parameter null oder <see cref="F:System.String.Empty" /> ist oder wenn <paramref name="value" /> ausschließlich aus Leerzeichen besteht. </returns>
      <param name="value">Die zu testende Zeichenfolge.</param>
    </member>
    <member name="M:System.String.Join(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Verkettet die Member einer erstellten <see cref="T:System.Collections.Generic.IEnumerable`1" />-Auflistung vom Typ <see cref="T:System.String" /> und verwendet das angegebene Trennzeichen zwischen den einzelnen Membern.</summary>
      <returns>Eine Zeichenfolge, die aus den Membern von <paramref name="values" /> besteht, getrennt durch die <paramref name="separator" />-Zeichenfolge.Wenn <paramref name="values" /> keine Mitglieder hat, gibt die Methode <see cref="F:System.String.Empty" /> zurück.</returns>
      <param name="separator">Die Zeichenfolge, die als Trennzeichen verwendet werden soll.<paramref name="separator" /> ist in der zurückgegebenen Zeichenfolge nur enthalten, wenn <paramref name="values" /> mehr als ein Element enthält.</param>
      <param name="values">Eine Auflistung, die die zu verkettenden Zeichenfolgen enthält.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Join``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>Verkettet die Member einer Auflistung und verwendet das angegebene Trennzeichen zwischen den einzelnen Membern.</summary>
      <returns>Eine Zeichenfolge, die aus den Membern von <paramref name="values" /> besteht, getrennt durch die <paramref name="separator" />-Zeichenfolge.Wenn <paramref name="values" /> keine Mitglieder hat, gibt die Methode <see cref="F:System.String.Empty" /> zurück.</returns>
      <param name="separator">Die Zeichenfolge, die als Trennzeichen verwendet werden soll.<paramref name="separator" /> ist in der zurückgegebenen Zeichenfolge nur enthalten, wenn <paramref name="values" /> mehr als ein Element enthält.</param>
      <param name="values">Eine Auflistung, die die zu verkettenden Objekte enthält.</param>
      <typeparam name="T">Der Typ der Member von <paramref name="values" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Join(System.String,System.Object[])">
      <summary>Verkettet die Elemente eines Objektarrays und verwendet das angegebene Trennzeichen zwischen den einzelnen Elementen.</summary>
      <returns>Eine Zeichenfolge, die aus den Membern von <paramref name="values" /> besteht, getrennt durch die <paramref name="separator" />-Zeichenfolge.Wenn <paramref name="values" /> eine leeres Array ist, gibt die Methode <see cref="F:System.String.Empty" /> zurück.</returns>
      <param name="separator">Die Zeichenfolge, die als Trennzeichen verwendet werden soll.<paramref name="separator" /> ist in der zurückgegebenen Zeichenfolge nur enthalten, wenn <paramref name="values" /> mehr als ein Element enthält.</param>
      <param name="values">Ein Array, das die zu verkettenden Elemente enthält.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
    </member>
    <member name="M:System.String.Join(System.String,System.String[])">
      <summary>Verkettet alle Elemente eines Zeichenfolgenarrays und verwendet das angegebene Trennzeichen zwischen den einzelnen Elementen. </summary>
      <returns>Eine Zeichenfolge, die aus den Membern von <paramref name="value" /> besteht, getrennt durch die <paramref name="separator" />-Zeichenfolge.Wenn <paramref name="value" /> eine leeres Array ist, gibt die Methode <see cref="F:System.String.Empty" /> zurück.</returns>
      <param name="separator">Die Zeichenfolge, die als Trennzeichen verwendet werden soll.<paramref name="separator" /> ist in der zurückgegebenen Zeichenfolge nur enthalten, wenn <paramref name="value" /> mehr als ein Element enthält.</param>
      <param name="value">Ein Array, das die zu verkettenden Elemente enthält. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Join(System.String,System.String[],System.Int32,System.Int32)">
      <summary>Verkettet die angegebenen Elemente eines Zeichenfolgenarrays und verwendet das angegebene Trennzeichen zwischen den einzelnen Elementen. </summary>
      <returns>Eine Zeichenfolge, die aus den Zeichenfolgen in <paramref name="value" /> besteht, getrennt durch die <paramref name="separator" />-Zeichenfolge. - oder - <see cref="F:System.String.Empty" />, wenn <paramref name="count" /> 0 (null) ist, <paramref name="value" /> keine Elemente enthält oder <paramref name="separator" /> und alle Elemente von <paramref name="value" /><see cref="F:System.String.Empty" /> sind.</returns>
      <param name="separator">Die Zeichenfolge, die als Trennzeichen verwendet werden soll.<paramref name="separator" /> ist in der zurückgegebenen Zeichenfolge nur enthalten, wenn <paramref name="value" /> mehr als ein Element enthält.</param>
      <param name="value">Ein Array, das die zu verkettenden Elemente enthält. </param>
      <param name="startIndex">Das erste zu verwendende Element aus <paramref name="value" />. </param>
      <param name="count">Die Anzahl der zu verwendenden Elemente aus <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="count" /> is less than 0.-or- <paramref name="startIndex" /> plus <paramref name="count" /> is greater than the number of elements in <paramref name="value" />. </exception>
      <exception cref="T:System.OutOfMemoryException">Out of memory.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.Char)">
      <summary>Gibt die NULL-basierte Indexposition des letzten Vorkommens eines angegebenen Unicode-Zeichens in dieser Instanz an.</summary>
      <returns>Die nullbasierte Indexposition von <paramref name="value" />, wenn dieses Zeichen gefunden wurde, andernfalls -1.</returns>
      <param name="value">Das zu suchende Unicode-Zeichen. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.Char,System.Int32)">
      <summary>Gibt die NULL-basierte Indexposition des letzten Vorkommens eines angegebenen Unicode-Zeichens in dieser Instanz an.Die Suche beginnt an einer angegebenen Zeichenposition und wird rückwärts bis zum Anfang der Zeichenfolge fortgesetzt.</summary>
      <returns>Die nullbasierte Indexposition von <paramref name="value" />, wenn dieses Zeichen gefunden wurde, oder -1, wenn es nicht gefunden wurde oder die aktuelle Instanz gleich <see cref="F:System.String.Empty" /> ist.</returns>
      <param name="value">Das zu suchende Unicode-Zeichen. </param>
      <param name="startIndex">Die Anfangsposition der Suche.Die Suche wird von <paramref name="startIndex" /> bis zum Anfang dieser Instanz fortgesetzt.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than or equal to the length of this instance.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.Char,System.Int32,System.Int32)">
      <summary>Gibt die NULL-basierte Indexposition des letzten Vorkommens des angegebenen Unicode-Zeichens in einer Teilzeichenfolge dieser Instanz an.Die Suche beginnt an einer angegebenen Zeichenposition und verläuft für eine angegebene Anzahl von Zeichenpositionen rückwärts zum Anfang der Zeichenfolge.</summary>
      <returns>Die nullbasierte Indexposition von <paramref name="value" />, wenn dieses Zeichen gefunden wurde, oder -1, wenn es nicht gefunden wurde oder die aktuelle Instanz gleich <see cref="F:System.String.Empty" /> ist.</returns>
      <param name="value">Das zu suchende Unicode-Zeichen. </param>
      <param name="startIndex">Die Anfangsposition der Suche.Die Suche wird von <paramref name="startIndex" /> bis zum Anfang dieser Instanz fortgesetzt.</param>
      <param name="count">Die Anzahl der zu überprüfenden Zeichenpositionen. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than or equal to the length of this instance.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" />
                 - <paramref name="count" /> + 1 is less than zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String)">
      <summary>Gibt die NULL-basierte Indexposition des letzten Vorkommens einer angegebenen Zeichenfolge in dieser Instanz an.</summary>
      <returns>Die nullbasierte Indexposition von <paramref name="value" />, wenn diese Zeichenfolge gefunden wurde, andernfalls -1.Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, ist der Rückgabewert die letzte Indexposition in dieser Instanz.</returns>
      <param name="value">Die zu suchende Zeichenfolge. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32)">
      <summary>Gibt die NULL-basierte Indexposition des letzten Vorkommens einer angegebenen Zeichenfolge in dieser Instanz an.Die Suche beginnt an einer angegebenen Zeichenposition und wird rückwärts bis zum Anfang der Zeichenfolge fortgesetzt.</summary>
      <returns>Die nullbasierte Anfangsindexposition von <paramref name="value" />, wenn diese Zeichenfolge gefunden wurde, oder -1, wenn sie nicht gefunden wurde oder die aktuelle Instanz gleich <see cref="F:System.String.Empty" /> ist.Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, ist der Rückgabewert der kleinere <paramref name="startIndex" /> und die letzte Indexposition in dieser Instanz.</returns>
      <param name="value">Die zu suchende Zeichenfolge. </param>
      <param name="startIndex">Die Anfangsposition der Suche.Die Suche wird von <paramref name="startIndex" /> bis zum Anfang dieser Instanz fortgesetzt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than the length of the current instance. -or-The current instance equals <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than -1 or greater than zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32)">
      <summary>Gibt die NULL-basierte Indexposition des letzten Vorkommens einer angegebenen Zeichenfolge in dieser Instanz an.Die Suche beginnt an einer angegebenen Zeichenposition und verläuft für eine angegebene Anzahl von Zeichenpositionen rückwärts zum Anfang der Zeichenfolge.</summary>
      <returns>Die nullbasierte Anfangsindexposition von <paramref name="value" />, wenn diese Zeichenfolge gefunden wurde, oder -1, wenn sie nicht gefunden wurde oder die aktuelle Instanz gleich <see cref="F:System.String.Empty" /> ist.Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, ist der Rückgabewert der kleinere <paramref name="startIndex" /> und die letzte Indexposition in dieser Instanz.</returns>
      <param name="value">Die zu suchende Zeichenfolge. </param>
      <param name="startIndex">Die Anfangsposition der Suche.Die Suche wird von <paramref name="startIndex" /> bis zum Anfang dieser Instanz fortgesetzt.</param>
      <param name="count">Die Anzahl der zu überprüfenden Zeichenpositionen. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and  <paramref name="startIndex" /> is negative.-or- The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is greater than the length of this instance.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" />
                 - <paramref name="count" /> + 1 specifies a position that is not within this instance. -or-The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="start" /> is less than -1 or greater than zero. -or-The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="count" /> is greater than 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)">
      <summary>Gibt die NULL-basierte Indexposition des letzten Vorkommens einer angegebenen Zeichenfolge in dieser Instanz an.Die Suche beginnt an einer angegebenen Zeichenposition und verläuft für eine angegebene Anzahl von Zeichenpositionen rückwärts zum Anfang der Zeichenfolge.Ein Parameter gibt den Typ des bei der Suche nach der angegebenen Zeichenfolge auszuführenden Vergleichs an.</summary>
      <returns>Die nullbasierte Anfangsindexposition des <paramref name="value" />-Parameters, wenn diese Zeichenfolge gefunden wurde, oder -1, wenn sie nicht gefunden wurde oder die aktuelle Instanz gleich <see cref="F:System.String.Empty" /> ist.Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, ist der Rückgabewert der kleinere <paramref name="startIndex" /> und die letzte Indexposition in dieser Instanz.</returns>
      <param name="value">Die zu suchende Zeichenfolge. </param>
      <param name="startIndex">Die Anfangsposition der Suche.Die Suche wird von <paramref name="startIndex" /> bis zum Anfang dieser Instanz fortgesetzt.</param>
      <param name="count">Die Anzahl der zu überprüfenden Zeichenpositionen. </param>
      <param name="comparisonType">Einer der Enumerationswerte, der die Regeln für die Suche angibt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is negative.-or- The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is greater than the length of this instance.-or-The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> + 1 - <paramref name="count" /> specifies a position that is not within this instance. -or-The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="start" /> is less than -1 or greater than zero. -or-The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="count" /> is greater than 1. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)">
      <summary>Gibt den NULL-basierten Index des letzten Vorkommens einer angegebenen Zeichenfolge im aktuellen <see cref="T:System.String" />-Objekt an.Die Suche beginnt an einer angegebenen Zeichenposition und wird rückwärts bis zum Anfang der Zeichenfolge fortgesetzt.Ein Parameter gibt den Typ des bei der Suche nach der angegebenen Zeichenfolge auszuführenden Vergleichs an.</summary>
      <returns>Die nullbasierte Anfangsindexposition des <paramref name="value" />-Parameters, wenn diese Zeichenfolge gefunden wurde, oder -1, wenn sie nicht gefunden wurde oder die aktuelle Instanz gleich <see cref="F:System.String.Empty" /> ist.Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, ist der Rückgabewert der kleinere <paramref name="startIndex" /> und die letzte Indexposition in dieser Instanz.</returns>
      <param name="value">Die zu suchende Zeichenfolge. </param>
      <param name="startIndex">Die Anfangsposition der Suche.Die Suche wird von <paramref name="startIndex" /> bis zum Anfang dieser Instanz fortgesetzt.</param>
      <param name="comparisonType">Einer der Enumerationswerte, der die Regeln für die Suche angibt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than the length of the current instance. -or-The current instance equals <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than -1 or greater than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.StringComparison)">
      <summary>Gibt den NULL-basierten Index des letzten Vorkommens einer angegebenen Zeichenfolge im aktuellen <see cref="T:System.String" />-Objekt an.Ein Parameter gibt den Typ der Suche für die angegebene Zeichenfolge an.</summary>
      <returns>Die nullbasierte Indexposition des <paramref name="value" />-Parameters, wenn diese Zeichenfolge gefunden wurde, andernfalls -1.Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, ist der Rückgabewert die letzte Indexposition in dieser Instanz.</returns>
      <param name="value">Die zu suchende Zeichenfolge. </param>
      <param name="comparisonType">Einer der Enumerationswerte, der die Regeln für die Suche angibt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.LastIndexOfAny(System.Char[])">
      <summary>Gibt die NULL-basierte Indexposition des letzten Vorkommens eines oder mehrerer angegebener Zeichen eines Unicode-Arrays in dieser Instanz an.</summary>
      <returns>Die Indexposition des letzten Vorkommens eines beliebigen Zeichens aus <paramref name="anyOf" /> in dieser Instanz. -1, wenn kein Zeichen in <paramref name="anyOf" /> gefunden wurde.</returns>
      <param name="anyOf">Ein Array von Unicode-Zeichen mit mindestens einem zu suchenden Zeichen. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOfAny(System.Char[],System.Int32)">
      <summary>Gibt die NULL-basierte Indexposition des letzten Vorkommens eines oder mehrerer angegebener Zeichen eines Unicode-Arrays in dieser Instanz an.Die Suche beginnt an einer angegebenen Zeichenposition und wird rückwärts bis zum Anfang der Zeichenfolge fortgesetzt.</summary>
      <returns>Die Indexposition des letzten Vorkommens eines beliebigen Zeichens aus <paramref name="anyOf" /> in dieser Instanz. -1, wenn kein Zeichen in <paramref name="anyOf" /> gefunden wurde, oder wenn die aktuelle Instanz gleich <see cref="F:System.String.Empty" /> ist.</returns>
      <param name="anyOf">Ein Array von Unicode-Zeichen mit mindestens einem zu suchenden Zeichen. </param>
      <param name="startIndex">Die Anfangsposition der Suche.Die Suche wird von <paramref name="startIndex" /> bis zum Anfang dieser Instanz fortgesetzt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> specifies a position that is not within this instance. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOfAny(System.Char[],System.Int32,System.Int32)">
      <summary>Gibt die NULL-basierte Indexposition des letzten Vorkommens eines oder mehrerer angegebener Zeichen eines Unicode-Arrays in dieser Instanz an.Die Suche beginnt an einer angegebenen Zeichenposition und verläuft für eine angegebene Anzahl von Zeichenpositionen rückwärts zum Anfang der Zeichenfolge.</summary>
      <returns>Die Indexposition des letzten Vorkommens eines beliebigen Zeichens aus <paramref name="anyOf" /> in dieser Instanz. -1, wenn kein Zeichen in <paramref name="anyOf" /> gefunden wurde, oder wenn die aktuelle Instanz gleich <see cref="F:System.String.Empty" /> ist.</returns>
      <param name="anyOf">Ein Array von Unicode-Zeichen mit mindestens einem zu suchenden Zeichen. </param>
      <param name="startIndex">Die Anfangsposition der Suche.Die Suche wird von <paramref name="startIndex" /> bis zum Anfang dieser Instanz fortgesetzt.</param>
      <param name="count">Die Anzahl der zu überprüfenden Zeichenpositionen. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anyOf" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> minus <paramref name="count" /> + 1 is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.String.Length">
      <summary>Ruft die Anzahl der Zeichen im aktuellen <see cref="T:System.String" />-Objekt ab.</summary>
      <returns>Die Anzahl der Zeichen in der aktuellen Zeichenfolge.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.op_Equality(System.String,System.String)">
      <summary>Bestimmt, ob zwei angegebene Zeichenfolgen denselben Wert haben.</summary>
      <returns>true, wenn <paramref name="a" /> und <paramref name="b" /> denselben Wert haben, andernfalls false.</returns>
      <param name="a">Die erste Zeichenfolge für den Vergleich oder null. </param>
      <param name="b">Die zweite Zeichenfolge für den Vergleich oder null. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.String.op_Inequality(System.String,System.String)">
      <summary>Bestimmt, ob zwei angegebene Zeichenfolgen verschiedene Werte haben.</summary>
      <returns>true, wenn der Wert von <paramref name="a" /> vom Wert von <paramref name="b" /> verschieden ist; andernfalls false.</returns>
      <param name="a">Die erste Zeichenfolge für den Vergleich oder null. </param>
      <param name="b">Die zweite Zeichenfolge für den Vergleich oder null. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.String.PadLeft(System.Int32)">
      <summary>Gibt eine neue Zeichenfolge zurück, bei der die Zeichen in dieser Instanz rechtsbündig ausgerichtet werden, indem die linke Seite mit Leerzeichen aufgefüllt wird, um eine angegebene Gesamtlänge zu erreichen.</summary>
      <returns>Eine neue Zeichenfolge, die dieser Instanz entspricht, jedoch rechtsbündig ausgerichtet und links mit Leerzeichen aufgefüllt ist, sodass die Länge <paramref name="totalWidth" /> erreicht wird.Wenn <paramref name="totalWidth" /> jedoch kleiner als die Länge dieser Instanz ist, gibt die Methode einen Verweis auf die vorhandene Instanz zurück.Wenn <paramref name="totalWidth" /> gleich der Länge dieser Instanz ist, gibt die Methode eine neue Zeichenfolge zurück, die mit dieser Instanz identisch ist.</returns>
      <param name="totalWidth">Die Anzahl der Zeichen in der resultierenden Zeichenfolge, entsprechend der Anzahl der ursprünglichen Zeichen zuzüglich aller zusätzlichen Füllzeichen. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="totalWidth" /> is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.PadLeft(System.Int32,System.Char)">
      <summary>Gibt eine neue Zeichenfolge zurück, bei der die Zeichen in dieser Instanz rechtsbündig ausgerichtet werden, indem die linke Seite mit einem angegebenen Unicode-Zeichen aufgefüllt wird, um eine angegebene Gesamtlänge zu erreichen.</summary>
      <returns>Eine neue Zeichenfolge, die dieser Instanz entspricht, jedoch rechtsbündig ausgerichtet und links mit <paramref name="paddingChar" />-Zeichen aufgefüllt ist, sodass die Länge <paramref name="totalWidth" /> erreicht wird.Wenn <paramref name="totalWidth" /> jedoch kleiner als die Länge dieser Instanz ist, gibt die Methode einen Verweis auf die vorhandene Instanz zurück.Wenn <paramref name="totalWidth" /> gleich der Länge dieser Instanz ist, gibt die Methode eine neue Zeichenfolge zurück, die mit dieser Instanz identisch ist.</returns>
      <param name="totalWidth">Die Anzahl der Zeichen in der resultierenden Zeichenfolge, entsprechend der Anzahl der ursprünglichen Zeichen zuzüglich aller zusätzlichen Füllzeichen. </param>
      <param name="paddingChar">Ein Unicode-Füllzeichen. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="totalWidth" /> is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.PadRight(System.Int32)">
      <summary>Gibt eine neue Zeichenfolge zurück, deren Zeichen linksbündig ausgerichtet werden, indem die rechte Seite mit Leerzeichen aufgefüllt wird, um eine angegebene Gesamtlänge zu erreichen.</summary>
      <returns>Eine neue Zeichenfolge, die dieser Instanz entspricht, jedoch rechtsbündig ausgerichtet und links mit Leerzeichen aufgefüllt ist, sodass die Länge <paramref name="totalWidth" /> erreicht wird.Wenn <paramref name="totalWidth" /> jedoch kleiner als die Länge dieser Instanz ist, gibt die Methode einen Verweis auf die vorhandene Instanz zurück.Wenn <paramref name="totalWidth" /> gleich der Länge dieser Instanz ist, gibt die Methode eine neue Zeichenfolge zurück, die mit dieser Instanz identisch ist.</returns>
      <param name="totalWidth">Die Anzahl der Zeichen in der resultierenden Zeichenfolge, entsprechend der Anzahl der ursprünglichen Zeichen zuzüglich aller zusätzlichen Füllzeichen. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="totalWidth" /> is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.PadRight(System.Int32,System.Char)">
      <summary>Gibt eine neue Zeichenfolge zurück, deren Zeichen linksbündig ausgerichtet werden, indem die rechte Seite mit einem angegebenen Unicode-Zeichen aufgefüllt wird, um eine angegebene Gesamtlänge zu erreichen.</summary>
      <returns>Eine neue Zeichenfolge, die dieser Instanz entspricht, jedoch rechtsbündig ausgerichtet und links mit <paramref name="paddingChar" />-Zeichen aufgefüllt ist, sodass die Länge <paramref name="totalWidth" /> erreicht wird.Wenn <paramref name="totalWidth" /> jedoch kleiner als die Länge dieser Instanz ist, gibt die Methode einen Verweis auf die vorhandene Instanz zurück.Wenn <paramref name="totalWidth" /> gleich der Länge dieser Instanz ist, gibt die Methode eine neue Zeichenfolge zurück, die mit dieser Instanz identisch ist.</returns>
      <param name="totalWidth">Die Anzahl der Zeichen in der resultierenden Zeichenfolge, entsprechend der Anzahl der ursprünglichen Zeichen zuzüglich aller zusätzlichen Füllzeichen. </param>
      <param name="paddingChar">Ein Unicode-Füllzeichen. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="totalWidth" /> is less than zero. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Remove(System.Int32)">
      <summary>Gibt eine neue Zeichenfolge zurück, in der alle Zeichen in der aktuellen Instanz, beginnend an einer angegebenen Position und sich über die letzte Position fortsetzend, gelöscht wurden.</summary>
      <returns>Eine neue Zeichenfolge, die dieser Zeichenfolge ohne die entfernten Zeichen entspricht.</returns>
      <param name="startIndex">Die nullbasierte Position, ab der Zeichen gelöscht werden sollen. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero.-or- <paramref name="startIndex" /> specifies a position that is not within this string. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Remove(System.Int32,System.Int32)">
      <summary>Gibt eine neue Zeichenfolge zurück, in der eine bestimmte Anzahl von Zeichen in er aktuellen Instanz, beginnend an einer angegebenen Position, gelöscht wurden.</summary>
      <returns>Eine neue Zeichenfolge, die dieser Instanz ohne die entfernten Zeichen entspricht.</returns>
      <param name="startIndex">Die nullbasierte Position, ab der Zeichen gelöscht werden sollen. </param>
      <param name="count">Die Anzahl der zu löschenden Zeichen. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Either <paramref name="startIndex" /> or <paramref name="count" /> is less than zero.-or- <paramref name="startIndex" /> plus <paramref name="count" /> specify a position outside this instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Replace(System.Char,System.Char)">
      <summary>Gibt eine neue Zeichenfolge zurück, in der alle Vorkommen eines angegebenen Unicode-Zeichens in dieser Instanz durch ein anderes angegebenes Unicode-Zeichen ersetzt wurden.</summary>
      <returns>Eine Zeichenfolge, die dieser Instanz entspricht, außer dass alle Instanzen von <paramref name="oldChar" /> durch <paramref name="newChar" /> ersetzt werden.Wenn <paramref name="oldChar" /> nicht in der aktuellen Instanz gefunden wird, gibt die Methode die aktuelle Instanz unverändert zurück.</returns>
      <param name="oldChar">Das zu ersetzende Unicode-Zeichen. </param>
      <param name="newChar">Das Unicode-Zeichen, das jedes Vorkommen von <paramref name="oldChar" /> ersetzen soll. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Replace(System.String,System.String)">
      <summary>Gibt eine neue Zeichenfolge zurück, in der alle Vorkommen einer angegebenen Zeichenfolge in der aktuellen Instanz durch eine andere angegebene Zeichenfolge ersetzt wurden.</summary>
      <returns>Eine Zeichenfolge, die der aktuellen Zeichenfolge entspricht, außer dass alle Instanzen von <paramref name="oldValue" /> durch <paramref name="newValue" /> ersetzt werden.Wenn <paramref name="oldValue" /> nicht in der aktuellen Instanz gefunden wird, gibt die Methode die aktuelle Instanz unverändert zurück.</returns>
      <param name="oldValue">Die zu ersetzende Zeichenfolge. </param>
      <param name="newValue">Die Zeichenfolge, die jedes Vorkommen von <paramref name="oldValue" /> ersetzen soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oldValue" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="oldValue" /> is the empty string (""). </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[])">
      <summary>Gibt ein Zeichenfolgenarray zurück, das die Teilzeichenfolgen dieser Instanz enthält, die durch Elemente eines angegebenen Unicode-Zeichenarrays getrennt sind.</summary>
      <returns>Ein Array, dessen Elemente die Teilzeichenfolgen in dieser Instanz enthält, die durch ein oder mehr Zeichen aus <paramref name="separator" /> getrennt sind.Weitere Informationen finden Sie im Abschnitt "Hinweise".</returns>
      <param name="separator">Ein Array von Unicode-Zeichen, die die Teilzeichenfolgen dieser Instanz trennen, ein leeres Array ohne Trennzeichen oder null. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[],System.Int32)">
      <summary>Gibt ein Zeichenfolgenarray zurück, das die Teilzeichenfolgen dieser Instanz enthält, die durch Elemente eines angegebenen Unicode-Zeichenarrays getrennt sind.Ein Parameter gibt die maximale Anzahl zurückzugebender Teilzeichenfolgen an.</summary>
      <returns>Ein Array, dessen Elemente die Teilzeichenfolgen in dieser Instanz enthält, die durch ein oder mehr Zeichen aus <paramref name="separator" /> getrennt sind.Weitere Informationen finden Sie im Abschnitt "Hinweise".</returns>
      <param name="separator">Ein Array von Unicode-Zeichen, die die Teilzeichenfolgen dieser Instanz trennen, ein leeres Array ohne Trennzeichen oder null. </param>
      <param name="count">Die maximale Anzahl der zurückzugebenden Teilzeichenfolgen. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[],System.Int32,System.StringSplitOptions)">
      <summary>Gibt ein Zeichenfolgenarray zurück, das die Teilzeichenfolgen dieser Zeichenfolge enthält, die durch Elemente eines angegebenen Unicode-Zeichenarrays getrennt sind.Parameter geben die maximale Anzahl von zurückzugebenden Teilzeichenfolgen an und ob leere Arrayelemente zurückgegeben werden sollen.</summary>
      <returns>Ein Array, dessen Elemente die Teilzeichenfolgen in dieser Zeichenfolge enthält, die durch ein oder mehr Zeichen aus <paramref name="separator" /> getrennt sind.Weitere Informationen finden Sie im Abschnitt "Hinweise".</returns>
      <param name="separator">Ein Array von Unicode-Zeichen, die die Teilzeichenfolgen dieser Zeichenfolge trennen, ein leeres Array ohne Trennzeichen oder null. </param>
      <param name="count">Die maximale Anzahl der zurückzugebenden Teilzeichenfolgen. </param>
      <param name="options">
        <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />, wenn leere Arrayelemente aus dem zurückgegebenen Array ausgelassen werden sollen, oder <see cref="F:System.StringSplitOptions.None" />, wenn leere Arrayelemente in das zurückgegebene Array eingeschlossen werden sollen. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[],System.StringSplitOptions)">
      <summary>Gibt ein Zeichenfolgenarray zurück, das die Teilzeichenfolgen dieser Zeichenfolge enthält, die durch Elemente eines angegebenen Unicode-Zeichenarrays getrennt sind.Ein Parameter gibt an, ob leere Arrayelemente zurückgegeben werden sollen.</summary>
      <returns>Ein Array, dessen Elemente die Teilzeichenfolgen in dieser Zeichenfolge enthält, die durch ein oder mehr Zeichen aus <paramref name="separator" /> getrennt sind.Weitere Informationen finden Sie im Abschnitt "Hinweise".</returns>
      <param name="separator">Ein Array von Unicode-Zeichen, die die Teilzeichenfolgen dieser Zeichenfolge trennen, ein leeres Array ohne Trennzeichen oder null. </param>
      <param name="options">
        <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />, wenn leere Arrayelemente aus dem zurückgegebenen Array ausgelassen werden sollen, oder <see cref="F:System.StringSplitOptions.None" />, wenn leere Arrayelemente in das zurückgegebene Array eingeschlossen werden sollen. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.String[],System.Int32,System.StringSplitOptions)">
      <summary>Gibt ein Zeichenfolgenarray zurück, das die Teilzeichenfolgen dieser Zeichenfolge enthält, die durch Elemente eines angegebenen Zeichenfolgenarrays getrennt sind.Parameter geben die maximale Anzahl von zurückzugebenden Teilzeichenfolgen an und ob leere Arrayelemente zurückgegeben werden sollen.</summary>
      <returns>Ein Array, dessen Elemente die Teilzeichenfolgen in dieser Zeichenfolge enthält, die durch ein oder mehr Zeichenfolgen aus <paramref name="separator" /> getrennt sind.Weitere Informationen finden Sie im Abschnitt "Hinweise".</returns>
      <param name="separator">Ein Array mit Zeichenfolgen, die die Teilzeichenfolgen in dieser Zeichenfolge trennen, ein leeres Array ohne Trennzeichen oder null. </param>
      <param name="count">Die maximale Anzahl der zurückzugebenden Teilzeichenfolgen. </param>
      <param name="options">
        <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />, wenn leere Arrayelemente aus dem zurückgegebenen Array ausgelassen werden sollen, oder <see cref="F:System.StringSplitOptions.None" />, wenn leere Arrayelemente in das zurückgegebene Array eingeschlossen werden sollen. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.String[],System.StringSplitOptions)">
      <summary>Gibt ein Zeichenfolgenarray zurück, das die Teilzeichenfolgen dieser Zeichenfolge enthält, die durch Elemente eines angegebenen Zeichenfolgenarrays getrennt sind.Ein Parameter gibt an, ob leere Arrayelemente zurückgegeben werden sollen.</summary>
      <returns>Ein Array, dessen Elemente die Teilzeichenfolgen in dieser Zeichenfolge enthält, die durch ein oder mehr Zeichenfolgen aus <paramref name="separator" /> getrennt sind.Weitere Informationen finden Sie im Abschnitt "Hinweise".</returns>
      <param name="separator">Ein Array mit Zeichenfolgen, die die Teilzeichenfolgen in dieser Zeichenfolge trennen, ein leeres Array ohne Trennzeichen oder null. </param>
      <param name="options">
        <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />, wenn leere Arrayelemente aus dem zurückgegebenen Array ausgelassen werden sollen, oder <see cref="F:System.StringSplitOptions.None" />, wenn leere Arrayelemente in das zurückgegebene Array eingeschlossen werden sollen. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.StartsWith(System.String)">
      <summary>Bestimmt, ob der Anfang dieser Zeichenfolgeninstanz mit der angegebenen Zeichenfolge übereinstimmt.</summary>
      <returns>true, wenn <paramref name="value" /> mit dem Anfang dieser Zeichenfolge übereinstimmt, andernfalls false.</returns>
      <param name="value">Die zu vergleichende Zeichenfolge. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.StartsWith(System.String,System.StringComparison)">
      <summary>Bestimmt, ob der Anfang dieser Zeichenfolgeninstanz bei einem Vergleich unter Verwendung der angegebenen Vergleichsoption mit der angegebenen Zeichenfolge übereinstimmt.</summary>
      <returns>true, wenn diese Instanz mit <paramref name="value" /> beginnt; andernfalls false.</returns>
      <param name="value">Die zu vergleichende Zeichenfolge. </param>
      <param name="comparisonType">Einer der Enumerationswerte, die bestimmen, wie diese Zeichenfolge und <paramref name="value" /> verglichen werden. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.Substring(System.Int32)">
      <summary>Ruft eine Teilzeichenfolge dieser Instanz ab.Die untergeordnete Zeichenfolge beginnt in einer angegebenen Zeichenposition und wird an das Ende der Zeichenfolge fortgesetzt.</summary>
      <returns>Eine Zeichenfolge, die der Teilzeichenfolge ab <paramref name="startIndex" /> in dieser Instanz entspricht, oder <see cref="F:System.String.Empty" />, wenn <paramref name="startIndex" /> gleich der Länge dieser Instanz ist.</returns>
      <param name="startIndex">Die nullbasierte Anfangsposition einer Teilzeichenfolge innerhalb dieser Instanz. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of this instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Substring(System.Int32,System.Int32)">
      <summary>Ruft eine Teilzeichenfolge dieser Instanz ab.Die Teilzeichenfolge beginnt an einer angegebenen Zeichenposition und hat eine angegebene Länge.</summary>
      <returns>Eine Zeichenfolge, die der Teilzeichenfolge mit der Länge <paramref name="length" /> ab <paramref name="startIndex" /> in dieser Instanz entspricht, oder <see cref="F:System.String.Empty" />, wenn <paramref name="startIndex" /> gleich der Länge dieser Instanz und <paramref name="length" /> 0 (null) ist.</returns>
      <param name="startIndex">Die nullbasierte Anfangsposition einer Teilzeichenfolge innerhalb dieser Instanz. </param>
      <param name="length">Die Anzahl der Zeichen in der Teilzeichenfolge. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> plus <paramref name="length" /> indicates a position not within this instance.-or- <paramref name="startIndex" /> or <paramref name="length" /> is less than zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der das aktuelle <see cref="T:System.String" />-Objekt durchläuft. </summary>
      <returns>Ein <see cref="T:System.Collections.Generic.IEnumerator`1" /> vom Typ <see cref="T:System.Char" />, der zum Durchlaufen des aktuellen <see cref="T:System.String" />-Objekts verwendet werden kann.</returns>
    </member>
    <member name="M:System.String.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der das aktuelle <see cref="T:System.String" />-Objekt durchläuft. </summary>
      <returns>Ein Enumerator, mit dem die Elemente in der aktuellen Zeichenfolge durchlaufen werden können.</returns>
    </member>
    <member name="M:System.String.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relative Reihenfolge dieser Instanz und <paramref name="value" /> angibt.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.String" />. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.String.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true, wenn der Wert der aktuellen Zeichenfolge <see cref="F:System.Boolean.TrueString" /> ist. false, wenn der Wert der aktuellen Zeichenfolge <see cref="F:System.Boolean.FalseString" /> ist.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.FormatException">The value of the current string is not <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</summary>
      <returns>Das Zeichen am Index 0 im aktuellen <see cref="T:System.String" />-Objekt.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDateTime(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number less than <see cref="F:System.Decimal.MinValue" /> or than <see cref="F:System.Decimal.MaxValue" /> greater. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
    </member>
    <member name="M:System.String.System#IConvertible#ToString(System.IFormatProvider)"></member>
    <member name="M:System.String.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</returns>
      <param name="type">Der Typ des zurückgegebenen Objekts. </param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">The value of the current <see cref="T:System.String" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter. </exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />.</exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <exception cref="T:System.FormatException">The value of the current <see cref="T:System.String" /> object cannot be parsed. </exception>
      <exception cref="T:System.OverflowException">The value of the current <see cref="T:System.String" /> object is a number greater <see cref="F:System.UInt32.MaxValue" /> or less than <see cref="F:System.UInt32.MinValue" /></exception>
    </member>
    <member name="M:System.String.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</summary>
      <returns>Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
    </member>
    <member name="M:System.String.ToCharArray">
      <summary>Kopiert die Zeichen dieser Instanz in ein Array von Unicode-Zeichen. </summary>
      <returns>Ein Array von Unicode-Zeichen, dessen Elemente die einzelnen Zeichen dieser Instanz darstellen.Wenn diese Instanz eine leere Zeichenfolge ist, ist das zurückgegebene Array leer und hat die Länge 0.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.ToCharArray(System.Int32,System.Int32)">
      <summary>Kopiert die Zeichen einer angegebenen Teilzeichenfolge dieser Instanz in ein Array von Unicode-Zeichen.</summary>
      <returns>Ein Array von Unicode-Zeichen, dessen Elemente die <paramref name="length" />-Zeichen dieser Instanz ab Zeichenposition <paramref name="startIndex" /> sind.</returns>
      <param name="startIndex">Die Anfangsposition einer Teilzeichenfolge innerhalb dieser Instanz. </param>
      <param name="length">Die Länge einer Teilzeichenfolge innerhalb dieser Instanz. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than zero.-or- <paramref name="startIndex" /> plus <paramref name="length" /> is greater than the length of this instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.ToLower">
      <summary>Gibt eine in Kleinbuchstaben konvertierte Kopie dieser Zeichenfolge zurück.</summary>
      <returns>Eine Zeichenfolge aus Kleinbuchstaben.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.ToLowerInvariant">
      <summary>Gibt eine in Kleinbuchstaben konvertierte Kopie dieses <see cref="T:System.String" />-Objekts zurück, wobei die Regeln der Groß- und Kleinschreibung der invarianten Kultur verwendet werden.</summary>
      <returns>Die Entsprechung der aktuellen Zeichenfolge in Kleinbuchstaben.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.ToString">
      <summary>Gibt diese Instanz von <see cref="T:System.String" /> zurück. Es wird keine wirkliche Konvertierung durchgeführt.</summary>
      <returns>Die aktuelle Zeichenfolge.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.ToUpper">
      <summary>Gibt eine in Großbuchstaben konvertierte Kopie dieser Zeichenfolge zurück.</summary>
      <returns>Die Entsprechung der aktuellen Zeichenfolge in Großbuchstaben.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.ToUpperInvariant">
      <summary>Gibt eine in Großbuchstaben konvertierte Kopie dieses <see cref="T:System.String" />-Objekts zurück, wobei die Regeln der Groß- und Kleinschreibung der invarianten Kultur verwendet werden.</summary>
      <returns>Die Entsprechung der aktuellen Zeichenfolge in Großbuchstaben.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.Trim">
      <summary>Entfernt alle führenden und nachgestellten Leerraumzeichen aus dem aktuellen <see cref="T:System.String" />-Objekt.</summary>
      <returns>Die resultierende Zeichenfolge nach dem Entfernen alle Leerraumzeichen am Anfang und Ende der aktuellen Zeichenfolge.Wenn keine Zeichen in der aktuellen Instanz gekürzt werden können, gibt die Methode die aktuelle Instanz unverändert zurück.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Trim(System.Char[])">
      <summary>Entfernt alle führenden und nachgestellten Vorkommen der Zeichen im angegebenen Array aus dem aktuellen <see cref="T:System.String" />-Objekt.</summary>
      <returns>Die resultierende Zeichenfolge, nachdem alle im <paramref name="trimChars" />-Parameter übergebenen Zeichen am Anfang und Ende der aktuellen Zeichenfolge entfernt wurden.Wenn <paramref name="trimChars" />null oder ein leeres Array ist, werden stattdessen Leerzeichen entfernt.Wenn keine Zeichen in der aktuellen Instanz gekürzt werden können, gibt die Methode die aktuelle Instanz unverändert zurück.</returns>
      <param name="trimChars">Ein Array mit den zu entfernenden Unicode-Zeichen oder null. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.TrimEnd(System.Char[])">
      <summary>Entfernt alle nachgestellten Vorkommen der Zeichen im angegebenen Array aus dem aktuellen <see cref="T:System.String" />-Objekt.</summary>
      <returns>Die resultierende Zeichenfolge, nachdem alle im <paramref name="trimChars" />-Parameter übergebenen Zeichen am Ende der aktuellen Zeichenfolge entfernt wurden.Wenn <paramref name="trimChars" />null oder ein leeres Array ist, werden stattdessen Leerzeichen entfernt.Wenn keine Zeichen in der aktuellen Instanz gekürzt werden können, gibt die Methode die aktuelle Instanz unverändert zurück.</returns>
      <param name="trimChars">Ein Array mit den zu entfernenden Unicode-Zeichen oder null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.TrimStart(System.Char[])">
      <summary>Entfernt alle nachgestellten Vorkommen der Zeichen im angegebenen Array aus dem aktuellen <see cref="T:System.String" />-Objekt.</summary>
      <returns>Die resultierende Zeichenfolge, nachdem alle im <paramref name="trimChars" />-Parameter übergebenen Zeichen am Anfang der aktuellen Zeichenfolge entfernt wurden.Wenn <paramref name="trimChars" />null oder ein leeres Array ist, werden stattdessen Leerzeichen entfernt.</returns>
      <param name="trimChars">Ein Array mit den zu entfernenden Unicode-Zeichen oder null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.StringComparison">
      <summary>Gibt die Kultur, die Groß-/Kleinschreibung und die Sortierreihenfolge an, die von bestimmten Überladungen der <see cref="M:System.String.Compare(System.String,System.String)" />-Methode und der <see cref="M:System.String.Equals(System.Object)" />-Methode verwendet werden sollen.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.StringComparison.CurrentCulture">
      <summary>Vergleichen Sie Zeichenfolgen mit kulturabhängigen Sortierregeln und der aktuellen Kultur.</summary>
    </member>
    <member name="F:System.StringComparison.CurrentCultureIgnoreCase">
      <summary>Vergleichen Sie Zeichenfolgen anhand der kulturabhängigen Sortierregeln und der aktuellen Kultur ohne Berücksichtigung der Groß- und Kleinschreibung der verglichenen Zeichenfolgen.</summary>
    </member>
    <member name="F:System.StringComparison.Ordinal">
      <summary>Vergleich von Zeichenfolgen anhand der ordinalen Sortierregeln.</summary>
    </member>
    <member name="F:System.StringComparison.OrdinalIgnoreCase">
      <summary>Vergleich von Zeichenfolgen anhand der ordinalen Sortierregeln und unter Nichtbeachtung der Groß- und Kleinschreibung der verglichenen Zeichenfolgen.</summary>
    </member>
    <member name="T:System.StringSplitOptions">
      <summary>Gibt an, ob anwendbare <see cref="Overload:System.String.Split" />-Methodenüberladungen leere Teilzeichenfolgen im Rückgabewert einschließen oder weglassen.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.StringSplitOptions.None">
      <summary>Der Rückgabewert schließt Arrayelemente ein, die eine leere Zeichenfolge enthalten.</summary>
    </member>
    <member name="F:System.StringSplitOptions.RemoveEmptyEntries">
      <summary>Der Rückgabewert schließt keine Arrayelemente ein, die eine leere Zeichenfolge enthalten.</summary>
    </member>
    <member name="T:System.ThreadStaticAttribute">
      <summary>Gibt an, dass der Wert eines statischen Felds für jeden Thread eindeutig ist.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ThreadStaticAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ThreadStaticAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.TimeoutException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn die für einen Prozess oder einen Vorgang vorgesehene Zeit abgelaufen ist.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeoutException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.TimeoutException" />-Klasse.</summary>
    </member>
    <member name="M:System.TimeoutException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.TimeoutException" />-Klasse mit der angegebenen Fehlermeldung.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird. </param>
    </member>
    <member name="M:System.TimeoutException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.TimeoutException" />-Klasse mit der angegebenen Fehlermeldung und der angegebenen internen Ausnahme.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.TimeSpan">
      <summary>Stellt ein Zeitintervall dar.Weitere Informationen zum Durchsuchen des .NET Framework-Quellcodes für diesen Typ finden Sie unter Verweisquelle.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.TimeSpan" />-Struktur mit der angegebenen Anzahl von Stunden, Minuten und Sekunden.</summary>
      <param name="hours">Anzahl der Stunden. </param>
      <param name="minutes">Anzahl der Minuten. </param>
      <param name="seconds">Anzahl der Sekunden. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.TimeSpan" />-Struktur mit der angegebenen Anzahl von Tagen, Stunden, Minuten und Sekunden.</summary>
      <param name="days">Anzahl der Tage. </param>
      <param name="hours">Anzahl der Stunden. </param>
      <param name="minutes">Anzahl der Minuten. </param>
      <param name="seconds">Anzahl der Sekunden. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.TimeSpan" />-Struktur mit der angegebenen Anzahl von Tagen, Stunden, Minuten, Sekunden und Millisekunden.</summary>
      <param name="days">Anzahl der Tage. </param>
      <param name="hours">Anzahl der Stunden. </param>
      <param name="minutes">Anzahl der Minuten. </param>
      <param name="seconds">Anzahl der Sekunden. </param>
      <param name="milliseconds">Anzahl der Millisekunden. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int64)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.TimeSpan" />-Struktur mit der angegebenen Anzahl von Ticks.</summary>
      <param name="ticks">Eine in der Einheit 100 Nanosekunden ausgedrückte Zeitspanne. </param>
    </member>
    <member name="M:System.TimeSpan.Add(System.TimeSpan)">
      <summary>Gibt ein neues <see cref="T:System.TimeSpan" />-Objekt zurück, dessen Wert die Summe aus dem angegebenen <see cref="T:System.TimeSpan" />-Objekt und dieser Instanz ist.</summary>
      <returns>Ein neues Objekt, das die Summe des Werts dieser Instanz und des Werts von <paramref name="ts" /> darstellt.</returns>
      <param name="ts">Das hinzuzufügende Zeitintervall.</param>
      <exception cref="T:System.OverflowException">The resulting <see cref="T:System.TimeSpan" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)">
      <summary>Vergleicht zwei <see cref="T:System.TimeSpan" />-Werte und gibt eine Ganzzahl zurück, die angibt, ob der erste Wert kürzer oder länger als der zweite Wert ist oder ob beide Werte die gleiche Länge aufweisen.</summary>
      <returns>Einer der folgenden Werte.Wert Beschreibung -1 <paramref name="t1" /> ist kürzer als <paramref name="t2" />. 0 <paramref name="t1" /> ist gleich <paramref name="t2" />. 1 <paramref name="t1" /> ist länger als <paramref name="t2" />. </returns>
      <param name="t1">Das erste zu vergleichende Zeitintervall. </param>
      <param name="t2">Das zweite zu vergleichende Zeitintervall. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.CompareTo(System.TimeSpan)">
      <summary>Vergleicht diese Instanz mit einem angegebenen <see cref="T:System.TimeSpan" />-Objekt und gibt eine Ganzzahl zurück, die angibt, ob diese Instanz kürzer oder länger als das angegebene <see cref="T:System.TimeSpan" />-Objekt ist oder ob sie die gleiche Länge aufweist.</summary>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser Instanz und <paramref name="value" /> angibt.Wert Beschreibung Eine negative ganze Zahl Diese Instanz ist kürzer als <paramref name="value" />. Zero Diese Instanz ist gleich <paramref name="value" />. Eine positive ganze Zahl Diese Instanz ist länger als <paramref name="value" />. </returns>
      <param name="value">Ein mit dieser Instanz zu vergleichendes Objekt.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Days">
      <summary>Ruft die Tageskomponente des Zeitintervalls ab, das durch die aktuelle <see cref="T:System.TimeSpan" />-Struktur dargestellt wird.</summary>
      <returns>Die Tagkomponente in dieser Instanz.Der Rückgabewert kann negativ oder positiv sein.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Duration">
      <summary>Gibt ein neues <see cref="T:System.TimeSpan" />-Objekt zurück, dessen Wert den absoluten Wert des aktuellen <see cref="T:System.TimeSpan" />-Objekts darstellt.</summary>
      <returns>Ein neues Objekt, dessen Wert den absoluten Wert des aktuellen <see cref="T:System.TimeSpan" />-Objekts darstellt.</returns>
      <exception cref="T:System.OverflowException">The value of this instance is <see cref="F:System.TimeSpan.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true wenn <paramref name="value" /> ein <see cref="T:System.TimeSpan" />-Objekt ist, das das gleiche Zeitintervall wie die aktuelle <see cref="T:System.TimeSpan" />-Struktur darstellt, andernfalls false.</returns>
      <param name="value">Ein Objekt, das mit dieser Instanz verglichen werden soll. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Equals(System.TimeSpan)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen <see cref="T:System.TimeSpan" />-Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> das gleiche Zeitintervall darstellt wie diese Instanz, andernfalls false.</returns>
      <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei angegebene Instanzen von <see cref="T:System.TimeSpan" /> gleich sind.</summary>
      <returns>true, wenn die Werte von <paramref name="t1" /> und <paramref name="t2" /> gleich sind, andernfalls false.</returns>
      <param name="t1">Das erste zu vergleichende Zeitintervall. </param>
      <param name="t2">Das zweite zu vergleichende Zeitintervall. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromDays(System.Double)">
      <summary>Gibt eine <see cref="T:System.TimeSpan" /> zurück, die eine angegebene Anzahl von Tagen darstellt. Die Angabe wird auf die nächste Millisekunde gerundet.</summary>
      <returns>Ein Objekt, das <paramref name="value" /> darstellt.</returns>
      <param name="value">Eine Anzahl von Tagen, auf die nächste Millisekunde gerundet. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. -or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromHours(System.Double)">
      <summary>Gibt eine <see cref="T:System.TimeSpan" /> zurück, die eine angegebene Anzahl von Stunden darstellt. Die Angabe wird auf die nächste Millisekunde gerundet.</summary>
      <returns>Ein Objekt, das <paramref name="value" /> darstellt.</returns>
      <param name="value">Eine Anzahl von Stunden, auf die nächste Millisekunde gerundet. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. -or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromMilliseconds(System.Double)">
      <summary>Gibt eine <see cref="T:System.TimeSpan" /> zurück, die eine angegebene Anzahl von Millisekunden darstellt.</summary>
      <returns>Ein Objekt, das <paramref name="value" /> darstellt.</returns>
      <param name="value">Eine Anzahl von Millisekunden. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromMinutes(System.Double)">
      <summary>Gibt eine <see cref="T:System.TimeSpan" /> zurück, die eine angegebene Anzahl von Minuten darstellt. Die Angabe wird auf die nächste Millisekunde gerundet.</summary>
      <returns>Ein Objekt, das <paramref name="value" /> darstellt.</returns>
      <param name="value">Eine Anzahl von Minuten, auf die nächste Millisekunde gerundet. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromSeconds(System.Double)">
      <summary>Gibt eine <see cref="T:System.TimeSpan" /> zurück, die eine angegebene Anzahl von Sekunden darstellt. Die Angabe wird auf die nächste Millisekunde gerundet.</summary>
      <returns>Ein Objekt, das <paramref name="value" /> darstellt.</returns>
      <param name="value">Eine Anzahl von Sekunden, auf die nächste Millisekunde gerundet. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromTicks(System.Int64)">
      <summary>Gibt eine <see cref="T:System.TimeSpan" /> zurück, die einen angegebenen Zeitraum darstellt. Die Angabe erfolgt in der Einheit Ticks.</summary>
      <returns>Ein Objekt, das <paramref name="value" /> darstellt.</returns>
      <param name="value">Eine Anzahl von Ticks, die eine Zeitspanne darstellt. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.GetHashCode">
      <summary>Gibt einen Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Hours">
      <summary>Ruft die Stundenkomponente des Zeitintervalls ab, das durch die aktuelle <see cref="T:System.TimeSpan" />-Struktur dargestellt wird.</summary>
      <returns>Die Stundenkomponente der aktuellen <see cref="T:System.TimeSpan" />-Struktur.Der Rückgabewert liegt im Bereich von -23 bis 23.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.MaxValue">
      <summary>Stellt den maximalen <see cref="T:System.TimeSpan" />-Wert dar.Dieses Feld ist schreibgeschützt.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Milliseconds">
      <summary>Ruft die Stundenkomponente des Zeitintervalls ab, das durch die aktuelle <see cref="T:System.TimeSpan" />-Struktur dargestellt wird.</summary>
      <returns>Die Millisekundenkomponente der aktuellen <see cref="T:System.TimeSpan" />-Struktur.Der Rückgabewert liegt im Bereich von -999 bis 999.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Minutes">
      <summary>Ruft die Minutenkomponente des Zeitintervalls ab, das durch die aktuelle <see cref="T:System.TimeSpan" />-Struktur dargestellt wird.</summary>
      <returns>Die Minutenkomponente der aktuellen <see cref="T:System.TimeSpan" />-Struktur.Der Rückgabewert liegt im Bereich von -59 bis 59.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.MinValue">
      <summary>Stellt den minimalen <see cref="T:System.TimeSpan" />-Wert dar.Dieses Feld ist schreibgeschützt.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Negate">
      <summary>Gibt ein neues <see cref="T:System.TimeSpan" />-Objekt zurück, dessen Wert der negierte Wert dieser Instanz ist.</summary>
      <returns>Ein neues Objekt mit demselben numerischen Wert wie diese Instanz, jedoch mit umgekehrtem Vorzeichen.</returns>
      <exception cref="T:System.OverflowException">The negated value of this instance cannot be represented by a <see cref="T:System.TimeSpan" />; that is, the value of this instance is <see cref="F:System.TimeSpan.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)">
      <summary>Addiert zwei angegebene <see cref="T:System.TimeSpan" />-Instanzen.</summary>
      <returns>Ein Objekt, dessen Wert die Summe der Werte von <paramref name="t1" /> und <paramref name="t2" /> ist.</returns>
      <param name="t1">Das erste hinzuzufügende Zeitintervall. </param>
      <param name="t2">Das zweite hinzuzufügende Zeitintervall.</param>
      <exception cref="T:System.OverflowException">The resulting <see cref="T:System.TimeSpan" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)">
      <summary>Gibt an, ob zwei <see cref="T:System.TimeSpan" />-Instanzen gleich sind.</summary>
      <returns>true, wenn die Werte von <paramref name="t1" /> und <paramref name="t2" /> gleich sind, andernfalls false.</returns>
      <param name="t1">Das erste zu vergleichende Zeitintervall. </param>
      <param name="t2">Das zweite zu vergleichende Zeitintervall. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)">
      <summary>Gibt an, ob eine angegebene <see cref="T:System.TimeSpan" /> größer als eine andere angegebene <see cref="T:System.TimeSpan" /> ist.</summary>
      <returns>true, wenn der Wert von <paramref name="t1" /> größer als der Wert von <paramref name="t2" /> ist, andernfalls false.</returns>
      <param name="t1">Das erste zu vergleichende Zeitintervall. </param>
      <param name="t2">Das zweite zu vergleichende Zeitintervall. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)">
      <summary>Gibt an, ob eine angegebene <see cref="T:System.TimeSpan" /> größer oder gleich einer anderen angegebenen <see cref="T:System.TimeSpan" /> ist.</summary>
      <returns>true, wenn der Wert von <paramref name="t1" /> größer oder gleich dem Wert von <paramref name="t2" /> ist, andernfalls false.</returns>
      <param name="t1">Das erste zu vergleichende Zeitintervall.</param>
      <param name="t2">Das zweite zu vergleichende Zeitintervall.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)">
      <summary>Gibt an, ob zwei <see cref="T:System.TimeSpan" />-Instanzen ungleich sind.</summary>
      <returns>true, wenn die Werte von <paramref name="t1" /> und <paramref name="t2" /> ungleich sind, andernfalls false.</returns>
      <param name="t1">Das erste zu vergleichende Zeitintervall.</param>
      <param name="t2">Das zweite zu vergleichende Zeitintervall.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)">
      <summary>Gibt an, ob eine angegebene <see cref="T:System.TimeSpan" /> kleiner als eine andere angegebene <see cref="T:System.TimeSpan" /> ist.</summary>
      <returns>true, wenn der Wert von <paramref name="t1" /> kleiner als der Wert von <paramref name="t2" /> ist, andernfalls false.</returns>
      <param name="t1">Das erste zu vergleichende Zeitintervall.</param>
      <param name="t2">Das zweite zu vergleichende Zeitintervall. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)">
      <summary>Gibt an, ob eine angegebene <see cref="T:System.TimeSpan" /> kleiner oder gleich einer anderen angegebenen <see cref="T:System.TimeSpan" /> ist.</summary>
      <returns>true wenn der Wert von <paramref name="t1" /> kleiner oder gleich dem Wert von <paramref name="t2" /> ist, andernfalls false.</returns>
      <param name="t1">Das erste zu vergleichende Zeitintervall. </param>
      <param name="t2">Das zweite zu vergleichende Zeitintervall. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)">
      <summary>Subtrahiert eine angegebene <see cref="T:System.TimeSpan" /> von einer anderen angegebenen <see cref="T:System.TimeSpan" />.</summary>
      <returns>Ein Objekt, dessen Wert das Ergebnis des Werts von <paramref name="t1" /> minus dem Wert von <paramref name="t2" /> ist.</returns>
      <param name="t1">Der Minuend. </param>
      <param name="t2">Der Subtrahend. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_UnaryNegation(System.TimeSpan)">
      <summary>Gibt eine <see cref="T:System.TimeSpan" /> zurück, deren Wert der negierte Wert der angegebenen Instanz ist.</summary>
      <returns>Ein Objekt mit demselben numerischen Wert wie diese Instanz, jedoch mit umgekehrtem Vorzeichen.</returns>
      <param name="t">Das Zeitintervall, das negiert werden soll. </param>
      <exception cref="T:System.OverflowException">The negated value of this instance cannot be represented by a <see cref="T:System.TimeSpan" />; that is, the value of this instance is <see cref="F:System.TimeSpan.MinValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_UnaryPlus(System.TimeSpan)">
      <summary>Gibt die angegebene Instanz von <see cref="T:System.TimeSpan" /> zurück.</summary>
      <returns>Das von <paramref name="t" /> angegebene Zeitintervall.</returns>
      <param name="t">Das Zeitintervall, das zurückgegeben werden soll. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Parse(System.String)">
      <summary>Konvertiert die Zeichenfolgendarstellung eines Zeitintervalls in die entsprechende <see cref="T:System.TimeSpan" />. </summary>
      <returns>Ein Zeitintervall, das <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die das zu konvertierende Zeitintervall angibt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components is outside its valid range. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Parse(System.String,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung eines Zeitintervalls unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende <see cref="T:System.TimeSpan" />.</summary>
      <returns>Ein Zeitintervall, das <paramref name="input" /> entspricht, wie von <paramref name="formatProvider" /> angegeben.</returns>
      <param name="input">Eine Zeichenfolge, die das zu konvertierende Zeitintervall angibt.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung eines Zeitintervalls unter Verwendung des angegebenen Formats und der kulturspezifischen Formatierungsinformationen in die entsprechende <see cref="T:System.TimeSpan" />.Das Format der Zeichenfolgendarstellung muss dem angegebenen Format genau entsprechen.</summary>
      <returns>Ein Zeitintervall, das <paramref name="input" /> entspricht, wie von <paramref name="format" /> und <paramref name="formatProvider" /> angegeben.</returns>
      <param name="input">Eine Zeichenfolge, die das zu konvertierende Zeitintervall angibt.</param>
      <param name="format">Eine standardmäßige oder benutzerdefinierte Formatierungszeichenfolge, die das erforderliche Format von <paramref name="input" /> definiert.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)">
      <summary>Konvertiert die Zeichenfolgendarstellung eines Zeitintervalls unter Verwendung des angegebenen Formats, der kulturspezifischen Formatierungsinformationen und Stile in die entsprechende <see cref="T:System.TimeSpan" />.Das Format der Zeichenfolgendarstellung muss dem angegebenen Format genau entsprechen.</summary>
      <returns>Ein Zeitintervall, das <paramref name="input" /> entspricht, wie von <paramref name="format" />, <paramref name="formatProvider" /> und <paramref name="styles" /> angegeben.</returns>
      <param name="input">Eine Zeichenfolge, die das zu konvertierende Zeitintervall angibt.</param>
      <param name="format">Eine standardmäßige oder benutzerdefinierte Formatierungszeichenfolge, die das erforderliche Format von <paramref name="input" /> definiert.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <param name="styles">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente definiert, die in der <paramref name="input" /> vorhanden sein können.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> is an invalid <see cref="T:System.Globalization.TimeSpanStyles" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung eines Zeitintervalls unter Verwendung des angegebenen Arrays von Formatierungszeichenfolgen und der kulturspezifischen Formatierungsinformationen in die entsprechende <see cref="T:System.TimeSpan" />.Das Format der Zeichenfolgendarstellung muss einem der angegebenen Formate genau entsprechen.</summary>
      <returns>Ein Zeitintervall, das <paramref name="input" /> entspricht, wie von <paramref name="formats" /> und <paramref name="formatProvider" /> angegeben.</returns>
      <param name="input">Eine Zeichenfolge, die das zu konvertierende Zeitintervall angibt.</param>
      <param name="formats">Ein Array standardmäßiger oder benutzerdefinierter Formatierungszeichenfolgen, das das erforderliche Format von <paramref name="input" /> definiert.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)">
      <summary>Konvertiert die Zeichenfolgendarstellung eines Zeitintervalls unter Verwendung der angegebenen Formate, der kulturspezifischen Formatierungsinformationen und Stile in die entsprechende <see cref="T:System.TimeSpan" />.Das Format der Zeichenfolgendarstellung muss einem der angegebenen Formate genau entsprechen.</summary>
      <returns>Ein Zeitintervall, das <paramref name="input" /> entspricht, wie von <paramref name="formats" />, <paramref name="formatProvider" /> und <paramref name="styles" /> angegeben.</returns>
      <param name="input">Eine Zeichenfolge, die das zu konvertierende Zeitintervall angibt.</param>
      <param name="formats">Ein Array standardmäßiger oder benutzerdefinierter Formatierungszeichenfolgen, das das erforderliche Format von <paramref name="input" /> definiert.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <param name="styles">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente definiert, die in der Eingabe vorhanden sein können.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> is an invalid <see cref="T:System.Globalization.TimeSpanStyles" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> has an invalid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.-or- At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range. </exception>
    </member>
    <member name="P:System.TimeSpan.Seconds">
      <summary>Ruft die Sekundenkomponente des Zeitintervalls ab, das durch die aktuelle <see cref="T:System.TimeSpan" />-Struktur dargestellt wird.</summary>
      <returns>Die Sekundenkomponente der aktuellen <see cref="T:System.TimeSpan" />-Struktur.Der Rückgabewert liegt im Bereich von -59 bis 59.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Subtract(System.TimeSpan)">
      <summary>Gibt ein neues <see cref="T:System.TimeSpan" />-Objekt zurück, dessen Wert die Differenz zwischen dem angegebenen <see cref="T:System.TimeSpan" />-Objekt und dieser Instanz ist.</summary>
      <returns>Ein neues Zeitintervall, dessen Wert das Ergebnis der Subtraktion des Werts von <paramref name="ts" /> vom Wert dieser Instanz ist.</returns>
      <param name="ts">Das Zeitintervall, das subtrahiert werden soll. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine Ganzzahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relative Reihenfolge dieser Instanz und <paramref name="value" /> angibt.Rückgabewert Bedeutung Kleiner als 0 (null) Diese Instanz befindet sich in der Sortierreihenfolge vor <paramref name="value" />.Zero Diese Instanz tritt an der gleichen Position wie <paramref name="value" /> in der Sortierreihenfolge auf.Größer als 0 (null) Diese Instanz folgt in der Sortierreihenfolge auf <paramref name="value" />.- oder -  <paramref name="value" /> ist null. </returns>
      <param name="value">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.TimeSpan" /> object. </exception>
    </member>
    <member name="P:System.TimeSpan.Ticks">
      <summary>Ruft die Anzahl der Ticks ab, die den Wert der aktuellen <see cref="T:System.TimeSpan" />-Struktur darstellt.</summary>
      <returns>Die Anzahl der Ticks in dieser Instanz.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerDay">
      <summary>Stellt die Anzahl der Ticks pro Tag dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerHour">
      <summary>Stellt die Anzahl der Ticks pro Stunde dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerMillisecond">
      <summary>Stellt die Anzahl der Ticks pro Millisekunde dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerMinute">
      <summary>Stellt die Anzahl der Ticks pro Minute dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerSecond">
      <summary>Stellt die Anzahl der Ticks pro Sekunde dar.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.ToString">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.TimeSpan" />-Objekts in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des aktuellen <see cref="T:System.TimeSpan" />-Werts. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.ToString(System.String)">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.TimeSpan" />-Objekts unter Verwendung des angegebenen Formats in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des aktuellen <see cref="T:System.TimeSpan" />-Werts im durch den <paramref name="format" />-Parameter angegebenen Format.</returns>
      <param name="format">Eine standardmäßige oder benutzerdefinierte <see cref="T:System.TimeSpan" />-Formatierungszeichenfolge.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is not recognized or is not supported.</exception>
    </member>
    <member name="M:System.TimeSpan.ToString(System.String,System.IFormatProvider)">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.TimeSpan" />-Objekts unter Verwendung des angegebenen Formats und der kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des aktuellen <see cref="T:System.TimeSpan" />-Werts, wie von <paramref name="format" /> und <paramref name="formatProvider" /> angegeben.</returns>
      <param name="format">Eine standardmäßige oder benutzerdefinierte <see cref="T:System.TimeSpan" />-Formatierungszeichenfolge.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is not recognized or is not supported.</exception>
    </member>
    <member name="P:System.TimeSpan.TotalDays">
      <summary>Ruft den Wert der aktuellen <see cref="T:System.TimeSpan" />-Struktur in ganzen Tagen und Bruchteilen von Tagen ab.</summary>
      <returns>Die Gesamtzahl der von dieser Instanz dargestellten Tage.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalHours">
      <summary>Ruft den Wert der aktuellen <see cref="T:System.TimeSpan" />-Struktur in ganzen Stunden und Bruchteilen von Stunden ab.</summary>
      <returns>Die Gesamtzahl der von dieser Instanz dargestellten Stunden.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalMilliseconds">
      <summary>Ruft den Wert der aktuellen <see cref="T:System.TimeSpan" />-Struktur in ganzen Millisekunden und Bruchteilen von Millisekunden ab.</summary>
      <returns>Die Gesamtzahl der von dieser Instanz dargestellten Millisekunden.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalMinutes">
      <summary>Ruft den Wert der aktuellen <see cref="T:System.TimeSpan" />-Struktur in ganzen Minuten und Bruchteilen von Minuten ab.</summary>
      <returns>Die Gesamtzahl der von dieser Instanz dargestellten Minuten.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalSeconds">
      <summary>Ruft den Wert der aktuellen <see cref="T:System.TimeSpan" />-Struktur in ganzen Sekunden und Bruchteilen von Sekunden ab.</summary>
      <returns>Die Gesamtzahl der von dieser Instanz dargestellten Sekunden.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)">
      <summary>Konvertiert die Zeichenfolgendarstellung eines Zeitintervalls unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende <see cref="T:System.TimeSpan" /> und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich abgeschlossen wurde.</summary>
      <returns>true, wenn <paramref name="input" /> erfolgreich konvertiert wurde, andernfalls false.Dieser Vorgang gibt false zurück, wenn der <paramref name="input" />-Parameter gleich null oder <see cref="F:System.String.Empty" /> ist, ein ungültiges Format aufweist, ein Zeitintervall kleiner als <see cref="F:System.TimeSpan.MinValue" /> oder größer als <see cref="F:System.TimeSpan.MaxValue" /> darstellt oder mindestens eine der Komponenten für Tage, Stunden, Minuten oder Sekunden außerhalb des zulässigen Bereichs liegt.</returns>
      <param name="input">Eine Zeichenfolge, die das zu konvertierende Zeitintervall angibt.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <param name="result">Diese Methode gibt entweder ein Objekt zurück, das das durch <paramref name="input" /> angegebene Zeitintervall darstellt, oder <see cref="F:System.TimeSpan.Zero" />, wenn die Konvertierung nicht ausgeführt werden konnte.Dieser Parameter wird nicht initialisiert übergeben.</param>
    </member>
    <member name="M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)">
      <summary>Konvertiert die Zeichenfolgendarstellung eines Zeitintervalls in die entsprechende <see cref="T:System.TimeSpan" /> und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich durchgeführt wurde.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.Dieser Vorgang gibt false zurück, wenn der <paramref name="s" />-Parameter gleich null oder <see cref="F:System.String.Empty" /> ist, ein ungültiges Format aufweist, ein Zeitintervall kleiner als <see cref="F:System.TimeSpan.MinValue" /> oder größer als <see cref="F:System.TimeSpan.MaxValue" /> darstellt oder mindestens eine der Komponenten für Tage, Stunden, Minuten oder Sekunden außerhalb des zulässigen Bereichs liegt.</returns>
      <param name="s">Eine Zeichenfolge, die das zu konvertierende Zeitintervall angibt.</param>
      <param name="result">Diese Methode gibt entweder ein Objekt zurück, das das durch <paramref name="s" /> angegebene Zeitintervall darstellt, oder <see cref="F:System.TimeSpan.Zero" />, wenn die Konvertierung nicht ausgeführt werden konnte.Dieser Parameter wird nicht initialisiert übergeben.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)">
      <summary>Konvertiert die Zeichenfolgendarstellung eines Zeitintervalls unter Verwendung des angegebenen Formats, der kulturspezifischen Formatierungsinformationen und Stile in die entsprechende <see cref="T:System.TimeSpan" /> und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich abgeschlossen wurde.Das Format der Zeichenfolgendarstellung muss dem angegebenen Format genau entsprechen.</summary>
      <returns>true, wenn <paramref name="input" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="input">Eine Zeichenfolge, die das zu konvertierende Zeitintervall angibt.</param>
      <param name="format">Eine standardmäßige oder benutzerdefinierte Formatierungszeichenfolge, die das erforderliche Format von <paramref name="input" /> definiert.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <param name="styles">Ein oder mehrere Enumerationswerte, die den Stil von <paramref name="input" /> angeben.</param>
      <param name="result">Diese Methode gibt entweder ein Objekt zurück, das das durch <paramref name="input" /> angegebene Zeitintervall darstellt, oder <see cref="F:System.TimeSpan.Zero" />, wenn die Konvertierung nicht ausgeführt werden konnte.Dieser Parameter wird nicht initialisiert übergeben.</param>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)">
      <summary>Konvertiert die Zeichenfolgendarstellung eines Zeitintervalls unter Verwendung des angegebenen Formats und der kulturspezifischen Formatierungsinformationen in die entsprechende <see cref="T:System.TimeSpan" /> und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich abgeschlossen wurde.Das Format der Zeichenfolgendarstellung muss dem angegebenen Format genau entsprechen.</summary>
      <returns>true, wenn <paramref name="input" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="input">Eine Zeichenfolge, die das zu konvertierende Zeitintervall angibt.</param>
      <param name="format">Eine standardmäßige oder benutzerdefinierte Formatierungszeichenfolge, die das erforderliche Format von <paramref name="input" /> definiert.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <param name="result">Diese Methode gibt entweder ein Objekt zurück, das das durch <paramref name="input" /> angegebene Zeitintervall darstellt, oder <see cref="F:System.TimeSpan.Zero" />, wenn die Konvertierung nicht ausgeführt werden konnte.Dieser Parameter wird nicht initialisiert übergeben.</param>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung eines Zeitintervalls unter Verwendung der angegebenen Formate, kulturspezifischen Formatierungsinformationen und Stile in die entsprechende <see cref="T:System.TimeSpan" /> und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich abgeschlossen wurde.Das Format der Zeichenfolgendarstellung muss einem der angegebenen Formate genau entsprechen.</summary>
      <returns>true, wenn <paramref name="input" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="input">Eine Zeichenfolge, die das zu konvertierende Zeitintervall angibt.</param>
      <param name="formats">Ein Array von standardmäßigen oder benutzerdefinierten Formatierungszeichenfolgen, die die zulässigen Formate von <paramref name="input" /> definieren.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <param name="styles">Ein oder mehrere Enumerationswerte, die den Stil von <paramref name="input" /> angeben.</param>
      <param name="result">Diese Methode gibt entweder ein Objekt zurück, das das durch <paramref name="input" /> angegebene Zeitintervall darstellt, oder <see cref="F:System.TimeSpan.Zero" />, wenn die Konvertierung nicht ausgeführt werden konnte.Dieser Parameter wird nicht initialisiert übergeben.</param>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung eines Zeitintervalls unter Verwendung der angegebenen Formate und kulturspezifischen Formatierungsinformationen in die entsprechende <see cref="T:System.TimeSpan" /> und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich abgeschlossen wurde.Das Format der Zeichenfolgendarstellung muss einem der angegebenen Formate genau entsprechen.</summary>
      <returns>true, wenn <paramref name="input" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="input">Eine Zeichenfolge, die das zu konvertierende Zeitintervall angibt.</param>
      <param name="formats">Ein Array von standardmäßigen oder benutzerdefinierten Formatierungszeichenfolgen, die die zulässigen Formate von <paramref name="input" /> definieren.</param>
      <param name="formatProvider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <param name="result">Diese Methode gibt entweder ein Objekt zurück, das das durch <paramref name="input" /> angegebene Zeitintervall darstellt, oder <see cref="F:System.TimeSpan.Zero" />, wenn die Konvertierung nicht ausgeführt werden konnte.Dieser Parameter wird nicht initialisiert übergeben.</param>
    </member>
    <member name="F:System.TimeSpan.Zero">
      <summary>Stellt den <see cref="T:System.TimeSpan" />-Wert für 0 (null) dar.Dieses Feld ist schreibgeschützt.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.TimeZoneInfo">
      <summary>Stellt eine beliebige Zeitzone der Erde dar.</summary>
    </member>
    <member name="P:System.TimeZoneInfo.BaseUtcOffset">
      <summary>Ruft den Zeitunterschied zwischen der Standardzeit der aktuellen Zeitzone und der Coordinated Universal Time (UTC) ab.</summary>
      <returns>Ein Objekt, das den Zeitunterschied zwischen der Standardzeit der aktuellen Zeitzone und der Coordinated Universal Time (UTC) angibt.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)">
      <summary>Konvertiert eine Zeit in die Zeit in einer bestimmten Zeitzone.</summary>
      <returns>Das Datum und die Uhrzeit in der Zielzeitzone.</returns>
      <param name="dateTime">Das Datum und die Uhrzeit, die konvertiert werden sollen.   </param>
      <param name="destinationTimeZone">Die Zeitzone, in die <paramref name="dateTime" /> konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentException">Der Wert des <paramref name="dateTime" />-Parameters stellt eine ungültige Zeit dar.</exception>
      <exception cref="T:System.ArgumentNullException">Der Wert des <paramref name="destinationTimeZone" />-Parameters ist null.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)">
      <summary>Konvertiert eine Zeit aus einer Zeitzone in ein andere.</summary>
      <returns>Das Datum und die Uhrzeit in der Zielzeitzone, die dem <paramref name="dateTime" />-Parameter in der Quellzeitzone entsprechen.</returns>
      <param name="dateTime">Das Datum und die Uhrzeit, die konvertiert werden sollen.</param>
      <param name="sourceTimeZone">Die Zeitzone von <paramref name="dateTime" />.</param>
      <param name="destinationTimeZone">Die Zeitzone, in die <paramref name="dateTime" /> konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentException">Die <see cref="P:System.DateTime.Kind" />-Eigenschaft des <paramref name="dateTime" />-Parameters ist <see cref="F:System.DateTimeKind.Local" />, der <paramref name="sourceTimeZone" />-Parameter entspricht jedoch nicht <see cref="F:System.DateTimeKind.Local" />.Weitere Informationen finden Sie im Abschnitt "Hinweise".- oder -Die <see cref="P:System.DateTime.Kind" />-Eigenschaft des <paramref name="dateTime" />-Parameters ist <see cref="F:System.DateTimeKind.Utc" />, der <paramref name="sourceTimeZone" />-Parameter entspricht jedoch nicht <see cref="P:System.TimeZoneInfo.Utc" />.- oder -Der <paramref name="dateTime" />-Parameter ist eine ungültige Zeit (d. h. er stellt eine Zeit dar, die aufgrund der Anpassungsregeln einer Zeitzone nicht vorhanden ist).</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="sourceTimeZone" />-Parameter ist null.- oder -Der <paramref name="destinationTimeZone" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)">
      <summary>Konvertiert eine Zeit in die Zeit in einer bestimmten Zeitzone.</summary>
      <returns>Das Datum und die Uhrzeit in der Zielzeitzone.</returns>
      <param name="dateTimeOffset">Das Datum und die Uhrzeit, die konvertiert werden sollen.   </param>
      <param name="destinationTimeZone">Die Zeitzone, in die <paramref name="dateTime" /> konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der Wert des <paramref name="destinationTimeZone" />-Parameters ist null.</exception>
    </member>
    <member name="P:System.TimeZoneInfo.DaylightName">
      <summary>Ruft den Anzeigenamen für die Sommerzeit der aktuellen Zeitzone ab.</summary>
      <returns>Der Anzeigename für die Sommerzeit der Zeitzone.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.DisplayName">
      <summary>Ruft den allgemeinen Anzeigenamen ab, der die Zeitzone darstellt.</summary>
      <returns>Der allgemeine Anzeigenamen der Zeitzone.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.Equals(System.TimeZoneInfo)">
      <summary>Bestimmt, ob das aktuelle <see cref="T:System.TimeZoneInfo" />-Objekt und ein anderes <see cref="T:System.TimeZoneInfo" />-Objekt gleich sind.</summary>
      <returns>true, wenn die beiden <see cref="T:System.TimeZoneInfo" />-Objekte gleich sind, andernfalls false.</returns>
      <param name="other">Ein zweites Objekt, das mit dem aktuellen Objekt verglichen werden soll.  </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)">
      <summary>Ruft ein <see cref="T:System.TimeZoneInfo" />-Objekt auf Grundlage seines Bezeichners aus der Registrierung ab.</summary>
      <returns>Ein Objekt, dessen Bezeichner der Wert des <paramref name="id" />-Parameters ist.</returns>
      <param name="id">Der Zeitzonenbezeichner, der der <see cref="P:System.TimeZoneInfo.Id" />-Eigenschaft entspricht.      </param>
      <exception cref="T:System.OutOfMemoryException">Das System verfügt nicht über ausreichend Arbeitsspeicher, um Informationen zur Zeitzone zu speichern.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="id" />-Parameter ist null.</exception>
      <exception cref="T:System.TimeZoneNotFoundException">Der von <paramref name="id" /> angegebene Zeitzonenbezeichner wurde nicht gefunden.Dies bedeutet, dass der Registrierungsschlüssel, dessen Name <paramref name="id" /> entspricht, nicht vorhanden ist oder dass der Schlüssel vorhanden ist, jedoch keine Zeitzonendaten enthält.</exception>
      <exception cref="T:System.Security.SecurityException">Der Prozess verfügt nicht über die erforderlichen Berechtigungen, um aus dem Registrierungsschlüssel zu lesen, der die Zeitzoneninformationen enthält.</exception>
      <exception cref="T:System.InvalidTimeZoneException">Der Zeitzonenbezeichner wurde gefunden, die Registrierungsdaten sind jedoch beschädigt.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)">
      <summary>Gibt Informationen zu den möglichen Datums- und Zeitwerten zurück, denen ein mehrdeutiger Datums- und Zeitwert zugeordnet werden kann.</summary>
      <returns>Ein Array von Objekten, das mögliche UTC-Offsets (Coordinated Universal Time) darstellt, denen ein bestimmter Datums- und Uhrzeitwert zugeordnet werden kann.</returns>
      <param name="dateTime">Ein Datum und eine Uhrzeit.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateTime" /> ist keine mehrdeutige Zeit.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)">
      <summary>Gibt Informationen zu den möglichen Datums- und Zeitwerten zurück, denen ein mehrdeutiger Datums- und Zeitwert zugeordnet werden kann.</summary>
      <returns>Ein Array von Objekten, das mögliche UTC-Offsets (Coordinated Universal Time) darstellt, denen ein bestimmter Datums- und Uhrzeitwert zugeordnet werden kann.</returns>
      <param name="dateTimeOffset">Ein Datum und eine Uhrzeit.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateTime" /> ist keine mehrdeutige Zeit.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetHashCode">
      <summary>Wird als Hashfunktion für Hashalgorithmen und Datenstrukturen wie Hashtabellen verwendet.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die als Hash für dieses <see cref="T:System.TimeZoneInfo" />-Objekt verwendet wird.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetSystemTimeZones">
      <summary>Gibt eine sortierte Auflistung aller Zeitzonen zurück, zu denen im lokalen System Informationen verfügbar sind.</summary>
      <returns>Eine schreibgeschützte Auflistung von <see cref="T:System.TimeZoneInfo" />-Objekten.</returns>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht ausreichend Arbeitsspeicher vorhanden, um alle Zeitzoneninformationen zu speichern.</exception>
      <exception cref="T:System.Security.SecurityException">Der Benutzer verfügt nicht über die Berechtigung zum Lesen aus den Registrierungsschlüsseln, die Zeitzoneninformationen enthalten.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)">
      <summary>Berechnet den Offset oder die Differenz zwischen der Zeit in dieser Zeitzone und Coordinated Universal Time (UTC) für einen bestimmten Datums- und Zeitwert.</summary>
      <returns>Ein Objekt, das den Zeitunterschied zwischen den beiden Zeitzonen angibt.</returns>
      <param name="dateTime">Das Datum und die Zeit, für die der Offset bestimmt werden soll.   </param>
    </member>
    <member name="M:System.TimeZoneInfo.GetUtcOffset(System.DateTimeOffset)">
      <summary>Berechnet den Offset oder die Differenz zwischen der Zeit in dieser Zeitzone und Coordinated Universal Time (UTC) für einen bestimmten Datums- und Zeitwert.</summary>
      <returns>Ein Objekt, das den Zeitunterschied zwischen Coordinated Universal Time (UTC) und der aktuellen Zeitzone angibt.</returns>
      <param name="dateTimeOffset">Das Datum und die Zeit, für die der Offset bestimmt werden soll.</param>
    </member>
    <member name="P:System.TimeZoneInfo.Id">
      <summary>Ruft den Zeitzonenbezeichner ab.</summary>
      <returns>Der Zeitzonenbezeichner.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)">
      <summary>Bestimmt, ob ein bestimmtes Datum und eine Uhrzeit in einer bestimmten Zeitzone mehrdeutig sind und zwei oder mehreren UTC-Zeiten (Coordinated Universal Time) zugeordnet werden können.</summary>
      <returns>true, wenn der <paramref name="dateTime" />-Parameter mehrdeutig ist, andernfalls false.</returns>
      <param name="dateTime">Ein Datums- und Uhrzeitwert.   </param>
      <exception cref="T:System.ArgumentException">Die <see cref="P:System.DateTime.Kind" />-Eigenschaft des <paramref name="dateTime" />-Werts ist <see cref="F:System.DateTimeKind.Local" />, und <paramref name="dateTime" /> ist eine ungültige Zeit.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTimeOffset)">
      <summary>Bestimmt, ob ein bestimmtes Datum und eine Uhrzeit in einer bestimmten Zeitzone mehrdeutig sind und zwei oder mehreren UTC-Zeiten (Coordinated Universal Time) zugeordnet werden können.</summary>
      <returns>true, wenn der <paramref name="dateTimeOffset" />-Parameter in der aktuellen Zeitzone mehrdeutig ist, andernfalls false.</returns>
      <param name="dateTimeOffset">Ein Datum und eine Uhrzeit.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)">
      <summary>Gibt an, ob ein angegebenes Datum und eine Zeit in den Bereich der Sommerzeit für die Zeitzone des aktuellen <see cref="T:System.TimeZoneInfo" />-Objekts fallen.</summary>
      <returns>true, wenn der <paramref name="dateTime" />-Parameter eine Sommerzeit darstellt, andernfalls false.</returns>
      <param name="dateTime">Ein Datums- und Uhrzeitwert.   </param>
      <exception cref="T:System.ArgumentException">Die <see cref="P:System.DateTime.Kind" />-Eigenschaft des <paramref name="dateTime" />-Werts ist <see cref="F:System.DateTimeKind.Local" />, und <paramref name="dateTime" /> ist eine ungültige Zeit.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTimeOffset)">
      <summary>Gibt an, ob ein angegebenes Datum und eine Zeit in den Bereich der Sommerzeit für die Zeitzone des aktuellen <see cref="T:System.TimeZoneInfo" />-Objekts fallen.</summary>
      <returns>true, wenn der <paramref name="dateTimeOffset" />-Parameter eine Sommerzeit darstellt, andernfalls false.</returns>
      <param name="dateTimeOffset">Ein Datums- und Uhrzeitwert.</param>
    </member>
    <member name="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)">
      <summary>Gibt an, ob ein bestimmtes Datum und eine Zeit ungültig sind.</summary>
      <returns>true, wenn <paramref name="dateTime" /> ungültig ist, andernfalls false.</returns>
      <param name="dateTime">Ein Datums- und Uhrzeitwert.   </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.TimeZoneInfo.Local">
      <summary>Ruft ein <see cref="T:System.TimeZoneInfo" />-Objekt ab, das die lokale Zeitzone darstellt.</summary>
      <returns>Ein Objekt, das die lokale Zeitzone darstellt.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.StandardName">
      <summary>Ruft den Anzeigenamen für die Standardzeit der Zeitzone ab.</summary>
      <returns>Der Name der Normalzeit der Zeitzone.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.SupportsDaylightSavingTime">
      <summary>Ruft einen Wert ab, der angibt, ob die Zeitzone über Sommerzeitregeln verfügt.</summary>
      <returns>true, wenn die Zeitzone Sommerzeit unterstützt, andernfalls false.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.ToString">
      <summary>Gibt den Anzeigenamen des aktuellen <see cref="T:System.TimeZoneInfo" />-Objekts zurück.</summary>
      <returns>Der Wert der <see cref="P:System.TimeZoneInfo.DisplayName" />-Eigenschaft des aktuellen <see cref="T:System.TimeZoneInfo" />-Objekts.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.Utc">
      <summary>Ruft ein <see cref="T:System.TimeZoneInfo" />-Objekt ab, das die UTC-Zone (Coordinated Universal Time) darstellt.</summary>
      <returns>Ein Objekt, das die UTC (Coordinated Universal Time)-Zone darstellt.</returns>
    </member>
    <member name="T:System.Tuple">
      <summary>Stellt statische Methoden zum Erstellen von Tupelobjekten bereit. Weitere Informationen zum Durchsuchen des .NET Framework-Quellcodes für diesen Typ finden Sie unter Verweisquelle.</summary>
    </member>
    <member name="M:System.Tuple.Create``1(``0)">
      <summary>Erstellt ein neues 1-Tupel bzw. Singleton.</summary>
      <returns>Ein Tupel mit dem Wert (<paramref name="item1" />).</returns>
      <param name="item1">Der Wert der einzigen Komponente des Tupels.</param>
      <typeparam name="T1">Der Typ der einzigen Komponente des Tupels.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``2(``0,``1)">
      <summary>Erstellt ein neues 2-Tupel bzw. Paar.</summary>
      <returns>Ein 2-Tupel mit dem Wert (<paramref name="item1" />, <paramref name="item2" />).</returns>
      <param name="item1">Der Wert der ersten Komponente des Tupels.</param>
      <param name="item2">Der Wert der zweiten Komponente des Tupels.</param>
      <typeparam name="T1">Der Typ der ersten Komponente des Tupels.</typeparam>
      <typeparam name="T2">Der Typ der zweiten Komponente des Tupels.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``3(``0,``1,``2)">
      <summary>Erstellt ein neues 3-Tupel bzw. Tripel.</summary>
      <returns>Ein 3-Tupel mit dem Wert (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />).</returns>
      <param name="item1">Der Wert der ersten Komponente des Tupels.</param>
      <param name="item2">Der Wert der zweiten Komponente des Tupels.</param>
      <param name="item3">Der Wert der dritten Komponente des Tupels.</param>
      <typeparam name="T1">Der Typ der ersten Komponente des Tupels.</typeparam>
      <typeparam name="T2">Der Typ der zweiten Komponente des Tupels.</typeparam>
      <typeparam name="T3">Der Typ der dritten Komponente des Tupels.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``4(``0,``1,``2,``3)">
      <summary>Erstellt ein neues 4-Tupel bzw. Quadrupel.</summary>
      <returns>Ein 4-Tupel mit dem Wert (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />).</returns>
      <param name="item1">Der Wert der ersten Komponente des Tupels.</param>
      <param name="item2">Der Wert der zweiten Komponente des Tupels.</param>
      <param name="item3">Der Wert der dritten Komponente des Tupels.</param>
      <param name="item4">Der Wert der vierten Komponente des Tupels.</param>
      <typeparam name="T1">Der Typ der ersten Komponente des Tupels.</typeparam>
      <typeparam name="T2">Der Typ der zweiten Komponente des Tupels.</typeparam>
      <typeparam name="T3">Der Typ der dritten Komponente des Tupels.</typeparam>
      <typeparam name="T4">Der Typ der vierten Komponente des Tupels.  </typeparam>
    </member>
    <member name="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
      <summary>Erstellt ein neues 5-Tupel bzw. Quintupel.</summary>
      <returns>Ein 5-Tupel mit dem Wert (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />).</returns>
      <param name="item1">Der Wert der ersten Komponente des Tupels.</param>
      <param name="item2">Der Wert der zweiten Komponente des Tupels.</param>
      <param name="item3">Der Wert der dritten Komponente des Tupels.</param>
      <param name="item4">Der Wert der vierten Komponente des Tupels.</param>
      <param name="item5">Der Wert der fünften Komponente des Tupels.</param>
      <typeparam name="T1">Der Typ der ersten Komponente des Tupels.</typeparam>
      <typeparam name="T2">Der Typ der zweiten Komponente des Tupels.</typeparam>
      <typeparam name="T3">Der Typ der dritten Komponente des Tupels.</typeparam>
      <typeparam name="T4">Der Typ der vierten Komponente des Tupels.</typeparam>
      <typeparam name="T5">Der Typ der fünften Komponente des Tupels.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
      <summary>Erstellt ein neues 6-Tupel bzw. Sextupel.</summary>
      <returns>Ein 6-Tupel mit dem Wert (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />).</returns>
      <param name="item1">Der Wert der ersten Komponente des Tupels.</param>
      <param name="item2">Der Wert der zweiten Komponente des Tupels.</param>
      <param name="item3">Der Wert der dritten Komponente des Tupels.</param>
      <param name="item4">Der Wert der vierten Komponente des Tupels.</param>
      <param name="item5">Der Wert der fünften Komponente des Tupels.</param>
      <param name="item6">Der Wert der sechsten Komponente des Tupels.</param>
      <typeparam name="T1">Der Typ der ersten Komponente des Tupels.</typeparam>
      <typeparam name="T2">Der Typ der zweiten Komponente des Tupels.</typeparam>
      <typeparam name="T3">Der Typ der dritten Komponente des Tupels.</typeparam>
      <typeparam name="T4">Der Typ der vierten Komponente des Tupels.</typeparam>
      <typeparam name="T5">Der Typ der fünften Komponente des Tupels.</typeparam>
      <typeparam name="T6">Der Typ der sechsten Komponente des Tupels.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
      <summary>Erstellt ein neues 7-Tupel bzw. Septupel.</summary>
      <returns>Ein 7-Tupel mit dem Wert (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />, <paramref name="item7" />).</returns>
      <param name="item1">Der Wert der ersten Komponente des Tupels.</param>
      <param name="item2">Der Wert der zweiten Komponente des Tupels.</param>
      <param name="item3">Der Wert der dritten Komponente des Tupels.</param>
      <param name="item4">Der Wert der vierten Komponente des Tupels.</param>
      <param name="item5">Der Wert der fünften Komponente des Tupels.</param>
      <param name="item6">Der Wert der sechsten Komponente des Tupels.</param>
      <param name="item7">Der Wert der siebten Komponente des Tupels.</param>
      <typeparam name="T1">Der Typ der ersten Komponente des Tupels.</typeparam>
      <typeparam name="T2">Der Typ der zweiten Komponente des Tupels.</typeparam>
      <typeparam name="T3">Der Typ der dritten Komponente des Tupels.</typeparam>
      <typeparam name="T4">Der Typ der vierten Komponente des Tupels.</typeparam>
      <typeparam name="T5">Der Typ der fünften Komponente des Tupels.</typeparam>
      <typeparam name="T6">Der Typ der sechsten Komponente des Tupels.</typeparam>
      <typeparam name="T7">Der Typ der siebten Komponente des Tupels.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
      <summary>Erstellt ein neues 8-Tupel bzw. Oktupel.</summary>
      <returns>Ein 8-Tupel (Oktupel) mit dem Wert (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />, <paramref name="item7" />, <paramref name="item8" />). </returns>
      <param name="item1">Der Wert der ersten Komponente des Tupels.</param>
      <param name="item2">Der Wert der zweiten Komponente des Tupels.</param>
      <param name="item3">Der Wert der dritten Komponente des Tupels.</param>
      <param name="item4">Der Wert der vierten Komponente des Tupels.</param>
      <param name="item5">Der Wert der fünften Komponente des Tupels.</param>
      <param name="item6">Der Wert der sechsten Komponente des Tupels.</param>
      <param name="item7">Der Wert der siebten Komponente des Tupels.</param>
      <param name="item8">Der Wert der achten Komponente des Tupels.</param>
      <typeparam name="T1">Der Typ der ersten Komponente des Tupels.</typeparam>
      <typeparam name="T2">Der Typ der zweiten Komponente des Tupels.</typeparam>
      <typeparam name="T3">Der Typ der dritten Komponente des Tupels.</typeparam>
      <typeparam name="T4">Der Typ der vierten Komponente des Tupels.</typeparam>
      <typeparam name="T5">Der Typ der fünften Komponente des Tupels.</typeparam>
      <typeparam name="T6">Der Typ der sechsten Komponente des Tupels.</typeparam>
      <typeparam name="T7">Der Typ der siebten Komponente des Tupels.</typeparam>
      <typeparam name="T8">Der Typ der achten Komponente des Tupels.</typeparam>
    </member>
    <member name="T:System.Tuple`1">
      <summary>Stellt ein 1-Tupel oder Singleton dar. </summary>
      <typeparam name="T1">Der Typ der einzigen Komponente des Tupels.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Tuple`1.#ctor(`0)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Tuple`1" />-Klasse.</summary>
      <param name="item1">Der Wert der einzigen Komponente des Tupels.</param>
    </member>
    <member name="M:System.Tuple`1.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob das aktuelle <see cref="T:System.Tuple`1" />-Objekt einem angegebenen Objekt entspricht.</summary>
      <returns>true, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls false.</returns>
      <param name="obj">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
    </member>
    <member name="M:System.Tuple`1.GetHashCode">
      <summary>Gibt den Hashcode für das aktuelle <see cref="T:System.Tuple`1" />-Objekt zurück.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
    </member>
    <member name="P:System.Tuple`1.Item1">
      <summary>Ruft den Wert der einzigen Komponente des <see cref="T:System.Tuple`1" />-Objekts ab. </summary>
      <returns>Der Wert der einzigen Komponente des aktuellen <see cref="T:System.Tuple`1" />-Objekts.</returns>
    </member>
    <member name="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Vergleicht das aktuelle <see cref="T:System.Tuple`1" />-Objekt anhand eines angegebenen Vergleichs mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob sich das aktuelle Objekt in der Sortierreihenfolge vor dem angegebenen Objekt, dahinter oder an derselben Position befindet.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und <paramref name="other" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.WertBeschreibungEine negative ganze ZahlDiese Instanz geht <paramref name="other" /> voran.ZeroDiese Instanz und <paramref name="other" /> haben in der Sortierreihenfolge die gleiche Position.Eine positive ganze ZahlDiese Instanz folgt auf <paramref name="other" />.</returns>
      <param name="other">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das benutzerdefinierte Regeln für Vergleiche bereitstellt.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> ist kein <see cref="T:System.Tuple`1" />-Objekt.</exception>
    </member>
    <member name="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Gibt einen Wert zurück, der auf Grundlage einer angegebenen Vergleichsmethode angibt, ob das aktuelle <see cref="T:System.Tuple`1" />-Objekt gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls false.</returns>
      <param name="other">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das die Methode zum Überprüfen der beiden Objekte auf Gleichheit definiert.</param>
    </member>
    <member name="M:System.Tuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Berechnet mit einer angegebenen Berechnungsmethode den Hashcode für das aktuelle <see cref="T:System.Tuple`1" />-Objekt.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
      <param name="comparer">Ein Objekt, dessen <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" />-Methode den Hashcode des aktuellen <see cref="T:System.Tuple`1" />-Objekts berechnet.</param>
    </member>
    <member name="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht das aktuelle <see cref="T:System.Tuple`1" />-Objekt mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob sich das aktuelle Element in der Sortierreihenfolge vor dem angegebenen Element, dahinter oder an derselben Position befindet.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und <paramref name="obj" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.WertBeschreibungEine negative ganze ZahlDiese Instanz geht <paramref name="obj" /> voran.ZeroDiese Instanz und <paramref name="obj" /> haben in der Sortierreihenfolge die gleiche Position.Eine positive ganze ZahlDiese Instanz folgt auf <paramref name="obj" />.</returns>
      <param name="obj">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> ist kein <see cref="T:System.Tuple`1" />-Objekt.</exception>
    </member>
    <member name="M:System.Tuple`1.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die den Wert dieser <see cref="T:System.Tuple`1" />-Instanz darstellt.</summary>
      <returns>Die Zeichenfolgenentsprechung dieses <see cref="T:System.Tuple`1" />-Objekts.</returns>
    </member>
    <member name="T:System.Tuple`2">
      <summary>Stellt ein 2-Tupel bzw. Paar dar. </summary>
      <typeparam name="T1">Der Typ der ersten Komponente des Tupels.</typeparam>
      <typeparam name="T2">Der Typ der zweiten Komponente des Tupels.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`2.#ctor(`0,`1)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Tuple`2" />-Klasse.</summary>
      <param name="item1">Der Wert der ersten Komponente des Tupels.</param>
      <param name="item2">Der Wert der zweiten Komponente des Tupels.</param>
    </member>
    <member name="M:System.Tuple`2.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob das aktuelle <see cref="T:System.Tuple`2" />-Objekt einem angegebenen Objekt entspricht.</summary>
      <returns>true, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls false.</returns>
      <param name="obj">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
    </member>
    <member name="M:System.Tuple`2.GetHashCode">
      <summary>Gibt den Hashcode für das aktuelle <see cref="T:System.Tuple`2" />-Objekt zurück.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
    </member>
    <member name="P:System.Tuple`2.Item1">
      <summary>Ruft den Wert der ersten Komponente des aktuellen <see cref="T:System.Tuple`2" />-Objekts ab.</summary>
      <returns>Der Wert der ersten Komponente des aktuellen <see cref="T:System.Tuple`2" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`2.Item2">
      <summary>Ruft den Wert der zweiten Komponente des aktuellen <see cref="T:System.Tuple`2" />-Objekts ab.</summary>
      <returns>Der Wert der zweiten Komponente des aktuellen <see cref="T:System.Tuple`2" />-Objekts.</returns>
    </member>
    <member name="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Vergleicht das aktuelle <see cref="T:System.Tuple`2" />-Objekt anhand eines angegebenen Vergleichs mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob sich das aktuelle Objekt in der Sortierreihenfolge vor dem angegebenen Objekt, dahinter oder an derselben Position befindet.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und <paramref name="other" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.WertBeschreibungEine negative ganze ZahlDiese Instanz geht <paramref name="other" /> voran.ZeroDiese Instanz und <paramref name="other" /> haben in der Sortierreihenfolge die gleiche Position.Eine positive ganze ZahlDiese Instanz folgt auf <paramref name="other" />.</returns>
      <param name="other">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das benutzerdefinierte Regeln für Vergleiche bereitstellt.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> ist kein <see cref="T:System.Tuple`2" />-Objekt.</exception>
    </member>
    <member name="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Gibt einen Wert zurück, der auf Grundlage einer angegebenen Vergleichsmethode angibt, ob das aktuelle <see cref="T:System.Tuple`2" />-Objekt gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls false.</returns>
      <param name="other">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das die Methode zum Überprüfen der beiden Objekte auf Gleichheit definiert.</param>
    </member>
    <member name="M:System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Berechnet mit einer angegebenen Berechnungsmethode den Hashcode für das aktuelle <see cref="T:System.Tuple`2" />-Objekt.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
      <param name="comparer">Ein Objekt, dessen <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" />-Methode den Hashcode des aktuellen <see cref="T:System.Tuple`2" />-Objekts berechnet.</param>
    </member>
    <member name="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht das aktuelle <see cref="T:System.Tuple`2" />-Objekt mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob sich das aktuelle Element in der Sortierreihenfolge vor, hinter oder an derselben Position wie das angegebene Element befindet.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und <paramref name="obj" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.WertBeschreibungEine negative ganze ZahlDiese Instanz geht <paramref name="obj" /> voran.ZeroDiese Instanz und <paramref name="obj" /> haben in der Sortierreihenfolge die gleiche Position.Eine positive ganze ZahlDiese Instanz folgt auf <paramref name="obj" />.</returns>
      <param name="obj">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> ist kein <see cref="T:System.Tuple`2" />-Objekt.</exception>
    </member>
    <member name="M:System.Tuple`2.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die den Wert dieser <see cref="T:System.Tuple`2" />-Instanz darstellt.</summary>
      <returns>Die Zeichenfolgenentsprechung dieses <see cref="T:System.Tuple`2" />-Objekts.</returns>
    </member>
    <member name="T:System.Tuple`3">
      <summary>Stellt ein 3-Tupel bzw. Tripel dar. </summary>
      <typeparam name="T1">Der Typ der ersten Komponente des Tupels.</typeparam>
      <typeparam name="T2">Der Typ der zweiten Komponente des Tupels.</typeparam>
      <typeparam name="T3">Der Typ der dritten Komponente des Tupels.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`3.#ctor(`0,`1,`2)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Tuple`3" />-Klasse.</summary>
      <param name="item1">Der Wert der ersten Komponente des Tupels.</param>
      <param name="item2">Der Wert der zweiten Komponente des Tupels.</param>
      <param name="item3">Der Wert der dritten Komponente des Tupels.</param>
    </member>
    <member name="M:System.Tuple`3.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob das aktuelle <see cref="T:System.Tuple`3" />-Objekt einem angegebenen Objekt entspricht.</summary>
      <returns>true, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls false.</returns>
      <param name="obj">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
    </member>
    <member name="M:System.Tuple`3.GetHashCode">
      <summary>Gibt den Hashcode für das aktuelle <see cref="T:System.Tuple`3" />-Objekt zurück.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
    </member>
    <member name="P:System.Tuple`3.Item1">
      <summary>Ruft den Wert der ersten Komponente des aktuellen <see cref="T:System.Tuple`3" />-Objekts ab.</summary>
      <returns>Der Wert der ersten Komponente des aktuellen <see cref="T:System.Tuple`3" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`3.Item2">
      <summary>Ruft den Wert der zweiten Komponente des aktuellen <see cref="T:System.Tuple`3" />-Objekts ab.</summary>
      <returns>Der Wert der zweiten Komponente des aktuellen <see cref="T:System.Tuple`3" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`3.Item3">
      <summary>Ruft den Wert der dritten Komponente des aktuellen <see cref="T:System.Tuple`3" />-Objekts ab.</summary>
      <returns>Der Wert der dritten Komponente des aktuellen <see cref="T:System.Tuple`3" />-Objekts.</returns>
    </member>
    <member name="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Vergleicht das aktuelle <see cref="T:System.Tuple`3" />-Objekt anhand eines angegebenen Vergleichs mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob sich das aktuelle Element in der Sortierreihenfolge vor dem angegebenen Element, dahinter oder an derselben Position befindet.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und <paramref name="other" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.WertBeschreibungEine negative ganze ZahlDiese Instanz geht <paramref name="other" /> voran.ZeroDiese Instanz und <paramref name="other" /> haben in der Sortierreihenfolge die gleiche Position.Eine positive ganze ZahlDiese Instanz folgt auf <paramref name="other" />.</returns>
      <param name="other">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das benutzerdefinierte Regeln für Vergleiche bereitstellt.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> ist kein <see cref="T:System.Tuple`3" />-Objekt.</exception>
    </member>
    <member name="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Gibt einen Wert zurück, der auf Grundlage einer angegebenen Vergleichsmethode angibt, ob das aktuelle <see cref="T:System.Tuple`3" />-Objekt gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls false.</returns>
      <param name="other">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das die Methode zum Überprüfen der beiden Objekte auf Gleichheit definiert.</param>
    </member>
    <member name="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Berechnet mit einer angegebenen Berechnungsmethode den Hash für das aktuelle <see cref="T:System.Tuple`3" />-Objekt.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
      <param name="comparer">Ein Objekt, dessen <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" />-Methode den Hashcode des aktuellen <see cref="T:System.Tuple`3" />-Objekts berechnet.</param>
    </member>
    <member name="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht das aktuelle <see cref="T:System.Tuple`3" />-Objekt mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob sich das aktuelle Element in der Sortierreihenfolge vor dem angegebenen Element, dahinter oder an derselben Position befindet.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und <paramref name="obj" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.WertBeschreibungEine negative ganze ZahlDiese Instanz geht <paramref name="obj" /> voran.ZeroDiese Instanz und <paramref name="obj" /> haben in der Sortierreihenfolge die gleiche Position.Eine positive ganze ZahlDiese Instanz folgt auf <paramref name="obj" />.</returns>
      <param name="obj">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> ist kein <see cref="T:System.Tuple`3" />-Objekt.</exception>
    </member>
    <member name="M:System.Tuple`3.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die den Wert dieser <see cref="T:System.Tuple`3" />-Instanz darstellt.</summary>
      <returns>Die Zeichenfolgenentsprechung dieses <see cref="T:System.Tuple`3" />-Objekts.</returns>
    </member>
    <member name="T:System.Tuple`4">
      <summary>Stellt ein 4-Tupel bzw. Quadrupel dar. </summary>
      <typeparam name="T1">Der Typ der ersten Komponente des Tupels.</typeparam>
      <typeparam name="T2">Der Typ der zweiten Komponente des Tupels.</typeparam>
      <typeparam name="T3">Der Typ der dritten Komponente des Tupels.</typeparam>
      <typeparam name="T4">Der Typ der vierten Komponente des Tupels.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Tuple`4" />-Klasse.</summary>
      <param name="item1">Der Wert der ersten Komponente des Tupels.</param>
      <param name="item2">Der Wert der zweiten Komponente des Tupels.</param>
      <param name="item3">Der Wert der dritten Komponente des Tupels.</param>
      <param name="item4">Der Wert der vierten Komponente des Tupels.</param>
    </member>
    <member name="M:System.Tuple`4.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob das aktuelle <see cref="T:System.Tuple`4" />-Objekt einem angegebenen Objekt entspricht.</summary>
      <returns>true, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls false.</returns>
      <param name="obj">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
    </member>
    <member name="M:System.Tuple`4.GetHashCode">
      <summary>Gibt den Hashcode für das aktuelle <see cref="T:System.Tuple`4" />-Objekt zurück.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
    </member>
    <member name="P:System.Tuple`4.Item1">
      <summary>Ruft den Wert der ersten Komponente des aktuellen <see cref="T:System.Tuple`4" />-Objekts ab.</summary>
      <returns>Der Wert der ersten Komponente des aktuellen <see cref="T:System.Tuple`4" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`4.Item2">
      <summary>Ruft den Wert der zweiten Komponente des aktuellen <see cref="T:System.Tuple`4" />-Objekts ab.</summary>
      <returns>Der Wert der zweiten Komponente des aktuellen <see cref="T:System.Tuple`4" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`4.Item3">
      <summary>Ruft den Wert der dritten Komponente des aktuellen <see cref="T:System.Tuple`4" />-Objekts ab.</summary>
      <returns>Der Wert der dritten Komponente des aktuellen <see cref="T:System.Tuple`4" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`4.Item4">
      <summary>Ruft den Wert der vierten Komponente des aktuellen <see cref="T:System.Tuple`4" />-Objekts ab.</summary>
      <returns>Der Wert der vierten Komponente des aktuellen <see cref="T:System.Tuple`4" />-Objekts.</returns>
    </member>
    <member name="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Vergleicht das aktuelle <see cref="T:System.Tuple`4" />-Objekt anhand eines angegebenen Vergleichs mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob sich das aktuelle Element in der Sortierreihenfolge vor dem angegebenen Element, dahinter oder an derselben Position befindet.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und <paramref name="other" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.WertBeschreibungEine negative ganze ZahlDiese Instanz geht <paramref name="other" /> voran.ZeroDiese Instanz und <paramref name="other" /> haben in der Sortierreihenfolge die gleiche Position.Eine positive ganze ZahlDiese Instanz folgt auf <paramref name="other" />.</returns>
      <param name="other">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das benutzerdefinierte Regeln für Vergleiche bereitstellt.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> ist kein <see cref="T:System.Tuple`4" />-Objekt.</exception>
    </member>
    <member name="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Gibt einen Wert zurück, der auf Grundlage einer angegebenen Vergleichsmethode angibt, ob das aktuelle <see cref="T:System.Tuple`4" />-Objekt gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls false. </returns>
      <param name="other">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das die Methode zum Überprüfen der beiden Objekte auf Gleichheit definiert.</param>
    </member>
    <member name="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Berechnet mit einer angegebenen Berechnungsmethode den Hash für das aktuelle <see cref="T:System.Tuple`4" />-Objekt.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
      <param name="comparer">Ein Objekt, dessen <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" />-Methode den Hashcode des aktuellen <see cref="T:System.Tuple`4" />-Objekts berechnet.</param>
    </member>
    <member name="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht das aktuelle <see cref="T:System.Tuple`4" />-Objekt mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob sich das aktuelle Element in der Sortierreihenfolge vor, hinter oder an derselben Position wie das angegebene Element befindet.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und <paramref name="obj" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.WertBeschreibungEine negative ganze ZahlDiese Instanz geht <paramref name="obj" /> voran.ZeroDiese Instanz und <paramref name="obj" /> haben in der Sortierreihenfolge die gleiche Position.Eine positive ganze ZahlDiese Instanz folgt auf <paramref name="obj" />.</returns>
      <param name="obj">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> ist kein <see cref="T:System.Tuple`4" />-Objekt.</exception>
    </member>
    <member name="M:System.Tuple`4.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die den Wert dieser <see cref="T:System.Tuple`4" />-Instanz darstellt.</summary>
      <returns>Die Zeichenfolgenentsprechung dieses <see cref="T:System.Tuple`4" />-Objekts.</returns>
    </member>
    <member name="T:System.Tuple`5">
      <summary>Stellt ein 5-Tupel bzw. Quintupel dar. </summary>
      <typeparam name="T1">Der Typ der ersten Komponente des Tupels.</typeparam>
      <typeparam name="T2">Der Typ der zweiten Komponente des Tupels.</typeparam>
      <typeparam name="T3">Der Typ der dritten Komponente des Tupels.</typeparam>
      <typeparam name="T4">Der Typ der vierten Komponente des Tupels.</typeparam>
      <typeparam name="T5">Der Typ der fünften Komponente des Tupels.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Tuple`5" />-Klasse.</summary>
      <param name="item1">Der Wert der ersten Komponente des Tupels.</param>
      <param name="item2">Der Wert der zweiten Komponente des Tupels.</param>
      <param name="item3">Der Wert der dritten Komponente des Tupels.</param>
      <param name="item4">Der Wert der vierten Komponente des Tupels.</param>
      <param name="item5">Der Wert der fünften Komponente des Tupels.</param>
    </member>
    <member name="M:System.Tuple`5.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob das aktuelle <see cref="T:System.Tuple`5" />-Objekt einem angegebenen Objekt entspricht.</summary>
      <returns>true, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls false.</returns>
      <param name="obj">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
    </member>
    <member name="M:System.Tuple`5.GetHashCode">
      <summary>Gibt den Hashcode für das aktuelle <see cref="T:System.Tuple`5" />-Objekt zurück.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
    </member>
    <member name="P:System.Tuple`5.Item1">
      <summary>Ruft den Wert der ersten Komponente des aktuellen <see cref="T:System.Tuple`5" />-Objekts ab.</summary>
      <returns>Der Wert der ersten Komponente des aktuellen <see cref="T:System.Tuple`5" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`5.Item2">
      <summary>Ruft den Wert der zweiten Komponente des aktuellen <see cref="T:System.Tuple`5" />-Objekts ab.</summary>
      <returns>Der Wert der zweiten Komponente des aktuellen <see cref="T:System.Tuple`5" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`5.Item3">
      <summary>Ruft den Wert der dritten Komponente des aktuellen <see cref="T:System.Tuple`5" />-Objekts ab.</summary>
      <returns>Der Wert der dritten Komponente des aktuellen <see cref="T:System.Tuple`5" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`5.Item4">
      <summary>Ruft den Wert der vierten Komponente des aktuellen <see cref="T:System.Tuple`5" />-Objekts ab.</summary>
      <returns>Der Wert der vierten Komponente des aktuellen <see cref="T:System.Tuple`5" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`5.Item5">
      <summary>Ruft den Wert der fünften Komponente des aktuellen <see cref="T:System.Tuple`5" />-Objekts ab.</summary>
      <returns>Der Wert der fünften Komponente des aktuellen <see cref="T:System.Tuple`5" />-Objekts.</returns>
    </member>
    <member name="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Vergleicht das aktuelle <see cref="T:System.Tuple`5" />-Objekt anhand eines angegebenen Vergleichs mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob sich das aktuelle Element in der Sortierreihenfolge vor dem angegebenen Element, dahinter oder an derselben Position befindet.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und <paramref name="other" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.WertBeschreibungEine negative ganze ZahlDiese Instanz geht <paramref name="other" /> voran.ZeroDiese Instanz und <paramref name="other" /> haben in der Sortierreihenfolge die gleiche Position.Eine positive ganze ZahlDiese Instanz folgt auf <paramref name="other" />.</returns>
      <param name="other">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das benutzerdefinierte Regeln für Vergleiche bereitstellt.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> ist kein <see cref="T:System.Tuple`5" />-Objekt.</exception>
    </member>
    <member name="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Gibt einen Wert zurück, der auf Grundlage einer angegebenen Vergleichsmethode angibt, ob das aktuelle <see cref="T:System.Tuple`5" />-Objekt gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls false.</returns>
      <param name="other">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das die Methode zum Überprüfen der beiden Objekte auf Gleichheit definiert.</param>
    </member>
    <member name="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Berechnet mit einer angegebenen Berechnungsmethode den Hash für das aktuelle <see cref="T:System.Tuple`5" />-Objekt.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
      <param name="comparer">Ein Objekt, dessen <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" />-Methode den Hashcode des aktuellen <see cref="T:System.Tuple`5" />-Objekts berechnet.</param>
    </member>
    <member name="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht das aktuelle <see cref="T:System.Tuple`5" />-Objekt mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob sich das aktuelle Element in der Sortierreihenfolge vor, hinter oder an derselben Position wie das angegebene Element befindet.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und <paramref name="obj" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.WertBeschreibungEine negative ganze ZahlDiese Instanz geht <paramref name="obj" /> voran.ZeroDiese Instanz und <paramref name="obj" /> haben in der Sortierreihenfolge die gleiche Position.Eine positive ganze ZahlDiese Instanz folgt auf <paramref name="obj" />.</returns>
      <param name="obj">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> ist kein <see cref="T:System.Tuple`5" />-Objekt.</exception>
    </member>
    <member name="M:System.Tuple`5.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die den Wert dieser <see cref="T:System.Tuple`5" />-Instanz darstellt.</summary>
      <returns>Die Zeichenfolgenentsprechung dieses <see cref="T:System.Tuple`5" />-Objekts.</returns>
    </member>
    <member name="T:System.Tuple`6">
      <summary>Stellt ein 6-Tupel bzw. Sextupel dar. </summary>
      <typeparam name="T1">Der Typ der ersten Komponente des Tupels.</typeparam>
      <typeparam name="T2">Der Typ der zweiten Komponente des Tupels.</typeparam>
      <typeparam name="T3">Der Typ der dritten Komponente des Tupels.</typeparam>
      <typeparam name="T4">Der Typ der vierten Komponente des Tupels.</typeparam>
      <typeparam name="T5">Der Typ der fünften Komponente des Tupels.</typeparam>
      <typeparam name="T6">Der Typ der sechsten Komponente des Tupels.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`6.#ctor(`0,`1,`2,`3,`4,`5)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Tuple`6" />-Klasse.</summary>
      <param name="item1">Der Wert der ersten Komponente des Tupels.</param>
      <param name="item2">Der Wert der zweiten Komponente des Tupels.</param>
      <param name="item3">Der Wert der dritten Komponente des Tupels.</param>
      <param name="item4">Der Wert der vierten Komponente des Tupels.</param>
      <param name="item5">Der Wert der fünften Komponente des Tupels.</param>
      <param name="item6">Der Wert der sechsten Komponente des Tupels.</param>
    </member>
    <member name="M:System.Tuple`6.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob das aktuelle <see cref="T:System.Tuple`6" />-Objekt gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls false.</returns>
      <param name="obj">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
    </member>
    <member name="M:System.Tuple`6.GetHashCode">
      <summary>Gibt den Hashcode für das aktuelle <see cref="T:System.Tuple`6" />-Objekt zurück.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
    </member>
    <member name="P:System.Tuple`6.Item1">
      <summary>Ruft den Wert der ersten Komponente des aktuellen <see cref="T:System.Tuple`6" />-Objekts ab.</summary>
      <returns>Der Wert der ersten Komponente des aktuellen <see cref="T:System.Tuple`6" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`6.Item2">
      <summary>Ruft den Wert der zweiten Komponente des aktuellen <see cref="T:System.Tuple`6" />-Objekts ab.</summary>
      <returns>Der Wert der zweiten Komponente des aktuellen <see cref="T:System.Tuple`6" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`6.Item3">
      <summary>Ruft den Wert der dritten Komponente des aktuellen <see cref="T:System.Tuple`6" />-Objekts ab.</summary>
      <returns>Der Wert der dritten Komponente des aktuellen <see cref="T:System.Tuple`6" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`6.Item4">
      <summary>Ruft den Wert der vierten Komponente des aktuellen <see cref="T:System.Tuple`6" />-Objekts ab.</summary>
      <returns>Der Wert der vierten Komponente des aktuellen <see cref="T:System.Tuple`6" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`6.Item5">
      <summary>Ruft den Wert der fünften Komponente des aktuellen <see cref="T:System.Tuple`6" />-Objekts ab.</summary>
      <returns>Der Wert der fünften Komponente des aktuellen <see cref="T:System.Tuple`6" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`6.Item6">
      <summary>Ruft den Wert der sechsten Komponente des aktuellen <see cref="T:System.Tuple`6" />-Objekts ab.</summary>
      <returns>Der Wert der sechsten Komponente des aktuellen <see cref="T:System.Tuple`6" />-Objekts.</returns>
    </member>
    <member name="M:System.Tuple`6.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Vergleicht das aktuelle <see cref="T:System.Tuple`6" />-Objekt mithilfe eines angegebenen Vergleichs mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob sich das aktuelle Element in der Sortierreihenfolge vor, hinter oder an derselben Position wie das angegebene Element befindet.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und <paramref name="other" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.WertBeschreibungEine negative ganze ZahlDiese Instanz geht <paramref name="other" /> voran.ZeroDiese Instanz und <paramref name="other" /> haben in der Sortierreihenfolge die gleiche Position.Eine positive ganze ZahlDiese Instanz folgt auf <paramref name="other" />.</returns>
      <param name="other">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das benutzerdefinierte Regeln für Vergleiche bereitstellt.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> ist kein <see cref="T:System.Tuple`6" />-Objekt.</exception>
    </member>
    <member name="M:System.Tuple`6.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Gibt einen Wert zurück, der auf Grundlage einer angegebenen Vergleichsmethode angibt, ob das aktuelle <see cref="T:System.Tuple`6" />-Objekt gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls false.</returns>
      <param name="other">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das die Methode zum Überprüfen der beiden Objekte auf Gleichheit definiert.</param>
    </member>
    <member name="M:System.Tuple`6.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Berechnet mit einer angegebenen Berechnungsmethode den Hash für das aktuelle <see cref="T:System.Tuple`6" />-Objekt.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
      <param name="comparer">Ein Objekt, dessen <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" />-Methode den Hashcode des aktuellen <see cref="T:System.Tuple`6" />-Objekts berechnet.</param>
    </member>
    <member name="M:System.Tuple`6.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht das aktuelle <see cref="T:System.Tuple`6" />-Objekt mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob sich das aktuelle Element in der Sortierreihenfolge vor, hinter oder an derselben Position wie das angegebene Element befindet.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und <paramref name="obj" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.WertBeschreibungEine negative ganze ZahlDiese Instanz geht <paramref name="obj" /> voran.ZeroDiese Instanz und <paramref name="obj" /> haben in der Sortierreihenfolge die gleiche Position.Eine positive ganze ZahlDiese Instanz folgt auf <paramref name="obj" />.</returns>
      <param name="obj">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> ist kein <see cref="T:System.Tuple`6" />-Objekt.</exception>
    </member>
    <member name="M:System.Tuple`6.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die den Wert dieser <see cref="T:System.Tuple`6" />-Instanz darstellt.</summary>
      <returns>Die Zeichenfolgenentsprechung dieses <see cref="T:System.Tuple`6" />-Objekts.</returns>
    </member>
    <member name="T:System.Tuple`7">
      <summary>Stellt ein 7-Tupel bzw. Septupel dar. </summary>
      <typeparam name="T1">Der Typ der ersten Komponente des Tupels.</typeparam>
      <typeparam name="T2">Der Typ der zweiten Komponente des Tupels.</typeparam>
      <typeparam name="T3">Der Typ der dritten Komponente des Tupels.</typeparam>
      <typeparam name="T4">Der Typ der vierten Komponente des Tupels.</typeparam>
      <typeparam name="T5">Der Typ der fünften Komponente des Tupels.</typeparam>
      <typeparam name="T6">Der Typ der sechsten Komponente des Tupels.</typeparam>
      <typeparam name="T7">Der Typ der siebten Komponente des Tupels.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Tuple`7" />-Klasse.</summary>
      <param name="item1">Der Wert der ersten Komponente des Tupels.</param>
      <param name="item2">Der Wert der zweiten Komponente des Tupels.</param>
      <param name="item3">Der Wert der dritten Komponente des Tupels.</param>
      <param name="item4">Der Wert der vierten Komponente des Tupels.</param>
      <param name="item5">Der Wert der fünften Komponente des Tupels.</param>
      <param name="item6">Der Wert der sechsten Komponente des Tupels.</param>
      <param name="item7">Der Wert der siebten Komponente des Tupels.</param>
    </member>
    <member name="M:System.Tuple`7.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob das aktuelle <see cref="T:System.Tuple`7" />-Objekt einem angegebenen Objekt entspricht.</summary>
      <returns>true, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls false.</returns>
      <param name="obj">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
    </member>
    <member name="M:System.Tuple`7.GetHashCode">
      <summary>Gibt den Hashcode für das aktuelle <see cref="T:System.Tuple`7" />-Objekt zurück.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
    </member>
    <member name="P:System.Tuple`7.Item1">
      <summary>Ruft den Wert der ersten Komponente des aktuellen <see cref="T:System.Tuple`7" />-Objekts ab.</summary>
      <returns>Der Wert der ersten Komponente des aktuellen <see cref="T:System.Tuple`7" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`7.Item2">
      <summary>Ruft den Wert der zweiten Komponente des aktuellen <see cref="T:System.Tuple`7" />-Objekts ab.</summary>
      <returns>Der Wert der zweiten Komponente des aktuellen <see cref="T:System.Tuple`7" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`7.Item3">
      <summary>Ruft den Wert der dritten Komponente des aktuellen <see cref="T:System.Tuple`7" />-Objekts ab.</summary>
      <returns>Der Wert der dritten Komponente des aktuellen <see cref="T:System.Tuple`7" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`7.Item4">
      <summary>Ruft den Wert der vierten Komponente des aktuellen <see cref="T:System.Tuple`7" />-Objekts ab.</summary>
      <returns>Der Wert der vierten Komponente des aktuellen <see cref="T:System.Tuple`7" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`7.Item5">
      <summary>Ruft den Wert der fünften Komponente des aktuellen <see cref="T:System.Tuple`7" />-Objekts ab.</summary>
      <returns>Der Wert der fünften Komponente des aktuellen <see cref="T:System.Tuple`7" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`7.Item6">
      <summary>Ruft den Wert der sechsten Komponente des aktuellen <see cref="T:System.Tuple`7" />-Objekts ab.</summary>
      <returns>Der Wert der sechsten Komponente des aktuellen <see cref="T:System.Tuple`7" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`7.Item7">
      <summary>Ruft den Wert der siebten Komponente des aktuellen <see cref="T:System.Tuple`7" />-Objekts ab.</summary>
      <returns>Der Wert der siebten Komponente des aktuellen <see cref="T:System.Tuple`7" />-Objekts.</returns>
    </member>
    <member name="M:System.Tuple`7.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Vergleicht das aktuelle <see cref="T:System.Tuple`7" />-Objekt anhand eines angegebenen Vergleichs mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob sich das aktuelle Objekt in der Sortierreihenfolge vor dem angegebenen Objekt, dahinter oder an derselben Position befindet.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und <paramref name="other" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.WertBeschreibungEine negative ganze ZahlDiese Instanz geht <paramref name="other" /> voran.ZeroDiese Instanz und <paramref name="other" /> haben in der Sortierreihenfolge die gleiche Position.Eine positive ganze ZahlDiese Instanz folgt auf <paramref name="other" />.</returns>
      <param name="other">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das benutzerdefinierte Regeln für Vergleiche bereitstellt.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> ist kein <see cref="T:System.Tuple`7" />-Objekt.</exception>
    </member>
    <member name="M:System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Gibt einen Wert zurück, der auf Grundlage einer angegebenen Vergleichsmethode angibt, ob das aktuelle <see cref="T:System.Tuple`7" />-Objekt gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls false.</returns>
      <param name="other">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das die Methode zum Überprüfen der beiden Objekte auf Gleichheit definiert.</param>
    </member>
    <member name="M:System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Berechnet mit einer angegebenen Berechnungsmethode den Hash für das aktuelle <see cref="T:System.Tuple`7" />-Objekt.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
      <param name="comparer">Ein Objekt, dessen <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" />-Methode den Hash des aktuellen <see cref="T:System.Tuple`7" />-Objekts berechnet.</param>
    </member>
    <member name="M:System.Tuple`7.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht das aktuelle <see cref="T:System.Tuple`7" />-Objekt mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob sich das aktuelle Element in der Sortierreihenfolge vor, hinter oder an derselben Position wie das angegebene Element befindet.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und <paramref name="obj" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.WertBeschreibungEine negative ganze ZahlDiese Instanz geht <paramref name="obj" /> voran.ZeroDiese Instanz und <paramref name="obj" /> haben in der Sortierreihenfolge die gleiche Position.Eine positive ganze ZahlDiese Instanz folgt auf <paramref name="obj" />.</returns>
      <param name="obj">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> ist kein <see cref="T:System.Tuple`7" />-Objekt.</exception>
    </member>
    <member name="M:System.Tuple`7.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die den Wert dieser <see cref="T:System.Tuple`7" />-Instanz darstellt.</summary>
      <returns>Die Zeichenfolgenentsprechung dieses <see cref="T:System.Tuple`7" />-Objekts.</returns>
    </member>
    <member name="T:System.Tuple`8">
      <summary>Stellt ein n-Tupel dar, wobei n größer oder gleich 8 ist.</summary>
      <typeparam name="T1">Der Typ der ersten Komponente des Tupels.</typeparam>
      <typeparam name="T2">Der Typ der zweiten Komponente des Tupels.</typeparam>
      <typeparam name="T3">Der Typ der dritten Komponente des Tupels.</typeparam>
      <typeparam name="T4">Der Typ der vierten Komponente des Tupels.</typeparam>
      <typeparam name="T5">Der Typ der fünften Komponente des Tupels.</typeparam>
      <typeparam name="T6">Der Typ der sechsten Komponente des Tupels.</typeparam>
      <typeparam name="T7">Der Typ der siebten Komponente des Tupels.</typeparam>
      <typeparam name="TRest">Ein beliebiges generisches Tuple-Objekt, das die Typen der restlichen Komponenten des Tupels definiert.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Tuple`8" />-Klasse.</summary>
      <param name="item1">Der Wert der ersten Komponente des Tupels.</param>
      <param name="item2">Der Wert der zweiten Komponente des Tupels.</param>
      <param name="item3">Der Wert der dritten Komponente des Tupels.</param>
      <param name="item4">Der Wert der vierten Komponente des Tupels.</param>
      <param name="item5">Der Wert der fünften Komponente des Tupels.</param>
      <param name="item6">Der Wert der sechsten Komponente des Tupels.</param>
      <param name="item7">Der Wert der siebten Komponente des Tupels.</param>
      <param name="rest">Ein beliebiges generisches Tuple-Objekt, das die Werte der restlichen Komponenten des Tupels enthält.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rest" /> ist kein generisches Tuple-Objekt.</exception>
    </member>
    <member name="M:System.Tuple`8.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob das aktuelle <see cref="T:System.Tuple`8" />-Objekt gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls false.</returns>
      <param name="obj">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
    </member>
    <member name="M:System.Tuple`8.GetHashCode">
      <summary>Berechnet den Hashcode für das aktuelle <see cref="T:System.Tuple`8" />-Objekt.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
    </member>
    <member name="P:System.Tuple`8.Item1">
      <summary>Ruft den Wert der ersten Komponente des aktuellen <see cref="T:System.Tuple`8" />-Objekts ab.</summary>
      <returns>Der Wert der ersten Komponente des aktuellen <see cref="T:System.Tuple`8" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`8.Item2">
      <summary>Ruft den Wert der zweiten Komponente des aktuellen <see cref="T:System.Tuple`8" />-Objekts ab.</summary>
      <returns>Der Wert der zweiten Komponente des aktuellen <see cref="T:System.Tuple`8" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`8.Item3">
      <summary>Ruft den Wert der dritten Komponente des aktuellen <see cref="T:System.Tuple`8" />-Objekts ab.</summary>
      <returns>Der Wert der dritten Komponente des aktuellen <see cref="T:System.Tuple`8" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`8.Item4">
      <summary>Ruft den Wert der vierten Komponente des aktuellen <see cref="T:System.Tuple`8" />-Objekts ab.</summary>
      <returns>Der Wert der vierten Komponente des aktuellen <see cref="T:System.Tuple`8" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`8.Item5">
      <summary>Ruft den Wert der fünften Komponente des aktuellen <see cref="T:System.Tuple`8" />-Objekts ab.</summary>
      <returns>Der Wert der fünften Komponente des aktuellen <see cref="T:System.Tuple`8" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`8.Item6">
      <summary>Ruft den Wert der sechsten Komponente des aktuellen <see cref="T:System.Tuple`8" />-Objekts ab.</summary>
      <returns>Der Wert der sechsten Komponente des aktuellen <see cref="T:System.Tuple`8" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`8.Item7">
      <summary>Ruft den Wert der siebten Komponente des aktuellen <see cref="T:System.Tuple`8" />-Objekts ab.</summary>
      <returns>Der Wert der siebten Komponente des aktuellen <see cref="T:System.Tuple`8" />-Objekts.</returns>
    </member>
    <member name="P:System.Tuple`8.Rest">
      <summary>Ruft die restlichen Komponenten des aktuellen <see cref="T:System.Tuple`8" />-Objekts ab.</summary>
      <returns>Der Wert der restlichen Komponenten des aktuellen <see cref="T:System.Tuple`8" />-Objekts.</returns>
    </member>
    <member name="M:System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Vergleicht das aktuelle <see cref="T:System.Tuple`8" />-Objekt anhand eines angegebenen Vergleichs mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob sich das aktuelle Element in der Sortierreihenfolge vor dem angegebenen Element, dahinter oder an derselben Position befindet.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und <paramref name="other" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.WertBeschreibungEine negative ganze ZahlDiese Instanz geht <paramref name="other" /> voran.ZeroDiese Instanz und <paramref name="other" /> haben in der Sortierreihenfolge die gleiche Position.Eine positive ganze ZahlDiese Instanz folgt auf <paramref name="other" />.</returns>
      <param name="other">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das benutzerdefinierte Regeln für Vergleiche bereitstellt.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> ist kein <see cref="T:System.Tuple`8" />-Objekt.</exception>
    </member>
    <member name="M:System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Gibt einen Wert zurück, der auf Grundlage einer angegebenen Vergleichsmethode angibt, ob das aktuelle <see cref="T:System.Tuple`8" />-Objekt gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls false.</returns>
      <param name="other">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das die Methode zum Überprüfen der beiden Objekte auf Gleichheit definiert.</param>
    </member>
    <member name="M:System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Berechnet mit einer angegebenen Berechnungsmethode den Hash für das aktuelle <see cref="T:System.Tuple`8" />-Objekt.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
      <param name="comparer">Ein Objekt, dessen <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" />-Methode den Hashcode des aktuellen <see cref="T:System.Tuple`8" />-Objekts berechnet.</param>
    </member>
    <member name="M:System.Tuple`8.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht das aktuelle <see cref="T:System.Tuple`8" />-Objekt mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob sich das aktuelle Element in der Sortierreihenfolge vor, hinter oder an derselben Position wie das angegebene Element befindet.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und <paramref name="obj" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.WertBeschreibungEine negative ganze ZahlDiese Instanz geht <paramref name="obj" /> voran.ZeroDiese Instanz und <paramref name="obj" /> haben in der Sortierreihenfolge die gleiche Position.Eine positive ganze ZahlDiese Instanz folgt auf <paramref name="obj" />.</returns>
      <param name="obj">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> ist kein <see cref="T:System.Tuple`8" />-Objekt.</exception>
    </member>
    <member name="M:System.Tuple`8.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die den Wert dieser <see cref="T:System.Tuple`8" />-Instanz darstellt.</summary>
      <returns>Die Zeichenfolgenentsprechung dieses <see cref="T:System.Tuple`8" />-Objekts.</returns>
    </member>
    <member name="T:System.Type">
      <summary>Stellt Typdeklarationen dar: Klassentypen, Schnittstellentypen, Arraytypen, Werttypen, Enumerationstypen, Typparameter, generische Typdefinitionen und offen oder geschlossen konstruierte generische Typen.Informationen zum Durchsuchen des .NET Framework-Quellcodes für diesen Typ finden Sie in der Verweisquelle.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.AssemblyQualifiedName">
      <summary>Ruft den durch die Assembly qualifizierten Namen des Typs ab, der den Namen der Assembly enthält, aus der der <see cref="T:System.Type" /> geladen wurde.</summary>
      <returns>Der durch die Assembly qualifizierte Name des <see cref="T:System.Type" />, der den Namen der Assembly enthält, aus der der <see cref="T:System.Type" /> geladen wurde, oder null, wenn die aktuelle Instanz einen generischen Typparameter darstellt.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.DeclaringType">
      <summary>Ruft den Typ ab, der den aktuellen geschachtelten oder generischen Typparameter deklariert.</summary>
      <returns>Ein <see cref="T:System.Type" />-Objekt, das den einschließenden Typ darstellt, wenn es sich bei dem aktuellen Typ um einen geschachtelten Typ handelt. Die generische Typdefinition, wenn es sich bei dem aktuellen Typ um einen Typparameter eines generischen Typs handelt. Der Typ, der die generische Methode deklariert, wenn es sich bei dem aktuellen Typ um einen Typparameter einer generischen Methode handelt. Andernfalls null.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Type.EmptyTypes">
      <summary>Stellt ein leeres Array vom <see cref="T:System.Type" />-Typ dar.Dieses Feld ist schreibgeschützt.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.Equals(System.Object)">
      <summary>Bestimmt, ob der zugrunde liegende Systemtyp des aktuellen <see cref="T:System.Type" /> mit dem zugrunde liegenden Systemtyp des angegebenen <see cref="T:System.Object" /> übereinstimmt.</summary>
      <returns>true, wenn der zugrunde liegende Systemtyp von <paramref name="o" /> mit dem zugrunde liegenden Systemtyp des aktuellen <see cref="T:System.Type" /> übereinstimmt, andernfalls false.Diese Methode gibt auch dann false zurück, wenn das durch den <paramref name="o" />-Parameter angegebene Objekt kein Type ist.</returns>
      <param name="o">Das Objekt, dessen zugrunde liegender Systemtyp mit dem zugrunde liegenden Systemtyp des aktuellen <see cref="T:System.Type" /> verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.Equals(System.Type)">
      <summary>Bestimmt, ob der zugrunde liegende Systemtyp des aktuellen <see cref="T:System.Type" /> mit dem zugrunde liegenden Systemtyp des angegebenen <see cref="T:System.Type" /> übereinstimmt.</summary>
      <returns>true, wenn der zugrunde liegende Systemtyp von <paramref name="o" /> mit dem zugrunde liegenden Systemtyp des aktuellen <see cref="T:System.Type" /> übereinstimmt, andernfalls false.</returns>
      <param name="o">Das Objekt, dessen zugrunde liegender Systemtyp mit dem zugrunde liegenden Systemtyp des aktuellen <see cref="T:System.Type" /> verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.FullName">
      <summary>Ruft den voll vollqualifizierten Namen des Typs ab. Dies beinhaltet den Namespace, nicht jedoch die Assembly. </summary>
      <returns>Der vollqualifizierte Name des Typs, einschließlich des Namespace, jedoch ausschließlich der Assembly, oder null, wenn die aktuelle Instanz einen auf einem Typparameter basierenden generischen Typparameter, Arraytyp, Zeigertyp oder byref-Typ oder einen generischen Typ darstellt, der keine generische Typdefinition ist, jedoch nicht aufgelöste Typparameter enthält.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.GenericParameterPosition">
      <summary>Ruft die Position des Typparameters in der Typparameterliste des generischen Typs oder der Methode ab, der bzw. die den Parameter deklariert hat, wenn das <see cref="T:System.Type" />-Objekt einen Typparameter eines generischen Typs oder einer generischen Methode darstellt.</summary>
      <returns>Die Position eines Typparameters in der Typparameterliste des generischen Typs oder der generischen Methode, der bzw. die den Parameter definiert.Die Positionsnummern beginnen mit 0.</returns>
      <exception cref="T:System.InvalidOperationException">The current type does not represent a type parameter.That is, <see cref="P:System.Type.IsGenericParameter" /> returns false.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.GenericTypeArguments">
      <summary>Ruft ein Array von generischen Typargumenten für diesen Typ ab.</summary>
      <returns>Ein Array von generischen Typargumenten für diesen Typ.</returns>
    </member>
    <member name="M:System.Type.GetArrayRank">
      <summary>Ruft die Anzahl der Dimensionen eines Arrays ab. </summary>
      <returns>Eine Ganzzahl, die die Anzahl der Dimensionen im aktuellen Typ darstellt. </returns>
      <exception cref="T:System.NotSupportedException">The functionality of this method is unsupported in the base class and must be implemented in a derived class instead. </exception>
      <exception cref="T:System.ArgumentException">The current type is not an array. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetElementType">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse den <see cref="T:System.Type" /> des Objekts zurück, das der aktuelle Array-, Zeiger- oder Verweistyp einschließt bzw. auf das er verweist.</summary>
      <returns>Der <see cref="T:System.Type" /> des eingeschlossenen Objekts bzw. des Objekts, auf das durch den aktuellen Array-, Zeiger- oder Verweistyp verwiesen wird, oder null, wenn der aktuelle <see cref="T:System.Type" /> kein Array oder Zeiger ist, nicht als Verweis übergeben wurde oder einen generischen Typ oder Typparameter einer generischen Typ- oder Methodendefinition darstellt.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetGenericTypeDefinition">
      <summary>Gibt ein <see cref="T:System.Type" />-Objekt zurück, das eine generische Typdefinition darstellt, aus der der aktuelle generische Typ konstruiert werden kann.</summary>
      <returns>Ein <see cref="T:System.Type" />-Objekt, das einen generischen Typ darstellt, aus dem der aktuelle Typ konstruiert werden kann.</returns>
      <exception cref="T:System.InvalidOperationException">The current type is not a generic type.That is, <see cref="P:System.Type.IsGenericType" /> returns false.</exception>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.Derived classes must provide an implementation.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Der Hashcode für diese Instanz.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetType(System.String)">
      <summary>Ruft den <see cref="T:System.Type" /> mit dem angegebenen Namen ab. Bei der Suche wird die Groß-/Kleinschreibung beachtet.</summary>
      <returns>Der Typ mit dem angegebenen Namen, sofern gefunden, andernfalls null.</returns>
      <param name="typeName">Der durch die Assembly bezeichnete Name des abzurufenden Typs.Siehe <see cref="P:System.Type.AssemblyQualifiedName" />.Wenn sich der Typ in der aktuell ausgeführten Assembly oder in Mscorlib.dll befindet, ist eine Angabe des Typnamens einschließlich des qualifizierenden Namespace ausreichend.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">A class initializer is invoked and throws an exception. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="typeName" /> represents a generic type that has a pointer type, a ByRef type, or <see cref="T:System.Void" /> as one of its type arguments.-or-<paramref name="typeName" /> represents a generic type that has an incorrect number of type arguments.-or-<paramref name="typeName" /> represents a generic type, and one of its type arguments does not satisfy the constraints for the corresponding type parameter.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> represents an array of <see cref="T:System.TypedReference" />. </exception>
      <exception cref="T:System.IO.FileLoadException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.IO.IOException" />, instead.The assembly or one of its dependencies was found, but could not be loaded. </exception>
      <exception cref="T:System.BadImageFormatException">The assembly or one of its dependencies is not valid. -or-Version 2.0 or later of the common language runtime is currently loaded, and the assembly was compiled with a later version.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.GetType(System.String,System.Boolean)">
      <summary>Ruft den <see cref="T:System.Type" /> mit dem angegebenen Namen ab. Bei der Suche wird die Groß-/Kleinschreibung beachtet. Dabei wird angegeben, ob eine Ausnahme ausgelöst werden soll, wenn der Typ nicht gefunden wird.</summary>
      <returns>Der Typ mit dem angegebenen Namen.Wenn der Typ nicht gefunden wird, gibt der <paramref name="throwOnError" />-Parameter an, ob null zurückgegeben oder eine Ausnahme ausgelöst wird.In einigen Fällen wird unabhängig vom Wert von <paramref name="throwOnError" /> eine Ausnahme ausgelöst.Informationen finden Sie im Abschnitt für Ausnahmen.</returns>
      <param name="typeName">Der durch die Assembly bezeichnete Name des abzurufenden Typs.Siehe <see cref="P:System.Type.AssemblyQualifiedName" />.Wenn sich der Typ in der aktuell ausgeführten Assembly oder in Mscorlib.dll befindet, ist eine Angabe des Typnamens einschließlich des qualifizierenden Namespace ausreichend.</param>
      <param name="throwOnError">true, damit eine Ausnahme ausgelöst wird, wenn der Typ nicht gefunden werden kann, false, damit null zurückgegeben wird.Die Angabe von false unterdrückt auch einige andere Ausnahmebedingungen, aber nicht alle.Informationen finden Sie im Abschnitt für Ausnahmen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">A class initializer is invoked and throws an exception. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="throwOnError" /> is true and the type is not found. -or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> contains invalid characters, such as an embedded tab.-or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> is an empty string.-or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> represents an array type with an invalid size. -or-<paramref name="typeName" /> represents an array of <see cref="T:System.TypedReference" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="throwOnError" /> is true and <paramref name="typeName" /> contains invalid syntax.For example, "MyType[,*,]".-or- <paramref name="typeName" /> represents a generic type that has a pointer type, a ByRef type, or <see cref="T:System.Void" /> as one of its type arguments.-or-<paramref name="typeName" /> represents a generic type that has an incorrect number of type arguments.-or-<paramref name="typeName" /> represents a generic type, and one of its type arguments does not satisfy the constraints for the corresponding type parameter.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="throwOnError" /> is true and the assembly or one of its dependencies was not found. </exception>
      <exception cref="T:System.IO.FileLoadException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.IO.IOException" />, instead.The assembly or one of its dependencies was found, but could not be loaded. </exception>
      <exception cref="T:System.BadImageFormatException">The assembly or one of its dependencies is not valid. -or-Version 2.0 or later of the common language runtime is currently loaded, and the assembly was compiled with a later version.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.GetType(System.String,System.Boolean,System.Boolean)">
      <summary>Ruft den <see cref="T:System.Type" /> mit dem angegebenen Namen ab. Dabei wird angegeben, ob bei der Suche Groß- und Kleinschreibung berücksichtigt werden soll und ob eine Ausnahme ausgelöst werden soll, wenn der Typ nicht gefunden wird. </summary>
      <returns>Der Typ mit dem angegebenen Namen.Wenn der Typ nicht gefunden wird, gibt der <paramref name="throwOnError" />-Parameter an, ob null zurückgegeben oder eine Ausnahme ausgelöst wird.In einigen Fällen wird unabhängig vom Wert von <paramref name="throwOnError" /> eine Ausnahme ausgelöst.Informationen finden Sie im Abschnitt für Ausnahmen.</returns>
      <param name="typeName">Der durch die Assembly bezeichnete Name des abzurufenden Typs.Siehe <see cref="P:System.Type.AssemblyQualifiedName" />.Wenn sich der Typ in der aktuell ausgeführten Assembly oder in Mscorlib.dll befindet, ist eine Angabe des Typnamens einschließlich des qualifizierenden Namespace ausreichend.</param>
      <param name="throwOnError">true, um eine Ausnahme auszulösen, wenn der Typ nicht gefunden werden kann; false, um null zurückzugeben. Die Angabe von false unterdrückt außerdem einige andere Ausnahmebedingungen, jedoch nicht alle.Informationen finden Sie im Abschnitt für Ausnahmen.</param>
      <param name="ignoreCase">true, um ohne Beachtung der Groß-/Kleinschreibung nach <paramref name="typeName" /> zu suchen, false, um mit Beachtung der Groß-/Kleinschreibung nach <paramref name="typeName" /> zu suchen. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">A class initializer is invoked and throws an exception. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="throwOnError" /> is true and the type is not found. -or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> contains invalid characters, such as an embedded tab.-or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> is an empty string.-or-<paramref name="throwOnError" /> is true and <paramref name="typeName" /> represents an array type with an invalid size. -or-<paramref name="typeName" /> represents an array of <see cref="T:System.TypedReference" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="throwOnError" /> is true and <paramref name="typeName" /> contains invalid syntax.For example, "MyType[,*,]".-or- <paramref name="typeName" /> represents a generic type that has a pointer type, a ByRef type, or <see cref="T:System.Void" /> as one of its type arguments.-or-<paramref name="typeName" /> represents a generic type that has an incorrect number of type arguments.-or-<paramref name="typeName" /> represents a generic type, and one of its type arguments does not satisfy the constraints for the corresponding type parameter.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="throwOnError" /> is true and the assembly or one of its dependencies was not found. </exception>
      <exception cref="T:System.IO.FileLoadException">The assembly or one of its dependencies was found, but could not be loaded. </exception>
      <exception cref="T:System.BadImageFormatException">The assembly or one of its dependencies is not valid. -or-Version 2.0 or later of the common language runtime is currently loaded, and the assembly was compiled with a later version.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)">
      <summary>Ruft den Typ ab, auf den das angegebene Typhandle verweist.</summary>
      <returns>Der Typ, auf den das angegebene <see cref="T:System.RuntimeTypeHandle" /> verweist, oder null, wenn die <see cref="P:System.RuntimeTypeHandle.Value" />-Eigenschaft von <paramref name="handle" /> den Wert null hat.</returns>
      <param name="handle">Das Objekt, das auf den Typ verweist. </param>
      <exception cref="T:System.Reflection.TargetInvocationException">A class initializer is invoked and throws an exception. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.HasElementType">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle <see cref="T:System.Type" /> einen anderen Typ umfasst oder auf einen anderen Typ verweist, d. h. ob der aktuelle <see cref="T:System.Type" /> ein Array oder ein Zeiger ist oder als Verweis übergeben wird.</summary>
      <returns>true, wenn <see cref="T:System.Type" /> ein Array oder ein Zeiger ist oder als Verweis übergeben wird, andernfalls false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsArray">
      <summary>Ruft einen Wert ab, der angibt, ob der Typ ein Array ist. </summary>
      <returns>true, wenn der aktuelle Typ ein Array ist, andernfalls false. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsByRef">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Type" /> als Verweis übergeben wird.</summary>
      <returns>true, wenn <see cref="T:System.Type" /> als Verweis übergeben wird, andernfalls false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsConstructedGenericType">
      <summary>Ruft einen Wert ab, der angibt, ob dieses Objekt einen konstruierten generischen Typ darstellt.Sie können Instanzen eines konstruierten generischen Typs erstellen.</summary>
      <returns>true, wenn dieses Objekt einen konstruierten generischen Typ darstellt, andernfalls false.</returns>
    </member>
    <member name="P:System.Type.IsGenericParameter">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle <see cref="T:System.Type" /> einen Typparameter einer generischen Typ- oder Methodendefinition darstellt.</summary>
      <returns>true, wenn das <see cref="T:System.Type" />-Objekt einen Typparameter einer generischen Typ- oder Methodendefinition darstellt, andernfalls false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsNested">
      <summary>Ruft einen Wert ab, der angibt, ob das aktuelle <see cref="T:System.Type" />-Objekt einen Typ darstellt, dessen Definition in der Definition eines anderen Typs geschachtelt ist.</summary>
      <returns>true, wenn der <see cref="T:System.Type" /> in einem anderen Typ geschachtelt ist, andernfalls false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsPointer">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Type" /> ein Zeiger ist.</summary>
      <returns>true, wenn <see cref="T:System.Type" /> ein Zeiger ist, andernfalls false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeArrayType">
      <summary>Gibt ein <see cref="T:System.Type" />-Objekt zurück, das ein eindimensionales Array vom aktuellen Typ mit einer unteren Grenze von 0 (null) darstellt.</summary>
      <returns>Ein <see cref="T:System.Type" />-Objekt, das ein eindimensionales Array vom aktuellen Typ mit einer unteren Grenze von 0 (null) darstellt.</returns>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.Derived classes must provide an implementation.</exception>
      <exception cref="T:System.TypeLoadException">The current type is <see cref="T:System.TypedReference" />.-or-The current type is a ByRef type.That is, <see cref="P:System.Type.IsByRef" /> returns true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeArrayType(System.Int32)">
      <summary>Gibt ein <see cref="T:System.Type" />-Objekt zurück, das ein Array vom aktuellen Typ mit der angegebenen Anzahl von Dimensionen darstellt.</summary>
      <returns>Ein Objekt, das ein Array vom aktuellen Typ mit der angegebenen Anzahl von Dimensionen darstellt.</returns>
      <param name="rank">Die Anzahl von Dimensionen für das Array.Diese Zahl muss kleiner oder gleich 32 sein.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="rank" /> is invalid.For example, 0 or negative.</exception>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.</exception>
      <exception cref="T:System.TypeLoadException">The current type is <see cref="T:System.TypedReference" />.-or-The current type is a ByRef type.That is, <see cref="P:System.Type.IsByRef" /> returns true.-or-<paramref name="rank" /> is greater than 32.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeByRefType">
      <summary>Gibt ein <see cref="T:System.Type" />-Objekt zurück, das beim Übergeben als ref-Parameter (ByRef-Parameter in Visual Basic) den aktuellen Typ darstellt.</summary>
      <returns>Ein <see cref="T:System.Type" />-Objekt, das beim Übergeben als ref-Parameter (ByRef-Parameter in Visual Basic) den aktuellen Typ darstellt.</returns>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.</exception>
      <exception cref="T:System.TypeLoadException">The current type is <see cref="T:System.TypedReference" />.-or-The current type is a ByRef type.That is, <see cref="P:System.Type.IsByRef" /> returns true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeGenericType(System.Type[])">
      <summary>Ersetzt die Typparameter der aktuellen generischen Typdefinition durch die Elemente eines Arrays von Typen und gibt ein <see cref="T:System.Type" />-Objekt zurück, das den resultierenden konstruierten Typ darstellt.</summary>
      <returns>Ein <see cref="T:System.Type" />, der den konstruierten Typ darstellt, der durch Ersetzen der Typparameter des aktuellen generischen Typs durch die Elemente von <paramref name="typeArguments" /> erstellt wurde.</returns>
      <param name="typeArguments">Ein Array von Typen, die die Typparameter des aktuellen generischen Typs ersetzen sollen.</param>
      <exception cref="T:System.InvalidOperationException">The current type does not represent a generic type definition.That is, <see cref="P:System.Type.IsGenericTypeDefinition" /> returns false.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeArguments" /> is null.-or- Any element of <paramref name="typeArguments" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The number of elements in <paramref name="typeArguments" /> is not the same as the number of type parameters in the current generic type definition.-or- Any element of <paramref name="typeArguments" /> does not satisfy the constraints specified for the corresponding type parameter of the current generic type. -or- <paramref name="typeArguments" /> contains an element that is a pointer type (<see cref="P:System.Type.IsPointer" /> returns true), a by-ref type (<see cref="P:System.Type.IsByRef" /> returns true), or <see cref="T:System.Void" />.</exception>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.Derived classes must provide an implementation.</exception>
    </member>
    <member name="M:System.Type.MakePointerType">
      <summary>Gibt ein <see cref="T:System.Type" />-Objekt zurück, das einen Zeiger auf den aktuellen Typ darstellt.</summary>
      <returns>Ein <see cref="T:System.Type" />-Objekt, das einen Zeiger auf den aktuellen Typ darstellt.</returns>
      <exception cref="T:System.NotSupportedException">The invoked method is not supported in the base class.</exception>
      <exception cref="T:System.TypeLoadException">The current type is <see cref="T:System.TypedReference" />.-or-The current type is a ByRef type.That is, <see cref="P:System.Type.IsByRef" /> returns true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Type.Missing">
      <summary>Stellt einen in den <see cref="T:System.Type" />-Informationen fehlenden Wert dar.Dieses Feld ist schreibgeschützt.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.Name"></member>
    <member name="P:System.Type.Namespace">
      <summary>Ruft den Namespace von <see cref="T:System.Type" /> ab.</summary>
      <returns>Der Namespace des <see cref="T:System.Type" />; null, wenn die aktuelle Instanz über keinen Namespace verfügt oder einen generischen Parameter darstellt.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.ToString">
      <summary>Gibt einen String zurück, der den Namen des aktuellen Type darstellt.</summary>
      <returns>Ein <see cref="T:System.String" />, der den Namen des aktuellen <see cref="T:System.Type" /> darstellt.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.TypeHandle">
      <summary>Ruft das Handle für den aktuellen <see cref="T:System.Type" /> ab.</summary>
      <returns>Das Handle für den aktuellen <see cref="T:System.Type" />.</returns>
      <exception cref="T:System.NotSupportedException">The .NET Compact Framework does not currently support this property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.TypeAccessException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn eine Methode versucht, einen Typ zu verwenden, auf den sie keinen Zugriff hat.</summary>
    </member>
    <member name="M:System.TypeAccessException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.TypeAccessException" />-Klasse mit einer vom System generierten Meldung, die den Fehler beschreibt.</summary>
    </member>
    <member name="M:System.TypeAccessException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.TypeAccessException" />-Klasse mit einer angegebenen Meldung, die den Fehler beschreibt.</summary>
      <param name="message">Die Meldung, in der die Ausnahme beschrieben wirdDer Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.TypeAccessException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.TypeAccessException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Meldung, in der die Ausnahme beschrieben wirdDer Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="inner" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.TypeCode">
      <summary>Gibt den Typ eines Objekts an.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.TypeCode.Boolean">
      <summary>Ein einfacher Typ zur Darstellung der booleschen Werte true und false.</summary>
    </member>
    <member name="F:System.TypeCode.Byte">
      <summary>Ein ganzzahliger Typ zur Darstellung vorzeichenloser 8-Bit-Ganzzahlen mit Werten zwischen 0 und 255.</summary>
    </member>
    <member name="F:System.TypeCode.Char">
      <summary>Ein ganzzahliger Typ zur Darstellung vorzeichenloser 16-Bit-Ganzzahlen mit Werten zwischen 0 und 65535.Die Menge der darstellbaren Werte für den <see cref="F:System.TypeCode.Char" />-Typ stimmt mit dem Unicode-Zeichensatz überein.</summary>
    </member>
    <member name="F:System.TypeCode.DateTime">
      <summary>Ein Typ zur Darstellung des Werts für Datum und Uhrzeit.</summary>
    </member>
    <member name="F:System.TypeCode.Decimal">
      <summary>Ein einfacher Typ zur Darstellung der Werte im Bereich von 1,0 x 10-28 bis ungefähr 7,9 x 1028 mit 28-29 signifikanten Ziffern.</summary>
    </member>
    <member name="F:System.TypeCode.Double">
      <summary>Ein Gleitkommatyp zur Darstellung von Werten im Bereich von ungefähr 5,0 x 10-324 bis 1,7 x 10308 mit einer Genauigkeit von 15-16 Stellen.</summary>
    </member>
    <member name="F:System.TypeCode.Empty">
      <summary>Ein NULL-Verweis.</summary>
    </member>
    <member name="F:System.TypeCode.Int16">
      <summary>Ein ganzzahliger Typ zur Darstellung von 16-Bit-Ganzzahlen mit Vorzeichen und mit Werten zwischen -32768 und 32767.</summary>
    </member>
    <member name="F:System.TypeCode.Int32">
      <summary>Ein ganzzahliger Typ zur Darstellung von 32-Bit-Ganzzahlen mit Vorzeichen und mit Werten zwischen -2.147.483.648 und 2.147.483.647.</summary>
    </member>
    <member name="F:System.TypeCode.Int64">
      <summary>Ein ganzzahliger Typ zur Darstellung von 64-Bit-Ganzzahlen mit Vorzeichen und mit Werten zwischen -9.223.372.036.854.775.808 und 9.223.372.036.854.775.807.</summary>
    </member>
    <member name="F:System.TypeCode.Object">
      <summary>Ein allgemeiner Typ, der jeden Verweis bzw. Werttyp darstellt, der nicht explizit durch einen anderen TypeCode dargestellt wird.</summary>
    </member>
    <member name="F:System.TypeCode.SByte">
      <summary>Ein ganzzahliger Typ zur Darstellung von 8-Bit-Ganzzahlen mit Vorzeichen und mit Werten zwischen -128 und 127.</summary>
    </member>
    <member name="F:System.TypeCode.Single">
      <summary>Ein Gleitkommatyp zur Darstellung von Werten im Bereich von ungefähr 1,5 x 10-45 bis 3,4 x 1038 mit einer Genauigkeit von 7 Stellen.</summary>
    </member>
    <member name="F:System.TypeCode.String">
      <summary>Ein versiegelter Klassentyp zur Darstellung von Unicode-Zeichenfolgen.</summary>
    </member>
    <member name="F:System.TypeCode.UInt16">
      <summary>Ein ganzzahliger Typ zur Darstellung vorzeichenloser 16-Bit-Ganzzahlen mit Werten zwischen 0 und 65535.</summary>
    </member>
    <member name="F:System.TypeCode.UInt32">
      <summary>Ein ganzzahliger Typ zur Darstellung vorzeichenloser 32-Bit-Ganzzahlen mit Werten zwischen 0 und 4.294.967.295.</summary>
    </member>
    <member name="F:System.TypeCode.UInt64">
      <summary>Ein ganzzahliger Typ zur Darstellung vorzeichenloser 64-Bit-Ganzzahlen mit Werten zwischen 0 und 18.446.744.073.709.551.615.</summary>
    </member>
    <member name="T:System.TypeInitializationException">
      <summary>Die Ausnahme, die als Wrapper um die von dieser Klasseninitialisierung ausgelöste Ausnahme ausgelöst wird.Diese Klasse kann nicht vererbt werden.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.TypeInitializationException" />-Klasse mit einer angegebenen Fehlermeldung, dem angegebenen Typnamen und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="fullTypeName">Der voll gekennzeichnete Name des Typs, der nicht initialisiert werden kann. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter kein NULL-Verweis ist, (Nothing in Visual Basic), wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="P:System.TypeInitializationException.TypeName">
      <summary>Ruft den voll gekennzeichneten Namen des Typs ab, der nicht initialisiert werden kann.</summary>
      <returns>Der voll gekennzeichnete Name des Typs, der nicht initialisiert werden kann.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.TypeLoadException">
      <summary>Die Ausnahme, die durch Fehler beim Laden eines Typs ausgelöst wird.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TypeLoadException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.TypeLoadException" />-Klasse.</summary>
    </member>
    <member name="M:System.TypeLoadException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.TypeLoadException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird. </param>
    </member>
    <member name="M:System.TypeLoadException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.TypeLoadException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="inner" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="P:System.TypeLoadException.Message">
      <summary>Ruft die Fehlermeldung für diese Ausnahme ab.</summary>
      <returns>Die Zeichenfolge der Fehlermeldung.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.TypeLoadException.TypeName">
      <summary>Ruft den voll gekennzeichneten Namen des Typs ab, der die Ausnahme verursacht.</summary>
      <returns>Der voll gekennzeichnete Typname.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.UInt16">
      <summary>Stellt eine vorzeichenlose 16-Bit-Ganzzahl dar.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.CompareTo(System.UInt16)">
      <summary>Vergleicht diese Instanz mit einer angegebenen 16-Bit-Ganzzahl ohne Vorzeichen, und gibt eine Angabe über das Verhältnis der entsprechenden Werte zurück.</summary>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser Instanz und <paramref name="value" /> angibt.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Eine zu vergleichende Ganzzahl ohne Vorzeichen. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt16.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> eine Instanz von <see cref="T:System.UInt16" /> ist, deren Wert gleich dem Wert dieser Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein mit dieser Instanz zu vergleichendes Objekt. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt16.Equals(System.UInt16)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen <see cref="T:System.UInt16" />-Wert ist.</summary>
      <returns>true, wenn <paramref name="obj" /> über denselben Wert wie diese Instanz verfügt, andernfalls false.</returns>
      <param name="obj">Eine 16-Bit-Ganzzahl ohne Vorzeichen, die mit dieser Instanz verglichen werden soll.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt16.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UInt16.MaxValue">
      <summary>Stellt den größtmöglichen Wert von <see cref="T:System.UInt16" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UInt16.MinValue">
      <summary>Stellt den kleinstmöglichen Wert von <see cref="T:System.UInt16" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in die entsprechende ganze 16-Bit-Zahl ohne Vorzeichen.</summary>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt.Die Zeichenfolge wird unter Verwendung des durch den <paramref name="style" />-Parameter angegebenen Stils interpretiert.</param>
      <param name="style">Eine bitweise Kombination der Enumerationswerte, die das zulässige Format von <paramref name="s" /> angeben.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturabhängigen Format in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt.Die Zeichenfolge wird unter Verwendung des durch den <paramref name="style" />-Parameter angegebenen Stils interpretiert.</param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angeben, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen kulturspezifischen Format in die entsprechende ganze 16-Bit-Zahl ohne Vorzeichen.</summary>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt. </param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relative Reihenfolge dieser Instanz und <paramref name="value" /> angibt.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.UInt16" /> object. </exception>
    </member>
    <member name="M:System.UInt16.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.UInt16.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true, wenn der Wert der aktuellen Instanz nicht 0 (null) ist, andernfalls false.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Byte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Char" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Diese Konvertierung wird nicht unterstützt.Es wird kein Wert zurückgegeben.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Decimal" /> konvertierte aktuelle Wert dieser Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Double" /> konvertierte aktuelle Wert dieser Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int16" /> konvertierte aktuelle Wert dieser Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int32" /> konvertierte Wert dieser Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int64" /> konvertierte aktuelle Wert dieser Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.SByte" /> konvertierte aktuelle Wert dieser Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Single" /> konvertierte aktuelle Wert dieser Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Der in ein <paramref name="type" /> konvertierte aktuelle Wert dieser Instanz.</returns>
      <param name="type">Der Typ, in den dieser <see cref="T:System.UInt16" />-Wert konvertiert werden soll.</param>
      <param name="provider">Eine<see cref="T:System.IFormatProvider" />-Implementierung, die Informationen zum Format des zurückgegebenen Werts angibt.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Der unveränderte aktuelle Wert dieser Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt32" /> konvertierte aktuelle Wert dieser Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt16.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt64" /> konvertierte aktuelle Wert dieser Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt16.ToString">
      <summary>Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz, die aus einer Folge von Ziffern zwischen 0 (null) und 9 ohne Vorzeichen und führende Nullen besteht.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.ToString(System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Berücksichtigung der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz, die aus einer Folge von Ziffern zwischen 0 (null) und 9 ohne Vorzeichen und führende Nullen besteht.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.ToString(System.String)">
      <summary>Konvertiert den numerischen Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung unter Berücksichtigung des angegebenen Formats.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" />.</returns>
      <param name="format">Eine numerische Formatierungszeichenfolge.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.ToString(System.String,System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Verwendung des angegebenen Formats und der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" /> und <paramref name="provider" />.</returns>
      <param name="format">Eine numerische Formatierungszeichenfolge.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16@)">
      <summary>Versucht, die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturabhängigen Format in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt.Die Zeichenfolge wird unter Verwendung des durch den <paramref name="style" />-Parameter angegebenen Stils interpretiert.</param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die das zulässige Format von <paramref name="s" /> angibt.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den 16-Bit-Ganzzahlwert mit Vorzeichen zurück, der der Zahl in <paramref name="s" /> entspricht, und 0 (null), wenn die Konvertierung nicht durchgeführt werden konnte.Bei der Konvertierung tritt ein Fehler auf, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, nicht in einem mit <paramref name="style" /> kompatiblen Format vorliegt oder eine Zahl kleiner als <see cref="F:System.UInt16.MinValue" /> oder größer als <see cref="F:System.UInt16.MaxValue" /> darstellt.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> ursprünglich übergebene Werte werden ausnahmslos überschrieben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.TryParse(System.String,System.UInt16@)">
      <summary>Versucht, die Zeichenfolgendarstellung einer Zahl in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt. </param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den 16-Bit-Ganzzahlwert mit Vorzeichen zurück, der der Zahl in <paramref name="s" /> entspricht, und 0 (null), wenn die Konvertierung nicht durchgeführt werden konnte.Bei der Konvertierung tritt ein Fehler auf, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist oder nicht im korrekten Format vorliegt.oder stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt16.MinValue" /> oder größer als <see cref="F:System.UInt16.MaxValue" /> ist.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> ursprünglich übergebene Werte werden ausnahmslos überschrieben.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UInt32">
      <summary>Stellt eine vorzeichenlose 32-Bit-Ganzzahl dar.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.CompareTo(System.UInt32)">
      <summary>Vergleicht diese Instanz mit einer angegebenen 32-Bit-Ganzzahl ohne Vorzeichen, und gibt eine Angabe über das Verhältnis der entsprechenden Werte zurück.</summary>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser Instanz und <paramref name="value" /> angibt.Return value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Eine zu vergleichende Ganzzahl ohne Vorzeichen. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt32.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> eine Instanz von <see cref="T:System.UInt32" /> ist, deren Wert gleich dem Wert dieser Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt32.Equals(System.UInt32)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einer angegebenen <see cref="T:System.UInt32" /> ist.</summary>
      <returns>true, wenn <paramref name="obj" /> über denselben Wert wie diese Instanz verfügt, andernfalls false.</returns>
      <param name="obj">Ein mit dieser Instanz zu vergleichender Wert.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt32.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UInt32.MaxValue">
      <summary>Stellt den größtmöglichen Wert von <see cref="T:System.UInt32" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UInt32.MinValue">
      <summary>Stellt den kleinstmöglichen Wert von <see cref="T:System.UInt32" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in die entsprechende ganze 32-Bit-Zahl ohne Vorzeichen.</summary>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt.Die Zeichenfolge wird unter Verwendung des durch den <paramref name="style" />-Parameter angegebenen Stils interpretiert.</param>
      <param name="style">Eine bitweise Kombination der Enumerationswerte, die das zulässige Format von <paramref name="s" /> angeben.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturabhängigen Format in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt.Die Zeichenfolge wird unter Verwendung des durch den <paramref name="style" />-Parameter angegebenen Stils interpretiert.</param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angeben, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen kulturspezifischen Format in die entsprechende ganze 32-Bit-Zahl ohne Vorzeichen.</summary>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt. </param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct style. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relative Reihenfolge dieser Instanz und <paramref name="value" /> angibt.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.UInt32" /> object. </exception>
    </member>
    <member name="M:System.UInt32.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.UInt32.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true, wenn der Wert der aktuellen Instanz nicht 0 (null) ist, andernfalls false.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Byte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Char" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Diese Konvertierung wird nicht unterstützt.Es wird kein Wert zurückgegeben.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Decimal" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Double" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int16" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int32" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int64" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.SByte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Single" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Der in <paramref name="type" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="type">Der Typ, in den dieser <see cref="T:System.UInt32" />-Wert konvertiert werden soll.</param>
      <param name="provider">Eine <see cref="T:System.IFormatProvider" />-Implementierung, die kulturspezifische Informationen zum Format des zurückgegebenen Werts bereitstellt.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt16" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Der unveränderte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt32.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt64" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt32.ToString">
      <summary>Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz, die aus einer Folge von Ziffern zwischen 0 (null) und 9 ohne Vorzeichen und führende Nullen besteht.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.ToString(System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Berücksichtigung der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz, die aus einer Folge von Ziffern zwischen 0 (null) und 9 ohne Vorzeichen und führende Nullen besteht.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.ToString(System.String)">
      <summary>Konvertiert den numerischen Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung unter Berücksichtigung des angegebenen Formats.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" />.</returns>
      <param name="format">Eine numerische Formatierungszeichenfolge.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.ToString(System.String,System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Verwendung des angegebenen Formats und der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" /> und <paramref name="provider" />.</returns>
      <param name="format">Eine numerische Formatierungszeichenfolge.</param>
      <param name="provider">Ein Objekt, das kulturabhängige Formatierungsinformationen über diese Instanz liefert. </param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32@)">
      <summary>Versucht, die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturabhängigen Format in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt.Die Zeichenfolge wird unter Verwendung des durch den <paramref name="style" />-Parameter angegebenen Stils interpretiert.</param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die das zulässige Format von <paramref name="s" /> angibt.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den 32-Bit-Ganzzahlwert mit Vorzeichen zurück, der der Zahl in <paramref name="s" /> entspricht, und 0 (null), wenn die Konvertierung nicht durchgeführt werden konnte.Bei der Konvertierung tritt ein Fehler auf, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, nicht in einem mit <paramref name="style" /> kompatiblen Format vorliegt oder eine Zahl darstellt, die kleiner als <see cref="F:System.UInt32.MinValue" /> oder größer als <see cref="F:System.UInt32.MaxValue" /> ist.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> ursprünglich übergebene Werte werden ausnahmslos überschrieben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.TryParse(System.String,System.UInt32@)">
      <summary>Versucht, die Zeichenfolgendarstellung einer Zahl in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt. </param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den 32-Bit-Ganzzahlwert mit Vorzeichen zurück, der der Zahl in <paramref name="s" /> entspricht, und 0 (null), wenn die Konvertierung nicht durchgeführt werden konnte.Die Konvertierung kann nicht durchgeführt werden, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, kein gültiges Format aufweist oder eine Zahl kleiner als <see cref="F:System.UInt32.MinValue" /> oder größer als <see cref="F:System.UInt32.MaxValue" /> darstellt.Dieser Parameter wird nicht initialisiert übergeben; in <paramref name="result" /> ursprünglich übergebene Werte werden ausnahmslos überschrieben.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UInt64">
      <summary>Stellt eine vorzeichenlose 64-Bit-Ganzzahl dar.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.CompareTo(System.UInt64)">
      <summary>Vergleicht diese Instanz mit einer angegebenen 64-Bit-Ganzzahl ohne Vorzeichen, und gibt eine Angabe über das Verhältnis der entsprechenden Werte zurück.</summary>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser Instanz und <paramref name="value" /> angibt.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">Eine zu vergleichende Ganzzahl ohne Vorzeichen. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt64.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> eine Instanz von <see cref="T:System.UInt64" /> ist, deren Wert gleich dem Wert dieser Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein mit dieser Instanz zu vergleichendes Objekt. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt64.Equals(System.UInt64)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen <see cref="T:System.UInt64" />-Wert ist.</summary>
      <returns>true, wenn <paramref name="obj" /> über denselben Wert wie diese Instanz verfügt, andernfalls false.</returns>
      <param name="obj">Ein mit dieser Instanz zu vergleichender <see cref="T:System.UInt64" />-Wert.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt64.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UInt64.MaxValue">
      <summary>Stellt den größtmöglichen Wert von <see cref="T:System.UInt64" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UInt64.MinValue">
      <summary>Stellt den kleinstmöglichen Wert von <see cref="T:System.UInt64" /> dar.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in die entsprechende ganze 64-Bit-Zahl ohne Vorzeichen.</summary>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt.Die Zeichenfolge wird unter Verwendung des durch den <paramref name="style" />-Parameter angegebenen Stils interpretiert.</param>
      <param name="style">Eine bitweise Kombination der Enumerationswerte, die das zulässige Format von <paramref name="s" /> angeben.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturabhängigen Format in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt.Die Zeichenfolge wird unter Verwendung des durch den <paramref name="style" />-Parameter angegebenen Stils interpretiert.</param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angeben, die in <paramref name="s" /> vorhanden sein können.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String,System.IFormatProvider)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen kulturspezifischen Format in die entsprechende ganze 64-Bit-Zahl ohne Vorzeichen.</summary>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="s" /> entspricht.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt. </param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="s" /> parameter is null. </exception>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not in the correct style. </exception>
      <exception cref="T:System.OverflowException">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relative Reihenfolge dieser Instanz und <paramref name="value" /> angibt.Return value Meaning Less than zero This instance precedes <paramref name="value" /> in the sort order.Zero This instance occurs in the same position as <paramref name="value" /> in the sort order.Greater than zero This instance follows <paramref name="value" /> in the sort order.-or- <paramref name="value" /> is null. </returns>
      <param name="value">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.UInt64" /> object. </exception>
    </member>
    <member name="M:System.UInt64.System#IConvertible#GetTypeCode"></member>
    <member name="M:System.UInt64.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true, wenn der Wert der aktuellen Instanz nicht 0 (null) ist, andernfalls false.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Byte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Char" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Diese Konvertierung wird nicht unterstützt.Bei dem Versuch der Verwendung dieser Methode wird eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <returns>Diese Konvertierung wird nicht unterstützt.Es wird kein Wert zurückgegeben.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Decimal" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Double" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int16" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int32" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Int64" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.SByte" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.Single" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>Der in <paramref name="type" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="type">Der Typ, in den dieser <see cref="T:System.UInt64" />-Wert konvertiert werden soll.</param>
      <param name="provider">Eine<see cref="T:System.IFormatProvider" />-Implementierung, die Informationen zum Format des zurückgegebenen Werts angibt.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt16" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>Der in ein <see cref="T:System.UInt32" /> konvertierte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt64.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>Der unveränderte Wert der aktuellen Instanz.</returns>
      <param name="provider">Dieser Parameter wird ignoriert.</param>
    </member>
    <member name="M:System.UInt64.ToString">
      <summary>Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz, die aus einer Folge von Ziffern zwischen 0 (null) und 9 ohne Vorzeichen und führende Nullen besteht.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.ToString(System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Berücksichtigung der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz, die aus einer Folge von Ziffern zwischen 0 (null) und 9 ohne Vorzeichen und führende Nullen besteht.  </returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.ToString(System.String)">
      <summary>Konvertiert den numerischen Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung unter Berücksichtigung des angegebenen Formats.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" />.</returns>
      <param name="format">Eine numerische Formatierungszeichenfolge.</param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.ToString(System.String,System.IFormatProvider)">
      <summary>Konvertiert den numerischen Wert dieser Instanz unter Verwendung des angegebenen Formats und der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" /> und <paramref name="provider" />.</returns>
      <param name="format">Eine numerische Formatierungszeichenfolge.</param>
      <param name="provider">Ein Objekt, das kulturabhängige Formatierungsinformationen über diese Instanz liefert. </param>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)">
      <summary>Versucht, die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturabhängigen Format in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt.Die Zeichenfolge wird unter Verwendung des durch den <paramref name="style" />-Parameter angegebenen Stils interpretiert.</param>
      <param name="style">Eine bitweise Kombination von Enumerationswerten, die das zulässige Format von <paramref name="s" /> angibt.Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="s" /> bereitstellt. </param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den 64-Bit-Ganzzahlwert mit Vorzeichen zurück, der der Zahl in <paramref name="s" /> entspricht, und 0 (null), wenn die Konvertierung nicht durchgeführt werden konnte.Bei der Konvertierung tritt ein Fehler auf, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, nicht in einem mit <paramref name="style" /> kompatiblen Format vorliegt oder eine Zahl kleiner als <see cref="F:System.UInt64.MinValue" /> oder größer als <see cref="F:System.UInt64.MaxValue" /> darstellt.Dieser Parameter wird nicht initialisiert übergeben. Jeder Wert, der ursprünglich im bereitgestellten <paramref name="result" /> überschrieben werden.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.TryParse(System.String,System.UInt64@)">
      <summary>Versucht, die Zeichenfolgendarstellung einer Zahl in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.Ein Rückgabewert gibt an, ob die Konvertierung erfolgreich war oder nicht.</summary>
      <returns>true, wenn <paramref name="s" /> erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="s">Eine Zeichenfolge, die die zu konvertierende Zahl darstellt. </param>
      <param name="result">Diese Methode gibt bei erfolgreicher Konvertierung den 64-Bit-Ganzzahlwert mit Vorzeichen zurück, der der Zahl in <paramref name="s" /> entspricht, und 0 (null), wenn die Konvertierung nicht durchgeführt werden konnte.Die Konvertierung kann nicht durchgeführt werden, wenn der <paramref name="s" />-Parameter null oder <see cref="F:System.String.Empty" /> ist, kein gültiges Format aufweist oder eine Zahl kleiner als <see cref="F:System.UInt64.MinValue" /> oder größer als <see cref="F:System.UInt64.MaxValue" /> darstellt.Dieser Parameter wird nicht initialisiert übergeben. Jeder Wert, der ursprünglich im bereitgestellten <paramref name="result" /> überschrieben werden.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UIntPtr">
      <summary>Ein plattformabhängiger Typ zur Darstellung von Zeigern und Handles.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.#ctor(System.UInt32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UIntPtr" />-Struktur mit dem angegebenen 32-Bit-Zeiger bzw. -Handle.</summary>
      <param name="value">Ein von einer 32-Bit-Ganzzahl ohne Vorzeichen dargestellter Zeiger bzw. ein Handle. </param>
    </member>
    <member name="M:System.UIntPtr.#ctor(System.UInt64)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.UIntPtr" /> mit dem angegebenen 64-Bit-Zeiger bzw. -Handle.</summary>
      <param name="value">Ein von einer 64-Bit-Ganzzahl ohne Vorzeichen dargestellter Zeiger bzw. ein Handle. </param>
      <exception cref="T:System.OverflowException">Auf einer 32-Bit-Plattform ist <paramref name="value" /> für eine Darstellung als <see cref="T:System.UIntPtr" /> zu groß. </exception>
    </member>
    <member name="M:System.UIntPtr.#ctor(System.Void*)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.UIntPtr" /> mit dem angegebenen Zeiger auf einen nicht angegebenen Typ.</summary>
      <param name="value">Ein Zeiger auf einen nicht angegebenen Typ. </param>
    </member>
    <member name="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
      <summary>Addiert einen Offset zum Wert eines Zeigers ohne Vorzeichen.</summary>
      <returns>Ein neuer Zeiger ohne Vorzeichen, der die Addition von <paramref name="offset" /> zu <paramref name="pointer" /> widerspiegelt.</returns>
      <param name="pointer">Der Zeiger ohne Vorzeichen, zu dem der Offset addiert werden soll.</param>
      <param name="offset">Der Offset, der addiert werden soll.</param>
    </member>
    <member name="M:System.UIntPtr.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn <paramref name="obj" /> eine Instanz von <see cref="T:System.UIntPtr" /> ist, deren Wert gleich dem Wert dieser Instanz ist, andernfalls false.</returns>
      <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UIntPtr.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
      <summary>Addiert einen Offset zum Wert eines Zeigers ohne Vorzeichen.</summary>
      <returns>Ein neuer Zeiger ohne Vorzeichen, der die Addition von <paramref name="offset" /> zu <paramref name="pointer" /> widerspiegelt.</returns>
      <param name="pointer">Der Zeiger ohne Vorzeichen, zu dem der Offset addiert werden soll.</param>
      <param name="offset">Der Offset, der addiert werden soll.</param>
    </member>
    <member name="M:System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)">
      <summary>Bestimmt, ob zwei angegebene Instanzen von <see cref="T:System.UIntPtr" /> gleich sind.</summary>
      <returns>true, wenn <paramref name="value1" /> gleich <paramref name="value2" /> ist, andernfalls false.</returns>
      <param name="value1">Der erste Zeiger bzw. das erste Handle für den Vergleich. </param>
      <param name="value2">Der zweite Zeiger bzw. das zweite Handle für den Vergleich. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UInt32)~System.UIntPtr">
      <summary>Konvertiert den Wert einer 32-Bit-Ganzzahl ohne Vorzeichen in einen <see cref="T:System.UIntPtr" />.</summary>
      <returns>Eine neue, mit <paramref name="value" /> initialisierte Instanz von <see cref="T:System.UIntPtr" />.</returns>
      <param name="value">Eine 32-Bit-Ganzzahl ohne Vorzeichen. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UInt64)~System.UIntPtr">
      <summary>Konvertiert eine 64-Bit-Ganzzahl ohne Vorzeichen in einen <see cref="T:System.UIntPtr" />.</summary>
      <returns>Eine neue, mit <paramref name="value" /> initialisierte Instanz von <see cref="T:System.UIntPtr" />.</returns>
      <param name="value">Eine 64-Bit-Ganzzahl ohne Vorzeichen. </param>
      <exception cref="T:System.OverflowException">Auf einer 32-Bit-Plattform ist <paramref name="value" /> für eine Darstellung als <see cref="T:System.UIntPtr" /> zu groß. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt64">
      <summary>Konvertiert den Wert des angegebenen <see cref="T:System.UIntPtr" /> in eine 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Der Inhalt von <paramref name="value" />.</returns>
      <param name="value">Der zu konvertierende Zeiger bzw. das zu konvertierende Handle. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*">
      <summary>Konvertiert den Wert des angegebenen <see cref="T:System.UIntPtr" /> in einen Zeiger auf einen nicht angegebenen Typ.</summary>
      <returns>Der Inhalt von <paramref name="value" />.</returns>
      <param name="value">Der zu konvertierende Zeiger bzw. das zu konvertierende Handle. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32">
      <summary>Konvertiert den Wert des angegebenen <see cref="T:System.UIntPtr" /> in eine 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Der Inhalt von <paramref name="value" />.</returns>
      <param name="value">Der zu konvertierende Zeiger bzw. das zu konvertierende Handle. </param>
      <exception cref="T:System.OverflowException">Auf einer 64-Bit-Plattform ist <paramref name="value" /> für eine Darstellung als 32-Bit-Ganzzahl ohne Vorzeichen zu groß. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr">
      <summary>Konvertiert den angegebenen Zeiger auf einen nicht angegebenen Typ in einen <see cref="T:System.UIntPtr" />.</summary>
      <returns>Eine neue, mit <paramref name="value" /> initialisierte Instanz von <see cref="T:System.UIntPtr" />.</returns>
      <param name="value">Ein Zeiger auf einen nicht angegebenen Typ. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)">
      <summary>Bestimmt, ob zwei angegebene Instanzen von <see cref="T:System.UIntPtr" /> ungleich sind.</summary>
      <returns>true, wenn <paramref name="value1" /> ungleich <paramref name="value2" /> ist, andernfalls false.</returns>
      <param name="value1">Der erste Zeiger bzw. das erste Handle für den Vergleich. </param>
      <param name="value2">Der zweite Zeiger bzw. das zweite Handle für den Vergleich. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
      <summary>Subtrahiert einen Offset vom Wert eines Zeigers ohne Vorzeichen.</summary>
      <returns>Ein neuer Zeiger ohne Vorzeichen, der die Subtraktion von <paramref name="offset" /> von <paramref name="pointer" /> widerspiegelt.</returns>
      <param name="pointer">Der Zeiger ohne Vorzeichen, von dem der Offset subtrahiert werden soll.</param>
      <param name="offset">Der Offset, der subtrahiert werden soll.</param>
    </member>
    <member name="P:System.UIntPtr.Size">
      <summary>Ruft die Größe dieser Instanz ab.</summary>
      <returns>Die Größe eines Zeigers bzw. Handles auf dieser Plattform in Bytes.Der Wert dieser Eigenschaft auf einer 32-Bit-Plattform ist 4 und auf einer 64-Bit-Plattform 8.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
      <summary>Subtrahiert einen Offset vom Wert eines Zeigers ohne Vorzeichen.</summary>
      <returns>Ein neuer Zeiger ohne Vorzeichen, der die Subtraktion von <paramref name="offset" /> von <paramref name="pointer" /> widerspiegelt.</returns>
      <param name="pointer">Der Zeiger ohne Vorzeichen, von dem der Offset subtrahiert werden soll.</param>
      <param name="offset">Der Offset, der subtrahiert werden soll.</param>
    </member>
    <member name="M:System.UIntPtr.ToPointer">
      <summary>Konvertiert den Wert dieser Instanz in einen Zeiger auf einen nicht angegebenen Typ.</summary>
      <returns>Ein Zeiger auf <see cref="T:System.Void" />, d. h. ein Zeiger auf Speicher, der Daten eines nicht angegebenen Typs enthält.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.ToString">
      <summary>Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgenentsprechung des Wertes dieser Instanz.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.ToUInt32">
      <summary>Konvertiert den Wert dieser Instanz in eine 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die gleich dem Wert dieser Instanz ist.</returns>
      <exception cref="T:System.OverflowException">Auf einer 64-Bit-Plattform ist der Wert dieser Instanz für eine Darstellung als 32-Bit-Ganzzahl ohne Vorzeichen zu groß. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.ToUInt64">
      <summary>Konvertiert den Wert dieser Instanz in eine 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die gleich dem Wert dieser Instanz ist.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UIntPtr.Zero">
      <summary>Ein schreibgeschütztes Feld, das einen mit 0 (null) initialisierten Zeiger oder ein Handle darstellt.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UnauthorizedAccessException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn das Betriebssystem aufgrund eines E/A-Fehlers oder eines bestimmten Typs von Sicherheitsfehler den Zugriff verweigert.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UnauthorizedAccessException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UnauthorizedAccessException" />-Klasse.</summary>
    </member>
    <member name="M:System.UnauthorizedAccessException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UnauthorizedAccessException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird. </param>
    </member>
    <member name="M:System.UnauthorizedAccessException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UnauthorizedAccessException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="inner" />-Parameter kein NULL-Verweis ist (Nothing in Visual Basic), wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Uri">
      <summary>Stellt eine Objektdarstellung eines URIs (Uniform Resource Identifier) und einfachen Zugriff auf die Teile des URIs bereit.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Uri" />-Klasse mit dem angegebenen URI.</summary>
      <param name="uriString">Ein URI. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> ist null. </exception>
      <exception cref="T:System.UriFormatException">In der .NET for Windows Store apps oder Portable Klassenbibliothek, fangen Sie die Ausnahme Basisklasse <see cref="T:System.FormatException" />, stattdessen.<paramref name="uriString" /> ist leer.- oder -  Das in <paramref name="uriString" /> angegebene Schema entspricht nicht der korrekten Form.Finden Sie unter <see cref="M:System.Uri.CheckSchemeName(System.String)" />.- oder -  <paramref name="uriString" /> enthält zu viele Schrägstriche (/).- oder -  Das in <paramref name="uriString" /> angegebene Kennwort ist ungültig.- oder -  Der in <paramref name="uriString" /> angegebene Hostname ist ungültig.- oder -  Der in <paramref name="uriString" /> angegebene Dateiname ist ungültig. - oder -  Der in <paramref name="uriString" /> angegebene Benutzername ist ungültig.- oder -  Am Ende des in <paramref name="uriString" /> angegeben Hostnamens oder Namens der Zertifizierungsstelle sind umgekehrte Schrägstriche unzulässig.- oder -  Die in <paramref name="uriString" /> angegebene Anschlussnummer ist ungültig oder kann nicht analysiert werden.- oder -  Die Länge des <paramref name="uriString" /> ist länger als 65519 Zeichen.- oder -  Das in <paramref name="uriString" /> angegebene Schema ist länger als 1023 Zeichen.- oder -  <paramref name="uriString" /> enthält eine ungültige Zeichensequenz.- oder -  Der in <paramref name="uriString" /> angegebene MS DOS-Pfad muss mit c:\\ beginnen.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.String,System.UriKind)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Uri" />-Klasse mit dem angegebenen URI.Mit diesem Konstruktor können Sie angeben, ob die URI-Zeichenfolge ein relativer URI, ein absoluter URI oder unbestimmt ist.</summary>
      <param name="uriString">Eine Zeichenfolge, die die Ressource identifiziert, die durch die <see cref="T:System.Uri" />-Instanz dargestellt werden soll.</param>
      <param name="uriKind">Gibt an, ob die URI-Zeichenfolge ein relativer URI, ein absoluter URI oder unbestimmt ist.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="uriKind" /> ist ungültig. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> ist null. </exception>
      <exception cref="T:System.UriFormatException">In der .NET for Windows Store apps oder Portable Klassenbibliothek, fangen Sie die Ausnahme Basisklasse <see cref="T:System.FormatException" />, stattdessen.<paramref name="uriString" /> enthält einen relativen URI, und <paramref name="uriKind" /> ist <see cref="F:System.UriKind.Absolute" />.oder<paramref name="uriString" /> enthält einen absoluten URI, und <paramref name="uriKind" /> ist <see cref="F:System.UriKind.Relative" />.oder<paramref name="uriString" /> ist leer.- oder -  Das in <paramref name="uriString" /> angegebene Schema entspricht nicht der korrekten Form.Finden Sie unter <see cref="M:System.Uri.CheckSchemeName(System.String)" />.- oder -  <paramref name="uriString" /> enthält zu viele Schrägstriche (/).- oder -  Das in <paramref name="uriString" /> angegebene Kennwort ist ungültig.- oder -  Der in <paramref name="uriString" /> angegebene Hostname ist ungültig.- oder -  Der in <paramref name="uriString" /> angegebene Dateiname ist ungültig. - oder -  Der in <paramref name="uriString" /> angegebene Benutzername ist ungültig.- oder -  Am Ende des in <paramref name="uriString" /> angegeben Hostnamens oder Namens der Zertifizierungsstelle sind umgekehrte Schrägstriche unzulässig.- oder -  Die in <paramref name="uriString" /> angegebene Anschlussnummer ist ungültig oder kann nicht analysiert werden.- oder -  Die Länge des <paramref name="uriString" /> ist länger als 65519 Zeichen.- oder -  Das in <paramref name="uriString" /> angegebene Schema ist länger als 1023 Zeichen.- oder -  <paramref name="uriString" /> enthält eine ungültige Zeichensequenz.- oder -  Der in <paramref name="uriString" /> angegebene MS DOS-Pfad muss mit c:\\ beginnen.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.Uri,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Uri" />-Klasse auf Grundlage des angegebenen Basis-URIs und der relativen URI-Zeichenfolge.</summary>
      <param name="baseUri">Der Basis-URI. </param>
      <param name="relativeUri">Der relative URI, der dem Basis-URI hinzugefügt werden soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="baseUri" /> ist keine absolute <see cref="T:System.Uri" />-Instanz. </exception>
      <exception cref="T:System.UriFormatException">In der .NET for Windows Store apps oder Portable Klassenbibliothek, fangen Sie die Ausnahme Basisklasse <see cref="T:System.FormatException" />, stattdessen.Der durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> erstellte URI ist leer oder enthält nur Leerzeichen.- oder -  Das Schema, das in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig.- oder -  Der durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildete URI enthält zu viele Schrägstriche.- oder -  Das Kennwort, das in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig.- oder -  Der Hostname, der in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig.- oder -  Der Dateiname, der in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig. - oder -  Der Benutzername, der in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig.- oder -  Am Ende des Hostnamens oder Namens der Zertifizierungsstelle, der in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, sind umgekehrte Schrägstriche unzulässig.- oder -  Die Anschlussnummer, die in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig oder kann nicht analysiert werden.- oder -  Der durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildete URI ist länger als 65519 Zeichen.- oder -  Das Schema, das in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist länger als 1023 Zeichen.- oder -  Der durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI enthält eine ungültige Zeichenfolge.- oder -  Der in <paramref name="uriString" /> angegebene MS DOS-Pfad muss mit c:\\ beginnen.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.Uri,System.Uri)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Uri" />-Klasse auf Grundlage der Kombination einer angegebenen <see cref="T:System.Uri" />-Instanz als Basis und einer relativen <see cref="T:System.Uri" />-Instanz.</summary>
      <param name="baseUri">Ein absoluter <see cref="T:System.Uri" />, der die Basis für die neue <see cref="T:System.Uri" />-Instanz ist. </param>
      <param name="relativeUri">Eine relative <see cref="T:System.Uri" />-Instanz, die mit <paramref name="baseUri" /> kombiniert wird. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseUri" /> ist keine absolute <see cref="T:System.Uri" />-Instanz. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="baseUri" /> ist keine absolute <see cref="T:System.Uri" />-Instanz. </exception>
      <exception cref="T:System.UriFormatException">In der .NET for Windows Store apps oder Portable Klassenbibliothek, fangen Sie die Ausnahme Basisklasse <see cref="T:System.FormatException" />, stattdessen.Der durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> erstellte URI ist leer oder enthält nur Leerzeichen.- oder -  Das Schema, das in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig.- oder -  Der durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildete URI enthält zu viele Schrägstriche.- oder -  Das Kennwort, das in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig.- oder -  Der Hostname, der in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig.- oder -  Der Dateiname, der in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig. - oder -  Der Benutzername, der in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig.- oder -  Am Ende des Hostnamens oder Namens der Zertifizierungsstelle, der in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, sind umgekehrte Schrägstriche unzulässig.- oder -  Die Anschlussnummer, die in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig oder kann nicht analysiert werden.- oder -  Der durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildete URI ist länger als 65519 Zeichen.- oder -  Das Schema, das in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist länger als 1023 Zeichen.- oder -  Der durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI enthält eine ungültige Zeichenfolge.- oder -  Der in <paramref name="uriString" /> angegebene MS DOS-Pfad muss mit c:\\ beginnen.</exception>
    </member>
    <member name="P:System.Uri.AbsolutePath">
      <summary>Ruft den absoluten Pfad des URIs ab.</summary>
      <returns>Ein <see cref="T:System.String" /> mit dem absoluten Pfad der Ressource.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.AbsoluteUri">
      <summary>Ruft den absoluten URI ab.</summary>
      <returns>Ein <see cref="T:System.String" /> mit dem vollständigen URI.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Authority">
      <summary>Ruft den DNS-Hostnamen (Domain Name System) oder die IP-Adresse und die Anschlussnummer für einen Server ab.</summary>
      <returns>Ein <see cref="T:System.String" />, der die Zertifizierungsstellenkomponente des von dieser Instanz dargestellten URIs enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.CheckHostName(System.String)">
      <summary>Bestimmt, ob der angegebene Hostname ein gültiger DNS-Name ist.</summary>
      <returns>Ein <see cref="T:System.UriHostNameType" />, der den Typ des Hostnamens angibt.Wenn der Typ des Hostnamens nicht bestimmt werden kann oder der Hostname null oder eine Zeichenfolge der Länge 0 (null) ist, gibt diese Methode <see cref="F:System.UriHostNameType.Unknown" /> zurück.</returns>
      <param name="name">Der Hostname, der überprüft werden soll.Dies kann eine IPv4- oder IPv6-Adresse oder ein Internethostname sein.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.CheckSchemeName(System.String)">
      <summary>Bestimmt, ob der angegebene Schemaname gültig ist.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn der Schemaname gültig ist, andernfalls false.</returns>
      <param name="schemeName">Der Schemaname, der validiert werden soll. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
      <summary>Vergleicht die angegebenen Teile von zwei URIs gemäß den angegebenen Vergleichsregeln.</summary>
      <returns>Ein <see cref="T:System.Int32" />-Wert, der die lexikalische Beziehung zwischen den verglichenen <see cref="T:System.Uri" />-Komponenten angibt.WertBedeutungKleiner als 0 (null)<paramref name="uri1" /> ist kleiner als <paramref name="uri2" />.Zero<paramref name="uri1" /> ist gleich <paramref name="uri2" />.Größer als 0 (null)<paramref name="uri1" /> ist größer als <paramref name="uri2" />.</returns>
      <param name="uri1">Die erste <see cref="T:System.Uri" />.</param>
      <param name="uri2">Das zweite <see cref="T:System.Uri" />.</param>
      <param name="partsToCompare">Eine bitweise Kombination der <see cref="T:System.UriComponents" />-Werte, die die Teile von <paramref name="uri1" /> und <paramref name="uri2" /> angeben, die verglichen werden sollen.</param>
      <param name="compareFormat">Einer der <see cref="T:System.UriFormat" />-Werte, der das Escapezeichen angibt, das beim Vergleichen der URI-Komponenten verwendet wird.</param>
      <param name="comparisonType">Einer der <see cref="T:System.StringComparison" />-Werte.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> ist kein gültiger <see cref="T:System.StringComparison" />-Wert.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Uri.DnsSafeHost">
      <summary>Ruft einen Hostnamen ohne Escapezeichen ab, der sicher für die DNS-Auflösung verwendet werden kann.</summary>
      <returns>Ein <see cref="T:System.String" /> mit dem Teil des Hostnamens ohne Escapezeichen im URI für die DNS-Auflösung oder die ursprüngliche Hostzeichenfolge ohne Escapezeichen, wenn diese zur Auflösung verwendet werden kann.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.Equals(System.Object)">
      <summary>Überprüft zwei <see cref="T:System.Uri" />-Instanzen auf Gleichheit.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn die zwei Instanzen denselben URI darstellen, andernfalls false.</returns>
      <param name="comparand">Die <see cref="T:System.Uri" />-Instanz oder ein URI-Bezeichner, der mit der aktuellen Instanz verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Uri.EscapeDataString(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine Darstellung mit Escapezeichen.</summary>
      <returns>Ein <see cref="T:System.String" />, der die Darstellung von <paramref name="stringToEscape" /> mit Escapezeichen enthält.</returns>
      <param name="stringToEscape">Die Zeichenfolge, die mit Escapezeichen versehen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToEscape" /> ist null. </exception>
      <exception cref="T:System.UriFormatException">In der .NET for Windows Store apps oder Portable Klassenbibliothek, fangen Sie die Ausnahme Basisklasse <see cref="T:System.FormatException" />, stattdessen.Die Länge des <paramref name="stringToEscape" /> als 32766 Zeichen.</exception>
    </member>
    <member name="M:System.Uri.EscapeUriString(System.String)">
      <summary>Konvertiert eine URI-Zeichenfolge in eine Darstellung mit Escapezeichen.</summary>
      <returns>Ein <see cref="T:System.String" />, der die Darstellung von <paramref name="stringToEscape" /> mit Escapezeichen enthält.</returns>
      <param name="stringToEscape">Die Zeichenfolge, die mit Escapezeichen versehen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToEscape" /> ist null. </exception>
      <exception cref="T:System.UriFormatException">In der .NET for Windows Store apps oder Portable Klassenbibliothek, fangen Sie die Ausnahme Basisklasse <see cref="T:System.FormatException" />, stattdessen.Die Länge des <paramref name="stringToEscape" /> als 32766 Zeichen.</exception>
    </member>
    <member name="P:System.Uri.Fragment">
      <summary>Ruft das mit Escapezeichen versehene URI-Fragment ab.</summary>
      <returns>Ein <see cref="T:System.String" />, der URI-Fragmentinformationen enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
      <summary>Ruft die angegebenen Komponenten der aktuellen Instanz mit dem angegebenen Escapeverhalten für Sonderzeichen ab.</summary>
      <returns>Ein <see cref="T:System.String" />, der die Komponenten enthält.</returns>
      <param name="components">Eine bitweise Kombination der <see cref="T:System.UriComponents" />-Werte, die angeben, welche Teile der aktuellen Instanz dem Aufrufer zurückgegeben werden sollen.</param>
      <param name="format">Einer der <see cref="T:System.UriFormat" />-Werte, die steuern, wie Sonderzeichen mit Escapezeichen versehen werden. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="uriComponents" /> ist keine Kombination von gültigen <see cref="T:System.UriComponents" />-Werten.</exception>
      <exception cref="T:System.InvalidOperationException">Der aktuelle <see cref="T:System.Uri" /> ist kein absoluter URI.Relative URIs können mit dieser Methode nicht verwendet werden.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.GetHashCode">
      <summary>Ruft den Hashcode für den URI ab.</summary>
      <returns>Ein <see cref="T:System.Int32" />, der den für diesen URI generierten Hashwert enthält.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Host">
      <summary>Ruft die Hostkomponente dieser Instanz ab.</summary>
      <returns>Ein <see cref="T:System.String" />, der den Hostnamen enthält.Das ist normalerweise der DNS-Hostname oder die IP-Adresse des Servers.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.HostNameType">
      <summary>Ruft den Typ des im URI angegebenen Hostnamens ab.</summary>
      <returns>Ein Member aus der <see cref="T:System.UriHostNameType" />-Enumeration.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IdnHost">
      <summary>Der zu RFC 3490 kompatible IDN (Internationale Domänenname) des Hosts, wofür ggf. Punycode verwendet wird.</summary>
      <returns>Gibt den Hostnamen zurück, der entsprechend dem IDN-Standard mit Punycode formatiert ist.<see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Uri.IsAbsoluteUri">
      <summary>Ruft ab, ob die <see cref="T:System.Uri" />-Instanz absolut ist.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn die <see cref="T:System.Uri" />-Instanz absolut ist, andernfalls false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.IsBaseOf(System.Uri)">
      <summary>Bestimmt, ob die aktuelle <see cref="T:System.Uri" />-Instanz eine Basis der angegebenen <see cref="T:System.Uri" />-Instanz ist.</summary>
      <returns>true, wenn die aktuelle <see cref="T:System.Uri" />-Instanz eine Basis von <paramref name="uri" /> ist, andernfalls false.</returns>
      <param name="uri">Die angegebene <see cref="T:System.Uri" />-Instanz, die getestet werden soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ist null. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsDefaultPort">
      <summary>Ruft ab, ob der Portwert im URI der Standardwert für dieses Schema ist.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn der Wert in der <see cref="P:System.Uri.Port" />-Eigenschaft der Standardport für dieses Schema ist, andernfalls false.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsFile">
      <summary>Ruft einen Wert ab, der angibt, ob der angegebene <see cref="T:System.Uri" /> ein Datei-URI ist.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn der <see cref="T:System.Uri" /> einen Datei-URI darstellt, andernfalls false.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsLoopback">
      <summary>Ruft ab, ob der angegebene <see cref="T:System.Uri" /> auf den lokalen Host verweist.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn dieser <see cref="T:System.Uri" /> auf den lokalen Host verweist, andernfalls false.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsUnc">
      <summary>Ruft ab, ob der angegebene <see cref="T:System.Uri" /> einen UNC-Pfad (Universal Naming Convention) darstellt.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn der <see cref="T:System.Uri" /> einen UNC-Pfad darstellt, andernfalls false.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.IsWellFormedOriginalString">
      <summary>Gibt an, ob die zum Erstellen dieses <see cref="T:System.Uri" /> verwendete Zeichenfolge wohlgeformt war und keine weiteren Escapezeichen eingefügt werden müssen.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn die Zeichenfolge wohlgeformt ist, andernfalls false.</returns>
    </member>
    <member name="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
      <summary>Gibt an, ob eine Zeichenfolge wohlgeformt ist, indem versucht wird, einen URI aus der Zeichenfolge zu erstellen. Es wird sichergestellt, dass keine weiteren Escapezeichen in die Zeichenfolge eingefügt werden müssen.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true  ist, wenn die Zeichenfolge wohlgeformt ist, andernfalls false.</returns>
      <param name="uriString">Die Zeichenfolge, mit der ein <see cref="T:System.Uri" /> erstellt werden soll.</param>
      <param name="uriKind">Der Typ des <see cref="T:System.Uri" /> in <paramref name="uriString" />.</param>
    </member>
    <member name="P:System.Uri.LocalPath">
      <summary>Ruft die Darstellung eines Dateinamens im lokalen Betriebssystem ab.</summary>
      <returns>Ein <see cref="T:System.String" /> mit der Darstellung eines Dateinamens im lokalen Betriebssystem.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.MakeRelativeUri(System.Uri)">
      <summary>Bestimmt den Unterschied zwischen zwei <see cref="T:System.Uri" />-Instanzen.</summary>
      <returns>Wenn der Hostname und das Schema dieser URI-Instanz mit <paramref name="uri" /> identisch sind, gibt diese Methode einen relativen <see cref="T:System.Uri" /> zurück, der beim Anfügen an die aktuelle URI-Instanz <paramref name="uri" /> liefert.Wenn der Hostname oder das Schema nicht identisch ist, gibt diese Methode einen <see cref="T:System.Uri" /> zurück, der den <paramref name="uri" />-Parameter darstellt.</returns>
      <param name="uri">Der mit dem aktuellen URI zu vergleichende URI.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ist null. </exception>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
    </member>
    <member name="M:System.Uri.op_Equality(System.Uri,System.Uri)">
      <summary>Bestimmt, ob zwei <see cref="T:System.Uri" />-Instanzen denselben Wert haben.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn die <see cref="T:System.Uri" />-Instanzen äquivalent sind, andernfalls false.</returns>
      <param name="uri1">Eine <see cref="T:System.Uri" />-Instanz, die mit <paramref name="uri2" /> verglichen werden soll. </param>
      <param name="uri2">Eine <see cref="T:System.Uri" />-Instanz, die mit <paramref name="uri1" /> verglichen werden soll. </param>
      <filterpriority>3</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.op_Inequality(System.Uri,System.Uri)">
      <summary>Bestimmt, ob zwei <see cref="T:System.Uri" />-Instanzen verschiedene Werte haben.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn die beiden <see cref="T:System.Uri" />-Instanzen ungleich sind, andernfalls false.Wenn einer der Parameter null ist, gibt diese Methode true zurück.</returns>
      <param name="uri1">Eine <see cref="T:System.Uri" />-Instanz, die mit <paramref name="uri2" /> verglichen werden soll. </param>
      <param name="uri2">Eine <see cref="T:System.Uri" />-Instanz, die mit <paramref name="uri1" /> verglichen werden soll. </param>
      <filterpriority>3</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.OriginalString">
      <summary>Ruft die ursprüngliche URI-Zeichenfolge ab, die an den <see cref="T:System.Uri" />-Konstruktor übergeben wurde.</summary>
      <returns>Ein <see cref="T:System.String" />, der exakt den URI enthält, der beim Erstellen dieser Instanz angegeben wurde, andernfalls <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.PathAndQuery">
      <summary>Ruft die durch ein Fragezeichen (?) getrennten Werte der <see cref="P:System.Uri.AbsolutePath" />-Eigenschaft und der <see cref="P:System.Uri.Query" />-Eigenschaft ab.</summary>
      <returns>Ein <see cref="T:System.String" />, der die durch ein Fragezeichen (?) getrennten Werte der <see cref="P:System.Uri.AbsolutePath" />-Eigenschaft und der <see cref="P:System.Uri.Query" />-Eigenschaft enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Port">
      <summary>Ruft die Anschlussnummer dieses URIs ab.</summary>
      <returns>Ein <see cref="T:System.Int32" />-Wert, der die Portnummer für diesen URI enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Query">
      <summary>Ruft im angegebenen URI enthaltene Abfrageinformationen ab.</summary>
      <returns>Ein <see cref="T:System.String" /> mit den im angegebenen URI enthaltenen Abfrageinformationen.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Scheme">
      <summary>Ruft den Namen des Schemas für diesen URI ab.</summary>
      <returns>Ein <see cref="T:System.String" />, der das in Kleinbuchstaben umgewandelte Schema für diesen URI enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Segments">
      <summary>Ruft ein Array mit den Pfadsegmenten ab, aus denen sich der angegebene URI zusammensetzt.</summary>
      <returns>Ein <see cref="T:System.String" />-Array mit den Pfadsegmenten, aus denen sich der angegebene URI zusammensetzt.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.ToString">
      <summary>Ruft eine kanonische Zeichenfolgenentsprechung der angegebenen <see cref="T:System.Uri" />-Instanz ab.</summary>
      <returns>Eine <see cref="T:System.String" />-Instanz, die eine kanonische Darstellung der <see cref="T:System.Uri" />-Instanz enthält, die nicht mit Escapezeichen versehen wurde.#, ? und % sind die einzigen Zeichen, die mit Escapezeichen versehen sind.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)">
      <summary>Erstellt mit der angegebenen <see cref="T:System.Uri" />-Instanz und einer <see cref="T:System.String" /> einen neuen <see cref="T:System.UriKind" />.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn der <see cref="T:System.Uri" /> erfolgreich erstellt wurde, andernfalls false.</returns>
      <param name="uriString">Der <see cref="T:System.String" />, der den <see cref="T:System.Uri" /> darstellt.</param>
      <param name="uriKind">Der Typ des Uris.</param>
      <param name="result">Diese Methode gibt den erstellten <see cref="T:System.Uri" /> zurück.</param>
    </member>
    <member name="M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)">
      <summary>Erstellt mit der angegebenen Basis und den relativen <see cref="T:System.Uri" />-Instanzen einen neuen <see cref="T:System.String" />.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn der <see cref="T:System.Uri" /> erfolgreich erstellt wurde, andernfalls false.</returns>
      <param name="baseUri">Der Basis-<see cref="T:System.Uri" />.</param>
      <param name="relativeUri">Der relative <see cref="T:System.Uri" />, dargestellt als ein <see cref="T:System.String" />, der dem Basis-<see cref="T:System.Uri" /> hinzugefügt werden soll.</param>
      <param name="result">Enthält nach dem Beenden der Methode einen aus <see cref="T:System.Uri" /> und <paramref name="baseUri" /> erstellten <paramref name="relativeUri" />.Dieser Parameter wird nicht initialisiert übergeben.</param>
    </member>
    <member name="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
      <summary>Erstellt mit der angegebenen Basis und den relativen <see cref="T:System.Uri" />-Instanzen einen neuen <see cref="T:System.Uri" />.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn der <see cref="T:System.Uri" /> erfolgreich erstellt wurde, andernfalls false.</returns>
      <param name="baseUri">Der Basis-<see cref="T:System.Uri" />. </param>
      <param name="relativeUri">Der relative <see cref="T:System.Uri" />, der dem Basis-<see cref="T:System.Uri" /> hinzugefügt werden soll. </param>
      <param name="result">Enthält nach dem Beenden der Methode einen aus <see cref="T:System.Uri" /> und <paramref name="baseUri" /> erstellten <paramref name="relativeUri" />.Dieser Parameter wird nicht initialisiert übergeben.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" /> ist null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.UnescapeDataString(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine Darstellung ohne Escapezeichen.</summary>
      <returns>Ein <see cref="T:System.String" />, der die Darstellung von <paramref name="stringToUnescape" /> ohne Escapezeichen enthält. </returns>
      <param name="stringToUnescape">Die Zeichenfolge, deren Escapezeichen entfernt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToUnescape" /> ist null. </exception>
    </member>
    <member name="P:System.Uri.UserEscaped">
      <summary>Gibt an, dass die URI-Zeichenfolge vor dem Erstellen der <see cref="T:System.Uri" />-Instanz vollständig mit Escapezeichen versehen war.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn der <paramref name="dontEscape" />-Parameter auf true festgelegt wurde, als die <see cref="T:System.Uri" />-Instanz erstellt wurde, andernfalls false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Uri.UserInfo">
      <summary>Ruft Benutzernamen, Kennwort oder weitere benutzerspezifische Informationen ab, die dem angegebenen URI zugeordnet sind.</summary>
      <returns>Ein <see cref="T:System.String" />, der die dem URI zugeordneten Benutzerinformationen enthält.Der zurückgegebene Wert schließt nicht das '@'-Zeichen ein, das zum Begrenzen des Benutzerinformationsteils des URIs reserviert ist.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.UriComponents">
      <summary>Gibt die Teile von einem <see cref="T:System.Uri" /> an.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UriComponents.AbsoluteUri">
      <summary>Die Daten <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.UserInfo" />, <see cref="P:System.Uri.Host" />, <see cref="P:System.Uri.Port" />, <see cref="P:System.Uri.LocalPath" />, <see cref="P:System.Uri.Query" /> und <see cref="P:System.Uri.Fragment" />.</summary>
    </member>
    <member name="F:System.UriComponents.Fragment">
      <summary>Die <see cref="P:System.Uri.Fragment" />-Daten.</summary>
    </member>
    <member name="F:System.UriComponents.Host">
      <summary>Die <see cref="P:System.Uri.Host" />-Daten.</summary>
    </member>
    <member name="F:System.UriComponents.HostAndPort">
      <summary>Die <see cref="P:System.Uri.Host" />-Daten und die <see cref="P:System.Uri.Port" />-Daten.Wenn der URI keine Anschlussdaten enthält und dem <see cref="P:System.Uri.Scheme" /> ein Standardanschluss zugewiesen ist, wird der Standardanschluss zurückgegeben.Wenn kein Standardanschluss vorhanden ist, wird -1 zurückgegeben.</summary>
    </member>
    <member name="F:System.UriComponents.HttpRequestUrl">
      <summary>Die Daten <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.Host" />, <see cref="P:System.Uri.Port" />, <see cref="P:System.Uri.LocalPath" /> und <see cref="P:System.Uri.Query" />.</summary>
    </member>
    <member name="F:System.UriComponents.KeepDelimiter">
      <summary>Gibt an, dass das Trennzeichen eingeschlossen werden soll.</summary>
    </member>
    <member name="F:System.UriComponents.NormalizedHost">
      <summary>Die normalisierte Form des <see cref="P:System.Uri.Host" />.</summary>
    </member>
    <member name="F:System.UriComponents.Path">
      <summary>Die <see cref="P:System.Uri.LocalPath" />-Daten.</summary>
    </member>
    <member name="F:System.UriComponents.PathAndQuery">
      <summary>Die <see cref="P:System.Uri.LocalPath" />-Daten und die <see cref="P:System.Uri.Query" />-Daten.Siehe auch <see cref="P:System.Uri.PathAndQuery" />.</summary>
    </member>
    <member name="F:System.UriComponents.Port">
      <summary>Die <see cref="P:System.Uri.Port" />-Daten.</summary>
    </member>
    <member name="F:System.UriComponents.Query">
      <summary>Die <see cref="P:System.Uri.Query" />-Daten.</summary>
    </member>
    <member name="F:System.UriComponents.Scheme">
      <summary>Die <see cref="P:System.Uri.Scheme" />-Daten.</summary>
    </member>
    <member name="F:System.UriComponents.SchemeAndServer">
      <summary>Die Daten <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.Host" /> und <see cref="P:System.Uri.Port" />.</summary>
    </member>
    <member name="F:System.UriComponents.SerializationInfoString">
      <summary>Der vollständige für die URI-Serialisierung erforderliche <see cref="T:System.Uri" />-Kontext.Der Kontext schließt den IPv6-Bereich ein.</summary>
    </member>
    <member name="F:System.UriComponents.StrongAuthority">
      <summary>Die Daten <see cref="P:System.Uri.UserInfo" />, <see cref="P:System.Uri.Host" /> und <see cref="P:System.Uri.Port" />.Wenn der <see cref="T:System.Uri" /> keine Anschlussdaten enthält und dem <see cref="P:System.Uri.Scheme" /> ein Standardanschluss zugewiesen ist, wird der Standardanschluss zurückgegeben.Wenn kein Standardanschluss vorhanden ist, wird -1 zurückgegeben.</summary>
    </member>
    <member name="F:System.UriComponents.StrongPort">
      <summary>Die <see cref="P:System.Uri.Port" />-Daten.Wenn der <see cref="T:System.Uri" /> keine Anschlussdaten enthält und dem <see cref="P:System.Uri.Scheme" /> ein Standardanschluss zugewiesen ist, wird der Standardanschluss zurückgegeben.Wenn kein Standardanschluss vorhanden ist, wird -1 zurückgegeben.</summary>
    </member>
    <member name="F:System.UriComponents.UserInfo">
      <summary>Die <see cref="P:System.Uri.UserInfo" />-Daten.</summary>
    </member>
    <member name="T:System.UriFormat">
      <summary>Steuert, wie URI-Informationen mit Escapezeichen versehen werden.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UriFormat.SafeUnescaped">
      <summary>Die Escapezeichen von Zeichen, die in den angeforderten URI-Komponenten eine reservierte Bedeutung haben, werden nicht entfernt.Alle anderen Zeichen werden nicht mit Escapezeichen versehen.Siehe Hinweise.</summary>
    </member>
    <member name="F:System.UriFormat.Unescaped">
      <summary>Es werden keine Escapezeichen hinzugefügt.</summary>
    </member>
    <member name="F:System.UriFormat.UriEscaped">
      <summary>Gemäß den Regeln in RFC 2396 werden Escapezeichen hinzugefügt.</summary>
    </member>
    <member name="T:System.UriFormatException">
      <summary>Eine Ausnahme, die bei Feststellung eines ungültigen URIs (Uniform Resource Identifier) ausgelöst wird.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UriFormatException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriFormatException" />-Klasse.</summary>
    </member>
    <member name="M:System.UriFormatException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriFormatException" />-Klasse mit der angegebenen Meldung.</summary>
      <param name="textString">Die Zeichenfolge der Fehlermeldung. </param>
    </member>
    <member name="M:System.UriFormatException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriFormatException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="textString">Die Meldung, in der die Ausnahme beschrieben wirdDer Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="e">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.UriHostNameType">
      <summary>Definiert die Typen von Hostnamen für die <see cref="M:System.Uri.CheckHostName(System.String)" />-Methode.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UriHostNameType.Basic">
      <summary>Der Host ist festgelegt, aber der Typ kann nicht bestimmt werden.</summary>
    </member>
    <member name="F:System.UriHostNameType.Dns">
      <summary>Der Hostname ist ein Hostname im DNS-Format (Domain Name System).</summary>
    </member>
    <member name="F:System.UriHostNameType.IPv4">
      <summary>Der Hostname ist eine Hostadresse für IP, Version 4 (Internetprotokoll).</summary>
    </member>
    <member name="F:System.UriHostNameType.IPv6">
      <summary>Der Hostname ist eine Hostadresse für IP, Version 6 (Internetprotokoll).</summary>
    </member>
    <member name="F:System.UriHostNameType.Unknown">
      <summary>Der Typ des Hostnamens ist nicht angegeben.</summary>
    </member>
    <member name="T:System.UriKind">
      <summary>Definiert die Arten von <see cref="T:System.Uri" />s für die <see cref="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)" /> und mehrere <see cref="Overload:System.Uri.#ctor" />-Methoden.</summary>
    </member>
    <member name="F:System.UriKind.Absolute">
      <summary>Der URI ist ein absoluter URI.</summary>
    </member>
    <member name="F:System.UriKind.Relative">
      <summary>Der URI ist ein relativer URI.</summary>
    </member>
    <member name="F:System.UriKind.RelativeOrAbsolute">
      <summary>Die Art des URIs ist unbestimmt.</summary>
    </member>
    <member name="T:System.ValueType">
      <summary>Stellt die Basisklasse für Werttypen bereit.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ValueType.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ValueType" />-Klasse. </summary>
    </member>
    <member name="M:System.ValueType.Equals(System.Object)">
      <summary>Gibt an, ob diese Instanz und ein angegebenes Objekt gleich sind.</summary>
      <returns>true, wenn <paramref name="obj" /> und diese Instanz denselben Typ aufweisen und denselben Wert darstellen, andernfalls false. </returns>
      <param name="obj">Das Objekt, das mit der aktuellen Instanz verglichen werden soll. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ValueType.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen. Diese ist der Hashcode für die Instanz.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ValueType.ToString">
      <summary>Gibt den voll qualifizierten Typnamen dieser Instanz zurück.</summary>
      <returns>Eine <see cref="T:System.String" />-Klasse, die den voll qualifizierten Typnamen enthält.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Version">
      <summary>Stellt die Versionsnummer einer Assembly, eines Betriebssystems oder der Common Language Runtime dar.Diese Klasse kann nicht vererbt werden.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.#ctor(System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Version" />-Klasse mit den angegebenen Werten für Haupt- und Nebenversion.</summary>
      <param name="major">Die Hauptversionsnummer. </param>
      <param name="minor">Die Nebenversionsnummer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="major" /> or <paramref name="minor" /> is less than zero. </exception>
    </member>
    <member name="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Version" />-Klasse mit den angegebenen Werten für Haupt- und Nebenversion.</summary>
      <param name="major">Die Hauptversionsnummer. </param>
      <param name="minor">Die Nebenversionsnummer. </param>
      <param name="build">Die Buildnummer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="major" />, <paramref name="minor" />, or <paramref name="build" /> is less than zero. </exception>
    </member>
    <member name="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Version" />-Klasse mit den angegebenen Hauptversions-, Nebenversions-, Build- und Revisionsnummern.</summary>
      <param name="major">Die Hauptversionsnummer. </param>
      <param name="minor">Die Nebenversionsnummer. </param>
      <param name="build">Die Buildnummer. </param>
      <param name="revision">Die Revisionsnummer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="major" />, <paramref name="minor" />, <paramref name="build" />, or <paramref name="revision" /> is less than zero. </exception>
    </member>
    <member name="M:System.Version.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Version" />-Klasse unter Verwendung der angegebenen Zeichenfolge.</summary>
      <param name="version">Eine Zeichenfolge, die die Nummern für Haupt- und Nebenversion, Build und Revision enthält, wobei sämtliche Nummern durch Punkte (".") getrennt sind. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="version" /> has fewer than two components or more than four components. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A major, minor, build, or revision component is less than zero. </exception>
      <exception cref="T:System.FormatException">At least one component of <paramref name="version" /> does not parse to an integer. </exception>
      <exception cref="T:System.OverflowException">At least one component of <paramref name="version" /> represents a number greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="P:System.Version.Build">
      <summary>Ruft den Wert der Buildkomponente der Versionsnummer für das aktuelle <see cref="T:System.Version" />-Objekt ab.</summary>
      <returns>Die Buildnummer oder -1, wenn diese nicht definiert ist.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.CompareTo(System.Version)">
      <summary>Vergleicht das aktuelle <see cref="T:System.Version" />-Objekt mit einem angegebenen <see cref="T:System.Version" />-Objekt und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relativen Werte der beiden Objekte angibt, wie in der folgenden Tabelle veranschaulicht.Rückgabewert Bedeutung Kleiner als 0 (null) Das aktuelle <see cref="T:System.Version" />-Objekt ist eine Version vor <paramref name="value" />. Zero Das aktuelle <see cref="T:System.Version" />-Objekt ist mit der Version <paramref name="value" /> identisch. Größer als 0 (null) Das aktuelle <see cref="T:System.Version" />-Objekt ist eine Version nach <paramref name="value" />. - oder - <paramref name="value" /> ist null.</returns>
      <param name="value">Ein <see cref="T:System.Version" />-Objekt, das mit dem aktuellen <see cref="T:System.Version" />-Objekt verglichen werden soll, oder null.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob das aktuelle <see cref="T:System.Version" />-Objekt einem angegebenen Objekt entspricht.</summary>
      <returns>true, wenn das aktuelle <see cref="T:System.Version" />-Objekt und <paramref name="obj" /> jeweils <see cref="T:System.Version" />-Objekte sind und jede Komponente des aktuellen <see cref="T:System.Version" />-Objekts mit der entsprechenden Komponente von <paramref name="obj" /> übereinstimmt, andernfalls false.</returns>
      <param name="obj">Ein Objekt, das mit dem aktuellen <see cref="T:System.Version" />-Objekt verglichen werden soll, oder null. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.Equals(System.Version)">
      <summary>Gibt einen Wert zurück, der angibt, ob das aktuelle <see cref="T:System.Version" />-Objekt und ein angegebenes <see cref="T:System.Version" />-Objekt denselben Wert darstellen.</summary>
      <returns>true, wenn jede Komponente des aktuellen <see cref="T:System.Version" />-Objekts mit der entsprechenden Komponente des <paramref name="obj" />-Parameters übereinstimmt, andernfalls false.</returns>
      <param name="obj">Ein <see cref="T:System.Version" />-Objekt, das mit dem aktuellen <see cref="T:System.Version" />-Objekt verglichen werden soll, oder null.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.GetHashCode">
      <summary>Gibt für das aktuelle <see cref="T:System.Version" />-Objekt einen Hashcode zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Version.Major">
      <summary>Ruft den Wert der Hauptkomponente der Versionsnummer für das aktuelle <see cref="T:System.Version" />-Objekt ab.</summary>
      <returns>Die Hauptversionsnummer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Version.MajorRevision">
      <summary>Ruft die oberen 16 Bits der Revisionsnummer ab.</summary>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen.</returns>
    </member>
    <member name="P:System.Version.Minor">
      <summary>Ruft den Wert der Nebenkomponente der Versionsnummer für das aktuelle <see cref="T:System.Version" />-Objekt ab.</summary>
      <returns>Die Nebenversionsnummer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Version.MinorRevision">
      <summary>Ruft die unteren 16 Bits der Revisionsnummer ab.</summary>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Version.op_Equality(System.Version,System.Version)">
      <summary>Bestimmt, ob zwei <see cref="T:System.Version" />-Objekte gleich sind.</summary>
      <returns>true, wenn <paramref name="v1" /> gleich <paramref name="v2" /> ist, andernfalls false.</returns>
      <param name="v1">Das erste <see cref="T:System.Version" />-Objekt. </param>
      <param name="v2">Das zweite <see cref="T:System.Version" />-Objekt. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_GreaterThan(System.Version,System.Version)">
      <summary>Bestimmt, ob das erste angegebene <see cref="T:System.Version" />-Objekt größer als das zweite angegebene <see cref="T:System.Version" />-Objekt ist.</summary>
      <returns>true, wenn <paramref name="v1" /> größer als <paramref name="v2" /> ist, andernfalls false.</returns>
      <param name="v1">Das erste <see cref="T:System.Version" />-Objekt. </param>
      <param name="v2">Das zweite <see cref="T:System.Version" />-Objekt. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
      <summary>Bestimmt, ob das erste angegebene <see cref="T:System.Version" />-Objekt größer oder gleich dem zweiten angegebenen <see cref="T:System.Version" />-Objekt ist.</summary>
      <returns>true, wenn <paramref name="v1" /> größer oder gleich <paramref name="v2" /> ist, andernfalls false.</returns>
      <param name="v1">Das erste <see cref="T:System.Version" />-Objekt. </param>
      <param name="v2">Das zweite <see cref="T:System.Version" />-Objekt. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_Inequality(System.Version,System.Version)">
      <summary>Bestimmt, ob zwei angegebene <see cref="T:System.Version" />-Objekte ungleich sind.</summary>
      <returns>true, wenn <paramref name="v1" /> ungleich <paramref name="v2" /> ist, andernfalls false.</returns>
      <param name="v1">Das erste <see cref="T:System.Version" />-Objekt. </param>
      <param name="v2">Das zweite <see cref="T:System.Version" />-Objekt. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_LessThan(System.Version,System.Version)">
      <summary>Bestimmt, ob das erste angegebene <see cref="T:System.Version" />-Objekt kleiner als das zweite angegebene <see cref="T:System.Version" />-Objekt ist.</summary>
      <returns>true, wenn <paramref name="v1" /> kleiner als <paramref name="v2" /> ist, andernfalls false.</returns>
      <param name="v1">Das erste <see cref="T:System.Version" />-Objekt. </param>
      <param name="v2">Das zweite <see cref="T:System.Version" />-Objekt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="v1" /> is null. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
      <summary>Bestimmt, ob das erste angegebene <see cref="T:System.Version" />-Objekt kleiner oder gleich dem zweiten <see cref="T:System.Version" />-Objekt ist.</summary>
      <returns>true, wenn <paramref name="v1" /> kleiner oder gleich <paramref name="v2" /> ist, andernfalls false.</returns>
      <param name="v1">Das erste <see cref="T:System.Version" />-Objekt. </param>
      <param name="v2">Das zweite <see cref="T:System.Version" />-Objekt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="v1" /> is null. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.Parse(System.String)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Versionsnummer in ein entsprechendes <see cref="T:System.Version" />-Objekt.</summary>
      <returns>Ein Objekt, das der im <paramref name="input" />-Parameter angegebenen Versionsnummer entspricht.</returns>
      <param name="input">Eine Zeichenfolge, die eine zu konvertierende Versionsnummer enthält.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="input" /> has fewer than two or more than four version components.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">At least one component in <paramref name="input" /> is less than zero.</exception>
      <exception cref="T:System.FormatException">At least one component in <paramref name="input" /> is not an integer.</exception>
      <exception cref="T:System.OverflowException">At least one component in <paramref name="input" /> represents a number that is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="P:System.Version.Revision">
      <summary>Ruft den Wert der Revisionskomponente der Versionsnummer für das aktuelle <see cref="T:System.Version" />-Objekt ab.</summary>
      <returns>Die Revisionsnummer oder -1, wenn diese nicht definiert ist.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.System#IComparable#CompareTo(System.Object)">
      <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine Ganzzahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine Ganzzahl mit Vorzeichen, die die relative Reihenfolge dieser Instanz und <paramref name="value" /> angibt.Rückgabewert Bedeutung Kleiner als 0 (null) Diese Instanz befindet sich in der Sortierreihenfolge vor <paramref name="value" />.Zero Diese Instanz tritt an der gleichen Position wie <paramref name="value" /> in der Sortierreihenfolge auf.Größer als 0 (null) Diese Instanz folgt in der Sortierreihenfolge auf <paramref name="value" />.- oder -  <paramref name="value" /> ist null. </returns>
      <param name="version">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Version" /> object. </exception>
    </member>
    <member name="M:System.Version.ToString">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.Version" />-Objekts in die entsprechende <see cref="T:System.String" />-Darstellung.</summary>
      <returns>Die <see cref="T:System.String" />-Darstellung der Werte der Komponenten Hauptversion, Nebenversion, Build und Revision des aktuellen <see cref="T:System.Version" />-Objekts gemäß folgendem Format.Die einzelnen Komponenten sind durch Punkte (".") getrennt.Eckige Klammern ("[" und "]") geben eine Komponente an, die bei fehlender Definition nicht im Rückgabewert enthalten ist:Hauptversion.Nebenversion[.Build[.Revision]] Wenn Sie z. B. ein <see cref="T:System.Version" />-Objekt mithilfe des Konstruktors Version(1,1) erstellen, ist die zurückgegebene Zeichenfolge "1.1".Wenn Sie ein <see cref="T:System.Version" />-Objekt mithilfe des Konstruktors Version(1,3,4,2) erstellen, ist die zurückgegebene Zeichenfolge "1.3.4.2".</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.ToString(System.Int32)">
      <summary>Konvertiert den Wert des aktuellen <see cref="T:System.Version" />-Objekts in die entsprechende <see cref="T:System.String" />-Darstellung.Eine angegebene Anzahl bezieht sich auf die Anzahl der zurückzugebenden Komponenten.</summary>
      <returns>Die <see cref="T:System.String" />-Darstellung der Werte der Komponenten Hauptversion, Nebenversion, Build und Revision des aktuellen <see cref="T:System.Version" />-Objekts, wobei diese durch Punkte (".") getrennt sind.Der <paramref name="fieldCount" />-Parameter bestimmt die Anzahl der zurückgegebenen Komponenten.fieldCount Rückgabewert 0 Eine leere Zeichenfolge (""). 1 Hauptversion 2 Hauptversion.Nebenversion 3 Hauptversion.Nebenversion.Build 4 Hauptversion.Nebenversion.Build.Revision Wenn Sie z. B. ein <see cref="T:System.Version" />-Objekt mithilfe des Konstruktors Version(1,3,5) erstellen, gibt ToString(2) "1.3" zurück, und ToString(4) löst eine Ausnahme aus.</returns>
      <param name="fieldCount">Die Anzahl der zurückzugebenden Komponenten.Für <paramref name="fieldCount" /> sind Werte zwischen 0 und 4 möglich.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fieldCount" /> is less than 0, or more than 4.-or- <paramref name="fieldCount" /> is more than the number of components defined in the current <see cref="T:System.Version" /> object. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.TryParse(System.String,System.Version@)">
      <summary>Versucht, die Zeichenfolgendarstellung einer Versionsnummer in ein entsprechendes <see cref="T:System.Version" />-Objekt zu konvertieren, und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich durchgeführt wurde.</summary>
      <returns>true, wenn der <paramref name="input" />-Parameter erfolgreich konvertiert wurde, andernfalls false.</returns>
      <param name="input">Eine Zeichenfolge, die eine zu konvertierende Versionsnummer enthält.</param>
      <param name="result">Die Rückgabe dieser Methode enthält die <see cref="T:System.Version" />-Entsprechung der in <paramref name="input" /> enthaltenen Nummer, wenn die Konvertierung erfolgreich war, oder ein <see cref="T:System.Version" />-Objekt, dessen Haupt- und Nebenversionsnummer 0 (null) ist, wenn die Konvertierung fehlgeschlagen ist.Wenn <paramref name="input" />null oder <see cref="F:System.String.Empty" /> ist, ist <paramref name="result" />null, wenn die Methode zurückgibt.</param>
    </member>
    <member name="T:System.Void">
      <summary>Gibt einen Rückgabewerttyp für eine Methode an, die keinen Wert zurückgibt.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.WeakReference">
      <summary>Stellt einen schwachen Verweis dar. Dieser verweist auf ein Objekt, ohne jedoch dessen Freigabe durch die Garbage Collection zu verhindern.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.WeakReference.#ctor(System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.WeakReference" />-Klasse, die auf das angegebene Objekt verweist.</summary>
      <param name="target">Das zu verfolgende Objekt oder null. </param>
    </member>
    <member name="M:System.WeakReference.#ctor(System.Object,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.WeakReference" />-Klasse, die auf das angegebene Objekt verweist und auf die angegebene Art verfolgt, wie es wieder zugänglich gemacht wird.</summary>
      <param name="target">Ein zu verfolgendes Objekt. </param>
      <param name="trackResurrection">Gibt an, wann das Verfolgen des Objekts beendet werden soll.Bei true wird das Objekt auch nach seiner Finalisierung verfolgt, bei false wird das Objekt nur bis zur Finalisierung verfolgt.</param>
    </member>
    <member name="M:System.WeakReference.Finalize">
      <summary>Verwirft den Verweis auf das Ziel, das durch das aktuelle <see cref="T:System.WeakReference" />-Objekt dargestellt wird.</summary>
    </member>
    <member name="P:System.WeakReference.IsAlive">
      <summary>Ruft einen Wert ab, der angibt, ob das Objekt, auf das das aktuelle <see cref="T:System.WeakReference" />-Objekt verweist, an den Garbage Collector übergeben wurde.</summary>
      <returns>true, wenn das Objekt, auf das dieses aktuelle <see cref="T:System.WeakReference" />-Objekt verweist, nicht an den Garbage Collector übergeben wurde und weiterhin verfügbar ist, andernfalls false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.WeakReference.Target">
      <summary>Ruft das Objekt (das Ziel) ab, auf das das aktuelle <see cref="T:System.WeakReference" />-Objekt verweist, oder legt dieses fest.</summary>
      <returns>null, wenn das Objekt, auf das das aktuelle <see cref="T:System.WeakReference" />-Objekt verweist, an den Garbage Collector übergeben wurde, andernfalls ein Verweis auf das Objekt, auf das das aktuelle <see cref="T:System.WeakReference" />-Objekt verweist.</returns>
      <exception cref="T:System.InvalidOperationException">Der Verweis auf das Zielobjekt ist ungültig.Diese Ausnahme kann beim Festlegen dieser Eigenschaft ausgelöst werden, wenn der Wert ein NULL-Verweis ist oder wenn das Objekt beim set-Vorgang finalisiert wurde.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.WeakReference.TrackResurrection">
      <summary>Ruft eine Angabe darüber ab, ob das Objekt, auf das das aktuelle <see cref="T:System.WeakReference" />-Objekt verweist, nach der Finalisierung verfolgt wird.</summary>
      <returns>true, wenn das Objekt, auf das das aktuelle <see cref="T:System.WeakReference" />-Objekt verweist, nach seiner Finalisierung verfolgt wird, oder false, wenn das Objekt nur bis zur Finalisierung verfolgt wird.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.WeakReference`1">
      <summary>Stellt einen schwachen typisierten Verweis dar. Dieser verweist auf ein Objekt, ohne jedoch dessen Freigabe durch die Garbage Collection zu verhindern.</summary>
      <typeparam name="T">Der Typ des Objekts, auf das verwiesen wird.</typeparam>
    </member>
    <member name="M:System.WeakReference`1.#ctor(`0)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.WeakReference`1" />-Klasse, die auf das angegebene Objekt verweist.</summary>
      <param name="target">Das Objekt, auf das verwiesen werden soll, oder null.</param>
    </member>
    <member name="M:System.WeakReference`1.#ctor(`0,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.WeakReference`1" />-Klasse, die auf das angegebene Objekt verweist und auf die angegebene Art verfolgt, wie es wieder zugänglich gemacht wird.</summary>
      <param name="target">Das Objekt, auf das verwiesen werden soll, oder null.</param>
      <param name="trackResurrection">true, um das Objekt nach der Finalisierung zu verfolgen, false, um das Objekt nur bis zur Finalisierung zu verfolgen.</param>
    </member>
    <member name="M:System.WeakReference`1.Finalize">
      <summary>Verwirft den Verweis auf das Ziel, das durch das aktuelle <see cref="T:System.WeakReference`1" />-Objekt dargestellt wird.</summary>
    </member>
    <member name="M:System.WeakReference`1.SetTarget(`0)">
      <summary>Legt das Zielobjekt fest, auf das dieses <see cref="T:System.WeakReference`1" />-Objekt verweist.</summary>
      <param name="target">Das neue Zielobjekt.</param>
    </member>
    <member name="M:System.WeakReference`1.TryGetTarget(`0@)">
      <summary>Versucht, das Zielobjekt abzurufen, auf das das aktuelle <see cref="T:System.WeakReference`1" />-Objekt verweist.</summary>
      <returns>true, wenn das Ziel abgerufen wurde; andernfalls false.</returns>
      <param name="target">Enthält nach dem Beenden dieser Methode das Zielobjekt, sofern verfügbar.Dieser Parameter wird nicht initialisiert behandelt.</param>
    </member>
    <member name="T:System.Collections.DictionaryEntry">
      <summary>Definiert ein Schlüssel-Wert-Paar für ein Wörterbuch, das festgelegt oder abgerufen werden kann.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.DictionaryEntry.#ctor(System.Object,System.Object)">
      <summary>Initialisiert eine Instanz des <see cref="T:System.Collections.DictionaryEntry" />-Typs mit dem angegebenen Schlüssel und Wert.</summary>
      <param name="key">Das Objekt, das in jedem Schlüssel-Wert-Paar definiert ist. </param>
      <param name="value">Die <paramref name="key" /> zugeordnete Definition. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null, und die .NET Framework-Version ist 1.0 oder 1.1. </exception>
    </member>
    <member name="P:System.Collections.DictionaryEntry.Key">
      <summary>Ruft den Schlüssel im Schlüssel-Wert-Paar ab oder legt diesen fest.</summary>
      <returns>Der Schlüssel im Schlüssel-Wert-Paar.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Collections.DictionaryEntry.Value">
      <summary>Ruft den Wert im Schlüssel-Wert-Paar ab oder legt diesen fest.</summary>
      <returns>Der Wert im Schlüssel-Wert-Paar.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Collections.ICollection">
      <summary>Definiert Größe, Enumeratoren und Synchronisierungsmethoden für alle nicht generischen Auflistungen.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Elemente der <see cref="T:System.Collections.ICollection" /> in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus <see cref="T:System.Collections.ICollection" /> kopierten Elemente ist.Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.- oder - Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.ICollection" /> überschreitet den verfügbaren Platz vom <paramref name="index" /> bis zum Ende des Ziel-<paramref name="array" />.- oder -Der Typ der Quell-<see cref="T:System.Collections.ICollection" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.ICollection.Count">
      <summary>Ruft die Anzahl der Elemente ab, die in <see cref="T:System.Collections.ICollection" /> enthalten sind.</summary>
      <returns>Die Anzahl der Elemente, die in <see cref="T:System.Collections.ICollection" /> enthalten sind.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.ICollection.IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns>true, wenn der Zugriff auf das <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.ICollection.SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IComparer">
      <summary>Stellt eine Methode für den Vergleich zweier Objekte bereit.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IComparer.Compare(System.Object,System.Object)">
      <summary>Vergleicht zwei Objekte und gibt einen Wert zurück, der angibt, ob ein Wert niedriger, gleich oder größer als der andere Wert ist.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relativen Werte von <paramref name="x" /> und <paramref name="y" /> angibt, wie in der folgenden Tabelle veranschaulicht.Wert Bedeutung Kleiner als 0 <paramref name="x" /> ist kleiner als <paramref name="y" />. Zero <paramref name="x" /> ist gleich <paramref name="y" />. Größer als 0 (null) <paramref name="x" /> ist größer als <paramref name="y" />. </returns>
      <param name="x">Das erste zu vergleichende Objekt. </param>
      <param name="y">Das zweite zu vergleichende Objekt. </param>
      <exception cref="T:System.ArgumentException">Weder <paramref name="x" /> noch <paramref name="y" /> implementieren die <see cref="T:System.IComparable" />-Schnittstelle.- oder - <paramref name="x" /> und <paramref name="y" /> sind nicht vom gleichen Typ. Keines der beiden kann einen Vergleich mit dem jeweils anderen Objekt behandeln. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IDictionary">
      <summary>Stellt eine nicht generische Auflistung von Schlüssel-Wert-Paaren dar.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
      <summary>Fügt dem <see cref="T:System.Collections.IDictionary" />-Objekt ein Element mit dem angegebenen Schlüssel und Wert hinzu.</summary>
      <param name="key">Das <see cref="T:System.Object" />, das als Schlüssel für das hinzuzufügende Element verwendet werden soll. </param>
      <param name="value">Das <see cref="T:System.Object" />, das als Wert für das hinzuzufügende Element verwendet werden soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null. </exception>
      <exception cref="T:System.ArgumentException">Ein Element mit demselben Schlüssel ist im <see cref="T:System.Collections.IDictionary" />-Objekt  bereits vorhanden. </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IDictionary" /> ist schreibgeschützt.- oder -  <see cref="T:System.Collections.IDictionary" /> hat eine feste Größe. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Clear">
      <summary>Entfernt alle Elemente aus dem <see cref="T:System.Collections.IDictionary" />-Objekt.</summary>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.IDictionary" />-Objekt ist schreibgeschützt. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Contains(System.Object)">
      <summary>Ermittelt, ob das <see cref="T:System.Collections.IDictionary" />-Objekt ein Element mit dem angegebenen Schlüssel enthält.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.IDictionary" /> ein Element mit dem Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der im <see cref="T:System.Collections.IDictionary" />-Objekt zu suchende Schlüssel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.GetEnumerator">
      <summary>Gibt ein <see cref="T:System.Collections.IDictionaryEnumerator" />-Objekt für das <see cref="T:System.Collections.IDictionary" />-Objekt zurück.</summary>
      <returns>Ein <see cref="T:System.Collections.IDictionaryEnumerator" />-Objekt für das <see cref="T:System.Collections.IDictionary" />-Objekt.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.IDictionary" />-Objekt eine feste Größe hat.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.IDictionary" />-Objekt eine feste Größe hat, andernfalls false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.IDictionary" /> schreibgeschützt ist.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.IDictionary" />-Objekt schreibgeschützt ist, andernfalls false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.Item(System.Object)">
      <summary>Ruft das Element mit dem angegebenen Schlüssel ab oder legt dieses fest.</summary>
      <returns>Das Element mit dem angegebenen Schlüssel oder null, wenn der Schlüssel nicht vorhanden ist.</returns>
      <param name="key">Der Schlüssel des Elements, das abgerufen oder festgelegt werden soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null. </exception>
      <exception cref="T:System.NotSupportedException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Collections.IDictionary" />-Objekt ist schreibgeschützt.- oder -  Die Eigenschaft wird festgelegt, <paramref name="key" /> ist in der Auflistung nicht vorhanden, und <see cref="T:System.Collections.IDictionary" /> hat eine feste Größe. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.Keys">
      <summary>Ruft ein <see cref="T:System.Collections.ICollection" />-Objekt ab, das die Schlüssel des <see cref="T:System.Collections.IDictionary" />-Objekts enthält.</summary>
      <returns>Ein <see cref="T:System.Collections.ICollection" />-Objekt, das die Schlüssel des <see cref="T:System.Collections.IDictionary" />-Objekts enthält.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Remove(System.Object)">
      <summary>Entfernt das Element mit dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.IDictionary" />-Objekt.</summary>
      <param name="key">Der Schlüssel des zu entfernenden Elements. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null. </exception>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.IDictionary" />-Objekt ist schreibgeschützt.- oder -  <see cref="T:System.Collections.IDictionary" /> hat eine feste Größe. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.Values">
      <summary>Ruft ein <see cref="T:System.Collections.ICollection" />-Objekt ab, das die Werte des <see cref="T:System.Collections.IDictionary" />-Objekts enthält.</summary>
      <returns>Ein <see cref="T:System.Collections.ICollection" />-Objekt, das die Werte des <see cref="T:System.Collections.IDictionary" />-Objekts enthält.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IDictionaryEnumerator">
      <summary>Zählt die Elemente eines nicht generischen Wörterbuchs auf.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionaryEnumerator.Entry">
      <summary>Ruft sowohl den Schlüssel als auch den Wert des aktuellen Wörterbucheintrags ab.</summary>
      <returns>Ein <see cref="T:System.Collections.DictionaryEntry" />, der sowohl den Schlüssel als auch den Wert des aktuellen Wörterbucheintrags enthält.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> ist vor dem ersten oder hinter dem letzten Eintrag des Wörterbuchs positioniert. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionaryEnumerator.Key">
      <summary>Ruft den Schlüssel des aktuellen Wörterbucheintrags ab.</summary>
      <returns>Der Schlüssel des aktuellen Elements der Enumeration.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> ist vor dem ersten oder hinter dem letzten Eintrag des Wörterbuchs positioniert. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionaryEnumerator.Value">
      <summary>Ruft den Wert des aktuellen Wörterbucheintrags ab.</summary>
      <returns>Der Schlüssel des aktuellen Elements der Enumeration.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> ist vor dem ersten oder hinter dem letzten Eintrag des Wörterbuchs positioniert. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IEnumerable">
      <summary>Macht den Enumerator verfügbar, der eine einfache Iteration durch eine nicht generische Auflistung unterstützt.Um den .NET Framework-Quellcode für diesen Typ zu durchsuchen, rufen Sie die Verweisquelle auf.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IEnumerable.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IEnumerator">
      <summary>Unterstützt eine einfache Iteration durch eine nicht generische Auflistung.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Collections.IEnumerator.Current">
      <summary>Ruft das aktuelle Element in der Auflistung ab.</summary>
      <returns>Das aktuelle Element in der Auflistung.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IEnumerator.MoveNext">
      <summary>Setzt den Enumerator auf das nächste Element der Auflistung.</summary>
      <returns>true, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde, false, wenn der Enumerator das Ende der Auflistung überschritten hat.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IEnumerator.Reset">
      <summary>Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IEqualityComparer">
      <summary>Definiert Methoden, die den Vergleich von Objekten auf Gleichheit unterstützen.</summary>
    </member>
    <member name="M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)">
      <summary>Bestimmt, ob die angegebenen Objekte gleich sind.</summary>
      <returns>true, wenn die angegebenen Objekte gleich sind, andernfalls false.</returns>
      <param name="x">Das erste zu vergleichende Objekt.</param>
      <param name="y">Das zweite zu vergleichende Objekt.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="x" /> und <paramref name="y" /> sind nicht vom gleichen Typ. Keines der beiden kann einen Vergleich mit dem jeweils anderen Objekt behandeln.</exception>
    </member>
    <member name="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)">
      <summary>Gibt einen Hashcode für das angegebene Objekt zurück.</summary>
      <returns>Ein Hashcode für das angegebene Objekt.</returns>
      <param name="obj">Das <see cref="T:System.Object" />, für das ein Hashcode zurückgegeben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der Typ von <paramref name="obj" /> ist ein Referenztyp, und <paramref name="obj" /> ist null.</exception>
    </member>
    <member name="T:System.Collections.IList">
      <summary>Stellt eine nicht generische Auflistung von Objekten dar, auf die einzeln über einen Index zugegriffen werden kann.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Add(System.Object)">
      <summary>Fügt der <see cref="T:System.Collections.IList" /> ein Element hinzu.</summary>
      <returns>Die Position, an der das neue Element eingefügt wurde, oder -1, um anzugeben, dass das Element nicht in die Auflistung eingefügt wurde.</returns>
      <param name="value">Das Objekt, das <see cref="T:System.Collections.IList" /> hinzugefügt werden soll. </param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> ist schreibgeschützt.- oder - <see cref="T:System.Collections.IList" /> hat eine feste Größe. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Clear">
      <summary>Entfernt alle Elemente aus <see cref="T:System.Collections.IList" />.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> ist schreibgeschützt. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Contains(System.Object)">
      <summary>Bestimmt, ob die <see cref="T:System.Collections.IList" /> einen bestimmten Wert enthält.</summary>
      <returns>true, wenn <see cref="T:System.Object" /> in <see cref="T:System.Collections.IList" /> gefunden wird, andernfalls false.</returns>
      <param name="value">Das im <see cref="T:System.Collections.IList" /> zu suchende Objekt. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.IndexOf(System.Object)">
      <summary>Bestimmt den Index eines bestimmten Elements in der <see cref="T:System.Collections.IList" />.</summary>
      <returns>Der Index von <paramref name="value" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</returns>
      <param name="value">Das im <see cref="T:System.Collections.IList" /> zu suchende Objekt. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Insert(System.Int32,System.Object)">
      <summary>Fügt am angegebenen Index ein Element in die <see cref="T:System.Collections.IList" /> ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll. </param>
      <param name="value">Das in die <see cref="T:System.Collections.IList" /> einzufügende Objekt. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kein gültiger Index in <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> ist schreibgeschützt.- oder - <see cref="T:System.Collections.IList" /> hat eine feste Größe. </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="value" /> ist ein NULL-Verweis in <see cref="T:System.Collections.IList" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IList.IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Collections.IList" /> eine feste Größe hat.</summary>
      <returns>true, wenn <see cref="T:System.Collections.IList" /> eine feste Größe hat, andernfalls false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IList.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Collections.IList" /> schreibgeschützt ist.</summary>
      <returns>true, wenn <see cref="T:System.Collections.IList" /> schreibgeschützt ist, andernfalls false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IList.Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <returns>Das Element am angegebenen Index.</returns>
      <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kein gültiger Index in <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">Die Eigenschaft wird festgelegt, und die <see cref="T:System.Collections.IList" /> ist schreibgeschützt. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Remove(System.Object)">
      <summary>Entfernt das erste Vorkommen eines bestimmten Objekts aus <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Das aus der <see cref="T:System.Collections.IList" /> zu entfernende Objekt. </param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> ist schreibgeschützt.- oder - <see cref="T:System.Collections.IList" /> hat eine feste Größe. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.RemoveAt(System.Int32)">
      <summary>Entfernt das <see cref="T:System.Collections.IList" />-Element am angegebenen Index.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden Elements. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kein gültiger Index in <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> ist schreibgeschützt.- oder - <see cref="T:System.Collections.IList" /> hat eine feste Größe. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IStructuralComparable">
      <summary>Unterstützt den Strukturvergleich von Auflistungsobjekten.</summary>
    </member>
    <member name="M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Bestimmt, ob das aktuelle Auflistungsobjekt in der Sortierreihenfolge vor oder nach einem anderen Objekt oder an derselben Position auftritt.</summary>
      <returns>Eine ganze Zahl, die die Beziehung des aktuellen Auflistungsobjekts zu <paramref name="other" /> angibt, wie in der folgenden Tabelle gezeigt.RückgabewertBeschreibung-1Die aktuelle Instanz tritt vor <paramref name="other" /> auf.0Die aktuelle Instanz und <paramref name="other" /> sind gleich.1Die aktuelle Instanz folgt auf <paramref name="other" />.</returns>
      <param name="other">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das Member des aktuellen Auflistungsobjekts mit den entsprechenden Membern von <paramref name="other" /> vergleicht.</param>
      <exception cref="T:System.ArgumentException">Diese Instanz und <paramref name="other" /> weisen nicht denselben Typ auf.</exception>
    </member>
    <member name="T:System.Collections.IStructuralEquatable">
      <summary>Definiert Methoden, die den Vergleich von Objekten auf strukturelle Gleichheit unterstützen. </summary>
    </member>
    <member name="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Bestimmt, ob die Struktur eines Objekt und der aktuellen Instanz gleich ist.</summary>
      <returns>true, wenn die beiden Objekte gleich sind, andernfalls false.</returns>
      <param name="other">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <param name="comparer">Ein Objekt, das bestimmt, ob die aktuelle Instanz und <paramref name="other" /> gleich sind. </param>
    </member>
    <member name="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Gibt einen Hashcode für die aktuelle Instanz zurück.</summary>
      <returns>Der Hashcode für die aktuelle Instanz.</returns>
      <param name="comparer">Ein Objekt, das den Hashcode des aktuellen Objekts berechnet.</param>
    </member>
    <member name="T:System.Collections.Generic.ICollection`1">
      <summary>Definiert Methoden zum Bearbeiten generischer Auflistungen.</summary>
      <typeparam name="T">Der Typ der Elemente in der Auflistung.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Add(`0)">
      <summary>Fügt der <see cref="T:System.Collections.Generic.ICollection`1" /> ein Element hinzu.</summary>
      <param name="item">Das Objekt, das <see cref="T:System.Collections.Generic.ICollection`1" /> hinzugefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Clear">
      <summary>Entfernt alle Elemente aus <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> ist schreibgeschützt. </exception>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Contains(`0)">
      <summary>Ermittelt, ob die <see cref="T:System.Collections.Generic.ICollection`1" /> einen bestimmten Wert enthält.</summary>
      <returns>true, wenn sich <paramref name="item" /> in <see cref="T:System.Collections.Generic.ICollection`1" /> befindet, andernfalls false.</returns>
      <param name="item">Das im <see cref="T:System.Collections.Generic.ICollection`1" /> zu suchende Objekt.</param>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
      <summary>Kopiert die Elemente von <see cref="T:System.Collections.Generic.ICollection`1" /> in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.Generic.ICollection`1" /> kopierten Elemente ist.Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.Generic.ICollection`1" /> ist größer als der verfügbare Platz von <paramref name="arrayIndex" /> bis zum Ende des Ziel-<paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.ICollection`1.Count">
      <summary>Ruft die Anzahl der Elemente ab, die in <see cref="T:System.Collections.Generic.ICollection`1" /> enthalten sind.</summary>
      <returns>Die Anzahl der Elemente, die in <see cref="T:System.Collections.Generic.ICollection`1" /> enthalten sind.</returns>
    </member>
    <member name="P:System.Collections.Generic.ICollection`1.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist, andernfalls false.</returns>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Remove(`0)">
      <summary>Entfernt das erste Vorkommen eines angegebenen Objekts aus der <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>true, wenn das <paramref name="item" /> erfolgreich aus der <see cref="T:System.Collections.Generic.ICollection`1" /> entfernt wurde, andernfalls false.Diese Methode gibt auch dann false zurück, wenn <paramref name="item" /> nicht in der ursprünglichen <see cref="T:System.Collections.Generic.ICollection`1" /> gefunden wurde.</returns>
      <param name="item">Das aus dem <see cref="T:System.Collections.Generic.ICollection`1" /> zu entfernende Objekt.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> ist schreibgeschützt.</exception>
    </member>
    <member name="T:System.Collections.Generic.IComparer`1">
      <summary>Definiert eine Methode, die ein Typ zum Vergleichen zweier Objekte implementiert.</summary>
      <typeparam name="T">Der Typ der zu vergleichenden Objekte.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)">
      <summary>Vergleicht zwei Objekte und gibt einen Wert zurück, der angibt, ob ein Wert niedriger, gleich oder größer als der andere Wert ist.</summary>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relativen Werte von <paramref name="x" /> und <paramref name="y" /> angibt, wie in der folgenden Tabelle veranschaulicht.Wert Bedeutung Kleiner als 0<paramref name="x" /> ist kleiner als <paramref name="y" />.Zero<paramref name="x" /> ist gleich <paramref name="y" />.Größer als 0 (null)<paramref name="x" /> ist größer als <paramref name="y" />.</returns>
      <param name="x">Das erste zu vergleichende Objekt.</param>
      <param name="y">Das zweite zu vergleichende Objekt.</param>
    </member>
    <member name="T:System.Collections.Generic.IDictionary`2">
      <summary>Stellt eine generische Auflistung von Schlüssel-Wert-Paaren dar.</summary>
      <typeparam name="TKey">Der Typ der Schlüssel im Wörterbuch.</typeparam>
      <typeparam name="TValue">Der Typ der Werte im Wörterbuch.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
      <summary>Fügt der <see cref="T:System.Collections.Generic.IDictionary`2" />-Schnittstelle ein Element mit dem angegebenen Schlüssel und Wert hinzu.</summary>
      <param name="key">Das Objekt, das als Schlüssel des hinzuzufügenden Elements verwendet werden soll.</param>
      <param name="value">Das Objekt, das als Wert des hinzuzufügenden Elements verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">Ein Element mit dem gleichen Schlüssel ist bereits im <see cref="T:System.Collections.Generic.IDictionary`2" /> vorhanden.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
      <summary>Ermittelt, ob das <see cref="T:System.Collections.Generic.IDictionary`2" /> ein Element mit dem angegebenen Schlüssel enthält.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.Generic.IDictionary`2" /> ein Element mit dem Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der im <see cref="T:System.Collections.Generic.IDictionary`2" /> zu suchende Schlüssel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="P:System.Collections.Generic.IDictionary`2.Item(`0)">
      <summary>Ruft das Element mit dem angegebenen Schlüssel ab oder legt dieses fest.</summary>
      <returns>Das Element mit dem angegebenen Schlüssel.</returns>
      <param name="key">Der Schlüssel des Elements, das abgerufen oder festgelegt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">Die Eigenschaft wird abgerufen, und <paramref name="key" /> wird nicht gefunden.</exception>
      <exception cref="T:System.NotSupportedException">Die Eigenschaft wird festgelegt, und die <see cref="T:System.Collections.Generic.IDictionary`2" /> ist schreibgeschützt.</exception>
    </member>
    <member name="P:System.Collections.Generic.IDictionary`2.Keys">
      <summary>Ruft eine <see cref="T:System.Collections.Generic.ICollection`1" /> ab, die die Schlüssel des <see cref="T:System.Collections.Generic.IDictionary`2" /> enthält.</summary>
      <returns>Eine <see cref="T:System.Collections.Generic.ICollection`1" />, die die Schlüssel des Objekts enthält, das <see cref="T:System.Collections.Generic.IDictionary`2" /> implementiert.</returns>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
      <summary>Entfernt das Element mit dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>true, wenn das Element erfolgreich entfernt wurde, andernfalls false.Diese Methode gibt auch dann false zurück, wenn <paramref name="key" /> nicht im ursprünglichen <see cref="T:System.Collections.Generic.IDictionary`2" /> gefunden wurde.</returns>
      <param name="key">Der Schlüssel des zu entfernenden Elements.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
      <summary>Ruft den dem angegebenen Schlüssel zugeordneten Wert ab.</summary>
      <returns>true, wenn das Objekt, das <see cref="T:System.Collections.Generic.IDictionary`2" /> implementiert, ein Element mit dem angegebenen Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der Schlüssel, dessen Wert abgerufen werden soll.</param>
      <param name="value">Wenn diese Methode zurückgegeben wird, enthält sie den dem angegebenen Schlüssel zugeordneten Wert, wenn der Schlüssel gefunden wird, andernfalls enthält sie den Standardwert für den Typ des <paramref name="value" />-Parameters.Dieser Parameter wird nicht initialisiert übergeben.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="P:System.Collections.Generic.IDictionary`2.Values">
      <summary>Ruft eine <see cref="T:System.Collections.Generic.ICollection`1" /> ab, die die Werte im <see cref="T:System.Collections.Generic.IDictionary`2" /> enthält.</summary>
      <returns>Eine <see cref="T:System.Collections.Generic.ICollection`1" />, die die Werte des Objekts enthält, das <see cref="T:System.Collections.Generic.IDictionary`2" /> implementiert.</returns>
    </member>
    <member name="T:System.Collections.Generic.IEnumerable`1">
      <summary>Macht den Enumerator verfügbar, der eine einfache Iteration durch eine Auflistung eines angegebenen Typs unterstützt.Um den .NET Framework-Quellcode für diesen Typ zu durchsuchen, rufen Sie die Verweisquelle auf.</summary>
      <typeparam name="T">Der Typ der aufzulistenden Objekte.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die Auflistung durchläuft.</summary>
      <returns>Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Collections.Generic.IEnumerator`1">
      <summary>Unterstützt eine einfache Iteration durch eine generische Auflistung.</summary>
      <typeparam name="T">Der Typ der aufzulistenden Objekte.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Collections.Generic.IEnumerator`1.Current">
      <summary>Ruft das Element in der Auflistung an der aktuellen Position des Enumerators ab.</summary>
      <returns>Das Element in der Auflistung an der aktuellen Position des Enumerators.</returns>
    </member>
    <member name="T:System.Collections.Generic.IEqualityComparer`1">
      <summary>Definiert Methoden, die den Vergleich von Objekten auf Gleichheit unterstützen.</summary>
      <typeparam name="T">Der Typ der zu vergleichenden Objekte.Dieser Typparameter ist Contravariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weniger abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)">
      <summary>Bestimmt, ob die angegebenen Objekte gleich sind.</summary>
      <returns>true, wenn die angegebenen Objekte gleich sind, andernfalls false.</returns>
      <param name="x">Das erste zu vergleichende Objekt vom Typ <paramref name="T" />.</param>
      <param name="y">Das zweite zu vergleichende Objekt vom Typ <paramref name="T" />.</param>
    </member>
    <member name="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)">
      <summary>Gibt einen Hashcode für das angegebene Objekt zurück.</summary>
      <returns>Ein Hashcode für das angegebene Objekt.</returns>
      <param name="obj">Das <see cref="T:System.Object" />, für das ein Hashcode zurückgegeben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der Typ von <paramref name="obj" /> ist ein Referenztyp, und <paramref name="obj" /> ist null.</exception>
    </member>
    <member name="T:System.Collections.Generic.IList`1">
      <summary>Stellt eine Auflistung von Objekten dar, auf die einzeln über einen Index zugegriffen werden kann.</summary>
      <typeparam name="T">Der Typ der Elemente in der Liste.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IList`1.IndexOf(`0)">
      <summary>Bestimmt den Index eines bestimmten Elements in der <see cref="T:System.Collections.Generic.IList`1" />.</summary>
      <returns>Der Index von <paramref name="item" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</returns>
      <param name="item">Das im <see cref="T:System.Collections.Generic.IList`1" /> zu suchende Objekt.</param>
    </member>
    <member name="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
      <summary>Fügt am angegebenen Index ein Element in die <see cref="T:System.Collections.Generic.IList`1" /> ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="item" /> eingefügt werden soll.</param>
      <param name="item">Das in die <see cref="T:System.Collections.Generic.IList`1" /> einzufügende Objekt.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kein gültiger Index in der <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">Die <see cref="T:System.Collections.Generic.IList`1" /> ist schreibgeschützt.</exception>
    </member>
    <member name="P:System.Collections.Generic.IList`1.Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <returns>Das Element am angegebenen Index.</returns>
      <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kein gültiger Index in der <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Eigenschaft wird festgelegt, und die <see cref="T:System.Collections.Generic.IList`1" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
      <summary>Entfernt das <see cref="T:System.Collections.Generic.IList`1" />-Element am angegebenen Index.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kein gültiger Index in der <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">Die <see cref="T:System.Collections.Generic.IList`1" /> ist schreibgeschützt.</exception>
    </member>
    <member name="T:System.Collections.Generic.IReadOnlyCollection`1">
      <summary>Stellt eine stark typisierte, schreibgeschützte Auflistung von Elementen dar.</summary>
      <typeparam name="T">Der Typ der Elemente.Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyCollection`1.Count">
      <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
      <returns>Die Anzahl der Elemente in der Auflistung. </returns>
    </member>
    <member name="T:System.Collections.Generic.IReadOnlyDictionary`2">
      <summary>Stellt eine schreibgeschützte generische Auflistung von Schlüssel-Wert-Paaren dar.</summary>
      <typeparam name="TKey">Der Typ der Schlüssel im schreibgeschützten Wörterbuch. </typeparam>
      <typeparam name="TValue">Der Typ der Werte im schreibgeschützten Wörterbuch. </typeparam>
    </member>
    <member name="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
      <summary>Bestimmt, ob das schreibgeschützte Wörterbuch ein Element enthält, das über den angegebenen Schlüssel verfügt.</summary>
      <returns>true, wenn das schreibgeschützte Wörterbuch ein Element mit dem angegebenen Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der zu suchende Schlüssel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
      <summary>Ruft das Element ab, das den angegebenen Schlüssel im schreibgeschützten Wörterbuch besitzt.</summary>
      <returns>Das Element, das den angegebenen Schlüssel im schreibgeschützten Wörterbuch besitzt.</returns>
      <param name="key">Der zu suchende Schlüssel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">Die Eigenschaft wird abgerufen, und <paramref name="key" /> wird nicht gefunden. </exception>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys">
      <summary>Ruft eine aufzählbare Auflistung ab, die die Schlüssel im schreibgeschützten Wörterbuch enthält. </summary>
      <returns>Eine aufzählbare Sammlung, die die Schlüssel im schreibgeschützten Wörterbuch enthält.</returns>
    </member>
    <member name="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
      <summary>Ruft den Wert ab, der dem angegebenen Schlüssel zugeordnet ist.</summary>
      <returns>true, wenn das Objekt, das die <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" />-Schnittstelle implementiert, ein Element mit dem angegebenen Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der zu suchende Schlüssel.</param>
      <param name="value">Wenn diese Methode zurückgegeben wird, enthält sie den dem angegebenen Schlüssel zugeordneten Wert, wenn der Schlüssel gefunden wird, andernfalls enthält sie den Standardwert für den Typ des <paramref name="value" />-Parameters.Dieser Parameter wird nicht initialisiert übergeben.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyDictionary`2.Values">
      <summary>Ruft eine aufzählbare Auflistung ab, die die Werte im schreibgeschützten Wörterbuch enthält.</summary>
      <returns>Eine aufzählbare Sammlung, die die Werte im schreibgeschützten Wörterbuch enthält.</returns>
    </member>
    <member name="T:System.Collections.Generic.IReadOnlyList`1">
      <summary>Stellt eine schreibgeschützte Auflistung von Elementen dar, auf die über einen Index zugegriffen werden kann. </summary>
      <typeparam name="T">Die Typ der Elemente in der schreibgeschützten Liste. Dieser Typparameter ist Covariant. Das heißt, Sie können entweder den angegebenen Typ oder einen weiter abgeleiteten Typ verwenden. Weitere Informationen zu Ko- und Kontravarianz finden Sie unter Kovarianz und Kontravarianz in Generika.</typeparam>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index in der schreibgeschützten Liste ab.</summary>
      <returns>Das Element am angegebenen Index in der schreibgeschützten Liste.</returns>
      <param name="index">Der nullbasierte Index des abzurufenden Elements. </param>
    </member>
    <member name="T:System.Collections.Generic.ISet`1">
      <summary>Stellt die Basisschnittstelle für die Abstraktion von Gruppen bereit.</summary>
      <typeparam name="T">Der Typ der Elemente in der Gruppe.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.Add(`0)">
      <summary>Fügt der aktuellen Gruppe ein Element hinzu und gibt einen Wert zurück, um anzugeben, ob das Element erfolgreich hinzugefügt wurde. </summary>
      <returns>true, wenn das Element der Gruppe hinzugefügt wurde. false, wenn das Element bereits in der Gruppe enthalten ist.</returns>
      <param name="item">Der Element, das zur Menge hinzugefügt wird.</param>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Entfernt alle Elemente in der angegebenen Auflistung aus der aktuellen Gruppe.</summary>
      <param name="other">Die Auflistung der Elemente, die aus der Gruppe entfernt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Ändert die aktuelle Gruppe, sodass sie nur Elemente enthält, die in einer angegebenen Auflistung ebenfalls enthalten sind.</summary>
      <param name="other">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Bestimmt, ob die aktuelle Gruppe eine echte (strikte) Teilmenge einer angegebenen Auflistung ist.</summary>
      <returns>true, wenn die aktuelle Gruppe eine echte Teilmenge von <paramref name="other" /> ist; andernfalls false.</returns>
      <param name="other">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Bestimmt, ob die aktuelle Gruppe eine echte (strikte) Teilmenge einer angegebenen Auflistung ist.</summary>
      <returns>true, wenn die aktuelle Gruppe eine echte Obermenge von <paramref name="other" /> ist; andernfalls false.</returns>
      <param name="other">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Bestimmt, ob eine Gruppe eine Teilmenge einer angegebenen Auflistung ist.</summary>
      <returns>true, wenn die aktuelle Gruppe eine Teilmenge von <paramref name="other" /> ist, andernfalls false.</returns>
      <param name="other">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Bestimmt, ob die aktuelle Gruppe eine Obermenge einer angegebenen Auflistung ist.</summary>
      <returns>true, wenn die aktuelle Gruppe eine Obermenge von <paramref name="other" /> ist, andernfalls false.</returns>
      <param name="other">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
      <summary>Bestimmt, ob sich die aktuelle Gruppe und die angegebene Auflistung überschneiden.</summary>
      <returns>true, wenn die aktuelle Auflistung und <paramref name="other" /> über mindestens ein gemeinsames Element verfügen, andernfalls false.</returns>
      <param name="other">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
      <summary>Bestimmt, ob die aktuelle Gruppe und die angegebene Auflistung dieselben Elemente enthalten.</summary>
      <returns>true, wenn die aktuelle Gruppe und <paramref name="other" /> gleich sind, andernfalls false.</returns>
      <param name="other">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Ändert die aktuelle Gruppe, sodass sie nur Elemente enthält, die entweder in der aktuellen Gruppe oder in der angegebenen Auflistung, nicht jedoch in beiden vorhanden sind. </summary>
      <param name="other">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Ändert die aktuelle Gruppe, sodass sie alle Elemente enthält, die in der aktuellen Gruppe, in der angegebenen Auflistung oder in beiden vorhanden sind.</summary>
      <param name="other">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="T:System.Collections.Generic.KeyNotFoundException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn der für den Zugriff auf ein Element in der Auflistung angegebene Schlüssel keinem Schlüssel in der Auflistung entspricht.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.KeyNotFoundException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.KeyNotFoundException" />-Klasse mit den Standardeigenschaftswerten.</summary>
    </member>
    <member name="M:System.Collections.Generic.KeyNotFoundException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.KeyNotFoundException" />-Klasse mit der angegebenen Fehlermeldung.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird.</param>
    </member>
    <member name="M:System.Collections.Generic.KeyNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.KeyNotFoundException" />-Klasse mit der angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Collections.Generic.KeyValuePair`2">
      <summary>Definiert ein Schlüssel-Wert-Paar, das festgelegt oder abgerufen werden kann.</summary>
      <typeparam name="TKey">Der Typ des Schlüssels.</typeparam>
      <typeparam name="TValue">Der Typ des Werts.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.KeyValuePair`2" />-Struktur mit dem angegebenen Schlüssel und Wert.</summary>
      <param name="key">Das Objekt, das in jedem Schlüssel-Wert-Paar definiert ist.</param>
      <param name="value">Die <paramref name="key" /> zugeordnete Definition.</param>
    </member>
    <member name="P:System.Collections.Generic.KeyValuePair`2.Key">
      <summary>Ruft den Schlüssel im Schlüssel-Wert-Paar ab.</summary>
      <returns>Ein <paramref name="TKey" />, der den Schlüssel des <see cref="T:System.Collections.Generic.KeyValuePair`2" /> darstellt. </returns>
    </member>
    <member name="M:System.Collections.Generic.KeyValuePair`2.ToString">
      <summary>Gibt eine Zeichenfolgenentsprechung des <see cref="T:System.Collections.Generic.KeyValuePair`2" /> zurück, wobei die Zeichenfolgenentsprechungen des Schlüssels und des Werts verwendet werden.</summary>
      <returns>Eine Zeichenfolgenentsprechung des <see cref="T:System.Collections.Generic.KeyValuePair`2" />, die die Zeichenfolgenentsprechungen des Schlüssels und des Werts enthält.</returns>
    </member>
    <member name="P:System.Collections.Generic.KeyValuePair`2.Value">
      <summary>Ruft den Wert im Schlüssel-Wert-Paar ab.</summary>
      <returns>Eine <paramref name="TValue" />-Klasse, die den Wert der <see cref="T:System.Collections.Generic.KeyValuePair`2" />-Klasse darstellt. </returns>
    </member>
    <member name="T:System.Collections.ObjectModel.Collection`1">
      <summary>Stellt die Basisklasse für eine generische Auflistung bereit.</summary>
      <typeparam name="T">Der Typ der Elemente in der Auflistung.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.#ctor">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.ObjectModel.Collection`1" />-Klasse.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.ObjectModel.Collection`1" />-Klasse als Wrapper für die angegebene Liste.</summary>
      <param name="list">Die Liste, die mit der neuen Auflistung umschlossen wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
      <summary>Fügt am Ende der <see cref="T:System.Collections.ObjectModel.Collection`1" /> ein Objekt hinzu. </summary>
      <param name="item">Das Objekt, das am Ende der <see cref="T:System.Collections.ObjectModel.Collection`1" /> hinzugefügt werden soll.Der Wert kann für Verweistypen null sein.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Clear">
      <summary>Entfernt alle Elemente aus der <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.ClearItems">
      <summary>Entfernt alle Elemente aus der <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
      <summary>Bestimmt, ob sich ein Element in <see cref="T:System.Collections.ObjectModel.Collection`1" /> befindet.</summary>
      <returns>true, wenn sich <paramref name="item" /> in <see cref="T:System.Collections.ObjectModel.Collection`1" /> befindet, andernfalls false.</returns>
      <param name="item">Das in <see cref="T:System.Collections.ObjectModel.Collection`1" /> zu suchende Objekt.Der Wert kann für Verweistypen null sein.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
      <summary>Kopiert die gesamte <see cref="T:System.Collections.ObjectModel.Collection`1" /> in ein kompatibles eindimensionales <see cref="T:System.Array" />, beginnend am angegebenen Index des Zielarrays.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus <see cref="T:System.Collections.ObjectModel.Collection`1" /> kopierten Elemente ist.Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.ObjectModel.Collection`1" /> überschreitet den verfügbaren Platz vom <paramref name="index" /> bis zum Ende des Ziel-<paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.Count">
      <summary>Ruft die Anzahl der Elemente ab, die tatsächlich in der <see cref="T:System.Collections.ObjectModel.Collection`1" /> enthalten sind.</summary>
      <returns>Die Anzahl der Elemente, die tatsächlich in der <see cref="T:System.Collections.ObjectModel.Collection`1" /> enthalten sind.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die <see cref="T:System.Collections.ObjectModel.Collection`1" /> durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.Generic.IEnumerator`1" /> für die <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
      <summary>Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des ersten Vorkommens innerhalb der gesamten <see cref="T:System.Collections.ObjectModel.Collection`1" /> zurück.</summary>
      <returns>Der nullbasierte Index des ersten Vorkommens des <paramref name="item" /> in der gesamten <see cref="T:System.Collections.ObjectModel.Collection`1" />, sofern vorhanden, andernfalls -1.</returns>
      <param name="item">Das in der <see cref="T:System.Collections.Generic.List`1" /> zu suchende Objekt.Der Wert kann für Verweistypen null sein.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
      <summary>Fügt am angegebenen Index ein Element in die <see cref="T:System.Collections.ObjectModel.Collection`1" /> ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="item" /> eingefügt werden soll.</param>
      <param name="item">Das einzufügende Objekt.Der Wert kann für Verweistypen null sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.- oder -<paramref name="index" /> ist größer als <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
      <summary>Fügt am angegebenen Index ein Element in die <see cref="T:System.Collections.ObjectModel.Collection`1" /> ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="item" /> eingefügt werden soll.</param>
      <param name="item">Das einzufügende Objekt.Der Wert kann für Verweistypen null sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.- oder -<paramref name="index" /> ist größer als <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <returns>Das Element am angegebenen Index.</returns>
      <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.- oder -<paramref name="index" /> ist größer oder gleich <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />. </exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.Items">
      <summary>Ruft den <see cref="T:System.Collections.ObjectModel.Collection`1" />-Wrapper ab, der <see cref="T:System.Collections.Generic.IList`1" /> einbindet.</summary>
      <returns>Der <see cref="T:System.Collections.ObjectModel.Collection`1" />-Wrapper, der <see cref="T:System.Collections.Generic.IList`1" /> einbindet.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
      <summary>Entfernt das erste Vorkommen eines bestimmten Objekts aus der <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>true, wenn das <paramref name="item" /> erfolgreich entfernt wurde, andernfalls false.  Diese Methode gibt auch dann false zurück, wenn das <paramref name="item" /> nicht in der ursprünglichen <see cref="T:System.Collections.ObjectModel.Collection`1" /> gefunden wurde.</returns>
      <param name="item">Das aus dem <see cref="T:System.Collections.ObjectModel.Collection`1" /> zu entfernende Objekt.Der Wert kann für Verweistypen null sein.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
      <summary>Entfernt das Element am angegebenen Index aus der <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.- oder -<paramref name="index" /> ist größer oder gleich <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
      <summary>Entfernt das Element am angegebenen Index aus der <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.- oder -<paramref name="index" /> ist größer oder gleich <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
      <summary>Ersetzt das Element am angegebenen Index.</summary>
      <param name="index">Der nullbasierte Index des zu ersetzenden Elements.</param>
      <param name="item">Der neue Wert für das Element am angegebenen Index.Der Wert kann für Verweistypen null sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.- oder -<paramref name="index" /> ist größer als <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist, andernfalls false.  In der Standardimplementierung von <see cref="T:System.Collections.ObjectModel.Collection`1" /> gibt diese Eigenschaft immer false zurück.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Elemente der <see cref="T:System.Collections.ICollection" /> in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus <see cref="T:System.Collections.ICollection" /> kopierten Elemente ist.Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.- oder -<paramref name="array" /> hat keine nullbasierte Indizierung.- oder -Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.ICollection" /> überschreitet den verfügbaren Platz vom <paramref name="index" /> bis zum Ende des Ziel-<paramref name="array" />.- oder -Der Typ der Quell-<see cref="T:System.Collections.ICollection" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns>true, wenn der Zugriff auf das <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls false.  In der Standardimplementierung von <see cref="T:System.Collections.ObjectModel.Collection`1" /> gibt diese Eigenschaft immer false zurück.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.  In der Standardimplementierung der <see cref="T:System.Collections.ObjectModel.Collection`1" /> gibt diese Eigenschaft immer die aktuelle Instanz zurück.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, mit dem eine Auflistung durchlaufen werden kann.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)">
      <summary>Fügt der <see cref="T:System.Collections.IList" /> ein Element hinzu.</summary>
      <returns>Die Position, an der das neue Element eingefügt wurde.</returns>
      <param name="value">Das <see cref="T:System.Object" />, das in <see cref="T:System.Collections.IList" /> eingefügt werden soll.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="value" /> weist einen Typ auf, der der <see cref="T:System.Collections.IList" /> nicht zugeordnet werden kann.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Bestimmt, ob die <see cref="T:System.Collections.IList" /> einen bestimmten Wert enthält.</summary>
      <returns>true, wenn <see cref="T:System.Object" /> in <see cref="T:System.Collections.IList" /> gefunden wird, andernfalls false.</returns>
      <param name="value">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.IList" /> gesucht werden soll.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="value" /> weist einen Typ auf, der der <see cref="T:System.Collections.IList" /> nicht zugeordnet werden kann.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Bestimmt den Index eines bestimmten Elements in der <see cref="T:System.Collections.IList" />.</summary>
      <returns>Der Index von <paramref name="value" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</returns>
      <param name="value">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.IList" /> gesucht werden soll.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="value" /> weist einen Typ auf, der der <see cref="T:System.Collections.IList" /> nicht zugeordnet werden kann.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Fügt ein Element am angegebenen Index in die <see cref="T:System.Collections.IList" /> ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value">Das <see cref="T:System.Object" />, das in <see cref="T:System.Collections.IList" /> eingefügt werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kein gültiger Index in <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="value" /> weist einen Typ auf, der der <see cref="T:System.Collections.IList" /> nicht zugeordnet werden kann.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Collections.IList" /> eine feste Größe hat.</summary>
      <returns>true, wenn <see cref="T:System.Collections.IList" /> eine feste Größe hat, andernfalls false.  In der Standardimplementierung von <see cref="T:System.Collections.ObjectModel.Collection`1" /> gibt diese Eigenschaft immer false zurück.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Collections.IList" /> schreibgeschützt ist.</summary>
      <returns>true, wenn <see cref="T:System.Collections.IList" /> schreibgeschützt ist, andernfalls false.  In der Standardimplementierung von <see cref="T:System.Collections.ObjectModel.Collection`1" /> gibt diese Eigenschaft immer false zurück.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <returns>Das Element am angegebenen Index.</returns>
      <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kein gültiger Index in <see cref="T:System.Collections.IList" />.</exception>
      <exception cref="T:System.ArgumentException">Die Eigenschaft wird festgelegt, und der <paramref name="value" /> weist einen Typ auf, der der <see cref="T:System.Collections.IList" /> nicht zugeordnet werden kann.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Entfernt das erste Vorkommen eines bestimmten Objekts aus <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Die <see cref="T:System.Object" />, die aus der <see cref="T:System.Collections.IList" /> entfernt werden soll.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="value" /> weist einen Typ auf, der der <see cref="T:System.Collections.IList" /> nicht zugeordnet werden kann.</exception>
    </member>
    <member name="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
      <summary>Stellt die Basisklasse für eine generische schreibgeschützte Auflistung bereit.</summary>
      <typeparam name="T">Der Typ der Elemente in der Auflistung.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />-Klasse, bei der es sich um einen schreibgeschützten Wrapper handelt, der die angegebene Liste einbindet.</summary>
      <param name="list">Die zu umschließende Liste.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> is null.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)">
      <summary>Bestimmt, ob sich ein Element in <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> befindet.</summary>
      <returns>true, wenn das <paramref name="value" /> in der <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> gefunden wird, andernfalls false.</returns>
      <param name="value">Das im <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> zu suchende Objekt.Der Wert kann für Verweistypen null sein.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Kopiert die gesamte <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> in ein kompatibles eindimensionales <see cref="T:System.Array" />, beginnend am angegebenen Index des Zielarrays.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> kopierten Elemente ist.Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count">
      <summary>Ruft die Anzahl der Elemente ab, die in der <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />-Instanz enthalten sind.</summary>
      <returns>Die Anzahl der Elemente, die in der <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />-Instanz enthalten sind.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.Generic.IEnumerator`1" /> für das <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)">
      <summary>Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des ersten Vorkommens innerhalb der gesamten <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> zurück.</summary>
      <returns>Der nullbasierte Index des ggf. ersten Vorkommens von <paramref name="item" /> in der gesamten <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, andernfalls -1.</returns>
      <param name="value">Das im <see cref="T:System.Collections.Generic.List`1" /> zu suchende Objekt.Der Wert kann für Verweistypen null sein.</param>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab.</summary>
      <returns>Das Element am angegebenen Index.</returns>
      <param name="index">Der nullbasierte Index des abzurufenden Elements.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count" />. </exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items">
      <summary>Gibt die <see cref="T:System.Collections.Generic.IList`1" /> zurück, die die <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> umschließt.</summary>
      <returns>Die <see cref="T:System.Collections.Generic.IList`1" />, die die <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> umschließt.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Fügt der <see cref="T:System.Collections.Generic.ICollection`1" /> ein Element hinzu.Diese Implementierung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="value">Das Objekt, das <see cref="T:System.Collections.Generic.ICollection`1" /> hinzugefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Entfernt alle Elemente aus <see cref="T:System.Collections.Generic.ICollection`1" />.Diese Implementierung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist, andernfalls false.In der Standardimplementierung von <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> gibt diese Eigenschaft immer true zurück.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Entfernt das erste Vorkommen eines angegebenen Objekts aus der <see cref="T:System.Collections.Generic.ICollection`1" />.Diese Implementierung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <returns>true, wenn <paramref name="value" /> erfolgreich aus der <see cref="T:System.Collections.Generic.ICollection`1" /> entfernt wurde, andernfalls false.</returns>
      <param name="value">Das aus der <see cref="T:System.Collections.Generic.ICollection`1" /> zu entfernende Objekt.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>Fügt am angegebenen Index ein Element in die <see cref="T:System.Collections.Generic.IList`1" /> ein.Diese Implementierung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value">Das in die <see cref="T:System.Collections.Generic.IList`1" /> einzufügende Objekt.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab.Eine <see cref="T:System.NotSupportedException" /> tritt auf, wenn Sie versuchen, das Element am angegebenen Index abzulegen.</summary>
      <returns>Das Element am angegebenen Index.</returns>
      <param name="index">Der nullbasierte Index des abzurufenden Elements.</param>
      <exception cref="T:System.NotSupportedException">Always thrown if the property is set.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>Entfernt das <see cref="T:System.Collections.Generic.IList`1" />-Element am angegebenen Index.Diese Implementierung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Elemente der <see cref="T:System.Collections.ICollection" /> in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.ICollection" /> kopierten Elemente ist.Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-<paramref name="array" /> does not have zero-based indexing.-or-The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.-or-The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns>true, wenn der Zugriff auf das <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls false.In der Standardimplementierung von <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> gibt diese Eigenschaft immer false zurück.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.In der Standardimplementierung der <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> gibt diese Eigenschaft immer die aktuelle Instanz zurück.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>Fügt der <see cref="T:System.Collections.IList" /> ein Element hinzu.Diese Implementierung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <returns>Die Position, an der das neue Element eingefügt wurde.</returns>
      <param name="value">Das <see cref="T:System.Object" />, das in <see cref="T:System.Collections.IList" /> eingefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear">
      <summary>Entfernt alle Elemente aus <see cref="T:System.Collections.IList" />.Diese Implementierung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Ermittelt, ob die <see cref="T:System.Collections.IList" /> einen bestimmten Wert enthält.</summary>
      <returns>true, wenn <see cref="T:System.Object" /> in <see cref="T:System.Collections.IList" /> gefunden wird, andernfalls false.</returns>
      <param name="value">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.IList" /> gesucht werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not of the type specified for the generic type parameter <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Bestimmt den Index eines bestimmten Elements in der <see cref="T:System.Collections.IList" />.</summary>
      <returns>Der Index von <paramref name="value" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</returns>
      <param name="value">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.IList" /> gesucht werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not of the type specified for the generic type parameter <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Fügt am angegebenen Index ein Element in die <see cref="T:System.Collections.IList" /> ein.Diese Implementierung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value">Das <see cref="T:System.Object" />, das in <see cref="T:System.Collections.IList" /> eingefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.IList" /> eine feste Größe aufweist.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.IList" /> eine feste Größe aufweist, andernfalls false.In der Standardimplementierung von <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> gibt diese Eigenschaft immer true zurück.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.IList" /> schreibgeschützt ist.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.IList" /> schreibgeschützt ist, andernfalls false.In der Standardimplementierung von <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> gibt diese Eigenschaft immer true zurück.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab.Eine <see cref="T:System.NotSupportedException" /> tritt auf, wenn Sie versuchen, das Element am angegebenen Index abzulegen.</summary>
      <returns>Das Element am angegebenen Index.</returns>
      <param name="index">Der nullbasierte Index des abzurufenden Elements.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">Always thrown if the property is set.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Entfernt das erste Vorkommen eines angegebenen Objekts aus der <see cref="T:System.Collections.IList" />.Diese Implementierung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="value">Der <see cref="T:System.Object" />, der aus der <see cref="T:System.Collections.IList" /> entfernt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Entfernt das <see cref="T:System.Collections.IList" />-Element am angegebenen Index.Diese Implementierung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="T:System.ComponentModel.DefaultValueAttribute">
      <summary>Gibt den Standardwert für eine Eigenschaft an.</summary>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse unter Verwendung eines <see cref="T:System.Boolean" />-Werts.</summary>
      <param name="value">Ein <see cref="T:System.Boolean" />, der der Standardwert ist. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Byte)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse unter Verwendung einer vorzeichenlosen 8-Bit-Ganzzahl.</summary>
      <param name="value">Eine vorzeichenlose 8-Bit-Ganzzahl, die der Standardwert ist. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Char)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse unter Verwendung eines Unicode-Zeichens.</summary>
      <param name="value">Ein Unicode-Zeichen, das der Standardwert ist. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Double)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse unter Verwendung einer Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Eine Gleitkommazahl mit doppelter Genauigkeit, die der Standardwert ist. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int16)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse unter Verwendung einer 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Eine 16-Bit-Ganzzahl mit Vorzeichen, die der Standardwert ist. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse unter Verwendung einer 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Eine 32-Bit-Ganzzahl mit Vorzeichen, die der Standardwert ist. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int64)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse unter Verwendung einer 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Eine 64-Bit-Ganzzahl mit Vorzeichen, die der Standardwert ist. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse.</summary>
      <param name="value">Ein <see cref="T:System.Object" />, das den Standardwert darstellt. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Single)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse unter Verwendung einer Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Eine Gleitkommazahl mit einfacher Genauigkeit, die der Standardwert ist. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse unter Verwendung eines <see cref="T:System.String" />.</summary>
      <param name="value">Ein <see cref="T:System.String" />, der der Standardwert ist. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Type,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse, wobei der angegebene Wert unter Verwendung einer invarianten Kultur als Übersetzungskontext in den angegebenen Typ konvertiert wird.</summary>
      <param name="type">Ein <see cref="T:System.Type" />, der den Typ darstellt, in den der Wert konvertiert werden soll. </param>
      <param name="value">Ein <see cref="T:System.String" />, der unter Verwendung der Kultur Englisch (USA) mit <see cref="T:System.ComponentModel.TypeConverter" /> in den Typ konvertiert werden kann. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.Equals(System.Object)">
      <summary>Gibt zurück, ob der Wert des angegebenen Objekts gleich dem aktuellen <see cref="T:System.ComponentModel.DefaultValueAttribute" /> ist.</summary>
      <returns>true, wenn der Wert des angegebenen Objekts dem aktuellen entspricht, andernfalls false.</returns>
      <param name="obj">Das Objekt, dessen Wert auf Gleichheit geprüft werden soll. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.GetHashCode"></member>
    <member name="P:System.ComponentModel.DefaultValueAttribute.Value">
      <summary>Ruft den Standardwert der Eigenschaft ab, an die dieses Attribut gebunden ist.</summary>
      <returns>Ein <see cref="T:System.Object" />, das den Standardwert der Eigenschaft darstellt, an die dieses Attribut gebunden ist.</returns>
    </member>
    <member name="T:System.ComponentModel.EditorBrowsableAttribute">
      <summary>Gibt an, dass eine Eigenschaft oder eine Methode in einem Editor angezeigt werden kann.Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.#ctor(System.ComponentModel.EditorBrowsableState)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.EditorBrowsableAttribute" />-Klasse mit einem <see cref="T:System.ComponentModel.EditorBrowsableState" />.</summary>
      <param name="state">Der <see cref="T:System.ComponentModel.EditorBrowsableState" />, auf den <see cref="P:System.ComponentModel.EditorBrowsableAttribute.State" /> festgelegt werden soll. </param>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.Equals(System.Object)">
      <summary>Gibt zurück, ob der Wert des angegebenen Objekts gleich dem aktuellen <see cref="T:System.ComponentModel.EditorBrowsableAttribute" /> ist.</summary>
      <returns>true, wenn der Wert des angegebenen Objekts dem aktuellen entspricht, andernfalls false.</returns>
      <param name="obj">Das Objekt, dessen Wert auf Gleichheit geprüft werden soll. </param>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.GetHashCode"></member>
    <member name="P:System.ComponentModel.EditorBrowsableAttribute.State">
      <summary>Ruft den browsebaren Zustand der Eigenschaft oder Methode ab.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.EditorBrowsableState" />, der der browsebare Zustand der Eigenschaft oder Methode ist.</returns>
    </member>
    <member name="T:System.ComponentModel.EditorBrowsableState">
      <summary>Gibt den browsebaren Zustand einer Eigenschaft oder Methode aus einem Editor an.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Advanced">
      <summary>Bei der Eigenschaft oder Methode handelt es sich um ein Feature, das nur für fortgeschrittene Benutzer sichtbar sein sollte.In einem Editor können solche Eigenschaften angezeigt oder ausgeblendet werden.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Always">
      <summary>Die Eigenschaft oder Methode ist aus einem Editor immer browsebar.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Never">
      <summary>Die Eigenschaft oder Methode ist aus einem Editor nie browsebar.</summary>
    </member>
    <member name="T:System.Diagnostics.ConditionalAttribute">
      <summary>Gibt für Compiler an, dass ein Methodenaufruf oder ein Attribut ignoriert werden soll, sofern kein bestimmtes Symbol für die bedingte Kompilierung definiert ist.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Diagnostics.ConditionalAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.ConditionalAttribute" />-Klasse.</summary>
      <param name="conditionString">Eine Zeichenfolge, die das dem Attribut zugeordnete Symbol für die bedingte Kompilierung angibt, bei dem die Groß-/Kleinschreibung beachtet wird. </param>
    </member>
    <member name="P:System.Diagnostics.ConditionalAttribute.ConditionString">
      <summary>Ruft das dem <see cref="T:System.Diagnostics.ConditionalAttribute" />-Attribut zugeordnete Symbol für die bedingte Kompilierung ab.</summary>
      <returns>Eine Zeichenfolge, die das dem <see cref="T:System.Diagnostics.ConditionalAttribute" />-Attribut zugeordnete Symbol für die bedingte Kompilierung angibt, bei dem die Groß-/Kleinschreibung beachtet wird.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.DebuggableAttribute">
      <summary>Verändert die Codegenerierung für Laufzeit-JIT-Debuggen (Just-In-Time).Diese Klasse kann nicht vererbt werden.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Diagnostics.DebuggableAttribute.DebuggingModes)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.DebuggableAttribute" />-Klasse unter Verwendung der angegebenen Debugmodi für den JIT (Just-In-Time)-Compiler. </summary>
      <param name="modes">Eine bitweise Kombination von <see cref="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" />-Werten, die den Debugmodus für den JIT-Compiler angibt.</param>
    </member>
    <member name="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
      <summary>Gibt den Debugmodus für den Just-In-Time (JIT)-Compiler an.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default">
      <summary>Weist den Just-In-Time (JIT)-Compiler an, sein Standardverhalten zu verwenden. Dieses umfasst das Aktivieren von Optimierungen, das Deaktivieren des Bearbeiten- und Fortfahren-Supports und das Verwenden von Symbolspeichersequenzpunkten (sofern vorhanden).In .NET Framework Version 2.0 werden JIT-Tracking-Informationen (der MSIL-Offset (Microsoft Intermediate Language) zum Offset des systemeigenen Codes in einer Methode) immer generiert.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations">
      <summary>Deaktivieren Sie die vom Compiler durchgeführten Optimierungen, damit Ihre Ausgabedatei kleiner, schneller und effizienter wird.Optimierungen führen zu Neuanordnungen von Code in der Ausgabedatei, wodurch das Debuggen erschwert werden kann.In der Regel sollte die Optimierung beim Debuggen deaktiviert werden.Kombinieren Sie diesen Wert in den Versionen ab 2.0 mit Default (Default | DisableOptimizations), um JIT-Tracking zu aktivieren und Optimierungen zu deaktivieren.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.EnableEditAndContinue">
      <summary>Aktivieren Sie Bearbeiten und Fortfahren.Mit Bearbeiten und Fortfahren können Sie Änderungen am Quellcode vornehmen, während sich das Programm im Unterbrechungsmodus befindet.Die Möglichkeit des Bearbeitens und Fortfahrens ist vom Compiler abhängig.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints">
      <summary>Verwenden Sie die impliziten MSIL-Sequenzpunkte und nicht die Programmdatenbank-Sequenzpunkte (PDB).Die Symbolinformationen enthalten i. d. R. mindestens einen MSIL-Offset (Microsoft Intermediate Language) für jede Quellzeile.Bevor der JIT-Compiler (Just-In-Time) eine Methode kompiliert, fordert er von den Profilerstellungsdiensten eine Liste der zu speichernden MSIL-Offsets an.Diese MSIL-Offsets werden Sequenzpunkte genannt.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.None">
      <summary>In .NET Framework Version 2.0 werden stets JIT-Tracking-Informationen generiert. Dieses Flag hat denselben Effekt wie <see cref="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default" /> jedoch mit der Ausnahme, dass die <see cref="P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled" />-Eigenschaft false ist, was in Version 2.0 keine Bedeutung hat.</summary>
    </member>
    <member name="T:System.Globalization.DateTimeStyles">
      <summary>Definiert die Formatierungsoptionen, mit denen die Art der Analyse einer Zeichenfolge für eine Reihe von Datums- und Uhrzeit-Analysemethoden angepasst wird.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AdjustToUniversal">
      <summary>Datum und Uhrzeit werden in koordinierter Weltzeit (UTC) zurückgegeben.Wenn die Eingabezeichenfolge über einen Zeitzonenbezeichner oder <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> eine Ortszeit angibt, werden das Datum und die Uhrzeit von der Ortszeit in UTC konvertiert.Wenn die Eingabezeichenfolge über einen Zeitzonenbezeichner oder <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" /> eine UTC-Zeit angibt, erfolgt keine Konvertierung.Wenn die Eingabezeichenfolge weder eine lokale noch eine UTC-Zeit angibt, erfolgt keine Konvertierung, und die resultierende <see cref="P:System.DateTime.Kind" />-Eigenschaft ist <see cref="F:System.DateTimeKind.Unspecified" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowInnerWhite">
      <summary>Zusätzliche Leerzeichen inmitten der Zeichenfolge müssen während der Analyse ignoriert werden, es sei denn, sie sind in den <see cref="T:System.Globalization.DateTimeFormatInfo" />-Formatmustern enthalten.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowLeadingWhite">
      <summary>Vorangestellte Leerzeichen müssen während der Analyse ignoriert werden, es sei denn, sie sind in den <see cref="T:System.Globalization.DateTimeFormatInfo" />-Formatmustern enthalten.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowTrailingWhite">
      <summary>Nachgestellte Leerzeichen müssen während der Analyse ignoriert werden, es sei denn, sie sind in den <see cref="T:System.Globalization.DateTimeFormatInfo" />-Formatmustern enthalten.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowWhiteSpaces">
      <summary>Zusätzliche Leerzeichen an beliebiger Stelle in der Zeichenfolge müssen während der Analyse ignoriert werden, es sei denn, sie sind in den <see cref="T:System.Globalization.DateTimeFormatInfo" />-Formatmustern enthalten.Dieser Wert stellt eine Kombination aus den Werten <see cref="F:System.Globalization.DateTimeStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.DateTimeStyles.AllowTrailingWhite" /> und <see cref="F:System.Globalization.DateTimeStyles.AllowInnerWhite" /> dar.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AssumeLocal">
      <summary>Mit der Zeichenfolge soll die Ortszeit angegeben werden, wenn in der analysierten Zeichenfolge keine Zeitzone angegeben ist. </summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AssumeUniversal">
      <summary>Mit der Zeichenfolge soll die UTC angegeben werden, wenn in der analysierten Zeichenfolge keine Zeitzone angegeben ist. </summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault">
      <summary>Die Analysemethoden legen das Datum nach dem gregorianische Kalender mit Jahr = 1, Monat = 1 und Tag = 1 zugrunde, wenn die analysierte Zeichenfolge nur die Uhrzeit und nicht das Datum enthält.Wenn dieser Wert nicht verwendet wird, wird vom aktuellen Datum ausgegangen.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.None">
      <summary>Die Standardformatierungsoptionen müssen verwendet werden.Dieser Wert stellt das Standardformat für die Methoden <see cref="M:System.DateTime.Parse(System.String)" />, <see cref="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)" /> und <see cref="M:System.DateTime.TryParse(System.String,System.DateTime@)" /> dar.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.RoundtripKind">
      <summary>Das <see cref="T:System.DateTimeKind" />-Feld eines Datums wird beibehalten, wenn ein <see cref="T:System.DateTime" />-Objekt mit dem Standardformatbezeichner "o" oder "r" in eine Zeichenfolge und dann die Zeichenfolge wiederum zurück in ein <see cref="T:System.DateTime" />-Objekt konvertiert wird.</summary>
    </member>
    <member name="T:System.Globalization.NumberStyles">
      <summary>Bestimmt die Formate, die in numerischen Zeichenfolgenargumenten erlaubt sind, die an die Parse-Methode und TryParse-Methode des numerischen Typs der Ganzzahl oder einer Gleitkommazahl übergeben werden.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowCurrencySymbol">
      <summary>Gibt an, dass die numerische Zeichenfolge ein Währungssymbol enthalten kann.Gültige Währungssymbole werden von der <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />-Eigenschaft bestimmt.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowDecimalPoint">
      <summary>Gibt an, dass die numerische Zeichenfolge ein Dezimaltrennzeichen enthalten kann.Wenn der <see cref="T:System.Globalization.NumberStyles" />-Wert das <see cref="F:System.Globalization.NumberStyles.AllowCurrencySymbol" />-Flag enthält, und die analysierte Zeichenfolge ein Währungssymbol einschließt, wird das Dezimaltrennzeichen von der <see cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />-Eigenschaft bestimmt.Andernfalls wird das Dezimaltrennzeichen von der <see cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />-Eigenschaft bestimmt.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowExponent">
      <summary>Gibt an, dass die numerische Zeichenfolge in Exponentialschreibweise vorliegen kann.Das <see cref="F:System.Globalization.NumberStyles.AllowExponent" />-Flag ermöglicht es der analysierten Zeichenfolge, einen Exponenten zu enthalten, der mit dem Zeichen "E" oder "e" beginnt und dem ein optionales positives oder negatives Vorzeichen und eine ganze Zahl folgen.Anders ausgedrückt, werden Zeichenfolgen im Format nnnExx, nnnE+xx und nnnE-xx analysiert.Es ist kein Dezimaltrennzeichen im Signifikanden oder in der Mantisse zulässig. Damit diese Elemente in der Zeichenfolge analysiert werden können, verwenden Sie das <see cref="F:System.Globalization.NumberStyles.AllowDecimalPoint" />-Flag und das <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" />-Flag, oder verwenden Sie ein zusammengesetztes Format, das diese einzelnen Flags enthält.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowHexSpecifier">
      <summary>Gibt an, dass die numerische Zeichenfolge einen Hexadezimalwert darstellt.Gültige Hexadezimalwerte können die numerischen Ziffern 0-9 und die Hexadezimalziffern A-F bzw. a-f enthalten.Mit diesem Format analysierten Zeichenfolgen darf kein "0x" oder "&amp;h" vorangestellt werden.Eine mit dem <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />-Format analysierte Zeichenfolge wird immer als Hexadezimalwert interpretiert.Die einzigen Flags, die mit <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> kombiniert werden können, sind <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" /> und <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" />.Die <see cref="T:System.Globalization.NumberStyles" />-Enumeration schließt ein zusammengesetztes Format ein, <see cref="F:System.Globalization.NumberStyles.HexNumber" />, das aus diesen drei Flags besteht.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowLeadingSign">
      <summary>Gibt an, dass die numerische Zeichenfolge mit einem Vorzeichen versehen sein kann.Gültige Zeichen für Vorzeichen werden von der <see cref="P:System.Globalization.NumberFormatInfo.PositiveSign" />-Eigenschaft und der <see cref="P:System.Globalization.NumberFormatInfo.NegativeSign" />-Eigenschaft bestimmt.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowLeadingWhite">
      <summary>Gibt an, dass führende Leerraumzeichen in der analysierten Zeichenfolge vorhanden sein dürfen.Gültige Leerzeichen haben die Unicode-Werte U+0009, U+000A, U+000B, U+000C, U+000D und U+0020.Hierbei handelt es sich um eine Teilmenge der Zeichen, für die die <see cref="M:System.Char.IsWhiteSpace(System.Char)" />-Methode true zurückgibt.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowParentheses">
      <summary>Gibt an, dass die numerische Zeichenfolge über ein die Zahl umschließendes Klammerpaar verfügen kann.Die Klammern geben an, dass die zu analysierende Zeichenfolge eine negative Zahl darstellt.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowThousands">
      <summary>Gibt an, dass die numerische Zeichenfolge über Gruppentrennzeichen verfügen kann, z. B. Symbole zum Trennen der Hunderter von den Tausendern.Wenn der <see cref="T:System.Globalization.NumberStyles" />-Wert das <see cref="F:System.Globalization.NumberStyles.AllowCurrencySymbol" />-Flag und die zu analysierende Zeichenfolge ein Währungssymbol einschließt, wird das gültige Gruppentrennzeichen von der <see cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />-Eigenschaft bestimmt, und die Anzahl der Ziffern in jeder Gruppe wird von der <see cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />-Eigenschaft bestimmt.Andernfalls wird das gültige Gruppentrennzeichen von der <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />-Eigenschaft bestimmt, und die Anzahl der Ziffern in den einzelnen Gruppen wird von der <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />-Eigenschaft bestimmt.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowTrailingSign">
      <summary>Gibt an, dass die numerische Zeichenfolge mit einem nachstehenden Zeichen versehen sein kann.Gültige nachstehende Zeichen werden von der <see cref="P:System.Globalization.NumberFormatInfo.PositiveSign" />-Eigenschaft und der <see cref="P:System.Globalization.NumberFormatInfo.NegativeSign" />-Eigenschaft bestimmt.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowTrailingWhite">
      <summary>Gibt an, dass nachgestellte Leerraumzeichen in der analysierten Zeichenfolge vorhanden sein dürfen.Gültige Leerzeichen haben die Unicode-Werte U+0009, U+000A, U+000B, U+000C, U+000D und U+0020.Hierbei handelt es sich um eine Teilmenge der Zeichen, für die die <see cref="M:System.Char.IsWhiteSpace(System.Char)" />-Methode true zurückgibt.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Any">
      <summary>Gibt an, dass alle Stile außer <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> verwendet werden.Dies ist ein zusammengesetzter Zahlenstil.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Currency">
      <summary>Gibt an, dass alle Stile außer <see cref="F:System.Globalization.NumberStyles.AllowExponent" /> und <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> verwendet werden.Dies ist ein zusammengesetzter Zahlenstil.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Float">
      <summary>Gibt an, dass die Stile <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" />, <see cref="F:System.Globalization.NumberStyles.AllowDecimalPoint" /> und <see cref="F:System.Globalization.NumberStyles.AllowExponent" /> verwendet werden.Dies ist ein zusammengesetzter Zahlenstil.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.HexNumber">
      <summary>Gibt an, dass die Stile <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" /> und <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> verwendet werden.Dies ist ein zusammengesetzter Zahlenstil.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Integer">
      <summary>Gibt an, dass die Stile <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" /> und <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" /> verwendet werden.Dies ist ein zusammengesetzter Zahlenstil.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.None">
      <summary>Gibt an, dass keine Stilelemente, z. B. vorangestellte oder nachgestellte Leerstellen, Tausendertrennzeichen oder ein Dezimaltrennzeichen, in der analysierten Zeichenfolge vorhanden sein können.Die zu analysierende Zeichenfolge muss ausschließlich aus ganzzahligen Dezimalziffern bestehen.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Number">
      <summary>Gibt an, dass die Stile <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingSign" />, <see cref="F:System.Globalization.NumberStyles.AllowDecimalPoint" /> und <see cref="F:System.Globalization.NumberStyles.AllowThousands" /> verwendet werden.Dies ist ein zusammengesetzter Zahlenstil.</summary>
    </member>
    <member name="T:System.Globalization.TimeSpanStyles">
      <summary>Definiert die Formatierungsoptionen, mit denen die Art der Analyse einer Zeichenfolge durch die <see cref="Overload:System.TimeSpan.ParseExact" />-Methode und die <see cref="Overload:System.TimeSpan.TryParseExact" />-Methode angepasst wird.</summary>
    </member>
    <member name="F:System.Globalization.TimeSpanStyles.AssumeNegative">
      <summary>Gibt an, dass eine Eingabe immer als negatives Zeitintervall interpretiert wird.</summary>
    </member>
    <member name="F:System.Globalization.TimeSpanStyles.None">
      <summary>Gibt an, dass eine Eingabe nur dann als negatives Zeitintervall interpretiert wird, wenn ein negatives Vorzeichen vorhanden ist.</summary>
    </member>
    <member name="T:System.IO.DirectoryNotFoundException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein Teil einer Datei oder eines Verzeichnisses nicht gefunden wurde.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.DirectoryNotFoundException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.DirectoryNotFoundException" />-Klasse, bei der die Meldungszeichenfolge auf eine vom System gelieferte Meldung und HRESULT auf COR_E_DIRECTORYNOTFOUND festgelegt ist.</summary>
    </member>
    <member name="M:System.IO.DirectoryNotFoundException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.DirectoryNotFoundException" />-Klasse, bei der die Nachrichtenzeichenfolge auf <paramref name="message" /> und HRESULT auf COR_E_DIRECTORYNOTFOUND festgelegt wurde.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt.Der Inhalt der <paramref name="message" /> soll in verständlicher Sprache gehalten sein.Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.IO.DirectoryNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.DirectoryNotFoundException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.IO.FileLoadException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn eine verwaltete Assembly gefunden wurde, doch nicht geladen werden kann.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.FileLoadException" />-Klasse. Dabei wird die <see cref="P:System.Exception.Message" />-Eigenschaft der neuen Instanz auf eine vom System bereitgestellte Meldung festgelegt, die den Fehler beschreibt, z. B. "Die angegebene Datei konnte nicht geladen werden". Diese Methode berücksichtigt die aktuelle Systemkultur.</summary>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.FileLoadException" />-Klasse mit der angegebenen Fehlermeldung.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt.Der Inhalt der <paramref name="message" /> soll in verständlicher Sprache gehalten sein.Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.FileLoadException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt.Der Inhalt der <paramref name="message" /> soll in verständlicher Sprache gehalten sein.Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="inner" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.FileLoadException" />-Klasse mit einer angegebenen Fehlermeldung und dem Namen der Datei, die nicht geladen werden konnte.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt.Der Inhalt der <paramref name="message" /> soll in verständlicher Sprache gehalten sein.Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="fileName">Eine <see cref="T:System.String" />-Klasse, die den Namen der nicht geladenen Datei enthält. </param>
    </member>
    <member name="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.FileLoadException" />-Klasse mit einer angegebenen Fehlermeldung, dem Namen der Datei, die nicht geladen werden konnte, und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt.Der Inhalt der <paramref name="message" /> soll in verständlicher Sprache gehalten sein.Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="fileName">Eine <see cref="T:System.String" />-Klasse, die den Namen der nicht geladenen Datei enthält. </param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="inner" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="P:System.IO.FileLoadException.FileName">
      <summary>Ruft den Namen der Datei ab, die diese Ausnahme verursacht hat.</summary>
      <returns>Eine <see cref="T:System.String" />-Klasse mit dem Namen der Datei mit dem ungültigen Abbild oder einem NULL-Verweis, wenn dem Konstruktor der aktuellen Instanz kein Dateiname übergeben wurde.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.FileLoadException.Message">
      <summary>Ruft die Fehlermeldung und den Namen der Datei ab, die diese Ausnahme verursacht hat.</summary>
      <returns>Eine Zeichenfolge mit der Fehlermeldung und dem Namen der Datei, die diese Ausnahme verursacht hat.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.FileLoadException.ToString">
      <summary>Gibt den vollqualifizierten Namen der aktuellen Ausnahme und ggf. die Fehlermeldung, den Namen der inneren Ausnahme und die Stapelüberwachung zurück.</summary>
      <returns>Eine Zeichenfolge, die den vollqualifizierten Namen dieser Ausnahme und, abhängig vom verwendeten <see cref="T:System.IO.FileLoadException" />-Konstruktor, ggf. die Fehlermeldung, den Namen der inneren Ausnahme und die Stapelüberwachung enthält.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.IO.FileNotFoundException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn auf eine Datei zugegriffen wird, die auf dem Datenträger nicht vorhanden ist.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.FileNotFoundException" />-Klasse, bei der die Meldungszeichenfolge auf eine vom System gelieferte Meldung und HRESULT auf COR_E_FILENOTFOUND festgelegt ist.</summary>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.FileNotFoundException" />-Klasse, bei der die Nachrichtenzeichenfolge auf <paramref name="message" /> und HRESULT auf COR_E_FILENOTFOUND festgelegt wurde.</summary>
      <param name="message">Eine Beschreibung des Fehlers.Der Inhalt der <paramref name="message" /> soll in verständlicher Sprache gehalten sein.Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.FileNotFoundException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Eine Beschreibung des Fehlers.Der Inhalt der <paramref name="message" /> soll in verständlicher Sprache gehalten sein.Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.FileNotFoundException" />-Klasse, bei der die Nachrichtenzeichenfolge auf <paramref name="message" /> festgelegt ist, wodurch der Name der nicht gefundenen Datei angegeben wird. HRESULT ist auf COR_E_FILENOTFOUND festgelegt.</summary>
      <param name="message">Eine Beschreibung des Fehlers.Der Inhalt der <paramref name="message" /> soll in verständlicher Sprache gehalten sein.Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="fileName">Der vollständige Name der Datei mit dem ungültigen Abbild. </param>
    </member>
    <member name="M:System.IO.FileNotFoundException.#ctor(System.String,System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.FileNotFoundException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="fileName">Der vollständige Name der Datei mit dem ungültigen Abbild. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="P:System.IO.FileNotFoundException.FileName">
      <summary>Ruft den Namen der Datei ab, die nicht gefunden wurde.</summary>
      <returns>Der Name der Datei oder null, wenn kein Dateiname an den Konstruktor für diese Instanz übergeben wurde.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.FileNotFoundException.Message">
      <summary>Ruft die Fehlermeldung ab, in der die Ursache der Ausnahme erklärt wird.</summary>
      <returns>Die Fehlermeldung.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.FileNotFoundException.ToString">
      <summary>Gibt den vollqualifizierten Namen dieser Ausnahme und ggf. die Fehlermeldung sowie den Namen der inneren Ausnahme und die Stapelüberwachung zurück.</summary>
      <returns>Der vollqualifizierte Name dieser Ausnahme und ggf. die Fehlermeldung sowie der Name der inneren Ausnahme und die Stapelüberwachung.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.IO.IOException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein E/A-Fehler auftritt.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IO.IOException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.IOException" />-Klasse, bei der die Meldungszeichenfolge auf die leere Zeichenfolge (""), HRESULT auf COR_E_IO und die innere Ausnahme auf einen NULL-Verweis festgelegt ist.</summary>
    </member>
    <member name="M:System.IO.IOException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.IOException" />-Klasse, bei der die Meldungszeichenfolge auf <paramref name="message" />, HRESULT auf COR_E_IO und die innere Ausnahme auf null festgelegt ist.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt.Der Inhalt der <paramref name="message" /> soll in verständlicher Sprache gehalten sein.Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.IO.IOException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.IOException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="M:System.IO.IOException.#ctor(System.String,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.IOException" />-Klasse, bei der die Meldungszeichenfolge auf <paramref name="message" /> festgelegt und HRESULT benutzerdefiniert ist.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt.Der Inhalt der <paramref name="message" /> soll in verständlicher Sprache gehalten sein.Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="hresult">Eine ganze Zahl, die den aufgetretenen Fehler kennzeichnet. </param>
    </member>
    <member name="T:System.IO.PathTooLongException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein Pfad- oder Dateiname länger als die vom System festgelegte maximale Länge ist.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.PathTooLongException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.PathTooLongException" />-Klasse, bei der HRESULT auf COR_E_PATHTOOLONG festgelegt ist.</summary>
    </member>
    <member name="M:System.IO.PathTooLongException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.PathTooLongException" />-Klasse, bei der die Meldungszeichenfolge auf <paramref name="message" /> und HRESULT auf COR_E_PATHTOOLONG festgelegt ist.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt.Der Inhalt der <paramref name="message" /> soll in verständlicher Sprache gehalten sein.Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.IO.PathTooLongException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.PathTooLongException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt.Der Inhalt der <paramref name="message" /> soll in verständlicher Sprache gehalten sein.Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Reflection.AssemblyCompanyAttribute">
      <summary>Definiert ein benutzerdefiniertes Attribut für den Firmennamen eines Assemblymanifests.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyCompanyAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyCompanyAttribute" />-Klasse.</summary>
      <param name="company">Die Informationen über den Firmennamen. </param>
    </member>
    <member name="P:System.Reflection.AssemblyCompanyAttribute.Company">
      <summary>Ruft Informationen über den Firmennamen ab.</summary>
      <returns>Eine Zeichenfolge mit dem Firmennamen.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyConfigurationAttribute">
      <summary>Gibt die Buildkonfiguration für eine Assembly an, z. B. Retail oder Debug.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyConfigurationAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyConfigurationAttribute" />-Klasse.</summary>
      <param name="configuration">Die Assemblykonfiguration. </param>
    </member>
    <member name="P:System.Reflection.AssemblyConfigurationAttribute.Configuration">
      <summary>Ruft Informationen über die Assemblykonfiguration ab.</summary>
      <returns>Eine Zeichenfolge mit Informationen über die Assemblykonfiguration.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyCopyrightAttribute">
      <summary>Definiert ein benutzerdefiniertes Attribut für das Copyright eines Assemblymanifests.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyCopyrightAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyCopyrightAttribute" />-Klasse.</summary>
      <param name="copyright">Die Informationen über das Copyright. </param>
    </member>
    <member name="P:System.Reflection.AssemblyCopyrightAttribute.Copyright">
      <summary>Ruft die Informationen über das Copyright ab.</summary>
      <returns>Eine Zeichenfolge mit Informationen über das Copyright.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyCultureAttribute">
      <summary>Gibt an, welchen Kulturkreis die Assembly unterstützt.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyCultureAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyCultureAttribute" />-Klasse mit der Kultur, die von der attributierten Klasse unterstützt wird.</summary>
      <param name="culture">Die Kultur, die von der attributierten Assembly unterstützt wird. </param>
    </member>
    <member name="P:System.Reflection.AssemblyCultureAttribute.Culture">
      <summary>Ruft die von der attributierten Assembly unterstützte Kultur ab.</summary>
      <returns>Eine Zeichenfolge, die den Namen der unterstützten Kultur enthält.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyDefaultAliasAttribute">
      <summary>Definiert einen aussagekräftigen Standardalias für ein Assemblymanifest.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyDefaultAliasAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyDefaultAliasAttribute" />-Klasse.</summary>
      <param name="defaultAlias">Die Informationen über den Standardalias der Assembly. </param>
    </member>
    <member name="P:System.Reflection.AssemblyDefaultAliasAttribute.DefaultAlias">
      <summary>Ruft Informationen über den Standardalias ab.</summary>
      <returns>Eine Zeichenfolge, die Informationen über den Standardalias enthält.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyDelaySignAttribute">
      <summary>Gibt an, dass die Assembly beim Erstellen nicht vollständig signiert wurde.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyDelaySignAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyDelaySignAttribute" />-Klasse.</summary>
      <param name="delaySign">true, wenn das von diesem Attribut dargestellte Feature aktiviert ist, andernfalls false. </param>
    </member>
    <member name="P:System.Reflection.AssemblyDelaySignAttribute.DelaySign">
      <summary>Ruft einen Wert ab, der den Zustand des Attributs angibt.</summary>
      <returns>true, wenn diese Assembly als verzögert signierte Assembly erstellt wurde, andernfalls false.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyDescriptionAttribute">
      <summary>Stellt eine Textbeschreibung für eine Assembly bereit.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyDescriptionAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyDescriptionAttribute" />-Klasse.</summary>
      <param name="description">Die Beschreibung der Assembly. </param>
    </member>
    <member name="P:System.Reflection.AssemblyDescriptionAttribute.Description">
      <summary>Ruft Informationen über die Assemblybeschreibung ab.</summary>
      <returns>Eine Zeichenfolge, die die Assemblybeschreibung enthält.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyFileVersionAttribute">
      <summary>Weist einen Compiler an, eine bestimmte Versionsnummer für die Win32-Dateiversionsressource zu verwenden.Es ist nicht erforderlich, dass die Win32-Dateiversion mit der Versionsnummer der Assembly übereinstimmt.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyFileVersionAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyFileVersionAttribute" />-Klasse, wobei die Dateiversion angegeben ist.</summary>
      <param name="version">Die Dateiversion. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> ist null. </exception>
    </member>
    <member name="P:System.Reflection.AssemblyFileVersionAttribute.Version">
      <summary>Ruft den Namen der Win32-Dateiversionsressource ab.</summary>
      <returns>Eine Zeichenfolge, die den Namen der Dateiversionsressource enthält.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyFlagsAttribute">
      <summary>Gibt eine bitweise Kombination von <see cref="T:System.Reflection.AssemblyNameFlags" />-Flags für eine Assembly an. Diese dienen zur Beschreibung von Optionen für den JIT-Compiler (Just In Time) und geben an, ob die Assembly erneut zugewiesen werden kann und ob sie einen vollen bzw. einen mit Token versehenen öffentlichen Schlüssel besitzt.Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyFlagsAttribute" />-Klasse mit der angegebenen Kombination von <see cref="T:System.Reflection.AssemblyNameFlags" />-Flags.</summary>
      <param name="assemblyFlags">Eine bitweise Kombination von <see cref="T:System.Reflection.AssemblyNameFlags" />-Flags. Diese stehen für JIT-Compileroptionen (Just In Time) sowie Gültigkeitsdauer und geben an, ob die Assembly erneut zugewiesen werden kann und ob sie einen vollen bzw. einen mit Token versehenen öffentlichen Schlüssel besitzt.</param>
    </member>
    <member name="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
      <summary>Ruft einen Ganzzahlwert ab, der die Kombination von <see cref="T:System.Reflection.AssemblyNameFlags" />-Flags darstellt, die nach dem Erstellen dieser Attributinstanz angegeben werden.</summary>
      <returns>Ein Ganzzahlwert, der eine bitweise Kombination von <see cref="T:System.Reflection.AssemblyNameFlags" />-Flags darstellt.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyInformationalVersionAttribute">
      <summary>Definiert zusätzliche Versionsinformationen für ein Assemblymanifest.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyInformationalVersionAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyInformationalVersionAttribute" />-Klasse.</summary>
      <param name="informationalVersion">Die Informationen über die Version der Assembly. </param>
    </member>
    <member name="P:System.Reflection.AssemblyInformationalVersionAttribute.InformationalVersion">
      <summary>Ruft Versionsinformationen ab.</summary>
      <returns>Eine Zeichenfolge mit Versionsinformationen.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyKeyFileAttribute">
      <summary>Gibt den Namen einer Datei an, die das Schlüsselpaar zum Generieren eines starken Namens enthält.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyKeyFileAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der AssemblyKeyFileAttribute-Klasse mit dem Namen der Datei, die das Schlüsselpaar zum Generieren eines starken Namens für die Assembly enthält, die mit Attributen versehen wird.</summary>
      <param name="keyFile">Der Name der Datei mit dem Schlüsselpaar. </param>
    </member>
    <member name="P:System.Reflection.AssemblyKeyFileAttribute.KeyFile">
      <summary>Ruft den Namen der Datei ab, die das Schlüsselpaar zum Generieren eines starken Namens für die mit Attributen versehene Assembly enthält.</summary>
      <returns>Eine Zeichenfolge mit dem Namen der Datei, die das Schlüsselpaar enthält.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyKeyNameAttribute">
      <summary>Gibt den Namen eines Schlüsselcontainers innerhalb des CSP (Crypto Service Provider) an, der das Schlüsselpaar zum Generieren eines starken Namens enthält.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyKeyNameAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyKeyNameAttribute" />-Klasse mit dem Namen des Containers, der das Schlüsselpaar zum Generieren eines starken Namens für die Assembly enthält, die mit Attributen versehen wird.</summary>
      <param name="keyName">Der Name des Containers mit dem Schlüsselpaar. </param>
    </member>
    <member name="P:System.Reflection.AssemblyKeyNameAttribute.KeyName">
      <summary>Ruft den Namen des Containers ab, der das Schlüsselpaar zum Generieren eines starken Namens für die mit Attributen versehene Assembly enthält.</summary>
      <returns>Eine Zeichenfolge mit dem Namen der Containers, der das zutreffende Schlüsselpaar enthält.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyMetadataAttribute">
      <summary>Definiert ein Schlüssel-Wert-Metadatenpaar für die ergänzte Assembly.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyMetadataAttribute.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyMetadataAttribute" />-Klasse unter Verwendung des angegebenen Metadatenschlüssels und -werts.</summary>
      <param name="key">Der Metadaten-Schlüssel</param>
      <param name="value">Der Wert der Metadaten.</param>
    </member>
    <member name="P:System.Reflection.AssemblyMetadataAttribute.Key">
      <summary>Ruft den Metadatenschlüssel ab.</summary>
      <returns>Der Metadaten-Schlüssel</returns>
    </member>
    <member name="P:System.Reflection.AssemblyMetadataAttribute.Value">
      <summary>Ruft den Metadatenwert ab.</summary>
      <returns>Der Wert der Metadaten.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyNameFlags">
      <summary>Stellt Informationen über einen <see cref="T:System.Reflection.Assembly" />-Verweis bereit.</summary>
    </member>
    <member name="F:System.Reflection.AssemblyNameFlags.None">
      <summary>Gibt an, dass keine Flags aktiviert sind.</summary>
    </member>
    <member name="F:System.Reflection.AssemblyNameFlags.PublicKey">
      <summary>Gibt an, dass ein öffentlicher Schlüssel aus dem vollständigen öffentlichen Schlüssel und nicht aus dem Token des öffentlichen Schlüssels generiert wird.</summary>
    </member>
    <member name="F:System.Reflection.AssemblyNameFlags.Retargetable">
      <summary>Gibt an, dass die Assembly zur Laufzeit auf eine Assembly von einem anderen Verleger umgeleitet werden kann.Dieser Wert unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
    </member>
    <member name="T:System.Reflection.AssemblyProductAttribute">
      <summary>Definiert ein benutzerdefiniertes Produktnamenattribut für ein Assemblymanifest.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyProductAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyProductAttribute" />-Klasse.</summary>
      <param name="product">Die Informationen über den Produktnamen. </param>
    </member>
    <member name="P:System.Reflection.AssemblyProductAttribute.Product">
      <summary>Ruft Informationen über den Produktnamen ab.</summary>
      <returns>Eine Zeichenfolge, die den Produktnamen enthält.</returns>
    </member>
    <member name="T:System.Reflection.AssemblySignatureKeyAttribute">
      <summary>Stellt die Migration von einem älteren, einfacheren Schlüssel mit starkem Namen zu einem größeren Schlüssel mit einem stärkeren Hashalgorithmus bereit.</summary>
    </member>
    <member name="M:System.Reflection.AssemblySignatureKeyAttribute.#ctor(System.String,System.String)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Reflection.AssemblySignatureKeyAttribute" />-Klasse, wobei der angegebene öffentliche Schlüssel und die Gegensignatur verwendet werden.</summary>
      <param name="publicKey">Die öffentliche Schlüssel oder der Identitätsschlüssel.</param>
      <param name="countersignature">Die Gegensignatur; dabei handelt es sich um den Signaturschlüsselteil in einem Schlüssel mit starkem Namen.</param>
    </member>
    <member name="P:System.Reflection.AssemblySignatureKeyAttribute.Countersignature">
      <summary>Ruft die Gegensignatur für den starken Namen für diese Assembly ab.</summary>
      <returns>Die Gegensignatur für diesen Signaturschlüssel.</returns>
    </member>
    <member name="P:System.Reflection.AssemblySignatureKeyAttribute.PublicKey">
      <summary>Ruft den öffentlichen Schlüssels für den starken Namen ab, der verwendet wird, um die Assembly zu signieren.</summary>
      <returns>Der öffentliche Schlüssel für diese Assembly.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyTitleAttribute">
      <summary>Gibt eine Beschreibung für eine Assembly an.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyTitleAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyTitleAttribute" />-Klasse.</summary>
      <param name="title">Der Assemblytitel. </param>
    </member>
    <member name="P:System.Reflection.AssemblyTitleAttribute.Title">
      <summary>Ruft Informationen über den Assemblytitel ab.</summary>
      <returns>Der Assemblytitel. </returns>
    </member>
    <member name="T:System.Reflection.AssemblyTrademarkAttribute">
      <summary>Definiert ein benutzerdefiniertes Markenattribut für ein Assemblymanifest.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyTrademarkAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyTrademarkAttribute" />-Klasse.</summary>
      <param name="trademark">Die Markeninformationen. </param>
    </member>
    <member name="P:System.Reflection.AssemblyTrademarkAttribute.Trademark">
      <summary>Ruft Markeninformationen ab.</summary>
      <returns>Ein String, der die Markeninformationen enthält.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyVersionAttribute">
      <summary>Gibt die Version der Assembly an, die gerade mit Attributen versehen wird.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der AssemblyVersionAttribute-Klasse mit der Versionsnummer der Assembly, die mit Attributen versehen wird.</summary>
      <param name="version">Die Versionsnummer der mit Attributen versehenen Assembly. </param>
    </member>
    <member name="P:System.Reflection.AssemblyVersionAttribute.Version">
      <summary>Ruft die Versionsnummer der mit Attributen versehenen Assembly ab.</summary>
      <returns>Eine Zeichenfolge mit der Versionsnummer der Assembly.</returns>
    </member>
    <member name="T:System.Reflection.DefaultMemberAttribute">
      <summary>Definiert den Member eines Typs, der der von <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /> verwendete Standardmember ist. </summary>
    </member>
    <member name="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.DefaultMemberAttribute" />-Klasse.</summary>
      <param name="memberName">Ein String mit dem Namen des aufzurufenden Members.Dies kann ein Konstruktor, eine Methode, eine Eigenschaft oder ein Feld sein.Beim Aufruf des Members muss ein geeignetes Aufrufattribut angegeben werden.Der Standardmember einer Klasse kann durch Übergeben eines leeren String als Name des Members angegeben werden.Der Standardmember eines Typs wird mit dem benutzerdefinierten DefaultMemberAttribute-Attribut oder in COM auf die übliche Weise gekennzeichnet. </param>
    </member>
    <member name="P:System.Reflection.DefaultMemberAttribute.MemberName">
      <summary>Ruft den Namen des Attributs ab.</summary>
      <returns>Eine Zeichenfolge, die den Membernamen darstellt.</returns>
    </member>
    <member name="T:System.Reflection.ProcessorArchitecture">
      <summary>Identifiziert den Prozessor und die Bits pro Wort für die Plattform, auf die eine ausführbare Datei zielt.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.Amd64">
      <summary>Nur ein 64-Bit-AMD-Prozessor.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.Arm">
      <summary>Ein ARM-Prozessor.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.IA64">
      <summary>Nur ein 64-Bit-Intel-Prozessor.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.MSIL">
      <summary>Neutral hinsichtlich des Prozessors und der Bits pro Wort.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.None">
      <summary>Eine unbekannte oder nicht angegebene Kombination aus Prozessor und Bits pro Wort.</summary>
    </member>
    <member name="F:System.Reflection.ProcessorArchitecture.X86">
      <summary>Ein 32-Bit-Intel-Prozessor, entweder systemeigen oder in der Windows on Windows-Umgebung auf einer 64-Bit-Plattform (WOW64).</summary>
    </member>
    <member name="T:System.Runtime.GCLargeObjectHeapCompactionMode">
      <summary>[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt] Gibt an, ob die folgende blockierende Garbage Collection den großen Objektheap (LOH) komprimiert. </summary>
    </member>
    <member name="F:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce">
      <summary>Der große Objektheap (LOH) wird während der nächsten blockierenden Garbage Collection der zweiten Generation komprimiert. </summary>
    </member>
    <member name="F:System.Runtime.GCLargeObjectHeapCompactionMode.Default">
      <summary>Der große Objektheap (LOH) wird nicht komprimiert.</summary>
    </member>
    <member name="T:System.Runtime.GCLatencyMode">
      <summary>Passt die Zeit an, für die der Garbage Collector in die Anwendung eingreift.   </summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.Batch">
      <summary>Deaktiviert die Gleichzeitigkeit der Garbage Collection und gibt Objekte in einem Batchaufruf wieder frei.Dies ist der intrusivste Modus.</summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.Interactive">
      <summary>Aktiviert die gleichzeitige Garbage Collection und gibt Objekte wieder frei, während die Anwendung ausgeführt wird.Dies ist der Standardmodus für die Garbage Collection auf einer Arbeitsstation und weniger intrusiv als <see cref="F:System.Runtime.GCLatencyMode.Batch" />.Dabei werden Reaktionsgeschwindigkeit und Durchsatz ausgeglichen.</summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.LowLatency">
      <summary>Aktiviert eine Garbage Collection, die bei der Freigabe von Objekten zurückhaltender ist.Vollständige Garbage Collections werden nur ausgeführt, wenn das System wenig Speicher aufweist, während Garbage Collections der Generation 0 und der Generation 1 häufiger ausgeführt werden können.</summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.SustainedLowLatency">
      <summary>Aktiviert Garbage Collection, die versucht, Wartezeit über einen längeren Zeitraum zu minimieren.Der Collector versucht, nur Generation 0-, Generation 1- und gleichzeitige Generation 2-Auflistungen durchzuführen.Die vollständige Sperrung von Auflistungen kann bei unzureichendem Speicherplatz weiterhin auftreten.</summary>
    </member>
    <member name="T:System.Runtime.GCSettings">
      <summary>Gibt die Garbage Collection-Einstellungen für den aktuellen Prozess an. </summary>
    </member>
    <member name="P:System.Runtime.GCSettings.IsServerGC">
      <summary>Ruft einen Wert ab, der angibt, ob die Garbage Collection für Server aktiviert ist.</summary>
      <returns>true, wenn die Garbage Collection für Server aktiviert ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
      <summary>[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt] Ruft einen Wert ab oder legt ihn fest, der angibt, ob eine vollständige blockierende Garbage Collection den großen Objektheap (LOH) komprimiert. </summary>
      <returns>Einer der Enumerationswerte, der angibt, ob eine vollständige blockierende Garbage Collection das LOH komprimiert. </returns>
    </member>
    <member name="P:System.Runtime.GCSettings.LatencyMode">
      <summary>Ruft ab den aktuellen Wartezeitmodus für die Garbage Collection ab oder legt diesen fest.</summary>
      <returns>Einer der Enumerationswerte, der den Latenzmodus angibt. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die <see cref="P:System.Runtime.GCSettings.LatencyMode" /> Eigenschaft auf einen ungültigen Wert festgelegt wird. - oder - Die <see cref="P:System.Runtime.GCSettings.LatencyMode" /> Eigenschaft kann nicht festgelegt werden, um <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" />. </exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute">
      <summary>Gibt den Namen der Eigenschaft an, die auf das attributierte Feld zugreift.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der AccessedThroughPropertyAttribute-Klasse mit dem Namen der für den Zugriff auf das attributierte Feld verwendeten Eigenschaft.</summary>
      <param name="propertyName">Der Name der für den Zugriff auf das attributierte Feld verwendeten Eigenschaft. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.PropertyName">
      <summary>Ruft den Namen der für den Zugriff auf das attributierte Feld verwendeten Eigenschaft ab.</summary>
      <returns>Der Name der für den Zugriff auf das attributierte Feld verwendeten Eigenschaft.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.AsyncStateMachineAttribute">
      <summary>Gibt an, ob eine Methode entweder mit Async (Visual Basic) oder async (C#-Referenz)-Modifizierer gekennzeichnet ist.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncStateMachineAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.AsyncStateMachineAttribute" />-Klasse.</summary>
      <param name="stateMachineType">Das Typobjekt für den zugrunde liegenden Typ des Zustandsautomaten, das verwendet wird, um eine Zustandsautomatenmethode zu implementieren.</param>
    </member>
    <member name="T:System.Runtime.CompilerServices.CallerFilePathAttribute">
      <summary>Ermöglicht es, den vollständigen Pfad der Quelldatei, die den Aufrufer enthält, abzurufen.Dies ist der Dateipfad zum Zeitpunkt der Kompilierung.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CallerFilePathAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.CallerFilePathAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.CallerLineNumberAttribute">
      <summary>Ermöglicht das Abrufen der Zeilennummer in der Quelldatei, in der die Methode aufgerufen wird.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CallerLineNumberAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.CallerMemberNameAttribute">
      <summary>Ermöglicht es Ihnen, den Methoden- oder Eigenschaftsnamen des Aufrufers der Methode zu erhalten.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CallerMemberNameAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.CompilationRelaxationsAttribute">
      <summary>Steuert den Grad der Strenge des vom JIT Compiler (Just-in Time) der Common Language Runtime generierten Code.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CompilationRelaxationsAttribute.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.CompilationRelaxationsAttribute" />-Klasse mit den angegebenen Lockerungen für die Kompilierung.</summary>
      <param name="relaxations">Die Lockerungen für die Kompilierung. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.CompilationRelaxationsAttribute.CompilationRelaxations">
      <summary>Ruft die beim Erstellen des aktuellen Objekts angegebenen Lockerungen für die Kompilierung ab.</summary>
      <returns>Die beim Erstellen des aktuellen Objekts angegebenen Lockerungen für die Kompilierung.Verwenden Sie die <see cref="T:System.Runtime.CompilerServices.CompilationRelaxations" />-Enumeration mit der <see cref="P:System.Runtime.CompilerServices.CompilationRelaxationsAttribute.CompilationRelaxations" />-Eigenschaft.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.CompilerGeneratedAttribute">
      <summary>Unterscheidet ein vom Compiler generiertes Element von einem Benutzer-generierten Element.Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CompilerGeneratedAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.CompilerGeneratedAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
      <summary>Ermöglicht, dass Compiler dynamisch Objektfelder an verwaltete Objekte anfügen können.</summary>
      <typeparam name="TKey">Den Verweistyp, an den das Feld angefügt ist. </typeparam>
      <typeparam name="TValue">Der Typ des Felds.Dieser Typ muss ein Referenztyp sein.</typeparam>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />-Klasse.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
      <summary>Fügt der Tabelle einen Schlüssel hinzu.</summary>
      <param name="key">Der hinzuzufügende Schlüssel.<paramref name="key" /> stellt das Objekt dar, an das die Eigenschaft angefügt wird.</param>
      <param name="value">Der Eigenschaftswert des Schlüssels.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> ist bereits vorhanden.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Finalize">
      <summary>Stellt sicher, dass die Ressourcen freigegeben werden, und andere Bereinigungsvorgänge werden ausgeführt, wenn der Garbage Collector Bereinigungsoperationen der <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> Objekt. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
      <summary>Sucht atomar nach einem angegebenen Schlüssel in der Tabelle und gibt den entsprechenden Wert zurück.Wenn der Schlüssel in der Tabelle nicht vorhanden ist, ruft die Methode den Standardkonstruktor der Klasse auf, die den Wert der Tabelle darstellt, um einen Wert zu erstellen, der an den angegebenen Schlüssel gebunden wird.</summary>
      <returns>Der Wert, der <paramref name="key" /> entspricht, wenn <paramref name="key" /> bereits in der Tabelle vorhanden ist, andernfalls ein von dem vom generischen <paramref name="TValue" />-Typparameter definierten Standardkonstruktor der Klasse erstellter neuer Wert.</returns>
      <param name="key">Der zu suchende Schlüssel.<paramref name="key" /> stellt das Objekt dar, an das die Eigenschaft angefügt wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
      <exception cref="T:System.MissingMethodException">Unter .NET for Windows Store apps oder in der Portable Klassenbibliothek verwenden Sie stattdessen die Basisklassenausnahme <see cref="T:System.MissingMemberException" />.Die Klasse, die den Wert der Tabelle darstellt, definiert keinen Standardkonstruktor.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)">
      <summary>Sucht atomar nach einem angegebenen Schlüssel in der Tabelle und gibt den entsprechenden Wert zurück.Wenn der Schlüssel in der Tabelle nicht vorhanden ist, ruft die Methode eine Rückrufmethode auf, um einen Wert zu erstellen, der an den angegebenen Schlüssel gebunden ist.</summary>
      <returns>Der an <paramref name="key" /> angefügte Wert, wenn <paramref name="key" /> bereits in der Tabelle vorhanden ist, andernfalls der vom <paramref name="createValueCallback" />-Delegaten zurückgegebene neue Wert.</returns>
      <param name="key">Der zu suchende Schlüssel.<paramref name="key" /> stellt das Objekt dar, an das die Eigenschaft angefügt wird.</param>
      <param name="createValueCallback">Ein Delegat zu einer Methode, die einen Wert für den angegebenen <paramref name="key" /> erstellen kann.Er verfügt über einen einzelnen Parameter vom Typ <paramref name="TKey" /> und gibt einen Wert vom Typ <paramref name="TValue" /> zurück.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> oder <paramref name="createValueCallback" /> ist null.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
      <summary>Entfernt einen Schlüssel und seinen Wert aus der Tabelle.</summary>
      <returns>true, wenn der Schlüssel gefunden und entfernt wurde, andernfalls false.</returns>
      <param name="key">Der zu entfernende Schlüssel. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
      <summary>Ruft den Wert des angegebenen Schlüssels ab.</summary>
      <returns>true, wenn <paramref name="key" /> gefunden wurde, andernfalls false.</returns>
      <param name="key">Der Schlüssel, der ein Objekt mit einer angefügten Eigenschaft darstellt.</param>
      <param name="value">Enthält nach dem Beenden dieser Methode den angefügten Eigenschaftswert.<paramref name="value" /> enthält den Standardwert, wenn <paramref name="key" /> nicht gefunden wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback">
      <summary>Stellt eine Methode dar, die einen nicht standardmäßigen Wert erstellt, der einem <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />-Objekt als Teil eines Schlüssel-Wert-Paars hinzugefügt werden soll. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback.#ctor(System.Object,System.IntPtr)"></member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback.BeginInvoke(`0,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback.EndInvoke(System.IAsyncResult)"></member>
    <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback.Invoke(`0)"></member>
    <member name="T:System.Runtime.CompilerServices.CustomConstantAttribute">
      <summary>Definiert einen konstanten Wert, den ein Compiler für einen Feld- oder Methodenparameter beibehalten kann.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CustomConstantAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.CustomConstantAttribute" />-Klasse. </summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.CustomConstantAttribute.Value">
      <summary>Ruft den von diesem Attribut gespeicherten konstanten Wert ab.</summary>
      <returns>Der von diesem Attribut gespeicherte konstante Wert.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.DateTimeConstantAttribute">
      <summary>Behält eine <see cref="T:System.DateTime" />-Konstante von 8 Bytes für ein Feld oder einen Parameter bei.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.DateTimeConstantAttribute.#ctor(System.Int64)">
      <summary>Initialisiert eine neue Instanz der DateTimeConstantAttribute-Klasse mit der Anzahl von 100-Nanosekunden-Ticks, die Datum und Uhrzeit dieser Instanz darstellen.</summary>
      <param name="ticks">Die Anzahl der 100-Nanosekunden-Ticks, die Datum und Uhrzeit dieser Instanz darstellen. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.DateTimeConstantAttribute.Value">
      <summary>Ruft die Anzahl der 100-Nanosekunden-Ticks ab, die Datum und Uhrzeit dieser Instanz darstellen.</summary>
      <returns>Die Anzahl der 100-Nanosekunden-Ticks, die Datum und Uhrzeit dieser Instanz darstellen.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.DecimalConstantAttribute">
      <summary>Speichert den Wert einer <see cref="T:System.Decimal" />-Konstanten in den Metadaten.Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.Int32,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.DecimalConstantAttribute" />-Klasse mit den angegebenen ganzzahligen Werten mit Vorzeichen. </summary>
      <param name="scale">Der Skalierungsfaktor mit der Zehnerpotenz, der die Anzahl der Ziffern rechts neben dem Dezimaltrennzeichen angibt.Gültige Werte sind 0 bis einschließlich 28.</param>
      <param name="sign">Der Wert 0 gibt einen positiven, der Wert 1 einen negativen Wert an.</param>
      <param name="hi">Die oberen 32 Bits des 96-Bit-<see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" />.</param>
      <param name="mid">Die mittleren 32 Bits des 96-Bit-<see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" />.</param>
      <param name="low">Die unteren 32 Bits des 96-Bit-<see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" />.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.DecimalConstantAttribute" />-Klasse mit den angegebenen ganzzahligen Werten ohne Vorzeichen.</summary>
      <param name="scale">Der Skalierungsfaktor mit der Zehnerpotenz, der die Anzahl der Ziffern rechts neben dem Dezimaltrennzeichen angibt.Gültige Werte sind 0 bis einschließlich 28.</param>
      <param name="sign">Der Wert 0 gibt einen positiven, der Wert 1 einen negativen Wert an. </param>
      <param name="hi">Die oberen 32 Bits des 96-Bit-<see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" />. </param>
      <param name="mid">Die mittleren 32 Bits des 96-Bit-<see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" />. </param>
      <param name="low">Die unteren 32 Bits des 96-Bit-<see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scale" /> &gt; 28. </exception>
    </member>
    <member name="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value">
      <summary>Ruft die in diesem Attribut gespeicherte dezimale Konstante ab.</summary>
      <returns>Die in diesem Attribut gespeicherte dezimale Konstante.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.DisablePrivateReflectionAttribute">
      <summary>Gibt an, dass es sich bei privaten Member in einer Assembly Typen enthalten nicht die Reflektion verfügbar sind. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.DisablePrivateReflectionAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.DisablePrivateReflectionAttribute" /> Klasse. </summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.ExtensionAttribute">
      <summary>Gibt an, dass eine Methode eine Erweiterungsmethode ist oder dass eine Klasse oder eine Assembly Erweiterungsmethoden enthält.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ExtensionAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.ExtensionAttribute" />-Klasse. </summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.FixedBufferAttribute">
      <summary>Gibt an, dass ein Feld behandelt werden soll, als ob es eine feste Anzahl von Elementen des angegebenen primitiven Typs enthält.Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.FixedBufferAttribute.#ctor(System.Type,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.FixedBufferAttribute" />-Klasse. </summary>
      <param name="elementType">Der Typ der im Puffer enthaltenen Elemente.</param>
      <param name="length">Die Anzahl der Elemente im Puffer.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.FixedBufferAttribute.ElementType">
      <summary>Ruft den Typ der im Puffer mit fester Größe enthaltenen Elemente ab. </summary>
      <returns>Der Typ der Elemente.</returns>
    </member>
    <member name="P:System.Runtime.CompilerServices.FixedBufferAttribute.Length">
      <summary>Ruft die Anzahl der Elemente im Puffer mit fester Größe ab. </summary>
      <returns>Die Anzahl der Elemente im Puffer mit fester Größe.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.FormattableStringFactory">
      <summary>Stellt eine statische Methode zum Erstellen eines <see cref="T:System.FormattableString" />-Objekts aus einer kombinierten Formatzeichenfolge und ihren Argumenten zur Verfügung. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.FormattableStringFactory.Create(System.String,System.Object[])">
      <summary>Erstellt eine <see cref="T:System.FormattableString" />-Instanz aus einer kombinierten Formatzeichenfolge und ihren Argumenten. </summary>
      <returns>Das Objekt, das die kombinierte Formatzeichenfolge und ihre Argumente darstellt. </returns>
      <param name="format">Eine kombinierte Formatzeichenfolge. </param>
      <param name="arguments">Die Argumente, deren Zeichenfolgendarstellungen in die Ergebniszeichenfolge eingefügt werden sollen. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> ist null. - oder - <paramref name="arguments" /> ist null. </exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.IndexerNameAttribute">
      <summary>Gibt den Namen an, unter dem ein Indexer in Programmiersprachen ohne direkte Indexerunterstützung bekannt ist.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IndexerNameAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.IndexerNameAttribute" />-Klasse.</summary>
      <param name="indexerName">Der für andere Sprachen angezeigte Name des Indexers. </param>
    </member>
    <member name="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
      <summary>Gibt an, dass Typen, i. d. R. nur innerhalb der aktuellen Assembly sichtbar sind, auch in einer angegebenen Assembly angezeigt werden können.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" />-Klasse mit dem Namen der angegebenen Friend-Assembly. </summary>
      <param name="assemblyName">Der Name einer Friend-Assembly.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
      <summary>Ruft den Namen der Friend-Assembly ab, für die alle mit dem Schlüsselwort internal gekennzeichneten Typen und Typmember sichtbar gemacht werden sollen. </summary>
      <returns>Eine Zeichenfolge, die den Namen der Friend-Assembly darstellt.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.IsConst">
      <summary>Gibt an, dass der geänderte Typ über einen const-Modifizierer verfügt.Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.IStrongBox">
      <summary>Definiert eine Eigenschaft für den Zugriff auf den Wert, auf den ein Objekt verweist.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.CompilerServices.IStrongBox.Value">
      <summary>Ruft den Wert ab, auf den ein Objekt verweist, oder legt diesen fest.</summary>
      <returns>Der Wert, auf den das Objekt verweist.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.IsVolatile">
      <summary>Markiert ein Feld als flüchtig.Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
      <summary>Gibt an, ob eine Methode in Visual Basic mit dem Iterator markiert ist.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IteratorStateMachineAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute" />-Klasse.</summary>
      <param name="stateMachineType">Das Typobjekt für den zugrunde liegenden Typ des Zustandsautomaten, das verwendet wird, um eine Zustandsautomatenmethode zu implementieren.</param>
    </member>
    <member name="T:System.Runtime.CompilerServices.MethodImplAttribute">
      <summary>Gibt die Einzelheiten für das Implementieren einer Methode an.Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.MethodImplAttribute.#ctor(System.Runtime.CompilerServices.MethodImplOptions)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.MethodImplAttribute" />-Klasse mit dem angegebenen <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" />-Wert.</summary>
      <param name="methodImplOptions">Ein <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" />-Wert, der die Eigenschaften der attributierten Methode angibt. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.MethodImplAttribute.Value">
      <summary>Ruft den <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" />-Wert ab, der die attributierte Methode beschreibt.</summary>
      <returns>Der <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" />-Wert, der die attributierte Methode beschreibt.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.MethodImplOptions">
      <summary>Definiert die Einzelheiten für das Implementieren einer Methode.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining">
      <summary>Die Methode sollte als Inlinemethode verwendet werden, sofern möglich.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.NoInlining">
      <summary>Die Methode kann nicht "inline" sein.Inlining ist eine Optimierung, bei der ein Methodenaufruf durch den Methodentext ersetzt wird.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.NoOptimization">
      <summary>Die Methode wird beim Debuggen möglicher Codegenerierungsprobleme nicht vom JIT-Compiler (Just-In-Time) oder durch Generierung von systemeigenem Code (siehe Ngen.exe) optimiert.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.PreserveSig">
      <summary>Die Methodensignatur wird genau entsprechend der Deklaration exportiert.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.ReferenceAssemblyAttribute">
      <summary>Identifiziert eine Assembly als Verweisassembly, die Metadaten, aber keinen ausführbaren Code enthält.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ReferenceAssemblyAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.ReferenceAssemblyAttribute" />-Klasse. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ReferenceAssemblyAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.ReferenceAssemblyAttribute" />-Klasse unter Verwendung der angegebenen Beschreibung. </summary>
      <param name="description">Die Beschreibung der Verweisassembly. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.ReferenceAssemblyAttribute.Description">
      <summary>Ruft die Beschreibung der Verweisassembly ab.</summary>
      <returns>Die Beschreibung der Verweisassembly.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
      <summary>Gibt an, ob Ausnahmen, die nicht von der <see cref="T:System.Exception" />-Klasse abgeleitet sind, mit einem <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" />-Objekt umschlossen werden sollen.Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" />-Klasse. </summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.WrapNonExceptionThrows">
      <summary>Ruft einen Wert ab, der angibt, ob Ausnahmen, die nicht von der <see cref="T:System.Exception" />-Klasse abgeleitet sind, mit einem <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" />-Objekt umschlossen werden sollen, oder legt diesen fest.</summary>
      <returns>true, wenn Ausnahmen, die nicht von der <see cref="T:System.Exception" />-Klasse abgeleitet sind, mit einem <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" />-Objekt umschlossen werden sollen, andernfalls false.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.RuntimeHelpers">
      <summary>Stellt eine Reihe von statischen Methoden und Eigenschaften für die Unterstützung von Compilern zur Verfügung.Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.EnsureSufficientExecutionStack">
      <summary>Stellt sicher, dass der verbleibende Stapelspeicher groß genug ist, um die durchschnittliche .NET Framework-Funktion auszuführen.</summary>
      <exception cref="T:System.InsufficientExecutionStackException">Der verfügbare Stapelspeicher ist nicht groß genug, um die durchschnittliche .NET Framework-Funktion auszuführen.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(System.Object)">
      <summary>Fungiert als Hashfunktion für ein bestimmtes Objekt und eignet sich für die Verwendung in Hashalgorithmen und Hashdatenstrukturen, die Hashcodes verwenden, z. B. in einer Hashtabelle.</summary>
      <returns>Ein Hashcode für das Objekt , das vom <paramref name="o" />-Parameter bezeichnet wird.</returns>
      <param name="o">Ein Objekt, für das der Hash abgerufen werden soll. </param>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.GetObjectValue(System.Object)">
      <summary>Schachtelt einen Werttyp.</summary>
      <returns>Eine geschachtelte Kopie von <paramref name="obj" />, wenn es eine Wertklasse ist, andernfalls <paramref name="obj" />.</returns>
      <param name="obj">Der zu schachtelnde Werttyp. </param>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.InitializeArray(System.Array,System.RuntimeFieldHandle)">
      <summary>Stellt eine schnelle Methode zum Initialisieren eines Arrays aus in einem Modul gespeicherten Daten bereit.</summary>
      <param name="array">Das zu initialisierende Array. </param>
      <param name="fldHandle">Ein Feldhandle, das den Speicherort der zum Initialisieren des Arrays verwendeten Daten angibt. </param>
    </member>
    <member name="P:System.Runtime.CompilerServices.RuntimeHelpers.OffsetToStringData">
      <summary>Ruft den Offset in Bytes zu den Daten in der angegebenen Zeichenfolge ab.</summary>
      <returns>Der Byteoffset vom Start des <see cref="T:System.String" />-Objekts bis zum ersten Zeichen der Zeichenfolge.</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(System.RuntimeTypeHandle)">
      <summary>Führt eine angegebene Klassenkonstruktormethode aus.</summary>
      <param name="type">Ein Typhandle, das die auszuführende Klassenkonstruktormethode angibt. </param>
      <exception cref="T:System.TypeInitializationException">Der Klasseninitialisierer löst eine Ausnahme aus. </exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.StateMachineAttribute">
      <summary>Ermöglicht es Ihnen, zu bestimmen, ob eine Methode eine Zustandsautomat-Methode ist.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.StateMachineAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.StateMachineAttribute" />-Klasse.</summary>
      <param name="stateMachineType">Das Typobjekt für den zugrunde liegenden Zustandsautomaten, der vom Compiler generiert wurde, um die Zustandsautomatenmethode zu implementieren.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.StateMachineAttribute.StateMachineType">
      <summary>Gibt das Typobjekt für den zugrunde liegenden Zustandsautomaten zurück, der vom Compiler generiert wurde, um die Zustandsautomat-Methode zu implementieren.</summary>
      <returns>Ruft das Typobjekt für den zugrunde liegenden Zustandsautomaten ab, der vom Compiler generiert wurde, um die Zustandsautomat-Methode zu implementieren.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.StrongBox`1">
      <summary>Enthält einen Verweis auf einen Wert.</summary>
      <typeparam name="T">Der Typ des Werts, auf den die <see cref="T:System.Runtime.CompilerServices.StrongBox`1" /> verweist.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.CompilerServices.StrongBox`1.#ctor">
      <summary>Initialisiert eine neue StrongBox, die bei einem Verweisaufruf einen Wert akzeptiert.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.StrongBox`1.#ctor(`0)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />-Klasse mit dem bereitgestellten Wert. </summary>
      <param name="value">Ein Wert, auf den die <see cref="T:System.Runtime.CompilerServices.StrongBox`1" /> verweist.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.CompilerServices.StrongBox`1.System#Runtime#CompilerServices#IStrongBox#Value">
      <summary>Ruft den Wert ab, auf den die <see cref="T:System.Runtime.CompilerServices.StrongBox`1" /> verweist, oder legt diesen Wert fest.</summary>
      <returns>Der Wert, auf den die <see cref="T:System.Runtime.CompilerServices.StrongBox`1" /> verweist.</returns>
    </member>
    <member name="F:System.Runtime.CompilerServices.StrongBox`1.Value">
      <summary>Stellt den Wert dar, auf den die <see cref="T:System.Runtime.CompilerServices.StrongBox`1" /> verweist.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.TypeForwardedFromAttribute">
      <summary>Gibt den Quell-<see cref="T:System.Type" /> in einer anderen Assembly an. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.TypeForwardedFromAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.TypeForwardedFromAttribute" />-Klasse. </summary>
      <param name="assemblyFullName">Der Quell-<see cref="T:System.Type" /> in einer anderen Assembly. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFullName" /> ist null oder leer.</exception>
    </member>
    <member name="P:System.Runtime.CompilerServices.TypeForwardedFromAttribute.AssemblyFullName">
      <summary>Ruft den durch die Assembly qualifizierten Namen des Quelltyps ab.</summary>
      <returns>Der durch die Assembly qualifizierte Namen des Quelltyps.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.TypeForwardedToAttribute">
      <summary>Gibt den Ziel-<see cref="T:System.Type" /> in einer anderen Assembly an. </summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.TypeForwardedToAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.TypeForwardedToAttribute" />-Klasse, die den Ziel-<see cref="T:System.Type" /> angibt. </summary>
      <param name="destination">Der Ziel-<see cref="T:System.Type" /> in einer anderen Assembly.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.TypeForwardedToAttribute.Destination">
      <summary>Ruft den Ziel-<see cref="T:System.Type" /> in einer anderen Assembly ab.</summary>
      <returns>Der Ziel-<see cref="T:System.Type" /> in einer anderen Assembly.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.UnsafeValueTypeAttribute">
      <summary>Gibt an, dass ein Typ ein nicht verwaltetes Array enthält, das möglicherweise überlaufen kann.Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.UnsafeValueTypeAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.UnsafeValueTypeAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo">
      <summary>Stellt eine Ausnahme dar, deren Zustand an einem bestimmten Punkt im Code aufgezeichnet wird. </summary>
    </member>
    <member name="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
      <summary>Erstellt ein <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" />-Objekt, das die angegebene Ausnahme an der aktuellen Stelle im Code darstellt. </summary>
      <returns>Ein Objekt, das die angegebene Ausnahme an der aktuellen Stelle im Code darstellt. </returns>
      <param name="source">Die Ausnahme, deren Zustand erfasst wurde. Dieser wird durch das zurückgegebene Objekt dargestellt. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> ist null. </exception>
    </member>
    <member name="P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException">
      <summary>Ruft die Ausnahme ab, die von der aktuellen Instanz dargestellt wird. </summary>
      <returns>Die Ausnahme, die von der aktuellen Instanz dargestellt wird. </returns>
    </member>
    <member name="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw">
      <summary>Löst die Ausnahme aus, die vom aktuellen <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" />-Objekt dargestellt wird, nachdem der Zustand, der gespeichert wurde, als die Ausnahme erfasst wurde, wiederhergestellt wurde. </summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CharSet">
      <summary>Bestimmt, welcher Zeichensatz für gemarshallte Zeichenfolgen verwendet werden soll.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CharSet.Ansi">
      <summary>Marshallt Zeichenfolgen als Mehrfachbyte-Zeichenfolgen.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CharSet.Unicode">
      <summary>Marshallt Zeichenfolgen als 2-Byte-Unicode-Zeichen.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComVisibleAttribute">
      <summary>Steuert den Zugriff eines einzelnen verwalteten Typs bzw. Members oder aller Typen in einer Assembly auf COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComVisibleAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der ComVisibleAttribute-Klasse.</summary>
      <param name="visibility">true, um anzugeben, dass der Typ für COM sichtbar ist, andernfalls false.Die Standardeinstellung ist true.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComVisibleAttribute.Value">
      <summary>Ruft einen Wert ab, der angibt, ob der COM-Typ sichtbar ist.</summary>
      <returns>true, wenn der Typ sichtbar ist, andernfalls false.Der Standardwert ist true.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.FieldOffsetAttribute">
      <summary>Gibt die physikalische Position von Feldern innerhalb der nicht verwalteten Darstellung einer Klasse oder Struktur an.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.FieldOffsetAttribute.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.InteropServices.FieldOffsetAttribute" />-Klasse mit dem Offset in der Struktur bis zum Anfang des Felds.</summary>
      <param name="offset">Der Offset in Bytes vom Anfang der Struktur zum Anfang des Felds. </param>
    </member>
    <member name="P:System.Runtime.InteropServices.FieldOffsetAttribute.Value">
      <summary>Ruft den Offset vom Anfang der Struktur bis zum Anfang des Felds ab.</summary>
      <returns>Der Offset vom Anfang der Struktur bis zum Anfang des Felds.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.LayoutKind">
      <summary>Steuert das Layout eines Objekts beim Export in nicht verwalteten Code.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.LayoutKind.Auto">
      <summary>Für die Member eines Objekts in nicht verwaltetem Speicher wird zur Laufzeit automatisch ein angemessenes Layout ausgewählt.Mit diesem Enumerationsmember definierte Objekte können nicht außerhalb von verwaltetem Code verfügbar gemacht werden.Bei einem entsprechenden Versuch wird eine Ausnahme ausgelöst.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.LayoutKind.Explicit">
      <summary>Die genaue Position der einzelnen Member eines Objekts in nicht verwaltetem Speicher wird explizit gesteuert, entsprechend der Festlegung im Feld <see cref="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack" />.Jedes Member muss das <see cref="T:System.Runtime.InteropServices.FieldOffsetAttribute" /> verwenden, um die Position dieses Felds innerhalb des Typs anzugeben.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.LayoutKind.Sequential">
      <summary>Das Layout der Member des Objekts erfolgt sequenziell in der Reihenfolge, in der sich diese beim Export in nicht verwalteten Speicher befinden.Das Layout der Member entspricht der in <see cref="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack" /> angegebenen Komprimierung, und es darf nicht lückenhaft sein.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.OutAttribute">
      <summary>Gibt an, dass Daten vom Aufgerufenen zurück an den Aufrufer gemarshallt werden.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.OutAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.InteropServices.OutAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.StructLayoutAttribute">
      <summary>Hiermit können Sie das physikalische Layout der Datenfelder einer Klasse oder Struktur im Speicher steuern.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" />-Klasse mit dem angegebenen <see cref="T:System.Runtime.InteropServices.LayoutKind" />-Enumerationsmember.</summary>
      <param name="layoutKind">Einer der Enumerationswerte, der angibt, wie die Klasse oder Struktur angeordnet werden soll. </param>
    </member>
    <member name="F:System.Runtime.InteropServices.StructLayoutAttribute.CharSet">
      <summary>Gibt an, ob Zeichenfolgendatenfelder in der Klasse standardmäßig als LPWSTR oder als LPSTR gemarshallt werden müssen.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack">
      <summary>Steuert die Ausrichtung der Datenfelder einer Klasse oder Struktur im Speicher.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.StructLayoutAttribute.Size">
      <summary>Gibt die absolute Größe der Klasse oder Struktur an.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.StructLayoutAttribute.Value">
      <summary>Ruft den <see cref="T:System.Runtime.InteropServices.LayoutKind" />-Wert ab, der angibt, wie die Klasse oder Struktur angeordnet ist.</summary>
      <returns>Einer der Enumerationswerte, der angibt, wie die Klasse oder Struktur angeordnet wird.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.TargetFrameworkAttribute">
      <summary>Gibt die .NET Framework-Version an, mit der eine bestimmte Assembly kompiliert wurde.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.TargetFrameworkAttribute.#ctor(System.String)">
      <summary>Initialisiert eine Instanz der <see cref="T:System.Runtime.Versioning.TargetFrameworkAttribute" />-Klasse durch Angabe der .NET Framework-Version, mit der eine Assembly erstellt wurde.</summary>
      <param name="frameworkName">Die .NET Framework-Version, mit der die Assembly erstellt wurde.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="frameworkName" /> ist null.</exception>
    </member>
    <member name="P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName">
      <summary>Ruft den Anzeigenamen der .NET Framework-Version ab, mit der eine Assembly erstellt wurde.</summary>
      <returns>Der Anzeigename der .NET Framework-Version.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName">
      <summary>Ruft den Namen der .NET Framework-Version ab, mit der eine bestimmte Assembly kompiliert wurde.</summary>
      <returns>Der Name der .NET Framework-Version, mit der die Assembly kompiliert wurde.</returns>
    </member>
    <member name="T:System.Security.AllowPartiallyTrustedCallersAttribute">
      <summary>Ermöglicht den Aufruf einer Assembly durch teilweise vertrauenswürdigen Code.Ohne diese Deklaration können nur voll vertrauenswürdige Aufrufer die Assembly verwenden.Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.AllowPartiallyTrustedCallersAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" />-Klasse. </summary>
    </member>
    <member name="T:System.Security.SecurityCriticalAttribute">
      <summary>Gibt an, dass Code oder eine Assembly sicherheitsrelevante Vorgänge ausführt.</summary>
    </member>
    <member name="M:System.Security.SecurityCriticalAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.SecurityCriticalAttribute" />-Klasse. </summary>
    </member>
    <member name="T:System.Security.SecurityException">
      <summary>Eine Ausnahme, die bei Feststellung eines Sicherheitsfehlers ausgelöst wird.</summary>
    </member>
    <member name="M:System.Security.SecurityException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.SecurityException" />-Klasse mit Standardeigenschaften.</summary>
    </member>
    <member name="M:System.Security.SecurityException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.SecurityException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
    </member>
    <member name="M:System.Security.SecurityException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.SecurityException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="inner" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="M:System.Security.SecurityException.ToString">
      <summary>Gibt eine Darstellung der aktuellen <see cref="T:System.Security.SecurityException" /> zurück.</summary>
      <returns>Eine Zeichenfolgendarstellung der aktuellen <see cref="T:System.Security.SecurityException" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.Security.SecuritySafeCriticalAttribute">
      <summary>Bezeichnet Typen oder Member durch transparenten Code als sicherheitsrelevant und sicher zugänglich.</summary>
    </member>
    <member name="M:System.Security.SecuritySafeCriticalAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.SecuritySafeCriticalAttribute" />-Klasse. </summary>
    </member>
    <member name="T:System.Security.SecurityTransparentAttribute">
      <summary>Gibt an, dass eine Assembly keine Berechtigungen erweitern kann. </summary>
    </member>
    <member name="M:System.Security.SecurityTransparentAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.SecurityTransparentAttribute" />-Klasse. </summary>
    </member>
    <member name="T:System.Security.VerificationException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn die Sicherheitsrichtlinien typsicheren Code erfordern und während der Überprüfung nicht sichergestellt werden kann, dass der Code typsicher ist.</summary>
    </member>
    <member name="M:System.Security.VerificationException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.VerificationException" />-Klasse mit Standardeigenschaften.</summary>
    </member>
    <member name="M:System.Security.VerificationException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.VerificationException" />-Klasse mit einer erläuternden Meldung.</summary>
      <param name="message">Eine Meldung, die die Ursache für das Auftreten der Ausnahme bezeichnet. </param>
    </member>
    <member name="M:System.Security.VerificationException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.VerificationException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.Wenn der <paramref name="innerException" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Text.StringBuilder">
      <summary>Stellt eine veränderbare Zeichenfolge dar.Diese Klasse kann nicht vererbt werden.Um den .NET Framework-Quellcode für diesen Typ zu durchsuchen, rufen Sie die Verweisquelle auf.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Text.StringBuilder" />-Klasse.</summary>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Text.StringBuilder" />-Klasse unter Verwendung der angegebenen Kapazität.</summary>
      <param name="capacity">Die empfohlene Anfangsgröße dieser Instanz. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> ist kleiner als 0. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Text.StringBuilder" />-Klasse, die bei einer angegebenen Kapazität beginnt, die bis auf ein angegebenes Maximum erhöht werden kann.</summary>
      <param name="capacity">Die empfohlene Anfangsgröße des <see cref="T:System.Text.StringBuilder" />. </param>
      <param name="maxCapacity">Die Höchstanzahl von Zeichen, die die aktuelle Zeichenfolge enthalten kann. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxCapacity" /> ist kleiner als 1, <paramref name="capacity" /> ist kleiner als 0 (null), oder <paramref name="capacity" /> ist größer als <paramref name="maxCapacity" />. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Text.StringBuilder" />-Klasse unter Verwendung der angegebenen Zeichenfolge.</summary>
      <param name="value">Die Zeichenfolge, mit der der Wert der Instanz initialisiert wird.Wenn <paramref name="value" />null ist, enthält der neue <see cref="T:System.Text.StringBuilder" /> die leere Zeichenfolge (d. h., er enthält <see cref="F:System.String.Empty" />).</param>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Text.StringBuilder" />-Klasse unter Verwendung der angegebenen Zeichenfolge und der angegebenen Kapazität.</summary>
      <param name="value">Die Zeichenfolge, mit der der Wert der Instanz initialisiert wird.Wenn <paramref name="value" />null ist, enthält der neue <see cref="T:System.Text.StringBuilder" /> die leere Zeichenfolge (d. h., er enthält <see cref="F:System.String.Empty" />).</param>
      <param name="capacity">Die empfohlene Anfangsgröße des <see cref="T:System.Text.StringBuilder" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> ist kleiner als 0. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Text.StringBuilder" />-Klasse unter Verwendung der angegebenen Teilzeichenfolge und der angegebenen Kapazität.</summary>
      <param name="value">Die Zeichenfolge, die die Teilzeichenfolge enthält, mit der der Wert dieser Instanz initialisiert wird.Wenn <paramref name="value" />null ist, enthält der neue <see cref="T:System.Text.StringBuilder" /> die leere Zeichenfolge (d. h., er enthält <see cref="F:System.String.Empty" />).</param>
      <param name="startIndex">Die Position in <paramref name="value" />, an der die Teilzeichenfolge beginnt. </param>
      <param name="length">Die Anzahl der Zeichen in der Teilzeichenfolge. </param>
      <param name="capacity">Die empfohlene Anfangsgröße des <see cref="T:System.Text.StringBuilder" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> ist kleiner als 0.- oder -  Die Summe von <paramref name="startIndex" /> und <paramref name="length" /> ist keine Position, die in <paramref name="value" /> liegt. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Boolean)">
      <summary>Fügt die Zeichenfolgendarstellung eines angegebenen booleschen Werts an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Der anzufügende boolesche Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Byte)">
      <summary>Fügt die Zeichenfolgendarstellung einer angegebenen 8-Bit-Ganzzahl ohne Vorzeichen an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Der anzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char)">
      <summary>Fügt die Zeichenfolgendarstellung eines angegebenen Unicode-Zeichens an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Das anzufügende Unicode-Zeichen. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
      <summary>Fügt ein Array aus Unicode-Zeichen ab einer angegebenen Adresse an diese Instanz an. </summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde. </returns>
      <param name="value">Ein Zeiger auf ein Array von Zeichen. </param>
      <param name="valueCount">Die Anzahl der Zeichen im Array. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="valueCount" /> ist kleiner als 0. - oder - Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="value" />ist ein null-Zeiger. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
      <summary>Fügt eine angegebene Anzahl von Kopien der Zeichenfolgendarstellung eines Unicode-Zeichens an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Das anzufügende Zeichen. </param>
      <param name="repeatCount">Die Anzahl der Anfügewiederholungen für <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="repeatCount" /> ist kleiner als 0.- oder -  Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <exception cref="T:System.OutOfMemoryException">Nicht genügend Arbeitsspeicher.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char[])">
      <summary>Fügt die Zeichenfolgendarstellung der Unicode-Zeichen in einem angegebenen Array an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Das anzufügende Array von Zeichen. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
      <summary>Fügt die Zeichenfolgendarstellung eines angegebenen Unterarrays von Unicode-Zeichen an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Ein Zeichenarray. </param>
      <param name="startIndex">Die Anfangsposition in <paramref name="value" />. </param>
      <param name="charCount">Die Anzahl der anzufügenden Zeichen. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist null, und <paramref name="startIndex" /> und <paramref name="charCount" /> sind ungleich 0 (null). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charCount" /> ist kleiner als 0.- oder -  <paramref name="startIndex" /> ist kleiner als 0.- oder -  <paramref name="startIndex" /> + <paramref name="charCount" /> ist größer als die Länge von <paramref name="value" />.- oder -  Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Decimal)">
      <summary>Fügt die Zeichenfolgendarstellung einer angegebenen Dezimalzahl an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Der anzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Double)">
      <summary>Fügt die Zeichenfolgendarstellung einer angegebenen Gleitkommazahl mit doppelter Genauigkeit an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Der anzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Int16)">
      <summary>Fügt die Zeichenfolgendarstellung einer angegebenen 16-Bit-Ganzzahl mit Vorzeichen an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Der anzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Int32)">
      <summary>Fügt die Zeichenfolgendarstellung einer angegebenen 32-Bit-Ganzzahl mit Vorzeichen an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Der anzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Int64)">
      <summary>Fügt die Zeichenfolgendarstellung einer angegebenen 64-Bit-Ganzzahl mit Vorzeichen an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Der anzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Object)">
      <summary>Fügt die Zeichenfolgendarstellung eines angegebenen Objekts an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Das anzufügende Objekt. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.SByte)">
      <summary>Fügt die Zeichenfolgendarstellung einer angegebenen 8-Bit-Ganzzahl mit Vorzeichen an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Der anzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Single)">
      <summary>Fügt die Zeichenfolgendarstellung einer angegebenen Gleitkommazahl mit einfacher Genauigkeit an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Der anzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.String)">
      <summary>Fügt eine Kopie der angegebenen Zeichenfolge an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Die anzufügende Zeichenfolge. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
      <summary>Fügt eine Kopie einer angegebenen Teilzeichenfolge an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Die Zeichenfolge, die die anzufügende Teilzeichenfolge enthält. </param>
      <param name="startIndex">Die Anfangsposition der Teilzeichenfolge innerhalb des <paramref name="value" />-Parameters. </param>
      <param name="count">Die Anzahl der anzufügenden Zeichen in <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist null, und <paramref name="startIndex" /> und <paramref name="count" /> sind ungleich 0 (null). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> ist kleiner als 0 (null).- oder -  <paramref name="startIndex" /> ist kleiner als 0 (null).- oder -  <paramref name="startIndex" /> + <paramref name="count" /> ist größer als die Länge von <paramref name="value" />.- oder -  Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.UInt16)">
      <summary>Fügt die Zeichenfolgendarstellung einer angegebenen 16-Bit-Ganzzahl ohne Vorzeichen an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Der anzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.UInt32)">
      <summary>Fügt die Zeichenfolgendarstellung einer angegebenen 32-Bit-Ganzzahl ohne Vorzeichen an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Der anzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.UInt64)">
      <summary>Fügt die Zeichenfolgendarstellung einer angegebenen 64-Bit-Ganzzahl ohne Vorzeichen an diese Instanz an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Der anzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
      <summary>Fügt die Zeichenfolge, die durch Verarbeitung einer kombinierten Formatzeichenfolge mit 0 (null) oder mehr Formatelementen zurückgegeben wurde, an diese Instanz an.Jedes Formatelement wird durch die Zeichenfolgendarstellung eines einzigen Arguments mit einem angegebenen Formatanbieter ersetzt.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.Nach dem Anfügevorgang enthält diese Instanz alle Daten, die auch vor dem Vorgang vorhanden waren. Ihnen folgt eine Kopie von <paramref name="format" />, wobei die Formatangabe durch die Zeichenfolgendarstellung von <paramref name="arg0" /> ersetzt wurde.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <param name="format">Eine kombinierte Formatierungszeichenfolge (siehe Hinweise). </param>
      <param name="arg0">Das zu formatierende Objekt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> ist null. </exception>
      <exception cref="T:System.FormatException">"<paramref name="format" />" ist ungültig. - oder - Der Index eines Formatelements ist kleiner als 0 (null) oder größer als oder gleich eins (1). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Länge der erweiterten Zeichenfolge würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
      <summary>Fügt die Zeichenfolge, die durch Verarbeitung einer kombinierten Formatzeichenfolge mit 0 (null) oder mehr Formatelementen zurückgegeben wurde, an diese Instanz an.Jedes Formatelement wird durch die Zeichenfolgendarstellung von zwei Argumenten, die mit einem angegebenen Formatanbieter ersetzt.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.Nach dem Anfügevorgang enthält diese Instanz alle Daten, die auch vor dem Vorgang vorhanden waren. Ihnen folgt eine Kopie von <paramref name="format" />, wobei die Formatangabe durch die Zeichenfolgendarstellung des entsprechenden Objektarguments ersetzt wurde.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <param name="format">Eine kombinierte Formatierungszeichenfolge (siehe Hinweise). </param>
      <param name="arg0">Das erste zu formatierende Objekt. </param>
      <param name="arg1">Das zweite zu formatierende Objekt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> ist null. </exception>
      <exception cref="T:System.FormatException">"<paramref name="format" />" ist ungültig. - oder - Der Index eines Formatelements ist kleiner als 0 (null) oder größer als oder gleich zwei (2). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Länge der erweiterten Zeichenfolge würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
      <summary>Fügt die Zeichenfolge, die durch Verarbeitung einer kombinierten Formatzeichenfolge mit 0 (null) oder mehr Formatelementen zurückgegeben wurde, an diese Instanz an.Jedes Formatelement wird durch die Zeichenfolgendarstellung von drei Argumenten, die mit einem angegebenen Formatanbieter ersetzt.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.Nach dem Anfügevorgang enthält diese Instanz alle Daten, die auch vor dem Vorgang vorhanden waren. Ihnen folgt eine Kopie von <paramref name="format" />, wobei die Formatangabe durch die Zeichenfolgendarstellung des entsprechenden Objektarguments ersetzt wurde.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <param name="format">Eine kombinierte Formatierungszeichenfolge (siehe Hinweise). </param>
      <param name="arg0">Das erste zu formatierende Objekt. </param>
      <param name="arg1">Das zweite zu formatierende Objekt. </param>
      <param name="arg2">Das dritte zu formatierende Objekt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> ist null. </exception>
      <exception cref="T:System.FormatException">"<paramref name="format" />" ist ungültig. - oder - Der Index eines Formatelements ist kleiner als 0 (null) oder größer als oder gleich 3 (drei). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Länge der erweiterten Zeichenfolge würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
      <summary>Fügt die Zeichenfolge, die durch Verarbeitung einer kombinierten Formatzeichenfolge mit 0 (null) oder mehr Formatelementen zurückgegeben wurde, an diese Instanz an.Jedes Formatelement wird von der Zeichenfolgendarstellung eines entsprechenden Arguments in einem Parameterarray ersetzt, das einen angegebenen Formatanbieter verwendet.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.Nach dem Anfügevorgang enthält diese Instanz alle Daten, die auch vor dem Vorgang vorhanden waren. Ihnen folgt eine Kopie von <paramref name="format" />, wobei die Formatangabe durch die Zeichenfolgendarstellung des entsprechenden Objektarguments ersetzt wurde.</returns>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. </param>
      <param name="format">Eine kombinierte Formatierungszeichenfolge (siehe Hinweise). </param>
      <param name="args">Ein Array zu formatierender Objekte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> ist null. </exception>
      <exception cref="T:System.FormatException">"<paramref name="format" />" ist ungültig. - oder - Der Index eines Formatelements ist kleiner als 0 (null) oder größer oder gleich der Länge des <paramref name="args" />-Arrays.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Länge der erweiterten Zeichenfolge würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
      <summary>Fügt die Zeichenfolge, die durch Verarbeitung einer kombinierten Formatzeichenfolge mit 0 (null) oder mehr Formatelementen zurückgegeben wurde, an diese Instanz an.Jedes Formatelement wird durch die Zeichenfolgendarstellung eines einzelnen Arguments ersetzt.</summary>
      <returns>Ein Verweis auf diese Instanz mit angefügtem <paramref name="format" />.Die einzelnen Elemente in <paramref name="format" /> werden jeweils durch eine Zeichenfolgendarstellung von <paramref name="arg0" /> ersetzt.</returns>
      <param name="format">Eine kombinierte Formatierungszeichenfolge (siehe Hinweise). </param>
      <param name="arg0">Ein zu formatierendes Objekt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> ist null. </exception>
      <exception cref="T:System.FormatException">"<paramref name="format" />" ist ungültig. - oder - Der Index eines Formatelements ist kleiner als 0 (null) oder größer oder gleich 1.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Länge der erweiterten Zeichenfolge würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
      <summary>Fügt die Zeichenfolge, die durch Verarbeitung einer kombinierten Formatzeichenfolge mit 0 (null) oder mehr Formatelementen zurückgegeben wurde, an diese Instanz an.Jedes Formatelement wird durch die Zeichenfolgendarstellung für eines von zwei Argumenten ersetzt.</summary>
      <returns>Ein Verweis auf diese Instanz mit angefügtem <paramref name="format" />.Jedes Formatelement in <paramref name="format" /> wird durch die Zeichenfolgendarstellung des entsprechenden Objektarguments ersetzt.</returns>
      <param name="format">Eine kombinierte Formatierungszeichenfolge (siehe Hinweise). </param>
      <param name="arg0">Das erste zu formatierende Objekt. </param>
      <param name="arg1">Das zweite zu formatierende Objekt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> ist null. </exception>
      <exception cref="T:System.FormatException">"<paramref name="format" />" ist ungültig.- oder - Der Index eines Formatelements ist kleiner als 0 (null) oder größer oder gleich 2. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Länge der erweiterten Zeichenfolge würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
      <summary>Fügt die Zeichenfolge, die durch Verarbeitung einer kombinierten Formatzeichenfolge mit 0 (null) oder mehr Formatelementen zurückgegeben wurde, an diese Instanz an.Jedes Formatelement wird durch die Zeichenfolgendarstellung für eines von drei Argumenten ersetzt.</summary>
      <returns>Ein Verweis auf diese Instanz mit angefügtem <paramref name="format" />.Jedes Formatelement in <paramref name="format" /> wird durch die Zeichenfolgendarstellung des entsprechenden Objektarguments ersetzt.</returns>
      <param name="format">Eine kombinierte Formatierungszeichenfolge (siehe Hinweise). </param>
      <param name="arg0">Das erste zu formatierende Objekt. </param>
      <param name="arg1">Das zweite zu formatierende Objekt. </param>
      <param name="arg2">Das dritte zu formatierende Objekt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> ist null. </exception>
      <exception cref="T:System.FormatException">"<paramref name="format" />" ist ungültig.- oder - Der Index eines Formatelements ist kleiner als 0 (null) oder größer oder gleich 3.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Länge der erweiterten Zeichenfolge würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
      <summary>Fügt die Zeichenfolge, die durch Verarbeitung einer kombinierten Formatzeichenfolge mit 0 (null) oder mehr Formatelementen zurückgegeben wurde, an diese Instanz an.Jedes Formatelement wird durch die Zeichenfolgendarstellung eines entsprechenden Arguments in einem Parameterarray ersetzt.</summary>
      <returns>Ein Verweis auf diese Instanz mit angefügtem <paramref name="format" />.Jedes Formatelement in <paramref name="format" /> wird durch die Zeichenfolgendarstellung des entsprechenden Objektarguments ersetzt.</returns>
      <param name="format">Eine kombinierte Formatierungszeichenfolge (siehe Hinweise). </param>
      <param name="args">Ein Array zu formatierender Objekte. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> oder <paramref name="args" /> ist null. </exception>
      <exception cref="T:System.FormatException">"<paramref name="format" />" ist ungültig. - oder - Der Index eines Formatelements ist kleiner als 0 (null) oder größer oder gleich der Länge des <paramref name="args" />-Arrays.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Länge der erweiterten Zeichenfolge würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendLine">
      <summary>Fügt das Standardzeilenabschlusszeichen am Ende des aktuellen <see cref="T:System.Text.StringBuilder" />-Objekts an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendLine(System.String)">
      <summary>Fügt eine Kopie der angegebenen Zeichenfolge gefolgt vom Standardzeilenabschlusszeichen am Ende des aktuellen <see cref="T:System.Text.StringBuilder" />-Objekts an.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Anfügevorgang abgeschlossen wurde.</returns>
      <param name="value">Die anzufügende Zeichenfolge. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.Capacity">
      <summary>Ruft die Höchstanzahl von Zeichen ab, die im durch die aktuelle Instanz reservierten Speicher enthalten sein können, oder legt diese fest.</summary>
      <returns>Die Höchstanzahl von Zeichen, die im durch die aktuelle Instanz reservierten Speicher enthalten sein können.Der Wert kann zwischen <see cref="P:System.Text.StringBuilder.Length" /> und <see cref="P:System.Text.StringBuilder.MaxCapacity" /> liegen.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der für einen set-Vorgang angegebene Wert ist kleiner als die aktuelle Länge dieser Instanz.- oder -  Der für einen set-Vorgang angegebene Wert ist größer als die maximale Kapazität. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.Chars(System.Int32)">
      <summary>Ruft das Zeichen an der angegebenen Zeichenposition in dieser Instanz ab oder legt dieses fest.</summary>
      <returns>Das Unicode-Zeichen an der Position <paramref name="index" />.</returns>
      <param name="index">Die Position des Zeichens. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> liegt beim Festlegen eines Zeichens außerhalb der Begrenzungen dieser Instanz. </exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> liegt beim Abrufen eines Zeichens außerhalb der Begrenzungen dieser Instanz. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Clear">
      <summary>Entfernt alle Zeichen aus der aktuellen <see cref="T:System.Text.StringBuilder" />-Instanz.</summary>
      <returns>Ein Objekt, dessen <see cref="P:System.Text.StringBuilder.Length" /> 0 (null) ist.</returns>
    </member>
    <member name="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>Kopiert die Zeichen aus einem angegebenen Segment dieser Instanz in ein angegebenes Segment eines Ziel-<see cref="T:System.Char" />-Arrays.</summary>
      <param name="sourceIndex">Die Anfangsposition in dieser Instanz, ab der Zeichen kopiert werden.Der Index ist nullbasiert.</param>
      <param name="destination">Das Array, in das Zeichen kopiert werden.</param>
      <param name="destinationIndex">Die Anfangsposition in <paramref name="destination" />, an die Zeichen kopiert werden.Der Index ist nullbasiert.</param>
      <param name="count">Die Anzahl der zu kopierenden Zeichen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" />, <paramref name="destinationIndex" /> oder <paramref name="count" /> ist kleiner als 0 (null).- oder - <paramref name="sourceIndex" /> ist größer als die Länge dieser Instanz.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceIndex" /> + <paramref name="count" /> ist größer als die Länge dieser Instanz.- oder - <paramref name="destinationIndex" /> + <paramref name="count" /> ist größer als die Länge von <paramref name="destination" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
      <summary>Stellt sicher, dass die Kapazität dieser Instanz von <see cref="T:System.Text.StringBuilder" /> mindestens gleich dem angegebenen Wert ist.</summary>
      <returns>Die neue Kapazität dieser Instanz.</returns>
      <param name="capacity">Die Mindestkapazität, die gewährleistet sein muss. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> ist kleiner als 0.- oder -  Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn diese Instanz und <paramref name="sb" /> die gleichen Zeichenfolgenwerte sowie die gleichen Werte für <see cref="P:System.Text.StringBuilder.Capacity" /> und <see cref="P:System.Text.StringBuilder.MaxCapacity" /> enthalten, andernfalls false.</returns>
      <param name="sb">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
      <summary>Fügt die Zeichenfolgendarstellung eines booleschen Werts an der angegebenen Zeichenposition in diese Instanz ein.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Einfügevorgang abgeschlossen wurde.</returns>
      <param name="index">Die Position in dieser Instanz, an der die Einfügung beginnt. </param>
      <param name="value">Der einzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Länge dieser Instanz.</exception>
      <exception cref="T:System.OutOfMemoryException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
      <summary>Fügt die Zeichenfolgendarstellung einer angegebenen 8-Bit-Ganzzahl ohne Vorzeichen an der angegebenen Zeichenposition in diese Instanz ein.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Einfügevorgang abgeschlossen wurde.</returns>
      <param name="index">Die Position in dieser Instanz, an der die Einfügung beginnt. </param>
      <param name="value">Der einzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Länge dieser Instanz. </exception>
      <exception cref="T:System.OutOfMemoryException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
      <summary>Fügt die Zeichenfolgendarstellung eines angegebenen Unicode-Zeichens an der angegebenen Zeichenposition in diese Instanz ein.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Einfügevorgang abgeschlossen wurde.</returns>
      <param name="index">Die Position in dieser Instanz, an der die Einfügung beginnt. </param>
      <param name="value">Der einzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Länge dieser Instanz.- oder -  Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
      <summary>Fügt die Zeichenfolgendarstellung eines angegebenen Arrays von Unicode-Zeichen an der angegebenen Zeichenposition in diese Instanz ein.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Einfügevorgang abgeschlossen wurde.</returns>
      <param name="index">Die Position in dieser Instanz, an der die Einfügung beginnt. </param>
      <param name="value">Das einzufügende Zeichenarray. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Länge dieser Instanz.- oder -  Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>Fügt die Zeichenfolgendarstellung eines angegebenen Unterarrays von Unicode-Zeichen an der angegebenen Zeichenposition in diese Instanz ein.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Einfügevorgang abgeschlossen wurde.</returns>
      <param name="index">Die Position in dieser Instanz, an der die Einfügung beginnt. </param>
      <param name="value">Ein Zeichenarray. </param>
      <param name="startIndex">Der Startindex in <paramref name="value" />. </param>
      <param name="charCount">Die Anzahl der einzufügenden Zeichen. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist null, und <paramref name="startIndex" /> und <paramref name="charCount" /> sind ungleich 0 (null). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />, <paramref name="startIndex" /> oder <paramref name="charCount" /> ist kleiner als 0 (null).- oder -  <paramref name="index" /> ist größer als die Länge dieser Instanz.- oder -  Die Summe von <paramref name="startIndex" /> und <paramref name="charCount" /> ist keine Position, die in <paramref name="value" /> liegt.- oder -  Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
      <summary>Fügt die Zeichenfolgendarstellung einer Dezimalzahl an der angegebenen Zeichenposition in diese Instanz ein.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Einfügevorgang abgeschlossen wurde.</returns>
      <param name="index">Die Position in dieser Instanz, an der die Einfügung beginnt. </param>
      <param name="value">Der einzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Länge dieser Instanz. </exception>
      <exception cref="T:System.OutOfMemoryException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
      <summary>Fügt die Zeichenfolgendarstellung einer Gleitkommazahl mit doppelter Genauigkeit an der angegebenen Zeichenposition in diese Instanz ein.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Einfügevorgang abgeschlossen wurde.</returns>
      <param name="index">Die Position in dieser Instanz, an der die Einfügung beginnt. </param>
      <param name="value">Der einzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Länge dieser Instanz. </exception>
      <exception cref="T:System.OutOfMemoryException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
      <summary>Fügt die Zeichenfolgendarstellung einer angegebenen 16-Bit-Ganzzahl mit Vorzeichen an der angegebenen Zeichenposition in diese Instanz ein.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Einfügevorgang abgeschlossen wurde.</returns>
      <param name="index">Die Position in dieser Instanz, an der die Einfügung beginnt. </param>
      <param name="value">Der einzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Länge dieser Instanz. </exception>
      <exception cref="T:System.OutOfMemoryException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
      <summary>Fügt die Zeichenfolgendarstellung einer angegebenen 32-Bit-Ganzzahl mit Vorzeichen an der angegebenen Zeichenposition in diese Instanz ein.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Einfügevorgang abgeschlossen wurde.</returns>
      <param name="index">Die Position in dieser Instanz, an der die Einfügung beginnt. </param>
      <param name="value">Der einzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Länge dieser Instanz. </exception>
      <exception cref="T:System.OutOfMemoryException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
      <summary>Fügt die Zeichenfolgendarstellung einer 64-Bit-Ganzzahl mit Vorzeichen an der angegebenen Zeichenposition in diese Instanz ein.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Einfügevorgang abgeschlossen wurde.</returns>
      <param name="index">Die Position in dieser Instanz, an der die Einfügung beginnt. </param>
      <param name="value">Der einzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Länge dieser Instanz. </exception>
      <exception cref="T:System.OutOfMemoryException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
      <summary>Fügt die Zeichenfolgendarstellung eines Objekts an der angegebenen Zeichenposition in diese Instanz ein.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Einfügevorgang abgeschlossen wurde.</returns>
      <param name="index">Die Position in dieser Instanz, an der die Einfügung beginnt. </param>
      <param name="value">Das einzufügende Objekt oder null. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Länge dieser Instanz. </exception>
      <exception cref="T:System.OutOfMemoryException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
      <summary>Fügt die Zeichenfolgendarstellung einer angegebenen 8-Bit-Ganzzahl mit Vorzeichen an der angegebenen Zeichenposition in diese Instanz ein.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Einfügevorgang abgeschlossen wurde.</returns>
      <param name="index">Die Position in dieser Instanz, an der die Einfügung beginnt. </param>
      <param name="value">Der einzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Länge dieser Instanz. </exception>
      <exception cref="T:System.OutOfMemoryException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
      <summary>Fügt die Zeichenfolgendarstellung einer Gleitkommazahl mit einfacher Genauigkeit an der angegebenen Zeichenposition in diese Instanz ein.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Einfügevorgang abgeschlossen wurde.</returns>
      <param name="index">Die Position in dieser Instanz, an der die Einfügung beginnt. </param>
      <param name="value">Der einzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Länge dieser Instanz. </exception>
      <exception cref="T:System.OutOfMemoryException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
      <summary>Fügt eine Zeichenfolge an der angegebenen Zeichenposition in diese Instanz ein.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Einfügevorgang abgeschlossen wurde.</returns>
      <param name="index">Die Position in dieser Instanz, an der die Einfügung beginnt. </param>
      <param name="value">Die einzufügende Zeichenfolge. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Länge dieser Instanz. - oder - Die Summe der aktuellen Länge dieses <see cref="T:System.Text.StringBuilder" />-Objekts und der Länge von <paramref name="value" /> ist größer als <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
      <summary>Fügt eine oder mehrere Kopien einer angegebenen Zeichenfolge an der angegebenen Zeichenposition in diese Instanz ein.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Einfügevorgang abgeschlossen wurde.</returns>
      <param name="index">Die Position in dieser Instanz, an der die Einfügung beginnt. </param>
      <param name="value">Die einzufügende Zeichenfolge. </param>
      <param name="count">Die Anzahl der Einfügewiederholungen für <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Länge dieser Instanz.- oder -  <paramref name="count" /> ist kleiner als 0. </exception>
      <exception cref="T:System.OutOfMemoryException">Die Summe der aktuellen Länge dieses <see cref="T:System.Text.StringBuilder" />-Objekts und der Länge von <paramref name="value" /> multipliziert mit <paramref name="count" /> ist größer als <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
      <summary>Fügt die Zeichenfolgendarstellung einer 16-Bit-Ganzzahl ohne Vorzeichen an der angegebenen Zeichenposition in diese Instanz ein.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Einfügevorgang abgeschlossen wurde.</returns>
      <param name="index">Die Position in dieser Instanz, an der die Einfügung beginnt. </param>
      <param name="value">Der einzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Länge dieser Instanz. </exception>
      <exception cref="T:System.OutOfMemoryException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
      <summary>Fügt die Zeichenfolgendarstellung einer 32-Bit-Ganzzahl ohne Vorzeichen an der angegebenen Zeichenposition in diese Instanz ein.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Einfügevorgang abgeschlossen wurde.</returns>
      <param name="index">Die Position in dieser Instanz, an der die Einfügung beginnt. </param>
      <param name="value">Der einzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Länge dieser Instanz. </exception>
      <exception cref="T:System.OutOfMemoryException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
      <summary>Fügt die Zeichenfolgendarstellung einer 64-Bit-Ganzzahl ohne Vorzeichen an der angegebenen Zeichenposition in diese Instanz ein.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Einfügevorgang abgeschlossen wurde.</returns>
      <param name="index">Die Position in dieser Instanz, an der die Einfügung beginnt. </param>
      <param name="value">Der einzufügende Wert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Länge dieser Instanz. </exception>
      <exception cref="T:System.OutOfMemoryException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.Length">
      <summary>Ruft die Länge des aktuellen <see cref="T:System.Text.StringBuilder" />-Objekts ab oder legt diese fest.</summary>
      <returns>Die Länge dieser Instanz.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der für einen set-Vorgang angegebene Wert ist kleiner als 0 (null) oder größer als <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.MaxCapacity">
      <summary>Ruft die maximale Kapazität dieser Instanz ab.</summary>
      <returns>Die Höchstanzahl von Zeichen, die diese Instanz enthalten kann.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
      <summary>Entfernt den angegebenen Bereich von Zeichen aus dieser Instanz.</summary>
      <returns>Ein Verweis auf diese Instanz, nachdem der Ausschneidevorgang abgeschlossen wurde.</returns>
      <param name="startIndex">Die nullbasierte Position in dieser Instanz, an der das Entfernen beginnt. </param>
      <param name="length">Die Anzahl der zu entfernenden Zeichen. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> oder <paramref name="length" /> ist kleiner als 0 (null), oder <paramref name="startIndex" /> + <paramref name="length" /> ist größer als die Länge dieser Instanz. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
      <summary>Ersetzt in dieser Instanz alle Vorkommen eines angegebenen Zeichens durch ein anderes angegebenes Zeichen.</summary>
      <returns>Ein Verweis auf diese Instanz, bei der <paramref name="oldChar" /> durch <paramref name="newChar" /> ersetzt wurde.</returns>
      <param name="oldChar">Das zu ersetzende Zeichen. </param>
      <param name="newChar">Das Zeichen, das <paramref name="oldChar" /> ersetzt. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
      <summary>Ersetzt alle Vorkommen eines angegebenen Zeichens in einer Teilzeichenfolge dieser Instanz durch ein anderes angegebenes Zeichen.</summary>
      <returns>Ein Verweis auf diese Instanz, bei der <paramref name="oldChar" /> im Bereich von <paramref name="startIndex" /> bis <paramref name="startIndex" /> + <paramref name="count" /> -1 durch <paramref name="newChar" /> ersetzt wurde.</returns>
      <param name="oldChar">Das zu ersetzende Zeichen. </param>
      <param name="newChar">Das Zeichen, das <paramref name="oldChar" /> ersetzt. </param>
      <param name="startIndex">Die Position in dieser Instanz, an der die Teilzeichenfolge beginnt. </param>
      <param name="count">Die Länge der Teilzeichenfolge. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> + <paramref name="count" /> ist größer als die Länge des Werts dieser Instanz.- oder -  <paramref name="startIndex" /> oder <paramref name="count" /> ist kleiner als 0. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.String,System.String)">
      <summary>Ersetzt in dieser Instanz alle Vorkommen einer angegebenen Zeichenfolge durch eine andere angegebene Zeichenfolge.</summary>
      <returns>Ein Verweis auf diese Instanz, bei der alle Vorkommen von <paramref name="oldValue" /> durch <paramref name="newValue" /> ersetzt wurden.</returns>
      <param name="oldValue">Die zu ersetzende Zeichenfolge. </param>
      <param name="newValue">Die Zeichenfolge, die <paramref name="oldValue" /> ersetzt, oder null. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oldValue" /> ist null. </exception>
      <exception cref="T:System.ArgumentException">Die Länge von <paramref name="oldValue" /> ist 0 (null). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary>Ersetzt alle Vorkommen einer angegebenen Zeichenfolge in einer Teilzeichenfolge dieser Instanz durch eine andere angegebene Zeichenfolge.</summary>
      <returns>Ein Verweis auf diese Instanz, bei der alle Instanzen von <paramref name="oldValue" /> im Bereich von <paramref name="startIndex" /> bis <paramref name="startIndex" /> + <paramref name="count" /> - 1 durch <paramref name="newValue" /> ersetzt wurden.</returns>
      <param name="oldValue">Die zu ersetzende Zeichenfolge. </param>
      <param name="newValue">Die Zeichenfolge, die <paramref name="oldValue" /> ersetzt, oder null. </param>
      <param name="startIndex">Die Position in dieser Instanz, an der die Teilzeichenfolge beginnt. </param>
      <param name="count">Die Länge der Teilzeichenfolge. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oldValue" /> ist null. </exception>
      <exception cref="T:System.ArgumentException">Die Länge von <paramref name="oldValue" /> ist 0 (null). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> oder <paramref name="count" /> ist kleiner als 0.- oder -  Die Summe von <paramref name="startIndex" /> und <paramref name="count" /> bezeichnet eine Zeichenposition außerhalb dieser Instanz.- oder -  Ein Vergrößern des Werts dieser Instanz würde <see cref="P:System.Text.StringBuilder.MaxCapacity" /> überschreiten. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.ToString">
      <summary>Konvertiert den Wert dieser Instanz in einen <see cref="T:System.String" />.</summary>
      <returns>Eine Zeichenfolge, deren Wert mit dieser Instanz übereinstimmt.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
      <summary>Konvertiert den Wert einer Teilzeichenfolge dieser Instanz in eine <see cref="T:System.String" />.</summary>
      <returns>Eine Zeichenfolge, deren Wert der angegebenen Teilzeichenfolge dieser Instanz entspricht.</returns>
      <param name="startIndex">Die Anfangsposition der Teilzeichenfolge innerhalb dieser Instanz. </param>
      <param name="length">Die Länge der Teilzeichenfolge. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> oder <paramref name="length" /> ist kleiner als 0.- oder -  Die Summe aus <paramref name="startIndex" /> und <paramref name="length" /> ist größer als die Länge der aktuellen Instanz. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Threading.LazyThreadSafetyMode">
      <summary>Gibt an, wie eine <see cref="T:System.Lazy`1" />-Instanz den Zugriff bei mehreren Threads synchronisiert.</summary>
    </member>
    <member name="F:System.Threading.LazyThreadSafetyMode.ExecutionAndPublication">
      <summary>Mithilfe von Sperren wird sichergestellt, dass nur ein einzelner Thread threadsicher eine <see cref="T:System.Lazy`1" />-Instanz initialisieren kann.Wenn die Initialisierungsmethode (oder der Standardkonstruktor, wenn keine Initialisierungsmethode vorhanden ist) Sperren intern verwendet, können Deadlocks auftreten.Wenn Sie einen <see cref="T:System.Lazy`1" />-Konstruktor verwenden, der eine Initialisierungsmethode (<paramref name="valueFactory" />-Parameter) angibt und diese Initialisierungsmethode eine Ausnahme auslöst (oder eine Ausnahme nicht behandeln kann), wird die Ausnahme beim ersten Aufruf der <see cref="P:System.Lazy`1.Value" />-Eigenschaft zwischengespeichert und bei nachfolgenden Aufrufen der <see cref="P:System.Lazy`1.Value" />-Eigenschaft erneut ausgelöst.Wenn Sie einen <see cref="T:System.Lazy`1" />-Konstruktor verwenden, der keine Initialisierungsmethode angibt, werden Ausnahmen, die vom Standardkonstruktor für <paramref name="T" /> ausgelöst werden, nicht zwischengespeichert.In diesem Fall wird bei einem nachfolgenden Aufruf der <see cref="P:System.Lazy`1.Value" />-Eigenschaft die <see cref="T:System.Lazy`1" />-Instanz möglicherweise erfolgreich initialisiert.Wenn die Initialisierungsmethode rekursiv auf die <see cref="P:System.Lazy`1.Value" />-Eigenschaft der <see cref="T:System.Lazy`1" />-Instanz zugreift, wird eine <see cref="T:System.InvalidOperationException" /> ausgelöst.</summary>
    </member>
    <member name="F:System.Threading.LazyThreadSafetyMode.None">
      <summary>Die <see cref="T:System.Lazy`1" />-Instanz ist nicht threadsicher. Wenn von mehreren Threads auf die Instanz zugegriffen wird, ist das Verhalten nicht definiert.Verwenden Sie diesen Modus nur, wenn hohe Leistungsfähigkeit entscheidend ist und die <see cref="T:System.Lazy`1" />-Instanz garantiert nie von mehr als einem Thread initialisiert wird.Wenn Sie einen <see cref="T:System.Lazy`1" />-Konstruktor verwenden, der eine Initialisierungsmethode (<paramref name="valueFactory" />-Parameter) angibt und diese Initialisierungsmethode eine Ausnahme auslöst (oder eine Ausnahme nicht behandeln kann), wird die Ausnahme beim ersten Aufruf der <see cref="P:System.Lazy`1.Value" />-Eigenschaft zwischengespeichert und bei nachfolgenden Aufrufen der <see cref="P:System.Lazy`1.Value" />-Eigenschaft erneut ausgelöst.Wenn Sie einen <see cref="T:System.Lazy`1" />-Konstruktor verwenden, der keine Initialisierungsmethode angibt, werden Ausnahmen, die vom Standardkonstruktor für <paramref name="T" /> ausgelöst werden, nicht zwischengespeichert.In diesem Fall wird bei einem nachfolgenden Aufruf der <see cref="P:System.Lazy`1.Value" />-Eigenschaft die <see cref="T:System.Lazy`1" />-Instanz möglicherweise erfolgreich initialisiert.Wenn die Initialisierungsmethode rekursiv auf die <see cref="P:System.Lazy`1.Value" />-Eigenschaft der <see cref="T:System.Lazy`1" />-Instanz zugreift, wird eine <see cref="T:System.InvalidOperationException" /> ausgelöst.</summary>
    </member>
    <member name="F:System.Threading.LazyThreadSafetyMode.PublicationOnly">
      <summary>Wenn mehrere Threads versuchen, gleichzeitig eine <see cref="T:System.Lazy`1" />-Instanz zu initialisieren, wird für alle Threads zugelassen, dass die Initialisierungsmethode ausgeführt wird (oder der Standardkonstruktor, wenn keine Initialisierungsmethode vorhanden ist).Der erste Thread, bei dem die Initialisierung abgeschlossen wird, legt den Wert der <see cref="T:System.Lazy`1" />-Instanz fest.Dieser Wert wird an andere Threads zurückgegeben, die gleichzeitig die Initialisierungsmethode ausgeführt haben, es sei denn, die Initialisierungsmethode löst Ausnahmen für diese Threads aus.Alle Instanzen von <paramref name="T" />, die von den konkurrierenden Threads erstellt wurden, werden verworfen.Wenn die Initialisierungsmethode für einen Thread eine Ausnahme auslöst, wird die Ausnahme aus der <see cref="P:System.Lazy`1.Value" />-Eigenschaft für diesen Thread weitergegeben.Die Ausnahme wird nicht zwischengespeichert.Der Wert der <see cref="P:System.Lazy`1.IsValueCreated" />-Eigenschaft bleibt false, und nachfolgende Aufrufe der <see cref="P:System.Lazy`1.Value" />-Eigenschaft, entweder durch den Thread, in dem die Ausnahme ausgelöst wurde, oder durch andere Threads, haben die erneute Ausführung der Initialisierungsmethode zur Folge.Wenn die Initialisierungsmethode rekursiv auf die <see cref="P:System.Lazy`1.Value" />-Eigenschaft der <see cref="T:System.Lazy`1" />-Instanz zugreift, wird keine Ausnahme ausgelöst.</summary>
    </member>
    <member name="T:System.Threading.Timeout">
      <summary>Enthält Konstanten, die unendliche Timeoutintervalle angeben.Diese Klasse kann nicht vererbt werden.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Threading.Timeout.Infinite">
      <summary>Eine Konstante, mit der eine unbegrenzte Wartezeit angegeben wird, für Threading-Methoden, die einen <see cref="T:System.Int32" />-Parameter akzeptieren. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Threading.Timeout.InfiniteTimeSpan">
      <summary>Eine Konstante, mit der eine unbegrenzte Wartezeit für Methoden angegeben wird, die einen <see cref="T:System.TimeSpan" />-Parameter akzeptieren.</summary>
    </member>
    <member name="T:System.Threading.WaitHandle">
      <summary>Kapselt betriebssystemspezifische Objekte, die auf exklusiven Zugriff auf gemeinsam genutzte Ressourcen warten.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Threading.WaitHandle" />-Klasse.</summary>
    </member>
    <member name="M:System.Threading.WaitHandle.Dispose">
      <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.Threading.WaitHandle" />-Klasse verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Threading.WaitHandle.Dispose(System.Boolean)">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse die von <see cref="T:System.Threading.WaitHandle" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="explicitDisposing">true, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, false, um ausschließlich nicht verwaltete Ressourcen freizugeben. </param>
    </member>
    <member name="F:System.Threading.WaitHandle.InvalidHandle">
      <summary>Stellt ein ungültiges systemeigenes Betriebssystemhandle dar.Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])">
      <summary>Wartet, bis alle Elemente im angegebenen Array ein Signal empfangen.</summary>
      <returns>true, wenn jedes Element in <paramref name="waitHandles" /> ein Signal empfangen hat, andernfalls wird die Methode nicht beendet.</returns>
      <param name="waitHandles">Ein WaitHandle-Array mit den Objekten, auf die die aktuelle Instanz wartet.Dieses Array kann nicht mehrere Verweise auf dasselbe Objekt enthalten.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array are null. -or-<paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</exception>
      <exception cref="T:System.DuplicateWaitObjectException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.The <paramref name="waitHandles" /> array contains elements that are duplicates. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.-or- The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element. </exception>
      <exception cref="T:System.ApplicationException">
        <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait terminated because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)">
      <summary>Wartet auf den Empfang eines Signals für alle Elemente im angegebenen Array und gibt das Zeitintervall mit einem <see cref="T:System.Int32" />-Wert an.</summary>
      <returns>true, wenn jedes Element in <paramref name="waitHandles" /> ein Signal empfangen hat, andernfalls false.</returns>
      <param name="waitHandles">Ein WaitHandle-Array mit den Objekten, auf die die aktuelle Instanz wartet.Dieses Array kann nicht mehrere Verweise auf dasselbe Objekt (Duplikate) enthalten.</param>
      <param name="millisecondsTimeout">Die Anzahl von Millisekunden, die gewartet wird, oder <see cref="F:System.Threading.Timeout.Infinite" /> (-1) für Warten ohne Timeout. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or- One or more of the objects in the <paramref name="waitHandles" /> array is null. -or-<paramref name="waitHandles" /> is an array with no elements. </exception>
      <exception cref="T:System.DuplicateWaitObjectException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.The <paramref name="waitHandles" /> array contains elements that are duplicates. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.-or- The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)">
      <summary>Wartet auf den Empfang eines Signals für alle Elemente im angegebenen Array und gibt das Zeitintervall mit einem <see cref="T:System.TimeSpan" />-Wert an.</summary>
      <returns>true, wenn jedes Element in <paramref name="waitHandles" /> ein Signal empfangen hat, andernfalls false.</returns>
      <param name="waitHandles">Ein WaitHandle-Array mit den Objekten, auf die die aktuelle Instanz wartet.Dieses Array kann nicht mehrere Verweise auf dasselbe Objekt enthalten.</param>
      <param name="timeout">Eine <see cref="T:System.TimeSpan" />-Struktur, die die Anzahl der zu Millisekunden für die Wartezeit angibt, oder eine <see cref="T:System.TimeSpan" />-Struktur, die -1 Millisekunden angibt, also eine unbeschränkte Wartezeit. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null. -or- One or more of the objects in the <paramref name="waitHandles" /> array is null. -or-<paramref name="waitHandles" /> is an array with no elements. </exception>
      <exception cref="T:System.DuplicateWaitObjectException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.The <paramref name="waitHandles" /> array contains elements that are duplicates. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.-or- The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out. -or-<paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait terminated because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])">
      <summary>Wartet, bis Elemente im angegebenen Array ein Signal empfangen.</summary>
      <returns>Der Arrayindex des Objekts, das den Wartevorgang erfüllt hat.</returns>
      <param name="waitHandles">Ein WaitHandle-Array mit den Objekten, auf die die aktuelle Instanz wartet. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array is null. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits. </exception>
      <exception cref="T:System.ApplicationException">
        <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later. </exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)">
      <summary>Wartet auf den Empfang eines Signals für alle Elemente im angegebenen Array und gibt das Zeitintervall mit einer 32-Bit-Ganzzahl mit Vorzeichen an.</summary>
      <returns>Der Arrayindex des Objekts, das den Wartevorgang erfüllt hat, oder <see cref="F:System.Threading.WaitHandle.WaitTimeout" />, wenn keines der Objekte den Wartevorgang erfüllt hat und ein Zeitintervall äquivalent zu <paramref name="millisecondsTimeout" /> vergangen ist.</returns>
      <param name="waitHandles">Ein WaitHandle-Array mit den Objekten, auf die die aktuelle Instanz wartet. </param>
      <param name="millisecondsTimeout">Die Anzahl von Millisekunden, die gewartet wird, oder <see cref="F:System.Threading.Timeout.Infinite" /> (-1) für Warten ohne Timeout. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array is null. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="waitHandles" /> is an array with no elements. </exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)">
      <summary>Wartet auf den Empfang eines Signals für alle Elemente im angegebenen Array und gibt das Zeitintervall mit einem <see cref="T:System.TimeSpan" />-Wert an.</summary>
      <returns>Der Arrayindex des Objekts, das den Wartevorgang erfüllt hat, oder <see cref="F:System.Threading.WaitHandle.WaitTimeout" />, wenn keines der Objekte den Wartevorgang erfüllt hat und ein Zeitintervall äquivalent zu <paramref name="timeout" /> vergangen ist.</returns>
      <param name="waitHandles">Ein WaitHandle-Array mit den Objekten, auf die die aktuelle Instanz wartet. </param>
      <param name="timeout">Eine <see cref="T:System.TimeSpan" />-Struktur, die die Anzahl der zu wartenden Millisekunden angibt, oder eine <see cref="T:System.TimeSpan" />-Struktur, die -1 Millisekunden zum unendlichen Warten angibt. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array is null. </exception>
      <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out. -or-<paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="waitHandles" /> is an array with no elements. </exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitOne">
      <summary>Blockiert den aktuellen Thread, bis das aktuelle <see cref="T:System.Threading.WaitHandle" /> ein Signal empfängt.</summary>
      <returns>true, wenn die aktuelle Instanz ein Signal empfängt.Wenn die aktuelle Instanz kein Signal erhält, wird <see cref="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" /> nicht beendet.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitOne(System.Int32)">
      <summary>Blockiert den aktuellen Thread, bis das aktuelle <see cref="T:System.Threading.WaitHandle" /> ein Signal empfängt, wobei eine 32-Bit-Ganzzahl mit Vorzeichen zum Angeben des Zeitintervalls in Millisekunden verwendet wird.</summary>
      <returns>true, wenn die aktuelle Instanz ein Signal empfängt, andernfalls false.</returns>
      <param name="millisecondsTimeout">Die Anzahl von Millisekunden, die gewartet wird, oder <see cref="F:System.Threading.Timeout.Infinite" /> (-1) für Warten ohne Timeout. </param>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)">
      <summary>Blockiert den aktuellen Thread, bis die aktuelle Instanz ein Signal empfängt, wobei eine <see cref="T:System.TimeSpan" /> zum Angeben des Zeitintervalls verwendet wird.</summary>
      <returns>true, wenn die aktuelle Instanz ein Signal empfängt, andernfalls false.</returns>
      <param name="timeout">Eine <see cref="T:System.TimeSpan" />-Struktur, die die Anzahl der zu wartenden Millisekunden angibt, oder eine <see cref="T:System.TimeSpan" />-Struktur, die -1 Millisekunden zum unendlichen Warten angibt. </param>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.-or-<paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex.This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
    </member>
    <member name="F:System.Threading.WaitHandle.WaitTimeout">
      <summary>Gibt an, dass ein Timeout für einen <see cref="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />-Vorgang überschritten wurde, bevor ein Signal an eines der WaitHandles gesendet wurde.Dieses Feld ist konstant.</summary>
      <filterpriority>1</filterpriority>
    </member>
  </members>
</doc>