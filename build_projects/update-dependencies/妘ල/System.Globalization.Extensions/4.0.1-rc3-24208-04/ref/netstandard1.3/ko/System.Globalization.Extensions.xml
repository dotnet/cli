<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Globalization.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.StringNormalizationExtensions"></member>
    <member name="M:System.StringNormalizationExtensions.IsNormalized(System.String)"></member>
    <member name="M:System.StringNormalizationExtensions.IsNormalized(System.String,System.Text.NormalizationForm)"></member>
    <member name="M:System.StringNormalizationExtensions.Normalize(System.String)"></member>
    <member name="M:System.StringNormalizationExtensions.Normalize(System.String,System.Text.NormalizationForm)"></member>
    <member name="T:System.Globalization.GlobalizationExtensions"></member>
    <member name="M:System.Globalization.GlobalizationExtensions.GetStringComparer(System.Globalization.CompareInfo,System.Globalization.CompareOptions)"></member>
    <member name="T:System.Globalization.IdnMapping">
      <summary>인터넷 도메인 이름에 ASCII 문자가 아닌 문자를 사용할 수 있도록 합니다.이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Globalization.IdnMapping.#ctor">
      <summary>
        <see cref="T:System.Globalization.IdnMapping" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.Globalization.IdnMapping.AllowUnassigned">
      <summary>현재 <see cref="T:System.Globalization.IdnMapping" /> 개체의 멤버에서 수행한 작업에 할당되지 않은 유니코드 코드 포인트가 사용되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>할당되지 않은 코드 포인트가 작업에 사용되었으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Globalization.IdnMapping.Equals(System.Object)">
      <summary>지정된 개체가 현재 <see cref="T:System.Globalization.IdnMapping" /> 개체와 같은지 여부를 나타냅니다.</summary>
      <returns>
        <paramref name="obj" /> 매개 변수로 지정된 개체가 <see cref="T:System.Globalization.IdnMapping" />에서 파생되었으며 <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> 및 <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> 속성이 같으면 true이고, 그렇지 않으면 false입니다. </returns>
      <param name="obj">현재 개체와 비교할 개체입니다.</param>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetAscii(System.String)">
      <summary>유니코드 문자로 구성된 도메인 이름 레이블 문자열을 US-ASCII 문자 범위에 있는 표시 가능한 유니코드 문자의 문자열로 인코딩합니다.문자열은 IDNA 표준에 따라 형식이 지정됩니다.</summary>
      <returns>
        <paramref name="unicode" /> 매개 변수로 지정된 문자열에 해당하며, US-ASCII 문자 범위(U+0020 ~ U+007E)의 표시 가능한 유니코드 문자로 구성되고, IDNA 표준에 따라 형식이 지정된 문자열입니다.</returns>
      <param name="unicode">변환할 문자열입니다. 레이블 구분 기호로 구분된 하나 이상의 도메인 이름으로 구성되어 있어야 합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unicode" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="unicode" />가 <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> 및 <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> 속성과 IDNA 표준에 맞지 않는 경우</exception>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
      <summary>US-ASCII 문자 범위 외부의 유니코드 문자를 포함하는 도메인 이름 레이블의 부분 문자열을 인코딩합니다.하위 문자열은 US-ASCII 문자 범위의 표시 가능한 유니코드 문자열로 변환되고 IDNA 표준에 따라 형식이 지정됩니다.</summary>
      <returns>
        <paramref name="unicode" /> 및 <paramref name="index" /> 매개 변수로 지정된 부분 문자열에 해당하며, US-ASCII 문자 범위(U+0020 ~ U+007E)의 표시 가능한 유니코드 문자로 구성되고, IDNA 표준에 따라 형식이 지정된 문자열입니다.</returns>
      <param name="unicode">변환할 문자열입니다. 레이블 구분 기호로 구분된 하나 이상의 도메인 이름으로 구성되어 있어야 합니다.</param>
      <param name="index">0부터 시작하는 오프셋으로, <paramref name="unicode" />에서 변환할 부분 문자열의 시작을 지정합니다.변환 작업은 <paramref name="unicode" /> 문자열의 끝까지 수행됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unicode" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우또는<paramref name="index" />이 <paramref name="unicode" />의 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="unicode" />가 <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> 및 <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> 속성과 IDNA 표준에 맞지 않는 경우</exception>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
      <summary>US-ASCII 문자 범위 외부의 유니코드 문자를 포함하는 도메인 이름 레이블의 부분 문자열에 있는 지정된 수의 문자를 인코딩합니다.하위 문자열은 US-ASCII 문자 범위의 표시 가능한 유니코드 문자열로 변환되고 IDNA 표준에 따라 형식이 지정됩니다.</summary>
      <returns>
        <paramref name="unicode" />, <paramref name="index" /> 및 <paramref name="count" /> 매개 변수로 지정된 부분 문자열에 해당하며, US-ASCII 문자 범위(U+0020 ~ U+007E)의 표시 가능한 유니코드 문자로 구성되고, IDNA 표준에 따라 형식이 지정된 문자열입니다.</returns>
      <param name="unicode">변환할 문자열입니다. 레이블 구분 기호로 구분된 하나 이상의 도메인 이름으로 구성되어 있어야 합니다.</param>
      <param name="index">0부터 시작하는 오프셋으로, <paramref name="unicode" />에서 부분 문자열의 시작을 지정합니다.</param>
      <param name="count">
        <paramref name="unicode" /> 문자열의 <paramref name="index" />가 지정한 위치에서 시작하는 하위 문자열 중 변환할 문자 수입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unicode" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작은 경우또는<paramref name="index" />이 <paramref name="unicode" />의 길이보다 큰 경우또는<paramref name="index" />가 <paramref name="unicode" />의 길이에서 <paramref name="count" />를 뺀 값보다 큰 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="unicode" />가 <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> 및 <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> 속성과 IDNA 표준에 맞지 않는 경우</exception>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetHashCode">
      <summary>이 <see cref="T:System.Globalization.IdnMapping" /> 개체의 해시 코드를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Globalization.IdnMapping" /> 개체의 속성에서 파생된 네 개의 부호 있는 32비트 상수 중 하나입니다.  반환 값에는 특별한 의미가 없으므로 해시 코드 알고리즘에 사용하기는 적합하지 않습니다.</returns>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetUnicode(System.String)">
      <summary>IDNA 표준에 따라 인코딩된 하나 이상의 도메인 이름 레이블의 문자열을 유니코드 문자열로 디코딩합니다. </summary>
      <returns>
        <paramref name="ascii" /> 매개 변수로 지정된 IDNA 부분 문자열에 해당하는 유니코드입니다.</returns>
      <param name="ascii">디코딩할 문자열로, IDNA 표준에 따라 인코딩된 US-ASCII 문자 범위(U+0020 ~ U+007E)에 있는 하나 이상의 레이블로 구성됩니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ascii" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ascii" />가 <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> 및 <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> 속성과 IDNA 표준에 맞지 않는 경우</exception>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)">
      <summary>IDNA 표준에 따라 인코딩된 하나 이상의 도메인 이름 레이블의 하위 문자열을 유니코드 문자열로 디코딩합니다. </summary>
      <returns>
        <paramref name="ascii" /> 및 <paramref name="index" /> 매개 변수로 지정된 IDNA 부분 문자열에 해당하는 유니코드입니다.</returns>
      <param name="ascii">디코딩할 문자열로, IDNA 표준에 따라 인코딩된 US-ASCII 문자 범위(U+0020 ~ U+007E)에 있는 하나 이상의 레이블로 구성됩니다. </param>
      <param name="index">0부터 시작하는 오프셋으로, <paramref name="ascii" />에서 디코딩할 부분 문자열의 시작을 지정합니다.디코딩 작업은 <paramref name="ascii" /> 문자열의 끝까지 수행됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ascii" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우또는<paramref name="index" />이 <paramref name="ascii" />의 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ascii" />가 <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> 및 <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> 속성과 IDNA 표준에 맞지 않는 경우</exception>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)">
      <summary>IDNA표준에 따라 인코딩된 하나 이상의 도메인 이름 레이블을 포함하는 지정된 길이의 부분 문자열을 유니코드 문자의 문자열로 디코딩합니다. </summary>
      <returns>
        <paramref name="ascii" />, <paramref name="index" /> 및 <paramref name="count" /> 매개 변수로 지정된 IDNA 부분 문자열에 해당하는 유니코드입니다.</returns>
      <param name="ascii">디코딩할 문자열로, IDNA 표준에 따라 인코딩된 US-ASCII 문자 범위(U+0020 ~ U+007E)에 있는 하나 이상의 레이블로 구성됩니다. </param>
      <param name="index">0부터 시작하는 오프셋으로, <paramref name="ascii" />에서 부분 문자열의 시작을 지정합니다. </param>
      <param name="count">
        <paramref name="ascii" /> 문자열의 <paramref name="index" />가 지정한 위치에서 시작하는 하위 문자열 중 변환할 문자 수입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ascii" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작은 경우또는<paramref name="index" />이 <paramref name="ascii" />의 길이보다 큰 경우또는<paramref name="index" />가 <paramref name="ascii" />의 길이에서 <paramref name="count" />를 뺀 값보다 큰 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ascii" />가 <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> 및 <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> 속성과 IDNA 표준에 맞지 않는 경우</exception>
    </member>
    <member name="P:System.Globalization.IdnMapping.UseStd3AsciiRules">
      <summary>현재 <see cref="T:System.Globalization.IdnMapping" /> 개체의 멤버에서 수행한 작업에 표준 명명 규칙이 사용되었는지 또는 비표준 명명 규칙이 사용되었는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>표준 명명 규칙이 작업에 사용되었으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="T:System.Text.NormalizationForm">
      <summary>수행할 정규화의 형식을 정의합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Text.NormalizationForm.FormC">
      <summary>완전한 정규 분해를 사용하여 유니코드 문자열이 정규화된 다음, 가능한 경우 시퀀스가 기본 합성 문자로 대체됨을 나타냅니다.</summary>
    </member>
    <member name="F:System.Text.NormalizationForm.FormD">
      <summary>유니코드 문자열이 완전한 정규 분해를 사용하여 정규화됨을 나타냅니다.</summary>
    </member>
    <member name="F:System.Text.NormalizationForm.FormKC">
      <summary>유니코드 문자열이 완전한 호환 분해를 사용하여 정규화된 다음, 가능한 경우 시퀀스가 기본 합성 문자로 대체됨을 나타냅니다.</summary>
    </member>
    <member name="F:System.Text.NormalizationForm.FormKD">
      <summary>유니코드 문자열이 완전한 호환 분해를 사용하여 정규화됨을 나타냅니다.</summary>
    </member>
  </members>
</doc>