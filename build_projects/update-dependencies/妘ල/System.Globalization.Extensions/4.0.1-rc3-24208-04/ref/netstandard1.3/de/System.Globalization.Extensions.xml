<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Globalization.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.StringNormalizationExtensions"></member>
    <member name="M:System.StringNormalizationExtensions.IsNormalized(System.String)"></member>
    <member name="M:System.StringNormalizationExtensions.IsNormalized(System.String,System.Text.NormalizationForm)"></member>
    <member name="M:System.StringNormalizationExtensions.Normalize(System.String)"></member>
    <member name="M:System.StringNormalizationExtensions.Normalize(System.String,System.Text.NormalizationForm)"></member>
    <member name="T:System.Globalization.GlobalizationExtensions"></member>
    <member name="M:System.Globalization.GlobalizationExtensions.GetStringComparer(System.Globalization.CompareInfo,System.Globalization.CompareOptions)"></member>
    <member name="T:System.Globalization.IdnMapping">
      <summary>Unterstützt die Verwendung von Nicht-ASCII-Zeichen für Internetdomänennamen.Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Globalization.IdnMapping.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Globalization.IdnMapping" />-Klasse. </summary>
    </member>
    <member name="P:System.Globalization.IdnMapping.AllowUnassigned">
      <summary>Ruft einen Wert ab, der angibt, ob in Vorgängen, die von den Membern des aktuellen <see cref="T:System.Globalization.IdnMapping" />-Objekts durchgeführt werden, nicht zugewiesene Codepunkte verwendet werden, oder legt diesen fest.</summary>
      <returns>true, wenn in Vorgängen nicht zugewiesene Codepunkte verwendet werden, andernfalls false.</returns>
    </member>
    <member name="M:System.Globalization.IdnMapping.Equals(System.Object)">
      <summary>Gibt an, ob das angegebene Objekt und das aktuelle <see cref="T:System.Globalization.IdnMapping" />-Objekt gleich sind.</summary>
      <returns>true, wenn das vom <paramref name="obj" />-Parameter angegebene Objekt von <see cref="T:System.Globalization.IdnMapping" /> abgeleitet ist und seine <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" />-Eigenschaft sowie seine <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />-Eigenschaft gleich sind, andernfalls false. </returns>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetAscii(System.String)">
      <summary>Codiert eine Zeichenfolge von Domänennamensbezeichnungen, die aus Unicode-Zeichen bestehen, in eine Zeichenfolge aus anzeigbaren Unicode-Zeichen im US-ASCII-Zeichenbereich.Die Zeichenfolge wird entsprechend dem IDNA-Standard formatiert.</summary>
      <returns>Die Entsprechung der durch die <paramref name="unicode" />-Parameter angegebene Zeichenfolge, bestehend aus anzeigbaren Unicode-Zeichen im US-ASCII-Zeichenbereich (U+0020 bis U+007E) und formatiert entsprechend des IDNA-Standards.</returns>
      <param name="unicode">Eine zu konvertierende Eingabezeichenfolge, die aus einer oder mehreren durch Bezeichnungstrennzeichen getrennten Domänennamensbezeichnungen besteht.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unicode" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="unicode" /> ist auf der Grundlage der <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" />-Eigenschaft, der <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />-Eigenschaft und dem IDNA-Standard ungültig.</exception>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
      <summary>Codiert eine Teilzeichenfolge Domänennamensbezeichnungen, die Unicode-Zeichen außerhalb des US-ASCII-Zeichenbereichs enthalten.Die Teilzeichenfolge wird in eine Zeichenfolge aus anzeigbaren Unicode-Zeichen im US-ASCII-Zeichenbereich konvertiert und wird entsprechend dem IDNA-Standard formatiert.</summary>
      <returns>Die Entsprechung der durch die <paramref name="unicode" />und <paramref name="index" />-Parameter angegebenen Teilzeichenfolge, bestehend aus anzeigbaren Unicode-Zeichen im US-ASCII-Zeichenbereich (U+0020 bis U+007E) und formatiert entsprechend des IDNA-Standards.</returns>
      <param name="unicode">Eine zu konvertierende Eingabezeichenfolge, die aus einer oder mehreren durch Bezeichnungstrennzeichen getrennten Domänennamensbezeichnungen besteht.</param>
      <param name="index">Ein nullbasierter Offset in <paramref name="unicode" />, der den Anfang der zu konvertierenden Teilzeichenfolge angibt.Der Konvertierungsvorgang wird bis zum Ende der <paramref name="unicode" />-Zeichenfolge fortgesetzt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unicode" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.- oder -<paramref name="index" /> ist größer als die Länge von <paramref name="unicode" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="unicode" /> ist auf der Grundlage der <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" />-Eigenschaft, der <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />-Eigenschaft und dem IDNA-Standard ungültig.</exception>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
      <summary>Codiert die angegebene Anzahl von Zeichen in einer Teilzeichenfolge von Domänennamensbezeichnungen, die Unicode-Zeichen außerhalb des US-ASCII-Zeichenbereichs enthalten.Die Teilzeichenfolge wird in eine Zeichenfolge aus anzeigbaren Unicode-Zeichen im US-ASCII-Zeichenbereich konvertiert und wird entsprechend dem IDNA-Standard formatiert.</summary>
      <returns>Die Entsprechung der durch den <paramref name="unicode" />-Parameter, den <paramref name="index" />-Parameter und den <paramref name="count" />-Parameter angegebenen Teilzeichenfolge, bestehend aus anzeigbaren Unicode-Zeichen im US-ASCII-Zeichenbereich (U+0020 bis U+007E) und formatiert entsprechend des IDNA-Standards.</returns>
      <param name="unicode">Eine zu konvertierende Eingabezeichenfolge, die aus einer oder mehreren durch Bezeichnungstrennzeichen getrennten Domänennamensbezeichnungen besteht.</param>
      <param name="index">Ein nullbasierter Offset in <paramref name="unicode" />, der den Anfang der Teilzeichenfolge angibt.</param>
      <param name="count">Die Anzahl von zu konvertierenden Zeichen in der Teilzeichenfolge, die an der durch <paramref name="index" /> in der <paramref name="unicode" />-Zeichenfolge angegebenen Position beginnt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unicode" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0 (null).- oder -<paramref name="index" /> ist größer als die Länge von <paramref name="unicode" />.- oder -<paramref name="index" /> ist größer als die Länge von <paramref name="unicode" /> minus <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="unicode" /> ist auf der Grundlage der <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" />-Eigenschaft, der <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />-Eigenschaft und dem IDNA-Standard ungültig.</exception>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetHashCode">
      <summary>Gibt einen Hashcode für dieses <see cref="T:System.Globalization.IdnMapping" />-Objekt zurück.</summary>
      <returns>Eine von vier 32-Bit-Konstanten mit Vorzeichen, die von den Eigenschaften eines <see cref="T:System.Globalization.IdnMapping" />-Objekts abgeleitet ist.  Der Rückgabewert hat keine besondere Bedeutung und ist nicht für die Verwendung in einem Hashcodealgorithmus geeignet.</returns>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetUnicode(System.String)">
      <summary>Decodiert eine Zeichenfolge aus einer oder mehreren Domänennamensbezeichnungen, die entsprechend des IDNA-Standards codiert sind, in eine Zeichenfolge aus Unicode-Zeichen. </summary>
      <returns>Die Unicode-Entsprechung der durch den <paramref name="ascii" />-Parameter angegebenen IDNA-Teilzeichenfolge.</returns>
      <param name="ascii">Die zu decodierende Zeichenfolge, die aus einem oder mehreren Bezeichnungen im US-ASCII-Zeichenbereich (U+0020 bis U+007E) besteht, codiert nach dem IDNA-Standard. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ascii" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ascii" /> ist auf der Grundlage der <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" />-Eigenschaft, der <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />-Eigenschaft und dem IDNA-Standard ungültig.</exception>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)">
      <summary>Decodiert eine Teilzeichenfolge aus einer oder mehreren Domänennamensbezeichnungen, die entsprechend des IDNA-Standards codiert sind, in eine Zeichenfolge aus Unicode-Zeichen. </summary>
      <returns>Die Unicode-Entsprechung der durch den <paramref name="ascii" />-Parameter und den <paramref name="index" />-Parameter angegebenen IDNA-Teilzeichenfolge.</returns>
      <param name="ascii">Die zu decodierende Zeichenfolge, die aus einem oder mehreren Bezeichnungen im US-ASCII-Zeichenbereich (U+0020 bis U+007E) besteht, codiert nach dem IDNA-Standard. </param>
      <param name="index">Ein nullbasierter Offset in <paramref name="ascii" />, der den Anfang der zu decodierenden Teilzeichenfolge angibt.Der Decodierungsvorgang wird bis zum Ende der <paramref name="ascii" />-Zeichenfolge fortgesetzt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ascii" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.- oder -<paramref name="index" /> ist größer als die Länge von <paramref name="ascii" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ascii" /> ist auf der Grundlage der <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" />-Eigenschaft, der <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />-Eigenschaft und dem IDNA-Standard ungültig.</exception>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)">
      <summary>Decodiert eine Teilzeichenfolge einer angegebenen Länge, die eine oder mehrere Domänennamensbezeichnungen enthält, die entsprechend des IDNA-Standards codiert sind, in eine Zeichenfolge aus Unicode-Zeichen. </summary>
      <returns>Die Unicode-Entsprechung der durch den <paramref name="ascii" />-Parameter, den <paramref name="index" />-Parameter und den <paramref name="count" />-Parameter angegebenen IDNA-Teilzeichenfolge.</returns>
      <param name="ascii">Die zu decodierende Zeichenfolge, die aus einem oder mehreren Bezeichnungen im US-ASCII-Zeichenbereich (U+0020 bis U+007E) besteht, codiert nach dem IDNA-Standard. </param>
      <param name="index">Ein nullbasierter Offset in <paramref name="ascii" />, der den Anfang der Teilzeichenfolge angibt. </param>
      <param name="count">Die Anzahl von zu konvertierenden Zeichen in der Teilzeichenfolge, die an der durch <paramref name="index" /> in der <paramref name="ascii" />-Zeichenfolge angegebenen Position beginnt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ascii" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0 (null).- oder -<paramref name="index" /> ist größer als die Länge von <paramref name="ascii" />.- oder -<paramref name="index" /> ist größer als die Länge von <paramref name="ascii" /> minus <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ascii" /> ist auf der Grundlage der <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" />-Eigenschaft, der <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />-Eigenschaft und dem IDNA-Standard ungültig.</exception>
    </member>
    <member name="P:System.Globalization.IdnMapping.UseStd3AsciiRules">
      <summary>Ruft einen Wert ab, der angibt, ob in Vorgängen, die von den Membern des aktuellen <see cref="T:System.Globalization.IdnMapping" />-Objekts durchgeführt werden, dem Standard entsprechende oder gelockerte Namenskonventionen verwendet werden, oder legt diesen fest.</summary>
      <returns>true, wenn in Vorgängen standardmäßige Namenskonventionen verwendet werden, andernfalls false.</returns>
    </member>
    <member name="T:System.Text.NormalizationForm">
      <summary>Definiert den Typ der auszuführenden Normalisierung.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Text.NormalizationForm.FormC">
      <summary>Gibt an, dass eine Unicode-Zeichenfolge mithilfe der vollständigen kanonischen Zerlegung normalisiert wird, worauf ggf. die Ersetzung der Sequenzen durch ihre primären Zusammensetzungen folgt.</summary>
    </member>
    <member name="F:System.Text.NormalizationForm.FormD">
      <summary>Gibt an, dass eine Unicode-Zeichenfolge mithilfe der vollständigen kanonischen Zerlegung normalisiert wird.</summary>
    </member>
    <member name="F:System.Text.NormalizationForm.FormKC">
      <summary>Gibt an, dass eine Unicode-Zeichenfolge mithilfe der vollständigen Kompatibilitätszerlegung normalisiert wird, worauf ggf. die Ersetzung der Sequenzen durch ihre primären Zusammensetzungen folgt.</summary>
    </member>
    <member name="F:System.Text.NormalizationForm.FormKD">
      <summary>Gibt an, dass eine Unicode-Zeichenfolge mithilfe der vollständigen Kompatibilitätszerlegung normalisiert wird.</summary>
    </member>
  </members>
</doc>