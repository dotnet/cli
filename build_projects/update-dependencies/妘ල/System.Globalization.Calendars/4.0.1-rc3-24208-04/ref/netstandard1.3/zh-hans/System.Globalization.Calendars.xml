<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Globalization.Calendars</name>
  </assembly>
  <members>
    <member name="T:System.Globalization.ChineseLunisolarCalendar">
      <summary>将时间分成多个部分来表示，如分成年、月和日。年按农历计算，而日和月按阴阳历计算。</summary>
    </member>
    <member name="M:System.Globalization.ChineseLunisolarCalendar.#ctor">
      <summary>初始化 <see cref="T:System.Globalization.ChineseLunisolarCalendar" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Globalization.ChineseLunisolarCalendar.Eras">
      <summary>获取与当前 <see cref="T:System.Globalization.ChineseLunisolarCalendar" /> 对象支持的日期和时间范围对应的纪元。</summary>
      <returns>32 位有符号整数数组，用于指定相关的纪元。<see cref="T:System.Globalization.ChineseLunisolarCalendar" /> 对象的返回值始终是包含一个等于 <see cref="F:System.Globalization.ChineseLunisolarCalendar.ChineseEra" /> 值的元素的数组。</returns>
    </member>
    <member name="M:System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)">
      <summary>检索对应于指定 <see cref="T:System.DateTime" /> 类型的纪元。</summary>
      <returns>一个整数，表示 <paramref name="time" /> 参数中的纪元。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" /> 类型。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 小于 <see cref="P:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime" /> 或大于 <see cref="P:System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime" />。</exception>
    </member>
    <member name="P:System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.ChineseLunisolarCalendar" /> 类支持的最大日期和时间。</summary>
      <returns>一个 <see cref="T:System.DateTime" /> 类型，表示公历 2101 年 1 月 28 日结束的那一刻，约等于构造函数 DateTime(2101, 1, 28, 23, 59, 59, 999)。</returns>
    </member>
    <member name="P:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.ChineseLunisolarCalendar" /> 类支持的最小日期和时间。</summary>
      <returns>一个 <see cref="T:System.DateTime" /> 类型，表示公历 1901 年 2 月 19 日，等同于构造函数 DateTime(1901, 2, 19)。</returns>
    </member>
    <member name="T:System.Globalization.EastAsianLunisolarCalendar">
      <summary>表示一种日历，它将时间分为月、日、年和纪元，并且其日期基于太阳和月亮的循环。</summary>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)">
      <summary>计算与指定日期相距指定月数的日期。</summary>
      <returns>一个新的 <see cref="T:System.DateTime" />，通过在 <paramref name="time" /> 参数中添加指定的月数得到。</returns>
      <param name="time">
        <see cref="T:System.DateTime" />，将向其添加 <paramref name="months" />。</param>
      <param name="months">要添加的月数。</param>
      <exception cref="T:System.ArgumentException">结果超出了 <see cref="T:System.DateTime" /> 支持的范围。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="months" /> 小于 -120,000 或大于 120,000。- 或 -<paramref name="time" /> 小于 <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> 或大于 <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />。</exception>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)">
      <summary>计算与指定日期相距指定年数的日期。</summary>
      <returns>一个新的 <see cref="T:System.DateTime" />，通过在 <paramref name="time" /> 参数中添加指定的年数得到。</returns>
      <param name="time">
        <see cref="T:System.DateTime" />，将向其添加 <paramref name="years" />。</param>
      <param name="years">要添加的年数。</param>
      <exception cref="T:System.ArgumentException">结果超出了 <see cref="T:System.DateTime" /> 支持的范围。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 小于 <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> 或大于 <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />。</exception>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)">
      <summary>计算甲子（60 年）循环中指定年份的天干。</summary>
      <returns>一个从 1 到 10 的数字。</returns>
      <param name="sexagenaryYear">一个从 1 到 60 的整数，表示甲子循环中的一年。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sexagenaryYear" /> 小于 1 或大于 60。</exception>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)">
      <summary>计算指定日期中的月中日期。</summary>
      <returns>一个从 1 到 31 的整数，表示 <paramref name="time" /> 参数中指定的月中日期。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)">
      <summary>计算指定日期中的周中日期。</summary>
      <returns>
        <see cref="T:System.DayOfWeek" /> 值之一，表示 <paramref name="time" /> 参数中指定的周中日期。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 小于 <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> 或大于 <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />。</exception>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)">
      <summary>计算指定日期中的年中日期。</summary>
      <returns>一个从 1 到 354（在平年中）或从 1 到 384（在闰年中）的整数，表示 <paramref name="time" /> 参数中指定的年中日期。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)">
      <summary>计算指定纪元年份的指定月份中的天数。</summary>
      <returns>指定纪元年份中指定月份的天数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">一个从 1 到 12（在平年中）或从 1 到 13（在闰年中）的整数，用于表示月份。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" />、<paramref name="month" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)">
      <summary>计算指定纪元年份中的天数。</summary>
      <returns>指定纪元年份中的天数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)">
      <summary>计算指定纪元年份的闰月。</summary>
      <returns>一个从 1 到 13 的正整数，表示指定纪元年份的闰月。 - 或 -如果此日历不支持闰月，或者 <paramref name="year" /> 和 <paramref name="era" /> 参数未指定闰年，则为零。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)">
      <summary>返回指定日期中的月份。</summary>
      <returns>一个 1 到 13 之间的整数，表示 <paramref name="time" /> 参数中指定的月份。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)">
      <summary>计算指定纪元年份中的月数。</summary>
      <returns>指定纪元中指定年份的月数。返回值是 12 个月（在平年中）或 13 个月（在闰年中）。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)">
      <summary>计算与指定日期对应的甲子（60 年）循环中的年。</summary>
      <returns>甲子循环中的一个从 1 到 60 的数字，它与 <paramref name="date" /> 参数对应。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)">
      <summary>计算甲子（60 年）循环中指定年份的地支。</summary>
      <returns>一个从 1 到 12 的整数。</returns>
      <param name="sexagenaryYear">一个从 1 到 60 的整数，表示甲子循环中的一年。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sexagenaryYear" /> 小于 1 或大于 60。</exception>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)">
      <summary>返回指定日期中的年份。</summary>
      <returns>一个整数，它表示指定的 <see cref="T:System.DateTime" /> 中的年份。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定日期是否为闰日。</summary>
      <returns>如果指定的日期是闰日，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 13 之间的一个整数，用于表示月。</param>
      <param name="day">1 到 31 之间的一个整数，用于表示日。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" />、<paramref name="month" />、<paramref name="day" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元年份中的指定月份是否为闰月。</summary>
      <returns>如果 <paramref name="month" /> 参数是闰月，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 13 之间的一个整数，用于表示月。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" />、<paramref name="month" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定年份是否为闰年。</summary>
      <returns>如果指定的年是闰年，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>返回设置为指定的日期、时间和纪元的 <see cref="T:System.DateTime" />。</summary>
      <returns>一个设置为指定的日期、时间和纪元的 <see cref="T:System.DateTime" />。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 13 之间的一个整数，用于表示月。</param>
      <param name="day">1 到 31 之间的一个整数，用于表示日。</param>
      <param name="hour">0 到 23 之间的一个整数，用于表示小时。</param>
      <param name="minute">0 到 59 之间的一个整数，用于表示分钟。</param>
      <param name="second">0 到 59 之间的一个整数，用于表示秒。</param>
      <param name="millisecond">0 到 999 之间的一个整数，用于表示毫秒。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" />、<paramref name="month" />、<paramref name="day" />、<paramref name="hour" />、<paramref name="minute" />、<paramref name="second" />、<paramref name="millisecond" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)">
      <summary>将指定的年份转换为一个四位数的年份。</summary>
      <returns>包含 <paramref name="year" /> 参数的四位数表示形式的整数。</returns>
      <param name="year">一个两位数或四位数的整数，表示要转换的年份。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax">
      <summary>获取或设置可以用两位数年份表示的 100 年范围内的最后一年。</summary>
      <returns>可以用两位数年份表示的 100 年范围内的最后一年。</returns>
      <exception cref="T:System.InvalidOperationException">当前的 <see cref="T:System.Globalization.EastAsianLunisolarCalendar" /> 为只读。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">set 操作中的值小于 99 或大于当前日历中支持的最大年份。</exception>
    </member>
    <member name="T:System.Globalization.GregorianCalendar">
      <summary>表示公历。</summary>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.#ctor">
      <summary>使用默认的 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 值初始化 <see cref="T:System.Globalization.GregorianCalendar" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.#ctor(System.Globalization.GregorianCalendarTypes)">
      <summary>使用指定的 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 值初始化 <see cref="T:System.Globalization.GregorianCalendar" /> 类的新实例。</summary>
      <param name="type">
        <see cref="T:System.Globalization.GregorianCalendarTypes" /> 值，指示要创建的日历的语言版本。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="type" /> 不是 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 枚举的成员。</exception>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.AddMonths(System.DateTime,System.Int32)">
      <summary>返回与指定 <see cref="T:System.DateTime" /> 相距指定月数的 <see cref="T:System.DateTime" />。</summary>
      <returns>将指定的月数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</returns>
      <param name="time">
        <see cref="T:System.DateTime" />，将向其添加月数。</param>
      <param name="months">要添加的月数。</param>
      <exception cref="T:System.ArgumentException">结果 <see cref="T:System.DateTime" /> 超出了支持的范围。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="months" /> 小于 -120000。- 或 -<paramref name="months" /> 大于 120000。</exception>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.AddYears(System.DateTime,System.Int32)">
      <summary>返回与指定 <see cref="T:System.DateTime" /> 相距指定年数的 <see cref="T:System.DateTime" />。</summary>
      <returns>将指定年数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</returns>
      <param name="time">
        <see cref="T:System.DateTime" />，将向其添加年数。</param>
      <param name="years">要添加的年数。</param>
      <exception cref="T:System.ArgumentException">结果 <see cref="T:System.DateTime" /> 超出了支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.GregorianCalendar.CalendarType">
      <summary>获取或设置 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 值，该值指示当前 <see cref="T:System.Globalization.GregorianCalendar" /> 的语言版本。</summary>
      <returns>一个 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 值，该值指示当前 <see cref="T:System.Globalization.GregorianCalendar" /> 的语言版本。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">在设置操作中指定的值不是 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 枚举的成员。</exception>
      <exception cref="T:System.InvalidOperationException">在设置操作中，当前实例是只读的。</exception>
    </member>
    <member name="P:System.Globalization.GregorianCalendar.Eras">
      <summary>获取 <see cref="T:System.Globalization.GregorianCalendar" /> 中的纪元的列表。</summary>
      <returns>表示 <see cref="T:System.Globalization.GregorianCalendar" /> 中的纪元的整数数组。</returns>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是该月的几号。</summary>
      <returns>从 1 到 31 的整数，表示 <paramref name="time" /> 中的日期是该月的几号。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是星期几。</summary>
      <returns>一个 <see cref="T:System.DayOfWeek" /> 值，它表示 <paramref name="time" /> 中的日期是星期几。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</summary>
      <returns>从 1 到 366 的整数，表示 <paramref name="time" /> 中的日期是该年中的第几天。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份的指定月份的天数。</summary>
      <returns>指定纪元中指定年份的指定月份中的天数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> 超出了日历支持的范围。- 或 -<paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份的天数。</summary>
      <returns>指定纪元中指定年份的天数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> 超出了日历支持的范围。- 或 -<paramref name="year" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的纪元。</summary>
      <returns>表示 <paramref name="time" /> 中的纪元的整数。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.GetLeapMonth(System.Int32,System.Int32)">
      <summary>计算指定纪元年份的闰月。</summary>
      <returns>总为 0，因为公历无法识别闰月。</returns>
      <param name="year">年份。</param>
      <param name="era">纪元。指定 <see cref="F:System.Globalization.GregorianCalendar.ADEra" /> 或 GregorianCalendar.Eras[Calendar.CurrentEra]。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 小于公历 1 年或大于公历 9999 年。- 或 -<paramref name="era" /> 不是 <see cref="F:System.Globalization.GregorianCalendar.ADEra" /> 或 GregorianCalendar.Eras[Calendar.CurrentEra]。</exception>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的月份。</summary>
      <returns>1 到 12 之间的一个整数，它表示 <paramref name="time" /> 中的月份。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份中的月数。</summary>
      <returns>指定纪元中指定年份的月数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> 超出了日历支持的范围。- 或 -<paramref name="year" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的年份。</summary>
      <returns>表示 <paramref name="time" /> 中的年份的整数。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定日期是否为闰日。</summary>
      <returns>如果指定的日期是闰日，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="day">1 到 31 之间的一个整数，它表示天。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> 超出了日历支持的范围。- 或 -<paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="day" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元中指定年份的指定月份是否为闰月。</summary>
      <returns>除非被派生类重写，否则此方法始终返回 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> 超出了日历支持的范围。- 或 -<paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定年份是否为闰年。</summary>
      <returns>如果指定的年是闰年，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> 超出了日历支持的范围。- 或 -<paramref name="year" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.GregorianCalendar.MaxSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.GregorianCalendar" /> 类型支持的最晚日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.GregorianCalendar" /> 类型支持的最晚日期和时间，此日期时间为公历的公元 9999 年 12 月 31 日结束的那一刻，等效于 <see cref="F:System.DateTime.MaxValue" /></returns>
    </member>
    <member name="P:System.Globalization.GregorianCalendar.MinSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.GregorianCalendar" /> 类型支持的最早日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.GregorianCalendar" /> 类型支持的最早日期和时间，此日期时间为公历的公元 0001 年的 1 月 1 日开始的那一刻，等效于 <see cref="F:System.DateTime.MinValue" /></returns>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>返回一个 <see cref="T:System.DateTime" />，它设置为指定纪元中的指定日期和时间。</summary>
      <returns>设置为当前纪元中的指定日期和时间的 <see cref="T:System.DateTime" />。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="day">1 到 31 之间的一个整数，它表示天。</param>
      <param name="hour">0 与 23 之间的一个整数，它表示小时。</param>
      <param name="minute">0 与 59 之间的一个整数，它表示分钟。</param>
      <param name="second">0 与 59 之间的一个整数，它表示秒。</param>
      <param name="millisecond">0 与 999 之间的一个整数，它表示毫秒。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> 超出了日历支持的范围。- 或 -<paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="day" /> 超出了日历支持的范围。- 或 -<paramref name="hour" /> 小于零或大于 23。- 或 -<paramref name="minute" /> 小于零或大于 59。- 或 -<paramref name="second" /> 小于零或大于 59。- 或 -<paramref name="millisecond" /> 小于零或大于 999。</exception>
    </member>
    <member name="M:System.Globalization.GregorianCalendar.ToFourDigitYear(System.Int32)">
      <summary>使用 <see cref="P:System.Globalization.GregorianCalendar.TwoDigitYearMax" /> 属性将指定的年份转换为四位数年份，以确定相应的纪元。</summary>
      <returns>包含 <paramref name="year" /> 的四位数表示形式的整数。</returns>
      <param name="year">一个两位数或四位数的整数，表示要转换的年份。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.GregorianCalendar.TwoDigitYearMax">
      <summary>获取或设置可以用两位数年份表示的 100 年范围内的最后一年。</summary>
      <returns>可以用两位数年份表示的 100 年范围内的最后一年。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">为设置操作指定的值小于 99。- 或 -为 Set 操作指定的值大于 MaxSupportedDateTime.Year。</exception>
      <exception cref="T:System.InvalidOperationException">在设置操作中，当前实例是只读的。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Globalization.GregorianCalendarTypes">
      <summary>定义公历的不同语言版本。</summary>
    </member>
    <member name="F:System.Globalization.GregorianCalendarTypes.Arabic">
      <summary>指公历的阿拉伯语版本。</summary>
    </member>
    <member name="F:System.Globalization.GregorianCalendarTypes.Localized">
      <summary>指公历的已本地化版本（基于使用 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 的 <see cref="T:System.Globalization.CultureInfo" /> 的语言）。</summary>
    </member>
    <member name="F:System.Globalization.GregorianCalendarTypes.MiddleEastFrench">
      <summary>指公历的中东法语版本。</summary>
    </member>
    <member name="F:System.Globalization.GregorianCalendarTypes.TransliteratedEnglish">
      <summary>指公历的已转译的英语版本。</summary>
    </member>
    <member name="F:System.Globalization.GregorianCalendarTypes.TransliteratedFrench">
      <summary>指公历的已转译的法语版本。</summary>
    </member>
    <member name="F:System.Globalization.GregorianCalendarTypes.USEnglish">
      <summary>指公历的美国英语版本。</summary>
    </member>
    <member name="T:System.Globalization.HebrewCalendar">
      <summary>表示犹太历。</summary>
    </member>
    <member name="M:System.Globalization.HebrewCalendar.#ctor">
      <summary>初始化 <see cref="T:System.Globalization.HebrewCalendar" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Globalization.HebrewCalendar.AddMonths(System.DateTime,System.Int32)">
      <summary>返回与指定 <see cref="T:System.DateTime" /> 相距指定月数的 <see cref="T:System.DateTime" />。</summary>
      <returns>将指定的月数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</returns>
      <param name="time">
        <see cref="T:System.DateTime" />，将向其添加 <paramref name="months" />。</param>
      <param name="months">要添加的月数。</param>
      <exception cref="T:System.ArgumentException">结果 <see cref="T:System.DateTime" /> 超出了支持的范围。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="months" /> 小于 -120,000 或大于 120,000。</exception>
    </member>
    <member name="M:System.Globalization.HebrewCalendar.AddYears(System.DateTime,System.Int32)">
      <summary>返回与指定 <see cref="T:System.DateTime" /> 相距指定年数的 <see cref="T:System.DateTime" />。</summary>
      <returns>将指定年数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</returns>
      <param name="time">
        <see cref="T:System.DateTime" />，将向其添加 <paramref name="years" />。</param>
      <param name="years">要添加的年数。</param>
      <exception cref="T:System.ArgumentException">结果 <see cref="T:System.DateTime" /> 超出了支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.HebrewCalendar.Eras">
      <summary>获取 <see cref="T:System.Globalization.HebrewCalendar" /> 中的纪元的列表。</summary>
      <returns>表示 <see cref="T:System.Globalization.HebrewCalendar" /> 类型中的纪元的整数数组。返回值始终是包含一个等于 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 的元素的数组。</returns>
    </member>
    <member name="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是该月的几号。</summary>
      <returns>从 1 到 30 的整数，表示指定 <see cref="T:System.DateTime" /> 中的日期是该月的几号。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是星期几。</summary>
      <returns>一个 <see cref="T:System.DayOfWeek" /> 值，它表示指定的 <see cref="T:System.DateTime" /> 中的日期是星期几。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</summary>
      <returns>从 1 到 385 的整数，表示指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 早于公历 1583 年 9 月 17 日，或晚于 <see cref="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />。</exception>
    </member>
    <member name="M:System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份的指定月份的天数。</summary>
      <returns>指定纪元中指定年份的指定月份中的天数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 13 之间的一个整数，它表示月份。</param>
      <param name="era">表示纪元的整数。指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 或 Calendar.Eras[Calendar.CurrentEra]。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" />、<paramref name="month" /> 或 <paramref name="era" /> 超出了当前 <see cref="T:System.Globalization.HebrewCalendar" /> 对象支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份的天数。</summary>
      <returns>指定纪元中指定年份的天数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 或 HebrewCalendar.Eras[Calendar.CurrentEra]。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 或 <paramref name="era" /> 超出了当前 <see cref="T:System.Globalization.HebrewCalendar" /> 对象支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的纪元。</summary>
      <returns>表示指定的 <see cref="T:System.DateTime" /> 中纪元的整数。返回值始终为 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" />。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.HebrewCalendar.GetLeapMonth(System.Int32,System.Int32)">
      <summary>计算指定纪元年份的闰月。</summary>
      <returns>一个正整数，表示指定纪元年份中的闰月。如果 <paramref name="year" /> 和 <paramref name="era" /> 参数指定闰年，则返回值为 7；如果不是闰年，则为 0。</returns>
      <param name="year">年份。</param>
      <param name="era">纪元。指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 或 HebrewCalendar.Eras[Calendar.CurrentEra]。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> 不是 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 或 HebrewCalendar.Eras[Calendar.CurrentEra]。- 或 -<paramref name="year" /> 小于犹太历年份 5343 或大于犹太历年份 5999。</exception>
    </member>
    <member name="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的月份。</summary>
      <returns>1 到 13 之间的一个整数，它表示指定的 <see cref="T:System.DateTime" /> 中的月份。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 小于 <see cref="P:System.Globalization.HebrewCalendar.MinSupportedDateTime" /> 或大于 <see cref="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />。</exception>
    </member>
    <member name="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份中的月数。</summary>
      <returns>指定纪元中指定年份的月数。返回值是 12（在平年中）或 13（在闰年中）。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 或 HebrewCalendar.Eras[Calendar.CurrentEra]。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 或 <paramref name="era" /> 超出了当前 <see cref="T:System.Globalization.HebrewCalendar" /> 对象支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 值中的年份。</summary>
      <returns>一个整数，表示指定的 <see cref="T:System.DateTime" /> 值中的年份。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 超出了当前 <see cref="T:System.Globalization.HebrewCalendar" /> 对象支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定日期是否为闰日。</summary>
      <returns>如果指定的日期是闰日，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 13 之间的一个整数，它表示月份。</param>
      <param name="day">1 到 30 之间的一个整数，它表示天。</param>
      <param name="era">表示纪元的整数。指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 或 HebrewCalendar.Eras[Calendar.CurrentEra]。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" />、<paramref name="month" />、<paramref name="day" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元中指定年份的指定月份是否为闰月。</summary>
      <returns>如果指定的月份是闰月，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 13 之间的一个整数，它表示月份。</param>
      <param name="era">表示纪元的整数。指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 或 HebrewCalendar.Eras[Calendar.CurrentEra]。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" />、<paramref name="month" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定年份是否为闰年。</summary>
      <returns>如果指定的年是闰年，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 或 HebrewCalendar.Eras[Calendar.CurrentEra]。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.HebrewCalendar" /> 类型支持的最晚日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.HebrewCalendar" /> 类型支持的最晚日期和时间，此日期时间为公历的公元 2239 年 9 月 29 日的最后时刻。</returns>
    </member>
    <member name="P:System.Globalization.HebrewCalendar.MinSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.HebrewCalendar" /> 类型支持的最早日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.HebrewCalendar" /> 类型支持的最早日期和时间，此日期时间相当于公历的公元 1583 年 1 月 1 日开始的那一刻。</returns>
    </member>
    <member name="M:System.Globalization.HebrewCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>返回一个 <see cref="T:System.DateTime" />，它设置为指定纪元中的指定日期和时间。</summary>
      <returns>设置为当前纪元中的指定日期和时间的 <see cref="T:System.DateTime" />。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 13 之间的一个整数，它表示月份。</param>
      <param name="day">1 到 30 之间的一个整数，它表示天。</param>
      <param name="hour">0 与 23 之间的一个整数，它表示小时。</param>
      <param name="minute">0 与 59 之间的一个整数，它表示分钟。</param>
      <param name="second">0 与 59 之间的一个整数，它表示秒。</param>
      <param name="millisecond">0 与 999 之间的一个整数，它表示毫秒。</param>
      <param name="era">表示纪元的整数。指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 或 HebrewCalendar.Eras[Calendar.CurrentEra]。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" />、<paramref name="month" />、<paramref name="day" /> 或 <paramref name="era" /> 超出了当前 <see cref="T:System.Globalization.HebrewCalendar" /> 对象支持的范围。- 或 -<paramref name="hour" /> 小于 0 或大于 23。- 或 -<paramref name="minute" /> 小于 0 或大于 59。- 或 -<paramref name="second" /> 小于 0 或大于 59。- 或 -<paramref name="millisecond" /> 小于 0 或大于 999。</exception>
    </member>
    <member name="M:System.Globalization.HebrewCalendar.ToFourDigitYear(System.Int32)">
      <summary>使用 <see cref="P:System.Globalization.HebrewCalendar.TwoDigitYearMax" /> 属性将指定年份转换为四位数的年份，以确定相应的纪元。</summary>
      <returns>如果 <paramref name="year" /> 参数是两位数年份，则返回值是对应的四位数年份。如果 <paramref name="year" /> 参数是四位数年份，则返回值是未更改的 <paramref name="year" /> 参数。</returns>
      <param name="year">一个从 0 到 99 的两位数年份，或者从 5343 到 5999 的四位数犹太历年份。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 小于 0。- 或 -<paramref name="year" /> 小于 <see cref="P:System.Globalization.HebrewCalendar.MinSupportedDateTime" /> 或大于 <see cref="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />。</exception>
    </member>
    <member name="P:System.Globalization.HebrewCalendar.TwoDigitYearMax">
      <summary>获取或设置可以用两位数年份表示的 100 年范围内的最后一年。</summary>
      <returns>可以用两位数年份表示的 100 年范围内的最后一年。</returns>
      <exception cref="T:System.InvalidOperationException">当前的 <see cref="T:System.Globalization.HebrewCalendar" /> 对象为只读。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">在 set 操作中，犹太历年数值小于 5343 而不是 99，或者大于 5999。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Globalization.HijriCalendar">
      <summary>表示回历。</summary>
    </member>
    <member name="M:System.Globalization.HijriCalendar.#ctor">
      <summary>初始化 <see cref="T:System.Globalization.HijriCalendar" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)">
      <summary>返回与指定 <see cref="T:System.DateTime" /> 相距指定月数的 <see cref="T:System.DateTime" />。</summary>
      <returns>将指定的月数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</returns>
      <param name="time">将向其添加月数的 <see cref="T:System.DateTime" />。</param>
      <param name="months">要添加的月数。</param>
      <exception cref="T:System.ArgumentException">产生的 <see cref="T:System.DateTime" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="months" /> 小于 -120000。- 或 -<paramref name="months" /> 大于 120000。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" />
      </PermissionSet>
    </member>
    <member name="M:System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)">
      <summary>返回与指定 <see cref="T:System.DateTime" /> 相距指定年数的 <see cref="T:System.DateTime" />。</summary>
      <returns>将指定年数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</returns>
      <param name="time">将向其添加年数的 <see cref="T:System.DateTime" />。</param>
      <param name="years">要添加的年数。</param>
      <exception cref="T:System.ArgumentException">结果 <see cref="T:System.DateTime" /> 超出了支持的范围。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" />
      </PermissionSet>
    </member>
    <member name="P:System.Globalization.HijriCalendar.Eras">
      <summary>获取 <see cref="T:System.Globalization.HijriCalendar" /> 中的纪元的列表。</summary>
      <returns>表示 <see cref="T:System.Globalization.HijriCalendar" /> 中的纪元的整数数组。</returns>
    </member>
    <member name="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是该月的几号。</summary>
      <returns>从 1 到 30 的整数，表示指定 <see cref="T:System.DateTime" /> 中的日期是该月的几号。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" />
      </PermissionSet>
    </member>
    <member name="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是星期几。</summary>
      <returns>一个 <see cref="T:System.DayOfWeek" /> 值，它表示指定的 <see cref="T:System.DateTime" /> 中的日期是星期几。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</summary>
      <returns>从 1 到 355 的整数，表示指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" />
      </PermissionSet>
    </member>
    <member name="M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)">
      <summary>返回指定纪元年份中指定月份的天数。</summary>
      <returns>指定纪元中指定年份的指定月份中的天数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> 超出了此日历支持的范围。- 或 -<paramref name="year" /> 超出了此日历支持的范围。- 或 -<paramref name="month" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)">
      <summary>返回指定纪元年份中的天数。</summary>
      <returns>指定纪元年份中的天数。天数在平年中为 354，在闰年中为 355。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的纪元。</summary>
      <returns>表示指定的 <see cref="T:System.DateTime" /> 中纪元的整数。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.HijriCalendar.GetLeapMonth(System.Int32,System.Int32)">
      <summary>计算指定纪元年份的闰月。</summary>
      <returns>总为 0，因为 <see cref="T:System.Globalization.HijriCalendar" /> 类型不支持闰月的概念。</returns>
      <param name="year">年份。</param>
      <param name="era">纪元。指定 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 或 <see cref="F:System.Globalization.HijriCalendar.HijriEra" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 小于回历年 1 或大于 9666 年。- 或 -<paramref name="era" /> 不是 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 或 <see cref="F:System.Globalization.HijriCalendar.HijriEra" />。</exception>
    </member>
    <member name="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的月份。</summary>
      <returns>1 到 12 之间的一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的月份。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" />
      </PermissionSet>
    </member>
    <member name="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)">
      <summary>返回指定纪元年份中的月数。</summary>
      <returns>指定纪元年份中的月数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> 超出了此日历支持的范围。- 或 -<paramref name="year" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的年份。</summary>
      <returns>一个整数，它表示指定的 <see cref="T:System.DateTime" /> 中的年份。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" />
      </PermissionSet>
    </member>
    <member name="P:System.Globalization.HijriCalendar.HijriAdjustment">
      <summary>获取或设置要在日历中添加或减去的天数，以适应 Ramadan 的开头和结尾中的差异以及国家/地区间的日期差别。</summary>
      <returns>-2 到 2 之间的一个整数，表示要在日历中添加或减去的天数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">此属性当前设置为无效值。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>确定指定的日期是否为闰日。</summary>
      <returns>如果指定的日期是闰日，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="day">1 到 30 之间的一个整数，它表示天。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> 超出了此日历支持的范围。- 或 -<paramref name="year" /> 超出了此日历支持的范围。- 或 -<paramref name="month" /> 超出了此日历支持的范围。- 或 -<paramref name="day" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元年份中的指定月份是否为闰月。</summary>
      <returns>此方法通常返回 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> 超出了此日历支持的范围。- 或 -<paramref name="year" /> 超出了此日历支持的范围。- 或 -<paramref name="month" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定年份是否为闰年。</summary>
      <returns>如果指定的年是闰年，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> 超出了此日历支持的范围。- 或 -<paramref name="year" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.HijriCalendar.MaxSupportedDateTime">
      <summary>获取此日历支持的最晚日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.HijriCalendar" /> 类型支持的最晚日期和时间，此日期时间相当于公历的公元 9999 年 12 月 31 日结束的那一刻。</returns>
    </member>
    <member name="P:System.Globalization.HijriCalendar.MinSupportedDateTime">
      <summary>获取此日历支持的最早日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.HijriCalendar" /> 类型支持的最早日期和时间，此日期时间相当于公历的公元 622 年 7 月 18 月开始的那一刻。</returns>
    </member>
    <member name="M:System.Globalization.HijriCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>返回设置为指定的日期、时间和纪元的 <see cref="T:System.DateTime" />。</summary>
      <returns>设置为当前纪元中的指定日期和时间的 <see cref="T:System.DateTime" />。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="day">1 到 30 之间的一个整数，它表示天。</param>
      <param name="hour">0 与 23 之间的一个整数，它表示小时。</param>
      <param name="minute">0 与 59 之间的一个整数，它表示分钟。</param>
      <param name="second">0 与 59 之间的一个整数，它表示秒。</param>
      <param name="millisecond">0 与 999 之间的一个整数，它表示毫秒。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> 超出了此日历支持的范围。- 或 -<paramref name="year" /> 超出了此日历支持的范围。- 或 -<paramref name="month" /> 超出了此日历支持的范围。- 或 -<paramref name="day" /> 超出了此日历支持的范围。- 或 -<paramref name="hour" /> 小于零或大于 23。- 或 -<paramref name="minute" /> 小于零或大于 59。- 或 -<paramref name="second" /> 小于零或大于 59。- 或 -<paramref name="millisecond" /> 小于零或大于 999。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" />
      </PermissionSet>
    </member>
    <member name="M:System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)">
      <summary>使用 <see cref="P:System.Globalization.HijriCalendar.TwoDigitYearMax" /> 属性将指定的年份转换为四位数年份，以确定相应的纪元。</summary>
      <returns>包含 <paramref name="year" /> 的四位数表示形式的整数。</returns>
      <param name="year">一个两位数或四位数的整数，表示要转换的年份。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.HijriCalendar.TwoDigitYearMax">
      <summary>获取或设置可以用两位数年份表示的 100 年范围内的最后一年。</summary>
      <returns>可以用两位数年份表示的 100 年范围内的最后一年。</returns>
      <exception cref="T:System.InvalidOperationException">此日历为只读。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">设置操作中的值小于 100 或大于 9666。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Globalization.JapaneseCalendar">
      <summary>表示日本历。</summary>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.#ctor">
      <summary>初始化 <see cref="T:System.Globalization.JapaneseCalendar" /> 类的新实例。</summary>
      <exception cref="T:System.TypeInitializationException">由于缺少区域性信息，所以无法初始化 <see cref="T:System.Globalization.JapaneseCalendar" /> 对象。</exception>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)">
      <summary>返回与指定 <see cref="T:System.DateTime" /> 相距指定月数的 <see cref="T:System.DateTime" />。</summary>
      <returns>将指定的月数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</returns>
      <param name="time">
        <see cref="T:System.DateTime" />，将向其添加月数。</param>
      <param name="months">要添加的月数。</param>
      <exception cref="T:System.ArgumentException">结果 <see cref="T:System.DateTime" /> 超出了支持的范围。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="months" /> 小于 -120000。- 或 -<paramref name="months" /> 大于 120000。</exception>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)">
      <summary>返回与指定 <see cref="T:System.DateTime" /> 相距指定年数的 <see cref="T:System.DateTime" />。</summary>
      <returns>将指定年数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</returns>
      <param name="time">
        <see cref="T:System.DateTime" />，将向其添加年数。</param>
      <param name="years">要添加的年数。</param>
      <exception cref="T:System.ArgumentException">结果 <see cref="T:System.DateTime" /> 超出了支持的范围。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 超出 <see cref="T:System.Globalization.JapaneseCalendar" /> 类型支持范围。- 或 -<paramref name="years" /> 小于 -10,000 或大于 10,000。</exception>
    </member>
    <member name="P:System.Globalization.JapaneseCalendar.Eras">
      <summary>获取 <see cref="T:System.Globalization.JapaneseCalendar" /> 中的纪元的列表。</summary>
      <returns>表示 <see cref="T:System.Globalization.JapaneseCalendar" /> 中的纪元的整数数组。</returns>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是该月的几号。</summary>
      <returns>从 1 到 31 的整数，表示指定 <see cref="T:System.DateTime" /> 中的日期是该月的几号。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是星期几。</summary>
      <returns>一个 <see cref="T:System.DayOfWeek" /> 值，它表示指定的 <see cref="T:System.DateTime" /> 中的日期是星期几。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</summary>
      <returns>从 1 到 366 的整数，表示指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份的指定月份的天数。</summary>
      <returns>指定纪元中指定年份的指定月份中的天数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份的天数。</summary>
      <returns>指定纪元中指定年份的天数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的纪元。</summary>
      <returns>表示指定的 <see cref="T:System.DateTime" /> 中纪元的整数。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">结果 <see cref="T:System.DateTime" /> 超出了支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.GetLeapMonth(System.Int32,System.Int32)">
      <summary>计算指定纪元年份的闰月。</summary>
      <returns>返回值总是为 0，因为 <see cref="T:System.Globalization.JapaneseCalendar" /> 类型不支持闰月的概念。</returns>
      <param name="year">年份。</param>
      <param name="era">纪元。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 或 <paramref name="era" /> 超出了 <see cref="T:System.Globalization.JapaneseCalendar" /> 类型支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的月份。</summary>
      <returns>1 到 12 之间的一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的月份。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份中的月数。</summary>
      <returns>返回值始终为 12。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)">
      <summary>返回年中包括指定 <see cref="T:System.DateTime" /> 中的日期的星期。</summary>
      <returns>一个从 1 开始的整数，表示一年中包括 <paramref name="time" /> 参数中的日期的那个星期。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <param name="rule">
        <see cref="T:System.Globalization.CalendarWeekRule" /> 值之一，用于定义一个日历周。</param>
      <param name="firstDayOfWeek">
        <see cref="T:System.DayOfWeek" /> 值之一，表示一个星期的第一天。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 或 <paramref name="firstDayOfWeek" /> 超出了日历支持的范围。- 或 -<paramref name="rule" /> 不是有效的 <see cref="T:System.Globalization.CalendarWeekRule" /> 值。</exception>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的年份。</summary>
      <returns>一个整数，它表示指定的 <see cref="T:System.DateTime" /> 中的年份。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定日期是否为闰日。</summary>
      <returns>如果指定的日期是闰日，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="day">1 到 31 之间的一个整数，它表示天。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="day" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元中指定年份的指定月份是否为闰月。</summary>
      <returns>除非被派生类重写，否则此方法始终返回 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定年份是否为闰年。</summary>
      <returns>如果指定的年份是闰年，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.JapaneseCalendar.MaxSupportedDateTime">
      <summary>获取当前 <see cref="T:System.Globalization.JapaneseCalendar" /> 对象支持的最晚日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.JapaneseCalendar" /> 类型支持的最晚日期和时间，此日期时间相当于公历的公元 9999 年 12 月 31 日结束的那一刻。</returns>
    </member>
    <member name="P:System.Globalization.JapaneseCalendar.MinSupportedDateTime">
      <summary>获取当前 <see cref="T:System.Globalization.JapaneseCalendar" /> 对象支持的最早日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.JapaneseCalendar" /> 类型支持的最早日期和时间，它相当于公历的公元 1868 年 9 月 8 日开始的那一刻。</returns>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>返回一个 <see cref="T:System.DateTime" />，它设置为指定纪元中的指定日期和时间。</summary>
      <returns>设置为当前纪元中的指定日期和时间的 <see cref="T:System.DateTime" />。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="day">1 到 31 之间的一个整数，它表示天。</param>
      <param name="hour">0 与 23 之间的一个整数，它表示小时。</param>
      <param name="minute">0 与 59 之间的一个整数，它表示分钟。</param>
      <param name="second">0 与 59 之间的一个整数，它表示秒。</param>
      <param name="millisecond">0 与 999 之间的一个整数，它表示毫秒。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="day" /> 超出了日历支持的范围。- 或 -<paramref name="hour" /> 小于零或大于 23。- 或 -<paramref name="minute" /> 小于零或大于 59。- 或 -<paramref name="second" /> 小于零或大于 59。- 或 -<paramref name="millisecond" /> 小于零或大于 999。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)">
      <summary>使用 <see cref="P:System.Globalization.JapaneseCalendar.TwoDigitYearMax" /> 属性将指定的年份转换为四位数年份，以确定相应的纪元。</summary>
      <returns>包含 <paramref name="year" /> 的四位数表示形式的整数。</returns>
      <param name="year">一个表示要转换的年份的整数（通常为两位数）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.JapaneseCalendar.TwoDigitYearMax">
      <summary>获取或设置可以用两位数年份表示的 100 年范围内的最后一年。</summary>
      <returns>可以用两位数年份表示的 100 年范围内的最后一年。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">为设置操作指定的值小于 99。- 或 -为 Set 操作指定的值大于 8011（或 MaxSupportedDateTime.Year）。</exception>
      <exception cref="T:System.InvalidOperationException">在设置操作中，当前实例是只读的。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Globalization.JapaneseLunisolarCalendar">
      <summary>将时间分成多个部分来表示，如分成年、月和日。年按日本历计算，而日和月则按阴阳历计算。</summary>
    </member>
    <member name="M:System.Globalization.JapaneseLunisolarCalendar.#ctor">
      <summary>初始化 <see cref="T:System.Globalization.JapaneseLunisolarCalendar" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Globalization.JapaneseLunisolarCalendar.Eras">
      <summary>获取与 <see cref="T:System.Globalization.JapaneseLunisolarCalendar" /> 对象相关的纪元。</summary>
      <returns>32 位有符号整数数组，用于指定相关的纪元。</returns>
    </member>
    <member name="M:System.Globalization.JapaneseLunisolarCalendar.GetEra(System.DateTime)">
      <summary>检索对应于指定 <see cref="T:System.DateTime" /> 的纪元。</summary>
      <returns>一个整数，表示 <paramref name="time" /> 参数中指定的纪元。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="P:System.Globalization.JapaneseLunisolarCalendar.MaxSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.JapaneseLunisolarCalendar" /> 类支持的最大日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.JapaneseLunisolarCalendar" /> 类支持的最晚日期和时间，它相当于公历的公元 2050 年 1 月 22 日结束的那一刻。</returns>
    </member>
    <member name="P:System.Globalization.JapaneseLunisolarCalendar.MinSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.JapaneseLunisolarCalendar" /> 类支持的最小日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.JapaneseLunisolarCalendar" /> 类支持的最早日期和时间，它相当于公历的公元 1960 年的 1 月 28 日开始的那一刻。</returns>
    </member>
    <member name="T:System.Globalization.JulianCalendar">
      <summary>表示儒略历。</summary>
    </member>
    <member name="M:System.Globalization.JulianCalendar.#ctor">
      <summary>初始化 <see cref="T:System.Globalization.JulianCalendar" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Globalization.JulianCalendar.AddMonths(System.DateTime,System.Int32)">
      <summary>返回与指定 <see cref="T:System.DateTime" /> 相距指定月数的 <see cref="T:System.DateTime" />。</summary>
      <returns>将指定的月数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</returns>
      <param name="time">
        <see cref="T:System.DateTime" />，将向其添加月数。</param>
      <param name="months">要添加的月数。</param>
      <exception cref="T:System.ArgumentException">结果 <see cref="T:System.DateTime" /> 超出了支持的范围。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="months" /> 小于 -120000。- 或 -<paramref name="months" /> 大于 120000。</exception>
    </member>
    <member name="M:System.Globalization.JulianCalendar.AddYears(System.DateTime,System.Int32)">
      <summary>返回与指定 <see cref="T:System.DateTime" /> 相距指定年数的 <see cref="T:System.DateTime" />。</summary>
      <returns>将指定年数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</returns>
      <param name="time">
        <see cref="T:System.DateTime" />，将向其添加年数。</param>
      <param name="years">要添加的年数。</param>
      <exception cref="T:System.ArgumentException">结果 <see cref="T:System.DateTime" /> 超出了支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.JulianCalendar.Eras">
      <summary>获取 <see cref="T:System.Globalization.JulianCalendar" /> 中的纪元的列表。</summary>
      <returns>表示 <see cref="T:System.Globalization.JulianCalendar" /> 中的纪元的整数数组。</returns>
    </member>
    <member name="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是该月的几号。</summary>
      <returns>从 1 到 31 的整数，表示 <paramref name="time" /> 中的日期是该月的几号。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是星期几。</summary>
      <returns>一个 <see cref="T:System.DayOfWeek" /> 值，它表示 <paramref name="time" /> 中的日期是星期几。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</summary>
      <returns>从 1 到 366 的整数，表示 <paramref name="time" /> 中的日期是该年中的第几天。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份的指定月份的天数。</summary>
      <returns>指定纪元中指定年份的指定月份中的天数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> 超出了日历支持的范围。- 或 -<paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份的天数。</summary>
      <returns>指定纪元中指定年份的天数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> 超出了日历支持的范围。- 或 -<paramref name="year" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的纪元。</summary>
      <returns>表示 <paramref name="time" /> 中的纪元的整数。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.JulianCalendar.GetLeapMonth(System.Int32,System.Int32)">
      <summary>计算指定纪元年份的闰月。</summary>
      <returns>一个正整数，表示指定纪元年份中的闰月。另外，如果日历不支持闰月，或者 <paramref name="year" /> 和 <paramref name="era" /> 未指定闰年，此方法将返回零。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
    </member>
    <member name="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的月份。</summary>
      <returns>1 到 12 之间的一个整数，它表示 <paramref name="time" /> 中的月份。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份中的月数。</summary>
      <returns>指定纪元中指定年份的月数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> 超出了日历支持的范围。- 或 -<paramref name="year" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的年份。</summary>
      <returns>表示 <paramref name="time" /> 中的年份的整数。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定日期是否为闰日。</summary>
      <returns>如果指定的日期是闰日，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="day">1 到 31 之间的一个整数，它表示天。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="day" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元中指定年份的指定月份是否为闰月。</summary>
      <returns>除非被派生类重写，否则此方法始终返回 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定年份是否为闰年。</summary>
      <returns>如果指定的年是闰年，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.JulianCalendar.MaxSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.JulianCalendar" /> 类支持的最大日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.JulianCalendar" /> 类支持的最晚日期和时间，它相当于公历的公元 9999 年 12 月 31 日结束的那一刻。</returns>
    </member>
    <member name="P:System.Globalization.JulianCalendar.MinSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.JulianCalendar" /> 类支持的最早日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.JulianCalendar" /> 类支持的最早日期和时间，它相当于公历的公元 0001 年的 1 月 1 日开始的那一刻。</returns>
    </member>
    <member name="M:System.Globalization.JulianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>返回一个 <see cref="T:System.DateTime" />，它设置为指定纪元中的指定日期和时间。</summary>
      <returns>设置为当前纪元中的指定日期和时间的 <see cref="T:System.DateTime" />。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="day">1 到 31 之间的一个整数，它表示天。</param>
      <param name="hour">0 与 23 之间的一个整数，它表示小时。</param>
      <param name="minute">0 与 59 之间的一个整数，它表示分钟。</param>
      <param name="second">0 与 59 之间的一个整数，它表示秒。</param>
      <param name="millisecond">0 与 999 之间的一个整数，它表示毫秒。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="day" /> 超出了日历支持的范围。- 或 -<paramref name="hour" /> 小于零或大于 23。- 或 -<paramref name="minute" /> 小于零或大于 59。- 或 -<paramref name="second" /> 小于零或大于 59。- 或 -<paramref name="millisecond" /> 小于零或大于 999。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.JulianCalendar.ToFourDigitYear(System.Int32)">
      <summary>使用 <see cref="P:System.Globalization.JulianCalendar.TwoDigitYearMax" /> 属性将指定的年份转换为四位数年份，以确定相应的纪元。</summary>
      <returns>包含 <paramref name="year" /> 的四位数表示形式的整数。</returns>
      <param name="year">一个两位数或四位数的整数，表示要转换的年份。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.JulianCalendar.TwoDigitYearMax">
      <summary>获取或设置可以用两位数年份表示的 100 年范围内的最后一年。</summary>
      <returns>可以用两位数年份表示的 100 年范围内的最后一年。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">为设置操作指定的值小于 99。- 或 -为 Set 操作指定的值大于 MaxSupportedDateTime.Year。</exception>
      <exception cref="T:System.InvalidOperationException">在设置操作中，当前实例是只读的。</exception>
    </member>
    <member name="T:System.Globalization.KoreanCalendar">
      <summary>表示朝鲜历。</summary>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.#ctor">
      <summary>初始化 <see cref="T:System.Globalization.KoreanCalendar" /> 类的新实例。</summary>
      <exception cref="T:System.TypeInitializationException">由于缺少区域性信息，所以无法初始化 <see cref="T:System.Globalization.KoreanCalendar" /> 对象。</exception>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.AddMonths(System.DateTime,System.Int32)">
      <summary>返回与指定 <see cref="T:System.DateTime" /> 相距指定月数的 <see cref="T:System.DateTime" />。</summary>
      <returns>将指定的月数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</returns>
      <param name="time">
        <see cref="T:System.DateTime" />，将向其添加月数。</param>
      <param name="months">要添加的月数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="months" /> 小于 -120000。- 或 -<paramref name="months" /> 大于 120000。</exception>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.AddYears(System.DateTime,System.Int32)">
      <summary>返回与指定 <see cref="T:System.DateTime" /> 相距指定年数的 <see cref="T:System.DateTime" />。</summary>
      <returns>将指定年数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</returns>
      <param name="time">
        <see cref="T:System.DateTime" />，将向其添加年数。</param>
      <param name="years">要添加的年数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="years" /> 或 <paramref name="time" /> 已超出范围。</exception>
    </member>
    <member name="P:System.Globalization.KoreanCalendar.Eras">
      <summary>获取 <see cref="T:System.Globalization.KoreanCalendar" /> 中的纪元的列表。</summary>
      <returns>表示 <see cref="T:System.Globalization.KoreanCalendar" /> 中的纪元的整数数组。</returns>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.GetDayOfMonth(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是该月的几号。</summary>
      <returns>从 1 到 31 的整数，表示指定 <see cref="T:System.DateTime" /> 中的日期是该月的几号。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.GetDayOfWeek(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是星期几。</summary>
      <returns>一个 <see cref="T:System.DayOfWeek" /> 值，它表示指定的 <see cref="T:System.DateTime" /> 中的日期是星期几。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.GetDayOfYear(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</summary>
      <returns>从 1 到 366 的整数，表示指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份的指定月份的天数。</summary>
      <returns>指定纪元中指定年份的指定月份中的天数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.GetDaysInYear(System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份的天数。</summary>
      <returns>指定纪元中指定年份的天数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.GetEra(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的纪元。</summary>
      <returns>表示指定的 <see cref="T:System.DateTime" /> 中纪元的整数。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.GetLeapMonth(System.Int32,System.Int32)">
      <summary>计算指定纪元年份的闰月。</summary>
      <returns>返回值始终为 0，因为 <see cref="T:System.Globalization.KoreanCalendar" /> 类不支持闰月这一概念。</returns>
      <param name="year">年份。</param>
      <param name="era">纪元。</param>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.GetMonth(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的月份。</summary>
      <returns>1 到 12 之间的一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的月份。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.GetMonthsInYear(System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份中的月数。</summary>
      <returns>指定纪元中指定年份的月数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)">
      <summary>返回年中包括指定 <see cref="T:System.DateTime" /> 中的日期的星期。</summary>
      <returns>一个从 1 开始的整数，表示一年中包括 <paramref name="time" /> 参数中的日期的那个星期。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <param name="rule">
        <see cref="T:System.Globalization.CalendarWeekRule" /> 值之一，用于定义一个日历周。</param>
      <param name="firstDayOfWeek">
        <see cref="T:System.DayOfWeek" /> 值之一，表示一个星期的第一天。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 或 <paramref name="firstDayOfWeek" /> 超出了日历支持的范围。- 或 -<paramref name="rule" /> 不是有效的 <see cref="T:System.Globalization.CalendarWeekRule" /> 值。</exception>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.GetYear(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的年份。</summary>
      <returns>一个整数，它表示指定的 <see cref="T:System.DateTime" /> 中的年份。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定日期是否为闰日。</summary>
      <returns>如果指定的日期是闰日，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="day">1 到 31 之间的一个整数，它表示天。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="day" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元中指定年份的指定月份是否为闰月。</summary>
      <returns>除非被派生类重写，否则此方法始终返回 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.IsLeapYear(System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定年份是否为闰年。</summary>
      <returns>如果指定的年是闰年，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.KoreanCalendar.MaxSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.KoreanCalendar" /> 类支持的最大日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.KoreanCalendar" /> 类支持的最晚日期和时间，它相当于公历的公元 9999 年 12 月 31 日结束的那一刻。</returns>
    </member>
    <member name="P:System.Globalization.KoreanCalendar.MinSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.KoreanCalendar" /> 类支持的最早日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.KoreanCalendar" /> 类支持的最早日期和时间，它相当于公历的公元 0001 年的 1 月 1 日开始的那一刻。</returns>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>返回一个 <see cref="T:System.DateTime" />，它设置为指定纪元中的指定日期和时间。</summary>
      <returns>设置为当前纪元中的指定日期和时间的 <see cref="T:System.DateTime" />。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="day">1 到 31 之间的一个整数，它表示天。</param>
      <param name="hour">0 与 23 之间的一个整数，它表示小时。</param>
      <param name="minute">0 与 59 之间的一个整数，它表示分钟。</param>
      <param name="second">0 与 59 之间的一个整数，它表示秒。</param>
      <param name="millisecond">0 与 999 之间的一个整数，它表示毫秒。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="day" /> 超出了日历支持的范围。- 或 -<paramref name="hour" /> 小于零或大于 23。- 或 -<paramref name="minute" /> 小于零或大于 59。- 或 -<paramref name="second" /> 小于零或大于 59。- 或 -<paramref name="millisecond" /> 小于零或大于 999。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.KoreanCalendar.ToFourDigitYear(System.Int32)">
      <summary>使用 <see cref="P:System.Globalization.KoreanCalendar.TwoDigitYearMax" /> 属性将指定的年份转换为四位数年份，以确定相应的纪元。</summary>
      <returns>包含 <paramref name="year" /> 的四位数表示形式的整数。</returns>
      <param name="year">一个两位数或四位数的整数，表示要转换的年份。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" />
      </PermissionSet>
    </member>
    <member name="P:System.Globalization.KoreanCalendar.TwoDigitYearMax">
      <summary>获取或设置可以用两位数年份表示的 100 年范围内的最后一年。</summary>
      <returns>可以用两位数年份表示的 100 年范围内的最后一年。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">为设置操作指定的值小于 99。- 或 -为 Set 操作指定的值大于 MaxSupportedDateTime.Year。</exception>
      <exception cref="T:System.InvalidOperationException">在设置操作中，当前实例是只读的。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Globalization.KoreanLunisolarCalendar">
      <summary>将时间分成多个部分来表示，如分成年、月和日。年按公历计算，而日和月按阴阳历计算。</summary>
    </member>
    <member name="M:System.Globalization.KoreanLunisolarCalendar.#ctor">
      <summary>初始化 <see cref="T:System.Globalization.KoreanLunisolarCalendar" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Globalization.KoreanLunisolarCalendar.Eras">
      <summary>获取与当前 <see cref="T:System.Globalization.KoreanLunisolarCalendar" /> 对象支持的日期和时间范围对应的纪元。</summary>
      <returns>32 位有符号整数数组，用于指定相关的纪元。<see cref="T:System.Globalization.KoreanLunisolarCalendar" /> 对象的返回值始终是包含一个等于 <see cref="F:System.Globalization.KoreanLunisolarCalendar.GregorianEra" /> 值的元素的数组。</returns>
    </member>
    <member name="M:System.Globalization.KoreanLunisolarCalendar.GetEra(System.DateTime)">
      <summary>检索对应于指定 <see cref="T:System.DateTime" /> 的纪元。</summary>
      <returns>一个整数，表示 <paramref name="time" /> 参数指定的纪元。<see cref="T:System.Globalization.KoreanLunisolarCalendar" /> 对象的返回值始终是 <see cref="F:System.Globalization.KoreanLunisolarCalendar.GregorianEra" /> 值。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 表示小于 <see cref="P:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime" /> 或大于 <see cref="P:System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime" /> 的日期和时间。</exception>
    </member>
    <member name="P:System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.KoreanLunisolarCalendar" /> 类支持的最大日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.KoreanLunisolarCalendar" /> 类支持的最晚日期和时间，它相当于公历的公元 2051 年 2 月 10 日结束的那一刻。</returns>
    </member>
    <member name="P:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.KoreanLunisolarCalendar" /> 类支持的最小日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.KoreanLunisolarCalendar" /> 类支持的最早日期和时间，它相当于公历的公元 918 年的 2 月 14 日开始的那一刻。</returns>
    </member>
    <member name="T:System.Globalization.PersianCalendar">
      <summary>表示波斯历。</summary>
    </member>
    <member name="M:System.Globalization.PersianCalendar.#ctor">
      <summary>初始化 <see cref="T:System.Globalization.PersianCalendar" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Globalization.PersianCalendar.AddMonths(System.DateTime,System.Int32)">
      <summary>返回一个基于指定 <see cref="T:System.DateTime" /> 对象偏移指定月数的 <see cref="T:System.DateTime" /> 对象。</summary>
      <returns>一个 <see cref="T:System.DateTime" /> 对象，表示将由 <paramref name="time" /> 参数指定的日期加上由 <paramref name="months" /> 参数指定的月数后所得的日期。</returns>
      <param name="time">
        <see cref="T:System.DateTime" />，将向其添加月数。</param>
      <param name="months">要添加的正月数或负月数。</param>
      <exception cref="T:System.ArgumentException">结果 <see cref="T:System.DateTime" /> 超出了支持的范围。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="months" /> 小于 -120,000 或大于 120,000。</exception>
    </member>
    <member name="M:System.Globalization.PersianCalendar.AddYears(System.DateTime,System.Int32)">
      <summary>返回一个基于指定 <see cref="T:System.DateTime" /> 对象偏移指定年数的 <see cref="T:System.DateTime" /> 对象。</summary>
      <returns>通过将指定的年数添加到指定的 <see cref="T:System.DateTime" /> 对象所得到的 <see cref="T:System.DateTime" /> 对象。</returns>
      <param name="time">
        <see cref="T:System.DateTime" />，将向其添加年数。</param>
      <param name="years">要添加的正年数或负年数。</param>
      <exception cref="T:System.ArgumentException">结果 <see cref="T:System.DateTime" /> 超出了支持的范围。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="years" /> 小于 -10,000 或大于 10,000。</exception>
    </member>
    <member name="P:System.Globalization.PersianCalendar.Eras">
      <summary>获取 <see cref="T:System.Globalization.PersianCalendar" /> 对象中的纪元列表。</summary>
      <returns>表示 <see cref="T:System.Globalization.PersianCalendar" /> 对象中的纪元的整数数组。此数组由值为 <see cref="F:System.Globalization.PersianCalendar.PersianEra" /> 的单个元素组成。</returns>
    </member>
    <member name="M:System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 对象中的日期是该月的几号。</summary>
      <returns>从 1 到 31 之间的一个整数，表示指定 <see cref="T:System.DateTime" /> 对象中的日期是该月的第几天。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 参数表示一个小于 <see cref="P:System.Globalization.PersianCalendar.MinSupportedDateTime" /> 或大于 <see cref="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" /> 的日期。</exception>
    </member>
    <member name="M:System.Globalization.PersianCalendar.GetDayOfWeek(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 对象中的日期是星期几。</summary>
      <returns>一个 <see cref="T:System.DayOfWeek" /> 值，它表示指定的 <see cref="T:System.DateTime" /> 对象中的日期是星期几。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 对象中的日期是该年中的第几天。</summary>
      <returns>从 1 到 366 之间的一个整数，表示指定 <see cref="T:System.DateTime" /> 对象中的日期是该年中的第几天。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 参数表示一个小于 <see cref="P:System.Globalization.PersianCalendar.MinSupportedDateTime" /> 或大于 <see cref="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" /> 的日期。</exception>
    </member>
    <member name="M:System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)">
      <summary>返回指定纪元年份中指定月份的天数。</summary>
      <returns>指定纪元年份中指定月份的天数。</returns>
      <param name="year">1 到 9378 之间的一个整数，用于表示年。</param>
      <param name="month">一个表示月份的整数，如果 <paramref name="year" /> 不是 9378，则值的范围是从 1 到 12；如果 <paramref name="year" /> 是 9378，则值的范围是从 1 到 10。</param>
      <param name="era">整数 0 或 1，用于表示纪元。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" />、<paramref name="month" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.PersianCalendar.GetDaysInYear(System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份的天数。</summary>
      <returns>指定纪元年份中的天数。天数在平年中为 365，在闰年中为 366。</returns>
      <param name="year">1 到 9378 之间的一个整数，用于表示年。</param>
      <param name="era">整数 0 或 1，用于表示纪元。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.PersianCalendar.GetEra(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 对象中的纪元。</summary>
      <returns>始终返回 <see cref="F:System.Globalization.PersianCalendar.PersianEra" />。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 参数表示一个小于 <see cref="P:System.Globalization.PersianCalendar.MinSupportedDateTime" /> 或大于 <see cref="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" /> 的日期。</exception>
    </member>
    <member name="M:System.Globalization.PersianCalendar.GetLeapMonth(System.Int32,System.Int32)">
      <summary>返回指定纪元年份的闰月。</summary>
      <returns>返回值始终为 0。</returns>
      <param name="year">1 到 9378 之间的一个整数，用于表示要转换的年份。</param>
      <param name="era">整数 0 或 1，用于表示纪元。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.PersianCalendar.GetMonth(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 对象中的月份。</summary>
      <returns>1 到 12 之间的一个整数，表示指定 <see cref="T:System.DateTime" /> 对象中的月份。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 参数表示一个小于 <see cref="P:System.Globalization.PersianCalendar.MinSupportedDateTime" /> 或大于 <see cref="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" /> 的日期。</exception>
    </member>
    <member name="M:System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份中的月数。</summary>
      <returns>如果 <paramref name="year" /> 参数为 9378，则返回 10；否则始终返回 12。</returns>
      <param name="year">1 到 9378 之间的一个整数，用于表示年。</param>
      <param name="era">整数 0 或 1，用于表示纪元。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.PersianCalendar.GetYear(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 对象中的年份。</summary>
      <returns>一个介于 1 到 9378 之间的整数，表示指定 <see cref="T:System.DateTime" /> 中的年份。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 参数表示一个小于 <see cref="P:System.Globalization.PersianCalendar.MinSupportedDateTime" /> 或大于 <see cref="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" /> 的日期。</exception>
    </member>
    <member name="M:System.Globalization.PersianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>确定指定的日期是否为闰日。</summary>
      <returns>如果指定的日期是闰日，则为 true；否则为 false。</returns>
      <param name="year">1 到 9378 之间的一个整数，用于表示年。</param>
      <param name="month">一个表示月份的整数，如果 <paramref name="year" /> 不是 9378，则值的范围是从 1 到 12；如果 <paramref name="year" /> 是 9378，则值的范围是从 1 到 10。</param>
      <param name="day">1 到 31 之间的一个整数，用于表示日。</param>
      <param name="era">整数 0 或 1，用于表示纪元。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" />、<paramref name="month" />、<paramref name="day" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.PersianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元年份中的指定月份是否为闰月。</summary>
      <returns>始终返回 false，因为 <see cref="T:System.Globalization.PersianCalendar" /> 类不支持闰月这一概念。</returns>
      <param name="year">1 到 9378 之间的一个整数，用于表示年。</param>
      <param name="month">一个表示月份的整数，如果 <paramref name="year" /> 不是 9378，则值的范围是从 1 到 12；如果 <paramref name="year" /> 是 9378，则值的范围是从 1 到 10。</param>
      <param name="era">整数 0 或 1，用于表示纪元。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" />、<paramref name="month" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.PersianCalendar.IsLeapYear(System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定年份是否为闰年。</summary>
      <returns>如果指定的年是闰年，则为 true；否则为 false。</returns>
      <param name="year">1 到 9378 之间的一个整数，用于表示年。</param>
      <param name="era">整数 0 或 1，用于表示纪元。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.PersianCalendar.MaxSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.PersianCalendar" /> 类支持的最晚日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.PersianCalendar" /> 类支持的最晚日期和时间，它相当于公历的公元 9999 年 12 月 31 日结束的那一刻。</returns>
    </member>
    <member name="P:System.Globalization.PersianCalendar.MinSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.PersianCalendar" /> 类支持的最早日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.PersianCalendar" /> 类支持的最早日期和时间，它相当于公历的公元 622 年 3 月 21 日开始的那一刻。</returns>
    </member>
    <member name="M:System.Globalization.PersianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>返回一个 <see cref="T:System.DateTime" /> 对象，该对象设置为指定日期、时间和纪元。</summary>
      <returns>设置为当前纪元中的指定日期和时间的 <see cref="T:System.DateTime" /> 对象。</returns>
      <param name="year">1 到 9378 之间的一个整数，用于表示年。</param>
      <param name="month">1 到 12 之间的一个整数，用于表示月。</param>
      <param name="day">1 到 31 之间的一个整数，用于表示日。</param>
      <param name="hour">0 到 23 之间的一个整数，用于表示小时。</param>
      <param name="minute">0 到 59 之间的一个整数，用于表示分钟。</param>
      <param name="second">0 到 59 之间的一个整数，用于表示秒。</param>
      <param name="millisecond">0 到 999 之间的一个整数，用于表示毫秒。</param>
      <param name="era">整数 0 或 1，用于表示纪元。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" />、<paramref name="month" />、<paramref name="day" />、<paramref name="hour" />、<paramref name="minute" />、<paramref name="second" />、<paramref name="millisecond" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.PersianCalendar.ToFourDigitYear(System.Int32)">
      <summary>将指定的年份转换为四位数的年份表示形式。</summary>
      <returns>包含 <paramref name="year" /> 的四位数表示形式的整数。</returns>
      <param name="year">1 到 9378 之间的一个整数，用于表示要转换的年份。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 小于 0 或大于 9378。</exception>
    </member>
    <member name="P:System.Globalization.PersianCalendar.TwoDigitYearMax">
      <summary>获取或设置可以用两位数年份表示的 100 年范围内的最后一年。</summary>
      <returns>可以用两位数年份表示的 100 年范围内的最后一年。</returns>
      <exception cref="T:System.InvalidOperationException">此日历为只读。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">设置操作中的值小于 100 或大于 9378。</exception>
    </member>
    <member name="T:System.Globalization.TaiwanCalendar">
      <summary>台湾日历。</summary>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.#ctor">
      <summary>初始化 <see cref="T:System.Globalization.TaiwanCalendar" /> 类的新实例。</summary>
      <exception cref="T:System.TypeInitializationException">由于缺少区域性信息，所以无法初始化 <see cref="T:System.Globalization.TaiwanCalendar" /> 对象。</exception>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.AddMonths(System.DateTime,System.Int32)">
      <summary>返回与指定 <see cref="T:System.DateTime" /> 相距指定月数的 <see cref="T:System.DateTime" />。</summary>
      <returns>将指定的月数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</returns>
      <param name="time">
        <see cref="T:System.DateTime" />，将向其添加月数。</param>
      <param name="months">要添加的月数。</param>
      <exception cref="T:System.ArgumentException">结果 <see cref="T:System.DateTime" /> 超出了支持的范围。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="months" /> 小于 -120000。- 或 -<paramref name="months" /> 大于 120000。</exception>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.AddYears(System.DateTime,System.Int32)">
      <summary>返回与指定 <see cref="T:System.DateTime" /> 相距指定年数的 <see cref="T:System.DateTime" />。</summary>
      <returns>将指定年数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</returns>
      <param name="time">
        <see cref="T:System.DateTime" />，将向其添加年数。</param>
      <param name="years">要添加的年数。</param>
      <exception cref="T:System.ArgumentException">结果 <see cref="T:System.DateTime" /> 超出了支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.TaiwanCalendar.Eras">
      <summary>获取 <see cref="T:System.Globalization.TaiwanCalendar" /> 中的纪元的列表。</summary>
      <returns>一个数组，它由值始终是当前纪元的单个元素组成。</returns>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是该月的几号。</summary>
      <returns>从 1 到 31 的整数，表示指定 <see cref="T:System.DateTime" /> 中的日期是该月的几号。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是星期几。</summary>
      <returns>一个 <see cref="T:System.DayOfWeek" /> 值，它表示指定的 <see cref="T:System.DateTime" /> 中的日期是星期几。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</summary>
      <returns>从 1 到 366 的整数，表示指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份的指定月份的天数。</summary>
      <returns>指定纪元中指定年份的指定月份中的天数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份的天数。</summary>
      <returns>指定纪元中指定年份的天数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.GetEra(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的纪元。</summary>
      <returns>表示指定的 <see cref="T:System.DateTime" /> 中纪元的整数。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.GetLeapMonth(System.Int32,System.Int32)">
      <summary>计算指定纪元年份的闰月。</summary>
      <returns>返回值始终为 0，因为 <see cref="T:System.Globalization.TaiwanCalendar" /> 类不支持闰月这一概念。</returns>
      <param name="year">年份。</param>
      <param name="era">纪元。</param>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的月份。</summary>
      <returns>1 到 12 之间的一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的月份。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份中的月数。</summary>
      <returns>指定纪元中指定年份的月数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)">
      <summary>返回年中包括指定 <see cref="T:System.DateTime" /> 中的日期的星期。</summary>
      <returns>一个正整数，表示一年中包括 <paramref name="time" /> 参数中的日期的那个星期。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <param name="rule">
        <see cref="T:System.Globalization.CalendarWeekRule" /> 值之一，用于定义一个日历周。</param>
      <param name="firstDayOfWeek">
        <see cref="T:System.DayOfWeek" /> 值之一，表示一个星期的第一天。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 或 <paramref name="firstDayOfWeek" /> 超出了日历支持的范围。- 或 -<paramref name="rule" /> 不是有效的 <see cref="T:System.Globalization.CalendarWeekRule" /> 值。</exception>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.GetYear(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的年份。</summary>
      <returns>一个整数，它表示指定的 <see cref="T:System.DateTime" /> 中的年份。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定日期是否为闰日。</summary>
      <returns>如果指定的日期是闰日，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="day">1 到 31 之间的一个整数，它表示天。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="day" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元中指定年份的指定月份是否为闰月。</summary>
      <returns>除非被派生类重写，否则此方法始终返回 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定年份是否为闰年。</summary>
      <returns>如果指定的年是闰年，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.TaiwanCalendar.MaxSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.TaiwanCalendar" /> 类支持的最大日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.TaiwanCalendar" /> 类支持的最晚日期和时间，它相当于公历的公元 9999 年 12 月 31 日结束的那一刻。</returns>
    </member>
    <member name="P:System.Globalization.TaiwanCalendar.MinSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.TaiwanCalendar" /> 类支持的最早日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.TaiwanCalendar" /> 类支持的最早日期和时间，它相当于公历的公元 1912 年的 1 月 1 日开始的那一刻。</returns>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>返回一个 <see cref="T:System.DateTime" />，它设置为指定纪元中的指定日期和时间。</summary>
      <returns>设置为当前纪元中的指定日期和时间的 <see cref="T:System.DateTime" />。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="day">1 到 31 之间的一个整数，它表示天。</param>
      <param name="hour">0 与 23 之间的一个整数，它表示小时。</param>
      <param name="minute">0 与 59 之间的一个整数，它表示分钟。</param>
      <param name="second">0 与 59 之间的一个整数，它表示秒。</param>
      <param name="millisecond">0 与 999 之间的一个整数，它表示毫秒。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="day" /> 超出了日历支持的范围。- 或 -<paramref name="hour" /> 小于零或大于 23。- 或 -<paramref name="minute" /> 小于零或大于 59。- 或 -<paramref name="second" /> 小于零或大于 59。- 或 -<paramref name="millisecond" /> 小于零或大于 999。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.TaiwanCalendar.ToFourDigitYear(System.Int32)">
      <summary>使用 <see cref="P:System.Globalization.TaiwanCalendar.TwoDigitYearMax" /> 属性将指定的年份转换为四位数年份，以确定相应的纪元。</summary>
      <returns>包含 <paramref name="year" /> 的四位数表示形式的整数。</returns>
      <param name="year">一个两位数或四位数的整数，表示要转换的年份。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.TaiwanCalendar.TwoDigitYearMax">
      <summary>获取或设置可以用两位数年份表示的 100 年范围内的最后一年。</summary>
      <returns>可以用两位数年份表示的 100 年范围内的最后一年。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">为设置操作指定的值小于 99。- 或 -为 Set 操作指定的值大于 MaxSupportedDateTime.Year。</exception>
      <exception cref="T:System.InvalidOperationException">在设置操作中，当前实例是只读的。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Globalization.TaiwanLunisolarCalendar">
      <summary>表示台湾日历。在台湾日历中，年按公历计算，而日和月则按阴阳历计算。</summary>
    </member>
    <member name="M:System.Globalization.TaiwanLunisolarCalendar.#ctor">
      <summary>初始化 <see cref="T:System.Globalization.TaiwanLunisolarCalendar" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Globalization.TaiwanLunisolarCalendar.Eras">
      <summary>获取与当前 <see cref="T:System.Globalization.TaiwanLunisolarCalendar" /> 对象相关的纪元。</summary>
      <returns>一个数组，它由值始终是当前纪元的单个元素组成。</returns>
    </member>
    <member name="M:System.Globalization.TaiwanLunisolarCalendar.GetEra(System.DateTime)">
      <summary>检索对应于指定 <see cref="T:System.DateTime" /> 的纪元。</summary>
      <returns>一个整数，表示 <paramref name="time" /> 参数中指定的纪元。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="P:System.Globalization.TaiwanLunisolarCalendar.MaxSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.TaiwanLunisolarCalendar" /> 类支持的最大日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.TaiwanLunisolarCalendar" /> 类支持的最晚日期和时间，它相当于公历的公元 2051 年 2 月 10 日结束的那一刻。</returns>
    </member>
    <member name="P:System.Globalization.TaiwanLunisolarCalendar.MinSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.TaiwanLunisolarCalendar" /> 类支持的最小日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.TaiwanLunisolarCalendar" /> 类支持的最早日期和时间，它相当于公历的公元 1912 年的 2 月 18 日开始的那一刻。</returns>
    </member>
    <member name="T:System.Globalization.ThaiBuddhistCalendar">
      <summary>表示泰国佛历。</summary>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.#ctor">
      <summary>初始化 <see cref="T:System.Globalization.ThaiBuddhistCalendar" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.AddMonths(System.DateTime,System.Int32)">
      <summary>返回与指定 <see cref="T:System.DateTime" /> 相距指定月数的 <see cref="T:System.DateTime" />。</summary>
      <returns>将指定的月数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</returns>
      <param name="time">
        <see cref="T:System.DateTime" />，将向其添加月数。</param>
      <param name="months">要添加的月数。</param>
      <exception cref="T:System.ArgumentException">结果 <see cref="T:System.DateTime" /> 超出了支持的范围。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="months" /> 小于 -120000。- 或 -<paramref name="months" /> 大于 120000。</exception>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.AddYears(System.DateTime,System.Int32)">
      <summary>返回与指定 <see cref="T:System.DateTime" /> 相距指定年数的 <see cref="T:System.DateTime" />。</summary>
      <returns>将指定年数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</returns>
      <param name="time">
        <see cref="T:System.DateTime" />，将向其添加年数。</param>
      <param name="years">要添加的年数。</param>
      <exception cref="T:System.ArgumentException">结果 <see cref="T:System.DateTime" /> 超出了支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.ThaiBuddhistCalendar.Eras">
      <summary>获取 <see cref="T:System.Globalization.ThaiBuddhistCalendar" /> 类中的纪元的列表。</summary>
      <returns>一个数组，它由值始终是当前纪元的单个元素组成。</returns>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是该月的几号。</summary>
      <returns>从 1 到 31 的整数，表示指定 <see cref="T:System.DateTime" /> 中的日期是该月的几号。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是星期几。</summary>
      <returns>一个 <see cref="T:System.DayOfWeek" /> 值，它表示指定的 <see cref="T:System.DateTime" /> 中的日期是星期几。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.GetDayOfYear(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</summary>
      <returns>从 1 到 366 的整数，表示指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份的指定月份的天数。</summary>
      <returns>指定纪元中指定年份的指定月份中的天数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份的天数。</summary>
      <returns>指定纪元中指定年份的天数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.GetEra(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的纪元。</summary>
      <returns>表示指定的 <see cref="T:System.DateTime" /> 中纪元的整数。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.GetLeapMonth(System.Int32,System.Int32)">
      <summary>计算指定纪元年份的闰月。</summary>
      <returns>返回值始终为 0，因为 <see cref="T:System.Globalization.ThaiBuddhistCalendar" /> 类不支持闰月这一概念。</returns>
      <param name="year">年份。</param>
      <param name="era">纪元。</param>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.GetMonth(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的月份。</summary>
      <returns>1 到 12 之间的一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的月份。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)">
      <summary>返回指定纪元中指定年份中的月数。</summary>
      <returns>指定纪元中指定年份的月数。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)">
      <summary>返回年中包括指定 <see cref="T:System.DateTime" /> 中的日期的星期。</summary>
      <returns>一个从 1 开始的正整数，表示一年中包括 <paramref name="time" /> 参数中的日期的那个星期。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
      <param name="rule">
        <see cref="T:System.Globalization.CalendarWeekRule" /> 值之一，用于定义一个日历周。</param>
      <param name="firstDayOfWeek">
        <see cref="T:System.DayOfWeek" /> 值之一，表示一个星期的第一天。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 或 <paramref name="firstDayOfWeek" /> 超出了日历支持的范围。- 或 -<paramref name="rule" /> 不是有效的 <see cref="T:System.Globalization.CalendarWeekRule" /> 值。</exception>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)">
      <summary>返回指定 <see cref="T:System.DateTime" /> 中的年份。</summary>
      <returns>一个整数，它表示指定的 <see cref="T:System.DateTime" /> 中的年份。</returns>
      <param name="time">要读取的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定日期是否为闰日。</summary>
      <returns>如果指定的日期是闰日，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="day">1 到 31 之间的一个整数，它表示天。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="day" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元中指定年份的指定月份是否为闰月。</summary>
      <returns>除非被派生类重写，否则此方法始终返回 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.IsLeapYear(System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定年份是否为闰年。</summary>
      <returns>如果指定的年是闰年，则为 true；否则为 false。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.ThaiBuddhistCalendar.MaxSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.ThaiBuddhistCalendar" /> 类支持的最大日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.ThaiBuddhistCalendar" /> 类支持的最晚日期和时间，它相当于公历的公元 9999 年 12 月 31 日结束的那一刻。</returns>
    </member>
    <member name="P:System.Globalization.ThaiBuddhistCalendar.MinSupportedDateTime">
      <summary>获取 <see cref="T:System.Globalization.ThaiBuddhistCalendar" /> 类支持的最早日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.ThaiBuddhistCalendar" /> 类支持的最早日期和时间，它相当于公历的公元 0001 年的 1 月 1 日开始的那一刻。</returns>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>返回一个 <see cref="T:System.DateTime" />，它设置为指定纪元中的指定日期和时间。</summary>
      <returns>设置为当前纪元中的指定日期和时间的 <see cref="T:System.DateTime" />。</returns>
      <param name="year">表示年份的整数。</param>
      <param name="month">1 到 12 之间的一个整数，它表示月份。</param>
      <param name="day">1 到 31 之间的一个整数，它表示天。</param>
      <param name="hour">0 与 23 之间的一个整数，它表示小时。</param>
      <param name="minute">0 与 59 之间的一个整数，它表示分钟。</param>
      <param name="second">0 与 59 之间的一个整数，它表示秒。</param>
      <param name="millisecond">0 与 999 之间的一个整数，它表示毫秒。</param>
      <param name="era">表示纪元的整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。- 或 -<paramref name="month" /> 超出了日历支持的范围。- 或 -<paramref name="day" /> 超出了日历支持的范围。- 或 -<paramref name="hour" /> 小于零或大于 23。- 或 -<paramref name="minute" /> 小于零或大于 59。- 或 -<paramref name="second" /> 小于零或大于 59。- 或 -<paramref name="millisecond" /> 小于零或大于 999。- 或 -<paramref name="era" /> 超出了日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear(System.Int32)">
      <summary>使用 <see cref="P:System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax" /> 属性将指定的年份转换为四位数年份，以确定相应的纪元。</summary>
      <returns>包含 <paramref name="year" /> 的四位数表示形式的整数。</returns>
      <param name="year">一个两位数或四位数的整数，表示要转换的年份。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了日历支持的范围。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" />
      </PermissionSet>
    </member>
    <member name="P:System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax">
      <summary>获取或设置可以用两位数年份表示的 100 年范围内的最后一年。</summary>
      <returns>可以用两位数年份表示的 100 年范围内的最后一年。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">为设置操作指定的值小于 99。- 或 -为 Set 操作指定的值大于 MaxSupportedDateTime.Year。</exception>
      <exception cref="T:System.InvalidOperationException">在设置操作中，当前实例是只读的。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Globalization.UmAlQuraCalendar">
      <summary>表示沙特阿拉伯回历 (Um Al Qura)。</summary>
    </member>
    <member name="M:System.Globalization.UmAlQuraCalendar.#ctor">
      <summary>初始化 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Globalization.UmAlQuraCalendar.AddMonths(System.DateTime,System.Int32)">
      <summary>计算与指定初始日期相距指定月数的日期。</summary>
      <returns>在将 <paramref name="months" /> 参数指定的月数加到 <paramref name="time" /> 参数指定的日期后所得的日期。</returns>
      <param name="time">要加上月数的日期。<see cref="T:System.Globalization.UmAlQuraCalendar" /> 类仅支持从 04/30/1900 00.00.00（公历日期）到 11/16/2077 23:59:59（公历日期）的日期。</param>
      <param name="months">要添加的正月数或负月数。</param>
      <exception cref="T:System.ArgumentException">得到的日期不在 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 类支持的范围内。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="months" /> 小于 -120,000 或大于 120,000。- 或 -<paramref name="time" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.UmAlQuraCalendar.AddYears(System.DateTime,System.Int32)">
      <summary>计算与指定初始日期相距指定年数的日期。</summary>
      <returns>在将 <paramref name="years" /> 参数指定的年数加到 <paramref name="time" /> 参数指定的日期后所得的日期。</returns>
      <param name="time">要加上年数的日期。<see cref="T:System.Globalization.UmAlQuraCalendar" /> 类仅支持从 04/30/1900 00.00.00（公历日期）到 11/16/2077 23:59:59（公历日期）的日期。</param>
      <param name="years">要添加的正年数或负年数。</param>
      <exception cref="T:System.ArgumentException">得到的日期不在 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 类支持的范围内。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="years" /> 小于 -10,000 或大于 10,000。- 或 -<paramref name="time" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.UmAlQuraCalendar.Eras">
      <summary>获取当前 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 支持的纪元的列表。</summary>
      <returns>一个数组，它由值为 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" /> 的单个元素组成。</returns>
    </member>
    <member name="M:System.Globalization.UmAlQuraCalendar.GetDayOfMonth(System.DateTime)">
      <summary>计算指定日期出现在月中的哪一天。</summary>
      <returns>一个从 1 到 30 的整数，表示由 <paramref name="time" /> 参数指定的月中日期。</returns>
      <param name="time">要读取的数据类型。<see cref="T:System.Globalization.UmAlQuraCalendar" /> 类仅支持从 04/30/1900 00.00.00（公历日期）到 11/16/2077 23:59:59（公历日期）的日期。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.UmAlQuraCalendar.GetDayOfWeek(System.DateTime)">
      <summary>计算指定日期出现在星期几。</summary>
      <returns>一个 <see cref="T:System.DayOfWeek" /> 值，表示 <paramref name="time" /> 参数指定的日期是星期几。</returns>
      <param name="time">要读取的数据类型。<see cref="T:System.Globalization.UmAlQuraCalendar" /> 类仅支持从 04/30/1900 00.00.00（公历日期）到 11/16/2077 23:59:59（公历日期）的日期。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.UmAlQuraCalendar.GetDayOfYear(System.DateTime)">
      <summary>计算指定日期出现在年中的哪一天。</summary>
      <returns>一个从 1 到 355 的整数，表示 <paramref name="time" /> 参数指定的日期是年中的第几天。</returns>
      <param name="time">要读取的数据类型。<see cref="T:System.Globalization.UmAlQuraCalendar" /> 类仅支持从 04/30/1900 00.00.00（公历日期）到 11/16/2077 23:59:59（公历日期）的日期。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.UmAlQuraCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)">
      <summary>计算指定纪元年份的指定月份中的天数。</summary>
      <returns>指定纪元年份中指定月份的天数。返回值是 29（在平年中）或 30（在闰年中）。</returns>
      <param name="year">年份。</param>
      <param name="month">1 到 12 之间的一个整数，用于表示月。</param>
      <param name="era">纪元。指定 UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra] 或 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" />、<paramref name="month" /> 或 <paramref name="era" /> 超出了 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 类支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.UmAlQuraCalendar.GetDaysInYear(System.Int32,System.Int32)">
      <summary>计算指定纪元的指定年份中的天数。</summary>
      <returns>指定纪元年份中的天数。天数在平年中为 354，在闰年中为 355。</returns>
      <param name="year">年份。</param>
      <param name="era">纪元。指定 UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra] 或 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 或 <paramref name="era" /> 超出了 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 类支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.UmAlQuraCalendar.GetEra(System.DateTime)">
      <summary>计算指定日期出现在哪个纪元。</summary>
      <returns>总是返回 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" /> 值。</returns>
      <param name="time">要读取的数据类型。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.UmAlQuraCalendar.GetLeapMonth(System.Int32,System.Int32)">
      <summary>计算指定纪元年份的闰月。</summary>
      <returns>总为 0，因为 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 类不支持闰月。</returns>
      <param name="year">年份。</param>
      <param name="era">纪元。指定 UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra] 或 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 小于 1318 或大于 1450。- 或 -<paramref name="era" /> 不是 UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra] 或 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />。</exception>
    </member>
    <member name="M:System.Globalization.UmAlQuraCalendar.GetMonth(System.DateTime)">
      <summary>计算指定日期出现在哪个月份中。</summary>
      <returns>一个从 1 到 12 的整数，表示 <paramref name="time" /> 参数指定的日期中的月份。</returns>
      <param name="time">要读取的数据类型。<see cref="T:System.Globalization.UmAlQuraCalendar" /> 类仅支持从 04/30/1900 00.00.00（公历日期）到 11/16/2077 23:59:59（公历日期）的日期。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.UmAlQuraCalendar.GetMonthsInYear(System.Int32,System.Int32)">
      <summary>计算指定纪元的指定年份中的月数。</summary>
      <returns>始终为 12。</returns>
      <param name="year">年份。</param>
      <param name="era">纪元。指定 UmAlQuaraCalendar.Eras[UmAlQuraCalendar.CurrentEra] 或 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了此日历支持的范围。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="era" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.UmAlQuraCalendar.GetYear(System.DateTime)">
      <summary>计算由指定 <see cref="T:System.DateTime" /> 表示的日期所在的年份。</summary>
      <returns>一个整数，表示由 <paramref name="time" /> 参数指定的年份。</returns>
      <param name="time">要读取的数据类型。<see cref="T:System.Globalization.UmAlQuraCalendar" /> 类仅支持从 04/30/1900 00.00.00（公历日期）到 11/16/2077 23:59:59（公历日期）的日期。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.UmAlQuraCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>确定指定的日期是否为闰日。</summary>
      <returns>如果指定的日期是闰日，则为 true；否则为 false。返回值始终为 false 因为 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 类不支持闰日。</returns>
      <param name="year">年份。</param>
      <param name="month">1 到 12 之间的一个整数，用于表示月。</param>
      <param name="day">1 到 30 之间的一个整数，用于表示日。</param>
      <param name="era">纪元。指定 UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra] 或 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" />、<paramref name="month" />、<paramref name="day" /> 或 <paramref name="era" /> 超出了 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 类支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.UmAlQuraCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)">
      <summary>确定指定纪元年份中的指定月份是否为闰月。</summary>
      <returns>总为 false，因为 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 类不支持闰月。</returns>
      <param name="year">年份。</param>
      <param name="month">1 到 12 之间的一个整数，用于表示月。</param>
      <param name="era">纪元。指定 UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra] 或 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" />、<paramref name="month" /> 或 <paramref name="era" /> 超出了 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 类支持的范围。</exception>
    </member>
    <member name="M:System.Globalization.UmAlQuraCalendar.IsLeapYear(System.Int32,System.Int32)">
      <summary>确定指定纪元中的指定年份是否为闰年。</summary>
      <returns>如果指定的年是闰年，则为 true；否则为 false。</returns>
      <param name="year">年份。</param>
      <param name="era">纪元。指定 UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra] 或 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 或 <paramref name="era" /> 超出了 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 类支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime">
      <summary>获取此日历支持的最晚日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.UmAlQuraCalendar" /> 类支持的最晚日期和时间，此日期时间为公历公元 2077 年 11 月 16 日的结束时刻。</returns>
    </member>
    <member name="P:System.Globalization.UmAlQuraCalendar.MinSupportedDateTime">
      <summary>获取此日历支持的最早日期和时间。</summary>
      <returns>
        <see cref="T:System.Globalization.UmAlQuraCalendar" /> 类支持的最早日期和时间，它相当于公历的公元 1900 年 4 月 30 日开始的那一刻。</returns>
    </member>
    <member name="M:System.Globalization.UmAlQuraCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>返回设置为指定的日期、时间和纪元的 <see cref="T:System.DateTime" />。</summary>
      <returns>设置为当前纪元中的指定日期和时间的 <see cref="T:System.DateTime" />。</returns>
      <param name="year">年份。</param>
      <param name="month">1 到 12 之间的一个整数，用于表示月。</param>
      <param name="day">1 到 29 之间的一个整数，用于表示日。</param>
      <param name="hour">0 到 23 之间的一个整数，用于表示小时。</param>
      <param name="minute">0 到 59 之间的一个整数，用于表示分钟。</param>
      <param name="second">0 到 59 之间的一个整数，用于表示秒。</param>
      <param name="millisecond">0 到 999 之间的一个整数，用于表示毫秒。</param>
      <param name="era">纪元。指定 UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra] 或 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" />、<paramref name="month" />、<paramref name="day" /> 或 <paramref name="era" /> 超出了 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 类支持的范围。- 或 -<paramref name="hour" /> 小于零或大于 23。- 或 -<paramref name="minute" /> 小于零或大于 59。- 或 -<paramref name="second" /> 小于零或大于 59。- 或 -<paramref name="millisecond" /> 小于零或大于 999。</exception>
    </member>
    <member name="M:System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)">
      <summary>使用 <see cref="P:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax" /> 属性将指定的年份转换为四位数年份，以确定相应的纪元。</summary>
      <returns>如果 <paramref name="year" /> 参数是两位数年份，则返回值是对应的四位数年份。如果 <paramref name="year" /> 参数是四位数年份，则返回值是未更改的 <paramref name="year" /> 参数。</returns>
      <param name="year">一个从 0 到 99 的两位数年份，或一个从 1318 到 1450 的四位数 Um Al Qura 日历年份。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> 超出了此日历支持的范围。</exception>
    </member>
    <member name="P:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax">
      <summary>获取或设置可以用两位数年份表示的 100 年范围内的最后一年。</summary>
      <returns>可以用两位数年份表示的 100 年范围内的最后一年。</returns>
      <exception cref="T:System.InvalidOperationException">此日历为只读。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">在设置操作中，Um Al Qura 年份值小于 1318 而不是 99，或者大于 1450。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
  </members>
</doc>