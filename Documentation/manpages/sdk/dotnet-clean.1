.\" Automatically generated by Pandoc 2.2.1
.\"
.TH "dotnet clean command \- .NET Core CLI" "1" "" "" ".NET Core"
.hy
.SH dotnet\-clean
.PP
.SH NAME
.PP
\f[C]dotnet\ clean\f[] \- Cleans the output of a project.
.SH SYNOPSIS
.SS .NET Core 2.x
.IP
.nf
\f[C]
dotnet\ clean\ [<PROJECT>]\ [\-c|\-\-configuration]\ [\-f|\-\-framework]\ [\-o|\-\-output]\ [\-r|\-\-runtime]\ [\-v|\-\-verbosity]
dotnet\ clean\ [\-h|\-\-help]
\f[]
.fi
.SS .NET Core 1.x
.IP
.nf
\f[C]
dotnet\ clean\ [<PROJECT>]\ [\-c|\-\-configuration]\ [\-f|\-\-framework]\ [\-o|\-\-output]\ [\-v|\-\-verbosity]
dotnet\ clean\ [\-h|\-\-help]
\f[]
.fi
.PP
   *   *   *   *   *
.SH DESCRIPTION
.PP
The \f[C]dotnet\ clean\f[] command cleans the output of the previous build.
It's implemented as an MSBuild target, so the project is evaluated when the command is run.
Only the outputs created during the build are cleaned.
Both intermediate (\f[I]obj\f[]) and final output (\f[I]bin\f[]) folders are cleaned.
.SS Arguments
.PP
\f[C]PROJECT\f[]
.PP
The MSBuild project to clean.
If a project file is not specified, MSBuild searches the current working directory for a file that has a file extension that ends in \f[I]proj\f[] and uses that file.
.SH OPTIONS
.SS .NET Core 2.x
.PP
\f[C]\-c|\-\-configuration\ {Debug|Release}\f[]
.PP
Defines the build configuration.
The default value is \f[C]Debug\f[].
This option is only required when cleaning if you specified it during build time.
.PP
\f[C]\-f|\-\-framework\ <FRAMEWORK>\f[]
.PP
The framework that was specified at build time.
The framework must be defined in the project file.
If you specified the framework at build time, you must specify the framework when cleaning.
.PP
\f[C]\-h|\-\-help\f[]
.PP
Prints out a short help for the command.
.PP
\f[C]\-o|\-\-output\ <OUTPUT_DIRECTORY>\f[]
.PP
Directory in which the build outputs are placed.
Specify the \f[C]\-f|\-\-framework\ <FRAMEWORK>\f[] switch with the output directory switch if you specified the framework when the project was built.
.PP
\f[C]\-r|\-\-runtime\ <RUNTIME_IDENTIFIER>\f[]
.PP
Cleans the output folder of the specified runtime.
This is used when a self\-contained deployment was created.
.PP
\f[C]\-v|\-\-verbosity\ <LEVEL>\f[]
.PP
Sets the verbosity level of the command.
Allowed levels are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic].
.SS .NET Core 1.x
.PP
\f[C]\-c|\-\-configuration\ {Debug|Release}\f[]
.PP
Defines the build configuration.
The default value is \f[C]Debug\f[].
This option is only required when cleaning if you specified it during build time.
.PP
\f[C]\-f|\-\-framework\ <FRAMEWORK>\f[]
.PP
The framework that was specified at build time.
The framework must be defined in the project file.
If you specified the framework at build time, you must specify the framework when cleaning.
.PP
\f[C]\-h|\-\-help\f[]
.PP
Prints out a short help for the command.
.PP
\f[C]\-o|\-\-output\ <OUTPUT_DIRECTORY>\f[]
.PP
Directory in which the build outputs are placed.
Specify the \f[C]\-f|\-\-framework\ <FRAMEWORK>\f[] switch with the output directory switch if you specified the framework when the project was built.
.PP
\f[C]\-v|\-\-verbosity\ <LEVEL>\f[]
.PP
Sets the verbosity level of the command.
Allowed levels are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic].
.PP
   *   *   *   *   *
.SH EXAMPLES
.PP
Clean a default build of the project:
.PP
\f[C]dotnet\ clean\f[]
.PP
Clean a project built using the Release configuration:
.PP
\f[C]dotnet\ clean\ \-\-configuration\ Release\f[]
.SH AUTHORS
mairaw.
