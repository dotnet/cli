.\" Automatically generated by Pandoc 1.15.1
.\"
.hy
.TH "DOTNET\-PUBLISH" "1" "June 2016" "" ""
.SS NAME
.PP
\f[C]dotnet\-publish\f[] \- Packs the application and all of its
dependencies into a folder getting it ready for publishing
.SS SYNOPSIS
.PP
\f[C]dotnet\ publish\ [\-\-framework]\ \ \ \ \ \ \ [\-\-runtime]\ [\-\-build\-base\-path]\ [\-\-output]\ \ \ \ \ \ \ [\-\-version\-suffix]\ [\-\-configuration]\ \ \ \ \ \ \ [<project>]\f[]
.SS DESCRIPTION
.PP
\f[C]dotnet\ publish\f[] compiles the application, reads through its
dependencies specified in the \f[C]project.json\f[] file and publishes
the resulting set of files to a directory.
.PP
Depending on the type of portable app, the resulting directory will
contain the following:
.IP "1." 3
\f[B]Portable application\f[] \- application\[aq]s intermediate language
(IL) code and all of application\[aq]s managed dependencies.
.RS 4
.IP \[bu] 2
\f[B]Portable application with native dependencies\f[] \- same as above
with a sub\-directory for the supported platform of each native
dependency.
.RE
.IP "2." 3
\f[B]Self\-contained application\f[] \- same as above plus the entire
runtime for the targeted platform.
.PP
The above types are covered in more details in the types of portable
applications (../../app-types.md) topic.
.SS OPTIONS
.PP
\f[C][project]\f[]
.PP
\f[C]dotnet\ publish\f[] needs access to the \f[C]project.json\f[] file
to work.
If it is not specified on invocation via [project],
\f[C]project.json\f[] in the current directory will be the default.
.PD 0
.P
.PD
If no \f[C]project.json\f[] can be found, \f[C]dotnet\ publish\f[] will
throw an error.
.PP
\f[C]\-f\f[], \f[C]\-\-framework\f[] [FID]
.PP
Publishes the application for a given framework identifier (FID).
If not specified, FID is read from \f[C]project.json\f[].
In no valid framework is found, the command will throw an error.
If multiple valid frameworks are found, the command will publish for all
valid frameworks.
.PP
\f[C]\-r\f[], \f[C]\-\-runtime\f[] [RID]
.PP
Publishes the application for a given runtime.
.PP
\f[C]\-b\f[], \f[C]\-\-build\-base\-path\f[] [DIR]
.PP
Directory in which to place temporary outputs.
.PP
\f[C]\-o\f[], \f[C]\-\-output\f[]
.PP
Specify the path where to place the directory.
If not specified, it will default to
\f[I]\&./bin/[configuration]/[framework]/\f[] for portable applications
or \f[I]\&./bin/[configuration]/[framework]/[runtime]\f[] for
self\-contained applications.
.PP
\-\-version\-suffix [VERSION_SUFFIX]
.PP
Defines what \f[C]*\f[] should be replaced with in the version field in
the project.json file.
.PP
\f[C]\-c\f[], \f[C]\-\-configuration\ [Debug|Release]\f[]
.PP
Configuration to use when publishing.
The default value is Debug.
.SS EXAMPLES
.PP
\f[C]dotnet\ publish\f[]
.PP
Publishes an application using the framework found in
\f[C]project.json\f[].
If \f[C]project.json\f[] contains \f[C]runtimes\f[] node, publish for
the RID of the current platform.
.PP
\f[C]dotnet\ publish\ ~/projects/app1/project.json\f[]
.PP
Publishes the application using the specified \f[C]project.json\f[].
.PP
\f[C]dotnet\ publish\ \-\-framework\ netcoreapp1.0\f[]
.PP
Publishes the current application using the \f[C]netcoreapp1.0\f[]
framework.
.PP
\f[C]dotnet\ publish\ \-\-framework\ netcoreapp1.0\ \-\-runtime\ osx.10.11\-x64\f[]
.PP
Publishes the current application using the \f[C]netcoreapp1.0\f[]
framework and runtime for \f[C]OS\ X\ 10.10\f[].
This RID has to exist in the \f[C]project.json\f[] \f[C]runtimes\f[]
node.
.SH AUTHORS
Microsoft Corporation dotnetclifeedback\@microsoft.com.
