.\" Automatically generated by Pandoc 1.15.1
.\"
.hy
.TH "DOTNET\-RUN" "1" "June 2016" "" ""
.SS NAME
.PP
dotnet\-run \-\- Runs source code \[aq]in\-place\[aq] without any
explicit compile or launch commands.
.SS SYNOPSIS
.PP
\f[C]dotnet\ run\ [\-\-framework]\ [\-\-configuration]\ \ \ \ \ [\-\-project]\ [\-\-help]\ [\-\-]\f[]
.SS DESCRIPTION
.PP
The \f[C]dotnet\ run\f[] command provides a convenient option to run
your application from the source code with one command.
It compiles source code, generates an output program and then runs that
program.
This command is useful for fast iterative development and can also be
used to run a source\-distributed program (for example, a website).
.PP
This command relies on \f[C]dotnet\ build\f[] (dotnet-build.md) to build
source inputs to a .NET assembly, before launching the program.
The requirements for this command and the handling of source inputs are
all inherited from the build command.
The documentation for the build command provides more information on
those requirements.
.PP
Output files are written to the child \f[C]bin\f[] folder, which will be
created if it doesn\[aq]t exist.
Files will be overwritten as needed.
Temporary files are written to the child \f[C]obj\f[] folder.
.PP
In case of a project with multiple specified frameworks,
\f[C]dotnet\ run\f[] will first select the .NET Core frameworks.
If those do not exist, it will error out.
To specify other frameworks, use the \f[C]\-\-framework\f[] argument.
.PP
The \f[C]dotnet\ run\f[] command must be used in the context of
projects, not built assemblies.
If you\[aq]re trying to execute a DLL instead, you should use
\f[C]dotnet\f[] (dotnet.md) without any command like in the following
example:
.PP
\f[C]dotnet\ myapp.dll\f[]
.PP
For more information about the \f[C]dotnet\f[] driver, see the \&.NET
Core Command Line Tools (CLI) (overview.md) topic.
.SS OPTIONS
.PP
\f[C]\-\-\f[]
.PP
Delimits arguments to \f[C]dotnet\ run\f[] from arguments for the
application being run.
All arguments after this one will be passed to the application being
run.
.PP
\f[C]\-f\f[], \f[C]\-\-framework\f[] [FID]
.PP
Runs the application for a given framework identifier (FID).
.PP
\f[C]\-c\f[], \f[C]\-\-configuration\ [Debug|Release]\f[]
.PP
Configuration to use when publishing.
The default value is "Debug".
.PP
\f[C]\-p\f[], \f[C]\-\-project\ [PATH]\f[]
.PP
Specifies which project to run.
It can be a path to a project.json file or to a directory containing a
project.json file.
It defaults to current directory if not specified.
.SS EXAMPLES
.PP
\f[C]dotnet\ run\f[]
.PP
Runs the project in the current directory.
.PP
\f[C]dotnet\ run\ \-\-project\ /projects/proj1/project.json\f[]
.PP
Runs the project specified.
.PP
\f[C]dotnet\ run\ \-\-configuration\ Release\ \-\-\ \-\-help\f[]
.PP
Runs the project in the current directory.
The \f[C]\-\-help\f[] argument above is passed to the application being
run, since the \f[C]\-\-\f[] argument was used.
.SH AUTHORS
Microsoft Corporation dotnetclifeedback\@microsoft.com.
